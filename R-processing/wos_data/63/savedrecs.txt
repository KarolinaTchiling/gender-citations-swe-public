FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Chen, ZY
   Kwon, YW
   Song, M
AF Chen, Zhiyuan
   Kwon, Young-Woo
   Song, Myoungkyu
TI Clone refactoring inspection by summarizing clone refactorings and
   detecting inconsistent changes during software evolution
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE code clone; refactoring; software maintenance and evolution
ID CODE CLONES; OPPORTUNITIES; MANAGEMENT; SYSTEM
AB It has been broadly assumed that removing code clones by refactorings would solve the problems of code duplication. Despite recent empirical studies on the benefit of refactorings, contradicting evidence shows that it is often difficult or impossible to remove clones by using standard refactoring techniques. Developers cannot easily determine which clones can be refactored or how they should be maintained scattered throughout a large code base in evolving systems. We propose pattern-based clone refactoring inspection (PRI), a technique for managing clone refactorings. PRI summarizes refactorings of clones and detects clones that are not consistently refactored. To help developers refactor these anomalies, PRI also visualizes clone evolution and refactorings and fixes refactoring anomalies to prevent the clone group from being left in an inconsistent state. We evaluated PRI on 6 open-source projects and showed that it identifies clone refactorings with 94.1% accuracy and detects inconsistent refactorings with 98.4% accuracy, tracking clone change histories. In a study with 10 student developers, the participants reported that flexible PRI's summarization and detection features can be valuable for novice developers to learn about refactorings to clones. These results show that PRI should improve developer productivity in inspecting clone refactorings distributed across multiple files in evolving systems.
C1 [Chen, Zhiyuan; Song, Myoungkyu] Univ Nebraska, Omaha, NE 68182 USA.
   [Kwon, Young-Woo] Kyungpook Natl Univ, Daegu, South Korea.
C3 University of Nebraska System; Kyungpook National University
RP Song, M (corresponding author), Univ Nebraska, Comp Sci Dept, Omaha, NE 68182 USA.
EM myoungkyu@unomaha.edu
RI Kwon, Young-Woo/HGE-6607-2022
OI Kwon, Young-Woo/0000-0003-0625-8232
CR Alves ELG, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P751, DOI 10.1145/2635868.2661674
   [Anonymous], 2012, SIGSOFT
   [Anonymous], P 4 INT WORKSH SOFTW
   [Anonymous], 2008, INT WORK C MIN SOFTW
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   [Anonymous], 2013, P 2013 INT WORKSH PR
   Aversano L, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P81
   Barbour L., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P273, DOI 10.1109/ICSM.2011.6080794
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Bavota G, 2012, PROC INT CONF SOFTW, P1419, DOI 10.1109/ICSE.2012.6227233
   Bettenburg N, 2009, WORK CONF REVERSE EN, P85, DOI 10.1109/WCRE.2009.51
   Bian YX, 2013, J SYST SOFTWARE, V86, P2077, DOI 10.1016/j.jss.2013.03.061
   Chesley OC, 2005, PROC IEEE INT CONF S, P401
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Ge X, 2017, S VIS LANG HUM CEN C, P71, DOI 10.1109/VLHCC.2017.8103453
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Ge Xi, 2014, P 7 INT WORKSHOP COO, P99, DOI 10.1145/2593702
   Göde N, 2013, J SOFTW-EVOL PROC, V25, P165, DOI 10.1002/smr.520
   Göde N, 2011, EUR CON SFTWR MTNCE, P65, DOI 10.1109/CSMR.2011.11
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Hotta K, 2012, EUR CON SFTWR MTNCE, P53, DOI 10.1109/CSMR.2012.16
   Hou DQ, 2009, INT C PROGRAM COMPRE, P238, DOI 10.1109/ICPC.2009.5090049
   Hou Daqing., 2009, Conference of the Center for Advanced Studies on Collaborative Research (CASCON), P188, DOI DOI 10.1145/1723028.1723051
   Jablonski Patricia., 2007, P WORKSHOP ECLIPSE T, P16
   Jacob  Ferosh, 2010, P 4 INT WORKSH SOFTW, P9, DOI DOI 10.1145/1808901.1808903
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Kadar Istvan, 2016, 12 INT C PRED MOD DA, DOI [10.1145/2972958.2972962, DOI 10.1145/2972958.2972962]
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Krinke J., 2011, P 5 INT WORKSHOP SOF, P28
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   Lin Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P164, DOI 10.1145/2568225.2568298
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Meng N, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P392, DOI 10.1109/ICSE.2015.58
   Miller RC, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 2001 USENIX ANNUAL TECHNICAL CONFERENCE, P161
   Mondal M., 2012, P ACM S APPL COMPUTI, P1227, DOI DOI 10.1145/2245276.2231969
   Mondal M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P114, DOI 10.1109/CSMR-WCRE.2014.6747161
   Mongiovi M, 2014, PROC IEEE INT CONF S, P371, DOI 10.1109/ICSME.2014.59
   Mongiovi M, 2014, SCI COMPUT PROGRAM, V93, P39, DOI 10.1016/j.scico.2013.11.001
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Murphy-Hill E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P421, DOI 10.1145/1368088.1368146
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Negara S, 2012, LECT NOTES COMPUT SC, V7313, P79, DOI 10.1007/978-3-642-31057-7_5
   Nguyen TT, 2009, IEEE INT CONF AUTOM, P123, DOI 10.1109/ASE.2009.90
   Opdyke WF., 1990, P SOOPPA 90 S OBJECT
   Phan Nam FL, 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE'10, (New York, NY, USA), P447
   Rachatasumrit N, 2012, ICSM 12 28 IEEE INT, P10
   Ray B, 2013, IEEE INT CONF AUTOM, P367, DOI 10.1109/ASE.2013.6693095
   Roy CK, 2008, WORK CONF REVERSE EN, P81, DOI 10.1109/WCRE.2008.54
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Saha RK, 2013, IEEE WORK CONF MIN S, P139, DOI 10.1109/MSR.2013.6624021
   Sasaki Y., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P102, DOI 10.1109/MSR.2010.5463293
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Soares G., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P173, DOI 10.1109/ICSM.2011.6080784
   Soares G, 2013, J SYST SOFTWARE, V86, P1006, DOI 10.1016/j.jss.2012.10.040
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Tairas R, 2012, INFORM SOFTWARE TECH, V54, P1297, DOI 10.1016/j.infsof.2012.06.011
   Toomim M, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P173, DOI 10.1109/VLHCC.2004.35
   Tsantalis N, 2017, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2017.14
   Tsantalis N, 2015, IEEE T SOFTWARE ENG, V41, P1055, DOI 10.1109/TSE.2015.2448531
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tufano M, 2017, J SOFTW EVOL PROCESS, V29
   Urma RG., 2014, JAVA 8 ACTION LAMBDA
   Vakilian M., 2011, Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools, P31
   Vakilian M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1106, DOI 10.1145/2568225.2568282
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   Wang W, 2014, ELECT COMMUN EASST, P63
   Weissgerber Peter., 2006, Proceedings of the 2006 International Workshop on Mining Software Repositories, MSR '06, P112
   Zhang TY, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P111, DOI 10.1109/ICSE.2015.33
NR 88
TC 2
Z9 3
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2018
VL 30
IS 10
AR e1951
DI 10.1002/smr.1951
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GX3TU
UT WOS:000447650700001
DA 2024-07-18
ER

PT J
AU Turetken, O
   Stojanov, I
   Trienekens, JJM
AF Turetken, Oktay
   Stojanov, Igor
   Trienekens, Jos J. M.
TI Assessing the adoption level of scaled agile development: a maturity
   model for Scaled Agile Framework
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile software development; agile development in large-scale; Scaled
   Agile Framework; maturity model; Delphi study
ID SOFTWARE-DEVELOPMENT; DESIGN SCIENCE; MANAGEMENT; DELPHI
AB Although the agile software development approaches have gained wide acceptance in practice, the concerns regarding the scalability and integration of agile practices in traditional large-scale system development projects are prevailing. Scaled Agile Framework (SAFe) has emerged as a solution to address some of these concerns. Despite few encouraging results, case studies indicate several challenges of SAFe adoption. Currently, there is a lack of a well-structured gradual approach for establishing SAFe. Before and during SAFe adoption, organizations can benefit greatly from a uniform model for assessing the current progress, and establishing a roadmap for the initiative. To address this need, we developed a maturity model that provides guidance for software developing organizations in defining a roadmap for adopting SAFe. The model can also be used to assess the level of SAFe adoption. We took an existing agile maturity model as a basis for agile practices and extended it with practices that are key to SAFe. The model was developed and refined with industry experts using the Delphi technique. A case study was conducted in a large organization where we evaluated the model by applying it to assess the level of SAFe adoption. (c) 2016 The Authors. Journal of Software: Evolution and Process Published by John Wiley & Sons Ltd.
C1 [Turetken, Oktay; Trienekens, Jos J. M.] Eindhoven Univ Technol, Dept Ind Engn & Innovat Sci, Eindhoven, Netherlands.
   [Stojanov, Igor] Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
C3 Eindhoven University of Technology; Eindhoven University of Technology
RP Turetken, O (corresponding author), Eindhoven Univ Technol, Dept Ind Engn & Innovat Sci, Eindhoven, Netherlands.
EM o.turetken@tue.nl
RI Turetken, Oktay/AAA-3441-2020; Turetken, Oktay/H-1667-2015
OI Turetken, Oktay/0000-0003-3798-0439
CR [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], 2006, the Proceedings of the First International Conference on Design Science Research in Information Systems and Technology
   [Anonymous], THESIS
   [Anonymous], 2010, Practices for Scaling Lean & Agile Development: Large, Multisite, and Offshore Product Development with Large-Scale Scrum
   [Anonymous], 2011, RALLY SOFTWARE DEV C
   [Anonymous], 2003, 1550422003 ISOIEC
   Becker J, 2009, BUS INFORM SYST ENG+, V1, P213, DOI 10.1007/s12599-009-0044-5
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Dingsoyr Torgeir, 2013, Software Engineering Notes, V38, P33, DOI 10.1145/2507288.2507322
   Dingsoyr T, 2014, LECT NOTES BUS INF P, V199, P1
   Dingsoyr T, 2014, LECT NOTES COMPUT SC, V8892, P273, DOI 10.1007/978-3-319-13835-0_20
   Eckstein J., 2004, Agile Software Development in Large . Diving into the Deep
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Elssamadisy A., 2015, HAS SAFE CRACKED LAR
   Fowler M., 2001, The Agile Manifesto
   Freudenberg S, 2010, IEEE SOFTWARE, V27, P8, DOI 10.1109/MS.2010.129
   Gregor S, 2013, MIS QUART, V37, P337, DOI 10.25300/MISQ/2013/37.2.01
   Heidenberg J, 2013, LECT NOTES BUS INF P, V149, P165
   Helgesson YYL, 2012, J SOFTW-EVOL PROC, V24, P436, DOI 10.1002/smr.560
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Highsmith J., 2006, Agile: From Rogue Teams to Enterprise Acceptance
   Hsu C., 2007, PRACT ASSESS RES EVA, V12, P1, DOI DOI 10.7275/PDZ9-TH90
   Jeffries R., 2015, ISSUES WITH SAFE
   Kruchten P, 2013, J SOFTW-EVOL PROC, V25, P351, DOI 10.1002/smr.572
   Laitinen M, 2000, COMMUN ACM, V43, P105, DOI 10.1145/348941.349012
   Larman C., 2008, Scaling Lean and Agile Development: Thinking and Organizational Tools for Large-Scale Scrum
   Leffingwell D., 2011, Agile software requirements: Lean requirements practices for teams, programs, and the enterprise
   Lindvall M, 2004, COMPUTER, V37, P26, DOI 10.1109/MC.2004.231
   Mahanti A., 2006, Journal of Computing and Information Technology - CIT, V14, P197, DOI 10.2498/cit.2006.03.03
   McLeod L, 2011, EMPIR SOFTW ENG, V16, P430, DOI 10.1007/s10664-010-9153-5
   Mishra D, 2011, J SOFTW MAINT EVOL-R, V23, P549, DOI 10.1002/smr.528
   Mitroff I.I., 2002, DELPHI METHOD, P17
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Okoli C, 2004, INFORM MANAGE-AMSTER, V42, P15, DOI 10.1016/j.im.2003.11.002
   Osborne J, 2003, J RES SCI TEACH, V40, P692, DOI 10.1002/tea.10105
   Ozcan Top O, 2013, SPICE 2013 CCIS 349, V349, P130
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Petersen K, 2010, LECT NOTES COMPUT SC, V6195, P345, DOI 10.1007/978-3-642-14347-2_30
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Pikkarainen M, 2005, LECT NOTES COMPUT SC, V3792, P16
   Power K., 2011, Proceedings of the 2011 Agile Conference, P201, DOI 10.1109/AGILE.2011.7
   Qumer A, 2008, J SYST SOFTWARE, V81, P1899, DOI 10.1016/j.jss.2007.12.806
   Rautiainen K., 2011, SYSTEM SCI HICSS 201, P1, DOI DOI 10.1109/HICSS.2011.390
   Reifer DJ, 2003, IEEE SOFTWARE, V20, P12, DOI 10.1109/MS.2003.1207448
   Röglinger M, 2012, BUS PROCESS MANAG J, V18, P328, DOI 10.1108/14637151211225225
   Rohunen A, 2010, LECT NOTES COMPUT SC, V6156, P77, DOI 10.1007/978-3-642-13792-1_8
   Scaled Agile Inc, 2012, APPL SCAL AG FRAM OU
   Schweigert T., 2013, CCIS, P214, DOI DOI 10.1007/978-3-642-39179-8
   SEI, 2010, CMMI DEV CMMI DEV VE
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   WOUDENBERG F, 1991, TECHNOL FORECAST SOC, V40, P131, DOI 10.1016/0040-1625(91)90002-W
NR 52
TC 27
Z9 35
U1 5
U2 78
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2017
VL 29
IS 6
SI SI
AR e1796
DI 10.1002/smr.1796
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA EZ2CM
UT WOS:000404517400001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Pahl, C
   Jamshidi, P
   Weyns, D
AF Pahl, Claus
   Jamshidi, Pooyan
   Weyns, Danny
TI Cloud architecture continuity: Change models and change rules for
   sustainable cloud software architectures
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE adaptation; change; change models; cloud systems; evolution; software
   architecture
ID MIGRATION
AB Cloud systems provide elastic execution environments of resources that link application and infrastructure/platform components, which are both exposed to uncertainties and change. Change appears in 2 forms: the evolution of architectural components under changing requirements and the adaptation of the infrastructure running applications. Cloud architecture continuity refers to the ability of a cloud system to change its architecture and maintain the validity of the goals that determine the architecture. Goal validity implies the satisfaction of goals in adapting or evolving systems. Architecture continuity aids technical sustainability, that is, the longevity of information, systems, and infrastructure and their adequate evolution with changing conditions. In a cloud setting that requires both steady alignment with technological evolution and availability, architecture continuity directly impacts economic sustainability. We investigate change models and change rules for managing change to support cloud architecture continuity. These models and rules define transformations of architectures to maintain system goals: Evolution is about unanticipated change of structural aspects of architectures, and adaptation is about anticipated change of architecture configurations. Both are driven by quality and cost, and both represent multidimensional decision problems under uncertainty. We have applied the models and rules for adaptation and evolution in research and industry consultancy projects.
C1 [Pahl, Claus] Free Univ Bozen Bolzano, Bolzano, Italy.
   [Jamshidi, Pooyan] Imperial Coll London, London, England.
   [Weyns, Danny] Katholieke Univ Leuven, Leuven, Belgium.
   [Weyns, Danny] Linnaeus Univ, Vaxjo, Sweden.
C3 Free University of Bozen-Bolzano; Imperial College London; KU Leuven;
   Linnaeus University
RP Pahl, C (corresponding author), Free Univ Bozen Bolzano, Bolzano, Italy.
EM claus.pahl@unibz.it
RI ; Weyns, Danny/J-1267-2018; Jamshidi, Pooyan/K-2848-2014
OI Pahl, Claus/0000-0002-9049-212X; Weyns, Danny/0000-0002-1162-0817;
   Jamshidi, Pooyan/0000-0002-9342-0703
CR Andrikopoulos V, 2012, COMPUTER, V95
   [Anonymous], 2011, NIST DEFINITION CLOU
   [Anonymous], 2010, P 18 ACM SIGSOFT INT
   Antonopoulos N, 2010, COMPUT COMMUN NETW S, P1, DOI 10.1007/978-1-84996-241-4
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Baresi L, 2013, COMPUT SCI-RES DEV, V28, P267, DOI 10.1007/s00450-012-0234-0
   Barnes JM, 2014, SOFTW SYST MODEL, V13, P649, DOI 10.1007/s10270-012-0301-9
   Becker C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P467, DOI 10.1109/ICSE.2015.179
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Bersani MM, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P146, DOI 10.1109/WICSA.2016.26
   Brunnert A, SPECRG201501
   Cámara J, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P155, DOI 10.1145/2593929.2593933
   Cedillo P, 2015, 2015 IEEE 12TH INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2015), P451, DOI 10.1109/SCC.2015.68
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Esfahani Naeem, 2013, Uncertainty in SelfAdaptive Software Systems, P214, DOI [DOI 10.1007/978-3-642-35813-59, DOI 10.1007/978-3-642-35813-5_9]
   Farokhi S., 2015, P 10 INT WORKSH FEED, V2015
   Fehling C., 2014, Cloud Computing Patterns: Fundamentals to Design, Build, and Manage Cloud Applications, DOI DOI 10.1007/978-3-7091-1568-8
   Filieri A, 2015, 10 INT S SOFTW ENG A
   Fitzgerald B., 2014, P 1 INT WORKSH RAP C, P1, DOI DOI 10.1145/2593812.2593813
   Garlan D., 1994, ADV SOFTWARE ENG KNO, P1
   Ghezzi C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P33, DOI 10.1109/ICSE.2013.6606549
   He SJ, 2012, INT CON ADV INFO NET, P15, DOI 10.1109/AINA.2012.74
   Heinrich R, 2014, INTEGRATING RUN TIME
   Hu J, 2010, IEEE INT SYMP CIRC S, P85, DOI 10.1109/ISCAS.2010.5537028
   Iftikhar MU, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P604, DOI 10.1145/2591062.2591137
   Jamshidi P, 2016, SOFTWARE PRACTICE EX
   Jamshidi P, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P95, DOI 10.1145/2593929.2593940
   Jamshidi P, 2016, 2016 12TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES (QOSA), P70, DOI 10.1109/QoSA.2016.13
   Jamshidi P, 2016, IEEE CLOUD COMPUT, V3, P50, DOI 10.1109/MCC.2016.66
   Jamshidi P, 2015, LECT NOTES COMPUT SC, V8954, P6, DOI 10.1007/978-3-319-22885-3_2
   Jamshidi P, 2013, IEEE T CLOUD COMPUT, V1, P142, DOI 10.1109/TCC.2013.10
   Jamshidi P, 2013, EUR CON SFTWR MTNCE, P305, DOI 10.1109/CSMR.2013.39
   Kounev S., 2011, GI SOFTWARETECHNIK T, V31, P21
   Koziolek H., 2011, P JOINT ACM SIGSOFT, P3, DOI DOI 10.1145/2000259.2000263
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Oreizy P, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P899
   Pahl Claus, 2013, 2013 IEEE 7th International Symposium on the Maintenance and Evolution of Service-Oriented and Cloud-Based Systems (MESOCA), P86, DOI 10.1109/MESOCA.2013.6632740
   Pahl C, 2015, EUR C SOFTW ARCH ECS
   Perez-Palacin Diego, 2014, 5 ACMSPEC INT C PERF, V14, P3
   Sawyer P., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P95, DOI 10.1109/RE.2010.21
   Schubert L., 2010, FUTURE CLOUD COMPUTI, V1
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Stantchev V, 2009, LECT NOTES COMPUT SC, V5529, P25, DOI 10.1007/978-3-642-01671-4_3
   VanHoorn A, 2009, P WARM WORKSH ACM IE, P41
   Vogel T, 2014, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2555612
   Weyns D, 2015, WORKSH SUST ARCH GLO
   Weyns D, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168268
   Xiong HH, 2016, COMM COM INF SC, V567, P374, DOI 10.1007/978-3-319-33313-7_29
   Xiong HH, 2014, LECT NOTES COMPUT SC, V8627, P226, DOI 10.1007/978-3-319-09970-5_21
   Zhang L, 2014, INT CONF UTIL CLOUD, P156, DOI 10.1109/UCC.2014.24
   Zimmermann O., 2004, IBM DEVELOPERWORKS
   Zimmermann O., 2009, THESIS U STUTTGART
NR 53
TC 13
Z9 13
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2017
VL 29
IS 2
SI SI
AR e1849
DI 10.1002/smr.1849
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EM0CK
UT WOS:000394986200002
OA Green Published
DA 2024-07-18
ER

PT J
AU Sajnani, H
   Saini, V
   Lopes, C
AF Sajnani, Hitesh
   Saini, Vaibhav
   Lopes, Cristina
TI A parallel and efficient approach to large scale clone detection
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE clone detection; large scale; parallel; mapreduce; index-based
ID SYSTEM; CODE
AB We propose a new token-based approach for large -scale code clone detection, which is based on a filtering heuristic that reduces the number of token comparisons when the two code blocks are compared. We also present a MapReduce based parallel algorithm that uses the filtering heuristic and scales to thousands of projects. The filtering heuristic is generic and can also be used in conjunction with other token-based approaches. In that context, we demonstrate how it can increase the retrieval speed and decrease the memory usage of the index-based approaches. In our experiments on 36 open source Java projects, we found that: (i) filtering reduces token comparisons by a factor of 10, and thus increasing the speed of clone detection by a factor of 1.5; (ii) the speed-up and scale-up of the parallel approach using filtering is near-linear on a cluster of 2-32 nodes for 150-2800 projects; and (iii) filtering decreases the memory usage of index-based approach by half and the search time by a factor of 5. Copyright (C) 2015 John Wiley & Sons, Ltd.
C1 [Sajnani, Hitesh; Saini, Vaibhav; Lopes, Cristina] Univ Calif Irvine, Donald Bren Sch Informat & Comp Sci, Irvine, CA 92697 USA.
C3 University of California System; University of California Irvine
RP Sajnani, H (corresponding author), Univ Calif Irvine, Donald Bren Sch Informat & Comp Sci, Irvine, CA 92697 USA.
EM hsajnani@uci.edu
RI Saini, Vaibhav/D-8145-2019
OI Saini, Vaibhav/0000-0002-6107-9504
FU National Science Foundation [1018374]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1018374] Funding Source: National Science Foundation; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [1218228] Funding Source: National Science Foundation
FX This material is based upon work supported by the National Science
   Foundation under Grant No. 1018374.
CR Baker B. S., 1995, P WORK C REV ENG
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Cordy J., 2011, P ICPC
   Davies J., 2011, P MSR
   German D. M., 2009, MIN SOFTW REP 2009 M
   Gode N, 2009, P CSMR
   Hemel A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P357, DOI 10.1109/WCRE.2012.45
   Hummel B., 2010, P ICSM
   Ishihara T., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P387, DOI 10.1109/WCRE.2012.48
   Jia Y., 2009, P IWSC
   Jiang L., 2007, P ICSE
   Juergens E., 2009, P ICSE
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kawaguchi S, 2009, WORK CONF REVERSE EN, P313, DOI [10.1109/MCRE.2009.36, 10.1109/WCRE.2009.36]
   Keivanloo I., 2011, P WCRE
   Keivanloo I, 2011, P ICSE
   Kolb L, 2012, PROC VLDB ENDOW, V5, P1878, DOI 10.14778/2367502.2367527
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Koschke R., 2006, WORK C REV ENG WCRE
   Koschke R, 2012, EUR CON SFTWR MTNCE, P309, DOI 10.1109/CSMR.2012.37
   Krinke J, 2001, P 8 WORK C REV ENG W, V301
   Livieri S., 2007, P ICSE
   Muhammad Asaduzzaman CK, 2013, P INT C SOFTW MAINT
   Nguyen TT, 2009, P INT C SOFTW MAINT
   Ossher J., 2011, ICSM
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sajnani Hitesh, 2011, P WCRE
   Sarawagi S., 2004, P SIGMOD
   Schugerl P, 2011, P INT WORKSH SOFTW C
   Shang W, 2010, P ASE
   Uddin S., 2011, P WORK C REV ENG
   [No title captured]
NR 33
TC 12
Z9 13
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2015
VL 27
IS 6
SI SI
BP 402
EP 429
DI 10.1002/smr.1707
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM6TL
UT WOS:000357822800002
DA 2024-07-18
ER

PT J
AU Shatnawi, R
AF Shatnawi, Raed
TI Deriving metrics thresholds using log transformation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software metrics; CK metrics; thresholds; software quality
ID SOFTWARE METRICS; EMPIRICAL VALIDATION; QUALITY
AB Software metrics are surrogates of many software quality factors such as fault proneness, reusability, and maintenance effort. Software metrics are numbers collected from software code to assess and evaluate where problems are more probable to happen. These numbers are used to flag warnings of the problematic parts of software code using threshold values. However, the proposed techniques did not consider the data distribution and skewness in data. In this research, we aim to propose a methodology based on log transformation to improve the metrics quality. To explore the effect of log transformation on data analysis, we conduct analysis of using software metrics after transformation in identifying fault-prone areas on multireleases of 11 products (41 releases). The results show that the log transformation can be used to derive threshold values for all metrics under investigation. The results of the transformation are then used to conduct fault-proneness classification based on threshold values and compared against the results without transformation. The fault classification with transformation was more successful than without transformation. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 Jordan Univ Sci & Technol, Dept Software Engn, Irbid 22110, Jordan.
C3 Jordan University of Science & Technology
RP Shatnawi, R (corresponding author), Jordan Univ Sci & Technol, Dept Software Engn, Irbid 22110, Jordan.
EM raedamin@just.ed.jo
RI Shatnawi, Raed/M-5623-2019
OI Shatnawi, Raed/0000-0001-7777-1370
CR Alves T. L., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P20, DOI 10.1109/IWSM-MENSURA.2011.15
   [Anonymous], 2010, IEEE INT C SOFTW MAI
   Barkmann H, 2009, 2009 INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS: WAINA, VOLS 1 AND 2, P1067, DOI 10.1109/WAINA.2009.190
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Baxter G, 2006, ACM SIGPLAN NOTICES, V41, P397, DOI 10.1145/1167515.1167507
   Benlarbi S, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/ISSRE.2000.885858
   Cartwright M, 1998, INFORM SOFTWARE TECH, V40, P795, DOI 10.1016/S0950-5849(98)00105-0
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   Catal C, 2011, INFORM SCIENCES, V181, P4867, DOI 10.1016/j.ins.2011.06.017
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   El Emam K, 2002, IEEE T SOFTWARE ENG, V28, P494, DOI 10.1109/TSE.2002.1000452
   Erni K, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P64, DOI 10.1109/METRIC.1996.492444
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Foucaults M, 2014, 29 S APPL COMP GYEON
   Gammas E, 1994, DESIGN PATTERNS ELEM
   Gil J, 2005, ACM SIGPLAN NOTICES, V40, P97, DOI 10.1145/1103845.1094819
   Gronbacks R, 2003, SOFTWARE REMODELING
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Herbold S, 2011, EMPIR SOFTW ENG, V16, P812, DOI 10.1007/s10664-011-9162-z
   Herraiz I., 2012, 2012 3rd International Workshop on Emerging Trends in Software Metrics (WETSoM), P56, DOI 10.1109/WETSoM.2012.6226994
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Marinescu R, 2005, PROC IEEE INT CONF S, P701
   McCabe Software, US COD QUAL METR MAN
   Mendling J, 2012, J SYST SOFTWARE, V85, P1188, DOI 10.1016/j.jss.2012.01.017
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Osbornes J, 2002, PRACTICAL ASSESSMENT, V8
   Pérez-Castillo R, 2011, INT SYMP EMP SOFTWAR, P453, DOI 10.1109/ESEM.2011.64
   Prechelt L, 2003, J SYST SOFTWARE, V65, P115, DOI 10.1016/S0164-1212(02)00053-5
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rosenbergs L, 1997, P EFAITP AIE 3 ANN S
   Rosenbergs LH, 1999, 24 ANN SOFTW ENG WOR
   Rudiger Lincke., 2008, International Symposium on Software Testing and Analysis, P131, DOI 10.1145/1390630.1390648
   Sa L., 2012, IET C P I ENG TECHN
   Sanchez-Gonzalezs L, 2010, QUALITY ASSESSMENT B, P27
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Shatnawi R, 2010, J SOFTW MAINT EVOL-R, V22, P1, DOI 10.1002/smr.404
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Zimmermann T., 2008, PREDICTING BUGS HIST, P69, DOI [10.1007/978-3-540-76440-3_4, DOI 10.1007/978-3-540-76440-3_4]
NR 43
TC 24
Z9 26
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2015
VL 27
IS 2
BP 95
EP 113
DI 10.1002/smr.1702
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB4QU
UT WOS:000349613700002
DA 2024-07-18
ER

PT J
AU Medini, S
   Arnaoudova, V
   Di Penta, M
   Antoniol, G
   Guéhéneuc, YG
   Tonella, P
AF Medini, Soumaya
   Arnaoudova, Venera
   Di Penta, Massimiliano
   Antoniol, Giuliano
   Gueheneuc, Yann-Gael
   Tonella, Paolo
TI SCAN: an approach to label and relate execution trace segments
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE concept identification; dynamic analysis; information retrieval; formal
   concept analysis
ID FEATURES; CODE
AB Program comprehension is a prerequisite to any maintenance and evolution task. In particular, when performing feature location, developers perform program comprehension by abstracting software features and identifying the links between high-level abstractions (features) and program elements. We present Segment Concept AssigNer (SCAN), an approach to support developers in feature location. SCAN uses a search-based approach to split execution traces into cohesive segments. Then, it labels the segments with relevant keywords and, finally, uses formal concept analysis to identify relations among segments. In a first study, we evaluate the performances of SCAN on six Java programs by 31 participants. We report an average precision of 69% and a recall of 63% when comparing the manual and automatic labels and a precision of 63% regarding the relations among segments identified by SCAN. After that, we evaluate the usefulness of SCAN for the purpose of feature location on two Java programs. We provide evidence that SCAN (i) identifies 69% of the gold set methods and (ii) is effective in reducing the quantity of information that developers must process to locate featuresreducing the number of methods to understand by an average of 43% compared to the entire execution traces. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Medini, Soumaya; Arnaoudova, Venera; Antoniol, Giuliano; Gueheneuc, Yann-Gael] Polytech Montreal, DGIGL, Montreal, PQ H3T 1J4, Canada.
   [Di Penta, Massimiliano] Univ Sannio, Dept Engn, I-82100 Benevento, Italy.
   [Tonella, Paolo] FBK, I-38050 Trento, Italy.
C3 Universite de Montreal; Polytechnique Montreal; University of Sannio;
   Fondazione Bruno Kessler
RP Arnaoudova, V (corresponding author), Polytech Montreal, DGIGL, Pavillon Mackay & Lassonde,2900 Boul, Montreal, PQ H3T 1J4, Canada.
EM venera.arnaoudova@polymtl.ca
RI Arnaoudova, Venera/X-6403-2019; Guéhéneuc, Yann-Gaël/K-9371-2019; Di
   Penta, Massimiliano/AAF-9656-2021; Tonella, Paolo/C-1702-2015
OI Tonella, Paolo/0000-0003-3088-0339
CR AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Alawneh L., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P133
   ALIS N, 2012, IEEE T SOFTWARE ENG, V39
   [Anonymous], MODERN INFORM RETRIE
   [Anonymous], P ICPC
   Antoniol G, 2005, PROC IEEE INT CONF S, P357
   Antoniol G, 2006, IEEE T SOFTWARE ENG, V32, P627, DOI 10.1109/TSE.2006.88
   Asadi F, 2010, EUR CON SFTWR MTNCE, P31, DOI 10.1109/CSMR.2010.17
   BAKERS RD, 1995, RANDOMIZATION TESTS
   Bassett B, 2013, CONF PROC INT SYMP C, P133, DOI 10.1109/ICPC.2013.6613841
   BELLMANS RE, 1962, APPL DYNAMIC PROGRAM
   BIERMANN AW, 1972, ARTIF INTELL, V3, P181, DOI 10.1016/0004-3702(72)90048-3
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   CORMENS TH, 1990, INTRO ALGORITHMS
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   DITS B, 2013, P WORK C MIN SOFTW R, P131
   DITS B, 2013, J SOFTWARE EVOLUTION, V25, P53
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eisenbarth T, 2001, PROG COMPREHEN, P300, DOI 10.1109/WPC.2001.921740
   GANTERS B, 1999, FORMAL CONCEPT ANAL
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hamou-Lhadj A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P112, DOI 10.1109/CSMR.2005.46
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   KOSCHKE R., 2005, ASE '05 Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, P86
   KOZACZYNSKI W, 1992, IEEE T SOFTWARE ENG, V18, P1065, DOI 10.1109/32.184761
   LES TDB, 2013, P INT C SOFTW MAINT, P364
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   LOS D, 2012, AUTOMAT SOFTW ENG, V19, P423
   LOS D, 2007, P INT C KNOWL DISC D, P460
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Medini S., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P135, DOI 10.1109/WCRE.2012.23
   MEDINIS S, 2011, P INT S SEARCH BAS S, P252
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Ng JKY, 2010, J SOFTW MAINT EVOL-R, V22, P597, DOI 10.1002/smr.421
   Pirzadeh H, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P221, DOI 10.1109/ICECCS.2011.29
   Pirzadeh H, 2011, CONF PROC INT SYMP C, P225, DOI 10.1109/ICPC.2011.17
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Rajlich V, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.17
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Rohatgi A, 2008, INT C PROGRAM COMPRE, P234, DOI 10.1109/ICPC.2008.35
   SAFYALLAH H, 2006, P 14 INT C PROGR COM, P84
   Siff M, 1999, IEEE T SOFTWARE ENG, V25, P749, DOI 10.1109/32.824377
   SOHS Z, 2012, P INT C PROGR COMPR, P163
   SRIDHARA G, 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   SRIDHARAS G, 2011, P INT C SOFTW ENG IC, P101
   Wang XR, 2014, J SOFTW-EVOL PROC, V26, P27, DOI 10.1002/smr.1581
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Yevtushenko S., 2000, P 7 NATL C ARTIFICIA, P127
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
NR 56
TC 7
Z9 7
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2014
VL 26
IS 11
SI SI
BP 962
EP 995
DI 10.1002/smr.1695
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU4PZ
UT WOS:000345595400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alegría, JAH
   Bastarrica, MC
   Quispe, A
   Ochoa, SF
AF Hurtado Alegria, Julio A.
   Cecilia Bastarrica, Maria
   Quispe, Alcides
   Ochoa, Sergio F.
TI MDE-based process tailoring strategy
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software processes; process tailoring; model-driven engineering
ID MODEL; STATE
AB Defining organizational software processes is essential for enhancing maturity because they cannot be improved if they are not specified. However, software process definition is hard and still not good for assuring productivity because the best process depends on the project's particularities. The process engineer can define a specific process for each kind of project, but this is expensive, unrepeatable, and error prone. Moreover, it is difficult to foresee all project scenarios and therefore the appropriate processes. The most usual situation is to apply always the same software process, although it is known to be suboptimal. To deal with this challenge, we propose a model-based approach to software process tailoring that automatically generates project-specific processes on the basis of the organizational process and project contexts. We still require competent process engineers to define the company's process, but once done, our approach is systematic, repeatable, and easy to use. The proposal is applied for tailoring the requirements engineering process of a medium-size Chilean company. Processes obtained matched those used in the company for planned project contexts, and they were also reasonable for nonexpected situations. The company's process and project engineers agreed that the approach was highly valuable. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Hurtado Alegria, Julio A.] Univ Cauca, IDIS Res Grp, Popayan, Colombia.
   [Hurtado Alegria, Julio A.; Cecilia Bastarrica, Maria; Quispe, Alcides; Ochoa, Sergio F.] Univ Chile, Dept Comp Sci, Santiago, Chile.
C3 Universidad del Cauca; Universidad de Chile
RP Alegría, JAH (corresponding author), Univ Chile, Dept Comp Sci, Popayan, Chile.
EM ahurtado@unicauca.edu.co
RI Bastarrica, Maria Cecilia/AGN-6617-2022; Ochoa, Sergio F./J-3740-2016
OI Ochoa, Sergio F./0000-0002-0431-8767; Hurtado Alegria, Julio
   Ariel/0000-0002-2508-0962
FU Conicyt, Chile [Fondef D09I1171]
FX This work has been partly funded by project Fondef D09I1171 of Conicyt,
   Chile.
CR Aharoni A, 2008, LECT NOTES COMPUT SC, V5231, P455, DOI 10.1007/978-3-540-87877-3_33
   Alegria Hurtado., 2011, Proc. of the 2011 International Conference on Software and Systems Process, P43
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   [Anonymous], 1992, CMUSEI92TR004
   [Anonymous], 2003, Eclipse Modeling Framework
   [Anonymous], P 38 ANN HAW INT C S
   Armbrust Ove, 2009, Software Process: Improvement and Practice, V14, P181, DOI 10.1002/spip.412
   Armbrust O, J OBJECT TECHNOLOGY, V46, P237
   Armbrust O, 2008, LECT NOTES COMPUT SC, V5007, P160, DOI 10.1007/978-3-540-79588-9_15
   Belkhatir N., 1996, SOFTW PROC WORKSH 19, P35
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Breton E, 2001, P INT COMP SOFTW APP, P225, DOI 10.1109/CMPSAC.2001.960620
   Bustard DW, 2005, 12TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P357, DOI 10.1109/ECBS.2005.63
   Cockburn A, 2005, HUMAN POWERED METHOD
   Cusumano MA, 2009, IEEE SOFTWARE, V26, P84, DOI 10.1109/MS.2009.124
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Dai F, 2007, SNPD 2007: EIGHTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING, AND PARALLEL/DISTRIBUTED COMPUTING, VOL 2, PROCEEDINGS, P782, DOI 10.1109/SNPD.2007.25
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Dörr J, 2008, IEEE SOFTWARE, V25, P71
   Firesmith D, 2005, J OBJECT TECHNOL, V4, P31, DOI 10.5381/jot.2005.4.9.c4
   Garcia J, 2005, LECT NOTES COMPUT SC, V3792, P106
   Henninger S, 2001, LECT NOTES ARTIF INT, V2080, P249
   Hurtado J. A., 2009, 2 WORKSH KNOWL REUS
   Jacobson I, 1999, CRYSTAL CLEAR UNIFIE
   Kang Kyo C, 1990, Technical Report
   Killisperger P, 2009, LECT NOTES COMPUT SC, V5543, P63, DOI 10.1007/978-3-642-01680-6_8
   Koolmanojwong S, 2 WORKSH KNOWL REUS, V47, P150
   Laplante P., 2004, QUEUE J ACM, V1, P10, DOI [10.1145/971564.971573, DOI 10.1145/971564.971573]
   Mirbel I, 2006, REQUIR ENG, V11, P58, DOI 10.1007/s00766-005-0019-0
   Munch J., 2010, LNCS, V6195
   Ocampo A., 2005, Software Process Improvement and Practice, V10, P273, DOI 10.1002/spip.229
   OMG, 2007, PTC071101 OMG
   Ortega D, 2012, THESIS U CHILE
   Osterweil L., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P2
   Park S, 2006, EXPERT SYST APPL, V30, P179, DOI 10.1016/j.eswa.2005.06.023
   Piattini M., 2007, ACM SIGSOFT SOFTWARE, V32, P1
   Raffo D., 2011, INT C SOFTW SYST PRO
   Ralyté J, 2003, LECT NOTES COMPUT SC, V2681, P95
   Rolland C, 2009, FRONT ARTIF INTEL AP, V199, P3, DOI 10.3233/978-1-60750-049-0-3
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Simidchieva BI, 2007, LECT NOTES COMPUT SC, V4470, P109
   Simmonds J, 2012, TRDCC20123 U CHIL CO
   Sutton S.M., 1996, Proceedings of the 10th international Software Process Workshop (June 17 - 19, 1996), P109
   Valdes G, 2010, COMM COM INF SC, V99, P142
   Washizaki H, 2006, LECT NOTES COMPUT SC, V4034, P415
NR 45
TC 19
Z9 19
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2014
VL 26
IS 4
SI SI
BP 386
EP 403
DI 10.1002/smr.1576
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF1WF
UT WOS:000334503900003
DA 2024-07-18
ER

PT J
AU Schweigert, T
   Nehfort, A
AF Schweigert, Tomas
   Nehfort, Andreas
TI Modeling software development practices using reusable project patterns:
   a case study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE experience reuse; knowledge management; patterns modeling; process
   patterns; software process technology
AB Software process improvement in software development organizations is a complex task that can be solved using knowledge management strategies. The definition and use of process patterns is a proven approach to apply knowledge management strategies in software engineering organizations. One of the main problems for the effective application of process patterns is the difficulty of formalizing the knowledge about the development process using these approaches.
   In this paper, a framework to manage software project patterns is presented. This framework is composed of a model called reusable project pattern (RPP) and a tool called sdpReuser. It is able to formalize the knowledge on software development projects from software development methodologies, reference frameworks, best practices and also tacit knowledge, useful to software engineers.
   The authors carried out a case study at the University Carlos III of Madrid, where junior software engineers used RPP. This study shows that the quality of pattern formalization correlates with experience in specific software engineering methods, the quality of the references in software engineering practices and the collaboration among software engineers to develop an RPP. It also analyzed the usefulness of RPP information elements to help software engineers to identify the most appropriate RPP and how to adapt it to project restrictions. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Schweigert, Tomas] SQS Software Qual Syst AG, D-51149 Cologne, Germany.
RP Schweigert, T (corresponding author), SQS Software Qual Syst AG, Stollwerckstr 11, D-51149 Cologne, Germany.
EM tomas.schweigert@sqs.de
CR Blaschke M, 2009, TESTING EXPERIENCE, V12, P56
   Knuveenr C., 2010, SQ MAGAZIN, V17, P26
   Steiner M, 2010, J SOFTWARE MAINTENAN, DOI [10.1002/SMR507, DOI 10.1002/SMR507]
NR 3
TC 1
Z9 1
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2014
VL 26
IS 3
SI SI
BP 350
EP 356
DI 10.1002/smr.1585
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD1VP
UT WOS:000333022100009
DA 2024-07-18
ER

PT J
AU Sun, Y
   Gray, J
   Delamare, R
   Baudry, B
   White, J
AF Sun, Yu
   Gray, Jeff
   Delamare, Romain
   Baudry, Benoit
   White, Jules
TI Automating the maintenance of nonfunctional system properties using
   demonstration-based model transformation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE nonfunctional property maintenance; model transformation by
   demonstration; domain-specific modeling language
ID SOFTWARE
AB Domain-Specific Modeling Languages (DSMLs) are playing an increasingly significant role in software development. By raising the level of abstraction using notations that are representative of a specific domain, DSMLs allow the core essence of a problem to be separated from irrelevant accidental complexities, which are typically found at the implementation level in source code. In addition to modeling the functional aspects of a system, a number of nonfunctional properties (e.g., quality of service constraints and timing requirements) also need to be integrated into models in order to reach a complete specification of a system. This is particularly true for domains that have distributed real time and embedded needs. Given a base model with functional components, maintaining the nonfunctional properties that crosscut the base model has become an essential modeling task when using DSMLs. The task of maintaining nonfunctional properties in DSMLs is traditionally supported by manual model editing or by using model transformation languages. However, these approaches are challenging to use for those unfamiliar with the specific details of a modeling transformation language and the underlying metamodel of the domain, which presents a7 steep learning curve for many users. This paper presents a demonstration-based approach to automate the maintenance of nonfunctional properties in DSMLs. Instead of writing model transformation rules explicitly, users demonstrate how to apply the nonfunctional properties by directly editing the concrete model instances and simulating a single case of the maintenance process. By recording a user's operations, an inference engine analyzes the user's intention and generates generic model transformation patterns automatically, which can be refined by users and then reused to automate the same evolution and maintenance task in other models. Using this approach, users are able to automate the maintenance tasks without learning a complex model transformation language. In addition, because the demonstration is performed on model instances, users are isolated from the underlying abstract metamodel definitions. Our demonstration-based approach has been applied to several scenarios, such as auto scaling and model layout. The specific contribution in this paper is the application of the demonstration-based approach to capture crosscutting concerns representative of aspects at the modeling level. Several examples are presented across multiple modeling languages to demonstrate the benefits of our approach. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Sun, Yu] Univ Alabama Birmingham, Dept Comp & Informat Sci, Birmingham, AL 35294 USA.
   [Gray, Jeff; Delamare, Romain] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Baudry, Benoit] IRISA INRIA Rennes, Rennes, France.
   [White, Jules] Virginia Tech, Dept Elect & Comp Engn, Blacksburg, VA USA.
C3 University of Alabama System; University of Alabama Birmingham;
   University of Alabama System; University of Alabama Tuscaloosa;
   Universite de Rennes; Virginia Polytechnic Institute & State University
RP Sun, Y (corresponding author), Univ Alabama Birmingham, Dept Comp & Informat Sci, Birmingham, AL 35294 USA.
EM yusun@cis.uab.edu
OI Gray, Jeff/0000-0003-0082-6753
FU NSF [CCF-1052616]
FX This work is supported by NSF CAREER award CCF-1052616.
CR Agrawal A, 2003, INT C OBJ OR PROGR S, P8
   Balasubramanian D, 2006, ELECT COMMUN EUR ASS, V1, P8
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1280, DOI 10.1145/1141277.1141575
   Berardinelli L, 2009, 2 INT WORKSH NONF SY
   Bokovi M, 2009, LNCS, V6002, P291
   Bokovi M, 2008, LNCS, V5421, P227
   Bokovi M, 2010, LNCS, V6627, P308
   Boskovic M, 2011, SOFTW SYST MODEL, V10, P283, DOI 10.1007/s10270-010-0171-y
   Boulanger F, 2009, 2 INT WORKSH NONF SY
   Brosch P, 2009, LECT NOTES COMPUT SC, V5795, P271, DOI 10.1007/978-3-642-04425-0_20
   Burnett M, 2004, COMMUN ACM, V47, P53, DOI 10.1145/1015864.1015889
   Gray J, 2006, COMPUTER, V39, P51, DOI 10.1109/MC.2006.45
   Gray J, 2009, SEPARATION ADAPTIVE, P85
   Gray Jeff., 2007, HDB DYNAMIC SYSTEM M
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Karr DA, 2001, DOA'01: 3RD INTERNATIONAL SYMPOSIUM ON DISTRIBUTED OBJECTS & APPLICATIONS, PROCEEDINGS, P299, DOI 10.1109/DOA.2001.954095
   Karsai G, 2008, SCI COMPUT PROGRAM, V73, P26, DOI 10.1016/j.scico.2008.05.006
   Kupfer M, 2008, 1 INT WORKSH NONF SY
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   Lin Y, 2007, THESIS U ALABAMA BIR
   Object Management Group, 2010, OBJ CONSTR LANG SPEC
   Object Management Group, 2005, REV SUBM MOF 2 0 QUE
   Paige R, 2008, 1 INT WORKSH NONF SY
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sun Y, 2013, EUR C MOD FDN APPL E
   Sun Y, 2009, LECT NOTES COMPUT SC, V5795, P712, DOI 10.1007/978-3-642-04425-0_58
   Troya J, 2009, 2 INT WORKSH NONF SY
   Varró D, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P978, DOI 10.1145/1244002.1244217
   W3C, 1999, XSLT TRANSF VERS 1 0
   Whittle J, 2009, LECT NOTES COMPUT SC, V5560, P191, DOI 10.1007/978-3-642-03764-1_6
   Wimmer Manuel., 2007, System Sciences, p285b, DOI DOI 10.1109/HICSS.2007.572
   Yrjonen A, 2009, 2 INT WORKSH NONF SY
NR 33
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2013
VL 25
IS 12
BP 1335
EP 1356
DI 10.1002/smr.1606
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 271BG
UT WOS:000328364600007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Capiluppi, A
AF Capiluppi, Andrea
TI Similarities, challenges and opportunities of Wikipedia content and open
   source projects
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE evolutionary patterns; user-generated content; open source software;
   Wikipedia
ID SOURCE SOFTWARE; EVOLUTION
AB Several years of research and evidence have demonstrated that open source software portals often contain a large amount of software projects that simply do not evolve, developed by relatively small communities, struggling to attract a sustained number of contributors. These portals have started to increasingly act as a storage for abandoned projects, and researchers and practitioners should try and point out how to take advantage of such content. Similarly, other online content portals (like Wikipedia) could be harvested for valuable content. In this paper we argue that, even with differences in the requested expertise, many projects reliant on content and contributions by users undergo a similar evolution, and follow similar patterns: when a project fails to attract contributors, it appears to be not evolving, or abandoned. Far from a negative finding, even those projects could provide valuable content that should be harvested and identified based on common characteristics: by using the attributes of usefulness' and modularity' we isolate valuable content in both Wikipedia pages and open source software projects. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Capiluppi, Andrea] Brunel Univ, Uxbridge UB8 3PH, Middx, England.
C3 Brunel University
RP Capiluppi, A (corresponding author), Brunel Univ, DISC, Uxbridge UB8 3PH, Middx, England.
EM andrea.capiluppi@brunel.ac.uk
RI Capiluppi, Andrea/AGO-2961-2022
OI Capiluppi, Andrea/0000-0001-9469-6050
CR ALLUVATTI GM, 2011, P 12 INT WORKSH PRIN, P81
   Almeida R.B., 2007, P ICWSM 2007
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 2008, Software Evolution, DOI [10.1007/978-3-540-76440-311, DOI 10.1007/978-3-540-76440-311]
   Capiluppi A, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P317, DOI 10.1109/CSMR.2003.1192440
   CAPILUPPI A, 2003, P 3 WORKSH OP SOURC
   Capiluppi A, 2012, P 8 INT C OP SOURC S
   Capiluppi A, 2007, INT FED INFO PROC, V234, P31
   Capra E, 2008, IEEE T SOFTWARE ENG, V34, P765, DOI 10.1109/TSE.2008.68
   Capra E, 2009, INT FED INFO PROC, V299, P225
   Cha M, 2007, IMC'07: PROCEEDINGS OF THE 2007 ACM SIGCOMM INTERNET MEASUREMENT CONFERENCE, P1
   Deshpande A, 2008, INT FED INFO PROC, V275, P197
   DIBONA C, 2005, OPEN SOURCES 2 0
   English R, 2007, EM TRENDS FLOSS RES, V0, P11
   Feitelson DG, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P363
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Haklay M, 2008, IEEE PERVAS COMPUT, V7, P12, DOI 10.1109/MPRV.2008.80
   Haythornthwaite C., 2009, System Sciences, P1, DOI DOI 10.1109/HICSS.2009.137
   Herraiz I., 2006, 10th European Conference on Software Maintenance and Reengineering
   Howison J., 2004, MINING SOFTWARE REPO
   Howison J, 2006, INT J INF TECHNOL WE, V1, P17, DOI 10.4018/jitwe.2006070102
   Israeli A., 2007, Success of open source projects: Patterns of downloads and releases with time, P87
   KARLSSON EA, 1995, SOFTWARE REUSE HOLIS
   Koch S, 2007, J SOFTW MAINT EVOL-R, V19, P361, DOI 10.1002/smr.348
   Lam SK, 2011, COMPUTER, V44, P87, DOI 10.1109/MC.2011.94
   LI C, 2007, MAPPING PARTICIPATIO
   Ortega F., 2009, THESIS U RJ CARLOS
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Poulin JS., 1994, IEEE
   Stevens W., 1979, Structured Design, P205
   Suh B., 2009, Proceedings of the 5th International Symposium on Wikis and Open Collaboration - WikiSym '09, P10, DOI [DOI 10.1145/1641309.1641322, 10.1145/1641309.1641322]
   van Dijck J, 2009, MEDIA CULT SOC, V31, P41, DOI 10.1177/0163443708098245
   Voss J., 2005, P 10 INT C INT SOC S
   Weiss D, 2005, ENTRY BEX LARGE CRAW
   Wiggins A, 2009, INT FED INFO PROC, V299, P94
   Wunsch-Vincent S, 2007, PARTICIPATIVE WEB US, P74
   Xie GW, 2009, PROC IEEE INT CONF S, P51, DOI 10.1109/ICSM.2009.5306356
NR 37
TC 1
Z9 1
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2013
VL 25
IS 9
BP 891
EP 914
DI 10.1002/smr.1570
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 213WU
UT WOS:000324092000001
OA Green Published
DA 2024-07-18
ER

PT J
AU Raninen, A
   Ahonen, JJ
   Sihvonen, HM
   Savolainen, P
   Beecham, S
AF Raninen, Anu
   Ahonen, Jarmo J.
   Sihvonen, Hanna-Miina
   Savolainen, Paula
   Beecham, Sarah
TI LAPPI: A light-weight technique to practical process modeling and
   improvement target identification
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE process modeling; software process improvement; SME; LAPPI
ID SOFTWARE PROCESS IMPROVEMENT; PRACTITIONERS VIEWS; COMPANIES;
   MOTIVATORS; SIMULATION; BUSINESS; SPI
AB Understanding the current state of the software processes and their problem points is important. Without this understanding, software process improvement (SPI) resources may be allocated to less meaningful targets. SPI work can be challenging to initiate especially in small companies where resources and knowledge of SPI are often limited. The aim of the developed technique, LAPPI (A Light-weight Technique to Practical Process Modeling and Improvement Target Identification), is to provide an easy to use, lightweight tool for process modeling and improvement target identification. The technique provides a suitable method that integrates with various SPI initiatives. The method used in the development of LAPPI is a nonformal variation of constructive research. LAPPI has been incrementally developed in multiple academia-industry collaboration projects and by industry actors themselves. Our evaluation of the LAPPI technique in 42 studies conducted in 31 companies indicates that the technique is suitable for modeling the current process and identifying the points of improvement in the process. Practical experience shows that LAPPI provides a cost-effective technique for process modeling and improvement target identification especially in small and medium-sized enterprises. It is most useful in the diagnosing phase of SPI. It helps the company to understand the current processes and the organizational interactions, and to create a process description baseline. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Raninen, Anu; Ahonen, Jarmo J.; Sihvonen, Hanna-Miina; Savolainen, Paula] Univ Eastern Finland, Sch Comp, FI-70211 Kuopio, Finland.
   [Raninen, Anu; Savolainen, Paula; Beecham, Sarah] Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
C3 University of Eastern Finland; University of Limerick
RP Raninen, A (corresponding author), Univ Eastern Finland, Sch Comp, POB 1627, FI-70211 Kuopio, Finland.
EM anu.raninen@uef.fi; jarmo.ahonen@uef.fi; hanna-miina.sihvonen@uef.fi;
   paula.m.savolainen@uef.fi
RI Beecham, Simon C/M-1544-2016
FU Finnish Funding Agency for Technology and Innovation (Tekes) [70011/08,
   70030/10]; Science Foundation Ireland [03/CE2/I303_1]
FX This work was funded by Finnish Funding Agency for Technology and
   Innovation (Tekes) in projects SAMeT (Small and Medium-Sized Software
   Organization's Methods and Metrics) with grant 70011/08 and METRI
   (Metrics Based Defect Prevention in Software Engineering) with grant
   70030/10 and supported, in part, by Science Foundation Ireland grant
   03/CE2/I303_1 to Lero - the Irish Software Engineering Research Centre
   (www.lero.ie).
CR Ahonen J. J., 2002, Software Process Improvement and Practice, V7, P33, DOI 10.1002/spip.152
   Ahonen JJ, 2006, LECT NOTES COMPUT SC, V4257, P62
   Ahonen JJ, 2009, LECT NOTES BUS INF P, V16, P1
   Ahonen JJ, 2004, EMPIR SOFTW ENG, V9, P275, DOI 10.1023/B:EMSE.0000039880.99096.af
   Ahonen JJ, 2002, LECT NOTES COMPUT SC, V2559, P273
   ANACLETO A, 2004, 4 INT SPICE C PROC A, P69
   [Anonymous], CROSSTALK J DEFENSE
   [Anonymous], 1998, Software process improvement
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 15504 ISOIEC 1
   [Anonymous], 2005, NEW SME DEFINITION U
   [Anonymous], 2011, 29110 ISOIEC
   Baddoo N., 2002, Empirical Software Engineering, V7, P93, DOI 10.1023/A:1015203013834
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   Beitz A, 1999, P EUR C SOFTW PROC I
   Christie AM, 1999, J SYST SOFTWARE, V46, P107, DOI 10.1016/S0164-1212(99)00004-7
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Denison DR., 1991, Research in Organizational Change and Development, V5, P1
   Dingsoyr T, 2005, INT SER SOFTW ENG, V10, P187
   Fowler M, 2004, UML distilled: A brief guide to the standard object modeling language
   Giaglis GM, 2001, INT J FLEX MANUF SYS, V13, P209, DOI 10.1023/A:1011139719773
   Gilb Tom, 1993, Software inspections
   Hamann D, 2001, LECT NOTES COMPUTER, V2006, P220
   Heston KM, 2010, J SOFTWARE MAINTENAN, DOI 10.1002/spip.434
   Hoda R, 2008, NZ COMP SCI RES STUD
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Johnson D, 1997, SOFTWARE PROCESS NEW, P1
   Karjalainen A, 2000, P 33 ANN HAW INT C S, V2, P10, DOI 10.1109/HICSS.2000. 926696
   Kasanen E., 1993, J MANAG ACCOUNT RES, V5, P243
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   LANGLEY A, 1995, SLOAN MANAGE REV, V36, P63
   Laporte CY, 2008, COMM COM INF SC, V16, P129
   Mayer Richard J., 1995, Business Process Change, P245
   Mc Caffery F, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.3
   McCaffery Fergal, 2009, Software Process: Improvement and Practice, V14, P271, DOI 10.1002/spip.430
   Oyegoke A, 2011, INT J MANAG PROJ BUS, V4, P573, DOI 10.1108/17538371111164029
   Paulk M., 1998, JOINT 1998 P PAC NW, P13
   Richardson I, 2002, LECT NOTES COMPUT SC, V2349, P100
   Savolainen P, 2007, LECT NOTES COMPUT SC, V4764, P71
   Schriber TJ., 1980, FUNDAMENTALS FLOWCHA
   Shannon R.E., 1975, SYSTEMS SIMULATION A
   Shaw I, 1999, QUALITATIVE EVALUATI, V137
   Sihvonen H, 2010, IEEE 2010 5 INT C SO, P232
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Team CP., 2011, CMM DEV VERS 1 3 CMM
   Valtanen A, 2008, LECT NOTES COMPUT SC, V5089, P258, DOI 10.1007/978-3-540-69566-0_22
NR 47
TC 5
Z9 5
U1 0
U2 5
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2013
VL 25
IS 9
BP 915
EP 933
DI 10.1002/smr.1571
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 213WU
UT WOS:000324092000002
DA 2024-07-18
ER

PT J
AU Casey, V
   Mc Caffery, F
AF Casey, Valentine
   Mc Caffery, Fergal
TI A lightweight traceability assessment method for medical device software
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE medical device software traceability; assessment method; risk
   management; medical device standards; medical device software
   compliance; software process improvement (SPI)
AB Traceability is central to medical device software development and essential for regulatory approval. For compliance to be achieved, an effective traceability process needs to be in place. This process must ensure the need for clear linkages and traceability from software requirements including risks through the different stages of the software development and maintenance lifecycles. This is difficult to achieve because of the lack of specific guidance within the medical device standards and documentation. This has resulted in many medical device companies employing inefficient software traceability processes. In this paper, we outline the development and implementation of Med-Trace, a lightweight software traceability process assessment and improvement method developed specifically for the medical device industry. We also present and discuss findings from two industry-based Med-Trace assessments. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Casey, Valentine; Mc Caffery, Fergal] Dundalk Inst Technol, Regulated Software Res Grp, Dept Comp & Maths, Dundalk, Co Louth, Ireland.
C3 Dundalk Institute of Technology
RP Casey, V (corresponding author), Dundalk Inst Technol, Regulated Software Res Grp, Dept Comp & Maths, Dundalk, Co Louth, Ireland.
EM Val.casey@dkit.ie
RI casey, val/AAQ-1523-2021
OI Mc Caffery, Fergal/0000-0002-0839-8362
FU Science Foundation Ireland (SFI) Stokes Lectureship Programme
   [07/SK/I1299]; SFI Principal Investigator Programme [08/IN.1/I2030];
   Science Foundation Ireland; Irish Government; European Union; Lero - the
   Irish Software Engineering Research Centre [10/CE/I1855]
FX This research is supported by the Science Foundation Ireland (SFI)
   Stokes Lectureship Programme, grant number 07/SK/I1299, and the SFI
   Principal Investigator Programme, grant number 08/IN.1/I2030 (the
   funding of this project was awarded by the Science Foundation Ireland
   under a cofunding initiative by the Irish Government and the European
   Union under the European Regional Development Fund) and supported in
   part by Lero - the Irish Software Engineering Research Centre
   (http://www.lero.ie), grant number 10/CE/I1855.
CR [Anonymous], EUR SYST SOFTW PROC
   [Anonymous], 2019, MEDICAL LAB ACCREDIT
   [Anonymous], 2007, 623662007 IEC
   [Anonymous], 2005, AUT SPICE PROC ASS V
   [Anonymous], 2005, 615082005 IECTR BSI
   [Anonymous], 2000, 60601142000 BS EN BS
   [Anonymous], 2006, Standard IEC 62304
   [Anonymous], 2006, 1550452006 ISOIEC
   [Anonymous], 1992, DO178B RTCA
   [Anonymous], 2009, 8000212009 IECTR BSI
   [Anonymous], CAP MAT MOD INT DEV
   Burton J, 2006, INT WORKSH SOFTW QUA, DOI [10.1145/1137702.1137705, DOI 10.1145/1137702.1137705]
   Espinoza A, 2009, IEEE ANNU SOFTW ENG, P175, DOI 10.1109/SEW.2008.23
   FDA, 2011, MED RAD EM DEV REC
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   IEC, 2006, 608122006 IEC
   International Organization for Standardization, 2007, 149712007 ISO
   Lee I, 2006, COMPUTER, V39, P33
   Mason P, 2005, 12th Asia-Pacific Software Engineering Conference, Proceedings, P272, DOI 10.1109/APSEC.2005.85
   Mc Caffery F, 2009, INT C SOFTW PROC IMP
   Mc Caffery F, 2010, INT C SOFTW PROC IMP
   Mc Caffery F, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.3
   MCCAFFERY F, 2006, EUROPEAN SYSTEMS SOF
   McCaffery F, 2010, ENCY SOFTWARE ENG, P528
   McCaffery F, 2010, J SOFTW MAINT EVOL-R, V22, P255, DOI 10.1002/spip.439
   Méry D, 2010, LECT NOTES COMPUT SC, V6416, P312, DOI 10.1007/978-3-642-16561-0_31
   Rakitin SR, 2006, COMPUTER, V39, P40, DOI 10.1109/MC.2006.123
   US FDA Center for Devices and Radiological Health, 2005, GUID CONT PREM SUBM
   US FDA Center for Devices and Radiological Health, 2002, GEN PRINC SOFTW VAL
   US FDA Center for Devices and Radiological Health, 1999, OFF THE SHELF SOFTW
NR 30
TC 7
Z9 9
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2013
VL 25
IS 4
SI SI
BP 363
EP 372
DI 10.1002/smr.571
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 131XD
UT WOS:000318030600005
DA 2024-07-18
ER

PT J
AU Kramer, A
AF Kramer, Anne
TI Automotive and medical: can we learn from each other?
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE ISO 26262; IEC 62304; ISO 14971; ISO 13485; automotive; medical
AB In this paper, we present an analysis of the new standard ISO 26262 for the automotive industry. We compare this standard to existing regulations of another safety-critical domain, that is, the medical device industry. As can be expected, a large number of activities coincide, because they simply correspond to common best practices that can also be found, for example, in ISO/IEC 15504. However, some interesting differences can be observed both in philosophy and in wording that make cross-domain communication complicated. This paper is intended to encourage the exchange of experiences and methods between the two domains that are driven by the same concern, that is, the user's safety. We point out the most striking similarities and differences and translate from one domain to the other. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 Sepp Med GmbH, D-91341 Rottenbach, Germany.
RP Kramer, A (corresponding author), Sepp Med GmbH, Gewerbering 9, D-91341 Rottenbach, Germany.
EM anne.kramer@seppmed.de
CR [Anonymous], 2011, 262622 ISO
   [Anonymous], 262629 ISO
   [Anonymous], 2019, MEDICAL LAB ACCREDIT
   [Anonymous], 262621 ISO
   [Anonymous], 2006, Standard IEC 62304
   International Organization for Standardization, 2007, 149712007 ISO
   ISO, 2011, 262626 ISO
   RoSSner T., 2010, Basiswissen modellbasierter Test
   Schulz S, 2001, MBTCONF 2011
   Utting M., 2007, PRACTICAL MODEL BASE
NR 10
TC 1
Z9 1
U1 2
U2 9
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2013
VL 25
IS 4
SI SI
BP 373
EP 379
DI 10.1002/smr.573
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 131XD
UT WOS:000318030600006
DA 2024-07-18
ER

PT J
AU Abran, A
   Desharnais, JM
   Cuadrado-Gallego, JJ
AF Abran, Alain
   Desharnais, Jean-Marc
   Cuadrado-Gallego, Juan Jose
TI Measurement and quantification are not the same: ISO 15939 and ISO 9126
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software measurement; ISO 9126; ISO 15939; quality measure; design of a
   measure; metrology; quantitative models
AB Measurement based on the international standards for measurement (i.e., metrology) is not the same as judgmental-based quantification of implicit relationships across a mix of entities and attributes without due consideration of admissible mathematical operations on numbers of different scale types. This paper presents first the Measurement Information Model in ISO 15939 and clarifies next what in it refers to the classical metrology field, and what refers to the quantitative analysis of relationships. The paper concludes with two examples of the designs of a measure for ISO 9126, one focusing on a single attribute and the second attempting to quantify a set of relationships across a number of entities and attributes. Copyright (c) 2010 John Wiley & Sons, Ltd.
C1 [Abran, Alain; Desharnais, Jean-Marc; Cuadrado-Gallego, Juan Jose] Univ Quebec, Ecole Technol Super, Montreal, PQ H3C 3P8, Canada.
C3 University of Quebec; University of Quebec Montreal; Ecole de
   Technologie Superieure - Canada
RP Abran, A (corresponding author), Univ Quebec, Ecole Technol Super, Montreal, PQ H3C 3P8, Canada.
EM Juan.Cuadrado-Gallego@etsmtl.ca
RI Abran, Alain/I-2493-2016
OI Abran, Alain/0000-0003-2670-9061; Cuadrado-Gallego, Juan
   J./0000-0001-8178-5556
CR Abran A, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P2, DOI 10.1109/METRIC.2003.1232451
   Abran Alain., 2010, Software Metrics and Software Metrology, P328
   ALQUTAISH RE, 2005, 15 INT WORKSH SOFTW, P337
   [Anonymous], 2003, 912622003 ISOIEC TR
   [Anonymous], 25000 ISOIEC
   [Anonymous], 2004, 912642004 ISOIEC TR
   [Anonymous], 1999, 1459811999 ISOIEC
   Dikici P, 2009, GRAD COURS SM517 SOF
   Habra N, 2008, J SYST SOFTWARE, V81, P633, DOI 10.1016/j.jss.2007.07.038
   *INT ORG STAND, 2007, 159392007 ISOIEC
   International Organization for Standardization, 2007, ISO/IEC Guide 99 International vocabulary of metrology-basic and general concepts and associated terms (VIM)
   ISO, 2001, 912612001 ISO
   *ISO, 2003, 197612003 ISOIEC
   ISO, 2003, SOFTW ENG PROD QUA 3
   Ouwerkerk J, 2006, MENSURA2006 C P SPAI, P83
   Ozcan Top O, 2009, GRAD COURS SM517 SOF
NR 16
TC 7
Z9 7
U1 0
U2 5
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2012
VL 24
IS 5
SI SI
BP 585
EP 601
DI 10.1002/smr.496
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 975AO
UT WOS:000306479100013
DA 2024-07-18
ER

PT J
AU Sánchez-Cifo, MA
   Bermejo, P
   Navarro, E
AF Angel Sanchez-Cifo, Miguel
   Bermejo, Pablo
   Navarro, Elena
TI DevOps: Is there a gap between education and industry?
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE company; development; DevOps; higher education; microservices;
   technological practice
ID CONTINUOUS DELIVERY
AB DevOps has been identified by industry as one of the cornerstones of their development process. It is not just a set of tools but a set of principles and practices to build an efficient team improving the communication and collaboration. Its importance has greatly impacted even hiring processes being DevOps Engineer among the most recruited jobs according to LinkedIn. But it is not clear whether universities have noticed the magnitude this movement has attained in industry, despite the need of higher education and industry building up advances together. This led us to determine whether there is a gap between the training provided by higher education and the one expected from industry. For this aim, a questionnaire, defined after a careful review of the literature, has been run worldwide to answer the four research questions. The analysis arose several conclusions, such as higher prevalence of use than of training for most of the analyzed technological practices, except for those related to architecture, probably due to the migration cost these require. It was also found that the two practices with higher prevalence in industry, feedback and limit-WIP, are scarcely trained in higher education. These conclusions provide interesting advice for future adaptations of computer science degrees.
C1 [Angel Sanchez-Cifo, Miguel; Bermejo, Pablo; Navarro, Elena] Univ Castilla La Mancha, Escuela Super Ingn Informat, Albacete, Spain.
C3 Universidad de Castilla-La Mancha
RP Bermejo, P (corresponding author), Univ Castilla La Mancha, Escuela Super Ingn Informat, Av Espana S-N, Albacete 02071, Spain.
EM pablo.bermejo@uclm.es
RI Bermejo, Pablo/E-8455-2016; Navarro, Elena/I-7452-2013
OI Bermejo, Pablo/0000-0001-7595-910X; Navarro, Elena/0000-0001-9496-6890;
   Sanchez Cifo, Miguel Angel/0000-0003-4451-8736
FU European Regional Development Fund [TIN2016-77902-C3-1-P]; Junta de
   Comunidades de Castilla-La Mancha [SBPLY/21/180501/000148]; Ministerio
   de Ciencia e Innovacion [PID2019-106758GB-C33, PID2019-108915RB-I00]
FX European Regional Development Fund, Grant/Award
   Number:TIN2016-77902-C3-1-P; Junta de Comunidades de Castilla-La Mancha,
   Grant/Award Number: SBPLY/21/180501/000148; Ministerio de Ciencia e
   Innovacion, Grant/Award Numbers: PID2019-106758GB-C33
   /AEI/10.13039/501100011033, PID2019-108915RB-I00
   /AEI/10.13039/501100011033
CR Airaj M, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3937
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Beulen Erik, 2019, Digital Services and Platforms. Considerations for Sourcing. 12th Global Sourcing Workshop 2018. Revised Selected Papers. Lecture Notes in Business Information Processing (LNBIP 344), P124, DOI 10.1007/978-3-030-15850-7_7
   Bezemer CP, 2019, PROCEEDINGS OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P45, DOI 10.1145/3297663.3309672
   Bobrov Evgeny, 2020, Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment. Second International Workshop, DEVOPS 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12055), P1, DOI 10.1007/978-3-030-39306-9_1
   Chen LP, 2017, J SYST SOFTWARE, V128, P72, DOI 10.1016/j.jss.2017.02.013
   Cico O, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110736
   Davis J., 2016, EFFECTIVE DEVOPS
   DBmaestro, 2019, DEVOPS DAT A DBMAEST
   DevOps Institute, 2019, UPSK ENT DEVOPS SKIL
   DORA, 2021, ACC STAT DEVOPS 2019
   Erich FMA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1885
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Forsgren Nicole., 2018, ACCELERATE SCI LEAN, V1st
   GitLab, 2019, GLOB DEV REP DEVSECO
   Hired, 2019, STAT SAL REP
   Humble Jez, 2011, Cutter IT Journal, V24, P6
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   IBA Industria Brasileira de Arvores, 2019, REP 2019
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Jabbari R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1957
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   JetBrains, 2019, STAT DEV EC 2019
   Jones Stephen, 2016, P 2 INT WORKSH QUAL, P7
   Kim Gene, 2016, The DevOps Handbook: How to Create WorldClass Agility, Reliability, and Security in Technology Organizations
   Knoche H, 2019, ENTERP MODELLING INF, V14, DOI 10.18417/emisa.14.1
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Linkedin, 2018, 33 MOST RECR JOBS
   Liu Bo-Han, 2019, Journal of Software, V30, P3206, DOI 10.13328/j.cnki.jos.005796
   Luz WP, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.083
   Lwakatare LE, 2016, P ANN HICSS, P5437, DOI 10.1109/HICSS.2016.671
   Muñoz M, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2342
   Perera P, 2016, INT CONF ADV ICT, P281, DOI 10.1109/ICTER.2016.7829932
   Rahman AAU, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P70, DOI [10.1109/CSED.2016.021, 10.1145/2896941.2896946]
   Schwaber K., 2021, SCRUM GUIDE
   Shahin M, 2017, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2017.18
   Shahin M, 2019, EMPIR SOFTW ENG, V24, P1061, DOI 10.1007/s10664-018-9651-4
   Smeds J, 2015, LECT NOTES BUS INF P, V212, P166, DOI 10.1007/978-3-319-18612-2_14
   Sonatype, 2020, DEVSECOPS COMM SURV
   Toh MZ, 2019, 2019 8TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2019), P173, DOI 10.1145/3316615.3316619
   Viggiato M., 2018, ARXIV180804836, P1
   Waseem M, 2017, 2017 24TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE WORKSHOPS (APSECW), P13, DOI 10.1109/APSECW.2017.18
   Yasar H, 2017, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2017), DOI 10.1145/3098954.3105819
NR 43
TC 1
Z9 1
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2023
VL 35
IS 12
DI 10.1002/smr.2534
EA JAN 2023
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ4E7
UT WOS:000918243100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Lim, CH
   Chin, JF
AF Lim, Chong Hon
   Chin, Jeng Feng
TI V-model with fuzzy quality function deployments for mobile application
   development
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE fuzzy quality function deployment; mobile application development;
   software development; V-model
ID REQUIREMENTS; NUMBER
AB Mobile application (app) development is a subset of software development distinguished by a short development life cycle, rapidly changing business requirements, mobile device technical specifications, and operating system compatibility. The study presents a V-model mobile app development technique that combines two fuzzy quality function deployment (FQFD) phases. In mobile app development, user requirements are often misunderstood, resulting in poor mobile app design. The research motivation for employing FQFD is to obtain more accurate deductions of human (user or design team) inputs affected by intrinsic vagueness and ambiguity in linguistics. The combination hence delivers synergistic benefits, where FQFDs more effectively solicits and breaks down the voice of the customer (VOC) and system requirements, and the V-model aligns the development to the broken-down requirements. The development of an online statistical process control app was demonstrated. FQFD structurally related user requirements, system requirements, and design strategies in the V-model's verification phases. The validation phases used test plans created during the verification phases to detect and correct programming errors. In the final validation stage, the focus group agreed that the mobile app met all of the user requirements. This study adds to the methodology's novelty by proposing and demonstrating the integration of the FQFD and V-model into the development of mobile apps. As a result of the limitation, other areas of software engineering, such as time and resource coordination and release management, are not considered.
C1 [Lim, Chong Hon; Chin, Jeng Feng] Univ Sains Malaysia, Sch Mech Engn, Engn Campus, George Town, Malaysia.
C3 Universiti Sains Malaysia
RP Chin, JF (corresponding author), Univ Sains Malaysia, Sch Mech Engn, Engn Campus, Nibong Tebal 14300, Penang, Malaysia.
EM chinjengfeng@usm.my
OI LIM, Chong Hon/0000-0002-6789-7735; Chin, Jeng Feng/0000-0002-9547-3673
FU Research University Grant (RUI), Universiti Sains Malaysia [8014069]
FX This work was supported by Research University Grant (RUI), Universiti
   Sains Malaysia (grant number 8014069).
CR Al-Ratrout S., 2019, International Journal of Software Engineering Applications, V10, P13, DOI [10.5121/ijsea.2019.10202, DOI 10.5121/IJSEA.2019.10202]
   Aldayel A., 2017, P INT C COMP DAT AN, P41, DOI DOI 10.1145/3093241.3093245
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Baldauf M, 2021, EXTENDED ABSTRACTS OF THE 2021 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'21), DOI 10.1145/3411763.3451774
   Capilla R, 2020, SOFTWARE PRACT EXPER, V50, P2145, DOI 10.1002/spe.2883
   Chan LK, 2005, OMEGA-INT J MANAGE S, V33, P119, DOI 10.1016/j.omega.2004.03.010
   Cui FM, 2020, ENTERP INF SYST-UK, V14, P463, DOI 10.1080/17517575.2018.1536929
   Dalimunthe AH., 2019, P SRIWIJAYA INT C IN, P73
   Dasanayake S, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2160
   Doyle F, 2019, PROCEDIA MANUF, V38, P540, DOI 10.1016/j.promfg.2020.01.068
   Durmus MS, 2018, INFORM-J COMPUT INFO, V42, P577, DOI 10.31449/inf.v42i4.2027
   Erdil NO, 2019, INT J QUAL SERV SCI, V11, P142, DOI 10.1108/IJQSS-02-2018-0008
   Essebaa I, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P528, DOI 10.5220/0006657805280535
   Facchinetti G, 1998, INT J INTELL SYST, V13, P613, DOI 10.1002/(SICI)1098-111X(199807)13:7<613::AID-INT2>3.0.CO;2-N
   Gani A.N., 2012, Applied Mathematical Sciences, V6, P525, DOI [DOI 10.13140/2.1.3405.8881, 10.1016/j.asoc.2009.08.021]
   Graessler I., 2017, 59 ILMENAU SCI C
   Graessler I., 2018, Proc. Int. Des. Conf. Des, V2, P747, DOI [DOI 10.21278/IDC.2018.0333, 10.21278/idc.2018.0333]
   Grinter R., 1998, Proceedings of Computer-Supported Cooperative Work, P393
   Han Y, 2016, IEICE T INF SYST, VE99D, P1776, DOI 10.1587/transinf.2015EDP7451
   Hao L., 2019, IOP C SERIES MAT SCI, V569, DOI [10.1088/1757-899X/569/5/052077, DOI 10.1088/1757]
   Hauser JohnR., 2010, WILEY INT ENCY MARKE, DOI DOI 10.1002/9781444316568.WIEM05023
   Jackson D., 2015, Onward! 2015 - Proceedings of the 2015 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software, Part of SPLASH 2015, P282, DOI [DOI 10.1145/2814228.2814248, 10.1145/2814228.2814248]
   Jain V., 2013, DISCOVERY ENG, V2, P24
   Jamkhaneh Hadi Balouei, 2021, International Journal of Productivity and Quality Management, V32, P413, DOI 10.1504/IJPQM.2021.114260
   Jamkhaneh HB, 2021, INT J HUM FACT ERGON, V8, P157, DOI 10.1504/IJHFE.2021.116067
   Jeong J., 2020, T KOREAN NUCL SOC VI
   Jia GZ, 2011, COMPUT IND ENG, V60, P445, DOI 10.1016/j.cie.2010.07.003
   Kang K. C., 1990, Technical Report
   Karsak EE, 2004, INT J PROD RES, V42, P3957, DOI 10.1080/00207540410001703998
   Kaur A, 2022, J KING SAUD UNIV-COM, V34, P1, DOI 10.1016/j.jksuci.2018.11.002
   Khan, 2020, INT J SOFTW ENG, V8, P16
   Lai-Kow Chan, 2002, Quality Engineering, V15, P23, DOI 10.1081/QEN-120006708
   Liu C, 2020, SOFTWARE PRACT EXPER, V50, P1778, DOI 10.1002/spe.2845
   Lu CF, 2019, TOTAL QUAL MANAG BUS, V30, P848, DOI 10.1080/14783363.2017.1343139
   Lu G., 2019, INT C MODELING SIMUL, P175
   Mathur S., 2010, Int. J. Comput. Appl, V1, P29, DOI 10.5120/266
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Montgomery D. C., 2019, Introduction to Statistical Quality Control
   Nuankaew P., 2021, Turk. J. Comput. Math. Educ, V12, P2204
   Patil M.V.S., 2018, IND ENG J, V11, P25, DOI DOI 10.26488/IEJ.11.1.1034
   Preston CC, 2000, ACTA PSYCHOL, V104, P1, DOI 10.1016/S0001-6918(99)00050-5
   Punz S, 2010, 11TH INTERNATIONAL DESIGN CONFERENCE (DESIGN 2010), VOL 1-3, P927
   Pyzdek T., 2010, The Six Sigma handbook: A complete guide for green belts, black belts, and managers at all levels
   Rachmaniah M., 2020, IOP Conference Series: Materials Science and Engineering, V874, DOI 10.1088/1757-899X/874/1/012020
   Rastogi V., 2015, INT J COMPUT SCI INF, V6, P168
   Shen XX, 2001, J INTELL MANUF, V12, P65, DOI 10.1023/A:1008955630880
   Taherdoost H, 2019, Int J Acad Res Mgmt, V8, P2296
   Thiyagarajan, 2020, JETIR, V7, P575
   Werth O, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P7461
   Zahedi M.R., 2011, ASIAN J SCI RES, V4, P114, DOI DOI 10.3923/AJSR.2011.114.128
NR 50
TC 1
Z9 1
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2023
VL 35
IS 1
DI 10.1002/smr.2518
EA OCT 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7M9LK
UT WOS:000870061300001
DA 2024-07-18
ER

PT J
AU Majumdar, S
   Bansal, A
   Das, PP
   Clough, PD
   Datta, K
   Ghosh, SK
AF Majumdar, Srijoni
   Bansal, Ayush
   Das, Partha Pratim
   Clough, Paul D.
   Datta, Kausik
   Ghosh, Soumya Kanti
TI Automated evaluation of comments to aid software maintenance
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE code comprehension; comment quality; knowledge graph; machine learning;
   ontology
ID INFORMATION
AB Approaches to evaluate comments based on whether they increase code comprehensibility for software maintenance tasks are important, but largely missing. We propose Comment Probe$$ Probe $$ for automated classification and quality evaluation of code comments of C codebases based on how they can help to understand existing code. We conduct surveys and document developers' perceptions on the type of comments that prove useful to maintaining software in the form of comment categories. A total of 20,206 comments have been collected from open-source Github projects and annotated with assistance from industry experts. We develop features to semantically analyze comments to locate concepts related to categories of usefulness. Additionally, features based on code and comment correlation are designed to infer whether the comment is also consistent and not superfluous. Using neural networks, comments are classified as useful, partially useful, and not useful with precision and recall scores of 86.27% and 86.42%, respectively. The proposed framework for comment quality evaluation incorporates industry practices and adds significant value to companies wanting to formulate better code commenting strategies. Furthermore, large codebases can be de-cluttered by removing comments not helpful in maintaining code.
C1 [Majumdar, Srijoni] Indian Inst Technol Kharagpur, Adv Technol Dev Ctr, Kharagpur, W Bengal, India.
   [Majumdar, Srijoni] TCG Crest Inst Adv Intelligence, Ctr Res & Educ, Kolkata, India.
   [Bansal, Ayush; Das, Partha Pratim; Ghosh, Soumya Kanti] Indian Inst Technol Kharagpur, Dept Comp Sci & Engn, Kharagpur, W Bengal, India.
   [Clough, Paul D.] Peak Indicators, Chesterfield, England.
   [Clough, Paul D.] Univ Sheffield, Informat Sch, Sheffield, S Yorkshire, England.
   [Datta, Kausik] A Siemens Business, Mentor, Kolkata, W Bengal, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kharagpur; Indian Institute of Technology System (IIT
   System); Indian Institute of Technology (IIT) - Kharagpur; University of
   Sheffield
RP Majumdar, S (corresponding author), Indian Inst Technol Kharagpur, Adv Technol Dev Ctr, Kharagpur, W Bengal, India.
EM srijoni.majumdar@iitkgp.ac.in
RI Das, Partha P/Q-8644-2016
OI majumdar, srijoni/0000-0003-3935-4087
FU National Digital Library of India, Ministry of Education, Government of
   India
FX National Digital Library of India, Ministry of Education, Government of
   India
CR AB MC, 2020, OPEN SOURCE
   ADLER PA, 1995, CONTEMP SOCIOL, V24, P420, DOI 10.2307/2076552
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Aman H, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P375, DOI 10.1109/SEAA.2017.23
   Amraii SA., 2007, XRDS CROSSROADS, V14, P1
   [Anonymous], 2011, International Journal of Artificial Intelligence Applications (IJAIA)
   [Anonymous], 2018, SENTENCE STATE LSTM
   [Anonymous], 2008, COLING 2008 P WORKSH
   [Anonymous], 2003, NEURAL COMPUT, DOI DOI 10.1111/J.1945-1474.2005.TB00541.X
   Arafat O., 2009, Proceedings of Proceedings of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications, P857, DOI [10.1145/1639950.1640047, DOI 10.1145/1639950.1640047]
   Bangerth W., 2020, OPEN SOURCE
   Basit TN, 2003, EDUC RES-UK, V45, P143, DOI 10.1080/0013188032000133548
   Beer B., 2018, Introducing GitHub: a non-technical guide
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Brooks R., 1978, 3rd International Conference on Software Engineering, P196
   Castells P, 2007, IEEE T KNOWL DATA EN, V19, P261, DOI 10.1109/TKDE.2007.22
   de Souza SCB., 2005, C DES COMM ACM, P68
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Fay MP, 2010, STAT SURV, V4, P1, DOI 10.1214/09-SS051
   Freitas JL, 2012, IEEE ANNU SOFTW ENG, P11, DOI 10.1109/SEW.2012.8
   Gisev N, 2013, RES SOC ADMIN PHARM, V9, P330, DOI 10.1016/j.sapharm.2012.04.004
   Glisczinski D, 2018, J TRANSFORM EDUC, V16, P175, DOI 10.1177/1541344618777367
   Gonzalez-Perez C., 2010, EVALUATION NOVEL APP
   Graves A, 2012, STUD COMPUT INTELL, V385, P15
   Hagan MT, 1997, NEURAL NETWORK DESIG
   Halkude SA., 2019, INT C INTERACTIVE CO, P946
   Haouari D, 2011, INT SYMP EMP SOFTWAR, P137, DOI 10.1109/ESEM.2011.22
   Irwin JuliaF., 2013, Making the World Safe: The American Red Cross and a Nation's Humanitarian Awakening
   Jiang Zhen Ming, 2006, MSR '06: Proceedings of the 2006 international workshop on Mining software repositories, P179, DOI DOI 10.1145/1137983.1138030
   Joaquim, 2012, TYPEFORM ONLINE SURV
   Kernighan Brian W., 2006, The C Programming Language
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kotrlik J., 2001, INF TECHNOL LEARN TO, V19, P43, DOI 10.1067/mge.2001.112642
   Krancher O, 2015, P ANN HICSS, P4406, DOI 10.1109/HICSS.2015.528
   Kvale S., 2007, Doing and Interview Study, P34, DOI DOI 10.4135/9781849208963.N4
   Lample M., 2016, P NAACL HLT, P260, DOI DOI 10.18653/V1/N16-1030
   Lattner C, 2005, LECT NOTES COMPUT SC, V3602, P15, DOI 10.1007/11532378_2
   Lee DK, 2016, KOREAN J ANESTHESIOL, V69, P555, DOI 10.4097/kjae.2016.69.6.555
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Liu MW, 2020, PROC IEEE INT CONF S, P866, DOI 10.1109/ICSME46990.2020.00115
   Majumdar Srijoni, 2020, Advanced Computing and Systems for Security. Volume Twelve. Advances in Intelligent Systems and Computing (AISC 1136), P29, DOI 10.1007/978-981-15-2930-6_3
   Majumdar S., 2022, COMMENTPROBE TOOL QU
   Majumdar S., 2022, PRETRAINED WORD EMBE
   Majumdar S., 2022, OPEN SOURCE
   Majumdar S, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P97, DOI 10.1109/QRS.2019.00026
   Management S.A.F.P, 2003, OPEN SOURCE
   Martin J, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P200, DOI 10.1109/CSMR.2001.914988
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Noy N., 2001, ONTOLOGY DEV
   O'Brien MichaelP., 2003, SOFTWARE COMPREHENSI
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Peng, 2009, INT J ADV INF SCI TE, V13, P20
   Peng YF, 2019, SIGBIOMED WORKSHOP ON BIOMEDICAL NATURAL LANGUAGE PROCESSING (BIONLP 2019), P58
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Rahman MM, 2017, IEEE WORK CONF MIN S, P215, DOI 10.1109/MSR.2017.17
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Ratol IK, 2017, IEEE INT CONF AUTOM, P112, DOI 10.1109/ASE.2017.8115624
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Rugaber S, 2000, ANN SOFTW ENG, V9, P143, DOI 10.1023/A:1018976708691
   Schalnat GE., 2020, OPEN SOURCE
   Singh AK, 2019, BIOFILMS IN HUMAN DISEASES: TREATMENT AND CONTROL, P71, DOI 10.1007/978-3-030-30757-8_6
   Smith TC, 2016, METHODS MOL BIOL, V1418, P353, DOI 10.1007/978-1-4939-3578-9_17
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Stenberg D., 2020, OPEN SOURCE
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Tan L., 2007, C PROGRAMMING LANGUA, P20
   Team CDT., 2019, OPEN SOURCE
   Tongco M. D. C., 2007, Ethnobotany Research and Applications, V5, P147
   Van Kemenade E, 2008, QUAL HIGH EDUC, V14, P175, DOI 10.1080/13538320802278461
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Ying A. T., 2005, ACM SIGSOFT software engineering notes, V30, P1
NR 73
TC 1
Z9 1
U1 2
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2022
VL 34
IS 7
AR e2463
DI 10.1002/smr.2463
EA MAY 2022
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2Q5LR
UT WOS:000800460000001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Singh, NK
   Aït-Ameur, Y
   Mendil, I
   Méry, D
   Navarre, D
   Palanque, P
   Pantel, M
AF Singh, Neeraj Kumar
   Ait-Ameur, Yamine
   Mendil, Ismail
   Mery, Dominique
   Navarre, David
   Palanque, Philippe
   Pantel, Marc
TI F3FLUID: A formal framework for developing safety-critical interactive
   systems in FLUID
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE animation; Event-B; formal methods; interactive cooperative objects
   (ICO); interactive system; refinement and proofs; validation;
   verification
ID VERIFICATION; COOPERATION; SOFTWARE; LANGUAGE; DESIGN; MODEL
AB This paper proposes a unified formal framework, Formal Framework For FLUID (F3FLUID), for the development of safety-critical interactive systems. This framework is based on the Formal Language of User Interface Design (FLUID) pivot modeling language defined in the FORMEDICIS project, which enables high-level system requirements for interactive systems to be specified in the FLUID language. This modeling language is specifically designed for handling concepts of safety-critical interactive systems, including domain knowledge. A FLUID model is used as a source model for the generation of several target models in different modeling languages to support the formal verification methods, such as theorem proving and model checking. In this paper, we use the Event-B modeling language for checking functional behaviors, user interactions, safety properties, and domain properties. A FLUID model is transformed into an Event-B model, and then, the Rodin tool is used to check the internal consistency with respect to the given safety properties. We illustrate the operational semantics of the FLUID language, and the transformation strategy of FLUID models into Event-B models, including the tool development. We use the ProB model checker to analyze the temporal properties and to animate the formalized specification. In addition, an interactive cooperative objects (ICOs) model is derived from the Event-B model for animation, visualization and validation of dynamic behaviors, visual properties, and task analysis. Finally, an industrial case study, complying with the ARINC 661 standard, Multi-Purpose Interactive Applications (MPIA), is used to illustrate the effectiveness of our F3FLUID framework for the development of safety-critical interactive systems.
C1 [Singh, Neeraj Kumar; Ait-Ameur, Yamine; Mendil, Ismail; Pantel, Marc] Univ Toulouse, INPT ENSEEIHT IRIT, 2 Rue Charles Camichel,BP 7122, F-31071 Toulouse 7, France.
   [Mery, Dominique] Univ Lorraine, LORIA, Nancy, France.
   [Navarre, David; Palanque, Philippe] Univ Toulouse, IRIT, Toulouse, France.
C3 Universite de Lorraine; Universite de Toulouse; Universite Toulouse III
   - Paul Sabatier; Universite Federale Toulouse Midi-Pyrenees (ComUE);
   Institut National Polytechnique de Toulouse
RP Singh, NK (corresponding author), Univ Toulouse, INPT ENSEEIHT IRIT, 2 Rue Charles Camichel,BP 7122, F-31071 Toulouse 7, France.
EM neeraj.singh@toulouse-inp.fr
RI Palanque, Philippe/IAM-9981-2023; Navarre, David/HMD-6597-2023; Singh,
   Neeraj Kumar/AAJ-3674-2021
OI Palanque, Philippe/0000-0002-5381-971X; Navarre,
   David/0000-0002-2900-2056; Singh, Neeraj Kumar/0000-0002-7894-3354
FU Agence Nationale de la Recherche; FORmal MEthods for the Development and
   the engineering of Critical Interactive Systems [ANR-16-CE25-0007];
   Agence Nationale de la Recherche (ANR) [ANR-16-CE25-0007] Funding
   Source: Agence Nationale de la Recherche (ANR)
FX Agence Nationale de la Recherche; FORmal MEthods for the Development and
   the engineering of Critical Interactive Systems, Grant/Award Number:
   ANR-16-CE25-0007
CR Abowd G. D., 1995, DIS '95. Symposium on Designing Interactive Systems: Processes, Practices, Medthods, and Techniques. Conference Proceedings, P219, DOI 10.1145/225434.225459
   Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial J-R., 2009, PROPOSALS MATH EXTEN
   Accot J., 2006, FORMAL TRANSDUCERS M, P143
   Ait-Ameur Yamine, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P425, DOI 10.1007/978-3-319-91271-4_35
   Ait-Ameur Y., 2006, International Journal on Software Tools for Technology Transfer, V8, P547, DOI 10.1007/s10009-006-0008-8
   Ait-Ameur Y, 2000, LECT NOTES COMPUT SC, V1945, P136
   Ait-Ameur Y., 1998, P 5 INT EUR WORKSH D, P51
   Ait-Ameur Y., 1998, ENG HUM COMP INT IFI, P91
   Ait-Ameur Y., 2008, RSTI, V13, P127
   Ait-Ameur Y., 2006, P 18 INT C ASS FRANC, P123
   Ait-Ameur Y, 2016, SCI COMPUT PROGRAM, V121, P100, DOI 10.1016/j.scico.2015.12.004
   [Anonymous], 2001, LNCS, DOI DOI 10.1007/3-540-45522-16
   [Anonymous], 2005, 6612 ARINC
   [Anonymous], 2015, PROC EICS 2015
   [Anonymous], 2013, Implementing Domain-Specific Languages with Xtext and Xtend
   [Anonymous], 2011, DO333 RTCA INC
   [Anonymous], 2002, 661 ARINC
   [Anonymous], 2012, DO178C: Software Considerations in Airborne Systems and Equipment Certification, RTCA Std
   BACK RJR, 1988, ACM T PROGR LANG SYS, V10, P513, DOI 10.1145/48022.48023
   Barboni E., 2005, PETRI NET CENTERED V
   Barboni E, 2014, SCI COMPUT PROGRAM, V86, P3, DOI 10.1016/j.scico.2013.04.001
   Bastide R, 2003, INTERACT COMPUT, V15, P309, DOI 10.1016/S0953-5438(03)00011-0
   Bastide R., 2002, Proceedings of the CHI'02 Extended Abstracts on Human Factors in Computing Systems, P516, DOI DOI 10.1145/506443.506457
   Bolton M.L., 2009, P 1 NASA FORMAL METH, P6
   Bolton ML, 2011, IEEE T SYST MAN CY A, V41, P961, DOI 10.1109/TSMCA.2011.2109709
   Brunel J, 2018, IEEE INT CONF AUTOM, P884, DOI 10.1145/3238147.3240475
   Butler Michael, 2013, Theories of Programming and Formal Methods. Essays Dedicated to Jifeng He on the Occasion of His 70th Birthday. LNCS 8051, P67, DOI 10.1007/978-3-642-39698-4_5
   Campos JC, 2008, LECT NOTES COMPUT SC, V5136, P72, DOI 10.1007/978-3-540-70569-7_6
   Chebieb A, 2018, FRONT COMPUT SCI-CHI, V12, P351, DOI 10.1007/s11704-016-5460-3
   Cronel M., 2018, International Conference on Human-Centred Software Engineering, P109, DOI DOI 10.1007/978-3-030-05909-5_7
   Curzon P., 2014, 2 WORKSH VER ASS VER
   d'Ausbourg B, 1998, PROC INT CONF SOFTW, P219, DOI 10.1109/ICSE.1998.671121
   d'Ausbourg B, 1998, SPRING COMP SCI, P242
   Diaper D., 2004, The handbook of task analysis for human-computer interaction
   Durrieu G., 1996, P EUR WORKSH DSV IS
   EB2ALL, 2011, AUT COD GEN TOOL EV
   Eijk P.V., 1989, FORMAL DESCRIPTION T
   Fahssi R, 2015, LECT NOTES COMPUT SC, V9299, P192, DOI 10.1007/978-3-319-22723-8_16
   Fayollas C, 2017, HUM-COMPUT INT-SPRIN, P465, DOI 10.1007/978-3-319-51838-1_17
   Ge N., 2017, 11 INT S THEOR ASP S, P1
   Geniet R, 2018, LECT NOTES COMPUT SC, V11176, P240, DOI 10.1007/978-3-030-04771-9_19
   Hacid K, 2016, LECT NOTES COMPUT SC, V9952, P340, DOI 10.1007/978-3-319-47166-2_24
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Hamon A., 2013, P 5 ACM SIGCHI S ENG, P207, DOI DOI 10.1145/2494603.2480311
   Harrison M. D., 2014, 4 INT S FDN HEALTHC
   Harrison MD, 2017, IEEE T HUM-MACH SYST, V47, P834, DOI 10.1109/THMS.2017.2717910
   Henry T. R., 1990, UIST. Third Annual Symposium on User Interface Software and Technology. Proceedings of the ACM SIGGRAPH Symposium, P112, DOI 10.1145/97924.97938
   Hoare CAR., 1985, Communicating Sequential Processes
   ISO, 9241210 ISO
   Jambon F., 2002, COMPUT AIDED DESIGN, V3, P51
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Lecrubier V., 2016, THESIS U TOULOUSE
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Magnaudet Mathieu, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3229094
   Martinie C., 2013, Proceedings of the 31st European Conference on Cognitive Ergonomics, P1
   Mery D., 2011, P 2 S INF COMM TECHN, P179, DOI DOI 10.1145/2069216.2069252
   Milner R, 1982, CALCULUS COMMUNICATI
   Morris M. R., 2006, P SIGCHI C HUM FACT, P1201, DOI [https://doi.org/10.1145/1124772.1124952, DOI 10.1145/1124772.1124952]
   Myers B.A., 1993, WHY ARE HUMAN COMPUT
   Navarre D., 2001, Proceedings 12th International Workshop on Rapid System Prototyping. RSP 2001, P136, DOI 10.1109/IWRSP.2001.933851
   Navarre D, 2009, ACM T COMPUT-HUM INT, V16, DOI 10.1145/1614390.1614393
   Palanque P., 1996, Engineering for Human-Computer Interaction. Proceedings of the IFIP TC2/WG2.7 Working Conference on Engineering for Human-Computer Interaction, P189
   Palanque P., 1994, INTERACTIVE SYSTEMS, P383
   Palanque P. A., 1993, Advanced Information Systems Engineering 5th International Conference. CAiSE '93 Proceedings, P569
   Palanque P, 2009, LECT NOTES COMPUT SC, V5610, P667, DOI 10.1007/978-3-642-02574-7_75
   Paterno F, 1997, HUMAN-COMPUTER INTERACTION - INTERACT '97, P362
   Plotkin G. D., 1981, A structural approach to operational semantics
   PNUELI A, 1986, LECT NOTES COMPUT SC, V224, P510
   RAMAMOORTHY CV, 1980, IEEE T SOFTWARE ENG, V6, P440, DOI 10.1109/TSE.1980.230492
   Reisig W., 2013, Understanding Petri Nets-Modeling Techniques, Analysis Methods, Case Studies
   Silva JL., 2013, ELECTR COMMUN, V69, P15, DOI [10.14279/tuj.eceasst.69.967, DOI 10.14279/TUJ.ECEASST.69.967]
   Singh N. K., 2014, LNCS, P460
   Singh NK, 2018, IEEE INT C ENG COMP, P136, DOI 10.1109/ICECCS2018.2018.00022
   Singh NK., 2019, FORMAL DEV MULTIPURP
   Singh NK., 2013, USING EVENT B CRITIC, DOI [10.1007/978-1-4471-5260-6, DOI 10.1007/978-1-4471-5260-6]
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
NR 78
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2023
VL 35
IS 7
SI SI
AR e2439
DI 10.1002/smr.2439
EA MAR 2022
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L0RH3
UT WOS:000768304300001
DA 2024-07-18
ER

PT J
AU Yang, K
   Yu, HQ
   Fan, GS
   Yang, XG
   Huang, ZJ
AF Yang, Kang
   Yu, Huiqun
   Fan, Guisheng
   Yang, Xingguang
   Huang, Zijie
TI A graph sequence neural architecture for code completion with semantic
   structure features
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE code completion; deep learning; program comprehension
AB Code completion plays an important role in intelligent software development for accelerating coding efficiency. Recently, the prediction models based on deep learning have achieved good performance in code completion task. However, the existing models cannot avoid three drawbacks: (i) In the existing models, the code representation loses the information (parent-child information between nodes) and lacks many effective features (orientation between nodes). (ii) The known code structure information is not fully utilized, which will cause the model to generate completely irrelevant results. (iii) Simple sequence modeling ignores repeated patterns and structural information. Besides, previous works cannot capture the characteristics of correlation and directionality between nodes. In this paper, we propose a Code Completion approach named CC-GGNN, which is graph model based on Gated Graph Neural Networks (GGNNs) to address the problems. We introduce a new architecture to obtain the effective code features from code representation. In order to utilize the known information, we propose Classification Mechanism, which classifies the representation of the node using the known parent node and constructs training graph in the model. The experimental results show that our model outperforms the state-of-the-art methods MRR@5 at most 9.2% and ACC at most 11.4% in datasets.
C1 [Yang, Kang; Yu, Huiqun; Fan, Guisheng; Yang, Xingguang; Huang, Zijie] East China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai, Peoples R China.
   [Yu, Huiqun] Shanghai Comp Software Tech Dev Ctr, Shanghai Key Lab Comp Software Evaluating & Testi, Shanghai, Peoples R China.
   [Fan, Guisheng] Shenergy Grp Co Ltd, Shanghai Engn Res Ctr Smart Energy, Shanghai, Peoples R China.
C3 East China University of Science & Technology
RP Yu, HQ; Fan, GS (corresponding author), East China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai, Peoples R China.
EM yhq@ecust.edu.cn; gsfan@ecust.edu.cn
RI Huang, Zijie/JUF-4746-2023
OI Huang, Zijie/0000-0002-8911-9889; Yang, Xingguang/0000-0001-7489-2265
FU National Natural Science Foundation of China [61772200]; Natural Science
   Foundation of Shanghai [21ZR1416300]
FX National Natural Science Foundation of China, Grant/Award Number:
   61772200; Natural Science Foundation of Shanghai, Grant/Award Number:
   21ZR1416300
CR Ahmad Wasi Uddin, 2021, NAACL
   Allamanis M., 2018, INT C LEARN REPR ICL
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P472, DOI 10.1145/2635868.2635901
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   Alon U, STRUCTURAL LANGUAGE
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   Beck D, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P273
   Bhoopchand, 2016, ARXIV161108307
   Bielik P, 2016, PR MACH LEARN RES, V48
   Brockschmidt M., 2019, ICLR
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Bruna J., 2014, P INT C LEARN REPR
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Chung Junyoung, 2014, ARXIV14123555
   Dai ZH, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P2978
   Daya G., 2021, 9 INT C LEARN REPR, P1536
   Defferrard M, 2016, ADV NEUR IN, V29
   Fernandes P, 2019, 7 INT C LEARNING REP
   Franks C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P705, DOI 10.1109/ICSE.2015.228
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A., 2016, 34 INT C SOFTWARE EN, P131
   Kanade A, 2020, PR MACH LEARN RES, V119
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   Kipf T.N., 2017, P INT C LEARN REPR S
   Li J, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4159
   Li Y., 2016, 4 INT C LEARNING REP
   Liu F, 2020, IEEE INT CONF AUTOM, P473, DOI 10.1145/3324884.3416591
   Liu F, 2020, INT C PROGRAM COMPRE, P37, DOI 10.1145/3387904.3389261
   Malhotra P., 2015, ESANN, V89, P89
   Nguyen TT., 2013, OINT M EUR SOFTW ENG, P532
   Perozzi B, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P701, DOI 10.1145/2623330.2623732
   Rahman M, 2019, PROC INT CONF SOFTW, P37, DOI 10.1109/ICSE.2019.00022
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P731, DOI 10.1145/3022671.2984041
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Roos P, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P757, DOI 10.1109/ICSE.2015.240
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Song Dawn, 2016, Neural code completion
   Svyatkovskiy Alexey, 2020, ESEC/FSE 2020: Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1433, DOI 10.1145/3368089.3417058
   Svyatkovskiy A, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2727, DOI 10.1145/3292500.3330699
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Veselin Raychev., 2015, 150K PYTHON DATASET, DOI [10.1145/2676726.2677009, DOI 10.1145/2676726.2677009]
   Wang DX, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1225, DOI 10.1145/2939672.2939753
   Yamaguchi F., 2019, 33 C ART INT 2019 9, P346
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yanlin W., 2021, 35 AAAI C ART INT 33
   Yue W., 2021, P 2021 C EMP METH NA
   Zhangyin F., P 2020 C EMP METH NA, P1536
   Zhou YQ, 2019, ADV NEUR IN, V32
NR 53
TC 3
Z9 3
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2022
VL 34
IS 1
AR e2414
DI 10.1002/smr.2414
EA DEC 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YI2EU
UT WOS:000736478600001
DA 2024-07-18
ER

PT J
AU Gökalp, MO
   Gökalp, E
   Gökalp, S
   Koçyigit, A
AF Gokalp, Mert Onuralp
   Gokalp, Ebru
   Gokalp, Selin
   Kocyigit, Altan
TI The development of data analytics maturity assessment framework: DAMAF
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE assessment framework; business intelligence; data analytics; maturity
   assessment; maturity model
ID ASSESSMENT MODEL; GUIDANCE
AB Today, data analytics plays a vital role in attaining competitive advantage, generating business value, and driving revenue streams for organizations. Thus, the organizations pay significant attention to improve their data analytics maturity. Nevertheless, the existing literature is dramatically limited in proposing a comprehensive roadmap to assist organizations for this scope. Thus, this study focuses on developing data analytics maturity assessment framework (DAMAF) that evaluates the organizational data analytics maturity in a staged manner from maturity level 0: incomplete to maturity level 5: optimizing. The DAMAF comprises the nine different data analytics attributes to address the specific needs of each data analytics maturity level. Accordingly, it aims to support organizations in assessing their current data analytics maturity, determining organizational gaps in data analytics, and preparing an extensive roadmap and suggestions for data analytics maturity improvement. In this research, we employed the DAMAF in an organization as a case study to evaluate its applicability and usefulness. The results showed that DAMAF properly reveals the data analytics gaps and provides a structured roadmap for continuously advancing the data analytics maturity of an organization.
C1 [Gokalp, Mert Onuralp; Gokalp, Selin; Kocyigit, Altan] Middle East Tech Univ, Informat Inst, TR-06800 Ankara, Turkey.
   [Gokalp, Ebru] Hacettepe Univ, Dept Comp Engn, Ankara, Turkey.
   [Gokalp, Ebru] Univ Cambridge, Inst Mfg, Cambridge, England.
C3 Middle East Technical University; Hacettepe University; University of
   Cambridge
RP Gökalp, MO (corresponding author), Middle East Tech Univ, Informat Inst, TR-06800 Ankara, Turkey.
EM gmert@metu.edu.tr
RI GOKALP, Ebru/S-5921-2016; Kocyigit, Altan/S-6347-2016; GOKALP,
   Ebru/AAZ-7756-2020
OI GOKALP, Ebru/0000-0002-4030-2447; GOKALP, Ebru/0000-0002-4030-2447;
   Gokalp, Selin/0000-0003-2524-2762
CR Association Analytics, DAMM DAT AN MAT MOD
   Barafort B, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.1984
   Blast Analytics and Marketing, AN MAT ASS
   Cao LB, 2017, COMMUN ACM, V60, P59, DOI 10.1145/3015456
   Cardinal Path, BENCHMARKING YOUR OR
   Carvalho JV, 2019, INT J INFORM MANAGE, V46, P278, DOI 10.1016/j.ijinfomgt.2018.07.001
   Çoban S, 2018, IEEE INT CONF SERV, P93, DOI 10.1109/SOCA.2018.00021
   Cosic R., 2012, Proceedings of the 23rd Australasian Conference on Information Systems 2012, P1
   Davenport ThomasH., 2010, Analytics at Work: Smarter Decisions, Better Results
   Demir?rs O, 2014, CCIS, P94, DOI DOI 10.1007/978-3-319-13036-1_9
   Dhanuka V, HORTONWORKS BIG DATA
   Eren PE., 2018, CURRENT EMERGING MHE, P241, DOI [10.1007/978-3-319-73135-3_15, DOI 10.1007/978-3-319-73135-3_15]
   Gökalp E, 2021, COMPUT IND, V132, DOI 10.1016/j.compind.2021.103522
   Gökalp E, 2017, COMM COM INF SC, V770, P128, DOI 10.1007/978-3-319-67383-7_10
   Gökalp MO, 2021, IET SOFTW, V15, P376, DOI 10.1049/sfw2.12033
   Gökalp MO, 2021, J MANUF SYST, V60, P527, DOI 10.1016/j.jmsy.2021.07.011
   Gökalp MO, 2020, COMM COM INF SC, V1251, P617, DOI 10.1007/978-3-030-56441-4_46
   Gökalp MO, 2016, 2016 INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE & COMPUTATIONAL INTELLIGENCE (CSCI), P431, DOI [10.1109/CSCI.2016.0088, 10.1109/CSCI.2016.87]
   Huner KaiM., 2009, Proceedings of the 2009 ACM symposium on Applied Computing, P231, DOI [10.1145/1529282.1529334, DOI 10.1145/1529282.1529334]
   Institute S, 5 STEPS AN MAT
   ISO/IEC, 330202015 ISOIEC
   ISO/IEC, 33004 ISOIEC
   ISO/IEC, 330022015 ISOIEC
   Johansen, SPI MANIFESTO EUR SY
   Joshi R., MODELING GLOBAL EC I
   Khan AA, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.1988
   Król K, 2020, INFORMATION, V11, DOI 10.3390/info11030142
   Lismont J, 2017, INT J INFORM MANAGE, V37, P114, DOI 10.1016/j.ijinfomgt.2016.12.003
   Lukman T, 2011, INFORM SYST MANAGE, V28, P211, DOI 10.1080/10580530.2011.585583
   Messnarz R, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2373
   Mouhib S, 2020, 2020 FOURTH INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING IN DATA SCIENCES (ICDS), DOI 10.1109/icds50568.2020.9268720
   Muñoz M, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2342
   Perales-Manrique J., 2019, 2019 IEEE Sciences and Humanities International Research Conference (SHIRCON), P1, DOI DOI 10.1109/SHIRCON48091.2019.9024885
   Raber D., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P4219, DOI 10.1109/HICSS.2012.630
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Stirling K, 2018, AM C INF SYST 2018 D, P16
   Stodder D, GUIDE ACHIEVING BIG
   Sulaiman H, 2015, 2015 4TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND COMPUTER SYSTEMS (ICSECS), P61, DOI 10.1109/ICSECS.2015.7333084
   Varkoi T, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2177
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Zaki, 2019, 2019 1 INT INF SOFTW, P1, DOI [10.1109/UBMYK48245.2019.8965572, DOI 10.1109/UBMYK48245.2019.8965572]
NR 41
TC 1
Z9 1
U1 1
U2 28
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2023
VL 35
IS 8
SI SI
AR e2415
DI 10.1002/smr.2415
EA DEC 2021
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O5DX6
UT WOS:000729315500001
DA 2024-07-18
ER

PT J
AU Poth, A
   Kottke, M
   Mahr, T
   Riel, A
AF Poth, Alexander
   Kottke, Mario
   Mahr, Torsten
   Riel, Andreas
TI Teamwork quality in technology-driven product teams in large-scale agile
   organizations
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile Teamwork Quality (aTWQ); agile transformation; large-scaling
   agile; quality assurance (QA); Technical Team Maturity (TTM)
ID MANAGEMENT; SUCCESS
AB The maturity of teams is related to the specific solutions they are building and maintaining. Every team needs generic skills and capabilities for successful teamwork. However, depending on the used technology, particular skills and qualifications are required to form a mature team to handle the solution-related products and services adequately. Especially in agile organizations, autonomous teams have the responsibility for their solutions and their team development. To foster transparency and structured team development, the Technical Team Maturity (TTM) approach is presented. The TTM approach shapes and models specific technologies, for example, cloud technology demands about team skills and capabilities to form a reliable delivery team. The approach is divided into a technology-specific profile and an evaluation model to support active usage in teams. The profile focuses on abstract and generic technology aspects. The evaluation model validates against the profile with a state-of-the-art focus about the technology application to determine the maturity. The different maturity levels are mapped to belts-as a gamification aspect to foster continuous improvement in the teams with this benchmark. TTM is evaluated in the enterprise context of Volkswagen AG and Volkswagen Financial Services AG. It provides insights into the effectiveness of this approach in heterogeneous multiteam settings and its strengths, weaknesses, and limitations.
C1 [Poth, Alexander; Kottke, Mario] Volkswagen AG, Berliner Ring 2, D-38436 Wolfsburg, Germany.
   [Mahr, Torsten] Volkswagen Financial Serv AG, Braunschweig, Germany.
   [Riel, Andreas] Grenoble Alps Univ, Grenoble INP, CNRS, GSCOP, Grenoble, France.
C3 Volkswagen; Volkswagen Germany; Volkswagen; Volkswagen Germany;
   Communaute Universite Grenoble Alpes; Universite Grenoble Alpes (UGA);
   Institut National Polytechnique de Grenoble; Centre National de la
   Recherche Scientifique (CNRS)
RP Poth, A (corresponding author), Volkswagen AG, Berliner Ring 2, D-38436 Wolfsburg, Germany.
EM alexander.poth@volkswagen.de
OI Riel, Andreas/0000-0001-9859-019X
CR Aksekili Asli Yuksel, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P3, DOI 10.1007/978-3-030-67084-9_1
   Anderson N., 1996, EUR J WORK ORGAN PSY, V5, P53, DOI DOI 10.1080/13594329608414840
   [Anonymous], 2016, DRIVING FUTURE IT IN
   [Anonymous], 2021, SECURITY IDENTITY CO
   [Anonymous], 2019, USING BUSINESS METRI
   [Anonymous], 2021, CLOUD CONTROLS MATRI
   [Anonymous], 2021, BSI SETZT STANDARD M
   [Anonymous], 2014, Spiral Dynamics: Mastering Values, Leadership and Change
   [Anonymous], 2016, OPENSTACK CARS OPENS
   [Anonymous], 2020, AZURE APPL ARCHITECT
   [Anonymous], ISO/IEC 25010:2011
   [Anonymous], 270002018 ISOIEC
   [Anonymous], 2018, VOLKSWAGEN MICROSOFT
   [Anonymous], 2001, Manifesto for Agile Software Development
   [Anonymous], 330012015 ISOIEC
   [Anonymous], 2019, VOLKSWAGEN AMAZON WE
   Automotive SPICE&REG;, PROC REF MOD PROC AS
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Britto R., 2012, Proc. CEC, Brisbane, P1
   Fatema I, 2017, ASIA PAC SOFWR ENG, P737, DOI 10.1109/APSEC.2017.95
   Fowler M., 2001, SOFTWARE DEV, V9, p28
   Gao J, 2019, SUSTAINABILITY-BASEL, V11, DOI 10.3390/su11041195
   Garrison G, 2015, INT J INFORM MANAGE, V35, P377, DOI 10.1016/j.ijinfomgt.2015.03.001
   Gomes A., 2020, EVALUATING RELATIONS
   Gren L, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P1, DOI 10.1109/SEAA.2015.31
   Hamdaqa Mohammad, 2011, Proceedings of the 1st International Conference on Cloud Computing and Services Science. CLOSER 2011, P98
   Hevner R., 2007, Scandinavian Journal of Information Systems, V19, P4
   Hoegl M, 2001, ORGAN SCI, V12, P435, DOI 10.1287/orsc.12.4.435.10635
   Lindsjorn Y, 2018, LECT NOTES BUS INF P, V314, P267, DOI 10.1007/978-3-319-91602-6_19
   Lindvall M, 2004, COMPUTER, V37, P26, DOI 10.1109/MC.2004.231
   LONG D, 2020, P 2020 CHI C HUMAN F, P1
   Lu A., 2019, ARE CO ADDRESSING DE
   Lu Y, 2011, MIS QUART, V35, P931
   Moe NB, 2009, LECT NOTES BUS INF P, V31, P114
   Otto B, 2012, INF SYST E-BUS MANAG, V10, P395, DOI 10.1007/s10257-011-0178-0
   Pepper MPJ, 2010, INT J QUAL RELIAB MA, V27, P138, DOI 10.1108/02656711011014276
   Poth A., 2021, MAKE PRODUCT SERVICE
   Poth A., 2020, SYSTEMS SOFTWARE SER, V1251
   Poth A, 2021, COMM COM INF SC, V1442, P88, DOI 10.1007/978-3-030-85521-5_7
   Poth A, 2021, J UNIVERS COMPUT SCI, V27, P868, DOI 10.3897/jucs.71770
   Poth A, 2021, IET SOFTW, V15, P443, DOI 10.1049/sfw2.12036
   Poth A, 2020, HUM SYST MANAGE, V39, P573, DOI 10.3233/HSM-201049
   Poth A, 2020, LECT NOTES BUS INF P, V396, P101, DOI 10.1007/978-3-030-58858-8_11
   Poth A, 2020, LECT NOTES BUS INF P, V396, P111, DOI 10.1007/978-3-030-58858-8_12
   Ramírez-Mora SL, 2018, PROC IEEE INT CONF S, P732, DOI 10.1109/ICSME.2018.00091
   Sabillon R, 2017, 2017 INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS AND COMPUTER SCIENCE (INCISCOS), P253, DOI 10.1109/INCISCOS.2017.20
   Shewchuk JP, 1998, INT FED INFO PROC, V2, P143
   Silva Manuel, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P1, DOI 10.1145/3422392.3422397
   Solomos D, 2021, COMM COM INF SC, V1442, P640, DOI 10.1007/978-3-030-85521-5_43
   Strom PS, 2011, EDUC RES EVAL, V17, P233, DOI 10.1080/13803611.2011.620345
   Wheelan SA, 1996, SMALL GR RES, V27, P143, DOI 10.1177/1046496496271007
   Whysall Z, 2019, J MANAG DEV, V38, P118, DOI 10.1108/JMD-06-2018-0181
   Willey K., 2006, AAEE ANN C AUSTR ASS
NR 53
TC 3
Z9 3
U1 2
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2023
VL 35
IS 8
SI SI
AR e2388
DI 10.1002/smr.2388
EA OCT 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O5DX6
UT WOS:000703661900001
DA 2024-07-18
ER

PT J
AU Hosni, M
   Idri, A
   Abran, A
AF Hosni, Mohamed
   Idri, Ali
   Abran, Alain
TI On the value of filter feature selection techniques in homogeneous
   ensembles effort estimation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE ensemble effort estimation; feature selection; filter; machine learning;
   software development effort estimation
AB Software development effort estimation (SDEE) remains as the principal activity in software project management planning. Over the past four decades, several methods have been proposed to estimate the effort required to develop a software system, including more recently machine learning (ML) techniques. Because ML performance accuracy depends on the features that feed the ML technique, selecting the appropriate features in the preprocessing data step is important. This paper investigates three filter feature selection techniques to check the predictive capability of four single ML techniques: K-nearest neighbor, support vector regression, multilayer perceptron, and decision trees and their homogeneous ensembles over six well-known datasets. Furthermore, the single and ensembles techniques were optimized using the grid search optimization method. The results suggest that the three filter feature selection techniques investigated improve the reasonability and the accuracy performance of the four single techniques. Moreover, the homogeneous ensembles are statistically more accurate than the single techniques. Finally, adopting a random process (i.e., random subspace method) to select the inputs feature for ML technique is not always effective to generate an accurate homogeneous ensemble.
C1 [Hosni, Mohamed; Idri, Ali] Mohammed V Univ, Software Project Management Res Team, ENSIAS, Rabat, Morocco.
   [Hosni, Mohamed] Moulay ISMAIL Univ, MOSI Res Team, Lab Math Modeling Simulat & Smart Syst L2M3S, ENSAM Meknes, Meknes, Morocco.
   [Abran, Alain] Ecole Technol Super, Dept Software Engn, Montreal, PQ, Canada.
C3 Mohammed V University in Rabat; Moulay Ismail University of Meknes;
   University of Quebec; Ecole de Technologie Superieure - Canada
RP Idri, A (corresponding author), Mohammed V Univ, Software Project Management Res Team, ENSIAS, Rabat, Morocco.
EM ali.idri@um5.ac.ma
RI Hosni, Mohamed/D-2602-2017; Abran, Alain/I-2493-2016
OI Hosni, Mohamed/0000-0001-7336-4276; Abran, Alain/0000-0003-2670-9061;
   Idri, Ali/0000-0002-4586-4158
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Ali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2211
   ALTMAN NS, 1992, AM STAT, V46, P175, DOI 10.2307/2685209
   Amazal Fatima-Azzahra, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P252, DOI 10.1109/IWSM.Mensura.2014.31
   Amazal FA, 2014, INT J COMPUT INTELL, V13, DOI 10.1142/S1469026814500138
   [Anonymous], 1989, ANAL STAT PRODUCTIVI
   [Anonymous], 2013, P 9 INT C PRED MOD S, DOI DOI 10.1145/2499393.2499394
   Araujo RDA., 2010, 2010 22 IEEE INT C T, V1, P160, DOI [10.1109/ICTAI.2010.30, DOI 10.1109/ICTAI.2010.30]
   Azzeh M., 2008, P 4 INT WORKSH PRED, P71, DOI DOI 10.1145/1370788.1370805
   Azzeh M, 2015, J SYST SOFTWARE, V103, P36, DOI 10.1016/j.jss.2015.01.028
   Baskeles B., 2007, PROC 22 INT S COMPUT, P1, DOI [10.1109/ISCIS.2007.4456863, DOI 10.1109/ISCIS.2007.4456863]
   Berlin S, 2009, INFORM SOFTWARE TECH, V51, P738, DOI 10.1016/j.infsof.2008.09.007
   Bibi S, 2008, INFORM SOFTWARE TECH, V50, P656, DOI 10.1016/j.infsof.2007.06.004
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Bolón-Canedo V, 2013, KNOWL INF SYST, V34, P483, DOI 10.1007/s10115-012-0487-8
   Borges L.C., 2003, Revista de Matematica e Estatistica, V21, P67
   Braga PL, 2007, PROC INT C TOOLS ART, P181, DOI 10.1109/ICTAI.2007.172
   Braga PL, 2007, IEEE IJCNN, P1595, DOI 10.1109/IJCNN.2007.4371196
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   Chra A., 2006, J MATH MODEL ALGORIT, V5, P417, DOI [10.1007/s10852-005-9020-3, DOI 10.1007/S10852-005-9020-3]
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Cristianini N., 2000, INTRO SUPPORT VECTOR
   Eid HF, 2013, COMM COM INF SC, V381, P240
   Elish MO, 2013, MATH PROBL ENG, V2013, DOI 10.1155/2013/312067
   Elshrif MM., 2015, ADAPTIVE RANDOM SUBS
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Gondor Mihaela., 2012, International Journal of Mathematics and Computers in Stimulation, V6, P378
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   Guyon I., 2003, Journal of Machine Learning Research, V3, P1157, DOI 10.1162/153244303322753616
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall M.A., 1999, P 17 INT C MACHINE L, P359
   Heiat A, 2002, INFORM SOFTWARE TECH, V44, P911, DOI 10.1016/S0950-5849(02)00128-3
   Ho TK, 1998, IEEE T PATTERN ANAL, V20, P832, DOI 10.1109/34.709601
   Hosni M., 2017, P 27 INT WORKSH SOFT, P207
   Hosni M., 2017, Proceedings of the Symposium on Applied Computing, P1251
   Hosni M, 2016, INT CONF SOFT COMP, P174, DOI 10.1109/ISCMI.2016.15
   Hosni M, 2018, FRONT ARTIF INTEL AP, V303, P439, DOI 10.3233/978-1-61499-900-3-439
   Hosni M, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2117
   Hosni M, 2018, SOFT COMPUT, V22, P5977, DOI 10.1007/s00500-017-2945-4
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   Idri A, 2000, PROCEEDINGS OF THE FIFTH JOINT CONFERENCE ON INFORMATION SCIENCES, VOLS 1 AND 2, P219
   Idri A, 2002, PROCEEDINGS OF THE 2002 IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, VOL 1 & 2, P1162, DOI 10.1109/FUZZ.2002.1006668
   Idri A., 2016, 2016 IEEE S SER COMP, P1
   Idri A., 2015, INT C SOFTW ENG ART, P1, DOI [DOI 10.1109/ICTA.2015, DOI 10.1109/SNPD.2015.7176280, 10.1109/SNPD.2015.7176280]
   Idri A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1925
   Idri A, 2016, APPL SOFT COMPUT, V49, P990, DOI 10.1016/j.asoc.2016.08.012
   Idri A, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P132, DOI 10.5220/0005822701320139
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   Idri A, 2012, WD SCI P COMP ENG, V7, P863
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jovic A, 2015, 2015 8TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1200, DOI 10.1109/MIPRO.2015.7160458
   Kalmegh S., 2015, INT J INNOV SCI ENG, P438
   Khoshgoftaar TM, 2007, PROC INT C TOOLS ART, P310, DOI 10.1109/ICTAI.2007.46
   Kira K, 1992, P 9 INT WORKSH MACH, P249
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Li YF, 2009, EXPERT SYST APPL, V36, P5921, DOI 10.1016/j.eswa.2008.07.062
   Liu Y, 1999, NEURAL NETWORKS, V12, P1399, DOI 10.1016/S0893-6080(99)00073-8
   Lokan C, 2001, IEEE SOFTWARE, V18, P26, DOI 10.1109/52.951491
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mendes E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P131, DOI 10.1109/METRIC.2002.1011332
   Menzies T., 2017, The SEACRAFT Repository of Empirical Software Engineering Data
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Minku LL, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522928
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Nassif AB, 2016, NEURAL COMPUT APPL, V27, P2369, DOI 10.1007/s00521-015-2127-1
   Oliveira ALI, 2006, NEUROCOMPUTING, V69, P1749, DOI 10.1016/j.neucom.2005.12.119
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   Omar WMA, 2012, 2012 IEEE INTERNATIONAL CONFERENCE ON CONTROL SYSTEM, COMPUTING AND ENGINEERING (ICCSCE 2012), P392, DOI 10.1109/ICCSCE.2012.6487177
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   QUENOUILLE MH, 1956, BIOMETRIKA, V43, P353
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Quinlan Ross, 1993, C4 5 PROGRAMS MACHIN
   Robnik-Sikonja M., 1997, MACHINE LEARNING P 1, V5, P296
   Sadri J., 2003, Second Conference on Machine Vision and Image Processing Applications (MVIP2003), P300
   Sánchez-Maroño N, 2007, LECT NOTES COMPUT SC, V4881, P178
   Schapire RE, 1990, J MACH LEARN, V1, P197, DOI [10.1023/A:1022648800760, DOI 10.1023/A:1022648800760]
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sigweni B., 2014, Proceedings ofthe 10th International Conference on Predictive Models in Software Engineering, P32
   Simon Haykin, 1999, NEURAL NETWORKS COMP, V2nd
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Tang J., 2014, DATA CLASSIFICATION, P37, DOI DOI 10.1201/B17320
   Tong S, 2002, J MACH LEARN RES, V2, P45, DOI 10.1162/153244302760185243
   Tsanas A., 2010, J MACH LEARN RES, V1, P1
   VAPNIK V, 1992, ADV NEUR IN, V4, P831
   VAPNIK V, 1993, NEURAL COMPUT, V5, P893, DOI 10.1162/neco.1993.5.6.893
   Wang Y., 1997, 9 EUR C MACH LEARN, P1
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Wettschereck D, 1997, ARTIF INTELL REV, V11, P273, DOI 10.1023/A:1006593614256
   Witten I. H., 2005, DATA MINING PRACTICA
   Zhao YH, 2008, ADV SPACE RES, V41, P1955, DOI 10.1016/j.asr.2007.07.020
   Zhou Z.-H., 2012, ENSEMBLE METHODS FDN, P414
NR 102
TC 7
Z9 7
U1 0
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2021
VL 33
IS 6
AR e2343
DI 10.1002/smr.2343
EA MAR 2021
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SL1AR
UT WOS:000634873600001
DA 2024-07-18
ER

PT J
AU Biró, M
   Mashkoor, A
   Sametinger, J
AF Biro, Miklos
   Mashkoor, Atif
   Sametinger, Johannes
TI Safe and secure cyber-physical systems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE cyber&#8208; physical system; safety; security
AB Cyber-Physical Systems (CPSs) differ from traditional Information Technology (IT) systems in such a way that they interact with the physical environment, i.e., they can monitor and manipulate real objects and processes. For this special issue, the authors of the best papers of IWCFS 2019 were invited to submit extended versions of their workshop papers. Additionally, we received eight submissions from around the globe as a result of an open call. After thorough and stringent reviews, we selected six articles that provide relevant contributions to the field of safety and security for CPSs.
C1 [Biro, Miklos] Software Competence Ctr Hagenberg, Hagenberg, Austria.
   [Mashkoor, Atif; Sametinger, Johannes] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
C3 Softwarepark Hagenberg; Johannes Kepler University Linz
RP Biró, M (corresponding author), Software Competence Ctr Hagenberg, Hagenberg, Austria.
EM mbirom3@gmail.com
RI Biro, Miklos/K-8741-2014; Sametinger, Johannes/B-8692-2017
OI Biro, Miklos/0000-0001-8627-1159; Sametinger,
   Johannes/0000-0002-0637-6602; Mashkoor, Atif/0000-0003-1210-5953
FU Austrian Science Fund [I 4744-N]; Bundesministerium fur Verkehr,
   Innovation und Technologie; Bundesministerium fur Wissenschaft,
   Forschung und Wirtschaft
FX Austrian Science Fund, Grant/Award Number: I 4744-N; Bundesministerium
   fur Verkehr, Innovation und Technologie; Bundesministerium fur
   Wissenschaft, Forschung und Wirtschaft
CR Anderst-Kotsis G., 2019, COMMUNICATIONS COMPU
   Armo A., 2019, 2019 11 INT C CYB CO, P1
   Biró M, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2340
   Biro M, 2018, IEEE SOFTWARE, V35, P24, DOI 10.1109/MS.2017.4541050
   Bolton C, 2020, COMMUN ACM, V63, P20, DOI 10.1145/3396261
   Cao YL, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2267, DOI 10.1145/3319535.3339815
   Genkin D, 2021, IEEE SECUR PRIV, V19, P95, DOI 10.1109/MSEC.2020.3036146
   Griffor E. R., 2017, Framework for cyber-physical systems, V2, DOI DOI 10.6028/NIST.SP.1500-201
   Mashkoor A, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2239
   Mashkoor A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1955
   Segovia M, 2020, IEEE INT SYM N C A, DOI 10.1109/nca51143.2020.9306741
   Sugawara T, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2631
   The Michigan Engineer News Center, HACK REAL
   Yaacoub JPA, 2020, MICROPROCESS MICROSY, V77, DOI 10.1016/j.micpro.2020.103201
NR 14
TC 7
Z9 7
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2021
VL 33
IS 9
SI SI
AR e2340
DI 10.1002/smr.2340
EA MAR 2021
PG 3
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UP0XV
UT WOS:000629383300001
DA 2024-07-18
ER

PT J
AU Datta, S
   Roychoudhuri, R
   Majumder, S
AF Datta, Subhajit
   Roychoudhuri, Reshma
   Majumder, Subhashis
TI Understanding the relation between repeat developer interactions and bug
   resolution times in large open source ecosystems: A multisystem study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Android; bug resolution; developer interacton; Eclipse; OpenStack;
   software development ecosystems
ID SOFTWARE QUALITY; COLLABORATION; PRODUCTIVITY; CREATIVITY; MEMBERS;
   MODELS; TEAMS
AB Large-scale software systems are being increasingly built by distributed teams of developers who interact across geographies and time zones. Ensuring smooth knowledge transfer and the percolation of skills within and across such teams remain key challenges for organizations. Towards addressing this challenge, organizations often grapple with questions around whether and how repeat collaborations between members of a team relate to outcomes of important activities. In the context of this paper, the word 'repeat interaction' does not imply a greater number of interactions; it refers to repeat interaction between a pair of developers who have collaborated before. In this paper, we empirically examine such a question using real-world data from three diverse development ecosystems, collectively involving 400,000+ units of work and 600,000+ comments exchanged between numerous developers. Our statistical models consistently establish a counter-intuitive relation between repeat developer interaction and bug resolution times. Our experimental results show that more instances of repeat developer interactions over bug fixing are associated with more time taken for the bugs to be fixed. Given the expanse and variety of the underlying data, our results offer an unexpected set of insights on a key dynamic of collaboration in software development ecosystems. We discuss how these insights can influence the practice of large-scale software development at individual, team and organizational levels.
C1 [Datta, Subhajit] Singapore Management Univ, Singapore 178902, Singapore.
   [Roychoudhuri, Reshma; Majumder, Subhashis] Heritage Inst Technol, Comp Sci & Engn Dept, Kolkata, India.
C3 Singapore Management University; Heritage Institute of Technology (HITK)
RP Datta, S (corresponding author), Singapore Management Univ, Singapore 178902, Singapore.
EM subhajit.datta@acm.org
OI Datta, Subhajit/0000-0001-9161-7951
CR [Anonymous], WORKING TOGETHER WE
   [Anonymous], 1999, SEI SERIES SOFTWARE
   [Anonymous], 1987, Peopleware: Productive Projects and Teams
   [Anonymous], 2002, EC INNOVA NEW TECH
   [Anonymous], 1998, AFFLUENT SOC
   Asaduzzaman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P116, DOI 10.1109/MSR.2012.6224267
   Baltes S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P187, DOI 10.1145/3236024.3236061
   Bercovitz J, 2011, RES POLICY, V40, P81, DOI 10.1016/j.respol.2010.09.008
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Booch G, 2008, IEEE SOFTWARE, V25, P16, DOI 10.1109/MS.2008.52
   Bruegge B, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P139, DOI 10.1109/ICGSE.2006.261227
   Campbell D.T., 2001, Experimental and quasiexperimental designs for generalized causal inference
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   CONWAY ME, 1968, DATAMATION, V14, P28
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dahlander L, 2013, ADMIN SCI QUART, V58, P69, DOI 10.1177/0001839212474272
   Daly J, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P20, DOI 10.1109/ICSM.1995.526524
   Datta S., 2014, P 15 INT C AG PROC S, P242
   Datta S, 2018, EMPIR SOFTW ENG, V23, P1153, DOI 10.1007/s10664-017-9534-0
   Datta S, 2012, ACM SIGPLAN NOTICES, V47, P655, DOI 10.1145/2398857.2384664
   Datta S, 2015, PROCEEDINGS OF THE 2015 INTERNATIONAL CONFERENCE ON POWER AND ADVANCED CONTROL ENGINEERING (ICPACE), P28, DOI 10.1109/ICPACE.2015.7274912
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   DeSanctis G., 1994, Journal of Management Information Systems, V10, P85
   Ehrlich Kate, 2012, Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work, CSCW '12, P945
   Espinosa JA, 2007, ORGAN SCI, V18, P613, DOI 10.1287/orsc.1070.0297
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Fleming L, 2007, ADMIN SCI QUART, V52, P443, DOI 10.2189/asqu.52.3.443
   Gelles D, BOEING FIX 737 MAX S
   Gonzalez-Barahona JM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P478, DOI 10.1109/MSR.2015.68
   Grewal R, 2006, MANAGE SCI, V52, P1043, DOI 10.1287/mnsc.1060.0550
   Guimerà R, 2005, SCIENCE, V308, P697, DOI 10.1126/science.1106340
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hamasaki K, 2013, IEEE WORK CONF MIN S, P49, DOI 10.1109/MSR.2013.6624003
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hinds PJ, 2000, ORGAN BEHAV HUM DEC, V81, P226, DOI 10.1006/obhd.1999.2875
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Kearney E, 2009, ACAD MANAGE J, V52, P581, DOI 10.5465/AMJ.2009.41331431
   Klein C, 2009, SMALL GR RES, V40, P181, DOI 10.1177/1046496408328821
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Kozlowski SWJ, 2006, PSYCHOL SCI, P77, DOI 10.1111/j.1529-1006.2006.00030.x
   Kwan I, 2012, IEEE SOFTWARE, V29, P90, DOI 10.1109/MS.2012.3
   Mathieu JE, 2014, J MANAGE, V40, P130, DOI 10.1177/0149206313503014
   Meneely A., 2011, P 19 ACM SIGSOFT S 1, P81
   Millhiser WP, 2011, ORGAN SCI, V22, P772, DOI 10.1287/orsc.1100.0549
   Milojevic S, 2014, P NATL ACAD SCI USA, V111, P3984, DOI 10.1073/pnas.1309723111
   Newman MEJ, 2001, PHYS REV E, V64, DOI 10.1103/PhysRevE.64.025102
   Newman MEJ, 2003, SIAM REV, V45, P167, DOI 10.1137/S003614450342480
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Perry D. E., 2005, P 29 ANN IEEE NASA S, P96
   Robson C., 2015, REAL WORLD RES, V4th
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sajeev ASM, 2013, LECT NOTES BUS INF P, V149, P31
   Shihab E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P112, DOI 10.1109/MSR.2012.6224307
   Song Wang, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P193, DOI 10.1109/ESEM.2013.24
   Stroustrup B, PROBLEM PROGRAMMING
   Tabachnick B.G., 2012, Using multivariate statistics, V6th
   Tohidi H, 2006, INT J PROD ECON, V103, P610, DOI 10.1016/j.ijpe.2005.12.002
   Tohidi H, 2011, PROCEDIA COMPUT SCI, V3, DOI 10.1016/j.procs.2010.12.185
   Turner ME, 1998, ORGAN BEHAV HUM DEC, V73, P105, DOI 10.1006/obhd.1998.2756
   Uzzi B, 2005, AM J SOCIOL, V111, P447, DOI 10.1086/432782
   Wagstrom P, 2010, AC MAN C
   Wagstrom P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P199, DOI 10.1145/2568225.2568279
   Warshaw J, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P335, DOI 10.1145/2818048.2835237
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Whitfield J, 2008, NATURE, V455, P720, DOI 10.1038/455720a
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Wu LF, 2019, NATURE, V566, P378, DOI 10.1038/s41586-019-0941-9
   Wuchty S, 2007, SCIENCE, V316, P1036, DOI 10.1126/science.1136099
   Zimmermann T, 2009, INT SYMP EMP SOFTWAR, P436
   Zou WQ, 2015, P INT COMP SOFTW APP, P254, DOI 10.1109/COMPSAC.2015.57
NR 76
TC 4
Z9 4
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2021
VL 33
IS 4
AR e2317
DI 10.1002/smr.2317
EA NOV 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA RH8PR
UT WOS:000593825600001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Vogel, M
   Knapik, P
   Cohrs, M
   Szyperrek, B
   Pueschel, W
   Etzel, H
   Fiebig, D
   Rausch, A
   Kuhrmann, M
AF Vogel, Martin
   Knapik, Peter
   Cohrs, Moritz
   Szyperrek, Bernd
   Pueschel, Winfried
   Etzel, Haiko
   Fiebig, Daniel
   Rausch, Andreas
   Kuhrmann, Marco
TI Metrics in automotive software development: A systematic literature
   review
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE automotive software development; quality attributes; software metrics;
   systematic literature review
ID VERIFICATION; ARCHITECTURE; COMPLEXITY; FRAMEWORK; HARDWARE; QUALITY;
   DESIGN
AB Software is an integrated part of new features within the automotive sector, car manufacturers, the Hersteller Initiative Software (HIS) consortium defined metrics to determine software quality. Yet, problems with assigning metrics to quality attributes often occur in practice. The specified boundary values lead to discussions between contractors and clients as different standards and metric sets are used. This paper studies metrics used in the automotive sector and the quality attributes they address. The HIS, ISO/IEC 25010:2011, and ISO/IEC 26262:2018 are utilized to draw a big picture illustrating (i) which metrics and boundary values are reported in literature, (ii) how the metrics match the standards, (iii) which quality attributes are addressed, and (iv) how the metrics are supported by tools. Our findings from analyzing 38 papers include a catalog of 112 metrics of which 17 define boundary values and 48 are supported by tools. Most of the metrics are concerned with source code, are generic, and not specifically designed for automotive software development. We conclude that many metrics exist, but a clear definition of the metrics' context, notably regarding the construction of flexible and efficient measurement suites, is missing.
C1 [Vogel, Martin; Fiebig, Daniel; Rausch, Andreas] Tech Univ Clausthal, Inst Appl Software Syst Engn, Goslar, Germany.
   [Knapik, Peter; Cohrs, Moritz; Szyperrek, Bernd; Pueschel, Winfried; Etzel, Haiko] Volkswagen AG, Wolfsburg, Germany.
   [Kuhrmann, Marco] Univ Passau, Fac Comp Sci & Math, Passau, Germany.
C3 TU Clausthal; Volkswagen; Volkswagen Germany; University of Passau
RP Kuhrmann, M (corresponding author), Univ Passau, Fac Comp Sci & Math, Passau, Germany.
EM kuhrmann@acm.org
OI Kuhrmann, Marco/0000-0001-6101-8931
CR Abdallah A, 2010, P IEEE, V98, P584, DOI 10.1109/JPROC.2009.2036747
   Acellere GmbH, 2018, GAMMA
   Agosta G, 2014, IET COMPUT DIGIT TEC, V8, P256, DOI 10.1049/iet-cdt.2014.0037
   Alshammari B, 2009, INT CONF QUAL SOFTW, P11, DOI 10.1109/QSIC.2009.11
   Altinger H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P688, DOI 10.1109/SANER.2016.81
   Alves TL, 2010, PROC IEEE INT CONF S
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 2018, ROUGE WAVE SOFTWARE
   [Anonymous], 2018, PMD OP SOURC PROJ
   [Anonymous], 2018, ECLIPSE
   [Anonymous], 2010, SYST SOFTW ENG VOC
   [Anonymous], 2014, INT C DAT SOFTW ENG
   [Anonymous], 1993, 10611992 IEEE, DOI DOI 10.1109/IEEESTD.1993.115124
   [Anonymous], 2018, SIM
   Antinyan V, 2017, EMPIR SOFTW ENG, V22, P3057, DOI 10.1007/s10664-017-9508-2
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Balboni A, 1998, INTEGR COMPUT-AID E, V5, P39
   Balboni A, 1996, TOSCA TOOLS SYSTEM C
   Baudin P, 2018, FRAMA C
   Benjamin Treynor S, 2018, QUEUE, V16, P30
   Blu Age Corporation, 2016, BLU AG LEG AN
   COSTELLO RJ, 1995, J SYST SOFTWARE, V29, P39, DOI 10.1016/0164-1212(94)00127-9
   DEBOU C, 1995, SOFTWARE QUAL J, V4, P207, DOI 10.1007/BF01351924
   Designite, 2018, DES JAV
   Durisic D, 2013, J SYST SOFTWARE, V86, P1275, DOI 10.1016/j.jss.2012.12.021
   Ebert C, 2016, IEEE SOFTWARE, V33, P105, DOI 10.1109/MS.2016.27
   ECSS Secretariat, 2011, ECSSQHB8004A ESAESTE
   El-Sharkawy S, 2019, INFORM SOFTWARE TECH, V106, P1, DOI 10.1016/j.infsof.2018.08.015
   Fenton NE, 1999, J SYST SOFTWARE, V47, P149, DOI 10.1016/S0164-1212(99)00035-7
   FrontEndART Ltd, 2018, SOURCEMETER
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Gaver DP, 2014, RELIAB ENG SYST SAFE, V130, P27, DOI 10.1016/j.ress.2014.04.012
   Gören S, 2006, ACM T DES AUTOMAT EL, V11, P916, DOI 10.1145/1179461.1179467
   Hafnaoui I, 2017, DES AUTOM EMBED SYST, V21, P117, DOI 10.1007/s10617-017-9185-9
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   hello2morrow, 2018, SON
   Hoffman RR, 2010, IEEE INTELL SYST, V25, P6, DOI 10.1109/MIS.2010.89
   Huda S, 2018, IEEE ACCESS, V6, P2844, DOI 10.1109/ACCESS.2017.2785445
   INCE D, 1990, INFORM SOFTWARE TECH, V32, P297, DOI 10.1016/0950-5849(90)90063-W
   ISO/IEC 25023:2016, 2016, 250232016 ISOIEC
   ISO TC22/SC3/WG16, 2018, TC22SC3WG16 ISO
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jin XQ, 2015, IEEE T COMPUT AID D, V34, P1704, DOI 10.1109/TCAD.2015.2421907
   Kandl S, 2015, COMPUTING, V97, P261, DOI 10.1007/s00607-014-0418-5
   Kiebusch S, 2006, LECT NOTES COMPUT SC, V3966, P314
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kläs M, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P243, DOI 10.1109/SEAA.2009.88
   Krüger IH, 2005, Third ACM & IEEE International Conference on Formal Methods and Models for Co-Design, Proceedings, P150, DOI 10.1109/MEMCOD.2005.1487906
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Lengauer C, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4204
   Lind K, 2012, IEEE T SOFTWARE ENG, V38, P993, DOI 10.1109/TSE.2011.86
   Luo YP, 2015, 2015 FIRST INTERNATIONAL WORKSHOP ON AUTOMOTIVE SOFTWARE ARCHITECTURE (WASA), P11, DOI 10.1145/2752489.2752492
   Luo YP, 2016, INFORM SOFTWARE TECH, V73, P151, DOI 10.1016/j.infsof.2015.12.012
   LYTZ R, 1995, SOFTWARE QUAL J, V4, P1, DOI 10.1007/BF00404646
   M Squared Technologies LLC, 2018, RES STAND METR RSM
   Manfred B, 2015, SOFTWARE EATS WORLD
   Manuel B, 2010, MEHR SOFTWARE WAGEN, DOI [10.2314/GBV:728568616, DOI 10.2314/GBV:728568616]
   MathWorks, 2018, POL COD PROV
   Mordal K, 2013, J SOFTW-EVOL PROC, V25, P1117, DOI 10.1002/smr.1558
   Mordal-Manet K, 2009, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2009.5306381
   Mumtaz H, 2018, INFORM SOFTWARE TECH, V96, P112, DOI 10.1016/j.infsof.2017.11.010
   Nassar B, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P235, DOI 10.1109/ICSA.2017.12
   Pedrycz W, 2001, NEUROCOMPUTING, V36, P149, DOI 10.1016/S0925-2312(00)00340-4
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Pfleeger SL, 2008, IEEE SOFTWARE, V25, P32, DOI 10.1109/MS.2008.160
   Prause CR, 2017, LECT NOTES COMPUT SC, V10611, P351, DOI 10.1007/978-3-319-69926-4_25
   QA Systems GmbH, 2018, QA C ONL
   Rajagopalan J, 2018, J ORGAN CHANGE MANAG, V31, P385, DOI 10.1108/JOCM-12-2016-0301
   Ristanovic CASE, 2018, RISTANOVIC CASE
   Rook J, 1996, IND MANAGE DATA SYST, V96, P3, DOI 10.1108/02635579610107701
   Schroeder J, 2017, PROC IEEE ACM INT C, P186, DOI 10.1109/ICSE-C.2017.66
   Schroeder Jan, 2016, P 25 INT S SOFTW TES, P154
   Selvarani R, 2010, IGI GLOBAL, P139
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Singh GB, 2001, MICROPROCESS MICROSY, V24, P453, DOI 10.1016/S0141-9331(00)00098-3
   Song F, 2010, HEALTH TECHNOL ASSES, V14, P1, DOI 10.3310/hta14080
   Staron M, 2011, J SOFTW MAINT EVOL-R, V23, P89, DOI 10.1002/smr.470
   Stefan W, 2013, SOFTWARE PRODUCT QUA
   Toshihiro K, 2008, NEC TECH J, V3, P27
   Tsuda N, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P312, DOI 10.1109/ICSE-SEIP.2019.00045
   Venkitachalam H, 2015, 2015 FIRST INTERNATIONAL WORKSHOP ON AUTOMOTIVE SOFTWARE ARCHITECTURE (WASA), P27, DOI 10.1145/2752489.2752496
   Wagner JR, 1997, IEEE T SYST MAN CY A, V27, P480, DOI 10.1109/3468.594914
   Wagner S, 2015, INFORM SOFTWARE TECH, V62, P101, DOI 10.1016/j.infsof.2015.02.009
   Wagner S, 2012, PROC INT CONF SOFTW, P1133, DOI 10.1109/ICSE.2012.6227106
   Wan J., 2017, IEEE SYST J, V11, P1
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Williams BJ, 2014, EMPIR SOFTW ENG, V19, P419, DOI 10.1007/s10664-012-9223-y
   Yadav HB, 2015, PROCEDIA COMPUT SCI, V46, P933, DOI 10.1016/j.procs.2015.01.002
   ZEN PROGRAM LTD, 2018, NDEPEND
   Zhang XM, 2003, IEEE T SYST MAN CY A, V33, P114, DOI 10.1109/TSMCA.2003.812597
NR 92
TC 5
Z9 5
U1 3
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2021
VL 33
IS 2
AR e2296
DI 10.1002/smr.2296
EA AUG 2020
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YZ7ZN
UT WOS:000558589600001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Khan, AA
   Shameem, M
AF Khan, Arif Ali
   Shameem, Mohammad
TI Multicriteria decision-making taxonomy for DevOps challenging factors
   using analytical hierarchy process
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE AHP; Challenging Factors; DevOps; Prioritization; Taxonomy
ID PROCESS IMPROVEMENT; SOFTWARE; MANAGEMENT; DEPLOYMENT; MODEL; AHP
AB Development and operations (DevOps) practices significantly accelerate and automate the continuous delivery and deployment of software systems. However, adopting DevOps concepts is not a straightforward job. Most organizations are not able to keep pace with the rhythm of continuous delivery and deployment, which are key DevOps attributes. Despite the significance of DevOps programs, it is still unknown why software development firms are demotivated or unable to adopt them. We tried to fill this gap by investigating, prioritizing, and developing the taxonomy of the key factors that could impact the adaptation and implementation of DevOps practices. We extracted a total of 16 factors from the available literature and empirically assessed them using the survey approach. The identified factors are further classified into three core categories of the software process improvement (SPI) manifesto. The analytical hierarchy process (AHP) approach was used to calculate the prioritization weight for each factor and present it as a taxonomy. The developed taxonomy provides a roadmap to tackle the key challenges to implementing DevOps and offers suggestions for streamlining DevOps practices.
C1 [Khan, Arif Ali] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
   [Shameem, Mohammad] Madanapalle Inst Technol & Sci, Dept Comp Applict, Madanapalle, Andhra Pradesh, India.
C3 Nanjing University of Aeronautics & Astronautics; Madanapalle Institute
   of Technology & Science
RP Khan, AA (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
EM arif.khan@nuaa.edu.cn
RI khan, Arif/HMV-3165-2023; Khan, Arif Ali/ABG-2862-2020; Shameem,
   Mohammad/AFU-4006-2022
OI Khan, Arif Ali/0000-0002-8479-1481; Shameem,
   Mohammad/0000-0002-6055-5345
CR Ali S, 2019, 2019 IEEE 6TH INTERNATIONAL CONFERENCE ON INDUSTRIAL ENGINEERING AND APPLICATIONS (ICIEA), P382, DOI [10.1109/iea.2019.8714986, 10.1109/IEA.2019.8714986]
   Ali S, 2018, IEEE ACCESS, V6, P55431, DOI 10.1109/ACCESS.2018.2871710
   Ali S, 2016, J SYST SOFTWARE, V117, P402, DOI 10.1016/j.jss.2016.03.069
   Ameller D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P402, DOI 10.1109/SANER.2017.7884642
   [Anonymous], THESIS
   [Anonymous], NONPARAMETRIC STAT B
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2010, P 14 INT C EV ASS SO
   Bass Len, 2018, IEEE Software, V35, P8, DOI 10.1109/MS.2017.4541051
   Bass L, 2015, 2015 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING, P4, DOI 10.1109/RELENG.2015.11
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Bozbura FT, 2007, EXPERT SYST APPL, V32, P1100, DOI 10.1016/j.eswa.2006.02.006
   Bucena I., 2017, BIR WORKSH
   Calefato F, 2019, IEEE SOFTWARE, V36, P72, DOI 10.1109/MS.2018.2874668
   Chen LP, 2017, J SYST SOFTWARE, V128, P72, DOI 10.1016/j.jss.2017.02.013
   Cheng EWL, 2002, J MANAGE ENG, V18, P194, DOI 10.1061/(ASCE)0742-597X(2002)18:4(194)
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   CLEAR T, 2017, ACM INROADS, V8, P19, DOI DOI 10.1145/3078298
   Cois CA, 2014, IEEE INT PROF COMMUN
   Colomo-Palacios R, 2018, INT J INFORM MANAGE, V40, P186, DOI 10.1016/j.ijinfomgt.2017.11.005
   da Silva HHS, 2019, ADV INTELL SYST, V800, P183, DOI 10.1007/978-3-030-14070-0_26
   Daneva M., 2014, TECH REP
   Davis J., 2016, EFFECTIVE DEVOPS
   Diel E, 2016, INT CONF GLOBAL SOFT, P24, DOI 10.1109/ICGSE.2016.28
   Draugalis JR, 2009, AM J PHARM EDUC, V73, DOI 10.5688/aj7308142
   Erich FMA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1885
   Fazal-Baqaie M., 2017, CEUR WORKSHOP PROCEE, V1806, P18
   Feijter R., 2017, TECHNICAL REPORT SER
   Finstad K, 2010, J USABILITY STUD, V5, P104
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Freeman E., 2019, DevOps for dummies
   Gill AQ, 2018, VINE J INF KNOWL MAN, V48, P122, DOI 10.1108/VJIKMS-02-2017-0007
   Godse M, 2008, PROCEEDINGS OF THE SIXTH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P41, DOI 10.1109/ECOWS.2008.21
   Gruver G., 2015, Leading the transformation: Applying agile and devops principles at scale
   Hari Rao G., 2018, DEVOPS LEGACY SYSTEM
   Hemon A, 2020, INFORM SYST FRONT, V22, P927, DOI 10.1007/s10796-019-09905-1
   Hering M., 2018, DevOps for the modern enterprise, V1st
   Hussain W, 2017, INT CONF GLOBAL SOFT, P21, DOI 10.1109/ICGSE.2017.16
   Hussaini SW, 2014, 2014 IEEE 17TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORTATION SYSTEMS (ITSC), P178, DOI 10.1109/ITSC.2014.6957687
   Ibrahim MMA, 2019, 2019 8TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2019), P194, DOI 10.1145/3316615.3316670
   Jabbari R., 2016, WHAT IS DEVOPS SYSTE
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Kuusinen K, 2018, EUROMICRO CONF PROC, P60, DOI 10.1109/SEAA.2018.00019
   Larrucea X, 2019, COMM COM INF SC, V1060, P453, DOI 10.1007/978-3-030-28005-5_35
   LEITE L, 2019, ACM COMPUT SURV CSUR, V0052, P00001
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Lianping Chen, 2015, IEEE Software, V32, P50, DOI 10.1109/MS.2015.27
   Lwakatare LE, 2019, INFORM SOFTWARE TECH, V114, P217, DOI 10.1016/j.infsof.2019.06.010
   Lwakatare LE, 2016, P ANN HICSS, P5437, DOI 10.1109/HICSS.2016.671
   Lwakatare LE, 2015, LECT NOTES BUS INF P, V212, P212, DOI 10.1007/978-3-319-18612-2_19
   Mala D.J., 2019, Integrating the Internet of Things Into Software Engineering Practices
   Mazzara M., 2018, INT WORKSHOP SOFTWAR, P100
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Niazi M, 2016, INT J PROJ MANAG, V34, P1553, DOI 10.1016/j.ijproman.2016.08.008
   Niazi M, 2016, INFORM SOFTWARE TECH, V80, P1, DOI 10.1016/j.infsof.2016.08.002
   Niazi M, 2015, ARAB J SCI ENG, V40, P845, DOI 10.1007/s13369-015-1586-0
   Niazi M, 2012, J SOFTW-EVOL PROC, V24, P877, DOI 10.1002/smr.543
   de França BBN, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P53, DOI 10.1145/2973839.2973845
   Palcic I., 2009, International Journal of Simulation Modelling, V8, P16, DOI 10.2507/IJSIMM08(1)2.112
   Perera P, 2016, INT CONF ADV ICT, P281, DOI 10.1109/ICTER.2016.7829932
   Pries-Heje J., 2010, SPI MANIFESTO VERSIO
   Raka C, 2017, J PHARM INNOV, V12, P319, DOI 10.1007/s12247-017-9298-5
   Ravichandran A., 2016, DEVOPS DIGITAL LEADE, P3, DOI DOI 10.1007/978-1-4842-1842-6_1
   Roche J, 2013, COMMUN ACM, V56, P38, DOI 10.1145/2524713.2524721
   Saaty TL., 1988, What is the Analytic Hierarchy Process?, P109, DOI DOI 10.1007/978-3-642-83555-1_5
   Sanchez-Gordon M., 2018, INT C SOFTW PROC IMP, P1
   Senapathi M., 2018, ser. EASE'18, P57
   SHAHIN M, 2017, INT SYMP EMP SOFTWAR, P111, DOI DOI 10.1109/ESEM.2017.18
   Sharma S., 2017, DevOps for dummies
   SHROPSHIRE J, 2017, SAIS 2017 P
   Smeds J, 2015, LECT NOTES BUS INF P, V212, P166, DOI 10.1007/978-3-319-18612-2_14
   Soh S, 2010, AFR J BUS MANAGE, V4, P339
   Stahl Daniel, 2017, 2017 43rd Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P440, DOI 10.1109/SEAA.2017.8114695
   Team C.P., 2006, CMMI DEV VERS 1 2
   Tomas N., 2019, 2019 International Conference on Cyber Security and Protection of Digital Services (Cyber Security), Cyber Security and Protection of Digital Services (Cyber Security), 2019 International Conference On, P1, DOI [DOI 10.1109/CYBERSECPODS.2019.8884935, 10.1109/CyberSecPODS.2019.8884935]
   Vadapalli S., 2018, DevOps: Continuous Delivery, Integration, and Deployment with DevOps, V1st Editio
   Walls M., 2013, Building a DevOps culture
   Wiedemann A, 2019, COMMUN ACM, V62, P44, DOI 10.1145/3331138
   Wong JKW, 2008, BUILD ENVIRON, V43, P108, DOI 10.1016/j.buildenv.2006.11.019
   Yaghoobi T, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1891
   Zhu LM, 2016, IEEE SOFTWARE, V33, P32, DOI 10.1109/MS.2016.81
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 90
TC 22
Z9 23
U1 1
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2020
VL 32
IS 10
AR e2263
DI 10.1002/smr.2263
EA APR 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ4PK
UT WOS:000527436400001
DA 2024-07-18
ER

PT J
AU Singh, A
   Gill, SS
AF Singh, Ashima
   Gill, Sukhpal Singh
TI Measuring the maturity of Indian small and medium enterprises for
   unofficial readiness for capability maturity model integration-based
   software process improvement
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE capability maturity model integration; CMMI-DEV v1; 3 process areas and
   specific practices; small and medium enterprises; software process
   improvement
ID SMES; INNOVATION; INITIATIVES; MANAGEMENT; FUTURE; SIZE; CMMI
AB Establishing the maturity levels of - Small and Medium Enterprises (SMEs) without Capability Maturity Model Integration (CMMI) certification has always been regarded as an extremely challenging task. Software process improvement (SPI) has targeted to monitor and improve software processes, thereby improving the software business. Although there is scientific interest in SPI, little attention has been specifically given to the exploration of maturity levels for non-CMMI SMEs. The goal is to explore the effect of time on process maturity and maturity levels achieved informally or unofficially by SMEs that are not otherwise CMMI certified. To find out the maturity levels achieved informally, a CMMI-DEV v1.3 based survey questionnaire is administered to Indian software SMEs. Time of establishment of SMEs and follow-up of CMMI-based processes and practices unofficially are used as two important parameters to decide upon process maturity and achievement of specific CMMI level informally. This paper has been successful in ascertaining the effect of time of establishment of SMEs and follow-up of CMMI-based processes on process maturity using proposed RuleML that advocates adoption of more than 70% of CMMI-DEV v1.3 process area-specific practices for an SME to be unofficially ready for CMMI-based SPI initiatives. The findings manifest multidimensional aspects of unofficial readiness of SMEs for CMMI-based SPI that can be used by relevant authorities to select SMEs for funding for SPI initiatives. Finally, the proposed work has been validated statistically using t-test for CMMI Level II and Level III.
C1 [Singh, Ashima] Thapar Inst Engn & Technol, Comp Sci & Engn Dept, Patiala, Punjab, India.
   [Gill, Sukhpal Singh] Queen Mary Univ London, Sch Elect Engn & Comp Sci, London, England.
C3 Thapar Institute of Engineering & Technology; University of London;
   Queen Mary University London
RP Singh, A (corresponding author), Thapar Inst Engn & Technol, Comp Sci & Engn Dept, Patiala, Punjab, India.
EM ashima@thapar.edu
RI Gill, Sukhpal Singh/J-5930-2014
OI Gill, Sukhpal Singh/0000-0002-3913-0369
CR Abushama HM, 2016, J SOFTW-EVOL PROC, V28, P689, DOI 10.1002/smr.1793
   al-Tarawneh MY, 2011, PROCEDIA COMPUT SCI, V3, DOI 10.1016/j.procs.2010.12.146
   Alexandre S, 2006, EUROMICRO CONF PROC, P328, DOI 10.1109/EUROMICRO.2006.48
   Ali R. Z. R. M., 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P177, DOI 10.1109/MySEC.2011.6140665
   Allen P, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P211, DOI 10.1109/QSIC.2003.1319105
   Andrews JH, 2000, IEEE T EDUC, V43, P383, DOI 10.1109/13.883346
   [Anonymous], 2008, SOFTWARE PROCESS IMP, DOI DOI 10.1002/SPIP.380
   Baddoo N., 2006, Software Process Improvement and Practice, V11, P219, DOI 10.1002/spip.265
   Bahsoon R, 2013, J SYST SOFTWARE, V86, P2221, DOI 10.1016/j.jss.2013.05.061
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Berente N, 2014, TECHNOL ANAL STRATEG, V26, P417, DOI 10.1080/09537325.2013.851376
   Bessant J, 1999, INT J OPER PROD MAN, V19, P1106, DOI 10.1108/01443579910291032
   Bessant J, 1997, INT J TECHNOL MANAGE, V14, P7, DOI 10.1504/IJTM.1997.001705
   Bibi S, 2010, J SOFTW MAINT EVOL-R, V22, P121, DOI [10.1002/smr.451, 10.1002/spip.418]
   Birkinshaw J, 2008, ACAD MANAGE REV, V33, P825
   Casale G, 2016, PROCEDIA COMPUT SCI, V97, P34, DOI 10.1016/j.procs.2016.08.278
   Chapman R., 2000, Integrated Manufacturing Systems, V11, P171, DOI 10.1108/09576060010320399
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   CRONBACH LJ, 1951, PSYCHOMETRIKA, V16, P297, DOI [10.1007/BF02310555, DOI 10.1007/BF02310555]
   DYBA T, 2003, SE NOTES, V28, P5
   Garcia I, 2010, IET SOFTW, V4, P237, DOI 10.1049/iet-sen.2009.0045
   Garcia I, 2009, STUD COMPUT INTELL, V253, P51, DOI 10.1007/978-3-642-05441-9_5
   Garzás J, 2013, J SOFTW-EVOL PROC, V25, P1325, DOI 10.1002/smr.1605
   Gill SS, 2019, INTERNET THINGS-NETH, V8, DOI 10.1016/j.iot.2019.100118
   Hosalkar A, 2000, INT J TECHNOL MANAGE, V19, P760, DOI 10.1504/IJTM.2000.002844
   Iqbal J, 2016, SOFTWARE QUAL J, V24, P997, DOI 10.1007/s11219-015-9277-3
   Khokhar Muhammad Nawazish, 2010, 2010 4th International Conference on New Trends in Information Science and Service Science (NISS 2010), P592
   Kim H, 2010, INT J TECHNOL MANAGE, V52, P236, DOI 10.1504/IJTM.2010.035975
   Kish, 1995, J OFF STAT, V11, P55, DOI DOI 10.4135/9780857020116.N132
   Kupper S, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2182
   Lester NG, 2010, J SOFTW MAINT EVOL-R, V22, P17, DOI 10.1002/smr.450
   Mishra D, 2008, LECT NOTES COMPUT SC, V5089, P273, DOI 10.1007/978-3-540-69566-0_23
   Munro HazardB., 2005, Statistical Methods for health care research, V5e
   Nunnally J.C., 1978, PSYCHOMETRIC THEORY, V2nd, P245
   O'Connor RV, 2009, AUSTRALAS J INF SYST, V16, P7
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Pino FJ, 2010, J SYST SOFTWARE, V83, P1662, DOI 10.1016/j.jss.2010.03.077
   REALOUIS M, 2014, DESIGNING CONDUCTING
   *SEI CMM PROD TEAM, 2006, CMUSEI2006TR008 CMM
   Sharma P, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1993
   SINGH A, 2017, INT J PROCESS MANAG, V7, P487
   SINGH S, 2013, J PULMON RESP MED, V3, P1
   Singh S., 2013, Int J u e Serv Sci Technol, V6, P191, DOI [10.14257/ijunesst.2013.6.5.17, DOI 10.14257/IJUNESST.2013.6.5.17]
   Singh S, 2012, INT J COMPUTER APPL, V50, P33
   SINGH S, 2012, INT J COMPUTATIONAL, V2, P169
   Spadoni G, 2003, PROCESS SAF ENVIRON, V81, P19, DOI 10.1205/095758203762851958
   Sriroopreddy R, 2020, J BIOMOL STRUCT DYN, V38, P771, DOI 10.1080/07391102.2019.1587512
   Sulayman M, 2012, INFORM SOFTWARE TECH, V54, P479, DOI 10.1016/j.infsof.2011.12.007
   Sulayman M, 2009, COMM COM INF SC, V59, P1
   *TEAM CP, 2010, CMUSEI2010TR033 TEAM
   Unterkalmsteiner M, 2014, J SOFTW-EVOL PROC, V26, P251, DOI 10.1002/smr.1637
   Veldman J, 2009, INT J TECHNOL MANAGE, V48, P219, DOI 10.1504/IJTM.2009.024917
   Wilkie F. G., 2005, Software Process Improvement and Practice, V10, P189, DOI 10.1002/spip.223
   Wubben EFM, 2015, INT J TECHNOL MANAGE, V69, P139, DOI 10.1504/IJTM.2015.071552
   Yang D, 2005, INT J TECHNOL MANAGE, V29, P64, DOI 10.1504/IJTM.2005.006005
   Zephir O, 2011, INT J TECHNOL MANAGE, V55, P286, DOI 10.1504/IJTM.2011.041954
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 57
TC 6
Z9 7
U1 3
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2020
VL 32
IS 9
AR e2261
DI 10.1002/smr.2261
EA APR 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NO3YE
UT WOS:000525187000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Qi, K
   Boehm, B
AF Qi, Kan
   Boehm, Barry
TI Effort estimation of open source Android projects via transaction
   analysis
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Android application analysis; Bayesian analysis; effort estimation;
   model calibration; software functional size analysis; software size
   metrics; transaction analysis; use case analysis
ID SIZE
AB Transactions have been used in many software sizing methods to measure software functional size and provide a basis for effort estimation. To further investigate the effects that transactions have on software functional size and more accurately estimate project effort using the transactional information, in this paper, we propose a method to identify transactions, as well as their complexity attributes that are influential to software functional size, directly from the source code of Android projects using static and dynamic analyses.
   The identified transactions are classified into different complexity levels and applied with different weights based on their evaluated complexity levels to distinguish their effects on software functional size. A size metric called sum of weighted transactions (SWT) is proposed to measure software functional size. We calibrate an effort estimation model using SWT based on a data set of 34 open source Android projects, and show the effectiveness of using SWT as a software functional size measure to estimate project effort.
C1 [Qi, Kan; Boehm, Barry] Univ Southern Calif, Ctr Syst & Software Engn, Los Angeles, CA 90007 USA.
C3 University of Southern California
RP Qi, K (corresponding author), 941 Bloom Walk SAL, Los Angeles, CA 90089 USA.
EM kqi@usc.edu
CR [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2004, Kendall's Advanced Theory of Statistic 2B
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Arzt S, 2013, LECT NOTES COMPUT SC, V8174, P364, DOI 10.1007/978-3-642-40787-1_26
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Cohen J., 1988, STAT POWER ANAL BEHA
   Costagliola G, 2005, IEEE T SOFTWARE ENG, V31, P52, DOI 10.1109/TSE.2005.5
   Cui JF, 2011, INFORM SOFTWARE TECH, V53, P601, DOI 10.1016/j.infsof.2011.01.006
   Dale BE, 2006, BIOREFINERIES - INDUSTRIAL PROCESSES AND PRODUCTS: STATUS QUO AND FUTURE DIRECTIONS, VOL 1, P41
   DEKKERS C, 2000, IT METRICS STRAT, V6, P1
   DESOUZA LS, 2014, P 2 INT C COMP SCI E, P45, DOI DOI 10.5121/CSIT.2014.4405
   DUNNETT CW, 1955, J AM STAT ASSOC, V50, P1096, DOI 10.2307/2281208
   Ferrucci F, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P365, DOI 10.1109/SEAA.2015.23
   Francese R, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P357, DOI 10.1109/SEAA.2015.22
   Jenner M.S., 2001, 4 EUROPEAN C SOFTWAR, P173
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kan Qi, 2019, 2019 IEEE/ACM International Conference on Software and System Processes (ICSSP). Proceedings, P165, DOI 10.1109/ICSSP.2019.00030
   KARNER G, 1993, OBJECTIVE SYST SF AB, V17, P1
   KAUR A, 2019, EFFORT ESTIMATION MO, P163
   MINKIEWICZ A, 2015, MEASURING OBJECT ORI
   NGUYEN D, 2009, STUDIES CONFIDENCE S
   NITZE A, 2013, DASMA METR K, V11, P1
   PREUSS T, 2013, MOBILE APPL FUNCTION, P1
   Qi FM, 2017, INFORM SOFTWARE TECH, V92, P145, DOI 10.1016/j.infsof.2017.07.015
   Qi K, 2017, SOFTW TECHN C STC 20, P1
   Qi K, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239236
   Qi K, 2018, PROC IEEE ACM INT C, P278, DOI 10.1145/3183440.3194969
   Qi K, 2018, IEEE ACM INT WORKS M, P17, DOI 10.1145/3193954.3193955
   Robles Gregorio., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P222
   Smucker MD, 2007, P 16 ACM C C INF KNO, P623, DOI [DOI 10.1145/1321440.1321528, 10.1145/1321440.1321528U, DOI 10.1145/1321440.1321528U]
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   Uemura T., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P62, DOI 10.1109/METRIC.1999.809727
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   Van Heeringen Harold, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P11, DOI 10.1109/IWSM.Mensura.2014.8
   Yang SQ, 2018, AUTOMAT SOFTW ENG, V25, P833, DOI 10.1007/s10515-018-0237-6
   Yuan YJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P949, DOI 10.1145/3106237.3122821
NR 36
TC 0
Z9 0
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2021
VL 33
IS 1
SI SI
AR e2253
DI 10.1002/smr.2253
EA FEB 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PV3LO
UT WOS:000514831800001
DA 2024-07-18
ER

PT J
AU Zahid, M
   Inayat, I
   Daneva, M
   Mehmood, Z
AF Zahid, Maryam
   Inayat, Irum
   Daneva, Maya
   Mehmood, Zahid
TI A security risk mitigation framework for cyber physical systems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE case study; cryptosystem; cyber physical systems (CPS); cyber security;
   risk assessment; risk identification; risk management; risk mitigation;
   security
ID SCADA; THREATS
AB Cyber physical systems (CPSs) are safety-critical, be it weapon systems, smart medical devices, or grid stations. This makes ensuring security of all the components constituting a CPS unavoidable. The rise in the demand of interconnectedness has made such systems vulnerable to attacks, ie, cyberattacks. Over 170 cases of cyber-security breaches in CPS were reported over the past two decades. An increase in the number of cyberattack incidents on CPS makes them more exposed and less trustworthy. However, identifying the security requirements of the CPS to pinpoint the relevant risks may help to counteract the potential attacks. Literature reveals that the most targeted security requirements of CPS are authentication, integrity, and availability. However, little attention has been paid on certain crucial security attributes such as data freshness and nonrepudiation. One major reason of security breaches in CPS is the lack of custom or generalized countermeasures. Therefore, we propose a security risk mitigation framework for a CPS focused on constraints, ie, authentication, data integrity, data freshness, nonrepudiation, and confidentiality. Furthermore, we evaluate the proposed work using a case study of a safety critical system. The results show a decrease in the severity of the identified security risks, ie, man-in-the-middle attack, spoofing, and data tempering.
C1 [Zahid, Maryam] Natl Univ Comp & Emerging Sci, SEAL, Islamabad, Pakistan.
   [Inayat, Irum] Capital Univ Sci & Technol, Islamabad, Pakistan.
   [Daneva, Maya] Univ Twente, Fac Elect Engn Math & Comp Sci, SCS, Enschede, Netherlands.
   [Mehmood, Zahid] Univ Lahore, Dept Elect Engn, Islamabad, Pakistan.
C3 Capital University of Science & Technology; University of Twente
RP Inayat, I (corresponding author), Natl Univ Comp & Emerging Sci, SEAL, Islamabad, Pakistan.
EM irum.inayat@nu.edu.pk
RI Inayat, Irum/ABI-4226-2020
OI Daneva, Maya/0000-0001-7359-8013; Inayat, Irum/0000-0001-5576-6212
CR Ab Rahman NH, 2016, IEEE CLOUD COMPUT, V3, P50, DOI 10.1109/MCC.2016.5
   [Anonymous], 2016, IEEE NEWSL
   [Anonymous], SECUR SMART EMBED DE
   [Anonymous], IEEE DES TEST
   [Anonymous], 2013, WORLD C ENG
   [Anonymous], FIRE SECURITY ALARM
   [Anonymous], 23 AS PAC C COMM APC
   [Anonymous], MIRROR ONLINE APR
   [Anonymous], 2009, WORKSH FUT DIR CYB P
   [Anonymous], POWER SUPPLY RELIABI
   [Anonymous], MORE SECURE TRUSTWOR
   [Anonymous], RISK ASSESSMENT MANA
   [Anonymous], 9 INT C INT INF HID
   [Anonymous], 2018, IEEE TRANS CLOUD COM
   [Anonymous], IEEE T SMART GRID
   [Anonymous], SYSTEMS IND ENG SERI
   [Anonymous], P 51 ANN C INF SCI S
   [Anonymous], WHAT IS SOFTW RISK S
   [Anonymous], P 6 INT C COMM SYST
   [Anonymous], GLOBALSIGN BLOG
   [Anonymous], 2013, CSI T ICT, DOI [10.1007/s40012-013-0010-8.519, DOI 10.1007/S40012-013-0010-8.519]
   [Anonymous], 2018, IEEE T DEPENDABLE SE
   Anwar A., 2014, STATE ART INTRUSION, DOI DOI 10.1201/B16390-9
   Ashibani Y, 2017, COMPUT SECUR, V68, P81, DOI 10.1016/j.cose.2017.04.005
   Axelrod CW, 2013, ARTECH H COMP SEC LI, P1
   Biro M, 2018, IEEE SOFTWARE, V35, P24, DOI 10.1109/MS.2017.4541050
   Chan ACF, 2013, IEEE COMMUN MAG, V51, P57
   Ciapessoni E, 2016, IEEE T SMART GRID, V7, P2890, DOI 10.1109/TSG.2016.2519239
   Fletcher K. K., 2011, 2011 5th International Conference on Secure Software Integration & Reliability Improvement Companion, P106, DOI 10.1109/SSIRI-C.2011.25
   Gong LN, 2017, AIP CONF PROC, V1834, DOI 10.1063/1.4981623
   Guangyu Wu, 2016, Control Theory and Technology, V14, P2, DOI 10.1007/s11768-016-5123-9
   Guo Y, 2017, IEEE INT CONF SOFTW, P1, DOI 10.1109/ICST.2017.8
   Hartmann N, 2013, POSSIBILITY AND ACTUALITY, P1, DOI 10.1515/9783110246681
   Humayed A, 2017, IEEE INTERNET THINGS, V4, P1802, DOI 10.1109/JIOT.2017.2703172
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Manshaei MH, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480742
   Mellado D, 2007, COMPUT STAND INTER, V29, P244, DOI 10.1016/j.csi.2006.04.002
   Nagaraju V., 2017, International Symposium on Technologies for Homeland Security, P1, DOI [10.1109 /THS.2017.7943455, DOI 10.1109/THS.2017.7943455]
   Nazir S, 2017, COMPUT SECUR, V70, P436, DOI 10.1016/j.cose.2017.06.010
   Nicholson A, 2012, COMPUT SECUR, V31, P418, DOI 10.1016/j.cose.2012.02.009
   Oz MA, 2017, EKSPLOAT NIEZAWODN, V19, P114, DOI 10.17531/ein.2017.1.16
   Polemi N, 2015, INT CONF INTERNET, P349, DOI 10.1109/ICITST.2015.7412119
   Rajbhandari L, 2011, LECT NOTES COMPUT SC, V7025, P147, DOI 10.1007/978-3-642-24712-5_12
   Ralston PAS, 2007, ISA T, V46, P583, DOI 10.1016/j.isatra.2007.04.003
   Ray PD, 2010, INT CARN CONF SECU, P276
   Rierson Leanna, 2013, Developing Safety-Critical Software: A Practical Guide for Aviation Software and DO-178C Compliance
   Saleem K, 2017, HEALTH 4.0: HOW VIRTUALIZATION AND BIG DATA ARE REVOLUTIONIZING HEALTHCARE, P233, DOI 10.1007/978-3-319-47617-9_12
   Santini R, 2015, 2015 18TH INTERNATIONAL CONFERENCE ON INFORMATION FUSION (FUSION), P1467
   Saripalli P., 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P280, DOI 10.1109/CLOUD.2010.22
   Seddon PB, 2012, EUR J INFORM SYST, V21, P6, DOI 10.1057/ejis.2011.9
   Sridhar S, 2012, P IEEE, V100, P210, DOI 10.1109/JPROC.2011.2165269
   Sumner M, 2009, INFORM SYST MANAGE, V26, P2, DOI 10.1080/10580530802384639
   Tondel Inger Anne, 2018, Applied Computing and Informatics, V14, P17, DOI 10.1016/j.aci.2017.01.001
   Wang C., 2017, IEEEACM 25 INT S QUA, P1
   Wang WY, 2013, COMPUT NETW, V57, P1344, DOI 10.1016/j.comnet.2012.12.017
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Xiang YM, 2017, ELECTR POW SYST RES, V149, P156, DOI 10.1016/j.epsr.2017.04.023
   Xu Q, 2017, IEEE INTERNET THINGS, V4, P1924, DOI 10.1109/JIOT.2017.2684221
   Yan Z, 2014, J NETW COMPUT APPL, V42, P120, DOI 10.1016/j.jnca.2014.01.014
   Zhang L., 2013, The Journal of China Universities of Posts and Telecommunications, V20, P25
NR 60
TC 4
Z9 5
U1 1
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2020
VL 32
IS 2
SI SI
AR e2219
DI 10.1002/smr.2219
EA AUG 2019
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KH6HP
UT WOS:000484318700001
OA Green Published
DA 2024-07-18
ER

PT J
AU Chatterjee, S
   Shukla, A
AF Chatterjee, Subhashis
   Shukla, Ankur
TI A unified approach of testing coverage-based software reliability growth
   modelling with fault detection probability, imperfect debugging, and
   change point
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE change point; fault detection probability; imperfect debugging;
   non-homogeneous Poisson process; software reliability growth model;
   testing coverage factor
ID RELEASE POLICY
AB This paper presents a unified approach to model the reliability growth of software with imperfect debugging and coverage factor. Existing testing coverage-based software reliability growth models considered that faults present at a particular fault location are detected with certainty during the testing process. Practically, it is very difficult to detect all software faults. To overcome this limitation, a revised software reliability growth model has been developed with the assumption that detection of the faults at a particular fault location is not definite. Furthermore, a new method to model the imperfect debugging phenomenon has been incorporated in the proposed study. A revised model ranking method has been developed to improve the accuracy of model ranking, which is mainly extension of existing normalized criteria distance method. Change point analysis has been done with the effect of different environmental factors on the models' parameters. Numerical examples are given to demonstrate the effectiveness of the proposed model.
C1 [Chatterjee, Subhashis; Shukla, Ankur] Indian Sch Mines, Indian Inst Technol, Dept Appl Math, Dhanbad, Bihar, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (Indian School of Mines) Dhanbad
RP Chatterjee, S (corresponding author), Indian Inst Technol ISM, Dept Appl Math, Dhanbad, Bihar, India.
EM chatterjee_subhashis@rediffmail.com
RI Shukla, Ankur/O-8177-2019; Chatterjee, Subhashis/I-9756-2014; Shukla,
   Ankur/D-7789-2019
OI Shukla, Ankur/0000-0002-6737-2031; Chatterjee,
   Subhashis/0000-0001-7908-6705; Shukla, Ankur/0000-0002-6737-2031
CR AKAIKE H, 1974, IEEE T AUTOMAT CONTR, VAC19, P716, DOI 10.1109/TAC.1974.1100705
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   Chang, 1997, ANAL SOFTWARE RELIAB
   Chatterjee S, 2014, INT J SYST ASSUR ENG, V5, P399, DOI 10.1007/s13198-013-0181-6
   Chatterjee S, 2016, P I MECH ENG O-J RIS, V230, P579, DOI 10.1177/1748006X16673767
   Chatterjee S, 2016, ARAB J SCI ENG, V41, P5009, DOI 10.1007/s13369-016-2189-0
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11, P1411, DOI 10.1109/TSE.1985.232177
   Gokhale SS, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P299, DOI 10.1109/ISSRE.1996.558886
   Inoue Shinji, 2008, 2008 Second IEEE International Conference on Secure System Integration and Reliability Improvement (SSIRI), P150, DOI 10.1109/SSIRI.2008.21
   Inoue S, 2008, IN C IND ENG ENG MAN, P531, DOI 10.1109/IEEM.2008.4737925
   Jelinski Z., 1972, Statistical Computer Performance Evaluation, P465, DOI DOI 10.1016/B978-0-12-266950-7.50028-1
   Kapur P.K., 1999, Contributions to hardware and software reliability
   Kapur PK, 2011, SPRINGER SER RELIAB, P1, DOI 10.1007/978-0-85729-204-9
   Khoshgoftaar T. M., 1991, Proceedings. 1991 International Symposium on Software Reliability Engineering (Cat. No.91TH0336-5), P183, DOI 10.1109/ISSRE.1991.145378
   Killick R, 2014, J STAT SOFTW, V58, P1
   Malaiya Y. K., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P186, DOI 10.1109/ISSRE.1994.341373
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   Pham H, 2003, EUR J OPER RES, V145, P443, DOI 10.1016/S0377-2217(02)00181-9
   Pham H, 2003, HANDBOOK OF RELIABILITY ENGINEERING, P285, DOI 10.1007/1-85233-841-5_16
   Pham H., 2007, System Software Reliability
   Pham H., 2008, Recent Advances in Reliability and Quality in Design
   Pham H, 2013, P 19 ISSAT INT C REL, P5
   Pham H., 2014, Vietnam Journal of Computer Science, V1, P39, DOI DOI 10.1007/S40595-013-0003-4
   Shyur HJ, 2003, J SYST SOFTWARE, V66, P135, DOI 10.1016/S0164-1212(02)00071-7
   TOHMA Y, 1989, PROCEEDINGS : THE THIRTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P610, DOI 10.1109/CMPSAC.1989.65155
   Xie M., 1991, SOFTWARE RELIABILITY
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   ZHAO M, 1993, COMMUN STAT-THEOR M, V22, P757, DOI 10.1080/03610929308831053
NR 29
TC 22
Z9 22
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2019
VL 31
IS 3
AR e2150
DI 10.1002/smr.2150
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ2SJ
UT WOS:000462251700001
DA 2024-07-18
ER

PT J
AU Liu, YZ
   Liu, L
   Liu, HX
   Wang, XY
AF Liu, Yuzhou
   Liu, Lei
   Liu, Huaxiao
   Wang, Xiaoyu
TI Analyzing reviews guided by App descriptions for the software
   development and evolution
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE App descriptions; review analysis; sentiment mining; topic modeling
ID FEATURES
AB Reviews in App stores are a massive and fast-growing data resource for developers to understand user experiences and their needs. Studies show that users often express their sentiments on App features in reviews, and this information is important for the development and evolution of Apps. To help developers gain such information efficiently, this paper proposes a method using App descriptions, another typical data in App stores, to guide the analysis of reviews. Firstly, we extract App features from descriptions, then summarize them to gain topics of App features as high-level information; the results are formalized as a topic-based domain model (TBDM). Secondly, we train classifiers of reviews based on the model to establish the relationships between user sentiments and App features. Finally, a quantified method is given to analyze the model based on developer preferences for recommending and summarizing reviews. To evaluate our approach, experiments were conducted using the App descriptions and reviews collected from Google Play. The results indicate that the approach can classify reviews to their related App features effectively (average F measure is 86.13%), and provides useful information for overall analyzing App features in a domain and identifying (dis)advantages of an App.
C1 [Liu, Yuzhou; Liu, Lei; Liu, Huaxiao; Wang, Xiaoyu] Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.
   [Liu, Yuzhou; Liu, Lei; Liu, Huaxiao; Wang, Xiaoyu] Minist Educ, Key Lab Symbol Computat & Knowledge Engn, Changchun, Jilin, Peoples R China.
C3 Jilin University
RP Liu, HX (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.
EM liuhuaxiao@jlu.edu.cn
RI lei, liu/HTR-5486-2023; Wang, Xiaoyu/JOK-1640-2023
OI Wang, Xiaoyu/0000-0001-8800-8995; liu, huaxiao/0000-0002-8151-1413
FU National Key Research and Development Program of China [2017YFB1003103]
FX National Key Research and Development Program of China, Grant/Award
   Number: 2017YFB1003103
CR Bagheri E, 2012, AUTOMAT SOFTW ENG, V19, P335, DOI 10.1007/s10515-011-0099-7
   Bakar NH, 2016, APPL SOFT COMPUT, V49, P1297, DOI 10.1016/j.asoc.2016.07.048
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Finkelstein A., 2014, RN, V14, P10
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gao CY, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P35, DOI 10.1109/ISSRE.2015.7381797
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hoffman MD, 2010, INT C NEUR INF PROC, P856
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Liu Y., 2017, Journal of Offshore Engineering and Technology, V1, P1
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Mefteh M, 2016, COMPUT J, V59, P1784, DOI 10.1093/comjnl/bxw027
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Mu YH, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION AND MULTIMEDIA TECHNOLOGY, PROCEEDINGS, P194, DOI 10.1109/ICIMT.2009.47
   Nigam K, 2000, MACH LEARN, V39, P103, DOI 10.1023/A:1007692713085
   Oh J, 2013, CHI 13 HUM FACT COMP, P1809
   Pagano D, 2013, INT C REQ ENG, P125
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Vu PM, 2016, IEEE INT CONF AUTOM, P726, DOI 10.1145/2970276.2970365
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Sarro F, 2015, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2015.7320410
   Shah FA, P INT WORKSH APP MAR, P15
   Stevens K, 2012, C EMP METH NAT LANG, P952
   Villarroel L, 2017, IEEE ACM INT C SOFTW, P14
   Wohlin C, 2012, IEEE T SOFTWARE ENG, VSE-12, P733
NR 36
TC 8
Z9 9
U1 0
U2 23
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2018
VL 30
IS 12
AR e2112
DI 10.1002/smr.2112
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE1JU
UT WOS:000453027700011
DA 2024-07-18
ER

PT J
AU Ali, A
   Maghawry, HA
   Badr, N
AF Ali, Amira
   Maghawry, Huda Amin
   Badr, Nagwa
TI Automated parallel GUI testing as a service for mobile applications
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE TaaS; cloud computing; mobile application testing; GUI testing; Appium
AB Recently, testing mobile applications is gaining much attention due to the widespread of smartphones and the tremendous number of mobile applications development. It is essential to test mobile applications before being released for the public use. Graphical user interface (GUI) testing is a type of mobile applications testing conducted to ensure the proper functionality of the GUI components. Typically, GUI testing requires a lot of effort and time whether manual or automatic. Cloud computing is an emerging technology that can be used in the software engineering field to overcome the defects of the traditional testing approaches by using cloud computing resources. As a result, testing-as-a-service is introduced as a service model that conducts all testing activities in a fully automated manner. In this paper, a system for mobile applications GUI testing based on testing-as-a-service architecture is proposed. The proposed system performs all testing activities including automatic test case generation and simultaneous test execution on multiple virtual nodes for testing Android-based applications. The proposed system reduces testing time and meets fast time-to market constraint of mobile applications. Moreover, the proposed system architecture addresses many issues such as maximizing resource utilization, continuous monitoring to ensure system reliability, and applying fault-tolerance approach to handle occurrence of any failure.
C1 [Ali, Amira; Maghawry, Huda Amin; Badr, Nagwa] Ain Shams Univ, Dept Informat Syst, Cairo, Egypt.
C3 Egyptian Knowledge Bank (EKB); Ain Shams University
RP Ali, A (corresponding author), Ain Shams Univ, Dept Informat Syst, Cairo, Egypt.
EM amira.aly92@live.com
RI Amin, Huda/ABI-1996-2020
OI Amin, Huda/0000-0001-5550-5717
CR Agrawal S., 2005, SIGMOD, P930, DOI DOI 10.1145/1066157.1066292
   Ali A, 2015, 2015 IEEE SEVENTH INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING AND INFORMATION SYSTEMS (ICICIS), P356, DOI 10.1109/IntelCIS.2015.7397245
   Amalfitano D., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P252, DOI 10.1109/ICSTW.2011.77
   [Anonymous], 2012, SOFTWARE TESTING CLO
   [Anonymous], 2014, SURPASSED GARTNER SA
   [Anonymous], INT J APPL ENG RES
   [Anonymous], VIS PAR UML UML TOOL
   BERENBACH B, 2009, SOFTWARE SYSTEMS REQ
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Cartaxo EG, 2007, IEEE SYS MAN CYBERN, P2885
   Chao Liu, 2016, 2016 ACM/IEEE 7th International Conference on Cyber-Physical Systems (ICCPS), P1, DOI 10.1109/ICCPS.2016.7479069
   Chen Mingsong., 2008, ACM Great Lakes Symposium on VLSI, P139
   Flora Harleen K., 2014, International Journal of Modern Education and Computer Science, V6, P1, DOI 10.5815/ijmecs.2014.06.01
   Gao J, 2013, 2013 IEEE SEVENTH INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2013), P212, DOI 10.1109/SOSE.2013.66
   Gao J, 2014, IEEE HI ASS SYS ENGR, P158, DOI 10.1109/HASE.2014.30
   Gao J, 2014, COMPUTER, V47, P46, DOI 10.1109/MC.2013.445
   Gronli TM, 2016, P ANN HICSS, P5711, DOI 10.1109/HICSS.2016.706
   Gudmundsson V, 2016, ARXIV160600503
   Heineman GT., 2016, Algorithms in a nutshell: A practical guide
   HIRSCHBERG DS, 1977, J ACM, V24, P664, DOI 10.1145/322033.322044
   Ithrikrishna P., 2016, 2016 INT C COMP COMM, P1
   Janicki M, 2012, SOFTW TEST VERIF REL, V22, P313, DOI 10.1002/stvr.460
   Katherine A., 2012, INT J COMPUTER APPL, V46, P21
   Kaur A, 2016, PROCEEDINGS OF THE 10TH INDIACOM - 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT, P1057
   Kirubakaran B., 2013, Proceedings of the 2013 International Conference on Pattern Recognition, Informatics and Mobile Engineering (PRIME), P79, DOI 10.1109/ICPRIME.2013.6496451
   Kochhar PS, 2015, SOFTW TEST VER VAL I, P1
   Li A, 2014, INT CONF SOFTW SECUR, P68, DOI 10.1109/SERE.2014.20
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Mahmood R., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P22, DOI 10.1109/IWAST.2012.6228986
   Mell P, 2010, COMMUN ACM, V53, P50
   Murugesan Logeshwaran, 2014, 2014 IEEE/ACIS 13th International Conference on Computer and Information Science (ICIS), P287, DOI 10.1109/ICIS.2014.6912148
   Nagappan M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P21, DOI 10.1109/SANER.2016.88
   Parveen Tauhida, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P424, DOI 10.1109/ICSTW.2010.77
   Peng Zhenlong, 2012, 2012 International Conference on Computer Science and Service System (CSSS), P450, DOI 10.1109/CSSS.2012.119
   Priyadharshini V, 2014, CORR
   Riungu L. M., 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P557, DOI 10.1109/CloudCom.2010.58
   Rosenblum M., 1999, Proceedings of Hot Chips, P185
   Rumbaugh J., 1999, UNIFIED MODELLING LA, V1st
   Singh Shiwangi., 2014, International Journal of Current Engineering and Technology (IJCET), V4, P3627
   Sipser M., 2006, INTRO THEORY COMPUTA, V2
   Starov O, 2013, 2013 8TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST (AST), P1, DOI 10.1109/IWAST.2013.6595783
   Tao CQ, 2015, 2015 THIRD INTERNATIONAL CONFERENCE ON ADVANCED CLOUD AND BIG DATA, P133, DOI 10.1109/CBD.2015.30
   Versluis G., 2017, XAMARIN CONTINUOUS I, P71
   Wang W, 2012, ADV COMPUTER COMMUNI, P785
   Wasnik C, 2013, INT J COMPUT DISTRIB, V2
   Zhang SB, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P315, DOI 10.1109/SOSE.2015.27
   Zhang T, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P179, DOI 10.1109/SOSE.2015.35
   Zhengxian Yang., 2014, Sixiangshi [Intellectual History], P1
NR 48
TC 7
Z9 7
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2018
VL 30
IS 10
AR e1963
DI 10.1002/smr.1963
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GX3TU
UT WOS:000447650700005
DA 2024-07-18
ER

PT J
AU Ge, N
   Dieumegard, A
   Jenn, E
   Voisin, L
AF Ge, Ning
   Dieumegard, Arnaud
   Jenn, Eric
   Voisin, Laurent
TI Correct-by-construction specification to verified code
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE C; code generation; equivalence proof; Event-B; formal methods; property
   proof
AB Event-B is a formal notation and method for the systems development. The key feature of this method is to produce correct-by-construction system designs. Once the correct design is established, the remaining work is to generate or implement correct code from the design. Two main problems remain in the process from the correct-by-construction design to the correct software. First, the Event-B design is quasi-correct due to some technical limitations. For instance, it is still difficult to prove the liveness properties by the Rodin platform; it is not possible to construct the Event-B design with floating-point arithmetic, and sometimes, the Event-B model is incomplete and must rely on the third-party libraries. Therefore, a method is needed to complement these modeling and proof gaps. Secondly, proving the correctness of an automatic code generator is very difficult; therefore, a method is needed to guarantee the correctness of the produced code without proving the code generator. In this article, we address the above 2 problems by introducing an intermediate formal language called High-Level Language (HLL) between the Event-B models and the C code. The Event-B model is translated to HLL with an additional schedule configuration, where Event-B invariants and system invariants (here, deadlock-freeness and liveness properties) are proved using a SAT-based model checker called S3. This proof guarantees the correctness of the HLL model with respect to the Event-B model. The C code is then automatically generated from the HLL model for most functions and is manually implemented for the third-party ones according to the function contracts defined in Event-B. The correctness of the generated C code is guaranteed using the equivalence proof, and the correctness of the implemented C code is guaranteed using the conformance proof. Through the article, we use a traffic light controller to illustrate the proposed method; then, we apply the method to an automatic protection function of a 3-wheeled robot to evaluate its feasibility.
C1 [Ge, Ning] Beihang Univ, Sch Software, Beijing, Peoples R China.
   [Ge, Ning; Dieumegard, Arnaud; Jenn, Eric] IRT St Exupery, Toulouse, France.
   [Ge, Ning; Voisin, Laurent] Systerel, Aix En Provence, France.
C3 Beihang University
RP Ge, N (corresponding author), Beihang Univ, Sch Software, Beijing, Peoples R China.
EM gening@buaa.edu.cn
OI Voisin, Laurent/0000-0002-2426-0101; GE, Ning/0000-0002-1708-5018
FU INGEQUIP project
FX INGEQUIP project
CR Ab Rahim L, 2015, SOFTW SYST MODEL, V14, P1003, DOI 10.1007/s10270-013-0358-0
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   [Anonymous], 2005, B BOOK ASSIGNING PRO
   Back RJR, 1989, WORKSH SCH S REX PRO, P67
   Barnett  M., 2004, P INT WORKSH CONSTR, P49
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Biere A., 2002, ELECT NOTES THEOR CO, V66, P160, DOI [DOI 10.1016/S1571-0661(04)80410-9, 10.1016/S1571-0661(04)80410-9]
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Biere Armin., 1999, Symbolic model checking without BDDs
   BJESSE P, 2000, FORMAL METHODS COMPU, P409
   Boström P, 2014, FORM ASP COMPUT, V26, P281, DOI 10.1007/s00165-012-0260-5
   Boström P, 2010, LECT NOTES COMPUT SC, V6396, P74, DOI 10.1007/978-3-642-16265-7_7
   Caspi P, 2003, ACM SIGPLAN NOTICES, V38, P153, DOI 10.1145/780731.780754
   Clabaut M., 2016, 8 EUR C EMB REAL TIM
   Coleman J., 2005, 5 EUR DEP COMP C EDC, P23
   Cuenot P., 2016, 8 EUR C EMB REAL TIM
   Cuoq Pascal, 2012, Software Engineering and Formal Methods. Proceedings of the 10th International Conference, SEFM 2012, P233, DOI 10.1007/978-3-642-33826-7_16
   Dieumegard A, 2016, EVENT B WORK SOME LE
   Edmunds A., 2011, PLACES 2011
   Funk M, 2008, P 3 INT C SOFTW DAT
   Furst A, 2014, LECT NOTES COMPUT SC, V8739, P323, DOI 10.1007/978-3-319-10181-1_20
   Ge N, 2017, 11 INT S THEOR ASP S
   Ge N, 2017, INT J SOFTW TOOLS TE, V9933, P1
   Ge N, 2016, LECT NOTES COMPUT SC, V9933, P171, DOI 10.1007/978-3-319-45943-1_12
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Jastram M., 2014, RODIN USERS HDB COVE
   Kripke S., 1963, ACTA PHILOS FENN, V16, P83
   Lano K., 2017, TRANSFORMATION UML C
   Mery D., 2013, 1 INT WORKSH VER PRO, P57
   Mery D., 2011, P 2 S INF COMM TECHN, P179, DOI DOI 10.1145/2069216.2069252
   Rivera V, 2017, INT J SOFTW TOOLS TE, V19, P31, DOI 10.1007/s10009-015-0381-2
   Robinson Ken, 2009, CONCISE SUMMARY EVEN
   Romanovsky A., 2013, Industrial Deployment of System Engineering Methods
   RTCA Inc, 2011, DO330 RTCA
   Sheeran M, 2000, LECT NOTES COMPUT SC, V1954, P108
   Hoang TS, 2011, LECT NOTES COMPUT SC, V6991, P456, DOI 10.1007/978-3-642-24559-6_31
   Wright S., 2009, WORKSHOP INTEGRATION, P14
   Yang F, 2011, 14 BRAZ S FORM METH
   Zuras D., 2008, 7542008 IEEE, V754-2008, P1, DOI [DOI 10.1109/IEEESTD.2008.4610935, DOI 10.1109/IEEESTD.2008.5976968]
NR 39
TC 4
Z9 4
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2018
VL 30
IS 10
AR e1959
DI 10.1002/smr.1959
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GX3TU
UT WOS:000447650700004
DA 2024-07-18
ER

PT J
AU Horcas, JM
   Monteil, J
   Bouroche, M
   Pinto, M
   Fuentes, L
   Clarke, S
AF Miguel Horcas, Jose
   Monteil, Julien
   Bouroche, Melanie
   Pinto, Monica
   Fuentes, Lidia
   Clarke, Siobhan
TI Context-dependent reconfiguration of autonomous vehicles in mixed
   traffic
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE autonomous vehicles; car-following model; dynamic software product line;
   reconfiguration; traffic quality
ID MODEL; PARAMETERS
AB Human drivers naturally adapt their behaviour depending on the traffic conditions, such as the current weather and road type. Autonomous vehicles need to do the same, in a way that is both safe and efficient in traffic composed of both conventional and autonomous vehicles. In this paper, we demonstrate the applicability of a reconfigurable vehicle controller agent for autonomous vehicles that adapts the parameters of a used car-following model at runtime, so as to maintain a high degree of traffic quality (efficiency and safety) under different weather conditions. We follow a dynamic software product line approach to model the variability of the car-following model parameters, context changes and traffic quality, and generate specific configurations for each particular context. Under realistic conditions, autonomous vehicles have only a very local knowledge of other vehicles' variables. We investigate a distributed model predictive controller agent for autonomous vehicles to estimate their behavioural parameters at runtime, based on their available knowledge of the system. We show that autonomous vehicles with the proposed reconfigurable controller agent lead to behaviour similar to that achieved by human drivers, depending on the context.
C1 [Miguel Horcas, Jose; Pinto, Monica; Fuentes, Lidia] Univ Malaga, CAOSD Grp, Andalucia Tech, Malaga, Spain.
   [Monteil, Julien; Bouroche, Melanie; Clarke, Siobhan] Trinity Coll Dublin, Sch Comp Sci & Stat, Distributed Syst Grp, Dublin, Ireland.
C3 Universidad de Malaga; Trinity College Dublin
RP Horcas, JM (corresponding author), Bulevar Louis Pasteur,35 ETSII Lab 3-3-3, Malaga 29071, Spain.
EM horcas@lcc.uma.es
RI Horcas Aguilera, José Miguel/R-3564-2018; Fuentes, Lidia/M-5580-2014
OI Horcas Aguilera, José Miguel/0000-0002-7771-0575; Bouroche,
   Melanie/0000-0002-5039-0815; Fuentes, Lidia/0000-0002-5677-7156; Clarke,
   Siobhan/0000-0001-5721-9976
FU Magic [P12-TIC1814]; HADAS [TIN2015-64841-R]
FX Magic, Grant/Award Number: P12-TIC1814; HADAS, Grant/Award Number:
   TIN2015-64841-R
CR Agarwal M., 2005, P 2005 MIDCONTINENT, P18
   Alia GGMN, 2016, J SYST SOFTWARE, V117, P508, DOI 10.1016/j.jss.2016.04.005
   Antsaklis P. J., 1991, IEEE Control Systems Magazine, V11, P5, DOI 10.1109/37.88585
   Asamer J, 2013, IET INTELL TRANSP SY, V7, P114, DOI 10.1049/iet-its.2011.0193
   Badeig F, 2016, J AMB INTEL SMART EN, V8, P325, DOI 10.3233/AIS-160380
   Behere S, 2016, INFORM SOFTWARE TECH, V73, P136, DOI 10.1016/j.infsof.2015.12.008
   Billot R, 2009, TRANSPORT RES REC, P134, DOI 10.3141/2107-14
   Cabot J., 2012, OBJECT CONSTRAINT LA, P58
   Cetina C, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P117, DOI 10.1109/SPLC.2008.13
   Corcoba-Magaña V, 2017, J AMB INTEL SMART EN, V9, P579, DOI 10.3233/AIS-170452
   Edwards JuliaB., 1999, TRANSPORT RES F-TRAF, V2, P1, DOI DOI 10.1016/S1369-8478(99)00003-0
   El Faouzi N.-E., 2010, 15 INT ROAD WEATH C
   Gallen R, 2010, IEEE INT VEH SYM, P107, DOI 10.1109/IVS.2010.5548035
   Gamez N, 2013, INFORM SOFTWARE TECH, V55, P563, DOI 10.1016/j.infsof.2012.06.012
   Gettman D, 2003, TRANSPORT RES REC, P104, DOI 10.3141/1840-12
   Ghezzi C, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1888
   GIPPS PG, 1981, TRANSPORT RES B-METH, V15, P105, DOI 10.1016/0191-2615(81)90037-0
   Hallsteinsen S, 2012, J SYST SOFTWARE, V85, P2840, DOI 10.1016/j.jss.2012.07.052
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139, DOI 10.1109/SPLC.2008.25
   Hogema JH, 1996, TECHNICAL REPORT
   Hoogendoorn R. G., 2010, 2010 13th International IEEE Conference on Intelligent Transportation Systems (ITSC 2010), P450, DOI 10.1109/ITSC.2010.5625046
   Horcas JM, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P32, DOI 10.1145/3109729.3109749
   Horcas JM, 2016, J SYST SOFTWARE, V112, P78, DOI 10.1016/j.jss.2015.11.005
   Horcas Jose-Miguel, 2014, 17 INT S COMP BAS SO, P35
   Jung S, 2011, TRANSPORT RES REC, P134, DOI 10.3141/2237-15
   Kesting A., 2009, ENHANCED INTELLIGENT, V12
   Kesting A, 2007, TRANSPORT RES REC, P86, DOI 10.3141/1999-10
   Martin C, 2013, THESIS
   Meng W, 2014, GENERIC MODEL PREDIC
   Metzger A., Proc. Futur. Softw. Eng. - FOSE 2014, ACM Press, New York, New York, USA, P70, DOI DOI 10.1145/2593882.2593888
   Minderhoud MM, 2001, ACCIDENT ANAL PREV, V33, P89, DOI 10.1016/S0001-4575(00)00019-1
   Monteil J, 2015, IEEE INT C INTELL TR, P2046, DOI 10.1109/ITSC.2015.331
   Pascual GG, 2015, FUTURE GENER COMP SY, V47, P127, DOI 10.1016/j.future.2014.08.015
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Punzo V, 2015, IEEE T INTELL TRANSP, V16, P184, DOI 10.1109/TITS.2014.2331453
   Rakha H, 2008, TRANSPORT RES REC, P8, DOI 10.3141/2071-02
   Soria I, 2014, SIMUL MODEL PRACT TH, V40, P208, DOI 10.1016/j.simpat.2013.10.002
   Sucasas V, 2016, COMPUT SECUR, V60, P193, DOI 10.1016/j.cose.2016.04.006
   Yu SW, 2013, COMMUN NONLINEAR SCI, V18, P1229, DOI 10.1016/j.cnsns.2012.09.014
   Zhao YJ, 2012, TRANSPORT RES REC, P173, DOI 10.3141/2272-20
NR 41
TC 6
Z9 6
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2018
VL 30
IS 4
AR e1926
DI 10.1002/smr.1926
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD1ZI
UT WOS:000430299400006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sirkiä, T
AF Sirkia, Teemu
TI Jsvee & Kelmu: Creating and tailoring program animations for computing
   education
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Jsvee; Kelmu; expression-level visualization; program visualization;
   tailoring; annotating
AB To learn to program, a novice programmer must understand the dynamic, runtime aspect of program code, a so-called notional machine. Understanding the machine can be easier when it is represented graphically, and tools have been developed to this end. However, these tools typically support only 1 programming language and do not work in a Web browser. In this article, we present the functionality and technical implementation of the 2 visualization tools. First, the language-agnostic and extensible Jsvee library helps instructors visualize notional machines and create expression-level program animations for online course materials. Second, instructors can use the Kelmu toolkit to augment automatically generated animations, for instance, by adding annotations such as textual explanations and arrows on top of the original animation. Both of these libraries have been used in introductory programming courses, and there is preliminary evidence that learners find the animations useful and annotated animations change student behavior.
C1 [Sirkia, Teemu] Aalto Univ, Dept Comp Sci, Espoo, Finland.
C3 Aalto University
RP Sirkiä, T (corresponding author), POB 15400, Aalto 00076, Finland.
EM teemu.sirkia@aalto.fi
RI Sirkiä, Teemu/AAM-8548-2020
OI Sirkiä, Teemu/0000-0003-4415-6966
CR Bednarik R, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P302, DOI 10.1109/VLHCC.2005.20
   Ben-Ari M, 2011, J VISUAL LANG COMPUT, V22, P375, DOI 10.1016/j.jvlc.2011.04.004
   Berry Michael., 2014, P 2014 C INNOVATION, P21
   Du Boulay B., 1986, Journal of Educational Computing Research, V2, P57, DOI 10.2190/3LFX-9RRF-67T8-UVK9
   Guo Philip J., 2013, P 44 ACM TECHN S COM, P579
   Hosseini Roya., 2016, Proceedings of the 47th ACM Technical Symposium on Computing Science Education, P540
   Karavirta V, 2016, IEEE T LEARN TECHNOL, V9, P171, DOI 10.1109/TLT.2015.2490673
   Mayer R. E., 2009, MULTIMEDIA LEARNING
   McElhaney KW, 2015, STUD SCI EDUC, V51, P49, DOI 10.1080/03057267.2014.984506
   Rajala T., 2007, Proceedings of the Seventh Baltic Sea Conference on Computing Education Research-Citeseer, V88, P151
   Sirkia T., 2015, P 15 KOL CALL C COMP, P147
   Sirkia T., 2015, Proceedings of the Eleventh Annual International Conference on International Computing Education Research, ICER'15, P179, DOI [10.1145/2787622.2787719, DOI 10.1145/2787622.2787719]
   Sirkiä T, 2017, SOFTWARE PRACT EXPER, V47, P1657, DOI 10.1002/spe.2492
   Sirkiä T, 2016, 2016 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION, P36, DOI 10.1109/VISSOFT.2016.24
   Sirkia Teemu, 2014, P 14 KOLI CALLING IN, P153
   Sorva J, 2013, ACM T COMPUT EDUC, V13, P15
   Sorva J, 2013, ACM T COMPUT EDUC, V13, P8
   Sorva Juha, 2010, P 10 KOLI CALLING IN, P49, DOI DOI 10.1145/1930464.1930471
   Stasko J.T., 1998, SOFTWARE VISUALIZATI
   Tew AE, 2010, SIGCSE 10: PROCEEDINGS OF THE 41ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P97
   Virtanen A.T., 2005, Proceedings of the Fifth Koli Calling Conference on Computer Science Education, P125
NR 21
TC 11
Z9 12
U1 0
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2018
VL 30
IS 2
SI SI
AR e1924
DI 10.1002/smr.1924
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW1ZP
UT WOS:000425099900003
DA 2024-07-18
ER

PT J
AU Jiang, QT
   Peng, X
   Wang, H
   Xing, ZC
   Zhao, WY
AF Jiang, Qingtao
   Peng, Xin
   Wang, Hai
   Xing, Zhenchang
   Zhao, Wenyun
TI Understanding systematic and collaborative code changes by mining
   evolutionary trajectory patterns
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT 22nd IEEE International Conference on Software Analysis, Evolution, and
   Reengineering (SANER)
CY MAR 02-06, 2015
CL Montreal, CANADA
SP Polytechnique Montreal, Dept Genie Informatique Genie Logiciel, Google Montreal, IEEE Comp Soc, Reengineering Forum, SAP Montreal Labs, Techn Council Software Engn, Tourisme Montreal
DE code change; evolution; mining; pattern; version control system
AB The life cycle of a large-scale software system can undergo many releases. Each release often involves hundreds or thousands of revisions committed by many developers over time. Many code changes are made in a systematic and collaborative way. However, such systematic and collaborative code changes are often undocumented and hidden in the evolution history of a software system. It is desirable to recover commonalities and associations among dispersed code changes in the evolutionary trajectory of a software system. In this paper, we present Summarizing Evolutionary Trajectory by Grouping and Aggregation (SETGA), an approach to summarizing historical commit records as trajectory patterns by grouping and aggregating relevant code changes committed over time. The SETGA extracts change operations from a series of commit records from version control systems. It then groups extracted change operations by their common properties from different dimensions such as change operation types, developers, and change locations. After that, SETGA aggregates relevant change operation groups by mining various associations among them. We implement SETGA and conduct an empirical study with 3 open-source systems. We investigate underlying evolution rules and problems that can be revealed by the identified patterns and analyze the evolution of trajectory patterns in different periods. The results show that SETGA can identify various types of trajectory patterns that are useful for software evolution management and quality assurance.
C1 [Jiang, Qingtao; Peng, Xin; Wang, Hai; Zhao, Wenyun] Fudan Univ, Sch Comp Sci, Shanghai, Peoples R China.
   [Jiang, Qingtao; Peng, Xin; Wang, Hai; Zhao, Wenyun] Fudan Univ, Shanghai Key Lab Data Sci, Shanghai, Peoples R China.
   [Xing, Zhenchang] Nanyang Technol Univ, Sch Comp Engn, Singapore, Singapore.
C3 Fudan University; Fudan University; Nanyang Technological University
RP Peng, X (corresponding author), Fudan Univ, Sch Comp Sci, Shanghai, Peoples R China.; Peng, X (corresponding author), Fudan Univ, Shanghai Key Lab Data Sci, Shanghai, Peoples R China.
EM pengxin@fudan.edu.cn
FU National Key Research and Development Program of China [2016YFB1000801];
   National Natural Science Foundation of China [61370079]; National High
   Technology Development 863 Program of China [2012AA011202]
FX This work is supported by National Key Research and Development Program
   of China under grant no. 2016YFB1000801, National Natural Science
   Foundation of China under grant no. 61370079, and National High
   Technology Development 863 Program of China under grant no.
   2012AA011202.
CR Adler RF, 2012, INT J HUM-COMPUT ST, V70, P156, DOI 10.1016/j.ijhcs.2011.10.003
   [Anonymous], 2005, P SIGCHI C HUM FACT, DOI DOI 10.1145/1054972.1055017
   [Anonymous], J STAT SOFTW
   [Anonymous], 2014, P 8 ACM IEEE INT S E
   Aral S, 2012, INFORM SYST RES, V23, P849, DOI 10.1287/isre.1110.0408
   Bantelay F, 2013, WORK CONF REVERSE EN, P311, DOI 10.1109/WCRE.2013.6671306
   COHEN J, 1994, AM PSYCHOL, V49, P997, DOI 10.1037/0003-066X.50.12.1103
   Corley CS, 2015, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2015.7332489
   Czerwinski Mary, 2004, P SIGCHI C HUM FACT, P175, DOI [10.1145/985692.985715, DOI 10.1145/985692.985715]
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Fayyad U, 1996, AI MAG, V17, P37
   Fritz T., 2007, ESEC-FSE '07: Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering September 2007, P341, DOI [10.1145/ 1287624.1287673, DOI 10.1145/1287624.1287673]
   Fritz T., 2010, P 32 ACMIEEE INT C S, P385
   Gonzalez V.M., 2004, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P113, DOI [DOI 10.1145/985692.985707, 10.1145/985692.985707]
   Iqbal ST, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P677
   Kankuzi B, 2013, S VIS LANG HUM CEN C, P15, DOI 10.1109/VLHCC.2013.6645237
   Kaptelinin V, 2007, 1 MONDAY, V12
   Keogh E, 2005, KNOWL INF SYST, V7, P358, DOI 10.1007/s10115-004-0154-9
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Khodabandelou G, 2014, THESIS
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kubelka J, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P145, DOI 10.1109/VISSOFT.2015.7332426
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Liu H, 2012, P INT COMP SOFTW APP, P213, DOI 10.1109/COMPSAC.2012.31
   Maalej W., 2014, RECOMMENDATION SYSTE, P173
   Maalej W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2622669
   Mark G, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P107
   MCGRAW KO, 1992, PSYCHOL BULL, V111, P361, DOI 10.1037/0033-2909.111.2.361
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Minelli R, 2014, INT CONF QUAL SOFTW, P276, DOI 10.1109/QSIC.2014.11
   Mockus A, 2014, P MSR 2014, P1
   Monk C.A., 2004, Proceedings of the Human Factors and Ergonomics Society 48th Annual Meeting, V48, P295, DOI DOI 10.1177/154193120404800304
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Hill E., 2012, P ACM SIGSOFT 20 INT, P42, DOI [10.1145/2393596. 2393645, DOI 10.1145/2393596.2393645]
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Myers BA, 2016, COMPUTER, V49, P44, DOI 10.1109/MC.2016.200
   Parnin C., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P123
   Parnin C, 2011, SOFTWARE QUAL J, V19, P5, DOI 10.1007/s11219-010-9104-9
   Parnin C, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P93
   Robbes R, 2015, EMPIR SOFTW ENG, V20, P745, DOI 10.1007/s10664-013-9298-0
   Robbes R, 2013, IEEE WORK CONF MIN S, P297, DOI 10.1109/MSR.2013.6624041
   Robbes R, 2010, AUTOMAT SOFTW ENG, V17, P181, DOI 10.1007/s10515-010-0064-x
   Robbes R, 2007, INT C PROGRAM COMPRE, P155
   Rohrdantz C, 2012, ACM T INTEL SYST TEC, V3, DOI 10.1145/2089094.2089102
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Snipes W, 2015, ANAL SOFTWARE DATA
   Soh Z, 2013, WORK CONF REVERSE EN, P152, DOI 10.1109/WCRE.2013.6671290
   Soh Z, 2013, WORK CONF REVERSE EN, P391, DOI 10.1109/WCRE.2013.6671314
   van Solingen R, 1998, IEEE SOFTWARE, V15, P97, DOI 10.1109/52.714843
   Vasilescu B, 2016, PROC INT CONF SOFTW, P994, DOI 10.1145/2884781.2884875
   Ying ATT, 2011, CONF PROC INT SYMP C, P31, DOI 10.1109/ICPC.2011.35
   Yoon Y., 2011, Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools, P25
   Zanjani Motahareh Bahrami, 2014, P 11 WORK C MIN SOFT, P162, DOI [10.1145/2597073.2597096, DOI 10.1145/2597073.2597096]
   Zou LJ, 2006, WORK CONF REVERSE EN, P71
NR 55
TC 7
Z9 8
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2017
VL 29
IS 3
SI SI
AR e1840
DI 10.1002/smr.1840
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA EP6AM
UT WOS:000397460300003
DA 2024-07-18
ER

PT J
AU Chitchyan, R
   Groher, I
   Noppen, J
AF Chitchyan, Ruzanna
   Groher, Iris
   Noppen, Joost
TI Uncovering sustainability concerns in software product lines
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE case study analysis; software product line engineering; sustainability;
   qualitative text analysis
ID REQUIREMENTS
AB Sustainable living, ie, living within the bounds of the available environmental, social, and economic resources, is the focus of many present-day social and scientific discussions. But what does sustainability mean within the context of software engineering? In this paper, we undertake a comprehensive analysis of 8 case studies to address this question within the context of a specific software engineering approach, software product line engineering (SPLE). We identify the sustainability-related characteristics that arise in present-day studies that apply SPLE. We conclude that technical and economic sustainability are in prime focus on the present SPLE practice, with social sustainability issues, where they relate to organisations, also addressed to a good degree. On the other hand, the issues related to the personal sustainability are less prominent, and environmental considerations are nearly completely amiss. We present feature models and cross-relations that result from our analysis as a starting point for sustainability engineering through SPLE, suggesting that any new development should consider how these models would be instantiated and expanded for the intended sociotechnical system. The good representation of sustainability features in these models is also validated with 2 additional case studies.
C1 [Chitchyan, Ruzanna] Univ Leicester, Dept Comp Sci, Univ Rd Leicester,F27 Comp Sci Bldg, Leicester LE1 7RH, Leics, England.
   [Groher, Iris] Johannes Kepler Univ Linz, Altenbergerstr 69, A-4040 Linz, Austria.
   [Noppen, Joost] Univ East Anglia, Sch Comp Sci, Norwich NR4 7TJ, Norfolk, England.
C3 University of Leicester; Johannes Kepler University Linz; University of
   East Anglia
RP Chitchyan, R (corresponding author), Univ Leicester, Dept Comp Sci, Univ Rd Leicester,F27 Comp Sci Bldg, Leicester LE1 7RH, Leics, England.
EM rc256@leicester.ac.uk
OI Groher, Iris/0000-0003-0905-6791; Chitchyan, Ruzanna/0000-0001-6293-3445
FU EPSRC [EP/R007373/1] Funding Source: UKRI
CR Ahmed Z., 2010, ARXIV10075127
   Alexander I., 2006, ISSUES TRENDS TECHNO, P25
   [Anonymous], 2016, DATA ANAL FILES
   [Anonymous], 2009, STRATEGIE BADANIA JA
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Becker C, 2016, IEEE SOFTWARE, V33, P56, DOI 10.1109/MS.2015.158
   Becker C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P467, DOI 10.1109/ICSE.2015.179
   Bomfim C, 2014, INT REQUIR ENG CONF, P402, DOI 10.1109/RE.2014.6912291
   Cabot J, 2009, PROC INT CONF SOFTW, P207, DOI 10.1109/ICSE-COMPANION.2009.5070983
   Chitchyan R., 2015, 4 INT WORKSH REQ ENG
   Chitchyan R, 2014, 3 INT WORKSH REQ ENG
   Chitchyan R, 2016, 38 IEEE ACM IN PRESS, V2
   Chitchyan R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P367, DOI 10.1145/2648511.2655956
   Chitchyan R, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1853
   Chitchyan R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P501, DOI 10.1109/ICSE.2015.183
   Chitchyan R, 2015, INT WORK PROD LINE, P11, DOI 10.1109/PLEASE.2015.11
   Chitchyan Ruzanna., 2007, AOSD 07, P36
   de Jong A, 2006, J ACAD MARKET SCI, V34, P576, DOI 10.1177/0092070306287126
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Durdik Z, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P517, DOI 10.1109/ICSM.2012.6405316
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fenton NE., 1991, Software Metrics: A Rigorous Approach
   Héliot F, 2013, 2013 IEEE 24TH INTERNATIONAL SYMPOSIUM ON PERSONAL, INDOOR, AND MOBILE RADIO COMMUNICATIONS (PIMRC), P943, DOI 10.1109/PIMRC.2013.6666273
   Huang F, 2009, HUM-COMPUT INT-SPRIN, P83, DOI 10.1007/978-1-84800-907-3_5
   Koziolek H., 2011, P JOINT ACM SIGSOFT, P3, DOI DOI 10.1145/2000259.2000263
   Lago P., 2013, ACM SIGSOFT Softw. Eng. Not., V38, P31, DOI 10.1145/2413038.2413062
   Lago P, 2015, COMMUN ACM, V58, P70, DOI 10.1145/2714560
   Lewis G, 2015, J SYST SOFTWARE, V107, P158, DOI 10.1016/j.jss.2015.06.005
   Liu J, 2011, RENEW SUST ENERG REV, V15, P2887, DOI 10.1016/j.rser.2011.02.029
   Lutz R, 2010, LECT NOTES COMPUT SC, V6287, P430, DOI 10.1007/978-3-642-15579-6_31
   MacCormack A, 2012, RES POLICY, V41, P1309, DOI 10.1016/j.respol.2012.04.011
   Mahaux M, 2011, LECT NOTES COMPUT SC, V6606, P19, DOI 10.1007/978-3-642-19858-8_3
   Mayring P., 2000, ADVNCS MTHMTCS EDUC, V1, P20, DOI [10.17169/fqs-1.2.1089, DOI 10.1007/978-94-017-9181-613]
   Naumann S, 2011, SUSTAIN COMPUT-INFOR, V1, P294, DOI 10.1016/j.suscom.2011.06.004
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Penzenstadler Birgit, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P32, DOI 10.1049/ic.2012.0004
   Penzenstadler B., 2013, P 28 ANN ACM S APPL, P1183, DOI DOI 10.1145/2480362.2480585
   Penzenstadler Birgit., 2013, P WORKSH GREEN SOFTW, P3
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   Rashid A., 2011, ASPECT ORIENTED MODE
   Robèrt KH, 2002, J CLEAN PROD, V10, P197, DOI 10.1016/S0959-6526(01)00061-0
   Savolainen J, 2013, IEEE SOFTWARE, V30, P63, DOI 10.1109/MS.2013.96
   Seacord RC, 2003, PROC IEEE INT CONF S, P450, DOI 10.1109/ICSM.2003.1235455
   Suddaby R, 2006, ACAD MANAGE J, V49, P633, DOI 10.5465/AMJ.2006.22083020
   Svendsen A, 2010, LECT NOTES COMPUT SC, V6287, P106, DOI 10.1007/978-3-642-15579-6_8
   Tainter JA, 2006, ECOL COMPLEX, V3, P91, DOI 10.1016/j.ecocom.2005.07.004
   Vierhauser M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P125, DOI 10.1145/2591062.2591179
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
   Zubrow D, 2003, TECHNICAL REPORT
NR 51
TC 10
Z9 11
U1 1
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2017
VL 29
IS 2
SI SI
AR e1853
DI 10.1002/smr.1853
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EM0CK
UT WOS:000394986200006
OA Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Prause, CR
   Bibus, M
   Dietrich, C
   Jobi, W
AF Prause, Christian R.
   Bibus, Markus
   Dietrich, Carsten
   Jobi, Wolfgang
TI Software product assurance at the German space agency
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT International Conference on Software and Systems Process (ICSSP)
CY AUG 24-26, 2015
CL Tallinn, ESTONIA
DE software quality; product assurance; management; space flight;
   tailoring; cross-company product quality management
AB The DLR Space Administration designs and implements the German space program. While project management rests with the agency, suppliers are contracted for building the space devices and their software. As opposed to many other domains, these are often unique devices with uncommon and custom-built peripherals. Its software is specifically developed for a single mission only and controls critical functionality. A small coding error can mean the loss of a mission. For this reason, customer and supplier collaborate to improve products and processes to achieve better software at the end of a project. We discuss quality in the context of space projects, and report a cross-sectional view from a customer's perspective on various management tools for influencing suppliers' processes and product quality: standards, single-source tailoring and cross-company product assurance. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Prause, Christian R.; Bibus, Markus; Dietrich, Carsten; Jobi, Wolfgang] DLR Raumfahrt Management, Konigswinterer Str 522-524, D-53227 Bonn, Germany.
RP Prause, CR (corresponding author), DLR Raumfahrt Management, Konigswinterer Str 522-524, D-53227 Bonn, Germany.
EM christian.prause@dlr.de
RI Prause, Christian/ABB-7596-2020
OI Prause, Christian/0000-0003-4856-529X
CR Abbott A, 1999, NATURE, V399, P93, DOI 10.1038/20029
   [Anonymous], ECSS E ST 40C SPACE
   [Anonymous], 2011, ECSS Q HB 80 04A SPA
   [Anonymous], 2013, SOFTWARE ENG HDB
   [Anonymous], 2012, ECSS Q HB 80 03A SPA
   [Anonymous], ECSS S ST 00C ECSS S
   [Anonymous], ECSS Q ST 80C SOFTWA
   Apgar H., 2011, SPACE MISSION ENG NE, V28, P289
   Armbrust O, 2008, LECT NOTES COMPUT SC, V5007, P160, DOI 10.1007/978-3-540-79588-9_15
   Basili VR, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P69, DOI 10.1109/ICSE.2002.1007957
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Boehm BW, 1972, TECHNICAL REPORT
   BRAT G, 2003, 1 INT SPAC MISS CHAL, P321
   CARD DN, 1988, INFORM SOFTWARE TECH, V30, P322, DOI 10.1016/0950-5849(88)90010-9
   Doler N, 2005, PRESENTATION SLIDES
   Donaldson S.E., 2001, Successful Software Development, V2nd
   Dowson M., 1997, Software Engineering Notes, V22, DOI 10.1145/251880.251992
   Dvorak D., 2009, NASA STUDY FLIGHT SO
   El Gammal Y, 1996, P PROD ASS S SOFTW P, P43
   Galin Daniel, 2004, Software quality assurance: from theory to implementation
   Greves D, 1996, ESA BULL-EUR SPACE, P84
   Hardung Bernd., 2004, Proceedings of the 4th ACM International Conference on Embedded Software, EMSOFT '04, P203
   Hayon D., 2014, RAUMFAHRT SO VIEL ZA
   Hecht Myron J., 2011, SPACE MISSION ENG NE, V28, P753
   Holzmann GJ, 2014, COMMUN ACM, V57, P64, DOI 10.1145/2560217.2560218
   Jobi W, 2012, TAILORING CATALOGUE
   Johnson CW, 2005, LECT NOTES COMPUT SC, V3582, P9
   Jones M, 2002, ESA B, V111, P132
   Kalus G., 2013, Proceedings of the 2013 International Conference on Software and System Process, P171
   Kaufmann H, 2009, COUNTDOWN TOPICS DLR, V1, P26
   Ley W., 2007, HDB RAUMFAHRTTECHNIK, P715
   Marsiske H-A., 2000, TELEPOLIS
   O'Neill I., 2008, THE MARS CURSE
   Oberg J, 1999, IEEE SPECTRUM, V36, P34, DOI 10.1109/6.809121
   Prause C. R., 2010, INT C GLOB SOFTW ENG
   Prause Christian, 2015, P 2015 INT C SOFTW S
   Prause CR, 2015, DATA SYSTEMS AEROSPA
   Raymond A., 2003, SPACE DAILY      JUL
   Rechtin E., 1997, P WORKSH, P23
   Schiller D, 2014, DLR NEWSLETTER COUNT, V24, P32
NR 40
TC 4
Z9 4
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2016
VL 28
IS 9
SI SI
BP 744
EP 761
DI 10.1002/smr.1779
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA EC7FM
UT WOS:000388302000003
DA 2024-07-18
ER

PT J
AU Bian, YX
   Parande, MA
   Koru, G
   Zhao, S
AF Bian, Yixin
   Parande, Mohammed Aziz
   Koru, Gunes
   Zhao, Song
TI Testing the theory of relative dependency from an evolutionary
   perspective: higher dependencies concentration in smaller modules over
   the lifetime of software products
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software quality; software metrics; refactoring
ID DEFECT-PREDICTION; METRICS SUITE; DESIGN; INEQUALITIES; VALIDATION;
   COMPLEXITY; QUALITY; PRONE
AB Recent studies conducted on the single releases of multiple software products showed that dependencies concentrate on smaller modules, that is, smaller modules have more dependencies per source line of code. This phenomenon, called the Theory of Relative Dependency, explains why some earlier studies reported that smaller modules were proportionally more defect prone. It is important to test the Theory of Relative Dependency from multiple perspectives so that it can be used as an explanatory argument when garnering organizational support to give a higher quality assurance (QA) priority to smaller modules. In this study, we test the validity of this theory from an evolutionary perspective by examining the consecutive releases of a number of software products. Dependencies do concentrate over smaller modules regardless of the product age. Furthermore, continuous refactoring efforts are associated with increasing concentration of dependencies on smaller modules over product lifetime. Based on the consistent results, software managers and developers should consider giving a higher QA priority to smaller modules over the lifetime of a software product. In the projects where refactoring is adopted continuously, the QA priority on smaller modules should be further increased as the software product ages. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Bian, Yixin; Zhao, Song] Harbin Normal Univ, Coll Comp Sci & Informat Engn, Harbin 150025, Peoples R China.
   [Parande, Mohammed Aziz] Microsoft Corp, Seattle, WA USA.
   [Koru, Gunes] UMBC, Dept Informat Syst, Baltimore, MD 21250 USA.
C3 Harbin Normal University; Microsoft; University System of Maryland;
   University of Maryland Baltimore County
RP Zhao, S (corresponding author), Harbin Normal Univ, Coll Comp Sci & Informat Engn, Harbin 150025, Peoples R China.
EM bianyu79@163.com
RI Koru, Gunes/AAR-5819-2020
FU Nature Science Foundation of Heilongjiang Province, China [F201321,
   F201231]
FX We thank the associate editor and the anonymous reviewers for their
   useful and constructive feedback. This work was supported by the Nature
   Science Foundation of Heilongjiang Province, China (Nos. F201321 and
   F201231).
CR [Anonymous], 2003, Qualitative Educational Research in Action: Doing and Reflecting
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Bourquin F, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P149
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Burrows R., 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P329, DOI 10.1109/ISSRE.2010.33
   CARD DN, 1988, J SYST SOFTWARE, V8, P185, DOI 10.1016/0164-1212(88)90021-0
   CHIDAMBER SR, 1991, OOPSLA 91 CONFERENCE PROCEEDINGS : OBJECT-ORIENTED PROGRAMMING SYSTEMS, LANGUAGES, AND APPLICATIONS, P197, DOI 10.1145/118014.117970
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   Drucker P., 2000, Management Challenges for the 21stCentury
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   Erb S, 2010, THESIS BADEN WRTTEMB
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Ferry D. E., 1993, Software Engineering - ESEC '93. 4th European Software Engineering Conference Proceedings, P48
   Fetscherin M, 2008, J ELECTRON COMMER RE, V9, P231
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gall H, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P160, DOI 10.1109/ICSM.1997.624242
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Giger E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P217, DOI 10.1109/MSR.2012.6224284
   Godfrey MW, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P129, DOI 10.1109/FOSM.2008.4659256
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Gordon JS, 2014, J INFORM SYSTEMS APP, V7, P39
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Humphrey W., 2006, TSP (SM) coaching development teams
   Humphrey WattsS., 2006, TSP: Leading a development team
   Inc Scientific Toolworks. Understand for C++: user guide and reference manual, 2003, TECHNICAL REPORT
   Jie Xu, 2008, Journal of Computer Sciences, V4, P571, DOI 10.3844/jcssp.2008.571.577
   Kakwani N, 1997, J ECONOMETRICS, V77, P87, DOI 10.1016/S0304-4076(96)01807-6
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393655
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Koru AG, 2007, J SYST SOFTWARE, V80, P63, DOI 10.1016/j.jss.2006.05.017
   Koru AG, 2010, IEEE SOFTWARE, V27, P81, DOI 10.1109/MS.2010.58
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Koru G, 2010, EMPIR SOFTW ENG, V15, P577, DOI [10.1007/s10664-010-9132-X, 10.1007/s10664-010-9132-x]
   Krishnapriya V., 2010, 2010 International Conference on Advances in Computer Engineering (ACE), P207, DOI 10.1109/ACE.2010.25
   KUNG D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P202, DOI 10.1109/ICSM.1994.336774
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lehman MM, 2003, INFORM PROCESS LETT, V88, P33, DOI 10.1016/S0020-0190(03)00382-X
   Li W, 1997, ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE AND INTERNATIONAL COMPUTER SCIENCE CONFERENCE, PROCEEDINGS, P513, DOI 10.1109/APSEC.1997.640211
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Lindvall M, 1998, SOFTWARE PRACT EXPER, V28, P1551, DOI 10.1002/(SICI)1097-024X(19981225)28:15<1551::AID-SPE212>3.0.CO;2-0
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   MacCormack A, 2007, 08038 HARV BUS SCH T
   MacCormack A, 2006, MANAGE SCI, V52, P1015, DOI 10.1287/mnsc.1060.0552
   Mens T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13, DOI 10.1109/IWPSE.2005.7
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Offutt J, 2008, SOFTWARE QUAL J, V16, P489, DOI 10.1007/s11219-008-9051-x
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Paranjape MakarandR., 2010, Introduction to Sarojini Naidu: Selected Poetry and Prose, by Naidu, P1
   Perry D. E., 1986, GLOBECOM '86: IEEE Global Telecommunications Conference. Communications Broadening Technology Horizons. Conference Record (Cat. No.86CH2298-9), P428
   Perry D. E., 1987, Proceedings of the Twentieth Hawaii International Conference on System Sciences 1987, P113
   Popper K., 2005, The logic of scientific discovery
   Prete K, 2010, PROC IEEE INT CONF S
   Robles G., 2004, "Second International Workshop on Remote Analysis and Measurement of Software Systems (RAMSS 04)" - W15S Workshop - 26th International Conference on Software Engineering, P51, DOI 10.1049/ic:20040351
   Rogers EM, 2003, DIFFUSION INNOVATION
   SCHNEIDEWIND NF, 1992, IEEE T SOFTWARE ENG, V18, P410, DOI 10.1109/32.135774
   SELBY RW, 1991, IEEE T SOFTWARE ENG, V17, P141, DOI 10.1109/32.67595
   Selvarani R, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON SIGNAL PROCESSING SYSTEMS, P766, DOI 10.1109/ICSPS.2009.163
   Shull F, 2003, LECT NOTES EMPIRICAL, P39
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Syer MD, 2015, IEEE T SOFTWARE ENG, V41, P176, DOI 10.1109/TSE.2014.2361131
   van der Meulen MJP, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P203, DOI 10.1109/ISSRE.2007.12
   Van Deursen A., 2002, PROC 3 INT C EXTREME, P71
   Vasa R, 2009, PROC IEEE INT CONF S, P179, DOI 10.1109/ICSM.2009.5306322
   Vasilescu B., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P313, DOI 10.1109/ICSM.2011.6080798
   WAGSTAFF A, 1991, SOC SCI MED, V33, P545, DOI 10.1016/0277-9536(91)90212-U
   WILDE N, 1992, IEEE T SOFTWARE ENG, V18, P1038, DOI 10.1109/TSE.1992.1263033
NR 81
TC 2
Z9 3
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2016
VL 28
IS 5
BP 340
EP 371
DI 10.1002/smr.1774
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DL6YP
UT WOS:000375786300002
DA 2024-07-18
ER

PT J
AU Seo, J
   Park, J
   Choi, B
AF Seo, Jooyoung
   Park, Jihyun
   Choi, Byoungju
TI A runtime fault survival method for deployed software during production
   runs
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE deployed software reliability; fault survival; fault mitigation; runtime
   memory fault
AB Runtime memory faults during production run should be more thoroughly addressed because they severely affect system availability. This paper proposes a method for mitigating memory faults during production runs of deployed software, thereby ensuring normal system operation until patches to fix the faults are delivered. Furthermore, the method helps enhance debugging efficiency by providing accurate on-site fault information used by developers to release timely patches. The core of the method is to offer information tagging to identify runtime faults and a fault survival algorithm to provide differentiated fault mitigation according to the runtime state. We implemented ROPHE on a Linux 2.6 platform and conducted an empirical study of representative Linux applications. The results show that the average fault-handling rate among the applications is 35.75%, whereas the RemOte runtime Protection for High-risk Error (ROPHE) greatly improves capacity to an average of 91.94%. Specifically, the fault-handling rates of the applications ranged widely from 7.32% to 62.96%, while ROPHE provided fault-survival rates in the relatively narrow range of 82.35-97.44%. The experimental results show that the proposed method guarantees the same level of reliability for all applications regardless of their individual fault handling capacity. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Seo, Jooyoung] Ajou Univ, Dept Informat & Comp Engn, Suwon 441749, South Korea.
   [Park, Jihyun; Choi, Byoungju] Ewha Womans Univ, Dept Comp Sci & Engn, 11-1 Daehyun Dong, Seoul 120750, South Korea.
C3 Ajou University; Ewha Womans University
RP Choi, B (corresponding author), Ewha Womans Univ, Dept Comp Sci & Engn, 11-1 Daehyun Dong, Seoul 120750, South Korea.
EM bjchoi@ewha.ac.kr
RI Park, Jihyun/E-7535-2019
OI Park, Jihyun/0000-0003-4478-7565
FU Hyundai-Kia Motor Company
FX This work was supported by the Hyundai-Kia Motor Company from 2011 to
   2013, and ROPHE v1.0 has been field applied to the operational testing
   of car-infotainment systems. This research was performed through the
   HYUNDAI KIA MOTOR Company and EWHA University Co-research Project from
   2011 to 2013 in order to test an in-vehicle embedded system. We have
   developed the RemOte runtime Protection High-risk Error (ROPHE) v1.0
   tool in a Linux platform as a runtime test tool to predict and prevent
   runtime memory faults. An industrial field study for a car-infotainment
   system using ROPHE is underway.
CR Alonso P, 2005, CONCURR COMP-PRACT E, V17, P49, DOI 10.1002/cpe.883
   Bruening D., 2011, INT S COD GEN OPT CG
   Candea G, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P605, DOI 10.1109/DSN.2002.1029006
   Delamaro ME, 2001, IEEE T SOFTWARE ENG, V27, P228, DOI 10.1109/32.910859
   Gao Q, 2009, EUROSYS'09: PROCEEDINGS OF THE FOURTH EUROSYS CONFERENCE, P159
   Hastings Reed., 1992, WINTER USENIX C, P125
   Liu FF, 2012, INT CONF COMP SCI ED, P1285, DOI 10.1109/ICCSE.2012.6295299
   Miller TC, 1999, PROCEEDINGS OF THE FREENIX TRACK, P175
   Nagarajan V., 2009, PROC ACM INT C VIRTU, P1
   Nethercote N, INT C PROGR LANG DES
   Nethercote N, 2007, VEE'07: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P65
   Reismann H., 1988, ELASTIC PLATES THEOR, P1
   Seo J, 2011, INFORM SOFTWARE TECH, V53, P106, DOI 10.1016/j.infsof.2010.09.003
   Shunli Ding, 2011, 2011 IEEE International Conference on Computer Science and Automation Engineering (CSAE), P738, DOI 10.1109/CSAE.2011.5952950
   Srinivasan SM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK 2004 USENIX ANNUAL TECHNICAL CONFERENCE, P29
   Tsai T, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P541, DOI 10.1109/DSN.2002.1028963
   Tucek J, 2007, S OP SYST PRINC SOSP, P115
NR 17
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2016
VL 28
IS 2
BP 97
EP 119
DI 10.1002/smr.1767
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DD8JZ
UT WOS:000370174100002
DA 2024-07-18
ER

PT J
AU Qiu, J
   Su, XH
   Ma, PJ
AF Qiu, Jing
   Su, Xiaohong
   Ma, Peijun
TI Identifying functions in binary code with reverse extended control flow
   graphs
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE reverse engineering; static analysis; function identification; reverse
   extended control flow graph; TOPSIS
AB In binary code analysis, current function identification approaches are challenged by functions without explicit call sites and handcrafted assembly without standard prologues/epilogues. We propose a new function representation called a reverse extended control flow graph (RECFG) and a RECFG-based method for identifying functions in stripped binary code. A function has at least one return instruction (an instruction that makes the control flow leave a function). Therefore, return instructions are more reliable than the function prologues and epilogues used by traditional methods. We first build RECFGs from any values that can be interpreted as return instructions in a code range. Then, for each independent RECFG, the multiple-decision method chooses a subgraph as the control flow graph of a function. A prototype tool is developed for evaluation on seven open source applications, 138 binaries in MASM32 code examples, and 292 binaries in Windows XP SP3. Experimental results show that the proposed method can identify functions that cannot be identified by current methods with high precision and stable recall. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Qiu, Jing; Su, Xiaohong; Ma, Peijun] Harbin Inst Technol, Sch Comp Sci & Technol, Harbin 150001, Peoples R China.
C3 Harbin Institute of Technology
RP Qiu, J (corresponding author), Harbin Inst Technol, Sch Comp Sci & Technol, Harbin 150001, Peoples R China.
EM topmint@gmail.com
OI Qiu, Jing/0000-0003-3264-1681
FU National Natural Science Foundation of China [61173021]
FX We would thank the anonymous reviewers for their insightful comments and
   suggestions. This research was supported by National Natural Science
   Foundation of China 61173021.
CR [Anonymous], 2004, 13 C USENIX SEC S SS
   [Anonymous], 2014, IDA PRO DISASSEMBLER
   Balakrishnan G, 2004, LECT NOTES COMPUT SC, V2985, P5
   Bardin S, 2011, LECT NOTES COMPUT SC, V6538, P54, DOI 10.1007/978-3-642-18275-4_6
   Cifuentes C, 1999, PROG COMPREHEN, P192, DOI 10.1109/WPC.1999.777758
   Cova M, 2006, ANN COMPUT SECURITY, P269, DOI 10.1109/ACSAC.2006.50
   Flexeder A, 2010, LECT NOTES COMPUT SC, V6461, P188, DOI 10.1007/978-3-642-17164-2_14
   Harris LC, 2005, WORKSH BIN INSR APPL
   Hu X, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P611
   Hunt G., 1999, Proceedings of the 3rd Conference on USENIX Windows NT Symposium, V3, P14
   Hwang C-L, 1981, MULTIPLE ATTRIBUTE D
   HWANG CL, 1993, COMPUT OPER RES, V20, P889, DOI 10.1016/0305-0548(93)90109-V
   Kaspersky K., 2003, HACKER DISASSEMBLING
   Kinable J, 2011, J COMPUT VIROL HACKI, V7, P233, DOI 10.1007/s11416-011-0151-y
   Kinder J, 2008, LECT NOTES COMPUT SC, V5123, P423
   LAI YJ, 1994, EUR J OPER RES, V76, P486, DOI 10.1016/0377-2217(94)90282-8
   Laurenzano MA, 2010, INT SYM PERFORM ANAL, P175, DOI 10.1109/ISPASS.2010.5452024
   Nanda S, 2006, INT SYM CODE GENER, P358
   Pietrek M, 1997, MICROSOFT SYSTEMS J, V6, P19
   Prasad M, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P211
   Ribeiro RA, 1996, FUZZY SET SYST, V78, P155, DOI 10.1016/0165-0114(95)00166-2
   Rosenblum N, 2008, P 23 C ART INT AAAI
   Schwarz B, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/WCRE.2002.1173063
   Schwarz B., 2001, PROC 2001 WORKSHOP B
   Smithson Matthew, 2010, BINARY REWRITING REL
   Wartell R, 2011, LECT NOTES ARTIF INT, V6913, P522, DOI 10.1007/978-3-642-23808-6_34
   YOON KS, 1987, J OPER RES SOC, V38, P277, DOI 10.1057/jors.1987.44
   Zhang Q., 2007, P 2 ACM S INFORM COM, P4
NR 28
TC 1
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2015
VL 27
IS 10
BP 793
EP 820
DI 10.1002/smr.1733
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT0QO
UT WOS:000362501600003
DA 2024-07-18
ER

PT J
AU Upadhyaya, B
   Tang, R
   Zou, Y
AF Upadhyaya, Bipin
   Tang, Ran
   Zou, Ying
TI An approach for mining service composition patterns from execution logs
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE component; Web service; composition; pattern mining; log
AB A service-oriented application is composed of multiple Web services to fulfill complex functionality that cannot be provided by individual Web service. The combination of services is not random. In many cases, a set of services are repetitively used together in various applications. We treat such a set of services as a service composition pattern. The quality of the patterns is desirable because of the extensive uses and testing in the large number of applications. Therefore, the service composition patterns record the best practices in designing and developing reliable service-oriented applications. The execution log tracks the execution of services in a service-oriented application. To document the service composition patterns, we propose an approach that automatically identifies service composition patterns from various applications using execution logs. We locate a set of associated services using Apriori algorithm and recover the control flows among the services by analyzing the order of service invocation events in the execution logs. We also identify structurally and functionally similar patterns to represent such patterns in a higher level of abstraction regardless of the actual services. A case study shows that our approach can effectively detect service composition patterns. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Upadhyaya, Bipin; Tang, Ran; Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
C3 Queens University - Canada
RP Zou, Y (corresponding author), Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
EM ying.zou@queensu.ca
RI Zou, Ying/KLC-9380-2024
CR Agrawal R, 1998, LECT NOTES COMPUT SC, V1377, P469
   Agrawal R, P 1993 ACM SIGMOD IN, P207
   Andrews T., BUSINESS PROCESS EXE
   [Anonymous], 2001, Proceedings of the 13th Belgium-Netherlands Conference on Artificial Intelligence (BNAIC 2001)
   Bose R. J. C., 2009, P 2009 SIAM INT C DA, P401, DOI [10.1137/1.9781611972795.35, DOI 10.1137/1.9781611972795.35]
   Brockmans S, 2006, ICEIS 2006: PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P191
   Bultan T, 2006, IEEE INTERNET COMPUT, V10, P18, DOI 10.1109/MIC.2006.1
   BULTAN T, 2007, TEST ANAL WEB SERVIC, P57
   Cook J. E., 1998, Software Engineering Notes, V23, P35, DOI 10.1145/291252.288214
   Corrales JC, 2006, LECT NOTES COMPUT SC, V4275, P237
   Di Francescomarino C., 2009, EUR C SOFTW MAINT RE
   Di Lucca GA, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P175, DOI 10.1109/IWPSE.2005.29
   Di Lucca GA, 2000, RECOVERING USE CASE, P108
   Dijkman R., 2009, P BPM 2009 ULM GERM
   Dijkman R, 2009, IEEE INT ENTERP DIST, P45, DOI 10.1109/EDOC.2009.11
   Dong Xin, 2004, P 30 INT C VER LARG, V30
   GAMMA E, PROFESSIONAL COMPUTI
   Greco G, 2006, IEEE T KNOWL DATA EN, V18, P1010, DOI 10.1109/TKDE.2006.123
   Gschwind T., 2008, P 6 INT C BUS PROC M
   Hamou-Lhadj A, 2005, RECOVERING BEHAV DES, P112
   Kokash N, 2006, FRONT ARTIF INTEL AP, V142, P220
   Liang Q, IEEE INT C E BUS ENG, P286
   Lu J., 2007, 8 INT C WEB INF SYST
   Mahbub K, 2011, AUTOMAT SOFTW ENG, V18, P117, DOI 10.1007/s10515-010-0077-5
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Minor M, P 7 INT C CAS BAS RE
   Nayak R, 2008, INT J WEB SERV RES, V5, P63, DOI 10.4018/jwsr.2008010104
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Puhlmann R, 2005, LECT NOTES COMPUT SC, V3649, P153, DOI 10.1007/11538394_11
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   Schafer T., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00262-2
   Schimm G., P ER 2000 WORKSH CON
   Spanoudakis G, 2010, IEEE T SOFTWARE ENG, V36, P371, DOI 10.1109/TSE.2009.88
   STEFANSEN C, 2005, EXPRESSING WORKFLOW
   Tang R, 2010, 8 INT C WEB IN PRESS
   Tang R, 2010, 2010 IEEE S WEB SYST
   van der Aalst WilMP., 2002, Beta working paper series, wp 74
   van der Aalst WMP, 2003, DATA KNOWL ENG, V47, P237, DOI 10.1016/S0169-023X(03)00066-1
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Wei Liu, 2009, International Journal of Agent-Oriented Software Engineering, V3, P6, DOI 10.1504/IJAOSE.2009.022944
   Weijters AJMM, P 11 DUTCH BELG C MA, P93
NR 42
TC 10
Z9 12
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2013
VL 25
IS 8
SI SI
BP 841
EP 870
DI 10.1002/smr.1565
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 240FG
UT WOS:000326079700004
DA 2024-07-18
ER

PT J
AU Ural, H
   Yenigün, H
AF Ural, Hasan
   Yenigun, Husnu
TI Regression test suite selection using dependence analysis
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE regression testing; extended finite state machine; control dependence;
   data dependence; regression test suite selection
ID ALGORITHMS; REDUCTION; AUTOMATA
AB Dependence analysis on an Extended Finite State Machine representation of the requirements of a system under test identifies various types of control and data dependencies between transitions caused by a set of modifications on the requirements. These particular types of dependencies capture the effects of the modifications, that is, their direct effects on the changed parts of the system and their side effects on the unchanged parts of the system. Recent work on model-based regression testing shows that dependencies capturing direct effects and side effects of the changes made on the requirements can be used for regression test suite (RTS) reduction (reducing the size of a given test suite by eliminating redundancies), for RTS prioritization (ordering test cases in a given test suite for early fault detection), or for RTS generation (designing a test suite covering the identified dependencies). This paper proposes an additional use of such dependencies, namely, RTS selection, which is the process of selecting a subset of a given test suite to form an RTS by considering the coverage of dependencies related to the effects of the modifications. The dependencies marked during this process as uncovered provide a basis for augmenting an (incomplete) RTS with test cases covering uncovered dependencies. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Ural, Hasan] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON K1N 6N5, Canada.
   [Yenigun, Husnu] Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Orhanli Tuzla Istanbul, Turkey.
C3 University of Ottawa; Sabanci University
RP Ural, H (corresponding author), Univ Ottawa, Sch Elect Engn & Comp Sci, 800 King Edward Ave, Ottawa, ON K1N 6N5, Canada.
EM ural@site.uottawa.ca
RI Yenigun, Husnu/L-3299-2013
FU Natural Sciences and Engineering Research Council of Canada; Ontario
   Centres of Excellence; Sabanci University
FX The authors wish to thank Dr. Yanping Chen for many useful discussions.
   This work was supported in part by grants from the Natural Sciences and
   Engineering Research Council of Canada, the Ontario Centres of
   Excellence, and by Sabanci University.
CR Androutsopoulos K, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P291, DOI 10.1145/1985793.1985834
   Androutsopoulos K, 2009, PROC IEEE INT CONF S, P287, DOI 10.1109/ICSM.2009.5306309
   Androutsopoulos K, 2009, LECT NOTES COMPUT SC, V5503, P216
   [Anonymous], 1996, ITU TS REC Z 120 MES
   BELINA F, 1989, COMPUT NETWORKS ISDN, V16, P311, DOI 10.1016/0169-7552(89)90078-0
   Caprara A, 2000, ANN OPER RES, V98, P353, DOI 10.1023/A:1019225027893
   Chen Y-P, 2002, P CASCON 2002, P60
   Chen YP, 2009, J SOFTW MAINT EVOL-R, V21, P379, DOI 10.1002/smr.415
   Chen Yanping., 2007, Fourth international workshop on Software quality assurance: in conjunction with the 6th ESEC/FSE joint meeting, P62, DOI DOI 10.1145/1295074.1295086
   Chen Yanping., 2007, 3rd international workshop on Advances in model-based testing, P54, DOI 10.1145/1291535.1291541
   Chengying Mao, 2005, Proceedings. 12th Asia-Pacific Software Engineering Conference
   Dwyer MB, 2006, LECT NOTES COMPUT SC, V3920, P73
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Grossman T, 1997, EUR J OPER RES, V101, P81, DOI 10.1016/S0377-2217(96)00161-0
   Gupta R., 1996, Software Testing, Verification and Reliability, V6, P83, DOI 10.1002/(SICI)1099-1689(199606)6:2<83::AID-STVR112>3.0.CO;2-9
   Harel D., 1998, MODELING REACTIVE SY
   Heimdahl MPE, 1998, EUROMICRO CONF PROC, P435, DOI 10.1109/EURMIC.1998.711837
   Heimdahl MPE, 1997, LECT NOTES COMPUT SC, V1301, P450, DOI 10.1145/267896.267926
   Hong HS, 2003, PROC INT CONF SOFTW, P232
   Hsia P, 1997, J SOFTW MAINT-RES PR, V9, P217, DOI 10.1002/(SICI)1096-908X(199707/08)9:4<217::AID-SMR152>3.0.CO;2-2
   Janowska A, 2006, FUND INFORM, V72, P181
   Jeffrey D, 2007, IEEE T SOFTWARE ENG, V33, P108, DOI 10.1109/TSE.2007.18
   Korel B, 2003, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2003.1235404
   Korel B, 2002, PROC IEEE INT CONF S, P214, DOI 10.1109/ICSM.2002.1167768
   Korel B, 2008, PROC IEEE INT CONF S, P247, DOI 10.1109/ICSM.2008.4658073
   Labbé S, 2008, FORM ASP COMPUT, V20, P563, DOI 10.1007/s00165-008-0086-3
   Mansurov N, 1999, SDL'99: THE NEXT MILLENNIUM, P225, DOI 10.1016/B978-044450228-5/50016-3
   Marré M, 2003, IEEE T SOFTWARE ENG, V29, P974, DOI 10.1109/TSE.2003.1245299
   Orso A, 2001, PROC IEEE INT CONF S, P716, DOI 10.1109/ICSM.2001.972790
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Santelices Raul, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P218, DOI 10.1109/ASE.2008.32
   Srikanth H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P62, DOI 10.1109/ISESE.2005.1541815
   Tahat LH, SOFTWARE TE IN PRESS
   Vaysburg B., 2002, Software Engineering Notes, V27, P107, DOI 10.1145/566171.566188
   Wang J, 2002, LECT NOTES COMPUT SC, V2495, P435
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
   Xie B, 2005, THESIS U OTTAWA OTTA
   Yoo S, 2012, SOFTWARE TESTING
NR 42
TC 11
Z9 13
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2013
VL 25
IS 7
BP 681
EP 709
DI 10.1002/smr.1559
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 242KX
UT WOS:000326241300002
DA 2024-07-18
ER

PT J
AU Neamtiu, I
   Xie, GW
   Chen, JB
AF Neamtiu, Iulian
   Xie, Guowu
   Chen, Jianbo
TI Towards a better understanding of software evolution: an empirical study
   on open-source software
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software evolution; Lehman's laws; empirical studies; open source
ID REFERENCE MODEL; SMOOTH GROWTH; TOOLS
AB Software evolution is a fact of life. Over the past 30years, researchers have proposed hypotheses on how software changes and provided evidence that both supports and refutes these hypotheses. To paint a clearer image of the software evolution process, we performed an empirical study on long spans in the lifetime of nine open-source projects. Our analysis covers 705 official releases and a combined 108years of evolution. We first tried to confirm Lehman's eight laws of software evolution on these projects using statistical hypothesis testing. Our findings indicate that only the laws of continuing change and continuing growth are confirmed for all programs, whereas the other six laws are violated by some programs, or can be both confirmed and invalidated, depending on the laws' operational definitions. Second, we analyze the growth rate for projects' development and maintenance branches, and the distribution of software changes. We find similarities in the evolution patterns of the programs we studied, which brings us closer to constructing rigorous models for software evolution. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Neamtiu, Iulian; Xie, Guowu; Chen, Jianbo] Univ Calif Riverside, Dept Comp Sci & Engn, Riverside, CA 92521 USA.
C3 University of California System; University of California Riverside
RP Neamtiu, I (corresponding author), Univ Calif Riverside, Dept Comp Sci & Engn, Riverside, CA 92521 USA.
EM neamtiu@cs.ucr.edu
CR [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   [Anonymous], P WORK C MIN SOFTW R
   [Anonymous], 2010, SOFTWARE MAGAZIN NOV
   [Anonymous], 2008, Software Evolution, DOI [10.1007/978-3-540-76440-311, DOI 10.1007/978-3-540-76440-311]
   [Anonymous], 1976, ICSE 76
   [Anonymous], 2002, P INT WORKSH PRINC S
   Antoniol Giuliano, 2007, 2007 IEEE International Conference on Software Maintenance, P14, DOI 10.1109/ICSM.2007.4362614
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Fernandez-Ramil J, 2009, INT FED INFO PROC, V299, P170
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gall H, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P160, DOI 10.1109/ICSM.1997.624242
   German DM, 2004, J SOFTW MAINT EVOL-R, V16, P367, DOI 10.1002/smr.301
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Grechanik M., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, p11:1
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Herraiz I., 2007, Proceedings of the International Workshop on Mining Software Repositories, P21
   Herraiz I, 2007, SOFTW MAINT 2007 ICS, P405
   HERRAIZ I, 2008, THESIS U RJ CARLOS
   Izurieta C., 2006, ISESE 06, P204, DOI DOI 10.1145/1159733.1159765
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   Kim S, 2006, PROC IEEE INT CONF S, P4
   Koskinen J, 2011, SOFTWARE MAINTENANCE
   Lawrence M. J., 1982, Sixth International Conference on Software Engineering, P188
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Lehman MM, 2001, ANN SOFTW ENG, V11, P15, DOI 10.1023/A:1012535017876
   Lehman MM, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P84, DOI 10.1109/METRIC.1998.731229
   LEHMAN MM, 1996, EUR WORKSH SOFTW PRO
   Leszak M, 2002, J SYST SOFTWARE, V61, P173, DOI 10.1016/S0164-1212(01)00146-7
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Neamtiu I, 2006, ACM SIGPLAN NOTICES, V41, P72, DOI 10.1145/1133981.1133991
   Neamtiu J. F. I., 2005, P INT WORKSH MIN SOF, V30, P1, DOI [DOI 10.1145/1082983.1083143, 10.1145/1082983.1083143]
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Raghavan S, 2004, PROC IEEE INT CONF S, P188, DOI 10.1109/ICSM.2004.1357803
   Scacchi W., 2003, Understanding open source software evolution. Applying
   Sommerville I., 2004, Software Engineering
   Suh SD, 2010, SOFTW ENG C AUSTR 20, V0, P3
   Turski WM, 2002, IEEE T SOFTWARE ENG, V28, P814, DOI 10.1109/TSE.2002.1027802
   Turski WM, 1996, IEEE T SOFTWARE ENG, V22, P599, DOI 10.1109/32.536959
   Wu Jingwei, 2004, P INT WORKSHOP FDN U, P1
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 46
TC 26
Z9 27
U1 1
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2013
VL 25
IS 3
BP 193
EP 218
DI 10.1002/smr.564
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 112UN
UT WOS:000316619400001
DA 2024-07-18
ER

PT J
AU Babar, MA
AF Babar, Muhammad Ali
TI A framework for groupware-supported software architecture evaluation
   process in global software development
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE global software development; software architecture evaluation; process
   improvement; groupware support
ID REQUIREMENTS; REVIEWS; SYSTEMS; QUALITY; DESIGN; ISSUES; MEDIA; WORK;
   WEB
AB A software architecture evaluation process requires a large number of stakeholders to be collocated for evaluation sessions. Given an increasing trend to using globally distributed software development teams, organizations are likely to be discouraged from introducing disciplined software architecture evaluation practices that require collocated stakeholders. To address this issue, we propose that a software architecture evaluation can be carried out using suitable groupware systems. In this paper, we present a framework for supporting the software architecture evaluation process using a groupware system. The framework highlights the changes that are required in the existing software architecture evaluation methods. We provide an illustrated example of modeling and mapping the activities of the presented process on electronic workspaces provided by a groupware system. We also identify some of the features that a groupware system should provide to successfully support the process. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Babar, Muhammad Ali] IT Univ Copenhagen, DK-2300 Copenhagen, Denmark.
C3 IT University Copenhagen
RP Babar, MA (corresponding author), IT Univ Copenhagen, Vej 7, DK-2300 Copenhagen, Denmark.
EM malibaba@itu.dk
FU National ICT Australia
FX Contract/grant sponsor: National ICT Australia
CR Al-Naeem T, 2005, PROC INT CONF SOFTW, P244
   Ali-Babar M, 2006, P 17 AUSTR SOFTW ENG, P379
   Ali-Babar M, 2007, P 2 WORKSH SHARING R, P1
   Ali-Babar M, 2005, P 9 INT C EMP ASS SO, P1
   Aman-ul-haq, 2009, 2009 ICSE WORKSHOP ON SHARING AND REUSING ARCHITECTURAL KNOWLEDGE, P49, DOI 10.1109/SHARK.2009.5069115
   [Anonymous], 2007, 42010 ISOIEC
   Babar MA, 2006, RATIONAL MANAGEMENT IN SOFTWARE ENGINEERING, P237
   Babar Muhamad Ali, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P430
   Babar MA, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P600, DOI 10.1109/APSEC.2004.38
   Babar MA, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P309, DOI 10.1109/ASWEC.2004.1290484
   Babar MA, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P105, DOI 10.1109/ECBS.2008.27
   Babar MA, 2008, EMPIR SOFTW ENG, V13, P39, DOI 10.1007/s10664-007-9052-6
   Babar MA, 2006, J SYST SOFTWARE, V79, P912, DOI 10.1016/j.jss.2005.06.043
   Babar MA, 2009, COMPUTER, V42, P26, DOI 10.1109/MC.2009.233
   Barbacci MR, 2003, QUAL ATTR WORKSH SEI
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Battin RD, 2001, IEEE SOFTWARE, V18, P70, DOI 10.1109/52.914750
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Bengtsson P, 2000, ANN SOFTW ENG, V9, P59, DOI 10.1023/A:1018968506874
   Bengtsson P, 2002, THESIS BLEKINGE I TE
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   Biuk-Aghai RP, 2000, P PAC AS C INF SYS A, P864
   Biuk-Aghai RP, 2003, THESIS U TECHNOLOGY
   Biuk-Aghai RP, 1999, P INT S DAT APPL NON, P325
   Boehm B, 2001, IEEE SOFTWARE, V18, P46, DOI 10.1109/52.922725
   Boulila N, 2004, P WORKSH COOP SUPP D, P1
   Briggs R., 2002, Proceedings of the 35th Annual Hawaii International Conference on System Sciences (HICSS'02). Vol, V1, P21
   Cataldo M, 2009, INT CONF GLOBAL SOFT, P83, DOI 10.1109/ICGSE.2009.16
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Clements P., 2002, DOCUMENTING SOFTWARE
   DAFT RL, 1986, MANAGE SCI, V32, P554, DOI 10.1287/mnsc.32.5.554
   Damian D, 2003, SOFTWARE PROCESS IMP, V8, P179, DOI DOI 10.1002/SPIP.182
   Damian DE, 2001, THESIS U CALGARY
   Damian DEH, 2000, IEEE SOFTWARE, V17, P28, DOI 10.1109/52.896247
   Dennis AR, 2004, MIS QUART, V28, P1
   DENNIS AR, 1988, MIS QUART, V12, P591, DOI 10.2307/249135
   DENNIS AR, 1990, INFORM MANAGE, V18, P111, DOI 10.1016/0378-7206(90)90065-P
   Ellis C. A., 1991, Communications of the ACM, V34, P39, DOI 10.1145/99977.99987
   GALLUPE RB, 1988, MIS QUART, V12, P277, DOI 10.2307/248853
   GALLUPE RB, 1993, SLOAN MANAGE REV, V35, P27
   Genuchten MV, 1997, J MANAGE INFORM SYST, V14, P165
   Griffith TL, 2003, MIS QUART, V27, P265
   GROHOWSKI R, 1990, MIS QUART, V14, P369, DOI 10.2307/249785
   GRUDIN J, 1994, COMMUN ACM, V37, P92, DOI 10.1145/175222.175230
   Gruenbacher P., 2000, Proceedings of the 26th Euromicro Conference. EUROMICRO 2000. Informatics: Inventing the Future, P232, DOI 10.1109/EURMIC.2000.874423
   Gruenbacher P, 2001, P 4 ANN HAW INT C SY, P1062
   Grunbacher P., 2003, COOPERATIVE METHODS, P56
   Halling M, 2002, EUROMICRO CONF PROC, P251, DOI 10.1109/EURMIC.2002.1046168
   Halling M, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P278, DOI 10.1109/METRIC.2003.1232474
   Halling M, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P201, DOI 10.1109/ASE.2001.989806
   Hawryszkiewycz I, 1999, P AUSWEB99 5 AUSTR W, P219
   Hawryszkiewycz I, 1997, DESIGNING NETWORKED
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hiltz R, 1978, NETWORK NATIONS HUMA
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   HUBER GP, 1984, MIS QUART, V8, P195, DOI 10.2307/248666
   Kazman R, 2002, IEEE SOFTWARE, V19, P67, DOI 10.1109/52.976943
   KIESLER S, 1984, AM PSYCHOL, V39, P1123, DOI 10.1037/0003-066X.39.10.1123
   KRAEMER KL, 1988, COMPUT SURV, V20, P115, DOI 10.1145/46157.46158
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lanubile F., 2003, Software Process Improvement and Practice, V8, P217, DOI 10.1002/spip.184
   Lassing N, 2002, J SYST SOFTWARE, V61, P47, DOI 10.1016/S0164-1212(01)00113-3
   MacDonald F., 1999, Automated Software Engineering, V6, P291, DOI 10.1023/A:1008760911330
   MacDonald F, 1996, RR96198EFOCS2196 U S
   MacDonald F, 1995, RR95196EFOCS1695 U S
   Maranzano JF, 2005, IEEE SOFTWARE, V22, P34, DOI 10.1109/MS.2005.28
   McGrath J.E., 1984, GROUPS INTERACTION P
   McGrath J.E., 1993, GROUP SUPPORT SYSTEM, P78
   McGrath JosephE., 1994, GROUPS INTERACTING T
   Nunamaker J. R.  Jr, 1996, Journal of Management Information Systems, V13, P163
   Nunamaker JF, 1999, COMPUTER, V32, P66, DOI 10.1109/MC.1999.789753
   NUNAMAKER JF, 1991, COMMUN ACM, V34, P40, DOI 10.1145/105783.105793
   Ocker R., 1995, Journal of Management Information Systems, V12, P127
   Paasivaara M., 2003, Software Process Improvement and Practice, V8, P183, DOI 10.1002/spip.187
   Pankoke-Babatz U, 1997, P INT ACM SIGGROUP C, P461
   PARNAS DL, 1987, J SYST SOFTWARE, V7, P259, DOI 10.1016/0164-1212(87)90025-2
   Perpich JM, 1997, PROC INT CONF SOFTW, P14, DOI 10.1145/253228.253234
   Perry DE, 2002, IEEE T SOFTWARE ENG, V28, P695, DOI 10.1109/TSE.2002.1019483
   Piccoli G, 2001, MIS QUART, V25, P401, DOI 10.2307/3250989
   Richard Hughes., 1999, The principles and practice of Homoeopathy, P1
   Scott L, 2002, INFORM SOFTWARE TECH, V44, P601, DOI 10.1016/S0950-5849(02)00080-0
   SIEGEL J, 1986, ORGAN BEHAV HUM DEC, V37, P157, DOI 10.1016/0749-5978(86)90050-6
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   TUROFF M, 1982, IEEE T COMMUN, V30, P82, DOI 10.1109/TCOM.1982.1095370
   VALACICH JS, 1994, ORGAN BEHAV HUM DEC, V57, P448, DOI 10.1006/obhd.1994.1024
   van Genuchten M, 2001, IEEE SOFTWARE, V18, P60, DOI 10.1109/52.922727
   Williams L. G., 2002, Proceedings of the 3rd international workshop on Software and performance, WOSP'02, P179
NR 87
TC 4
Z9 4
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2012
VL 24
IS 2
SI SI
BP 207
EP 229
DI 10.1002/smr.478
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 910NE
UT WOS:000301645500007
DA 2024-07-18
ER

PT J
AU Kagdi, H
   Gethers, M
   Poshyvanyk, D
   Hammad, M
AF Kagdi, Huzefa
   Gethers, Malcom
   Poshyvanyk, Denys
   Hammad, Maen
TI Assigning change requests to software developers
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE concept and feature location; information retrieval; developer
   recommendation; software evolution and maintenance; mining software
   repositories
ID TRACEABILITY LINKS; RETRIEVAL; CODE; EVOLUTION
AB The paper presents an approach to recommend a ranked list of expert developers to assist in the implementation of software change requests (e.g., bug reports and feature requests). An Information Retrieval (IR)-based concept location technique is first used to locate source code entities, e. g., files and classes, relevant to a given textual description of a change request. The previous commits from version control repositories of these entities are then mined for expert developers. The role of the IR method in selectively reducing the mining space is different from previous approaches that textually index past change requests and/or commits. The approach is evaluated on change requests from three open-source systems: ArgoUML, Eclipse, and KOffice, across a range of accuracy criteria. The results show that the overall accuracies of the correctly recommended developers are between 47 and 96% for bug reports, and between 43 and 60% for feature requests. Moreover, comparison results with two other recommendation alternatives show that the presented approach outperforms them with a substantial margin. Project leads or developers can use this approach in maintenance tasks immediately after the receipt of a change request in a free-form text. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Kagdi, Huzefa] Winston Salem State Univ, Dept Comp Sci, Winston Salem, NC 27110 USA.
   [Gethers, Malcom; Poshyvanyk, Denys] Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23185 USA.
   [Hammad, Maen] Hashemite Univ Zarqa, Dept Software Engn, Zarqa, Jordan.
C3 Winston-Salem State University; William & Mary; Hashemite University
RP Kagdi, H (corresponding author), Winston Salem State Univ, Dept Comp Sci, Winston Salem, NC 27110 USA.
EM kagdihh@wssu.edu
OI Poshyvanyk, Denys/0000-0002-5626-7586
FU NSF [CCF-1016868, CCF-1063253]; University of Missouri; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1016868, 1156401] Funding Source: National Science
   Foundation
FX This work is supported by NSF CCF-1016868, NSF CCF-1063253, and
   University of Missouri Research Board grants. Any opinions, findings,
   and conclusions expressed herein are of the authors' and do not
   necessarily reflect those of the sponsors.
CR Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   [Anonymous], 2006, P 2006 INT WORKSHOP
   [Anonymous], 2002, P INT WORKSH PRINC S
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2008, CASCON 08
   Antoniol G, 2006, IEEE T SOFTWARE ENG, V32, P627, DOI 10.1109/TSE.2006.88
   Anvik J, 2007, 4 INT WORKSH MIN SOF
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Biggerstaff T.J., 1994, PROC 15 IEEEACM INT, P482
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Canfora G., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1767, DOI 10.1145/1141277.1141693
   CANFORA G, 2005, P 11 IEEE INT S SOFT, P20
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Collard ML, 2003, PROG COMPREHEN, P134
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Del Rosso C, 2009, J SOFTW MAINT EVOL-R, V21, P189, DOI 10.1002/smr.408
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2002.1167756
   EADDY M, 2008, 17 IEEE INT C PROGR
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eisenberg AD, 2005, PROC IEEE INT CONF S, P337
   Ferenc R., 2004, P 8 EUR C SOFTW MAIN, P4
   Fischer M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/WCRE.2003.1287240
   Gay G, 2009, 25 IEEE INT C SOFTW
   German D., 2006, MSR: Proceedings of the Third International Workshop on Mining Software Repositories, P163
   German DM, 2006, EMPIR SOFTW ENG, V11, P369, DOI 10.1007/s10664-006-9004-6
   Girba T, 2004, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2004.1357788
   Gold N, 2006, PROC IEEE INT CONF S, P310
   Grant S, 2008, WORK CONF REVERSE EN, P138, DOI 10.1109/WCRE.2008.49
   Greevy O, 2006, J SOFTW MAINT EVOL-R, V18, P425, DOI 10.1002/smr.340
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hill E, 2009, 31 IEEE ACM INT C SO
   Hill E., 2007, Proceedings of the 22nd International Conference on Automated Software Engineering, P14
   Jeong G, 2009, 7 EUR SOFTW ENG C AC
   JIANG H, 2008, 23 IEEE ACM INT C AU
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kagdi H, 2009, INT C PROGRAM COMPRE, P273, DOI 10.1109/ICPC.2009.5090056
   Kagdi H, 2008, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2008.4658064
   Kawaguchi S, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P195, DOI 10.1109/IWPSE.2003.1231227
   KOTHARI J, 2006, 13 IEEE WORK C REV E
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Liu Y, 2009, 25 IEEE INT C SOFTW
   Lormans M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P45
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Ma D, 2009, 25 IEEE INT C SOFTW
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Marcus A, 2005, PROG COMPREHEN, P33, DOI 10.1109/WPC.2005.33
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   McDonald D. W., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P231, DOI 10.1145/358916.358994
   Minto S, 2007, 4 INT WORKSH MIN SOF
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P334
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Revelle M, 2009, 17 IEEE INT C PROGR
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Robles G., 2005, INT C SOFTW ENG P 20, P1, DOI DOI 10.1145/1082983.1083162
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salah M, 2004, PROC IEEE INT CONF S, P72, DOI 10.1109/ICSM.2004.1357792
   Salah M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P69
   Shepherd David, 2007, P 6 INT C ASP OR SOF, P212
   Simmons S, 2006, J SOFTW MAINT EVOL-R, V18, P457, DOI 10.1002/smr.338
   Song X, 2005, 10 INT C US MOD UM 5
   Tairas R, 2009, EMPIR SOFTW ENG, V14, P33, DOI 10.1007/s10664-008-9089-1
   Tian K, 2009, 6 IEEE WORK C MIN SO
   Tsunoda Masateru, 2006, P 2006 INT WORKSH MI, P181
   Weissgerber P, 2007, 4 INT WORKSH MIN SOF
   Wilde N., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P200, DOI 10.1109/ICSM.1992.242542
   Ye Y., 2005, Automated Software Engineering, V12, P199, DOI 10.1007/s10515-005-6206-x
   Yu L, 2007, 4 INT WORKSH MIN SOF
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 86
TC 65
Z9 71
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2012
VL 24
IS 1
BP 3
EP 33
DI 10.1002/smr.530
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 910ND
UT WOS:000301645300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU de Souza, HA
   Lauretto, MD
   Kon, F
   Chaim, ML
AF de Souza, Higor Amario
   Lauretto, Marcelo de Souza
   Kon, Fabio
   Chaim, Marcos Lordello
TI Understanding the use of spectrum-based fault localization
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE automated debugging; fault comprehension; fault localization;
   spectrum-based; user study
ID ACCEPTANCE; PROGRAM
AB Developers spend significant time locating and fixing bugs, which is often performed manually. Although spectrum-based fault localization (SFL) techniques aim at helping developers to locate faults, they are not yet used in practice. Recent studies have investigated how developers use SFL, presenting different conclusions about their effectiveness and usefulness. We carried out a user study to further enhance the understanding of SFL. We assessed whether SFL improves the developers' performance and to what extent SFL leads developers to inspect faulty code excerpts. We also investigated the intention of the developers to use SFL and how they interact with SFL. Twenty-six participants performed debugging tasks using real programs, with and without using the Jaguar SFL tool. Using SFL, more developers located and fixed the bugs. SFL also led more developers to inspect the faulty code and locate the faulty method. However, they did not spend less time locating the faults. SFL was well-accepted by the participants, who showed intention to use it in their daily activities. Our results indicate that SFL is useful even when the fault is not ranked among the first positions, leading developers to reach faulty code regions and find the bugs.
   This paper presents a user study of spectrum-based fault localization (SFL), showing that SFL can improve the developers' debugging effectiveness, leading them close to faulty code excerpts. SFL was well-accepted by the participants of our study but should rank faulty code among the first picks to be effective. image
C1 [de Souza, Higor Amario] Sao Paulo State Univ, Dept Comp, Bauru, SP, Brazil.
   [de Souza, Higor Amario; Kon, Fabio] Univ Sao Paulo, Inst Math & Stat, Dept Comp Sci, Sao Paulo, Brazil.
   [Lauretto, Marcelo de Souza; Chaim, Marcos Lordello] Univ Sao Paulo, Sch Arts Sci & Humanities, Sao Paulo, Brazil.
C3 Universidade Estadual Paulista; Universidade de Sao Paulo; Universidade
   de Sao Paulo
RP de Souza, HA (corresponding author), Sao Paulo State Univ, Dept Comp, Bauru, SP, Brazil.
EM higor.amario@unesp.br
RI Kon, Fabio/H-2743-2012; Lauretto, Marcelo/J-1964-2012; Amario de Souza,
   Higor/JDD-7814-2023; Chaim, Marcos/K-4711-2016
OI Kon, Fabio/0000-0003-3888-7340; Lauretto, Marcelo/0000-0001-5507-2368;
   Amario de Souza, Higor/0000-0003-4233-5987; Chaim,
   Marcos/0000-0001-7157-5141
FU Sao Paulo Research Foundation (FAPESP) [13/24992-2, 14/23030-5,
   14/50937-1]
FX Sao Paulo Research Foundation (FAPESP), Grant/Award Numbers: 13/24992-2,
   14/23030-5, 14/50937-1
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2022, Arxiv, DOI arXiv:2212.01237
   AITCHISON J, 1983, BIOMETRIKA, V70, P57
   Beszédes A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P468, DOI [10.1109/saner48275.2020.9054820, 10.1109/SANER48275.2020.9054820]
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Campbell DT., 1963, Handbook of Research on Teaching, P171
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Carmines E.G., 1979, RELIABILITY VALIDITY
   Castro B, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1130, DOI 10.1109/ASE.2019.00119
   Chen HN, 2010, COMMUN STAT-SIMUL C, V39, P860, DOI 10.1080/03610911003650383
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cochran W.G., 1957, Experimental designs, V2nd
   Cohen J., 1988, STAT POWER ANAL BEHA
   Creswell J. W., 2013, RES DESIGN QUALITATI
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Davis FD, 1996, INT J HUM-COMPUT ST, V45, P19, DOI 10.1006/ijhc.1996.0040
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Feigenspan J., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P73
   Fisher RA, 1935, J R STAT SOC, V98, P39, DOI 10.2307/2342435
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fossaluza V, 2015, SPRINGER P MATH STAT, V118, P173, DOI 10.1007/978-3-319-12454-4_14
   Francel MA, 2001, SCI COMPUT PROGRAM, V40, P151, DOI 10.1016/S0167-6423(01)00013-2
   Fry ZP., 2011, A human study of fault localization accuracy, P1
   GILMORE DJ, 1991, ACTA PSYCHOL, V78, P151, DOI 10.1016/0001-6918(91)90009-O
   Gilmore JT., 1957, Tx-o direct input utility system
   GOULD JD, 1975, INT J MAN MACH STUD, V7, P151, DOI 10.1016/S0020-7373(75)80005-8
   Gouveia C., 2013, 1st Working Conference on Software Visualization, VISSOFT, P1, DOI DOI 10.1109/VISSOFT.2013.6650539
   Hailpern B, 2002, IBM SYST J, V41, P4, DOI 10.1147/sj.411.0004
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Horvath F, 2020, PROC IEEE INT CONF S, P290, DOI 10.1109/ICSME46990.2020.00036
   Jae-OnKim CWM., 1978, Introduction to Factor Analysis: What It Is and How To Do It
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jordan P.W., 1996, Usability Evaluation in Industry, DOI DOI 10.1201/9781498710411
   Ko A, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1569
   Ko AJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P301, DOI 10.1145/1368088.1368130
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Kusumoto S., 2002, Empirical Software Engineering, V7, P49, DOI 10.1023/A:1014823126938
   Laghari G, 2016, IEEE INT CONF AUTOM, P274, DOI 10.1145/2970276.2970308
   Laitenberger O, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P122, DOI 10.1109/METRIC.1998.731237
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Li XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P82, DOI 10.1145/3180155.3180242
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   MEHTA CR, 1986, ACM T MATH SOFTWARE, V12, P154, DOI 10.1145/6497.214326
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Nielsen J., 2012, MANY TEST USERS USAB
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Ribeiro HL, 2018, IEEE INT CONF SOFTW, P404, DOI 10.1109/ICST.2018.00048
   Ribeiro HL., 2016, On the use of control- and data-flow in fault localization
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Spencer D., 2009, CARD SORTING DESIGNI
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   Wainer J., 2011, Collaborative Systems, P405
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xie XY, 2016, PROC INT CONF SOFTW, P808, DOI 10.1145/2884781.2884834
   YOUNGS EA, 1974, INT J MAN MACH STUD, V6, P361, DOI 10.1016/S0020-7373(74)80027-1
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 63
TC 0
Z9 0
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 OCT 11
PY 2023
DI 10.1002/smr.2622
EA OCT 2023
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U3CT9
UT WOS:001083620100001
OA Bronze
DA 2024-07-18
ER

PT J
AU Yan, Y
   Jiang, SJ
   Zhang, YM
   Zhang, C
AF Yan, Yue
   Jiang, Shujuan
   Zhang, Yanmei
   Zhang, Cheng
TI Improving fault localization via weighted execution graph and graph
   attention network
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE deep learning; fault localization; software debugging; spectrum-based
AB Software fault localization is commonly recognized as arduous and time consuming. Spectrum-based fault localization (SBFL) has been widely used due to its lightness. However, the effectiveness of SBFL is limited since it only considers simple statistics on the coverage information, ignoring the tie problem that the spectrum matrixes of some statements are the same. Most existing deep learning-based fault localization (DLFL) techniques convert the coverage information into a vector, which utilizes the spectrum in a simplified manner and still has limitations in practice. To solve the above problem, we propose an approach via the weighted execution graph and graph attention network (WEGAT). We use a graph structure to represent the coverage information between test cases and program elements. Then, we generate a weighted execution graph by applying the predicate execution sequence. Furthermore, we combine the weighted execution graph with the AST as an integrated graph, which is the input of the GAT for fault localization. We evaluate WEGAT in within-project and cross-project prediction scenarios on the Defects4J benchmark. Experimental results show that our approach outperforms traditional SBFL (Ochiai, DStar and Tarantula) and DLFL (TraPT, CNN-FL, Grace, and AGFL) methods, effectively improving the accuracy of fault localization.
   Firstly, we model the coverage information of programs as execution graphs and use predicate sequences to construct the weighted execution graph. Furthermore, we combine the weighted execution graph with AST to generate an integrated graph. Finally, we apply the GAT model to mine the Integrated graph's valuable features fully. image
C1 [Yan, Yue; Jiang, Shujuan; Zhang, Yanmei; Zhang, Cheng] China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou, Peoples R China.
   [Jiang, Shujuan; Zhang, Yanmei] China Univ Min & Technol, Engn Res Ctr Mine Digitalizat, Xuzhou, Peoples R China.
C3 China University of Mining & Technology; China University of Mining &
   Technology
RP Jiang, SJ (corresponding author), China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou, Peoples R China.
EM shjjiang@cumt.edu.cn
RI Wang, Huiyan/JXW-9178-2024; Liu, Yuxuan/JVO-7759-2024
OI ZHANG, CHENG/0000-0001-8721-0577
FU This research was supported in part supported by National Natural
   Science Foundation of China (61673384) and Natural Science Foundation of
   Jiangsu Province (BK20181353). [61673384]; National Natural Science
   Foundation of China [BK20181353]; Natural Science Foundation of Jiangsu
   Province
FX This research was supported in part supported by National Natural
   Science Foundation of China (61673384) and Natural Science Foundation of
   Jiangsu Province (BK20181353).
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   [Anonymous], 2020, JAV
   [Anonymous], 2018, ABOUT US
   [Anonymous], 2014, Advances in Neural Information Processing Systems (NIPS)
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Choi J, 2022, INT CONF ACOUST SPEE, P3578, DOI 10.1109/ICASSP43922.2022.9746788
   Fout A, 2017, ADV NEUR IN, V30
   [郭肇强 Guo Zhaoqiang], 2020, [软件学报, Journal of Software], V31, P2826
   Hamilton W., 2017, PROC NIPS
   Huo X, 2021, IEEE T SOFTWARE ENG, V47, P1368, DOI 10.1109/TSE.2019.2920771
   Jones JA, 2005, P 20 IEEE ACM INT C, P273
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Lou YL, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P664, DOI 10.1145/3468264.3468580
   Luo LH, 2023, IEEE INT CONF SOFTW, P165, DOI 10.1109/ICST57152.2023.00024
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Mousavian Z., 2011, P 6 INT WORKSH AUT S, P15, DOI [10.1145/1982595.1982599, DOI 10.1145/1982595.1982599]
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Qian J, 2021, IEEE INT C S Q R S, P672, DOI 10.1109/QRS54544.2021.00077
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Velickovic Petar, 2018, INT C LEARN REPR
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wong W. E., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P21, DOI 10.1109/SERE.2012.12
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xie H, 2022, PROC INT CONF SOFTW, P48, DOI 10.1145/3510003.3510136
   Xie XY, 2016, PROC INT CONF SOFTW, P808, DOI 10.1145/2884781.2884834
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xie ZG, 2023, IEEE ACCESS, V11, P16526, DOI 10.1109/ACCESS.2023.3246127
   Yan Y., SOURCE CODE STEPS WE
   Yiling Lou, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P75, DOI 10.1145/3395363.3397351
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang Z, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2312
   Zhang Z, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P445, DOI [10.1109/saner.2019.8668002, 10.1109/SANER.2019.8668002]
   Zhao ZH, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111108
   Zhou W, 2023, ACM T MULTIM COMPUT, V19, DOI 10.1145/3519030
NR 39
TC 0
Z9 0
U1 4
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2024
VL 36
IS 6
DI 10.1002/smr.2619
EA OCT 2023
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TG5G4
UT WOS:001076060600001
DA 2024-07-18
ER

PT J
AU Brito, A
   Hora, A
   Valente, MT
AF Brito, Aline
   Hora, Andre
   Tulio Valente, Marco
TI Towards a catalog of composite refactorings
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE composite refactoring; mining software repositories; refactoring;
   software evolution
AB Catalogs of refactoring have key importance in software maintenance and evolution, since developers rely on such documents to understand and perform refactoring operations. Furthermore, these catalogs constitute a reference guide for communication between practitioners since they standardize a common refactoring vocabulary. Fowler's book describes the most popular catalog of refactorings, which documents single and well-known refactoring operations. However, sometimes, refactorings are composite transformations, that is, a sequence of refactorings is performed over a given program element. For example, a sequence of Extract Method operations (a single refactoring) can be performed over the same method, in one or in multiple commits, to simplify its implementation, therefore, leading to a Method Decomposition operation (a composite refactoring). In this paper, we propose and document a catalog with eight composite refactorings. We also implement a set of scripts to mine composite refactorings by preprocessing the results of refactoring detection tools. Using such scripts, we search for composites in a representative refactoring oracle with hundreds of confirmed single refactoring operations. Next, to complement this first study, we also search for composites in the full history of 10 well-known open-source projects. We characterize the detected composite refactorings, under dimensions such as size and location. We conclude by addressing the applications and implications of the proposed catalog.
C1 [Brito, Aline; Hora, Andre; Tulio Valente, Marco] Fed Univ Minas Gerais UFMG, Dept Comp Sci, Belo Horizonte, Brazil.
C3 Universidade Federal de Minas Gerais
RP Brito, A (corresponding author), Fed Univ Minas Gerais UFMG, Dept Comp Sci, Belo Horizonte, Brazil.
EM alinebrito@dcc.ufmg.br; andrehora@dcc.ufmg.br; mtov@dcc.ufmg.br
CR AlOmar E., 2021, KNOWLEDGE MANAGEMENT
   Atwi H., 2021, 2021 IEEE 21 INT WOR, P1
   Avelino G, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bibiano A.C., 2019, INT SYMP EMP SOFTWAR, P1, DOI [DOI 10.1109/ESEM.2019.8870183, 10.1109/ESEM.2019.8870183, DOI 10.1109/esem.2019.8870183]
   Bibiano AC., 2021, 37 INT C SOFTW MAINT, P1
   Bibiano AC, 2020, INT C PROGRAM COMPRE, P149, DOI 10.1145/3387904.3389264
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Brito A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10023-3
   Brito A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P367, DOI [10.1109/SANER48275.2020.9054864, 10.1109/saner48275.2020.9054864]
   Brito Rodrigo, 2020, SBCARS '20: Proceedings of the 14th Brazilian Symposium on Software Components, Architectures, and Reuse, P101, DOI 10.1145/3425269.3425274
   Brito R, 2021, INT C PROGRAM COMPRE, P265, DOI 10.1109/ICPC52881.2021.00033
   Cedrim D., 2018, THESIS PUC RIO
   Coelho J, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106274
   Foote B., 1997, BIG BALL MUD
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ge X, 2017, S VIS LANG HUM CEN C, P71, DOI 10.1109/VLHCC.2017.8103453
   Ge Xi, 2014, P 7 INT WORKSHOP COO, P99, DOI 10.1145/2593702
   Golubev Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1303, DOI 10.1145/3468264.3473924
   Grund F, 2021, PROC INT CONF SOFTW, P1510, DOI 10.1109/ICSE43902.2021.00135
   Hattori L, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P141, DOI 10.1109/MSR.2009.5069492
   Hayashi S, 2013, WORK CONF REVERSE EN, P487, DOI 10.1109/WCRE.2013.6671331
   Hebig R, 2020, INT C PROGRAM COMPRE, P425, DOI 10.1145/3387904.3389283
   Higo Y, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110571
   Hora A, 2020, EMPIR SOFTW ENG, V25, P1798, DOI 10.1007/s10664-020-09809-8
   Hora A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1102, DOI 10.1145/3180155.3180212
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Li HQ, 2012, LECT NOTES COMPUT SC, V7212, P501, DOI 10.1007/978-3-642-28872-2_34
   López C, 2014, 2014 International Symposium on Computers in Education (SIIE), P35, DOI 10.1109/SIIE.2014.7017701
   Merino L, 2018, J SYST SOFTWARE, V144, P165, DOI 10.1016/j.jss.2018.06.027
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   Paixao M, 2020, IEEE WORK CONF MIN S, P125, DOI 10.1145/3379597.3387475
   Pantiuchina J, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3408302
   Rahman F, 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P322, DOI DOI 10.1145/2025113
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sarkar S, 2009, IEEE SOFTWARE, V26, P28, DOI 10.1109/MS.2009.42
   Shen B, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360596
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Silva DS, 2020, INT J ENTREP BEHAV R, V26, P595, DOI [10.1108/IJEBR-07-2019-0425, 10.1109/TSE.2020.2968072]
   Sousa L, 2020, IEEE WORK CONF MIN S, P186, DOI 10.1145/3379597.3387477
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Tsantalis N., REFACTORING ORACLE
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Wang Y, 2009, PROC IEEE INT CONF S, P413, DOI 10.1109/ICSM.2009.5306290
NR 50
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2024
VL 36
IS 4
DI 10.1002/smr.2530
EA JAN 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MU0E5
UT WOS:000916720100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Prenner, N
   Unger-Windeler, C
   Schneider, K
AF Prenner, Nils
   Unger-Windeler, Carolin
   Schneider, Kurt
TI Goals and challenges in hybrid software development approaches
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile development; hybrid development approaches; plan-based
   development; systematic mapping study
ID BALANCING AGILE; METHODOLOGY; MODEL
AB The number of companies that use agile methods increases steadily. However, these companies often do not implement a pure agile approach but combine agile and plan-based methods to so-called hybrid development approaches. However, the development of these approaches is rather difficult for the companies, since agile and plan-based approaches often follow opposite concepts. To benefit from agile and plan-based approaches at the same time, the companies have to identify and address the conflicts between agile and plan-based methods. The conflicts depend on the goals that are pursued with the implementation of agile and plan-based methods. However, there is no overview of the exact goals that are pursued in hybrid approaches and which challenges and conflicts arise with them. Therefore, we conducted a systematic mapping study to gather and analyze the goals and challenges in hybrid development approaches. The mapping study is focused on literature that presents the actual needs and goals of companies and projects. Based on our results, we present the influence factors that cause conflicts in hybrid approaches and discuss how these conflicts can be addressed.
C1 [Prenner, Nils; Schneider, Kurt] Leibniz Univ Hannover, Software Engn Grp, Hannover, Germany.
   [Unger-Windeler, Carolin] Baker Hughes, Res & Dev, Celle, Germany.
C3 Leibniz University Hannover
RP Prenner, N (corresponding author), Leibniz Univ Hannover, Software Engn Grp, Hannover, Germany.
EM nils.prenner@inf.uni-hannover.de
OI Prenner, Nils/0000-0002-2955-0394; Unger-Windeler,
   Carolin/0000-0002-1392-8882
CR Abdelaziz AA, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTING, CONTROL, NETWORKING, ELECTRONICS AND EMBEDDED SYSTEMS ENGINEERING (ICCNEEE), P41, DOI 10.1109/ICCNEEE.2015.7381425
   Adelakun O., 2017, CONF IRM
   Anitha PC, 2013, IEEE INT WORKS EMPIR, P17, DOI 10.1109/EmpiRE.2013.6615211
   [Anonymous], 2012, P 16 EUR C PATT LANG, DOI [DOI 10.1145/2396716.2396731, 10.1145/2396716.2396731]
   [Anonymous], 2009, ACIS P
   Barlow JB, 2011, COMMUN ASSOC INF SYS, V29
   Batra D, 2010, COMMUN ASSOC INF SYS, V27, P379
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Binder J, 2014, PROCD SOC BEHV, V119, P182, DOI 10.1016/j.sbspro.2014.03.022
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Boehm B, 2003, COMPUTER, V36, P57, DOI 10.1109/MC.2003.1204376
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Cao L., 2004, Proceedings of the 37th Annual Hawaii International Conference on System Sciences, P1
   Cataldo M, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P579
   Chang HF, 2013, INT J ADV COMPUT SC, V4, P9
   De Lucia Andrea, 2010, Journal of Emerging Technologies in Web Intelligence, V2, P212, DOI 10.4304/jetwi.2.3.212-220
   Neto FGD, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P315, DOI 10.1109/REW.2017.33
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Fowler M., 2001, Software Development, V9, P28
   Fritzsche Martin., 2007, e-Informatica, V1, P9
   Hayata T., 2011, Service operations, logistics, and informatics (SOLI), 2011 IEEE international conference, P285, DOI DOI 10.1109/SOLI.2011.5986572
   Heeager LT, 2020, EMPIR SOFTW ENG, V25, P1035, DOI 10.1007/s10664-020-09804-z
   Heeager LT., 2013, INF SYST DEV, P35
   Heidenberg J, 2010, LECT NOTES COMPUT SC, V6156, P47, DOI 10.1007/978-3-642-13792-1_6
   Heikkilä VT, 2017, EMPIR SOFTW ENG, V22, P2892, DOI 10.1007/s10664-016-9491-z
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Imani T., 2017, International Journal of Engineering Research and Applications, V7, P39, DOI [10.9790/9622-0703043946, DOI 10.9790/9622-0703043946]
   Islam G, 2020, RELIAB ENG SYST SAFE, V200, DOI 10.1016/j.ress.2020.106954
   Kamal T, 2020, IET SOFTW, V14, P265, DOI 10.1049/iet-sen.2019.0128
   Karlström D, 2006, EMPIR SOFTW ENG, V11, P203, DOI 10.1007/s10664-006-6402-8
   Kasauli Rashidah, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P31, DOI 10.1145/3383219.3383223
   Kautz K., 2010, INT C INF RES MAN
   Keshta N., 2017, 8 IEEE ANN INF TECHN
   Klünder J, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P61, DOI 10.1145/3379177.3388898
   Klünder J, 2021, 2021 IEEE/ACM JOINT 15TH INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES AND 16TH ACM/IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICSSP/ICGSE 2021), P1, DOI 10.1109/ICSSP-ICGSE52873.2021.00010
   Klünder J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P255, DOI 10.1109/ICSE-SEIP.2019.00036
   Klünder J, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P1, DOI 10.1145/3202710.3203146
   Kuhrmann M., 2018, HELENA Stage 2 Results
   Kuhrmann M, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P30, DOI 10.1145/3084100.3084104
   Kusters RJ, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P271, DOI 10.5220/0006292502710278
   Laux, 2019, INT C INF SYST ICIS
   Liskin O, 2015, LECT NOTES COMPUT SC, V9013, P132, DOI 10.1007/978-3-319-16101-3_9
   Matkovic P, 2018, COMPUT SCI INF SYST, V15, P79, DOI 10.2298/CSIS160820038M
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   McHugh M., 2015, J COMPUT ENG INF TEC, V4, P9307
   McMichael B, 2007, AGILE 2007, PROCEEDINGS, P262, DOI 10.1109/AGILE.2007.36
   Mirza Mahrukh Sameen, 2019, Journal of Software, V14, P209, DOI 10.17706/jsw.14.5.209-219
   Noll J, 2019, LECT NOTES COMPUT SC, V11915, P341, DOI 10.1007/978-3-030-35333-9_25
   Paige RF, 2008, LECT NOTES COMPUT SC, V5219, P30, DOI 10.1007/978-3-540-87698-4_6
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Portela LT, 2016, INT CONF GLOBAL SOFT, P195, DOI 10.1109/ICGSE.2016.39
   Prenner N, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P185, DOI 10.1145/3379177.3390304
   Prenner N, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P145, DOI 10.1145/3379177.3388907
   Qureshi MRJ, 2012, IET SOFTW, V6, P358, DOI 10.1049/iet-sen.2011.0110
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Ramesh B, 2012, INFORM SYST RES, V23, P323, DOI 10.1287/isre.1110.0351
   Read A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5319, DOI 10.1109/HICSS.2012.684
   Rottier PA, 2008, AGILE 2008, PROCEEDINGS, P218, DOI 10.1109/Agile.2008.52
   Royce W. W., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P328
   Scheerer A, 2014, P ANN HICSS, P4780, DOI 10.1109/HICSS.2014.587
   Spundak M, 2014, PROCD SOC BEHV, V119, P939, DOI 10.1016/j.sbspro.2014.03.105
   Tell P, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2315
   Theobald S, 2020, LECT NOTES COMPUT SC, V12562, P20, DOI 10.1007/978-3-030-64148-1_2
   Theobald S, 2018, LECT NOTES BUS INF P, V314, P123, DOI 10.1007/978-3-319-91602-6_8
   Theocharis G, 2015, LECT NOTES COMPUT SC, V9459, P149, DOI 10.1007/978-3-319-26844-6_11
   Thesing T, 2021, PROCEDIA COMPUT SCI, V181, P746, DOI 10.1016/j.procs.2021.01.227
   Tjornehoj A., 2018, IRIS SEL PAP INF SYS, V9
   Tordrup, 2014, J INF TECHNOL CASE A, V14, P3
   Uludag Ö, 2017, IEEE INT ENTERP DIST, P123, DOI 10.1109/EDOC.2017.25
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   Waterman M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P347, DOI 10.1109/ICSE.2015.54
   Waterman M, 2013, LECT NOTES BUS INF P, V149, P238
   West D., 2011, Forrester Research, V26, P1
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xiaocheng Ge, 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P35, DOI 10.1109/AGILE.2010.10
   Xu, 2011, REV BUSINESS INFORM, V13
NR 79
TC 5
Z9 5
U1 9
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2021
VL 33
IS 11
AR e2382
DI 10.1002/smr.2382
EA SEP 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ1DY
UT WOS:000698626700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zhen, Y
   Khan, A
   Nazir, S
   Zhao, HQ
   Alharbi, A
   Khan, S
AF Zhen, Ying
   Khan, Abdullah
   Nazir, Shah
   Huiqi, Zhao
   Alharbi, Abdullah
   Khan, Sulaiman
TI Crowdsourcing usage, task assignment methods, and crowdsourcing
   platforms: A systematic literature review
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE crowdsource; crowdsourcing; multicriteria; software engineering; task
   assignment; task management; task selection
ID WORKERS; CROWD; PARTICIPATION; SELECTION
AB Crowdsourcing is simply the outsourcing of different tasks or work to a diverse group of individuals in an open call for the purpose of utilizing human intelligence. Crowdsourcing nowadays used to support and enhance software engineering in different aspects. In this proposed study, a systematic literature review was conducted for the last 10 years from 2010 to 2019. During the filtering process, a total of 120 relevant studies have been identified, and then the most relevant 70 studies were selected to include as part of the current study. The proposed study shows the effect of task assignment in crowdsourcing, such as if a task is assigned to an appropriate worker or an inappropriate worker, what will be the consequences. The study also highlights crowdsourcing usage in the field of software engineering. All the existing task assignment methods used for assigning the task to make crowdsourcing activity more effective have been analyzed. The study also highlights all the available crowdsourcing platforms used for a variety of task to be performed. The study concludes by identifying the issues regarding the task assignment and to specify the methods for enhancement in the assignment of tasks for future research in crowdsourcing.
C1 [Zhen, Ying] Party Sch Yangzhou, Dept Basic Theories, Yangzhou CHN225009, Jiangsu, Peoples R China.
   [Khan, Abdullah; Nazir, Shah; Khan, Sulaiman] Univ Swabi, Dept Comp Sci, Swabi, Pakistan.
   [Huiqi, Zhao] Shandong Univ Sci & Technol, Coll Intelligent Equipment, Qingdao, Peoples R China.
   [Alharbi, Abdullah] Taif Univ, Coll Comp & Informat Technol, At Taif, Saudi Arabia.
C3 Shandong University of Science & Technology; Taif University
RP Zhen, Y (corresponding author), Party Sch Yangzhou, Dept Basic Theories, Yangzhou CHN225009, Jiangsu, Peoples R China.
EM yingzhen1215@sina.com
RI Khan, Sulaiman/AAY-2284-2021; Khan, Abd ullah/J-6178-2013; Nazir,
   Shah/D-2020-2015
OI Khan, Sulaiman/0000-0003-2562-3477; Khan, Abd ullah/0000-0003-1718-7038;
   Nazir, Shah/0000-0003-0126-9944
CR Alelyani T., 2016, P 2 INT WORKSH SOFTW
   Ali-Hassan H, 2016, CAN J ADM SCI, V33, P318, DOI 10.1002/cjas.1395
   Awwad T, 2017, P INT COMP SOFTW APP, P923, DOI 10.1109/COMPSAC.2017.275
   Baba Y, 2014, EXPERT SYST APPL, V41, P2678, DOI 10.1016/j.eswa.2013.11.011
   Biao Song, 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P360, DOI 10.1109/CloudCom.2010.53
   Borromeo RM, 2016, HUM-CENT COMPUT INFO, V6, DOI 10.1186/s13673-016-0068-z
   Borromeo RM., 2016, P 20 INT DAT ENG APP
   Burnap A, 2017, J ENG DESIGN, V28, P317, DOI 10.1080/09544828.2017.1316013
   Carvalho A, 2016, ANN MATH ARTIF INTEL, V78, P45, DOI 10.1007/s10472-015-9492-4
   Chen YY, 2018, J COMPUT SCI TECH-CH, V33, P768, DOI 10.1007/s11390-018-1855-y
   Cheung Man Hon, 2015, P 16 ACM INT S MOB A
   Costa CF., 2018, P 26 ACM SIGSPATIAL
   Cui L., 2017, P 2 INT C CROWD SCI
   Du Y, 2020, THEOR COMPUT SCI, V803, P130, DOI 10.1016/j.tcs.2019.07.033
   Ellero A, 2015, PROC ECON FINANC, V32, P20, DOI 10.1016/S2212-5671(15)01359-3
   Fonteles AS, 2016, J LOCAT BASED SERV, V10, P125, DOI 10.1080/17489725.2016.1184770
   Geiger D, 2014, DECIS SUPPORT SYST, V65, P3, DOI 10.1016/j.dss.2014.05.007
   Ghezzi A, 2018, INT J MANAG REV, V20, P343, DOI 10.1111/ijmr.12135
   Guo XT, 2014, EXPERT SYST APPL, V41, P7987, DOI 10.1016/j.eswa.2014.06.044
   Guoliang Li, 2017, 2017 IEEE 33rd International Conference on Data Engineering (ICDE), P39, DOI 10.1109/ICDE.2017.26
   Han T., 2017, P 2017 ACM C INF KNO
   Harman E, 2018, EVAL PROGRAM PLANN, V71, P68, DOI 10.1016/j.evalprogplan.2018.08.004
   Hosseini M, 2015, COMPUT SCI REV, V17, P43, DOI 10.1016/j.cosrev.2015.05.001
   Jiang JC, 2019, IEEE T PARALL DISTR, V30, P1722, DOI 10.1109/TPDS.2019.2894146
   Jiang Y, 2018, PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON CROWD SCIENCE AND ENGINEERING (ICCSE 2018), DOI 10.1145/3265689.3265717
   Khasraghi HJ, 2014, BEHAV INFORM TECHNOL, V33, P1383, DOI 10.1080/0144929X.2014.883551
   Khazankin R, 2011, LECT NOTES COMPUT SC, V7084, P297, DOI 10.1007/978-3-642-25535-9_20
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Li GL, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1711, DOI 10.1145/3035918.3054776
   Liang Y, 2019, IEEE ACCESS, V7, P57371, DOI 10.1109/ACCESS.2018.2879331
   Luz N, 2015, ARTIF INTELL REV, V44, P187, DOI 10.1007/s10462-014-9423-5
   Maalej W., 2015, P 2 INT WORKSH CONT
   Machado L, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING (CSI-SE), P36, DOI [10.1109/CSI-SE.2016.014, 10.1145/2897659.2897666]
   Mao K., 2013, P 2013 INT C SOFTW E
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Moayedikia A, 2019, DECIS SUPPORT SYST, V122, DOI 10.1016/j.dss.2019.05.005
   Moayedikia A, 2018, ENG APPL ARTIF INTEL, V74, P212, DOI 10.1016/j.engappai.2018.06.008
   Moghaddam M, 2019, DECIS SUPPORT SYST, V120, P81, DOI 10.1016/j.dss.2019.03.005
   Morschheuser B, 2017, INT J HUM-COMPUT ST, V106, P26, DOI 10.1016/j.ijhcs.2017.04.005
   Nassar L, 2019, KNOWL INF SYST, V60, P1, DOI 10.1007/s10115-018-1235-5
   Pournajaf L, 2014, PROCEDIA COMPUT SCI, V29, P1314, DOI 10.1016/j.procs.2014.05.118
   Qiu C., 2016, P 25 ACM INT C INF K
   Roy SB, 2015, VLDB J, V24, P467, DOI 10.1007/s00778-015-0385-2
   Safran Mejdl, 2017, Applied Computing and Informatics, V13, P47, DOI 10.1016/j.aci.2016.01.001
   Sanagavarapu LM., 2018, P 11 INT WORKSH COOP
   Saremi RL., 2015, P 2 INT WORKSH CROWD
   Sari A, 2019, J SYST SOFTWARE, V153, P200, DOI 10.1016/j.jss.2019.04.027
   Schall D, 2014, WORLD WIDE WEB, V17, P1, DOI 10.1007/s11280-012-0180-6
   Shin H, 2018, MOB INF SYST, V2018, DOI 10.1155/2018/6920679
   Simao Filho M., 2019, COMPLEXITY, V2019, P1
   Stol KJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P187, DOI 10.1145/2568225.2568249
   Sun HP, 2018, PROC INT CONF DATA, P377, DOI 10.1109/ICDE.2018.00042
   Tarasov A, 2014, EXPERT SYST APPL, V41, P6190, DOI 10.1016/j.eswa.2014.04.012
   Tunio MZ, 2017, IEEE ACCESS, V5, P18287, DOI 10.1109/ACCESS.2017.2747660
   Vaz L, 2019, INT CONF GLOBAL SOFT, P48, DOI 10.1109/ICGSE.2019.00041
   Wang YF, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3789
   Wang Z., 2017, P 32 IEEE ACM INT C
   Weidema ERQ, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING (CSI-SE), P41, DOI [10.1145/2897659.2897664, 10.1109/CSI-SE.2016.015]
   Wu PK, 2018, DECIS SUPPORT SYST, V110, P107, DOI 10.1016/j.dss.2018.03.010
   Yang P, 2017, IEEE INTERNET THINGS, V4, P1193, DOI 10.1109/JIOT.2017.2726820
   Yang Y, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962594
   Yao JY, 2017, I S MOD ANAL SIM COM, P110, DOI 10.1109/MASCOTS.2017.20
   Ye H, 2015, INFORM MANAGE-AMSTER, V52, P98, DOI 10.1016/j.im.2014.10.007
   Younas I, 2018, NEUROCOMPUTING, V314, P409, DOI 10.1016/j.neucom.2018.07.008
   Yu DH, 2019, IEEE ACCESS, V7, P35743, DOI 10.1109/ACCESS.2019.2905054
   Yu DH, 2019, IEEE ACCESS, V7, P33094, DOI 10.1109/ACCESS.2019.2902913
   Yuen MC., 2012, P 1 INT WORKSH CROWD
   Zhang H, 2015, 2015 CONFERENCE ON TECHNOLOGIES AND APPLICATIONS OF ARTIFICIAL INTELLIGENCE (TAAI), P164, DOI 10.1109/TAAI.2015.7407065
   Zhang SA, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3285029
   Zhang XL, 2019, IEEE T EMERG TOP COM, V7, P174, DOI 10.1109/TETC.2016.2614383
   Zheng HC, 2011, INT J ELECTRON COMM, V15, P57, DOI 10.2753/JEC1086-4415150402
NR 71
TC 17
Z9 18
U1 8
U2 70
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2021
VL 33
IS 8
AR e2368
DI 10.1002/smr.2368
EA JUN 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA TS7NQ
UT WOS:000668318000001
DA 2024-07-18
ER

PT J
AU Niazi, M
   Mahmood, S
   Alshayeb, M
AF Niazi, Mahmood
   Mahmood, Sajjad
   Alshayeb, Mohammad
TI GLOB: A global project management readiness framework
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
ID SOFTWARE OUTSOURCING RELATIONSHIPS; TRUST; CHALLENGES; DECISIONS
AB In global software development (GSD), software is developed by a team of geographically dispersed people. Many organizations that develop projects globally do not evaluate their project management readiness to undertake such projects. The objective of this paper is to propose a global project management readiness framework (GLOB) to help organizations in evaluating and assessing their GSD project management readiness to improve their capabilities in managing GSD projects. To develop GLOB, three systematic literature reviews (SLRs) were conducted. For each SLR, an empirical study was conducted with GSD practitioners to validate the SLR results in a real-world environment. We identified 45 factors that can play a positive or negative role in global project management readiness. In total, 305 best practices were identified for global project management. Based on the findings of the SLRs and empirical studies, GLOB was developed. Two case studies were conducted to evaluate GLOB in a real-world context. The case study results show that GLOB has the potential to measure an organization's project management readiness for global projects. It is hoped that GLOB will provide GSD practitioners with the ability to understand the strengths and weaknesses of current project management processes and to address weak areas.
C1 [Niazi, Mahmood; Mahmood, Sajjad; Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Niazi, M (corresponding author), King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
EM mkniazi@kfupm.edu.sa
RI Mahmood, Sajjad/B-2295-2010; Niazi, Mahmood/C-8873-2015; Alshayeb,
   Mohammad/B-5941-2015
OI Mahmood, Sajjad/0000-0001-5786-5118; Niazi, Mahmood/0000-0001-7318-7644;
   Alshayeb, Mohammad/0000-0001-7950-0099
FU King Fahd University of Petroleum Minerals
FX The authors acknowledge the support of King Fahd University of Petroleum
   & Minerals in the development of this work. We are also thankful to
   Professor Narciso Cerpa (University of Talca, Chile) for reviewing our
   SLRs.
CR Akbar MA, 2019, J COMPUT LANG, V51, P112, DOI 10.1016/j.cola.2018.12.005
   [Anonymous], 1990, BASICS GROUNDED THEO
   [Anonymous], 2006, ANAL RATER AGREEMENT
   [Anonymous], 2014, PROJ MAN BOOK KNOWL
   [Anonymous], 2002, PRINCIPLES SURVEY 1
   [Anonymous], 2006, 10 INT C EV ASS SOFT
   AUBERT B, 2003, P 36 HAW INT C SYST
   Babar MA, 2007, J SYST SOFTWARE, V80, P1438, DOI [10.1016/j.jss.2006.10.038, 10.1016/j.jss.2006.12.038]
   Begel A, 2008, IEEE INT C GLOB SOFT
   Binder J., 2010, GLOBAL PROJECT MANAG
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Bush AA, 2008, INFORM SOFTWARE TECH, V50, P499, DOI 10.1016/j.infsof.2007.08.006
   Cataldo Marcelo, 2007, INT C GLOB SOFTW ENG
   Chou TC, 2006, INT J INFORM MANAGE, V26, P249, DOI 10.1016/j.ijinfomgt.2006.02.002
   CMMI-Product-Team, 2010, CMMIR DEV VERS 1 3 2
   Conchúir EO, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1536616.1536648
   Coolican H., 1999, RES METHODS STAT PSY, V2nd
   DASKALANTONAKIS MK, 1994, IEEE SOFTWARE, V11, P17, DOI 10.1109/52.300079
   Dillman DA., 2014, INTERNET PHONE MAIL, V4th
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   Hall T., 2002, Software Process Improvement and Practice, V7, P3, DOI 10.1002/spip.150
   Hanna R., 2007, IEEE C PICMET 2007 U
   Heeks R, 2001, IEEE SOFTWARE, V18, P54, DOI 10.1109/52.914744
   Herbsleb JD, 2006, IEEE C FUT SOFTW ENG, P188
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Iacovou CL, 2008, COMMUN ACM, V51, P89, DOI 10.1145/1349026.1349044
   ITWeek, 2004, IT WEEK         0614
   Kern T, 2000, J STRATEGIC INF SYST, V9, P321, DOI 10.1016/S0963-8687(00)00048-2
   Khan A. A., 2012, Proceedings of the 2012 International Conference on Computer & Information Science (ICCIS), P944, DOI 10.1109/ICCISci.2012.6297161
   Khan N, 2003, SYST SCI 2003 P 36 A
   Khan S, 2009, 4 IEEE INT C GLOB SO
   Khan S. U., 2012, INT IASTED C SOFTW E
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Khan SU, 2011, J SYST SOFTWARE, V84, P686, DOI 10.1016/j.jss.2010.12.010
   Khan SU, 2009, 16 IEEE AS PAC SOFTW
   Khan SU, INT C SEVALUATION AS
   Kitchenham B., 2007, Joint Report
   Lacity Mary C., 2009, Strategic Outsourcing, V2, P4, DOI 10.1108/17538290910935864
   Layman L, 2006, INFORM SOFTWARE TECH, V48, P781, DOI 10.1016/j.infsof.2006.01.004
   Lopez Alejandro, 2009, 2009 Fourth IEEE International Conference on Global Software Engineering, P394, DOI 10.1109/ICGSE.2009.62
   Marinho M, 2018, 2018 11TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P238, DOI 10.1109/QUATIC.2018.00042
   McLaughlin L, 2003, IEEE SOFTWARE, V20, P104, DOI 10.1109/MS.2003.1231166
   Milewski AE, 2007, EMPIR SOFTW ENG, V12, P311, DOI 10.1007/s10664-007-9036-6
   Minevich M.M., 2005, GLOBAL OUTSOURCING R
   Nam K, 1996, COMMUN ACM, V39, P36, DOI 10.1145/233977.233989
   Narayanaswamy R., 2005, P 2005 ACM SIGMIS CP
   Nguyen T, 2008, GLOB SOFTW ENG ICGSE
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   Niazi M, 2008, SOFTW QUAL J, V16, P157
   Niazi M, 2016, INT J PROJ MANAG, V34, P1553, DOI 10.1016/j.ijproman.2016.08.008
   Niazi M, 2016, INFORM SOFTWARE TECH, V80, P1, DOI 10.1016/j.infsof.2016.08.002
   Niazi M, 2015, IET SOFTW, V9, P135, DOI 10.1049/iet-sen.2014.0130
   Niazi M, 2013, IET SOFTW, V7, P283, DOI 10.1049/iet-sen.2012.0136
   Oza NV, 2006, INFORM SOFTWARE TECH, V48, P345, DOI 10.1016/j.infsof.2005.09.011
   Oza NV, 2006, SCH COMPUTER SCI
   Ozanne MR, 2000, BAROMETER GLOBAL OUT
   Rajkumar T.M., 1997, STRATEGIC SOURCING I, P369
   Reese C.O., 2000, Design and methods, V3, P101
   Sabherwal R, 1999, COMMUN ACM, V42, P80, DOI 10.1145/293411.293485
   Sakthivel S, 2007, COMMUN ACM, V50, P69, DOI 10.1145/1232743.1232750
   Schneider S, 2013, INT J INFORM MANAGE, V33, P119, DOI 10.1016/j.ijinfomgt.2012.06.002
   Shrivastava S., 2010, J COMPUTER SCI ENG, V1, P10
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Solinski A, 2016, SOFTWARE QUAL J, V24, P447, DOI 10.1007/s11219-014-9253-3
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   STARK J, 2006, INT C GLOB SOFTW ENG
   von Stetten A, 2010, P 43 IEEE HAW INT C
   Zafar A., 2011, Proceedings of the 2011 Frontiers of Information Technology (FIT 2011), P291, DOI 10.1109/FIT.2011.61
   Zafar AA, 2018, IEEE ACCESS, V6, P22228, DOI 10.1109/ACCESS.2017.2782843
   Zahedi M, 2016, INT J INFORM MANAGE, V36, P995, DOI 10.1016/j.ijinfomgt.2016.06.007
NR 70
TC 5
Z9 5
U1 2
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2020
VL 32
IS 12
AR e2302
DI 10.1002/smr.2302
EA JUL 2020
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PF0YK
UT WOS:000546472000001
DA 2024-07-18
ER

PT J
AU Abioye, TE
   Arogundade, OT
   Misra, S
   Akinwale, AT
   Adeniran, OJ
AF Abioye, Temitope Elizabeth
   Arogundade, Oluwasefunmi Tale
   Misra, Sanjay
   Akinwale, Adio T.
   Adeniran, Olusola John
TI Toward ontology-based risk management framework for software projects:
   An empirical study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE hierarchical risk classification breakdown structure (HBRS); performance
   appraisal form (PAF); software development life cycle (SDLC); software
   ontology-based risk management (SORM); software risk ontology (SRO);
   technology acceptance model (TAM)
ID TACIT KNOWLEDGE; DESIGN
AB Software risk management is a proactive decision-making practice with processes, methods, and tools for managing risks in a software project. Many existing techniques for software project risk management are textual documentation with varying perspectives that are nonreusable and cannot be shared. In this paper, a life-cycle approach to ontology-based risk management framework for software projects is presented. A dataset from literature, domain experts, and practitioners is used. The identified risks are refined by 19 software experts; risks are conceptualized, modeled, and developed using Protege. The risks are qualitatively analyzed and prioritized, and aversion methods are provided. The framework is adopted in real-life software projects. Precision recall and F-measure metrics are used to validate the performance of the extraction tool while performance and perception evaluation are carried out using the performance appraisal form and technology acceptance model, respectively. Mean scores from performance and perception evaluation are compared with evaluation concept scale. Results showed that cost is reduced, high-quality projects are delivered on time, and software developers found this framework a potent tool needed for their day-to-day activities in software development.
C1 [Abioye, Temitope Elizabeth; Arogundade, Oluwasefunmi Tale; Akinwale, Adio T.] Fed Univ Agr, Dept Comp Sci, Abeokuta, Ogun, Nigeria.
   [Misra, Sanjay] Atilim Univ, Dept Comp Engn, Ankara, Turkey.
   [Misra, Sanjay] Covenant Univ, Dept Elect & Informat Engn, Ota, Ogun, Nigeria.
   [Abioye, Temitope Elizabeth; Akinwale, Adio T.; Adeniran, Olusola John] Fed Univ Agr, Dept Math, Abeokuta, Ogun, Nigeria.
C3 University of Agriculture, Abeokuta; Atilim University; Covenant
   University; University of Agriculture, Abeokuta
RP Arogundade, OT (corresponding author), Fed Univ Agr, Dept Math, Abeokuta, Ogun, Nigeria.
EM arogundadeot@funaab.edu.ng
RI Misra, Sanjay/K-2203-2014; Adeniran, Olusola/ABK-6206-2022; Ogunbiyi,
   Temitope Elizabeth/IQW-2720-2023
OI Misra, Sanjay/0000-0002-3556-9331; Ogunbiyi, Temitope
   Elizabeth/0000-0002-3373-396X; Arogundade,
   Oluwasefunmi/0000-0001-9338-491X
CR Abdullahi SN, 2016, INFORM SYST FRONT, V18, P1
   Afolabi I, 2014, AUST J BASIC APPL SC, V8, P1
   [Anonymous], 2011, COMPUTING SCI RES ME
   Ashbaugh DA, 2008, SECURITY SOFTWARE DE
   Bastos EC, 2018, J DATA SEMANT, V7, P107, DOI 10.1007/s13740-018-0089-z
   Baumeister A, 2010, INT J HUM CAP INF TE, V1, P14, DOI 10.4018/jhcitp.2010100102
   Boban M., 2003, MANAGEMENT, V8, P77
   Boyce S, 2007, EDUC TECHNOL SOC, V10, P275
   Brandon D., 2006, Project management for modern information systems
   Chapman C.B., 1997, INT J PROJ MANAG, V15, P273, DOI [DOI 10.1016/S0263-7863(96)00079-8, 10.1016/S0263-7863(96)00079-8]
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   Cotterell M., 1995, Software project management
   Davis AM., 2006, 14 IEEE INT REQ ENG
   de Amescua A, 2004, INFORM SYST MANAGE, V21, P78, DOI 10.1201/1078/44118.21.2.20040301/80425.11
   Department of Energy Quality Managers, SQAS2101001999 DEP E
   Dey PP, 2017, ADV SOC SCI EDUC HUM, V120, P22
   Dikmen I, 2008, AUTOMAT CONSTR, V18, P42, DOI 10.1016/j.autcon.2008.04.008
   El-Diraby TE, 2006, AUTOMAT CONSTR, V15, P504, DOI 10.1016/j.autcon.2005.07.005
   El-Diraby TE, 2006, J CONSTR ENG M, V132, P300, DOI 10.1061/(ASCE)0733-9364(2006)132:3(300)
   Forman E., 1983, Expert Choice
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Hijazi H, 2014, EUR SCI J, V10, P1857
   Hillson D.A., 2003, J FACIL MANAG, V2, P85, DOI [10.1108/14725960410808131, DOI 10.1108/14725960410808131]
   Holz H. J., 2006, SIGCSE Bulletin, V38, P96, DOI 10.1145/1189136.1189180
   Hripcsak G, 2005, J AM MED INFORM ASSN, V12, P296, DOI 10.1197/jamia.M1733
   Julio M, 2013, CLEI ELECT J, V16, P10
   Kanij T, 2014, INFORM SOFTWARE TECH, V56, P495, DOI 10.1016/j.infsof.2013.11.002
   KRISHNA BC, 2015, INT J BIOSCIENCE BIO, V7, P11, DOI DOI 10.1155/2015/852173
   Lin KY, 2006, AUTOMAT CONSTR, V15, P746, DOI 10.1016/j.autcon.2005.09.008
   Mahtab H., 2010, J KNOWLEDGE GLOBALIZ, V3, P31
   Natalya FN, 2000, ONTOLOGY DEV
   Opdahl AL, 2009, INFORM SOFTWARE TECH, V51, P916, DOI 10.1016/j.infsof.2008.05.013
   Pandit A, 2007, AUTOMAT CONSTR, V16, P759, DOI 10.1016/j.autcon.2007.02.003
   Rezgui Y, 2006, J COMPUT CIVIL ENG, V20, P261, DOI 10.1061/(ASCE)0887-3801(2006)20:4(261)
   Ricardo A, 2003, ODE ONTOLOGY BASED S, P1124
   Ricardo B.Y., 1999, Modern Information Retrieval
   Robin CRR, 2011, INT PROC COMPUT SCI, V1, P253
   Ryan S, 2013, INFORM SOFTWARE TECH, V55, P1614, DOI 10.1016/j.infsof.2013.02.013
   Ryan S, 2009, J SYST SOFTWARE, V82, P229, DOI 10.1016/j.jss.2008.05.037
   Saaty T.L, 1980, Advanced Optimization and Decision-Making Techniques in Textile Manufacturing, DOI DOI 10.1201/9780429504419-2
   Saaty T.L., 2000, The Analytic Hierarchy Process
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Salton G., 1989, Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer
   Sarigiannidis L., 2011, Journal of Software Engineering and Applications, V4, P293, DOI [10.4236/jsea.2011.45032, DOI 10.4236/JSEA.2011.45032]
   Sheriff MA, 2013, INT J HUM CAP INF TE, V4, P27, DOI 10.4018/jhcitp.2013040103
   Staab S, 2001, IEEE INTELL SYST APP, V16, P26, DOI 10.1109/5254.912382
   Stalhane T., LECT NOTES COMPUTER, V4801, P423
   Stellman A., 2005, APPL SOFTWARE PROJEC
   Surbhi A, 2012, INT J CURR TRENDS SC, V2, P29
   Tah JHM, 2001, J COMPUT CIVIL ENG, V15, P170, DOI 10.1061/(ASCE)0887-3801(2001)15:3(170)
   TAVARES BG, 2017, INT T OPER RES, V26, P1884
   Tavares BG, 2019, INT J SOFTW ENG KNOW, V29, P381, DOI 10.1142/S0218194019500165
   Thayer R, 2001, SOFTWARE ENG PROJECT
   Thornhill A., 2019, Research Methods for Business Students, V8, P128
   Tserng HP, 2009, AUTOMAT CONSTR, V18, P994, DOI 10.1016/j.autcon.2009.05.005
   Venkatesh V, 2008, DECISION SCI, V39, P273, DOI 10.1111/j.1540-5915.2008.00192.x
NR 56
TC 14
Z9 14
U1 6
U2 28
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2020
VL 32
IS 12
AR e2269
DI 10.1002/smr.2269
EA JUN 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA PF0YK
UT WOS:000542163200001
DA 2024-07-18
ER

PT J
AU Olsson, HH
   Bosch, J
AF Olsson, Helena Holmstrom
   Bosch, Jan
TI Going digital: Disruption and transformation in software-intensive
   embedded systems ecosystems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE digitalization; existing and new technologies; incumbents and new
   entrants; software and business ecosystems; software-intensive embedded
   systems; strategies
ID ORCHESTRATING INNOVATION ECOSYSTEMS; VALUE CREATION; BUSINESS STRATEGY
AB Digitalization is transforming industry to an extent that we have only seen the beginnings of. Across domains, companies experience rapid changes to their existing practices due to new technologies and new entrants that current businesses. While digitalization brings endless opportunities, it comes with challenges that require companies to strategically engage with partners in their surrounding ecosystems. In this paper, we study how companies in the embedded systems domain experience the process of transitioning from product-based companies to businesses where software, data, and artificial intelligence (AI) play an increasingly important role. To manage this, these companies need to evolve their existing ecosystems while at the same time create new ecosystems around new technologies. This involves maintaining existing technologies such as mechanics and electronics while at the same time expanding these with software, data, and AI. We provide a strategic decision framework that helps software-intensive embedded systems companies to successfully navigate the digital transformation. We do this in two steps. First, we present three models that provide the technical content of the strategic decision framework. Second, we provide an overview of the strategic alternatives that incumbents and new entrants have available when existing technologies are commoditizing and new technologies are introduced.
C1 [Olsson, Helena Holmstrom] Malmo Univ, Dept Comp Sci & Media Technol, Malmo, Sweden.
   [Bosch, Jan] Chalmers Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
C3 Malmo University; Chalmers University of Technology
RP Olsson, HH (corresponding author), Malmo Univ, Dept Comp Sci & Media Technol, Malmo, Sweden.
EM helena.holmstrom.olsson@mau.se
RI Olsson, Helena H/H-2193-2014
CR Adner R, 2010, STRATEGIC MANAGE J, V31, P306, DOI 10.1002/smj.821
   ANDREINI A, 2017, BUSINESS MODEL INNOV
   [Anonymous], HARVARD BUSINESS REV
   Bharadwaj A, 2013, MIS QUART, V37, P471, DOI 10.25300/MISQ/2013/37:2.3
   Bider I, 2019, PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS 2019), VOL 2, P525, DOI 10.5220/0007769205250533
   Bolton RN, 1998, MARKET SCI, V17, P45, DOI 10.1287/mksc.17.1.45
   Bosch J., 2017, Speed, data, and ecosystems: Excelling in a software-driven world
   Bosch J., 2014, CONTINUOUS SOFTWARE
   Bosch J., 2010, Proceedings of the Fourth European Conference on Software Architecture: Companion Volume, P93, DOI DOI 10.1145/1842752.1842776
   BOSCH J, 2019, DIGITAL TRANSFORMATI
   Bosch J, 2016, IEEE SOFTWARE, V33, P82, DOI 10.1109/MS.2016.14
   Boudreau KJ, 2009, MIT SLOAN MANAGE REV, V50, P69
   Brandenburger AM, 1996, J ECON MANAGE STRAT, V5, P5, DOI 10.1111/j.1430-9134.1996.00005.x
   CARBONE P, 2009, EMERGING PROMISE BUS
   Chen Ying., 2011, SRII Global Conference (SRII), 2011 Annual, P11, DOI DOI 10.1109/SRII.2011.12
   Clarysse B, 2014, RES POLICY, V43, P1164, DOI 10.1016/j.respol.2014.04.014
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   *EMB INT, 2019, EMBEDDED INTELLIGENC
   Flick U., 2007, SAGE QUALITATIVE RES
   Giesen E., 2007, STRATEGY LEADERSHIP, V35, P27, DOI DOI 10.1108/10878570710833732
   Hanssen GK, 2012, J SYST SOFTWARE, V85, P1455, DOI 10.1016/j.jss.2011.04.020
   Hoverstadt P., 2017, PATTERNS STRATEGY
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jansen S., 2009, Business Network Management as a Survival Strategy: A tale of Two Software Ecosystems
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P13
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Kim H, 2010, COMMUN ACM, V53, P151, DOI 10.1145/1735223.1735260
   Lungu M, 2010, SCI COMPUT PROGRAM, V75, P264, DOI 10.1016/j.scico.2009.09.004
   LWAKATARE L, 2019, P XP 2019 MAY 21 25
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Maxwell J. A., 2005, Qualitative research design: An interactive approach, V2nd
   Messerschmitt DG, 2003, SOFTWARE ECOSYSTEM: UNDERSTANDING AN INDISPENSABLE TECHNOLOGY AND INDUSTRY, P1
   Moore J.F., 2006, ANTITRUST BULL, V51, P31, DOI [10.1177/0003603x0605100103, DOI 10.1177/0003603X0605100103]
   Moore J.F., 1993, Predators and Prey: A New Ecology of Competition
   OLSSON H, 2017, P IB AM C SOFTW ENG
   OLSSON HH, 2012, P 38 EUR C SOFTW ENG
   OLSSON HH, 2017, J SOFTWARE EVOLUTION, V29, P1
   OLSSON HH, 2016, P 42 EUR C SOFTW ENG, P392
   OLSSON HH, 2014, P EUROMICRO SOFT ENG
   Pagani M, 2013, MIS QUART, V37, P617, DOI 10.25300/MISQ/2013/37.2.13
   Porter M., 1980, COMPETITIVE STRATEGY
   Rifkin Jeremy., 2001, AGE ACCESS NEW CULTU
   Ritala P, 2014, INT J TECHNOL MANAGE, V66, P109, DOI 10.1504/IJTM.2014.064608
   Ritala P, 2013, INT J TECHNOL MANAGE, V63, P244, DOI 10.1504/IJTM.2013.056900
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Still K, 2014, INT J TECHNOL MANAGE, V66, P243, DOI 10.1504/IJTM.2014.064606
   Valkokari K, 2017, TECHNOL INNOV MANAG, V7, P12
   Vanhaverbeke WW, 2008, IN C IND ENG ENG MAN, P954, DOI 10.1109/IEEM.2008.4738011
   WALSHAM G, 1995, EUR J INFORM SYST, V4, P74, DOI 10.1057/ejis.1995.9
   Zahra SA, 2012, BUS HORIZONS, V55, P219, DOI 10.1016/j.bushor.2011.12.004
NR 50
TC 10
Z9 10
U1 3
U2 64
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2020
VL 32
IS 6
AR e2249
DI 10.1002/smr.2249
EA JAN 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA LY8BL
UT WOS:000506127200001
DA 2024-07-18
ER

PT J
AU Kaya, A
   Keceli, AS
   Catal, C
   Tekinerdogan, B
AF Kaya, Aydin
   Keceli, Ali Seydi
   Catal, Cagatay
   Tekinerdogan, Bedir
TI The impact of feature types, classifiers, and data balancing techniques
   on software vulnerability prediction models
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE classification models; data sampling; imbalance datasets; machine
   learning; performance analysis; software vulnerability prediction
ID SELECTION; SMOTE
AB Software vulnerabilities form an increasing security risk for software systems, that might be exploited to attack and harm the system. Some of the security vulnerabilities can be detected by static analysis tools and penetration testing, but usually, these suffer from relatively high false positive rates. Software vulnerability prediction (SVP) models can be used to categorize software components into vulnerable and neutral components before the software testing phase and likewise increase the efficiency and effectiveness of the overall verification process. The performance of a vulnerability prediction model is usually affected by the adopted classification algorithm, the adopted features, and data balancing approaches. In this study, we empirically investigate the effect of these factors on the performance of SVP models. Our experiments consist of four data balancing methods, seven classification algorithms, and three feature types. The experimental results show that data balancing methods are effective for highly unbalanced datasets, text-based features are more useful, and ensemble-based classifiers provide mostly better results. For smaller datasets, Random Forest algorithm provides the best performance and for the larger datasets, RusboostTree achieves better performance.
C1 [Kaya, Aydin; Keceli, Ali Seydi] Hacettepe Univ, Dept Comp Engn, Beytepe Campus, TR-06800 Ankara, Turkey.
   [Catal, Cagatay; Tekinerdogan, Bedir] Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
C3 Hacettepe University; Wageningen University & Research
RP Kaya, A (corresponding author), Hacettepe Univ, Dept Comp Engn, Beytepe Campus, TR-06800 Ankara, Turkey.
EM aydinkaya@cs.hacettepe.edu.tr
RI Tekinerdogan, Bedir/K-3639-2019; Kaya, AydÄ±n/AAR-1028-2020; Catal,
   Cagatay/AAF-3929-2019; Keçeli, Ali Seydi/M-3158-2018
OI Tekinerdogan, Bedir/0000-0002-8538-7261; Kaya,
   AydÄ±n/0000-0001-6175-7769; Catal, Cagatay/0000-0003-0959-2930; Keçeli,
   Ali Seydi/0000-0001-6531-8464
CR Alves H, 2016, 2016 12TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2016), P37, DOI 10.1109/EDCC.2016.34
   [Anonymous], 2002, Computer and Communications Security, DOI [DOI 10.1145/586110.586140, 10.1145/586110.586140]
   [Anonymous], 1999, J JAPANESE SOC ARTIF
   Arkin B, 2005, IEEE SECUR PRIV, V3, P84, DOI 10.1109/MSP.2005.23
   Austin A, 2011, INT SYMP EMP SOFTWAR, P97, DOI 10.1109/ESEM.2011.18
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Chawla NV, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P875, DOI 10.1007/978-0-387-09823-4_45
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chawla NV, 2003, LECT NOTES ARTIF INT, V2838, P107, DOI 10.1007/978-3-540-39804-2_12
   Cieslak DA, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GRANULAR COMPUTING, P732, DOI 10.1109/GRC.2006.1635905
   Cook T., 1979, QUASIEXPERIMENTATION, V351
   Ernst M.D., 2003, WODA 2003 ICSE WORKS, P24
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Fisher RA, 1936, ANN EUGENIC, V7, P179, DOI 10.1111/j.1469-1809.1936.tb02137.x
   Friedman S, 2001, IND REL RES, P1, DOI 10.1097/00054725-200102000-00001
   Geetha S.., 2016, COMBATING SECURITY B
   Gegick M., 2007, 2 INT C INTERNET MON, P18
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Han H, 2005, LECT NOTES COMPUT SC, V3644, P878, DOI 10.1007/11538059_91
   He HB, 2008, IEEE IJCNN, P1322, DOI 10.1109/IJCNN.2008.4633969
   Hechenbichler K, 2004, DISCUSSION PAPER LUD, P16
   Ho TK, 1998, IEEE T PATTERN ANAL, V20, P832, DOI 10.1109/34.709601
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Hovsepyan A., 2012, P 4 INT WORKSH SEC M, P7
   Howard M., 2006, SECURITY DEV LIFECYC
   Huang SG, 2010, INT C COMPUT ENG APP, P295, DOI 10.1109/ICCEA.2010.209
   Jimenez M, 2016, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2016.15
   Kan SH, 2012, METRICS MODELS SOFTW
   Lagerström R, 2017, LECT NOTES COMPUT SC, V10379, P53, DOI 10.1007/978-3-319-62105-0_4
   Ling C. X., 1998, Proceedings Fourth International Conference on Knowledge Discovery and Data Mining, P73
   Liu AlexanderY., 2004, The Effect of Oversampling and Undersampling on Classifying Imbalanced Text Datasets
   Martin B, 2015, EL DOC
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Morrison P., 2015, P S BOOTC SCI SEC, P4
   Pang ZH, 2017, 2017 2ND INTERNATIONAL CONFERENCE ON MECHATRONICS AND INFORMATION TECHNOLOGY (ICMIT 2017), P6
   Prandl S, 2015, LECT NOTES COMPUT SC, V9478, P501, DOI 10.1007/978-3-319-26961-0_29
   Rahimi S, 2013, IEEE T RELIAB, V62, P395, DOI 10.1109/TR.2013.2257052
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Seiffert C, 2010, IEEE T SYST MAN CY A, V40, P185, DOI 10.1109/TSMCA.2009.2029559
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Singh Sudeep, 2015, BREAKING SANDBOX
   Stuckman J, 2017, IEEE T RELIAB, V66, P17, DOI 10.1109/TR.2016.2630503
   Sultana KZ, 2017, IEEE INT CONF AUTOM, P1022, DOI 10.1109/ASE.2017.8115724
   Trim P., 2010, SYST SYST ENG SOSE 2, P1
   Viega J., 2001, BUILDING SECURE SOFT
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yee G., 2006, PRIVACY PROTECTION E
   Zhang Y, 2015, IEEE INT C ENG COMP, P40, DOI 10.1109/ICECCS.2015.15
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 54
TC 5
Z9 6
U1 2
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2019
VL 31
IS 9
SI SI
AR e2164
DI 10.1002/smr.2164
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JD3OV
UT WOS:000489885900001
DA 2024-07-18
ER

PT J
AU Capilla, R
   Gallina, B
   Cetina, C
   Favaro, J
AF Capilla, Rafael
   Gallina, Barbara
   Cetina, Carlos
   Favaro, John
TI Opportunities for software reuse in an uncertain world: From past to
   emerging trends
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE domain analysis; reusability; software asset; software reuse
ID FEATURE LOCATION; MODELS
AB Much has been investigated about software reuse since the software crisis. The development of software reuse methods, implementation techniques, and cost models has resulted in a significant amount of research over years. Nevertheless, the increasing adoption of reuse techniques, many of them subsumed under higher level software engineering processes, and advanced programming techniques that ease the way to reuse software assets, have hidden somehow in the recent years new research trends on the practice of reuse and caused the disappearance of several reuse conferences. Also, new forms of reuse like open data and feature models have brought new opportunities for reuse beyond the traditional software components. From past to present, we summarize in this research the recent history of software reuse, and we report new research areas and forms of reuse according to current needs in industry and application domains, as well as promising research trends for the upcoming years.
C1 [Capilla, Rafael] Univ Rey Juan Carlos, Dept Informat, Mostoles, Spain.
   [Gallina, Barbara] Malardalen Univ, Sch Innovat Design & Technol, Vasteras, Sweden.
   [Cetina, Carlos] Univ San Jorge, Comp Sci Dept, Zaragoza, Spain.
   [Favaro, John] Intecs Solut, Innovat & Technol Serv, Pisa, Italy.
C3 Universidad Rey Juan Carlos; Malardalen University; Universidad San
   Jorge
RP Capilla, R (corresponding author), Univ Rey Juan Carlos, Dept Comp Sci, Madrid 28933, Spain.
EM rafael.capilla@urjc.es
RI Gallina, Barbara/AAP-7867-2021; Cetina, Carlos/P-8682-2017
OI Cetina, Carlos/0000-0001-8542-5515; Gallina,
   Barbara/0000-0002-6952-1053; Capilla, Rafael/0000-0002-6943-1285;
   Favaro, John/0000-0002-7883-4051
CR AMASS Consortium, AMASS ARCH DRIV MULT
   Anderson W, 2007, 6 INT IEEE C COMM OF, P1
   [Anonymous], 2010, IEC 61508
   [Anonymous], P 9 EUR C EMB REAL T
   [Anonymous], 2017, ROUND TRIP ENG VARIA
   [Anonymous], 2005, DO297 RTCA
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Arango GF, 1988, THESIS
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Barnes B., 1988, Software reuse, P77
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, P355, DOI 10.1145/136586.136587
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Beuche D., 2016, SPLC, P262
   Biffl S., 2006, Value-Based Software Engineering
   Bigerstaff TJ, 1989, SOFTWARE REUSABILITY, VI
   Bigerstaff TJ, 1989, SOFTWARE REUSABILITY, VII
   Bishop Peter, 2002, P 5 INT S PROGRAMMAB
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Capilla R, 1996, 8 WORKSH I SOFTW REU, P1
   Capilla R, 2014, COMPUTER, V47, P85, DOI 10.1109/MC.2014.33
   CCSDS, 2013, 8500G2 CCSDS
   Chrisofakis E., 2011, Proceedings from the 8th International Modelica Conference, Technical Univeristy, Dresden, Germany, V63, P1
   Clements P., 2002, Software product lines
   Desmet B, 2007, LECT NOTES ARTIF INT, V4635, P178
   Duggan W., 2012, CREATIVE STRATEGY GU
   EEIG ERTMS Users Group, ERTMS ETCS RAMS REQ
   Erdogmus H, 2018, SOFTW, V35
   European cooperation for space standardization, 2011, ECSSQHB8001A
   Favaro J, 1990, P 1 S ENV TOOLS ADA, P115
   Favaro J, 1998, ESA
   FAVARO J., 2012, INCOSE INT S, V22, P461, DOI [10.1002/j.2334-5837.2012.tb01349.x, DOI 10.1002/J.2334-5837.2012.TB01349.X]
   Favaro JM, 1998, ANN SOFTW ENG, V5, P5, DOI 10.1023/A:1018976424679
   Favaro J, 2015, COMM COM INF SC, V553, P444, DOI 10.1007/978-3-319-25840-9_27
   Font J., 2015, P 19 INT C SOFTW PRO, P46, DOI DOI 10.1145/2791060.2791085
   Font J, 2018, IEEE T EVOLUT COMPUT, V22, P363, DOI 10.1109/TEVC.2017.2751100
   Font J, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P272, DOI 10.1145/2976767.2976789
   Frakes W, 1998, ANN SOFTW ENG, V5, P1
   FRAKES WB, 1995, COMMUN ACM, V38, P75, DOI 10.1145/203241.203260
   GAFFNEY JE, 1989, INFORM SOFTWARE TECH, V31, P258, DOI 10.1016/0950-5849(89)90005-0
   Gallina B, 2019, J SOFT EVOL PROCESS
   Gallina B, 2015, INT WORK PROD LINE, P15, DOI 10.1109/PLEASE.2015.12
   Gallina B, 2012, IEEE ANNU SOFTW ENG, P148, DOI 10.1109/SEW.2012.22
   Hardung Bernd., 2004, Proceedings of the 4th ACM International Conference on Embedded Software, EMSOFT '04, P203
   International Electrotechnical Commission, 2006, IEC 62304
   International Organization for Standardization, 2011, 26262 ISO
   International Organization for Standardization and International Electrotechnical Commission and IEEE Societies and the Standards Coordinating Committees of the IEEE Standards Association, 2017, 24765 ISO
   Javed MA, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P2372, DOI 10.1145/3297280.3297634
   Javed MA, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE - VOL 2, P23, DOI 10.1145/3236405.3236406
   Jezequel JM, 1997, COMPUTER, V30, P129, DOI 10.1109/2.562936
   Kang Kyo C, 1990, Technical Report
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Latour L, 1990, WORKSH METH TOOLS RE
   Lim WC, 1994, MANAGING SOFTWARE RE
   Marcen AC, 2017, APPROACH IND EVALUAT, P491
   Martinez J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P38, DOI 10.1145/3109729.3109748
   Martinez J, 2017, PROC IEEE ACM INT C, P67, DOI 10.1109/ICSE-C.2017.15
   McIlroy M, 1969, MASS PRODUCED SOFTWA, P1
   Mens K, 2017, IEEE SOFTWARE, V34, P58, DOI 10.1109/MS.2017.4121225
   Naur P., 1969, SOFTWARE ENG REPORT, P231
   NEIGHBORS JM, 1984, IEEE T SOFTWARE ENG, V10, P564, DOI 10.1109/TSE.1984.5010280
   Nesic D, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P2022, DOI 10.1145/3297280.3297479
   Panunzio M, 2014, J SYST SOFTWARE, V96, P105, DOI 10.1016/j.jss.2014.05.076
   Pérez F, 2019, AUTOMAT SOFTW ENG, V26, P161, DOI 10.1007/s10515-019-00251-9
   Pham NH, 2009, PROC INT CONF SOFTW, P276, DOI 10.1109/ICSE.2009.5070528
   Poulin J. S., 1996, Measuring Software Reuse-Principles, Practices and Economic Models
   Prieto-Diaz R., 1987, Proceedings of COMPSAC 87. The Eleventh Annual International Computer Software and Applications Conference (Cat. No.87CH2447-1), P23
   Prieto-Diaz R, 1994, 3 INT C SOFTW REUS A
   Prieto-Diaz R., 1991, DOMAIN ANAL SOFTWARE
   PRIETODIAZ R, 1987, IEEE SOFTWARE, V4, P6, DOI 10.1109/MS.1987.229789
   Shift2Rail Joint Undertaking, MULT ACT PLAN
   Simos M. A., 1995, SIGSOFT Software Engineering Notes, P196, DOI 10.1145/223427.211845
   Ternité T, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P173, DOI 10.1109/SEAA.2009.48
   tersBeek MH, 2018, P 22 INT SYST SOFTW, V1, P208
   the Open Group, 2012, FUT AIRB CAP ENV FAC
   WEIDE BW, 1991, ADV COMPUT, V33, P1, DOI 10.1016/S0065-2458(08)60164-3
NR 76
TC 22
Z9 22
U1 2
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2019
VL 31
IS 8
SI SI
AR e2217
DI 10.1002/smr.2217
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IS0HB
UT WOS:000481828500005
DA 2024-07-18
ER

PT J
AU Dasanayake, S
   Aaramaa, S
   Markkula, J
   Oivo, M
AF Dasanayake, Sandun
   Aaramaa, Sanja
   Markkula, Jouni
   Oivo, Markku
TI Impact of requirements volatility on software architecture: How do
   software teams keep up with ever-changing requirements?
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE requirements management; requirements volatility; software architecture;
   software teams
AB Requirements volatility is a major issue in software development, causing problems such as higher defect density, project delays, and cost overruns. Software architecture that guides the overall vision of software product is one of the areas that is greatly affected by requirements volatility. Since critical architecture decisions are made based on the requirements at hand, changes in requirements can result significant changes in architecture. With the wide adoption of agile software development, software architectures are designed to accommodate possible future changes. However, the changes has to be carefully managed as unnecessary and excessive changes can bring negative consequences. An exploratory case study was conducted to study the impact of requirements volatility on software architecture. Fifteen semistructured, thematic interviews were conducted in a European software company. The research revealed poor communication, information distortion, and external dependencies as the main factors that cause requirement volatility and inadequate architecture documentation, inability to trace design rationale, and increased complexity as the main implications of requirements volatility on software architecture. Insights from software teams' awareness of the requirement volatility, factors contribute to it, and possible ways to mitigate its implications will be utilized to improve the management of requirement volatility during software architecting process.
C1 [Dasanayake, Sandun; Aaramaa, Sanja; Markkula, Jouni; Oivo, Markku] Univ Oulu, Fac Informat Technol & Elect Engn, M3S, Oulu, Finland.
C3 University of Oulu
RP Dasanayake, S (corresponding author), Univ Oulu, Fac Informat Technol & Elect Engn, M3S, Oulu, Finland.
EM sandun.dasanayake@oulu.fi
RI Markkula, Jouni/D-1355-2014; Dasanayake, Sandun/N-9071-2014
OI Dasanayake, Sandun/0000-0001-6409-9001
FU Tekes-The Finnish Funding Agency for Innovation, via MERgE project;
   ITEA2
FX ITEA2 and Tekes-The Finnish Funding Agency for Innovation, via the MERgE
   project.
CR Abrahamsson P, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.36
   Ahmad Z., 2015, P 9 INT C UB INF MAN, P1, DOI DOI 10.1145/2701126.2701174
   Ahn S, 2006, LECT NOTES COMPUT SC, V4039, P427
   Andrews A. A., 2001, Empirical Software Engineering, V6, P105, DOI 10.1023/A:1011442319273
   Anish PR, 2015, INT REQUIR ENG CONF, P86, DOI 10.1109/RE.2015.7320411
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2013, SOFTWARE REQUIREMENT
   [Anonymous], 2000, P ICAD2000 1 INT C A
   [Anonymous], ACM SIGSOFT Software Engineering Notes, DOI [DOI 10.1145/986710.986727, 10.1145/986710.986727]
   Bass L, 2007, P 6 WORK IEEE IFIP C, P1
   Bass L, 2012, EDUC LEADER SOC JUST, P39
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Christel M.G., 1992, Issues in requirements elicitation
   Cleland-Huang J, 2013, IEEE SOFTWARE, V30, P24, DOI 10.1109/MS.2013.39
   Clements P., 2007, P 6 WORK IEEE IFIP C, P20, DOI DOI 10.1109/WICSA.2007.41
   Clements P., 2001, EVALUATING SOFTWARE
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Dasanayake S, 2016, LECT NOTES COMPUT SC, V9839, P238, DOI 10.1007/978-3-319-48992-6_18
   Davis Alan M., 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P635, DOI 10.1109/COMPSAC.2008.216
   Ebert C, 2005, PROC INT CONF SOFTW, P553
   Ferreira S, 2010, J SOFTWARE MAINTENAN, V23, P375
   Ford Neal., 2017, BUILDING EVOLUTIONAR
   Fowler M., 2001, Software Development, V9, P28
   Fowler M., 2004, IS DESIGN DEAD
   Gil N, 2007, IEEE T ENG MANAGE, V54, P484, DOI 10.1109/TEM.2007.900805
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Groher I, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P11, DOI 10.1109/WICSA.2015.27
   Hayward P. A., 2002, TEAM PERFORMANCE MAN, V8, P39, DOI [DOI 10.1108/13527590210425077, 10.1108/13527590210425077]
   Hickey AM, 2003, PHARM INHALATION AER, P1
   ISO/IEC/IEEE, 2011, SYST SOFTW ENG ARCH
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Jiang TM, 2000, P INT COMP SOFTW APP, V24, P167, DOI 10.1109/CMPSAC.2000.884708
   Junjie Wang, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P59, DOI 10.1007/978-3-642-28714-5_6
   Klinger T, 2011, P 2 WORKSHOP MANAGIN, P35
   Korkala M, 2006, AGILE 2006, PROCEEDINGS, P76, DOI 10.1109/AGILE.2006.1
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Li ZN, 2014, TEXTS COMPUT SCI, P183
   Loucopoulos P., 1995, SYSTEM REQUIREMENTS
   Malaiya Y. K., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P285, DOI 10.1109/ISSRE.1999.809334
   Martini A, 2014, EUROMICRO CONF PROC, P85, DOI 10.1109/SEAA.2014.65
   McGee S, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P51, DOI 10.1109/ICSEA.2009.17
   Miller JA, 2010, J SYST SOFTWARE, V83, P2441, DOI 10.1016/j.jss.2010.07.006
   Ming Huo, 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P520, DOI 10.1109/CMPSAC.2004.1342889
   Miyachi C., 2011, ACM SIGSOFT Software Engineering Notes, V36, P1, DOI DOI 10.1145/1943371.1943388
   Narayan Kirin., 2001, Handbook of Interview Research: Context Method, P815
   Niu N, 2014, IEEE SYST J, V8, P850, DOI 10.1109/JSYST.2013.2249892
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   NURMULIANI N, 2006, P 11 AUSTR WORKSH RE
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Pfahl D, 2000, INFORM SOFTWARE TECH, V42, P1001, DOI 10.1016/S0950-5849(00)00152-X
   Pfleeger SL, 2008, IEEE SOFTWARE, V25, P32, DOI 10.1109/MS.2008.160
   Rolland C, 2004, REQUIR ENG, V9, P1, DOI 10.1007/s00766-003-0168-y
   Seddon PB, 2012, EUR J INFORM SYST, V21, P6, DOI 10.1057/ejis.2011.9
   Shachaf P, 2008, INFORM MANAGE-AMSTER, V45, P131, DOI 10.1016/j.im.2007.12.003
   Shore J, 2004, IEEE SOFTWARE, V21, P20, DOI 10.1109/MS.2004.1259183
   Sillitti A, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P309, DOI 10.1007/3-540-28244-0_14
   Stark G, 1998, J SOFTWARE MAINTENAN, V11, P293
   Strigini L, 1996, IEEE SOFTWARE, V13, P101, DOI 10.1109/52.476293
   Sudhakar M, 2005, THESIS UMEA U
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   Thakurta R., 2010, Proceedings of the 43rd Annual Hawaii International Conference on System Sciences (HICSS'10), P1, DOI DOI 10.1109/HICSS.2010.420
   van Heesch U, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P260, DOI 10.1109/WICSA.2011.42
   Yang EJ, 2018, DERMATOLOGY THER, V8, P1, DOI 10.1007/s13555-018-0227-4
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
   Zowghi D, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P3, DOI 10.1109/APSEC.2002.1182970
NR 66
TC 11
Z9 12
U1 4
U2 29
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2019
VL 31
IS 6
SI SI
AR e2160
DI 10.1002/smr.2160
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE9GT
UT WOS:000472683600002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Miranda, EA
   Berón, M
   Montejano, G
   Riesco, D
AF Miranda, Enrique A.
   Beron, Mario
   Montejano, German
   Riesco, Daniel
TI Using reverse engineering techniques to infer a system use case model
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE clustering; information extraction; program comprehension; reverse
   engineering; software engineering
ID PROGRAM COMPREHENSION; SOFTWARE; METRICS; AGGREGATION; ALGORITHMS;
   DECISION; DESIGN; TRACES; LOGIC; SUITE
AB In this article, a strategy that seeks to assist the arduous cognitive process that involves understanding a GUI-based system is presented. In order to reach this goal, a UML use case model with the most relevant features is obtained. To derive this model, the strategy performs the following steps: Extraction and filtering of specific system static information and implementation of a clustering process that inspects this information including GUI widgets, which are components closely related to the system problem domain. Although these steps are commonly known and used in the context of reverse engineering, the strategy introduces unusual approaches regarding the proposals found in the available literature. More specifically, the strategy presents (a) a set of metrics that infers the relative importance of a method or a function within the analysed system, (b) a summarization process driven by different features of software systems, and (c) a technique to cluster software artefacts and to map the cluster model onto a use case model. The article also propose a methodology that allows to compare the achieved results. The assessment of the approach suggests that the strategy can assist the software engineer to understand a software system providing a useful fine-grained use case model.
C1 [Miranda, Enrique A.; Beron, Mario; Montejano, German; Riesco, Daniel] Univ Nacl San Luis, CONICET, Dept Informat, Ejercito Andes 950,D5700HHW, San Luis, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET);
   Universidad Nacional de San Luis
RP Miranda, EA (corresponding author), Univ Nacl San Luis, CONICET, Dept Informat, Ejercito Andes 950,D5700HHW, San Luis, Argentina.
EM eamiranda@unsl.edu.ar
RI Miranda, Enrique/AAI-7012-2020
OI Miranda, Enrique Alfredo/0000-0002-8541-0345
CR Aguezzoul A, 2006, 2006 INTERNATIONAL CONFERENCE ON SERVICE SYSTEMS AND SERVICE MANAGEMENT, VOLS 1 AND 2, PROCEEDINGS, P912, DOI 10.1109/ICSSSM.2006.320753
   Almendros-Jimenez J M., 2005, Designing GUI components from UML use cases
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   [Anonymous], ADV SOFTWARE ENG
   [Anonymous], APPL ONLY CALL GRAPH
   [Anonymous], ENRICHING REVERSE EN
   [Anonymous], SCENARIO DRIVEN DYNA
   [Anonymous], 2000, APPL OPTIMIZAT
   [Anonymous], CASCON 98
   [Anonymous], MOJO DISTANCE METRIC
   [Anonymous], THESIS
   [Anonymous], EVALUATION DIS SEVER
   [Anonymous], 2012, ADV SOFTWARE ENG
   [Anonymous], EVOLUTION
   [Anonymous], ICSE 00
   [Anonymous], DMS COST BENEFIT DEC
   [Anonymous], GUI RIPPING REVERSE
   [Anonymous], NESSY NEW EVALUATOR
   [Anonymous], ACM T DATABASE SYST
   [Anonymous], WCRE 00
   [Anonymous], J COMPUTATIONAL INFO
   [Anonymous], 1977, COMPUTER DATA STRUCT
   [Anonymous], CSMR 00
   [Anonymous], FEBRL OPEN SOURCE DA
   [Anonymous], SAC 13
   [Anonymous], EFFECTIVENESS MEASUR
   Ballestero E., 1998, Multiple Criteria Decision Making and Its Applications to Economic Problems
   Basci D, 2009, J INF SCI ENG, V25, P1405
   Beyer D, 2005, PROG COMPREHEN, P259, DOI 10.1109/WPC.2005.12
   Brandes U, 2001, J MATH SOCIOL, V25, P163, DOI 10.1080/0022250X.2001.9990249
   Brans J.P., 2005, PROMETHEE Methods
   BRANS JP, 1986, EUR J OPER RES, V24, P228, DOI 10.1016/0377-2217(86)90044-5
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Christl A, 2007, INFORM SOFTWARE TECH, V49, P255, DOI 10.1016/j.infsof.2006.10.015
   Cooper A., 2014, FACE ESSENTIALS INTE
   Dujmovic J, 2013, ADV INTELL SYST, V228, P5, DOI 10.1007/978-3-642-39165-1_2
   Dujmovic J, 2011, INT J INTELL SYST, V26, P971, DOI 10.1002/int.20509
   Dujmovic JJ, 2007, IEEE T FUZZY SYST, V15, P1082, DOI 10.1109/TFUZZ.2007.902041
   Dujmovic JJ, 2008, IEEE INT CONF FUZZY, P1075, DOI 10.1109/FUZZY.2008.4630503
   Eisenbarth T, 2001, PROC IEEE INT CONF S, P602, DOI 10.1109/ICSM.2001.972777
   El-Ramly M, 2002, PROG COMPREHEN, P21, DOI 10.1109/WPC.2002.1021305
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Jones KS, 2007, INFORM PROCESS MANAG, V43, P1449, DOI 10.1016/j.ipm.2007.03.009
   Keeney R. L., 1976, DECISION MULTIPLE OB
   Koschke R, 2000, PROG COMPREHEN, P201, DOI 10.1109/WPC.2000.852494
   Li QS, 2007, FOURTH INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY, VOL 4, PROCEEDINGS, P431, DOI 10.1109/FSKD.2007.255
   Mahmoud A, 2013, CONF PROC INT SYMP C, P162, DOI 10.1109/ICPC.2013.6613844
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Montazer GA, 2009, EXPERT SYST APPL, V36, P10837, DOI 10.1016/j.eswa.2009.01.019
   Mousseau V, 2000, COMPUT OPER RES, V27, P757, DOI 10.1016/S0305-0548(99)00117-3
   Muller H. A., 1993, Journal of Software Maintenance: Research and Practice, V5, P181, DOI 10.1002/smr.4360050402
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Rayside D, 2000, PROG COMPREHEN, P191, DOI 10.1109/WPC.2000.852493
   Roy B., 1971, MATH PROGRAM, V1, P239, DOI DOI 10.1007/BF01584088
   Rugaber S., 1995, ENCY COMPUTER SCI TE, V35, P341
   Saaty T. L., 2008, INT J SERV SCI, V1, P83, DOI [10.1504/IJSSCI.2008.017590, DOI 10.1504/IJSSCI.2008.017590]
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Shatnawi R, 2015, J SOFTW-EVOL PROC, V27, P95, DOI 10.1002/smr.1702
   Shawky DM, 2016, J SOFTW-EVOL PROC, V28, P82, DOI 10.1002/smr.1766
   Shtern M, 2014, SOFTWARE PRACT EXPER, V44, P33, DOI 10.1002/spe.2147
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   Thung F., 2014, P 22 INT C PROGR COM, P110, DOI 10.1145/2597008.2597157
   von Mayrhauser A., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P39, DOI 10.1109/ICSE.1994.296764
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Wu JW, 2005, PROC IEEE INT CONF S, P525
   Zhang L, 2006, J SYST SOFTWARE, V79, P1588, DOI 10.1016/j.jss.2006.02.032
   Zhang L, 2010, J SOFTW MAINT EVOL-R, V22, P567, DOI 10.1002/smr.417
NR 72
TC 2
Z9 2
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2019
VL 31
IS 2
AR e2121
DI 10.1002/smr.2121
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL7GF
UT WOS:000458906200002
DA 2024-07-18
ER

PT J
AU Kulesz, D
   Käfer, V
   Wagner, S
AF Kulesz, Daniel
   Kaefer, Verena
   Wagner, Stefan
TI Spreadsheet guardian: An approach to protecting semantic correctness
   throughout the evolution of spreadsheets
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE spreadsheet; quality
ID ERRORS; METHODOLOGY; PROGRAMS; GROWTH; DEBT; SEE
AB Spreadsheets are powerful tools that play a business-critical role in many organizations. However, many bad decisions taken due to faulty spreadsheets show that these tools need serious quality assurance. Furthermore, while collaboration on spreadsheets for maintenance tasks is common, there has been almost no support for ensuring that the spreadsheets remain correct during this process. We have developed an approach named Spreadsheet Guardian, which separates the specification of spreadsheet test rules from their execution. By automatically executing user-defined test rules, our approach is able to detect semantic faults. It also protects all collaborating spreadsheet users from introducing faults during maintenance, even if only few end-users specify test rules. To evaluate Spreadsheet Guardian, we implemented a representative testing technique as an add-in for Microsoft Excel. We evaluated the testing technique in 2 empirical evaluations with 29 end-users and 42 computer science students. The results indicate that the technique is easy to learn and to apply. Furthermore, after finishing maintenance, participants with spreadsheets protected by the technique are more realistic about the correctness of their spreadsheets than participants who use only classic, noninteractive test rules on the basis of static analysis techniques. Hence, we believe that Spreadsheet Guardian can be of use for business-critical spreadsheets.
C1 [Kulesz, Daniel; Kaefer, Verena; Wagner, Stefan] Univ Stuttgart, Inst Software Technol, Software Engn Grp, Stuttgart, Germany.
C3 University of Stuttgart
RP Kulesz, D (corresponding author), Univ Stuttgart, Inst Software Technol, Software Engn Grp, Stuttgart, Germany.
EM daniel.kulesz@informatik.uni-stuttgart.de
RI Wagner, Stefan/A-5200-2018; Ebert, Verena/I-3800-2016
OI Wagner, Stefan/0000-0002-5256-8429; Ebert, Verena/0000-0002-7070-4519
CR Abreu R., 2012, 15 IB C SOFTW ENG CI, P1
   Abreu R, 2014, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSME.2014.33
   [Anonymous], 2013, P 2013 C CTR ADV STU
   [Anonymous], 1993, A Small Matter of Programming
   [Anonymous], 2010, EUSPRIG HORROR STORI
   [Anonymous], 2010, The Invisible Gorilla
   Ayalew Y., 2007, INT J COMPUT ICT RES, V1, P77
   Ayalew Y, 2001, THESIS
   Baker KR, 2006, SURVEY MBA SPREADSHE, V30, P2010
   Bishop B, 2007, P 3 ANN WORK IN PROG, P165
   Bricklin Dan., 1999, VisiCalc: Information from its creators
   Burnett M, 2002, IEEE T SOFTWARE ENG, V28, P576, DOI 10.1109/TSE.2002.1010060
   Cunha J, 2012, LECT NOTES COMPUT SC, V7336, P202, DOI 10.1007/978-3-642-31128-4_15
   Fruhauf K, 2006, SOFTWARE PRUFUNG ANL
   Goodell H, 1997, CHI 97 EXTENDED ABST, P132
   Grad B, 2007, IEEE ANN HIST COMPUT, V29, P20, DOI 10.1109/MAHC.2007.4338439
   Grossman TA, 2007, COMMUN ASSOC INF SYS, V20, P1009
   Hermans F., 2013, ANAL VISUALIZING SPR
   Hermans F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P7, DOI 10.1109/ICSE.2015.129
   Hermans F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P451, DOI 10.1145/1985793.1985855
   Herndon T, 2014, CAMB J ECON, V38, P257, DOI 10.1093/cje/bet075
   Hofer B, 2014, SOFTWARE ENG METHODS, P1
   Hofer B, 2013, LECT NOTES COMPUT SC, V7793, P68, DOI 10.1007/978-3-642-37057-1_6
   Jannach D, 2014, AUTOMAT SOFTW ENG, V23, P105
   Jannach D, 2014, J SYST SOFTWARE, V94, P129, DOI 10.1016/j.jss.2014.03.058
   Kafer V, 2017, ART SCI ENG PROGRAM, V1, P1
   Kafer V., 2017, ART SCI ENG PROGRAM, V1, P11
   Kankuzi B, 2014, S VIS LANG HUM CEN C, P209, DOI 10.1109/VLHCC.2014.6883059
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Kohlhase A, 2009, LECT NOTES COMPUT SC, V5625, P357, DOI 10.1007/978-3-642-02614-0_29
   Kulesz D, 2016, DATA SPREADSHEET GUA, DOI [10. 5281/zenodo. 188896, DOI 10.5281/ZENODO.188896;2016]
   Kulesz D, 2015, 2 WORKSH SOFTW ENG M, P28
   Kulesz D, 2012, P EUSPRIG 2012 C MAN, P35
   Kulesz D, 2014, 1 WORKSH SOFTW ENG M, P15
   Kulesz D, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P11, DOI 10.1109/VISSOFT.2014.12
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Liggesmeyer Peter., 2009, Software-Qualitat. Testen
   Maceli Monica G., 2017, End-User Development. 6th International Symposium, IS-EUD 2017. Proceedings: LNCS 10303, P49, DOI 10.1007/978-3-319-58735-6_4
   Marriott N., 2004, Accounting Education, V13, P55, DOI DOI 10.1080/0963928042000310797
   NARDI BA, 1991, INT J MAN MACH STUD, V34, P161, DOI 10.1016/0020-7373(91)90040-E
   O'Beirne P., 2005, SPREADSHEET CHECK CO
   Panko R., 2014, 1 WORKSH SOFTW ENG M, P43
   Panko R. R., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P4603, DOI 10.1109/HICSS.2012.244
   Panko R. R., 2007, Journal of Organizational and End User Computing, V19, P1, DOI 10.4018/joeuc.2007010101
   Panko R. R., 1998, Journal of End User Computing, V10, P15
   Panko R. R., 2014, P 1 WORKSH SOFTW ENG, P7
   Panko RR, 2006, COMMUN ASSOC INF SYS, V17, P647
   Panko RR, 1999, J MANAGE INFORM SYST, V16, P159, DOI 10.1080/07421222.1999.11518250
   Panko RR, 2003, P EUSPRIG 2003 C DUB
   Powell SG, 2008, DECIS SUPPORT SYST, V46, P128, DOI 10.1016/j.dss.2008.06.001
   Prechelt L., 2001, KONTROLLIERTE EXPT S
   Raffensperger J. F, 2008, ART SPREADSHEET
   Ragsdale CT, 2017, SPREADSHEET MODELING
   REDER LM, 1982, PSYCHOL REV, V89, P250, DOI 10.1037/0033-295X.89.3.250
   Reinhart CM, 2010, AM ECON REV, V100, P573, DOI 10.1257/aer.100.2.573
   Reithel BJ, 1996, J COMPUT INFORM SYST, V36, P54
   Rothermel G, 1998, PROC INT CONF SOFTW, P198, DOI 10.1109/ICSE.1998.671118
   Scaffidi C, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P207, DOI 10.1109/VLHCC.2005.34
   Schmitz T, 2016, S VIS LANG HUM CEN C, P157, DOI 10.1109/VLHCC.2016.7739679
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Tufte E. R., 2001, VISUAL DISPLAY QUANT, V2
   Weitze L, 2014, SPREADSHEET BASED DE
   Wilson A., 2003, P SIGCHI C HUM FACT, P305, DOI [DOI 10.1145/642611.642665, https://doi.org/10.1145/642611.642665]
   Zhang RQ, 2017, J SYST SOFTWARE, V126, P87, DOI 10.1016/j.jss.2016.03.061
NR 64
TC 1
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2018
VL 30
IS 9
AR e1934
DI 10.1002/smr.1934
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GT7CT
UT WOS:000444678900006
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Nurdiani, I
   Börstler, J
   Fricker, SA
AF Nurdiani, Indira
   Borstler, Jurgen
   Fricker, Samuel A.
TI Literature review of flexibility attributes: A flexibility framework for
   software developing organization
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Agile; flexibility; Lean; literature review; software development
ID MANUFACTURING FLEXIBILITY; INFORMATION-TECHNOLOGY; AGILE METHODS;
   MANAGEMENT; DEFINITION; SEARCH
AB Software developing organizations strive to achieve flexibility to maintain a competitive advantage. There is no common understanding of what characterize flexibility for a software organization beyond the scope of the software product. Without a common understanding, it is difficult to evaluate the degrees of flexibility of software development approaches. The aim of this literature review is to collect attributes that characterize flexibility. The collected attributes are consolidated into a flexibility framework with 3 main attributes: properties of change, flexibility perspectives, and flexibility enablers. The resulting flexibility framework is then used to evaluate Agile and Lean practices. The evaluation shows that Agile and Lean practices address many flexibility attributes. However, some attributes are not addressed, such as infrastructure flexibility and strategic flexibility. On the basis of our evaluation, the classifications of flexibility attributes that we present in this paper could be used to aid software organization flexibility evaluation.
C1 [Nurdiani, Indira; Borstler, Jurgen; Fricker, Samuel A.] Blekinge Tekn Hgsk, Software Engn Res Lab, Karlskrona, Sweden.
   [Fricker, Samuel A.] Fachhsch Nordwestschweiz, Ctr Requirements Engn I4Ds, CH-5210 Windisch, Switzerland.
C3 FHNW University of Applied Sciences & Arts Northwestern Switzerland
RP Nurdiani, I (corresponding author), Blekinge Tekn Hgsk, Software Engn Res Lab Sweden, Karlskrona, Sweden.
EM indira.nurdiani@bth.se
RI Börstler, Jürgen/IWE-4001-2023; Nurdiani, Indira/G-2954-2019
OI Börstler, Jürgen/0000-0003-0639-4234; Nurdiani,
   Indira/0000-0001-9355-6179
CR Abrahamsson P., 2002, TECHNICAL REPORT 478
   Agarwal A, 2006, EUR J OPER RES, V173, P211, DOI 10.1016/j.ejor.2004.12.005
   [Anonymous], EMPIRICAL SOFTW ENG
   [Anonymous], 2001, TECHNICAL REPORT
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], INFRASTRUCTURE CODE
   [Anonymous], P 22 INT C PROD RES
   [Anonymous], P 3 C OP RES SOC NZ
   [Anonymous], SOFTW ENG 2010 ACM I
   [Anonymous], 2015, GLOB J FLEX SYST MAN, DOI DOI 10.1007/S40171-015-0096-Y
   [Anonymous], FRAMEWORK PROCESS IM
   [Anonymous], IEE SOFTW
   [Anonymous], EVALUATING SOFTWARE
   [Anonymous], 2011, MODERN SOFTWARE ENG
   [Anonymous], P 3 INT C EXTR PROGR
   [Anonymous], 1977, TECHNICAL REPORT
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], REQUIREMENTS ENG SET
   [Anonymous], J SOFTW EVOL PROCESS
   [Anonymous], VAMOS
   [Anonymous], P 43 HAW INT C SYST
   [Anonymous], FLEXIBILITY ISSUES P
   [Anonymous], P 23 EUR C INF SYST
   [Anonymous], STRATEGIC MANAGE J
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Benamati S., 1998, Proceedings of the 1998 ACM SIGCPR Conference, P37, DOI 10.1145/279179.279185
   Bernardes ES, 2009, INT J OPER PROD MAN, V29, P30, DOI 10.1108/01443570910925352
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Byrd TA, 2000, J MANAGE INFORM SYST, V17, P167
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   CARLSSON B, 1989, INT J IND ORGAN, V7, P179, DOI 10.1016/0167-7187(89)90018-0
   Chang AY, 2012, INT J PROD RES, V50, P2133, DOI 10.1080/00207543.2011.565156
   Charmaz K., 2014, Introducing Qualitative Methods
   Charters S., 2007, GUIDELINES PERFORMIN
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Clements P, 2002, IEEE SOFTWARE, V19, P28, DOI 10.1109/MS.2002.1020283
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Correa HL, 1996, COMPUT INTEGR MANUF, V9, P57, DOI 10.1016/0951-5240(95)00038-0
   CUSUMANO MA, 1989, IEEE SOFTWARE, V6, P23, DOI 10.1109/MS.1989.1430446
   de Haan J, 2011, FUTURES, V43, P923, DOI 10.1016/j.futures.2011.06.002
   De Toni A, 1998, INT J PROD RES, V36, P1587, DOI 10.1080/002075498193183
   DeLeeuw ACJ, 1996, OMEGA-INT J MANAGE S, V24, P121, DOI 10.1016/0305-0483(95)00054-2
   Duncan N. B., 1995, Journal of Management Information Systems, V12, P37
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   ElMaraghy HA, 2005, INT J FLEX MANUF SYS, V17, P261, DOI 10.1007/s10696-006-9028-7
   Erickson J, 2005, J DATABASE MANAGE, V16, P88, DOI 10.4018/jdm.2005100105
   EVANS JS, 1991, J MANAGE STUD, V28, P69, DOI 10.1111/j.1467-6486.1991.tb00271.x
   Fichman RG, 2005, CALIF MANAGE REV, V47, P74, DOI 10.2307/41166296
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   Gerwin D., 1993, MANAGE SCI, V39, P395
   Golden W, 2000, OMEGA-INT J MANAGE S, V28, P373, DOI 10.1016/S0305-0483(99)00057-2
   Greenhalgh T, 2005, BRIT MED J, V331, P1064, DOI 10.1136/bmj.38636.593461.68
   HENDERSON JC, 1993, IBM SYST J, V32, P4
   HUBER GP, 1986, MANAGE SCI, V32, P572, DOI 10.1287/mnsc.32.5.572
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   IEEE, 1990, STANDARD IEEE STD 61
   ISO/IEC, 2010, Technical report
   Jain A, 2013, INT J PROD RES, V51, P5946, DOI 10.1080/00207543.2013.824627
   Jain V., 2013, Global Journal of Flexible Systems Management, V14, P125, DOI DOI 10.1007/S40171-013-0038-5
   Kara S, 2002, HUM FACTORS ERGONOM, V12, P75, DOI 10.1002/hfm.10004
   Kitchenham Barbara A., 2015, Chapman & Hall/CRC Innovations in Software Engineering and Software Development Series
   Knoll K., 1994, Proceedings of the 1994 ACM SIGCPR Conference, P1, DOI 10.1145/186281.186286
   Koste LL, 2000, OMEGA-INT J MANAGE S, V28, P693, DOI 10.1016/S0305-0483(00)00027-X
   Kurapati N, 2012, LECT NOTES BUS INF P, V111, P16
   Levy Y., 2006, Informing Science, V9, P181
   Li YZ, 2010, J SYST SOFTWARE, V83, P1726, DOI 10.1016/j.jss.2010.04.077
   Metzger A, 2007, PROC INT CONF SOFTW, P186, DOI 10.1109/ICSECOMPANION.2007.83
   Naab M., 2012, Proceedings of the 8th international ACM SIGSOFT conference on Quality of Software Architectures, P13
   Nelson KM, 1997, P ANN HICSS, P76, DOI 10.1109/HICSS.1997.661572
   Newman W. R., 1993, International Journal of Operations & Production Management, V13, P19, DOI 10.1108/01443579310023972
   Nikitina Natalja, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P140, DOI 10.1109/ICSSP.2012.6225959
   Nurcan S., 2008, P 41 ANN HAWAII INT
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Palanisamy R., 2012, Global Journal of Flexible Systems Management, V13, P57, DOI DOI 10.1007/S40171-012-0005-6
   Pernstål J, 2013, J SYST SOFTWARE, V86, P2797, DOI 10.1016/j.jss.2013.06.035
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Phillips F, 2000, TECHNOL FORECAST SOC, V64, P23, DOI 10.1016/S0040-1625(99)00077-3
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Port D, 2003, PROC IEEE INT CONF S, P389, DOI 10.1109/ICSM.2003.1235449
   Pusatli O. Tolga, 2010, Proceedings of the 2010 International Conference on Computational Science and Its Applications (ICCSA 2010), P250, DOI 10.1109/ICCSA.2010.60
   Regev G., 2007, Software Process Improvement and Practice, V12, P65, DOI 10.1002/spip.301
   Regev G., 2006, BUSINESS PROCESS MOD, P90
   Regev G, 2013, LECT NOTES BUS INF P, V142, P1
   Reifer DJ, 2003, IEEE SOFTWARE, V20, P12, DOI 10.1109/MS.2003.1207448
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Ryan ET, 2013, SYSTEMS ENG, V16, P99, DOI 10.1002/sys.21222
   Saladana J., 2012, The coding manual for qualitative researchers
   Saleh JH, 2009, J ENG DESIGN, V20, P307, DOI 10.1080/09544820701870813
   Sanchez R., 1997, INT STUDIES MANAGEME, V27, P71, DOI DOI 10.1080/00208825.1997.11656708
   Schonenberg H., 2008, CAISE FORUM, P81
   Sethi A. K., 1990, International Journal of Flexible Manufacturing Systems, V2, P289, DOI 10.1007/BF00186471
   Sharfman MP, 1997, J MANAGE STUD, V34, P191, DOI 10.1111/1467-6486.00048
   Robaty Shirzad Sara, 2013, J. theor. appl. electron. commer. res., V8, P49, DOI 10.4067/S0718-18762013000200005
   Shull F, 2009, IEEE SOFTWARE, V26, P6, DOI 10.1109/MS.2009.145
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Smith PG, 2008, RES TECHNOL MANAGE, V51, P34, DOI 10.1080/08956308.2008.11657512
   Snowdon R. A., 2007, Software Process Improvement and Practice, V12, P21, DOI 10.1002/spip.307
   Solinski A, 2016, SOFTWARE QUAL J, V24, P447, DOI 10.1007/s11219-014-9253-3
   Tapanainen T, 2008, PROCEEDINGS OF THE 2ND EUROPEAN CONFERENCE ON INFORMATION MANAGEMENT AND EVALUATION, P425
   Thomke SH, 1997, RES POLICY, V26, P105, DOI 10.1016/S0048-7333(96)00918-3
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   van der Aalst WMP, 2009, COMPUT SCI-RES DEV, V23, P99, DOI 10.1007/s00450-009-0057-9
   van der Aalst WMP, 2000, COMPUT SYST SCI ENG, V15, P267
   van Oosterhout M, 2006, EUR J INFORM SYST, V15, P132, DOI 10.1057/palgrave.ejis.3000601
   Vidgen R, 2009, INFORM SYST RES, V20, P355, DOI 10.1287/isre.1090.0237
   Virmani M, 2015, FIFTH INTERNATIONAL CONFERENCE ON THE INNOVATIVE COMPUTING TECHNOLOGY (INTECH 2015), P78, DOI 10.1109/INTECH.2015.7173368
   Vokurka RJ, 2000, J OPER MANAG, V18, P485, DOI 10.1016/S0272-6963(00)00031-0
   Wadhwa S, 2008, INT J ADV MANUF TECH, V39, P367, DOI 10.1007/s00170-006-0679-z
   Wang XF, 2012, J SYST SOFTWARE, V85, P1287, DOI 10.1016/j.jss.2012.01.061
   Weick KE, 1999, ANNU REV PSYCHOL, V50, P361, DOI 10.1146/annurev.psych.50.1.361
   Weyuker EJ, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P152, DOI 10.1109/METRIC.2002.1011334
   Williams L, 2010, ADV COMPUT, V80, P1, DOI 10.1016/S0065-2458(10)80001-4
   Yu KK, 2015, INT J PROD ECON, V169, P190, DOI 10.1016/j.ijpe.2015.07.035
NR 114
TC 5
Z9 5
U1 1
U2 30
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2018
VL 30
IS 9
AR e1937
DI 10.1002/smr.1937
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GT7CT
UT WOS:000444678900001
DA 2024-07-18
ER

PT J
AU Ward, M
   Zedan, H
AF Ward, Martin
   Zedan, Hussein
TI The formal semantics of program slicing for nonterminating computations
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE denotational semantics; nondeterminism; nontermination; program
   analysis; program slicing; wide spectrum language
ID DEPENDENCE; DERIVATION; ASSEMBLER
AB Since the original development of program slicing in 1979 there have been many attempts to define a suitable semantics, which will precisely define the meaning of a slice. Particular issues include handling termination and nontermination, slicing nonterminating programs, and slicing nondeterministic programs. In this paper we review and critique the main attempts to construct a semantics for slicing and present a new operational semantics, which correctly handles slicing for nonterminating and nondeterministic programs. We also present a modified denotational semantics, which we prove to be equivalent to the operational semantics. This provides programmers with 2 different methods to prove the correctness of a slice or a slicing algorithm and means that the program transformation theory and FermaT transformation system, developed last 25years of research, and which has proved so successful in analyzing terminating programs, can now be applied to nonterminating interactive programs.
C1 [Ward, Martin] De Montfort Univ, Software Engn, Leicester, Leics, England.
   [Zedan, Hussein] Appl Sci Univ, Res & Grad Studies, Al Eker, Bahrain.
C3 De Montfort University
RP Ward, M (corresponding author), De Montfort Univ, Software Engn, Leicester, Leics, England.
EM martin@gkc.org.uk
OI Ward, Martin/0000-0001-7127-3311
CR Barraclough RW, 2010, THEOR COMPUT SCI, V411, P1372, DOI 10.1016/j.tcs.2009.10.025
   Binkley D, 2004, ADV COMPUT, V62, P105, DOI 10.1016/S0065-2458(03)62003-6
   Binkley D., 1993, ACM Letters on Programming Languages and Systems, V2, P31, DOI 10.1145/176454.176473
   Binkley D., 1996, Advances in Computers, V43, P1
   Binkley D, 2006, SCI COMPUT PROGRAM, V62, P228, DOI 10.1016/j.scico.2006.04.007
   CARTWRIGHT R, 1989, SIGPLAN NOTICES, V24, P13, DOI 10.1145/74818.74820
   Danicic S, 2007, J LOGIC ALGEBR PROGR, V72, P123
   Danicic Sebastian, 1999, THESIS
   De Lucia A, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P142, DOI 10.1109/SCAM.2001.972675
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   DIJKSTRA EW, 1975, COMMUN ACM, V18, P453, DOI [10.1145/360933.360975, 10.1145/390016.808417]
   Ettinger R, 2007, THESIS
   Giacobazzi R., 2003, Higher-Order and Symbolic Computation, V16, P297, DOI 10.1023/A:1025872819613
   Godel Hofstadter D., 1979, ETERNAL GOLDEN BRAID
   Halder R, 2013, SCI COMPUT PROGRAM, V78, P1240, DOI 10.1016/j.scico.2012.05.007
   Harman M, 2003, J SYST SOFTWARE, V68, P45, DOI 10.1016/S0164-1212(02)00135-8
   Harman M., 2004, Automated Software Engineering, V11, P27, DOI 10.1023/B:AUSE.0000008667.37988.11
   Harman M, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P271, DOI 10.1109/WCRE.2001.957831
   Harman M, 1997, PROG COMPREHEN, P70, DOI 10.1109/WPC.1997.601266
   Hatcliff J., 2000, Higher-Order and Symbolic Computation, V13, P315, DOI 10.1023/A:1026599015809
   HORWITZ S, 1989, ACM T PROGR LANG SYS, V11, P345, DOI 10.1145/65979.65980
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Kamkar M., 1993, THESIS
   Knig D, 1936, THEORIE ENDLICHEN UN, P1
   Korel B, 2003, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2003.1235404
   Lucia AD, 2003, 7 EUR C SOFTW MAINT
   Mastroeni I, 2008, PEPM'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PARTIAL EVALUATION AND SEMANTICS-BASED PROGRAM MANIPULATION, P125, DOI 10.1145/1328408.1328428
   Nestra H, 2006, LECT NOTES COMPUT SC, V4019, P278
   Ranganath VP, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275502
   Ranganath VP, 2005, LECT NOTES COMPUT SC, V3444, P77
   Reps T, 1988, COMPUTER SCI TECHNIC, V777, P1
   Silva J, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187674
   TIP F, 1995, J PROGRAM LANG, V3, P121
   VENKATESH GA, 1991, SIGPLAN NOTICES, V26, P107, DOI 10.1145/113446.113455
   Ward M, 1994, 4 REENG FOR SEPT 19
   Ward M, 1989, THESIS
   Ward M. P., 1993, Proceedings of Working Conference on Reverse Engineering (Cat. No.93TH0534-8), P212, DOI 10.1109/WCRE.1993.287763
   Ward M, 2008, SOFTWARE PRACT EXPER, V38, P1273, DOI 10.1002/spe.869
   Ward M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216375
   Ward M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1803
   Ward M, 2014, FORM ASP COMPUT, V26, P993, DOI 10.1007/s00165-013-0287-2
   Ward M, 2009, IEEE INT WORK C SO, P23, DOI 10.1109/SCAM.2009.12
   Ward M, 2010, SCI COMPUT PROGRAM, V75, P134, DOI 10.1016/j.scico.2009.11.001
   Ward MP, 2005, Ninth European Conference on Software Maintenance and Reengineering, Proceedings, P178, DOI 10.1109/CSMR.2005.19
   Ward MP, 2004, SCI COMPUT PROGRAM, V52, P213, DOI 10.1016/j.scico.2004.03.007
   Ward MP, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P88, DOI 10.1109/SCAM.2003.1238035
   WARD MP, 1995, INT J SOFTW ENG KNOW, V5, P25, DOI 10.1142/S0218194095000034
   Ward MP, 2001, PROC IEEE INT CONF S, P659, DOI 10.1109/ICSM.2001.972783
   Ward MP, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P185, DOI 10.1109/SCAM.2001.972680
   Ward MP, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P11, DOI 10.1109/WCRE.2000.891448
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   WEISER M, 1984, COMMUN ACM, V25, P352
   Weiser Mark D., 1979, P 5 INT C SOFTW ENG, P439
   Younger E. J., 1993, Proceedings IEEE Second Workshop on Program Comprehension (Cat. No.93TH0551-2), P160, DOI 10.1109/WPC.1993.263895
   2001, CER MUG GIV ATT 1 SO
NR 55
TC 3
Z9 3
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2017
VL 29
IS 1
AR e1803
DI 10.1002/smr.1803
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EK4BL
UT WOS:000393872000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kelemen, ZD
   Tódor, B
   Hodosi, S
   Somfai, A
AF Kelemen, Zador Daniel
   Todor, Balazs
   Hodosi, Sandor
   Somfai, Akos
TI Refactoring technical support to reduce interrupts of developers
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT Conference on European System and Software Process Improvement and
   Innovation Initiative (EuroSPI2)
CY SEP 30-OCT 02, 2015
CL Ankara Univ, Ankara, TURKEY
HO Ankara Univ
DE chat log analysis; interruption; process improvement; productivity;
   software engineering; technical support
AB In this paper an analysis of a technical support data with the goal of identifying process improvement actions for reducing interrupts is presented. A technical support chat is established and used to provide internal developer support to other development teams, which use the software code developed by a core team. The paper shows how data analysis of a 6-month support time helped to identify gaps and action items for improving the technical support process to minimize interrupts from other developer teams. We show that developers are interrupted through the investigated technical support chat multiple times a day and the interruptions come during the peak working hours. We also show that these interruptions can be prevented with the introduction of multiple tools such as a dispatcher service policy, a dispatcher role, and an FAQ page among others. The paper also shows effects (advantages and drawbacks) of the technical support refactor actions taken on the basis of this analysis.
C1 [Kelemen, Zador Daniel; Todor, Balazs; Hodosi, Sandor; Somfai, Akos] NNG LLC, 1037 Budapest Szepvolgyi Ut 35, Budapest, Hungary.
RP Kelemen, ZD (corresponding author), NNG LLC, 1037 Budapest Szepvolgyi Ut 35, Budapest, Hungary.
EM kelemen.daniel@gmail.com
RI Kelemen, Zádor Dániel/H-1019-2012
CR Aalst W. M. P. V. D., 2016, PROCESS MINING DATA, P325
   Adamczyk Piotr D., 2004, P SIGCHI C HUMAN FAC, P271, DOI DOI 10.1145/985692.985727
   Addas S, 2015, INFORM SYST J, V25, P231, DOI 10.1111/isj.12064
   Borst J.P., 2015, Proceedings of the 33rd Annual ACM Conference on Human Factors in Computing Systems-CHI '15, P2971
   Chong J, 2006, P 2006 20 ANN C COMP, P29
   Hernández-López A, 2015, INT J INF TECHNOL SY, V8, P46, DOI 10.4018/IJITSA.2015010103
   Hernández-López A, 2013, INT J SOFTW ENG KNOW, V23, P387, DOI 10.1142/S0218194013500125
   Hundermark P., 2014, DO BETTER SCRUM, P80
   Jeuris S, 2016, COMPUT HUM BEHAV, V62, P404, DOI 10.1016/j.chb.2016.03.059
   Kelemen Z.D., 2013, COMPLEXITY ANAL SOFT, P14
   Kelemen Z.D., 2013, APPL TEXT MINING TEC, P14
   Kelemen ZD, 2015, 22 EUROSPI2 C, P713
   Kelemen ZD, 2015, FUNDAMENTAL ANAL DEV, P13
   Kelemen ZD, 2016, 50 METRICS CALENDAR
   Levy EC, 2016, TELEMAT INFORM, V33, P1014, DOI 10.1016/j.tele.2016.03.003
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   NirSoft, SKYP LOGS READ VIEW
   Parnin C., 2014, Supporting Interrupted Programming Tasks with Memory-Based Aids. PhD thesis
   Parnin C, 2011, SOFTWARE QUAL J, V19, P5, DOI 10.1007/s11219-010-9104-9
   Pries-Heje J., 2010, EUROPEAN SYSTEM SOFT
   Rule A., 2015, 37 ANN M COGN SCI SO
   Tanner Maureen, 2015, Electronic Journal of Information Systems Evaluation, V18, P3
   TSO, 2007, ITIL LIF PUBL SUIT 5
   van Solingen R, 1998, IEEE SOFTWARE, V15, P97, DOI 10.1109/52.714843
   Zelikovich D., 2011, REV INT COMP MANAGEM, V12, P575
   Züger M, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2981, DOI 10.1145/2702123.2702593
NR 27
TC 0
Z9 0
U1 0
U2 2
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2016
VL 28
IS 11
BP 960
EP 968
DI 10.1002/smr.1822
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA ED0WX
UT WOS:000388564700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Campos, EC
   de Souza, LBL
   Maia, MD
AF Campos, Eduardo C.
   de Souza, Lucas B. L.
   Maia, Marcelo de A.
TI Searching crowd knowledge to recommend solutions for API usage tasks
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Q&A services; crowd knowledge; recommendation systems
AB Stack Overflow (SO) is a question and answer service directed to issues related to software development. In SO, developers post questions related to a programming topic and other members of the site can provide answers to help them. The information available on this type of service is also known as 'crowd knowledge' and currently is one important trend in supporting activities related to software development.
   We present an approach that makes use of 'crowd knowledge' in SO to recommend information that can assist developer activities. This strategy recommends a ranked list of question-answer pairs from SO based on a query. The criteria for ranking are based on three main aspects: the textual similarity of the pairs with respect to the query related to the developer's problem, the quality of the pairs, and a filtering mechanism that considers only 'how-to' posts. We conducted an experiment considering programming problems on three different topics (Swing, Boost and LINQ) widely used by the software development community to evaluate the proposed recommendation strategy. The results have shown that for Lucene + Score + How-to approach, 77.14% of the assessed activities have at least one recommended pair proved to be useful concerning the target programming problem. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Campos, Eduardo C.; de Souza, Lucas B. L.; Maia, Marcelo de A.] Univ Fed Uberlandia, Fac Comp, BR-38400902 Uberlandia, MG, Brazil.
C3 Universidade Federal de Uberlandia
RP Campos, EC (corresponding author), Univ Fed Uberlandia, Fac Comp, BR-38400902 Uberlandia, MG, Brazil.
EM eduardocunha11@gmail.com
RI Maia, Marcelo/F-3090-2017
OI Maia, Marcelo/0000-0003-3578-1380
FU FAPEMIG [CEXAPQ-2086-11]; CNPQ [475519/2012-4]
FX This work was partially supported by FAPEMIG grant CEXAPQ-2086-11 and
   CNPQ grant 475519/2012-4.
CR [Anonymous], 1997, READINGS INFORM RETR
   [Anonymous], 1997, ICML
   Barzilay O., 2013, FACILITATING CROWD S, P297, DOI DOI 10.1007/978-1-4614-6596-6_15
   Bialecki A., 2012, SIGIR 2012 WORKSH OP, P1
   Bostanci B, 2013, ADV INTELL SYST, V201, P15, DOI 10.1007/978-81-322-1038-2_2
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   COHEN J, 1968, WEIGHTED KAPPA NOMIN, DOI DOI 10.1037/H0026256
   Cordeiro J., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P85, DOI 10.1109/RSSE.2012.6233418
   Cubranic D., 2004, Computer Supported Cooperative Work Conference Proceedings, P82, DOI 10.1145/1031607.1031622
   Darwin I.F., 2004, Java Cookbook, V2
   De Souza L. B. L., 2014, P IEEE INT C PROG CO, P72, DOI DOI 10.1145/2597008.2597146
   Dietterich T, 1995, ACM COMPUT SURV, V27, P326, DOI 10.1145/212094.212114
   Eckstein R., 1998, JAVA SWING
   Forman G., 2003, Journal of Machine Learning Research, V3, P1289, DOI 10.1162/153244303322753670
   Golder SA, 2006, J INF SCI, V32, P198, DOI 10.1177/0165551506062337
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Haykin S., 1998, NEURAL NETWORKS COMP
   Hilyard J, 2007, C 3 0 COOKBOOK
   Holmes R, 2009, P IEEE INT C SOFTW M
   Holmes R, 2006, IEEE T SOFTWARE ENG, V32, P952, DOI 10.1109/TSE.2006.117
   Karaa W.B.A., 2013, ADV COMPUTATIONAL SC, V225, P243
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lempitsky V, 2009, LECT NOTES COMPUT SC, V5528, P447, DOI 10.1007/978-3-642-01932-6_48
   Liddell D., 1976, J ROY STAT SOC D-STA, V25, P295
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McNemar Q, 1947, PSYCHOMETRIKA, V12, P153, DOI 10.1007/BF02295996
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Page L., 1999, 422 STANF INFOLAB ST
   Parnin C., CROWD DOCUMENTATION, V11
   Pohar M., 2004, METODOLOSKI ZVEZKI, V1, P143, DOI DOI 10.51936/AYRT6204
   Polukhin A., 2013, BOOST C APPL DEV COO
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Ponzanelli L, 2013, EUR CON SFTWR MTNCE, P57, DOI 10.1109/CSMR.2013.16
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Sawadsky Nicholas., 2011, Proceedings of the 1st Workshop on Developing Tools as Plug-ins, P48, DOI DOI 10.1145/1984708.1984722
   Sehgal L., 2012, Proceedings of the International Conference on Computer Engineering and Multimedia Technologies (ICCEMT), P43
   Sim SE, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063243
   Su DCC, 2002, TECHNICAL REPORT
   Subramanian S, 2013, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR.2013.6624012
   Takuya Watanabe, 2011, P 3 INT WORKSH SEARC, P17, DOI [DOI 10.1145/1985429.1985434, 10.1145/1985429.1985434]
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Umarji M, 2008, ARCHETYPAL INTERNET, P7
   Wang S, 2014, P INT C SOFTW MAINT
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Zagalsky A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P38, DOI 10.1109/RSSE.2012.6233407
NR 49
TC 22
Z9 23
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2016
VL 28
IS 10
SI SI
BP 863
EP 892
DI 10.1002/smr.1800
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EC7FT
UT WOS:000388302700003
DA 2024-07-18
ER

PT J
AU Raza, M
   Faria, JP
AF Raza, M.
   Faria, J. P.
TI A model for analyzing performance problems and root causes in the
   personal software process
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT International Conference on Software and Systems Process (ICSSP 14)
CY MAY 26-28, 2014
CL Nanjing, PEOPLES R CHINA
DE Personal Software Process; performance analysis; performance model
AB High-maturity software development processes, such as the Team Software Process and the accompanying Personal Software Process (PSP), can generate significant amounts of data that can be periodically analyzed to identify performance problems, determine their root causes, and devise improvement actions. However, there is a lack of tool support for automating that type of analysis, and hence diminish the manual effort and expert knowledge required. So, we propose in this paper a comprehensive performance model, addressing time estimation accuracy, quality, and productivity, to enable the automated (tool based) analysis of performance data produced by PSP developers, namely, identify and rank performance problems and their root causes. A PSP data set referring to more than 30000 projects was used to validate and calibrate the model. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Raza, M.] INESC TEC, Oporto, Portugal.
   Univ Porto, Fac Engn, Dept Informat Engn, Rua Campo Alegre 823, P-4100 Oporto, Portugal.
C3 INESC TEC; Universidade do Porto
RP Raza, M (corresponding author), INESC TEC, Oporto, Portugal.
EM uomian49@yahoo.com
RI Raza, Mushtaq/N-6763-2019; , Mushtaq/C-8529-2017; Faria,
   Joao/B-5496-2012
OI , Mushtaq/0000-0003-2890-8072; Faria, Joao/0000-0003-3825-3954
FU Fundacao para a Ciencia e a Tecnologia (Portuguese Foundation for
   Science and Technology) [UID/EEA/50014/2013, SFRH/BD/85174/2012];
   Fundação para a Ciência e a Tecnologia [SFRH/BD/85174/2012] Funding
   Source: FCT
FX The authors would like to thank the SEI for giving access to the PSP
   data for performing this study and the anonymous reviewers for their
   helpful comments and suggestions. The works of J. Faria and M. Raza are
   partly financed by the Fundacao para a Ciencia e a Tecnologia
   (Portuguese Foundation for Science and Technology) within project
   UID/EEA/50014/2013 and research grant SFRH/BD/85174/2012, respectively.
CR Alves T., 2012, THESIS U MINHO
   [Anonymous], LEADERSHIP TEAMWORK
   [Anonymous], 2010, IEEE INT C SOFTW MAI
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   [Anonymous], 2006, P PAC NW SOFTW QUAL
   Boehm B, 2011, FUTURE OF SOFTWARE ENGINEERING, P1, DOI 10.1007/978-3-642-15187-3_1
   Burton D, 2006, TSP S 2006 P
   Campos J., 2012, RISK MANAGEMENT FAIL
   CARD DN, 1993, IEEE SOFTWARE, V10, P98, DOI 10.1109/52.219639
   Card DN, 2005, ADV COMPUT, V65, P259, DOI 10.1016/S0065-2458(05)65006-1
   Duarte C, 2012, P 8 INT C QUAL INF C
   HAMBY DM, 1994, ENVIRON MONIT ASSESS, V32, P135, DOI 10.1007/BF00547132
   Humphrey W. S., 2009, SOFTWARE QUALITY PRO
   Humphrey WattsS., 2005, PSP (sm): a self-improvement process for software engineers
   Jones C., 2010, Software engineering best practices: Lessons from successful projects in the top companies
   Jones C., 2000, Software Assessments, Benchmarks, and Best Practices
   Kalinowski M, 2012, IEEE SOFTWARE, V29, P16, DOI 10.1109/MS.2012.72
   Kemerer CF, 2009, IEEE T SOFTWARE ENG, V35, P534, DOI 10.1109/TSE.2009.27
   Kwak YH, 2006, TECHNOVATION, V26, P708, DOI 10.1016/j.technovation.2004.10.003
   Nasir M. H. N. M., 2005, Malaysian Journal of Computer Science, V18, P11
   Navidi W., 2011, STAT ENG SCI
   Philip J, 2003, ICSE 2003
   Raza M, 2013, TSP S 2013, P35
   Raza M, 2014, P 2014 INT C SOFTW S, P10
   Rombach D, 2008, J SYST SOFTWARE, V81, P747, DOI 10.1016/j.jss.2007.06.004
   Saltelli A., 2008, SENSITIVITY ANAL
   Shen WH, 2011, INFORM SOFTWARE TECH, V53, P137, DOI 10.1016/j.infsof.2010.09.004
   Shin H, 2007, LECT NOTES COMPUT SC, V4470, P73
   Sudhakar GP, 2012, SERB J MANAG, V7, P65, DOI 10.5937/sjm1201065S
   Tamura S, 2009, CMUSEI2009TN033
   Wagner S, 2008, P 2 INT WORKSH SOFTW
   Zubrow D, 2009, SEPG N AM C
NR 32
TC 5
Z9 5
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2016
VL 28
IS 4
SI SI
BP 254
EP 271
DI 10.1002/smr.1759
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ0OY
UT WOS:000373905000004
OA Green Published
DA 2024-07-18
ER

PT J
AU Polancic, G
   Jost, G
AF Polancic, Gregor
   Jost, Gregor
TI The impact of the representatives of three types of process modeling
   tools on modeler's perceptions and performance
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software design; business process modeling; technology acceptance model;
   work performance
ID BUSINESS; FRAMEWORK; INDUSTRY; BPMN
AB The quality of process diagrams as well as modelers' performance depends on used modeling tools, which have evolved over past years, also because of changes in software design and architecture. In our research we quantitatively and qualitatively investigated modelers' perceptions and performance when using the representatives of three types of process modeling tools in regard to type of work. A within-subjects experiment was conducted, where we comparatively observed modelers' perceptions and modeling times when using different modeling tools. For testing the stated hypotheses, the results from 126 experimental participants were analyzed using a one-way variance analysis. We found that modelers perform their tasks significantly faster with a web tool in case of collaborative work. In addition, we found that participants preferred desktop tool for individual modeling mostly because of its ease of use, whereas in the case of collaborative modeling, participants favored web tool's collaborative functions. Both of them outperformed the representative generic diagraming tool in all given circumstances. The results could be used as guidelines for designing future modeling tools and for modelers who are searching for the most appropriate modeling tools. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Polancic, Gregor; Jost, Gregor] Univ Maribor, Inst Informat, Smetanova 17, Maribor 2000, Slovenia.
C3 University of Maribor
RP Polancic, G (corresponding author), Univ Maribor, Inst Informat, Smetanova 17, Maribor 2000, Slovenia.
EM gregor.polancic@um.si
CR [Anonymous], INTELLIGENT PRODUCTI
   Benlian A, 2011, DECIS SUPPORT SYST, V52, P232, DOI 10.1016/j.dss.2011.07.007
   BRADLEY P, 1995, COMPUT IND, V25, P309, DOI 10.1016/0166-3615(94)00044-Q
   Chang James., 2005, Business Process Management Systems: Strategy and Implementation
   CHINOSI M, 2012, COMPUTER STANDARDS I, V34, P1
   CHURCHILL GA, 1979, J MARKETING RES, V16, P64, DOI 10.2307/3150876
   Clason D.L., 1994, Journal of Agricultural Education, V35, P31
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   de Valck K, 2009, DECIS SUPPORT SYST, V47, P185, DOI 10.1016/j.dss.2009.02.008
   Decker G, 2007, LECT NOTES COMPUT SC, V4803, P24
   Effinger Philip, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P399, DOI 10.1109/CEC.2009.36
   ELLIS CA, 1991, COMMUN ACM, V34, P38
   Facilitate.com, 2009, FAC P 02 JUN
   Ferreira A, 2007, LECT NOTES COMPUT SC, V4402, P82
   Gallardo J, 2013, J VISUAL LANG COMPUT, V24, P10, DOI 10.1016/j.jvlc.2012.10.006
   Gamst G, 2008, ANAL VARIANCE DEISGN
   García-Magariño I, 2010, INFORM SOFTWARE TECH, V52, P422, DOI 10.1016/j.infsof.2009.10.008
   Hoegl M, 2004, RES POLICY, V33, P1153, DOI 10.1016/j.respol.2004.06.005
   International Organization for Standardization, 2001, 250012007 ISO
   Johansen Robert, 1988, GroupWare: Computer Support for Business Teams
   Kalpic B, 2002, COMPUT IND, V47, P299, DOI 10.1016/S0166-3615(01)00151-8
   Kannengiesser U, 2007, P INT WORKSH MAN BUS, P19
   Keller A, 2009, TECHNOL FORECAST SOC, V76, P1044, DOI 10.1016/j.techfore.2009.03.005
   Khaled L, 2009, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON ENVIRONMENTAL AND COMPUTER SCIENCE, P111, DOI 10.1109/ICECS.2009.38
   Ko R.K., 2009, CROSSROADS, V15, P4
   Kocbek M, 2015, COMPUT SCI INF SYST, V12, P509, DOI 10.2298/CSIS140610006K
   Laue R, 2011, J VISUAL LANG COMPUT, V22, P385, DOI 10.1016/j.jvlc.2011.04.003
   Mamcenko J., 2004, INTRO LOTUS NOTES CO
   Melao N, 2000, INFORM SYST J, V10, P105, DOI 10.1046/j.1365-2575.2000.00075.x
   Muehlen M.zur., 2008, P 41 ANN HAWAII INT, P372, DOI DOI 10.1109/HICSS.2008.388
   Neuman W.L., 2005, SOCIAL RES METHODS, V6th
   Nie P., 2007, SPECIAL COURSE INFOR, P1
   Oba M, P 33 ANN HAW INT C S, P1
   OMG, 2011, BUS PROC MOD NOT VER
   Patel H, 2012, APPL ERGON, V43, P1, DOI 10.1016/j.apergo.2011.04.009
   Ragonetti G., 2011, WHAT IS YOUR FAVOURI
   Recker J.C., 2008, BPTRENDS, V5, P1
   Recker J, 2012, INFORM SYST, V37, P213, DOI 10.1016/j.is.2011.10.007
   Recker J, 2012, INFORM SYST, V37, P200, DOI 10.1016/j.is.2011.10.002
   SCHMIDT K, 1991, PROCEEDINGS OF THE SECOND EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK : ECSCW 91, P1
   Schmietendorf A, 2008, LECT NOTES COMPUT SC, V5338, P141
   Schuman S., 2006, Creating a culture of collaboration
   Serce FC, 2011, COMPUT HUM BEHAV, V27, P490, DOI 10.1016/j.chb.2010.09.017
   Sharp J.H., 2007, INFORM SYSTEMS ED J, V5, P1
   Silver B., 2009, BPMN method and style
   Terry M, 2005, KNOWL-BASED SYST, V18, P415, DOI 10.1016/j.knosys.2005.07.004
   Wateridge J., 1999, International Journal of Project Management, V17, P237, DOI 10.1016/S0263-7863(98)00036-2
   WINTER JCF, 2010, PRACT ASSESS RES EVA, V15, P16
   Wu KW, 2011, INT J INFORM MANAGE, V31, P572, DOI 10.1016/j.ijinfomgt.2011.03.004
   Yan ZQ, 2010, LECT NOTES BUS INF, V67, P121
NR 50
TC 3
Z9 3
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2016
VL 28
IS 1
BP 27
EP 56
DI 10.1002/smr.1764
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB7LL
UT WOS:000368696600002
DA 2024-07-18
ER

PT J
AU Choi, SJ
   Kim, DK
   Park, S
AF Choi, Su-Jin
   Kim, Dae-Kyoo
   Park, Sooyong
TI Identifying correlations of findings for building process improvement
   packages using graph clustering
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software process improvement; process improvement planning; process
   correlation analysis; decision support; overlapping clustering
ID SOFTWARE PROCESS IMPROVEMENT; LEVEL
AB Software process improvement (SPI) begins with process assessment based on a process reference model such as CMMI. Process improvement action items in SPI are determined according to the identified strengths and weaknesses of the current practice. Therefore, given that a list of assessment findings has been identified, it is important to analyze correlations of findings and identify relevant findings for building improvement items. However, correlation analysis requires expertise and considerable efforts, which makes it difficult for practitioners to perform it in process improvement projects. In this work, we present a CMMI-based method for identifying correlations of findings and building improvement packages using graph clustering techniques. We evaluate the method using industrial data. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Choi, Su-Jin; Park, Sooyong] Sogang Univ, Seoul 121742, South Korea.
   [Kim, Dae-Kyoo] Oakland Univ, Rochester, MI 48309 USA.
C3 Sogang University; Oakland University
RP Choi, SJ (corresponding author), Sogang Univ, Dept Comp Sci, Seoul 121742, South Korea.
EM sujinchoi@sogang.ac.kr
RI Kim, Daekyoo/HGE-1133-2022
OI Kim, Daekyoo/0000-0002-6123-2900
FU Industrial Convergence Foundation Technology Development Program of
   MSIP/KEIT [10044457]
FX This work was supported by the Industrial Convergence Foundation
   Technology Development Program of MSIP/KEIT [10044457, Development of
   Autonomous Intelligent Collaboration Framework for Knowledge Bases and
   Smart Devices].
CR [Anonymous], 2010, CMMI for Development
   [Anonymous], 1996, IDEAL USERS GUIDE SO
   Arcilla M, 2008, COMM COM INF SC, V16, P106
   Arraj V., ITIL THE BASICS
   Aslam J., 1998, Proceedings of the 1998 ACM CIKM International Conference on Information and Knowledge Management, P208, DOI 10.1145/288627.288659
   Calvo-Manzano J, 2008, ELECT ROBOT AUTO MEC, P212, DOI 10.1109/CERMA.2008.55
   Chen X, 2008, COMM COM INF SC, V16, P94
   Choi S, 2014, REC SYST SOFTW ENG R
   Choi SJ, 2014, SCI WORLD J, DOI 10.1155/2014/104072
   Clarke P, 2013, J SOFTW-EVOL PROC, V25, P981, DOI 10.1002/smr.1580
   [CMMI for Acquisition CMMI Product Team], 2010, CMUSEI2010TR032
   Gorschek T, 2004, SOFTWARE PRACT EXPER, V34, P1311, DOI 10.1002/spe.615
   HERBSLEB J, 1994, CMUSEI94TR013
   HUMPHREY WS, 1992, CMUSEI92TR007
   Kitson D, 1989, CMUSEI89TR003
   Monteiro P, 2010, LECT NOTES COMPUT SC, V6156, P263, DOI 10.1007/978-3-642-13792-1_21
   Pérez-Suárez A, 2013, NEUROCOMPUTING, V121, P234, DOI 10.1016/j.neucom.2013.04.025
   Schaeffer SE, 2007, COMPUT SCI REV, V1, P27, DOI 10.1016/j.cosrev.2007.05.001
   Staples M, 2008, INFORM SOFTWARE TECH, V50, P605, DOI 10.1016/j.infsof.2007.07.003
   Sujin Choi, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P135, DOI 10.1109/ICSSP.2012.6225957
   Swinarski M, 2012, COMMUN ACM, V55, P129, DOI 10.1145/2209249.2209276
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Villalón JACM, 2002, SOFTWARE QUAL J, V10, P261, DOI 10.1023/A:1021638523413
NR 23
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2015
VL 27
IS 8
SI SI
BP 514
EP 527
DI 10.1002/smr.1723
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CP8UU
UT WOS:000360170900002
DA 2024-07-18
ER

PT J
AU De Man, J
AF De Man, Jozef
TI Experience with teaching and applying process appraisals at a university
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE CMMI; SCAMPI; software process improvement; appraisals
AB Software development mainly happens in small and very small enterprises. Establishing process improvement initiatives in such organizations is challenging because prevailing software improvement frameworks are perceived to be expensive and oriented towards larger companies. Much research has been done in adapting the standard frameworks to make them more suitable for small organizations. Lightweight techniques have been developed to reduce the cost of appraisals. In this paper, we report experience with teaching and applying a lightweight appraisal approach in a university context. Focus has been on educational aspects, but we believe that the approach can also be deployed in small and very small enterprises. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 Univ Ghent, Alcatel Lucent, Belgium.
C3 Ghent University; Alcatel-Lucent
RP De Man, J (corresponding author), Univ Ghent, Alcatel Lucent, Belgium.
EM jozef.de_man@alcatel-lucent.com
CR [Anonymous], 2008, CMUSEI2008TN003
   Cater-Steel A, 2004, 15 AUSTR SOFTW ENG C
   De Man J., 2012, IMPROVING SYSTEMS SO, P31
   Ebert C, 2008, INFORM SOFTWARE TECH, V50, P579, DOI 10.1016/j.infsof.2007.06.007
   Fayad ME, 2000, COMMUN ACM, V43, P115, DOI 10.1145/330534.330555
   McCaffery Fergal, 2009, Software Process: Improvement and Practice, V14, P271, DOI 10.1002/spip.430
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   SCAMPI Upgrade Team, 2011, CMUSEI2011HB001 SCAM
NR 8
TC 2
Z9 3
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2015
VL 27
IS 8
SI SI
BP 539
EP 544
DI 10.1002/smr.1730
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CP8UU
UT WOS:000360170900004
DA 2024-07-18
ER

PT J
AU McBride, T
   Varkoi, T
AF McBride, Tom
   Varkoi, Timo
TI A method for aggregating ordinal process assessment measures
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE process assessment; ordinal measures; aggregation; probability
   distribution
ID RISK ANALYSIS
AB Process capability and maturity models invariably use an ordinal scale of capability or maturity. Process assessment methods must include ways to aggregate the base assessment measures through to the capability level. As process reference models and assessment models have become more detailed, process assessments have started to assess the processes at lower levels of process attributes. Also, process assessments can assess different divisions of an organization then try to combine the results to form some conclusion about the overall organizational capability. Both circumstances have exposed the problems of aggregating ordinal measures. We propose that these problems can be overcome by converting ordinal base measures to probability distributions. Doing so allows mathematical aggregation to be used at all levels of the measurement model. Although this overcomes a problem, we caution that it also provides an illusion of precision and accuracy where none is justifiable, leading to a tendency to overlook the original purpose of process assessment, which is to identify potential process improvements. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [McBride, Tom] Univ Technol Sydney, Sydney, NSW 2007, Australia.
   [Varkoi, Timo] Finnish Software Measurement Assoc, Sydney, NSW, Australia.
C3 University of Technology Sydney
RP McBride, T (corresponding author), Univ Technol Sydney, Sydney, NSW 2007, Australia.
EM tom.mcbride@uts.edu.au
CR [Anonymous], 2004, 155043 ISOIEC
   [Anonymous], 2008, 15288 ISOIEC
   [Anonymous], 2008, 12207 ISOIEC
   [Anonymous], 33001 ISOIEC
   [Anonymous], 155045 ISOIEC
   [Anonymous], CMUSEI87TR11
   Clemen RT, 1999, RISK ANAL, V19, P187, DOI 10.1023/A:1006917509560
   Diamantopoulos A, 2006, BRIT J MANAGE, V17, P263, DOI 10.1111/j.1467-8551.2006.00500.x
   Jung HW, 2013, INFORM SOFTWARE TECH, V55, P1450, DOI 10.1016/j.infsof.2013.02.004
   Jung HW, 2012, J SOFTW-EVOL PROC, V24, P401, DOI 10.1002/smr.545
   King WR, 1997, DECISION SCI, V28, P279, DOI 10.1111/j.1540-5915.1997.tb01312.x
   OTWAY H, 1992, RISK ANAL, V12, P83, DOI 10.1111/j.1539-6924.1992.tb01310.x
   PAULK MC, 1991, CMUSEI91TR24
NR 13
TC 2
Z9 2
U1 0
U2 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2014
VL 26
IS 12
BP 1267
EP 1279
DI 10.1002/smr.1676
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX0NS
UT WOS:000346649500010
DA 2024-07-18
ER

PT J
AU Petersen, K
   Roos, P
   Nyström, S
   Runeson, P
AF Petersen, Kai
   Roos, Peter
   Nystrom, Staffan
   Runeson, Per
TI Early identification of bottlenecks in very large scale system of
   systems software development
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE system of systems; bottleneck identification; software process
AB System of systems are of high complexity, and for each system, many different requirements are implemented in parallel. Systems are developed with some degree of managerial independence but later on have to work together. In this situation, many requirements are written, implemented, and tested in parallel for different systems that are to be integrated. This makes identifying bottlenecks challenging, and visualizations often used on project level (such as Kanban boards or burndown charts) have to be extended/complemented to cope with the increased complexity. In response to these challenges, the contributions of this study are to propose the following: (i) a visualization for early identification and proactive removal of bottlenecks; (ii) a visualization to check on the success of bottleneck resolution; and (iii) to provide an industry evaluation of the visualizations in a case study of a system of systems developed at Ericsson AB in Sweden. The feedback by the practitioners showed that the visualizations were perceived as useful in improving throughput and lead time. The quantitative analysis showed that the visualizations were able in identifying bottlenecks and showing improvements or the lack thereof. On the basis of the qualitative and quantitative data collected, we conclude that the visualizations are useful in bottleneck identification and resolution. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Petersen, Kai] Blekinge Inst Technol, Karlskrona, Sweden.
   [Roos, Peter; Nystrom, Staffan] FindOut, Kista, Sweden.
   [Runeson, Per] Lund Univ, Dept Comp Sci, S-22100 Lund, Sweden.
C3 Blekinge Institute Technology; Lund University
RP Petersen, K (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM kai.petersen@bth.se
RI Runeson, Per/H-5113-2019
OI Runeson, Per/0000-0003-2795-4851
FU Ericsson AB; ELLIIT, Strategic Area for ICT research - Swedish
   Government
FX We would like to thank all the participants in the study who
   participated in the research. Furthermore, we thank the anonymous
   reviewers for valuable comments that helped in improving the paper. This
   work has been supported by Ericsson AB and ELLIIT, the Strategic Area
   for ICT research, funded by the Swedish Government.
CR ALSARRAJ ZM, 1990, J CONSTR ENG M ASCE, V116, P689, DOI 10.1061/(ASCE)0733-9364(1990)116:4(689)
   Andersons DJ., 2003, AGILE MANAGEMENT SOF
   Arditi D, 2002, J CONSTR ENG M ASCE, V128, P545, DOI 10.1061/(ASCE)0733-9364(2002)128:6(545)
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Colombi J., 2008, CROSSTALK The Journal of Defense Software Engineering, V21, P10
   Erdogmus H, 2010, IEEE SOFTWARE, V27, P2, DOI 10.1109/MS.2010.130
   Frederiksen HD, 2005, IEEE T ENG MANAGE, V52, P350, DOI 10.1109/TEM.2005.850737
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Höst M, 2001, J SYST SOFTWARE, V59, P323, DOI 10.1016/S0164-1212(01)00072-3
   Kaplans RS, 2008, BALANCED SCORECARD M
   Ladass C, 2008, SCRUMBAN OTHER ESSAY
   Lane JA, 2007, SYST ENG, V10, P297, DOI 10.1002/sys.20078
   Lehtinen TOA, 2011, INFORM SOFTWARE TECH, V53, P1045, DOI 10.1016/j.infsof.2011.05.005
   Lewis G., 2008, P 2 ANN IEEE SYST C, P1
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Mäntylä MV, 2012, INT SYMP EMP SOFTWAR, P311, DOI 10.1145/2372251.2372307
   McManuss HL, 2005, TECHNICAL REPORT
   Miranda E, 2010, J SYST SOFTWARE, V83, P1205, DOI 10.1016/j.jss.2010.01.043
   Mujtaba Shahid, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P139, DOI 10.1109/ASWEC.2010.37
   Niazi M, 2012, J SOFTW-EVOL PROC, V24, P877, DOI 10.1002/smr.543
   Pattons M.Q., 2002, Qualitative research evaluation methods, V3rd
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Petersen K, 2010, LECT NOTES COMPUT SC, V6195, P345, DOI 10.1007/978-3-642-14347-2_30
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Petersen K, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P139
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Priess KH, 2011, SCRUM PROJECT MANAGE
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Runesons P, 2012, CASE STUDY RES SOFTW
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Wohlins C, 2012, EXPT SOFTWARE ENG
NR 32
TC 13
Z9 14
U1 0
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2014
VL 26
IS 12
BP 1150
EP 1171
DI 10.1002/smr.1653
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX0NS
UT WOS:000346649500005
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Alomari, HW
   Collard, ML
   Maletic, JI
   Alhindawi, N
   Meqdadi, O
AF Alomari, Hakam W.
   Collard, Michael L.
   Maletic, Jonathan I.
   Alhindawi, Nouh
   Meqdadi, Omar
TI srcSlice: very efficient and scalable forward static slicing
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE program slicing; software maintenance; impact analysis; forward
   decomposition slice
ID UNION SLICES; ALGORITHMS; PROGRAMS; GRAPH; FLOW
AB A highly efficient lightweight forward static slicing approach is presented and evaluated. The approach does not compute the program/system dependence graph but instead dependence and control information is computed as needed while computing the slice on a variable. The result is a list of line numbers, dependent variables, aliases, and function calls that are part of the slice for all variables (both local and global) for the entire system. The method is implemented as a tool, called srcSlice, on top of srcML, an XML representation of source code. The approach is highly scalable and can generate the slices for all variables of the Linux kernel in approximately 20min on a typical desktop. Benchmark results are compared with the CodeSurfer slicing tool from GrammaTech Inc., and the approach compares well with regard to accuracy of slices. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Alomari, Hakam W.] Jerash Univ, Fac Informat Technol, Jerash, Jordan.
   [Collard, Michael L.] Univ Akron, Dept Comp Sci, Akron, OH 44325 USA.
   [Maletic, Jonathan I.] Kent State Univ, Dept Comp Sci, Kent, OH 44242 USA.
   [Alhindawi, Nouh] Jadara Univ, Fac Sci & Informat Technol, Irbid, Jordan.
   [Meqdadi, Omar] Univ Wisconsin Platteville, Dept Comp Sci, Platteville, WI USA.
C3 University System of Ohio; University of Akron; University System of
   Ohio; Kent State University; Kent State University Kent; Kent State
   University Salem; University of Wisconsin System; University of
   Wisconsin Platteville
RP Maletic, JI (corresponding author), Kent State Univ, Dept Comp Sci, Kent, OH 44242 USA.
EM jmaletic@kent.edu
RI Meqdadi, Omar/AAC-2702-2019
OI Alhindawi, Nouh/0000-0003-2735-2631; Meqdadi, Omar/0000-0001-9504-4230;
   Alomari, Hakam/0000-0002-8554-3236
FU US National Science Foundation [CNS 13-05292/05217]; Division Of
   Computer and Network Systems; Direct For Computer & Info Scie & Enginr
   [1305217] Funding Source: National Science Foundation; Division Of
   Computer and Network Systems; Direct For Computer & Info Scie & Enginr
   [1305292] Funding Source: National Science Foundation
FX We would like to thank the anonymous reviewers of this manuscript (and
   earlier versions submitted to WCRE) for their very helpful comments. We
   also thank Keith Gallagher for his very insightful comments on an early
   version of this work. This work was supported in part by a grant from
   the US National Science Foundation CNS 13-05292/05217.
CR Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   AGRAWAL H, 1994, SIGPLAN NOTICES, V29, P302, DOI 10.1145/773473.178456
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Agrawal H., 1991, P ACM 4 S TESTING AN, P60
   Alomari H. W., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P425, DOI 10.1109/WCRE.2012.52
   Androutsopoulos K, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501667
   [Anonymous], 2001, software focus
   Atkinson D. C., 1998, Software Engineering Notes, V23, P46, DOI 10.1145/291252.288217
   Ball T., 1993, Automated and Algorithmic Debugging. First International Workshop, AADEBUG '93 Proceedings, P206, DOI 10.1007/BFb0019410
   Bents L, 2000, CS20000643 U CAL SAN
   BERGERETTI JF, 1985, ACM T PROGR LANG SYS, V7, P37, DOI 10.1145/2363.2366
   Beszédes A, 2002, PROC IEEE INT CONF S, P12, DOI 10.1109/ICSM.2002.1167743
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Binkley D, 2005, FIFTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P15, DOI 10.1109/SCAM.2005.28
   Binkley D, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P43
   Binkley D, 2004, ADV COMPUT, V62, P105, DOI 10.1016/S0065-2458(03)62003-6
   Binkley D, 2003, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2003.1235405
   Binkley D, 1998, INFORM SOFTWARE TECH, V40, P583, DOI 10.1016/S0950-5849(98)00085-8
   Binkley D., 1993, P 3 SOFTWARE ENG RES, P261
   Binkley D, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1217295.1217297
   Binkley D, 2006, WORK CONF REVERSE EN, P103
   Binkley D, 2010, J SYST SOFTWARE, V83, P96, DOI 10.1016/j.jss.2009.03.038
   Binkleys D, 1996, ADV COMPUT, V62, P105
   Canfora G, 1998, INFORM SOFTWARE TECH, V40, P595, DOI 10.1016/S0950-5849(98)00086-X
   Chen T. Y., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P378, DOI 10.1109/ICSM.1993.366925
   Collard M.L., 2010, IEEE International Conference on Software Maintenance, IEEE Computer Society, P1
   Collard ML, 2011, IEEE INT WORK C SO, P173, DOI 10.1109/SCAM.2011.19
   CORDY JR, 1990, IEEE T SOFTWARE ENG, V16, P294, DOI 10.1109/32.48937
   Danicic S, 2005, COMPUT J, V48, P737, DOI 10.1093/comjnl/bxh121
   Danicic S, 2004, PROG COMPREHEN, P89, DOI 10.1109/WPC.2004.1311051
   Danicic S, 1995, INFORM PROCESS LETT, V56, P307, DOI 10.1016/0020-0190(95)00170-0
   De Lucia A, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P142, DOI 10.1109/SCAM.2001.972675
   DeLucia A, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P9, DOI 10.1109/WPC.1996.501116
   Dragan N, 2006, PROC IEEE INT CONF S, P24
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fox C, 2001, PROG COMPREHEN, P89, DOI 10.1109/WPC.2001.921717
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Gallagher KB, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P36
   Gallagher K, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P58, DOI 10.1109/FOSM.2008.4659249
   Gallaghers KB, 1990, THESIS U MARYLAND MA
   GOPAL R, 1991, PROCEEDINGS - CONFERENCE ON SOFTWARE MAINTENANCE 1991, P191, DOI 10.1109/ICSM.1991.160329
   Gupta R., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P299, DOI 10.1109/ICSM.1992.242531
   HALL RJ, 1995, J AUTOMATED SOFTWARE, V2, P33
   Harman M, 2003, J SYST SOFTWARE, V68, P45, DOI 10.1016/S0164-1212(02)00135-8
   Harman M, 1998, J SOFTW MAINT-RES PR, V10, P415, DOI 10.1002/(SICI)1096-908X(199811/12)10:6<415::AID-SMR180>3.0.CO;2-Z
   Harman M., 1995, Software Testing, Verification and Reliability, V5, P143, DOI 10.1002/stvr.4370050303
   Harman M, 2001, PROC IEEE INT CONF S, P138, DOI 10.1109/ICSM.2001.972724
   Harman M, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P105, DOI 10.1109/SCAM.2002.1134110
   Harman M, 1997, PROG COMPREHEN, P70, DOI 10.1109/WPC.1997.601266
   Harman M, 1998, INFORM SOFTWARE TECH, V40, P577, DOI 10.1016/S0950-5849(98)00084-6
   Harman M, 2006, INFORM SOFTWARE TECH, V48, P549, DOI 10.1016/j.infsof.2005.06.001
   Harmon M.E., 1996, P INT C NEURAL NETWO, P1
   Harrold M. J., 1998, Software Engineering Notes, V23, P11, DOI 10.1145/271775.271780
   Hoffners T., 1995, TECHNICAL REPORT
   HORWITZ S, 1988, SIGPLAN NOTICES, V23, P35
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Horwitz S., 1992, International Conference on Software Engineering, P392, DOI 10.1145/143062.143156
   Jacksons D, 1994, TECHNICAL REPORT
   JIANG JY, 1991, PROCEEDINGS - CONFERENCE ON SOFTWARE MAINTENANCE 1991, P182, DOI 10.1109/ICSM.1991.160328
   KAMKAR M, 1995, J SYST SOFTWARE, V31, P197, DOI 10.1016/0164-1212(94)00099-9
   Kamkars M, 1993, INTERPROCEDURAL DYNA
   Komondoor R., 2000, Conference Record of POPL'00: 27th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages. Papers Presented at the Symposium, P155, DOI 10.1145/325694.325713
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel B., 1994, SIGSOFT Software Engineering Notes, P66
   Korel B, 1997, IEEE T SOFTWARE ENG, V23, P17, DOI 10.1109/32.581327
   Kuck R. H., 1981, Proceedings of the 8th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, P207
   Kumar S, 2002, LECT NOTES COMPUT SC, V2306, P96
   Lakhotia A, 1998, INFORM SOFTWARE TECH, V40, P677, DOI 10.1016/S0950-5849(98)00091-3
   Lakhotias A, 1992, TECHNICAL REPORT
   Lanubile F, 1997, IEEE T SOFTWARE ENG, V23, P246, DOI 10.1109/32.588543
   Liang DL, 1998, PROC IEEE INT CONF S, P358, DOI 10.1109/ICSM.1998.738527
   Lius L, 1993, TECHNICAL REPORT
   Lyle J. R., 1987, Second International Conference on Computers and Applications (Cat. No.87CH2433-1), P877
   Mock M, 2005, IEEE T SOFTWARE ENG, V31, P657, DOI 10.1109/TSE.2005.94
   Mund GB, 2006, J SYST SOFTWARE, V79, P791, DOI 10.1016/j.jss.2005.07.024
   Murphy G. C., 1998, ACM Transactions on Software Engineering and Methodology, V7, P158, DOI 10.1145/279310.279314
   Ohata F, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P273, DOI 10.1109/APSEC.2001.991488
   Orso A, 2001, PROC IEEE INT CONF S, P158, DOI 10.1109/ICSM.2001.972726
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Otts LM, 1993, P IEEE CS INT METR S, P78
   Pans K, 2006, 6 IEEE INT WORKSH SO
   Reps T., 1994, SIGSOFT Software Engineering Notes, V19, P11, DOI 10.1145/195274.195287
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Shapiro M., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P1, DOI 10.1145/263699.263703
   Silva J, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187674
   Simpson Dan., 1993, SIGPLAN Fortran Forum, V12, P26
   Steensgaard B., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P32, DOI 10.1145/237721.237727
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Tsais W-T, 2000, P COMPSAC 97 AUG 11, P287
   VENKATESH GA, 1991, SIGPLAN NOTICES, V26, P107, DOI 10.1145/113446.113455
   Ward M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216375
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   WEISER M, 1983, INFORM PROCESS LETT, V17, P129, DOI 10.1016/0020-0190(83)90052-2
   Weisers M, 1979, THESIS U MICHIGAN AN
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
   Zhang XY, 2007, EMPIR SOFTW ENG, V12, P143, DOI 10.1007/s10664-006-9007-3
NR 97
TC 21
Z9 25
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2014
VL 26
IS 11
SI SI
BP 931
EP 961
DI 10.1002/smr.1651
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU4PZ
UT WOS:000345595400002
OA Green Published
DA 2024-07-18
ER

PT J
AU Colomo-Palacios, R
   Messnarz, R
   Siakas, K
   Palosi, D
   Coakley, D
AF Colomo-Palacios, Ricardo
   Messnarz, Richard
   Siakas, Kerstin
   Palosi, Daniel
   Coakley, Darragh
TI Using social media as a tool for business improvement and certification
   of knowledge workers
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE social networks; software improvement; knowledge clusters; professional
   certification
ID SOFTWARE-DEVELOPMENT; MANAGEMENT; FUTURE; CHALLENGES; INNOVATION;
   NETWORKING; SYSTEMS; WEB
AB Business improvement is a hot topic in all business areas. In the last years, the unstoppable emergence of the use of social media by organizations and individuals alike has opened this tool for knowledge networking purposes. In this paper, the authors shed some light on how the traditional knowledge management approach has changed to a networked approach of knowledge sharing. Authors also explain how social media is used as a business tool, in particular in Information Technology industry environments. ECQA Certified Social Media Networker Skills (SIMS) is a new qualification that is available from 2013 and is meant to train and certify experts in the use of social media as a business improvement enabler and as a means for knowledge networking in organizational settings. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Colomo-Palacios, Ricardo] Ostfold Univ Coll, Fac Comp Sci, Halden, Norway.
   [Messnarz, Richard] ISCN GesmbH LTD, Dublin, Ireland.
   [Siakas, Kerstin] ATEI Thessaloniki, Thessaloniki, Greece.
   [Palosi, Daniel] Dennis Gabor Coll, Budapest, Hungary.
   [Coakley, Darragh] Cork Inst Technol, Cork, Ireland.
C3 Ostfold University College; Munster Technological University (MTU)
RP Colomo-Palacios, R (corresponding author), Ostfold Univ Coll, Halden, Norway.
EM ricardo.colomo-palacios@hiof.no
RI Messnarz, Richard/AAH-8716-2020; Colomo-Palacios, Ricardo/E-5139-2010
OI Messnarz, Richard/0000-0002-0555-3160; Colomo-Palacios,
   Ricardo/0000-0002-1555-9726; Siakas, Kerstin/0000-0003-4165-8389
FU European Commission (Programme LifeLong Learning-action Leonardo da
   Vinci-Transfer of Innovation) [2011-1-ES1_LEO05-35930]
FX This work is supported by the European Commission (Programme LifeLong
   Learning-action Leonardo da Vinci-Transfer of Innovation),
   2011-1-ES1_LEO05-35930.
CR Agrawal NM, 2012, J WORLD BUS, V47, P159, DOI 10.1016/j.jwb.2011.04.002
   Ahlqvist T, 2010, FORESIGHT, V12, P3, DOI 10.1108/14636681011075687
   Al-Ani B, 2014, INFORM SOFTWARE TECH, V56, P309, DOI 10.1016/j.infsof.2013.11.001
   Alberghini E, 2014, J KNOWLEDGE MANAGEME, V18, P2
   [Anonymous], 2012, Social Media Marketing: An Hour a Day
   Bullinger HJ, 1999, INT J PROD ECON, V60-1, P9, DOI 10.1016/S0925-5273(98)00127-3
   Capiluppi A, 2013, IEEE SOFTWARE, V30, P45, DOI 10.1109/MS.2012.169
   Chatti MA, 2012, IEEE T LEARN TECHNOL, V5, P177, DOI 10.1109/TLT.2011.33
   Colomo-Palacios R, 2014, INTERACT LEARN ENVIR, V22, P221, DOI 10.1080/10494820.2012.745430
   Colomo-Palacios R, 2008, INT J KNOWL LEARN, V4, P452, DOI 10.1504/IJKL.2008.022063
   Deiser R., 2013, Six social-media skills every leader needs
   Di Gangi PM, 2010, MIS Q EXEC, V9, P213
   Drucker P.F., 1992, AGE DISCONTINUITY GU
   Drucker PF, 1999, CALIF MANAGE REV, V41, P79, DOI 10.2307/41165987
   Erol S, 2010, J SOFTW MAINT EVOL-R, V22, P449, DOI 10.1002/smr.460
   García-Crespo A, 2010, J INF TECHNOL-UK, V25, P178, DOI 10.1057/jit.2010.1
   Giuffrida R, 2013, INFORM SOFTWARE TECH, V55, P1143, DOI 10.1016/j.infsof.2013.01.004
   Goldoni V, 2010, J KNOWL MANAG, V14, P301, DOI 10.1108/13673271011032427
   Gruber T, 2008, J WEB SEMANT, V6, P4, DOI 10.1016/j.websem.2007.11.011
   Huang J, 2013, INFORM MANAGE-AMSTER, V50, P112, DOI 10.1016/j.im.2012.11.003
   Jussila JJ, 2014, COMPUT HUM BEHAV, V30, P606, DOI 10.1016/j.chb.2013.07.047
   Korsaa M, 2010, J SOFTWARE MAINTENAN, V24, P525
   Laroche M, 2013, INT J INFORM MANAGE, V33, P76, DOI 10.1016/j.ijinfomgt.2012.07.003
   Leonardi PM, 2013, J COMPUT-MEDIAT COMM, V19, P1, DOI 10.1111/jcc4.12029
   Lewin AY, 2013, J INT MANAG, V19, P6, DOI 10.1016/j.intman.2012.10.001
   Mangold WG, 2009, BUS HORIZONS, V52, P357, DOI 10.1016/j.bushor.2009.03.002
   Messnarz R, 2014, J SOFTW-EVOL PROC, V26, P284, DOI [10.1002/smr.1583, 10.1002/smr.1591, 10.1002/smr.1586, 10.1002/smr.1582]
   Messnarz R, 2011, COMM COM INF SC, V172, P268
   Milovanovic M, 2012, BEHAV INFORM TECHNOL, V31, P767, DOI 10.1080/0144929X.2011.642894
   Moqbel M, 2013, INFORM TECHNOL PEOPL, V26, P240, DOI 10.1108/ITP-10-2012-0110
   Müller J, 2011, J UNIVERS COMPUT SCI, V17, P532
   Murphy-Hill E, 2014, COMPUTER, V47, P48, DOI 10.1109/MC.2013.406
   Nevalainen R, 2010, J SOFTW MAINT EVOL-R, V22, P269, DOI 10.1002/spip.438
   Neves SM, 2014, INT J PROJ MANAG, V32, P125, DOI 10.1016/j.ijproman.2013.02.007
   O'Dell C., 2011, NEW EDGE KNOWLEDGE K
   Okazaki S, 2013, INT MARKET REV, V30, P56, DOI 10.1108/02651331311298573
   Pirkkalainen H, 2014, COMPUT HUM BEHAV, V30, P637, DOI 10.1016/j.chb.2013.07.041
   Riemer K, 2010, BUS INFORM SYST ENG+, V2, P391, DOI 10.1007/s12599-010-0129-1
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Seufert A., 1999, J KNOWL MANAG, V3, P180, DOI DOI 10.1108/13673279910288608
   Siakas K, 2012, COMM COM INF SC, V301, P241
   Sillaber C, 2014, 8 INT C KNOWL MAN OR, P579
   Thompson C, 2014, INTERNET HIGH EDUC, V21, P31, DOI 10.1016/j.iheduc.2013.12.001
   Vlaanderen Kevin, 2013, International Journal of Business Information Systems, V12, P3
   Warren J, 2012, NEW MEDIA SOC, V14, P7, DOI 10.1177/1461444811410390
NR 45
TC 9
Z9 11
U1 1
U2 28
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2014
VL 26
IS 9
SI SI
BP 791
EP 798
DI 10.1002/smr.1668
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AQ5EP
UT WOS:000342829400004
DA 2024-07-18
ER

PT J
AU Davies, S
   Roper, M
   Wood, M
AF Davies, Steven
   Roper, Marc
   Wood, Murray
TI Comparing text-based and dependence-based approaches for determining the
   origins of bugs
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software maintenance; bug origins; mining software repositories; program
   dependence graph; version control; bug tracking systems
AB Identifying bug origins - the point where erroneous code was introduced - is crucial for many software engineering activities, from identifying process weaknesses to gathering data to support bug detection tools. Unfortunately, this information is not usually recorded when fixing bugs, and recovering it later is challenging. Recently, the text approach and the dependence approach have been developed to tackle this problem. Respectively, they examine textual and dependence-related changes that occurred prior to a bug fix. However, only limited evaluation has been carried out, partially because of a lack of available implementations and of datasets linking bugs to origins. To address this, origins of 174 bugs in three projects were manually identified and compared to a simulation of the approaches. Both approaches were partially successful across a variety of bugs - achieving 29-79% precision and 40-70% recall. Results suggested the precise definition of program dependence could affect performance, as could whether the approaches identified a single or multiple origins. Some potential improvements are explored in detail and identify pragmatic strategies for combining techniques along with simple modifications. Even after adopting these improvements, there remain many challenges: large commits, unrelated changes and long periods between origins and fixes all reduce effectiveness. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Davies, Steven; Roper, Marc; Wood, Murray] Univ Strathclyde, Dept Comp & Informat Sci, Glasgow, Lanark, Scotland.
C3 University of Strathclyde
RP Davies, S (corresponding author), Univ Strathclyde, Glasgow, Lanark, Scotland.
EM s.davies@strath.ac.uk
OI Carlysle-Davies, Steven/0000-0002-7144-9951; Wood,
   Murray/0000-0002-9449-1036
FU Engineering and Physical Sciences Research Council [EP/P505747/1]
FX This work was supported by the Engineering and Physical Sciences
   Research Council (grant number EP/P505747/1). We would like to thank the
   anonymous reviewers for their constructive comments.
CR [Anonymous], 2007, The promise repository of empirical software engineering data
   Apiwattanapong T, 2007, AUTOMAT SOFTW ENG, V14, P3, DOI 10.1007/s10515-006-0002-0
   Artho C, 2009, LNCS, V5394, DOI [10.1007/978-3-642-01702-5_13, DOI 10.1007/978-3-642-01702-5_]
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Bird C, 2009, P ESEC FSE
   Chou A, 2001, P SOSP, DOI [10.1145/502034.502042, DOI 10.1145/502034.502042]
   Corley C, 2011, P TEFSE
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Endres A., 1975, An analysis of errors and their causes in system programs, V10, P327, DOI DOI 10.1145/390016.808455
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Horwitz S, 1990, ACM T PROGR LANG SYS, V12, P229
   Kim S, 2006, P ASE
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kovacs G, 1996, TECHNICAL REPORT
   Larsen L, 1996, P ICSE
   LaToza T, 2006, P ICSE, DOI [10.1145/1134285.1134355, DOI 10.1145/1134285.1134355]
   Liang D, 1998, P ICSM
   Luo Z, 2010, P SCAM, DOI [10.1109/SCAM.2010.20, DOI 10.1109/SCAM.2010.20]
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Sinha V, 2010, P ISEC
   Sliwerski J, 2005, P MSR
   Sullivan M, 1992, FTCS 22, DOI [10.1109/FTCS.1992.243586, DOI 10.1109/FTCS.1992.243586]
   Walkinshaw N, 2003, P SCAM
   Williams C, 2008, P DEFECTS
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhao J., 1998, P WORKSH SOFTW ENG D
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T, 2005, P ESEC FSE, DOI [10.1145/1095430.1081725, DOI 10.1145/1095430.1081725]
NR 29
TC 25
Z9 25
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2014
VL 26
IS 1
SI SI
BP 107
EP 139
DI 10.1002/smr.1619
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA0PV
UT WOS:000330799000006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Espinosa-Curiel, IE
   Rodríguez-Jacobo, J
   Fernández-Zepeda, JA
AF Edrein Espinosa-Curiel, Ismael
   Rodriguez-Jacobo, Josefina
   Alberto Fernandez-Zepeda, Jose
TI A framework for evaluation and control of the factors that influence the
   software process improvement in small organizations
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software process improvement; small software organization; factor
   framework; social factors; personal factors; technical factors
ID SUCCESS FACTORS; INITIATIVES; EXPERIENCES; MOTIVATORS; MODEL
AB Today, many micro-sized and small-sized software enterprises (MSEs) have initiated a software process improvement (SPI) initiative to be more competitive in the software market. SPI initiatives in MSEs have not been entirely successful; in general, MSEs consider them a long, expensive, and difficult activity. One of the reasons of these results is that a large number of human, social, technical, and organizational factors influence these initiatives. MSEs require to control, mitigate, or solve these factors to succeed in their initiatives. However, because there is a lack of information regarding the characteristics and behavior of these factors in the context of the MSEs, SPI managers have limited information to design strategies to control these factors. This work proposes a framework of factors that influence SPI initiatives in MSEs and a methodology to evaluate and control these factors. This framework includes 132 factors grouped in six categories. Additionally, we specify their properties, their value scales, and the property values for each factor. SPI managers could use this framework to evaluate and control potential threats to SPI initiatives and to propose better SPI strategies. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Edrein Espinosa-Curiel, Ismael; Rodriguez-Jacobo, Josefina; Alberto Fernandez-Zepeda, Jose] Ctr Sci Res & Higher Educ Ensenada CICESE, Dept Comp Sci, Ensenada 22860, Baja California, Mexico.
C3 CICESE - Centro de Investigacion Cientifica y de Educacion Superior de
   Ensenada
RP Espinosa-Curiel, IE (corresponding author), Ctr Sci Res & Higher Educ Ensenada, Dept Comp Sci, Carretera Ensenada Tijuana 3918, Ensenada 22860, Baja California, Mexico.
EM ecuriel@cicese.mx
RI Espinosa-curiel, Ismael/D-1292-2019
OI Espinosa-curiel, Ismael/0000-0002-3136-3256
FU CONACYT (Mexico) [201936]
FX The authors wish to thank the organizations that participated in the
   case studies. The work has been partly funded by CONACYT (Mexico), under
   scholarship 201936 provided to the first author.
CR [Anonymous], AUSTR SOFTW ENG C, DOI DOI 10.1109/ASWEC.2001.948512
   Baddoo N., 2002, Empirical Software Engineering, V7, P93, DOI 10.1023/A:1015203013834
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   Batista J., 2000, Software Process Improvement and Practice, V5, P243, DOI 10.1002/1099-1670(200012)5:4<243::AID-SPIP126>3.0.CO;2-0
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   Börjesson A, 2007, INT FED INFO PROC, V235, P197
   Cao GM, 2003, SYST RES BEHAV SCI, V20, P231, DOI 10.1002/sres.530
   Cater-Steel A, 2006, INFORM SOFTWARE TECH, V48, P323, DOI 10.1016/j.infsof.2005.09.012
   Christiansen M., 2008, PRACTICE, V13, P319
   Chroust G, 2002, EUROMICRO CONF PROC, P388, DOI 10.1109/EURMIC.2002.1046235
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Dangle KC, 2005, IEEE SOFTWARE, V22, P68, DOI 10.1109/MS.2005.162
   Demirors O, 1998, LECT NOTES COMPUT SC, V1487, P1
   Dittrich Y, 2008, EMPIR SOFTW ENG, V13, P231, DOI 10.1007/s10664-007-9057-1
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   Dyba T., 2003, Software Engineering Notes, V28, P148, DOI 10.1145/949952.940092
   El-Emam K., 2001, Empirical Software Engineering, V6, P207, DOI 10.1023/A:1011487332587
   Espinosa-Curiel IE., 2008, THESIS CICESE
   Fayad ME, 2000, COMMUN ACM, V43, P115, DOI 10.1145/330534.330555
   Hall T., 2002, Software Process Improvement and Practice, V7, P3, DOI 10.1002/spip.150
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   Horvat R. V., 2000, Software Process Improvement and Practice, V5, P45, DOI 10.1002/(SICI)1099-1670(200003)5:1<45::AID-SPIP110>3.0.CO;2-2
   Johansen Jorn, 2007, Software Process: Improvement and Practice, V12, P529, DOI 10.1002/spip.348
   Kautz K., 1998, Software Process Improvement and Practice, V4, P209, DOI 10.1002/(SICI)1099-1670(199812)4:4<209::AID-SPIP105>3.0.CO;2-8
   Kelly DP, 1999, COMPUTER, V32, P41, DOI 10.1109/2.796108
   Kuvaja P, 1999, SOFTWARE QUAL J, V8, P149, DOI 10.1023/A:1008909011736
   Lepasaar M., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P68
   Lewin K, 1947, HUM RELAT, V1, P5, DOI 10.1177/001872674700100103
   Mc Caffery F, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.3
   Mishra D, 2008, LECT NOTES COMPUT SC, V5089, P273, DOI 10.1007/978-3-540-69566-0_23
   Montoni Mariano Angel, 2009, Software Process: Improvement and Practice, V14, P289, DOI 10.1002/spip.428
   Montoni M, 2007, LECT NOTES COMPUT SC, V4764, P175
   Nasir MHNM, 2008, INF TECHN 2008 ITSIM, V4, P110, DOI [10.1109/ITSIM.2008.4631933, DOI 10.1109/ITSIM.2008.4631933]
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Niazi M, 2006, LECT NOTES COMPUT SC, V4034, P222
   O'Hara F., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P635, DOI 10.1109/ICSE.2000.870457
   OKTABA H, 2008, SOFTWARE PROCESS IMP
   Oktaba H, 2007, COMPUTER, V40, P21, DOI 10.1109/MC.2007.361
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Richardson I, 2002, SOFTWARE QUAL J, V10, P101, DOI 10.1023/A:1020519822806
   Richardson I, 2007, IEEE SOFTWARE, V24, P18, DOI 10.1109/MS.2007.12
   Robson C., 2002, Real World Research, V2nd
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santos G, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P187, DOI 10.1109/QUATIC.2007.22
   Stelzer D., 1998, Software Process Improvement and Practice, V4, P227, DOI 10.1002/(SICI)1099-1670(199812)4:4<227::AID-SPIP106>3.0.CO;2-1
   Strauss A., 1990, BASICS QUALITATIVE R
   Villalón JACM, 2002, SOFTWARE QUAL J, V10, P261, DOI 10.1023/A:1021638523413
   von Wangenheim CG, 2006, INFORM SOFTWARE TECH, V48, P890, DOI 10.1016/j.infsof.2005.12.010
   Zeineddine R, 2003, LECT NOTES COMPUT SC, V2869, P1027
NR 52
TC 21
Z9 24
U1 0
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2013
VL 25
IS 4
SI SI
BP 393
EP 406
DI 10.1002/smr.569
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 131XD
UT WOS:000318030600008
DA 2024-07-18
ER

PT J
AU Li, Q
   Yang, Y
   Li, MS
   Wang, Q
   Boehm, BW
   Hu, CY
AF Li, Qi
   Yang, Ye
   Li, Mingshu
   Wang, Qing
   Boehm, Barry W.
   Hu, Chenyong
TI Improving software testing process: feature prioritization to make
   winners of success-critical stakeholders
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE value-based; business importance; quality risk; cost; software testing;
   market
AB For a successful software project, acceptable quality must be achieved within an acceptable cost, demonstrating business value to customers and satisfactorily meeting delivery timeliness. Testing serves as the most widely used approaches to determine that the intended functionalities are performed correctly and achieve the desired level of services; however, it is also a labor-intensive and expensive process during the whole software life cycle. Most current testing processes are often technique-centered, rather than organized to maximize business value. In this article, we extend and elaborate the 4+1 theoretical lenses of Value-based Software Engineering (VBSE) framework in the software testing process; propose a multi-objective feature prioritization strategy for testing planning and controlling, which aligns the internal testing process with value objectives coming from customers and markets. Our case study in a real-life business project shows that this method allows reasoning about the software testing process in different dimensions: it helps to manage the testing process effectively and efficiently, provides information for continuous internal software process improvement, and increases customer satisfaction, which makes winners of all success-critical stakeholders (SCSs) in the software testing process. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Li, Qi; Boehm, Barry W.] Univ So Calif, Ctr Syst & Software Engn, Los Angeles, CA 90089 USA.
   [Yang, Ye; Li, Mingshu; Wang, Qing; Hu, Chenyong] Chinese Acad Sci, Inst Software, Lab Internet Software Technol, Beijing, Peoples R China.
   [Li, Mingshu] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
C3 University of Southern California; Chinese Academy of Sciences;
   Institute of Software, CAS; Chinese Academy of Sciences; Institute of
   Software, CAS
RP Li, Q (corresponding author), Univ So Calif, Ctr Syst & Software Engn, 941 W 37th Pl,SAL Room 328,Univ Pk Campus, Los Angeles, CA 90089 USA.
EM qli1@usc.edu
RI Yang, Ye/GZM-4812-2022; wang, qi/ITT-9652-2023; Lang,
   Ming/HIK-0758-2022; yang, yang/HGT-7999-2022
FU National Natural Science Foundation of China [90718042, 60873072,
   60903050]; National Hi-Tech RD Plan of China [2007AA010303]; National
   Basic Research Program [2007CB310802]
FX This work is cooperatively supported by the National Natural Science
   Foundation of China under Grant Nos. 90718042, 60873072, and 60903050;
   the National Hi-Tech R&D Plan of China under Grant Nos. 2007AA010303;
   the National Basic Research Program under Grant No. 2007CB310802. The
   authors also want to thank Lang Gou, Juan Li, and Fengdi Su for their
   great assistance during this empirical study.
CR Amland S, 1999, 5 INT C EUROSTAR 99
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], RTCADO178B
   [Anonymous], 1990, Software testing techniques {
   Boehm B, 2004, IEEE SOFTWARE, V21, P54, DOI 10.1109/MS.2004.1293073
   Boehm B, 2003, COMPUTER, V36, P33, DOI 10.1109/MC.2003.1185215
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Boehm B, 1998, COMPUTER, V31, P33, DOI 10.1109/2.689675
   BOEHM B, 2005, VALUE BASED SOFTWARE
   Boehm B., 2007, Guidelines for Lean Model-Based (System) Architecting and Software Engineering (Lean MBASE)
   Boehm B., 2003, BALANCING AGILITY DI
   Boehm B.W., 2003, SIGSOFT Software Engineering Notes, V28, P1
   Boehm B, 2006, VALUE-BASED SOFTWARE ENGINEERING, P15, DOI 10.1007/3-540-29263-2_2
   Boehm Barry., 2007, CROSSTALK
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Bullock J, 2000, SOFTWARE TESTING MAY, V2, P56
   Chulani S, 1999, USCCSSE1999510
   Gou L, 2008, LECT NOTES COMPUT SC, V5007, P369
   Huang LG, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.127
   Lee K, 2005, INT S EMP SOFTW ENG
   Li Q, 2010, INT C SOFTW PROC
   Li Q, 2009, USCCSSE2009516
   Pyster AB, 2005, IEEE SOFTWARE, V22, P18, DOI 10.1109/MS.2005.137
   Qing Wang, 2006, 28th International Conference on Software Engineering Proceedings, P585, DOI 10.1145/1134285.1134368
   Qing Wang, 2008, Software Process: Improvement and Practice, V13, P35, DOI 10.1002/spip.366
   Ramler R, 2006, VALUE-BASED SOFTWARE ENGINEERING, P225, DOI 10.1007/3-540-29263-2_11
   Raz O, 2001, P WORKSH EC DRIV SOF
   Saaty T.L, 1980, Advanced Optimization and Decision-Making Techniques in Textile Manufacturing, DOI DOI 10.1201/9780429504419-2
   Srikanth H, 2005, P WORKSH EC DRIV SOF
   USC Software Engineering Course, 2009, USC SOFTW ENG COURS
   Wiegers K.E., 1999, Software Development, V7, P24
   Yang Y, 2008, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSM.2008.4658103
NR 32
TC 8
Z9 12
U1 1
U2 27
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2012
VL 24
IS 7
SI SI
BP 783
EP 801
DI 10.1002/smr.512
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 021TS
UT WOS:000309908900005
OA Bronze
DA 2024-07-18
ER

PT J
AU Bachmann, V
   Messnarz, R
AF Bachmann, Volver
   Messnarz, Richard
TI Improving the software development for multiple projects by applying a
   platform strategy for mechatronic systems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE system process improvement; ISO 15504; platform development
AB Almost 25 years ago the first electronic control units were introduced in the market and since then, a new field in engineering called mechatronics was built for the first time in the late 1980s. Since then the complexity has increased continuously doubling the lines of code in control units roughly every five years. In order to handle this complexity new processes were developed for the software development to be able to maintain the quality leading to a new European Standard ISO 15504 (SPICE). About five years ago, after it became more and more obvious that looking at software processes alone was not enough any more, the standard had to be increased to the whole system (or product). This involved the complete mechanic and electronic development. The amount of documentation has come to such a point that is not acceptable for development departments anymore. Therefore it is time to think about not only re-use in product development and testing results but also in documentation and process development results. Copyright (c) 2010 John Wiley & Sons, Ltd.
C1 [Messnarz, Richard] ISCN GesmbH, Graz, Austria.
   [Bachmann, Volver] SIBAC GmbH, Mittelbiberach, Germany.
RP Messnarz, R (corresponding author), ISCN GesmbH, Graz, Austria.
EM rmess@iscn.com
RI Messnarz, Richard/AAH-8716-2020
OI Messnarz, Richard/0000-0002-0555-3160
CR [Anonymous], 15504 ISO 5
   Messnarz R, 2007, SOFTWARE PROCESS IMP, V12, P505
   Spork G, 2008, SOFTWARE PROCESS IMP, V13, P297
NR 3
TC 2
Z9 2
U1 0
U2 6
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2012
VL 24
IS 5
SI SI
BP 541
EP 549
DI 10.1002/smr.495
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 975AO
UT WOS:000306479100009
DA 2024-07-18
ER

PT J
AU Jung, HW
AF Jung, Ho-Won
TI Process attribute rating and sensitivity analysis in process assessment
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE criticality degree; ISO/IEC 15504; multiple criteria analysis; process
   attribute; sensitivity analysis
ID COMPOSITE INDICATORS; DECISION; MISSPECIFICATION; MODELS
AB The capability level of a process assessed on the basis of International Standard ISO/IEC 15504 is determined by utilizing process attributes ratings (PAs). PA rating as a composite indicator is determined by the extent to which outcomes or the implemented practices are achieved. However, the ISO/IEC 15504 standards do not provide recommendations as to assessment methods, including the following: (i) which of the outcomes or practices implemented are evaluated as an intermediate step in rating the PA; and (ii) how a set of their achievements is aggregated into the PA rating. This study addresses a simple additive weighting method based on the performance value and weights of practices implemented as well as its rationale, in order to facilitate consistent and repeatable PA ratings. Then, sensitivity analysis is conducted to evaluate how much a change in the weight or performance value of an implemented practice will affect and alter the current PA rating. Our sensitivity analysis can be employed in cases in which an assessor must explain his/her ratings to assessment team members, as well as the organizational unit assessed. Six examples are provided to illustrate the applications of our sensitivity analyses. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 Korea Univ, Sch Business, Seoul, South Korea.
C3 Korea University
RP Jung, HW (corresponding author), Korea Univ, Sch Business, Seoul, South Korea.
EM hwjung@korea.ac.kr
FU Korea University Foundation
FX This study was supported by the Korea University Foundation Grant
   (2010). This support is gratefully acknowledged. The author thanks the
   Editor and two anonymous referees whose comments and suggestions helped
   to improve the presentation of this paper.
CR Anderson NH, 1981, Foundations of Information Integration Theory
   [Anonymous], 1995, MULTIPLE ATTRIBUTE D
   [Anonymous], 1979, SAGE U PAPER SERIES
   [Anonymous], 2008, Handbook on Constructing Composite Indicators: Methodology and User Guide
   [Anonymous], 2006, 15504 ISOIEC 5
   Bandura Romina., 2008, SURVEY COMPOSITE IND
   BOLLEN K, 1991, PSYCHOL BULL, V110, P305, DOI 10.1037/0033-2909.110.2.305
   Bollen KA, 2000, PSYCHOL METHODS, V5, P3, DOI 10.1037//1082-989X.5.1.3
   Bollen KA, 2007, PSYCHOL METHODS, V12, P219, DOI 10.1037/1082-989X.12.2.219
   BRANNICK MT, 1989, ORGAN BEHAV HUM DEC, V44, P97, DOI 10.1016/0749-5978(89)90037-X
   Chen HY, 2008, EUR J OPER RES, V185, P266, DOI 10.1016/j.ejor.2006.12.029
   Cherchye L, 2008, J OPER RES SOC, V59, P239, DOI 10.1057/palgrave.jors.2602445
   Chin WW, 2003, INFORM SYST RES, V14, P189, DOI 10.1287/isre.14.2.189.16018
   Diamantopoulos A, 2001, J MARKETING RES, V38, P269, DOI 10.1509/jmkr.38.2.269.18845
   El Emam K, 2001, J SYST SOFTWARE, V59, P23, DOI 10.1016/S0164-1212(01)00046-2
   El Emam K, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P38, DOI 10.1109/METRIC.1998.731225
   Fishbein Martin., 1975, Attitude, Intention and Behavior: An Introduction to Theory and Research
   FORNELL C, 1982, J MARKETING RES, V19, P440, DOI 10.2307/3151718
   Gibson D, 2006, CMUSEI2006004
   Gudergan SP, 2008, J BUS RES, V61, P1238, DOI 10.1016/j.jbusres.2008.01.012
   Ho-Won Jung, 2001, Software Process Improvement and Practice, V6, P111, DOI 10.1002/spip.139
   Ho-Won Jung, 2001, Software Process Improvement and Practice, V6, P205, DOI 10.1002/spip.146
   ISO, 2003, 15504 ISOIEC 2
   *ISO, 2002, 12207 ISOIEC
   Jacobs R., 2007, POLICY DISCUSSION BR
   Jarvis CB, 2003, J CONSUM RES, V30, P199, DOI 10.1086/376806
   Munda G, 2004, EUR J OPER RES, V158, P662, DOI 10.1016/S0377-2217(03)00369-2
   Munda G, 2009, APPL ECON, V41, P1513, DOI 10.1080/00036840601019364
   Saaty T.L., 2001, DECISION MAKING DEPE
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Saltelli A, 2007, SOC INDIC RES, V81, P65, DOI 10.1007/s11205-006-0024-9
   SEI, 2006, CMUSEI2006HB002
   SEI, 2010, CMUSEI2010TR033
   Sethi V, 1999, INFORM SYST RES, V10, P87, DOI 10.1287/isre.10.1.87
   Triantaphyllou E, 1997, DECISION SCI, V28, P151, DOI 10.1111/j.1540-5915.1997.tb01306.x
   Yoon M-S, 2005, P 8 INT S AN HIER PR
   Zhou P, 2010, SOC INDIC RES, V96, P169, DOI 10.1007/s11205-009-9472-3
   Zhou P, 2009, SOC INDIC RES, V94, P83, DOI 10.1007/s11205-008-9338-0
NR 38
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2012
VL 24
IS 4
BP 401
EP 419
DI 10.1002/smr.545
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 962WZ
UT WOS:000305580700002
DA 2024-07-18
ER

PT J
AU De Nicola, A
   Missikoff, M
   Smith, F
AF De Nicola, Antonio
   Missikoff, Michele
   Smith, Fabrizio
TI Towards a method for business process and informal business rules
   compliance
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE business process modeling; business rules; business process
   reengineering; semantic annotation; business process querying
ID COMPLIANCE-CHECKING; VERIFICATION
AB Business process reengineering (BPR) is a common practice for a continuous improvement of the organization and the operations of an enterprise. An important technique of BPR is based on business rules (BRs). The latter are, in general, represented using natural language and, therefore, carry a certain degree of imprecision and ambiguity; therefore, our first objective is to start from informal BR and disambiguate them by using a question answering method based on a decision table. The introduction of BRs impacts on existing business processes (BPs), requiring often a reengineering intervention. In this paper, we present an approach to BPR based on the systematic use of ontologies and semantic annotations and focused on dependency constraints, a particular kind of BRs. To this end, we propose the synergic use of Business Process Abstract Language, a BP modeling framework to represent BP schemas, and Object Process Actor modeling Language, an ontological framework to capture the semantics of a business scenario. Both the frameworks are grounded in logic, and therefore, it is possible to apply effective reasoning methods to make inferences over a Business Process Knowledge Base stemming from the union of the two above components. Then we propose a query engine allowing for the detection of BPs that are not compliant with the BRs and, more precisely, the specific BP segment where to intervene. The proposed platform has been conceived not to substitute existing BPM tools but to integrate them providing advanced services to support rule-based BPR activities. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [De Nicola, Antonio] ENEA, Rome, Italy.
   [De Nicola, Antonio; Missikoff, Michele; Smith, Fabrizio] IASI CNR, Rome, Italy.
   [Smith, Fabrizio] Univ Aquila, DIEI, I-67100 Laquila, Italy.
C3 Italian National Agency New Technical Energy & Sustainable Economics
   Development; Consiglio Nazionale delle Ricerche (CNR); Istituto di
   Analisi dei Sistemi ed Informatica "Antonio Ruberti" (IASI-CNR);
   University of L'Aquila
RP De Nicola, A (corresponding author), ENEA, Rome, Italy.
EM antonio.denicola@enea.it
RI De Nicola, Antonio/J-4453-2019
OI De Nicola, Antonio/0000-0002-1045-0510
CR Abiteboul S, 1995, FDN DATABASES
   [Anonymous], 2007, XSB LOGIC PROGRAMMIN
   [Anonymous], 2008, XPDL 2 1 COMPLETE SP
   Awad A, 2008, LECT NOTES COMPUT SC, V5240, P326, DOI 10.1007/978-3-540-85758-7_24
   Awad A, 2009, LECT NOTES COMPUT SC, V5900, P500, DOI 10.1007/978-3-642-10383-4_37
   BONNER A, 1996, JOINT INT C S LOG PR
   D'Antonio F, 2007, 3 I ESA C
   De Coi JL, 2009, LECT NOTES COMPUT SC, V5500, P276, DOI 10.1007/978-3-642-04581-3_6
   De Nicola A, 2010, P DEXA 2010 LNCS 626, P66
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   FU X, 2004, P INT WORLD WID WEB
   Governatori G, 2006, IEEE INT ENTERP DIST, P221
   Governatori G, 2006, INT J COOP INF SYST, V15, P659, DOI 10.1142/S0218843006001529
   Grosof BenjaminN., 2003, P 12 INT WORLD WIDE, P48, DOI DOI 10.1145/775152.775160
   Liu Y, 2007, IBM SYST J, V46, P335, DOI 10.1147/sj.462.0335
   Lloyd J. W., 2012, Foundations of Logic Programming
   Ly L, 1922, P 22 INT C ADV INF S
   Ly LT, 2008, DATA KNOWL ENG, V64, P3, DOI 10.1016/j.datak.2007.06.007
   Missikoff M, 2010, IASI CNR, P10
   Montali M, 2008, LECT NOTES COMPUT SC, V5366, P440, DOI 10.1007/978-3-540-89982-2_39
   Namiri K, 2007, LECT NOTES COMPUT SC, V4803, P59
   OMG, 2009, BUS PROC MOD NOT VER
   Pesic M., 2008, THESIS EINDHOVEN U T
   Roman D., 2007, REASONING BEHAV SEMA
   Smith RL, 2002, 24 INTL C SOFTW ENG
   Yu J, 2006, LECT NOTES COMPUT SC, V4255, P156
NR 26
TC 5
Z9 6
U1 1
U2 23
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2012
VL 24
IS 3
SI SI
BP 341
EP 360
DI 10.1002/smr.553
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 910NG
UT WOS:000301645800007
DA 2024-07-18
ER

PT J
AU Shahzad, K
   Zdravkovic, J
AF Shahzad, Khurram
   Zdravkovic, Jelena
TI Process warehouses in practice: a goal-driven method for business
   process analysis
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE business process management; business process monitoring; business
   process analysis; process warehouse
ID ORIENTED APPROACH; TECHNOLOGY; MODEL
AB Process analysis and improvement, one of the core phases in the business process management life cycle, is reaching the top of the agenda for many enterprises and organizations. An emerging approach to analyzing business processes involves the use of process-oriented data warehouses to collect information about executed processes to enable their detailed analysis and thereby provide bases for possible improvements. However, very little work has been carried out on employing business orientation in the design and utilization of a process warehouse. The approach presented in this study addresses that limitation by proposing a method that relates business goals to the information from the warehouse. To do so, we start by defining a desired goal structure that concerns an existing business process. The obtained goal model is firstly utilized for scoping and designing a corresponding data model for a process warehouse, and further for retrieving the information from the warehouse to examine the fulfillment of the goals of interest. The key benefits of the proposed method are the provision of the relevant and accurate business process information as well as tracing the process-related goals to the process execution data and further to the analysis of the process. As validation of the proposed method, we develop a prototype, and a healthcare process is used as an illustrative example. Also, to demonstrate the method quality, we perform an experiment on the effectiveness of the information access and retrieval. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Shahzad, Khurram] Royal Inst Technol KTH, Dept Software & Comp Syst SCS, Stockholm, Sweden.
   [Zdravkovic, Jelena] Stockholm Univ, Dept Comp & Syst Sci DSV, S-10691 Stockholm, Sweden.
C3 Royal Institute of Technology; Stockholm University
RP Shahzad, K (corresponding author), Royal Inst Technol KTH, Dept Software & Comp Syst SCS, Stockholm, Sweden.
EM mks@dsv.su.se
RI Shahzad, Khurram/GRX-8200-2022
OI Shahzad, Dr. Khurram/0000-0001-8433-6705; Zdravkovic,
   Jelena/0000-0002-0870-0330
FU Swedish Agency for Innovation Systems
FX The authors would like to thank the Karolinska Research Institute for
   Health Informatics for providing the input on the stroke process used in
   the study; the process model is created within the scope of the VIPPA
   project funded by the Swedish Agency for Innovation Systems.
CR An L., 2007, P 6 WUH INT C E BUS
   [Anonymous], 2009, COMMONSENSE
   [Anonymous], 2001, P INT C EL COMM RES
   BRANDT SC, 2006, P 9 IFAC S AUT SYST
   BRANDT SC, 2005, P 2 INT C INN INF TE
   Brandt SC, 2008, INFORM SECURITY ETHI, V6
   Casati F., 2007, Proceedings of the 33rd international conference on Very large data bases, VLDB '07, P1128
   Chaudhuri S., 1997, SIGMOD Record, V26, P65, DOI 10.1145/248603.248616
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Giorgini P, 2008, DECIS SUPPORT SYST, V45, P4, DOI 10.1016/j.dss.2006.12.001
   Hägglund M, 2010, STUD HEALTH TECHNOL, V160, P1251, DOI 10.3233/978-1-60750-588-4-1251
   Institute Of Medicine, 2010, CROSS QUAL CHASM NEW
   Kavakli V, 1999, INFORM SYST, V24, P187, DOI 10.1016/S0306-4379(99)00015-0
   LIST B, 2000, SELECTED ASPECTS KNO
   Mansmann S, 2007, LECT NOTES COMPUT SC, V4801, P23
   Mansmann S, 2007, LECT NOTES COMPUT SC, V4654, P111
   Muehlen Mzur, 2010, HDB BUSINESS PROCESS
   Neumuth T, 2008, COMP MED SY, P230, DOI 10.1109/CBMS.2008.41
   Pourshahid A, 2009, ELECTRON COMMER RES, V9, P269, DOI 10.1007/s10660-009-9039-z
   Sarda NL, 2010, STRUCTURING BUSINESS
   SAYAL M, 2002, P 28 INT C VER LARG
   Shahzad K, P IEEE INT C SYST MA, P810
   Shahzad K., 2009, P 5 ACM EOMAS CONJ C, P1
   Shahzad K, 2009, LECT NOTES BUS INF P, V39, P84
   Shahzad K, 2009, LECT NOTES BUS INF P, V39, P176
   Simon G, 2006, LECT NOTES ARTIF INT, V3904, P124
   Stefanov V., 2007, P 15 EUR C INF SYST, P2062
   Stefanov V, P INT WORKSH MOD ENT
   Xie G, P 6 INT 2 AS C AS SE
NR 29
TC 5
Z9 6
U1 2
U2 26
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2012
VL 24
IS 3
SI SI
BP 321
EP 339
DI 10.1002/smr.555
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 910NG
UT WOS:000301645800006
DA 2024-07-18
ER

PT J
AU Hale, JE
   Hale, DP
AF Hale, Joanne E.
   Hale, David P.
TI Evaluating testing effectiveness during software evolution: a
   time-series cross-section approach
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE defect prediction; quantitative management; software testing; maturity
   model; evaluation process monitoring
ID MAINTENANCE MATURITY MODEL; QUALITY; DEFECTS
AB As software evolution organizations (SEOs) formalize their activities into standard repeatable processes, capability maturity models suggest that they gather and analyze data to quantitatively manage their activities. This study examines the use of a time-series cross-section (TSCS) modeling approach to inform the quantitative management of the testing activities within a mature SEO. This paper describes the TSCS modeling approach and provides an exemplar case study that details its use. Data for the case study come from readily available, commonly gathered production and testing defect reports in the quantitative measurement efforts of a CMMI-DEV Level 3 assessed software development and evolution organization. Covering six independent projects for 43 months, the case study defines quality in terms of reported defects in the production code base. The predictors are the six projects and defect data identified in the unit, system, and regression testing activities logs. The case study also details how results from the TSCS analysis triggered causal analysis to improve the testing activities. The study provides evidence that TSCS models can be used as a quantitative problem identification tool for the mature (SMmm Level 3 or higher) SEO's testing activities. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Hale, Joanne E.; Hale, David P.] Univ Alabama, Dept Informat Syst Stat & Management Sci, Tuscaloosa, AL 35487 USA.
C3 University of Alabama System; University of Alabama Tuscaloosa
RP Hale, JE (corresponding author), Univ Alabama, Dept Informat Syst Stat & Management Sci, Tuscaloosa, AL 35487 USA.
EM jhale@cba.ua.edu
CR Amasaki S, 2005, SOFTWARE QUAL J, V13, P177, DOI 10.1007/s11219-005-6216-8
   [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 2006, CMMI DEV VERS 1 2
   April A, 2005, J SOFTW MAINT EVOL-R, V17, P197, DOI 10.1002/smr.3
   April A, 2009, ELECTRON NOTES THEOR, V233, P73, DOI 10.1016/j.entcs.2009.02.062
   ARELLANO M, 1991, REV ECON STUD, V58, P277, DOI 10.2307/2297968
   Au YA, 2009, INFORM MANAGE-AMSTER, V46, P9, DOI 10.1016/j.im.2008.09.004
   BECK N, 1995, AM POLIT SCI REV, V89, P634, DOI 10.2307/2082979
   Blundell Richard., 2000, Nonstationary Panels, Panel Cointegration and Dynamic Panels
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   DASKALANTONAKIS MK, 1992, IEEE T SOFTWARE ENG, V18, P998, DOI 10.1109/32.177369
   Elazar J, 1991, MEASUREMENT DESIGN A
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Fershtman C., 2007, INT ECON ECON POL, V4, P209, DOI DOI 10.1007/S10368-007-0086-4
   Gilb Tom, 1993, Software inspections
   Grottke M, 2006, IEEE T RELIAB, V55, P411, DOI 10.1109/TR.2006.879609
   Gujarati D., 2009, BASIC ECONOMETRICS, DOI DOI 10.1007/S10797-005-1619-9
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   HUMMELS D, 1995, Q J ECON, V110, P799, DOI 10.2307/2946700
   ISO/IEC 12207, 2008, 12207 ISOIEC IEEE CO
   ISO/IEC 14764, 2006, 14764 ISOIEC IEEE CO
   Kim YM, 2003, CONF P INDIUM PHOSPH, P145
   Lee I., 1992, Proceedings. Third International Symposium on Software Reliability Engineering (Cat. No.92TH0486-1), P227, DOI 10.1109/ISSRE.1992.285887
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Ostrand T. J., 2002, Software Engineering Notes, V27, P55, DOI 10.1145/566171.566181
   Pau Luo Li, 2004, Software Engineering Notes, V29, P263, DOI 10.1145/1041685.1029930
   Raja U, 2009, J SOFTW MAINT EVOL-R, V21, P49, DOI 10.1002/smr.398
   Ware MP, 2007, J SOFTW MAINT EVOL-R, V19, P133, DOI 10.1002/smr.345
   Wiegers K.E., 2001, Peer Reviews in Software: A Practical Guide
   Yaffee R., 2003, A primer for panel data analysis. Connect: Information Technology at NYU. Social Sciences
NR 34
TC 2
Z9 2
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2012
VL 24
IS 1
BP 35
EP 49
DI 10.1002/smr.531
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 910ND
UT WOS:000301645300003
DA 2024-07-18
ER

PT J
AU Ren, H
   Li, YH
   Chen, L
   Cao, YL
   Zhang, XW
   Nie, CH
AF Ren, Hao
   Li, Yanhui
   Chen, Lin
   Cao, Yulu
   Zhang, Xiaowei
   Nie, Changhai
TI Just-in-time identification for cross-project correlated issues
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE cross-project; issues; issue metrics; just-in-time prediction
ID CLASSIFICATION
AB Issue tracking systems are now prevalent in software development, which would help developers submit and discuss issues to solve development problems on software projects. Most previous studies have been conducted to analyze issue relations within projects, such as recommending similar or duplicate bug issues. However, along with the popularization of co-developing through multiple projects, many issues are cross-project correlated (CPC), that is, one issue is associated with another issue in a different project. When developers meet with CPC issues, it may primarily increase the difficulties of solving them because they need information from not only their projects but also other related projects that developers are not familiar with. Identifying a CPC issue as early as possible is a fundamental challenge for both managers and developers to allocate the resources for software maintenance and estimate the effort to solve it. This paper proposes 11 issue metrics of two groups to describe textual summary and reporters' activity, which can be extracted just after the issue was reported. We employ these 11 issue metrics to construct just-in-time (JIT) prediction models to identify CPC issues. To evaluate the effect of CPC issue prediction models, we conduct experiments on 16 open-source data science and deep learning projects and compare our prediction model with two baseline models based on textual features (i.e., Term Frequency-Inverse Document Frequency [TF-IDF] and Word Embedding), which are commonly adopted by previous studies on issue prediction. The results show that the JIT prediction model based on issue metrics has significantly improved the performance of CPC issue prediction under two evaluation indicators, Matthew's correlation coefficient (MCC) and F1. In addition, we find that the prediction model is more suitable for large-scale complex core projects in the open-source ecosystem.
C1 [Ren, Hao; Li, Yanhui; Chen, Lin; Cao, Yulu; Zhang, Xiaowei; Nie, Changhai] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Nanjing University
RP Li, YH (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM yanhuili@nju.edu.cn
RI Zhang, Xiaowei/HTS-3267-2023
OI Zhang, Xiaowei/0000-0003-2059-6262; Cao, Yulu/0000-0002-6623-1165
FU National Natural Science Foundation of China;  [62172202];  [62272221]; 
   [62172205];  [61972082];  [62162004];  [U21A20474]
FX The authors thank the anonymous reviewers for their time and invaluable
   feedback to improve our study. This work is supported by the National
   Natural Science Foundation of China (Grants 62172202, 62272221,
   62172205, 61972082, 62162004, and U21A20474).
CR Abdou A, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2454
   Almhana R, 2021, AUTOMAT SOFTW ENG, V28, DOI 10.1007/s10515-020-00279-2
   Alpaydin E, 2014, ADAPT COMPUT MACH LE, P1
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Anvik J., 2005, Coping with an open bug repository, P35
   Arp D, 2022, PROCEEDINGS OF THE 31ST USENIX SECURITY SYMPOSIUM, P3971
   Baldi P, 2000, BIOINFORMATICS, V16, P412, DOI 10.1093/bioinformatics/16.5.412
   Ben Braiek H, 2018, IEEE WORK CONF MIN S, P353, DOI 10.1145/3196398.3196445
   Boslaugh S., 2008, Statistics in a nutshell-a desktop quick reference
   Cai YF, 2019, IEEE T SOFTWARE ENG, V45, P657, DOI 10.1109/TSE.2018.2797899
   Chen JL, 2016, 2016 IEEE 8TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS (IS), P686, DOI 10.1109/IS.2016.7737385
   Chen JY, 2020, PROC INT CONF SOFTW, P578, DOI 10.1145/3377811.3380389
   Chen L, 2018, SOFTWARE QUAL J, V26, P97, DOI 10.1007/s11219-016-9342-6
   Chen ZF, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2022.106849
   Cooper N, 2021, PROC INT CONF SOFTW, P957, DOI 10.1109/ICSE43902.2021.00091
   Dilhara M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3453478
   Ding H, 2017, ASIA PAC SOFWR ENG, P318, DOI 10.1109/APSEC.2017.38
   Ebrahimi N, 2019, INFORM SOFTWARE TECH, V113, P98, DOI 10.1016/j.infsof.2019.05.007
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   He JJ, 2020, INT C PROGRAM COMPRE, P117, DOI 10.1145/3387904.3389263
   Herbold S, 2020, EMPIR SOFTW ENG, V25, P5333, DOI 10.1007/s10664-020-09885-w
   Hindle A, 2019, EMPIR SOFTW ENG, V24, P902, DOI 10.1007/s10664-018-9643-4
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Hu DY, 2018, ASIA PAC SOFWR ENG, P725, DOI 10.1109/APSEC.2018.00108
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Isotani H, 2021, PROC IEEE INT CONF S, P535, DOI 10.1109/ICSME52107.2021.00054
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kallis R, 2021, SCI COMPUT PROGRAM, V205, DOI 10.1016/j.scico.2020.102598
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Krischer Lion, 2015, Computational Science and Discovery, V8, DOI 10.1088/1749-4699/8/1/014003
   Lazar A., 2014, Improving the accuracy of duplicate bug report detection using textual similarity measures, P308, DOI [10.1145/2597073.2597088, DOI 10.1145/2597073.2597088]
   Lee T, 2016, IEEE T SOFTWARE ENG, V42, P1015, DOI 10.1109/TSE.2016.2550458
   Lerch J, 2013, EUR CON SFTWR MTNCE, P69, DOI 10.1109/CSMR.2013.17
   Liang Z., 2023, Graph-based relation mining for context-free out-of-vocabulary word embedding learning, P14133
   Lyu YZ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447876
   Ma WWY, 2020, PROC INT CONF SOFTW, P100, DOI 10.1145/3377811.3380442
   Ma WWY, 2017, PROC INT CONF SOFTW, P381, DOI 10.1109/ICSE.2017.42
   Ma WWY, 2016, PROCEEDINGS 2016 THIRD INTERNATIONAL CONFERENCE ON TRUSTWORTHY SYSTEMS AND THEIR APPLICATIONS (TSA), P87, DOI 10.1109/TSA.2016.23
   Majumder S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10068-4
   Meijer E., 2018, Behind every great deep learning framework is an even greater programming languages concept (keynote), DOI [10.1145/3236024.3280855, DOI 10.1145/3236024.3280855]
   Mukaka MM, 2012, MALAWI MED J, V24, P69
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Neysiani BS, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106344
   Oliveira E, 2020, EMPIR SOFTW ENG, V25, P2519, DOI 10.1007/s10664-020-09820-z
   Onishi T., 2020, Distributed representation computation using CBOW model and skip-gram model, P845, DOI [10.1109/IIAI-AAI50415.2020.00179, DOI 10.1109/IIAI-AAI50415.2020.00179]
   Panichella S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106665
   Pérez F, 2011, COMPUT SCI ENG, V13, P13, DOI 10.1109/MCSE.2010.119
   Peters F, 2019, IEEE T SOFTWARE ENG, V45, P615, DOI 10.1109/TSE.2017.2787653
   Pourasghar B, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2020.106469
   Qu Y, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09965-5
   Rahman F., 2012, Recalling the "imprecision" of cross-project defect prediction, DOI [10.1145/2393596.2393669, DOI 10.1145/2393596.2393669]
   Ratner B., 2009, J. Target. Meas. Anal. Mark, V17, P139, DOI [10.1057/jt.2009.5, DOI 10.1057/JT.2009.5]
   Refaeilzadeh P., 2009, ENCYCL DATABASE SYST, V5, P532, DOI DOI 10.1007/978-0-387-39940-9565
   Rocha H., 2015, J SOFTW ENG RES DEV, V3, P3, DOI DOI 10.1186/s40411-015-0018-x
   Rocha H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P46, DOI 10.1109/SANER.2016.87
   Romano J., 2006, Exploring methods for evaluating group differences on the NSSE and other surveys: Are the t-test and Cohen's d indices the most appropriate choices? Documento apresentado no encontro anual da Southern Association for Institutional Research
   Ryu H, 2016, PR INT CONGR SOUND V
   Sabor KK, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2019.106205
   Sabor KK, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P240, DOI 10.1109/QRS.2017.35
   Shen QC, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P968, DOI 10.1145/3468264.3468591
   Shen WJ, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106413
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Shu R, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09906-8
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Tabassum S, 2020, PROC INT CONF SOFTW, P554, DOI 10.1145/3377811.3380403
   Tan Y, 2016, INT C CLOUD COMP BIG, P1, DOI 10.1109/CCBD.2016.012
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Vieira SM, 2010, IEEE INT CONF FUZZY, DOI 10.1109/FUZZY.2010.5584447
   Wang J, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2022.106845
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wu XX, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106530
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xie XY, 2022, IEEE T RELIAB, V71, P250, DOI 10.1109/TR.2021.3074512
   Xu Z, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106452
   Yang XL, 2016, PROC INT SYMP SOFTW, P127, DOI 10.1109/ISSRE.2016.33
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yang YB, 2015, IEEE T SOFTWARE ENG, V41, P331, DOI 10.1109/TSE.2014.2370048
   Yao JX, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106664
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zeng ZR, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P427, DOI 10.1145/3460319.3464819
   Zhao KS, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106652
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
NR 87
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 DEC 26
PY 2023
DI 10.1002/smr.2637
EA DEC 2023
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DE6N3
UT WOS:001130393600001
DA 2024-07-18
ER

PT J
AU Klein, AM
   Deutschländer, J
   Kölln, K
   Rauschenberger, M
   Escalona, MJ
AF Klein, Andreas M.
   Deutschlaender, Jana
   Koelln, Kristina
   Rauschenberger, Maria
   Escalona, Maria Jose
TI Exploring the context of use for voice user interfaces: Toward
   context-dependent user experience quality testing
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE context of use; user experience testing; UX; voice user interface; VUI
AB Voice user interface (VUI) systems, such as Alexa, Siri, and Google Assistant, are popular and widely available. Still, challenges such as privacy and the ability to have a dialog remain. In the latter example, the user expects a human-like conversation, that is, that the VUI understands the dialog and its context. However, this VUI feature of context-aware interaction is rather error prone. For this reason, we intend to explore the VUI context of use and its impact on interaction, that is, relevant user experience (UX). We see a demand for context-dependent UX measurement because analyzing the context of use and UX assessment are both critical human-centered design (HCD) methods. Therefore, we examine the VUI context of use by asking users about how, where, and for what they use VUIs, as well as their UX and improvement proposals. We interviewed people with disabilities who rely on VUIs and people without disabilities who use VUIs for convenience or fun. We identified VUI context-of-use categories and factors and explored their impacts on relevant UX qualities. Our result is a matrix containing these elements; thus, it provides an overview of the contextual UX of our target group's VUI interaction. We intend to develop a VUI context-of-use conceptual structure in the future based on this matrix, which is needed to create an automated context-dependent UX measurement recommendation tool for VUIs. This conceptual structure could also be useful for automated UX testing in the context of VUI.
   Voice user interface (VUI) systems such as Alexa are popular, but challenges remain, for example, privacy and fully understanding the dialog and its context. Therefore, we explored the VUI context of use and its impact on user experience (UX) by interviewing people with and without disabilities. We examined their interaction (e.g., dictation) to identify categories (e.g., environment) and factors (e.g., accent) and their impacts on UX (e.g., understanding). Our results help to meet the demand for automated context-dependent UX measurement recommendations. image
C1 [Klein, Andreas M.; Koelln, Kristina; Escalona, Maria Jose] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
   [Deutschlaender, Jana; Koelln, Kristina; Rauschenberger, Maria] Univ Appl Sci Emden Leer, Fac Technol, Emden, Germany.
C3 University of Sevilla
RP Klein, AM (corresponding author), Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
EM andreas.klein@ux-researchgroup.com
RI Escalona, Maria Jose/G-3900-2010; Rauschenberger, Maria/F-3847-2017
OI Escalona, Maria Jose/0000-0002-6435-1497; Rauschenberger,
   Maria/0000-0001-5722-576X; Klein, Andreas M./0000-0003-3161-1202; Nagel,
   Kristina/0000-0002-8625-4903
FU This work was funded by the EQUAVEL Project (PID2022-137646OB-C31)
   Ministry of Science and Innovation-government of Spain. The authors
   sincerely thank Jessica Kollmorgen and Dominique Winter for their
   support in conducting the interviews. [PID2022-137646OB-C31]; Ministry
   of Science and Innovation-government of Spain
FX This work was funded by the EQUAVEL Project (PID2022-137646OB-C31)
   Ministry of Science and Innovation-government of Spain. The authors
   sincerely thank Jessica Kollmorgen and Dominique Winter for their
   support in conducting the interviews.
CR Alrumayh AS, 2022, HIGH-CONFID COMPUT, V2, DOI 10.1016/j.hcc.2022.100069
   Ammari T, 2019, ACM T COMPUT-HUM INT, V26, DOI 10.1145/3311956
   [Anonymous], 2014, ISO/IEC 25063
   [Anonymous], 2018, ISO 9241-11 tech. rep
   Ansari SG, 2020, IEEE INT CONF SOFTW, P430, DOI 10.1109/ICST46399.2020.00056
   Bentley Frank, 2018, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V2, DOI 10.1145/3264901
   Bhalla A, 2018, INDIAHCI'18: PROCEEDINGS OF THE 9TH INDIAN CONFERENCE ON HUMAN COMPUTER INTERACTION, P90, DOI 10.1145/3297121.3297136
   Cha I, 2021, CHI '21: PROCEEDINGS OF THE 2021 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3411764.3445116
   Clark L, 2019, INTERACT COMPUT, V31, P349, DOI 10.1093/iwc/iwz016
   Cohen M. H., 2004, Voice user interface design
   Corbett E, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON HUMAN-COMPUTER INTERACTION WITH MOBILE DEVICES AND SERVICES (MOBILEHCI'16), P72, DOI 10.1145/2935334.2935386
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Dourish P, 2004, PERS UBIQUIT COMPUT, V8, P19, DOI 10.1007/s00779-003-0253-8
   Fernandes PM, 2021, IEEE ICST WORKSHOP, P247, DOI 10.1109/ICSTW52544.2021.00049
   Francis JJ, 2010, PSYCHOL HEALTH, V25, P1229, DOI 10.1080/08870440903194015
   Frat A., 2022, Model-based test adaptation for smart TVs, P52, DOI [10.1145/3524481.3527237, DOI 10.1145/3524481.3527237]
   Glaser-Zikuda M., 2020, Forum: Qualitative Social Research, V21, P1, DOI 10.17169/fqs-21.1.3443
   Gottwald L., 2016, Mensch und computer 2016-usability professionals, P1
   Guha R, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P275, DOI 10.1145/2684822.2685309
   Hassenzahl M, 2006, BEHAV INFORM TECHNOL, V25, P91, DOI 10.1080/01449290500330331
   Hoy Matthew B., 2018, Medical Reference Services Quarterly, V37, P81, DOI 10.1080/02763869.2018.1404391
   Iniesto F, 2021, Implementing an accessible conversational user interface: applying feedback from university students and disability support advisors, P1, DOI [10.1145/3430263.3452431, DOI 10.1145/3430263.3452431]
   ISO, 2019, Ergonomics of human-system interaction-Part 210: human-centered design for interactive systems
   Ivory MY, 2001, ACM COMPUT SURV, V33, P470, DOI 10.1145/503112.503114
   Karikoski J, 2013, PERS UBIQUIT COMPUT, V17, P491, DOI 10.1007/s00779-011-0503-0
   Kinsella B., 2018, Voice Assistant Consumer Adoption Report
   Klein A., 2021, WORKFORCE, V2, P1
   Klein Andreas M., 2023, Design, Operation and Evaluation of Mobile Communications: 4th International Conference, MOBILE 2023, Held as Part of the 25th HCI International Conference, HCII 2023, Proceedings. Lecture Notes in Computer Science (14052), P167, DOI 10.1007/978-3-031-35921-7_12
   Klein A.M., 2020, 2020 15 IBERIAN C IN, P1, DOI [https://doi.org/10.23919/CISTI49556.2020.9140966, DOI 10.23919/CISTI49556.2020.9140966]
   Klein AM., 2023, Protocol for Exploring the context of use for voice user interfaces: towards context- dependent user experience quality testing [Data set], DOI [10.13140/RG.2.2.31005.69606, DOI 10.13140/RG.2.2.31005.69606]
   Klein AM, 2021, J WEB ENG, V20, P1991, DOI 10.13052/jwe1540-9589.2071
   Knote R., 2018, The what and how of smart personal assistants: principles and application domains for IS research, P1083
   Kocabalil A. B., 2018, Proc. of British Computer Society Human Computer Interaction Conference (BCS HCI'18), P1
   Korhonen H., 2010, Analysing user experience of personal mobile products through contextual factors, P1, DOI [10.1145/1899475.1899486, DOI 10.1145/1899475.1899486]
   Kuckartz Udo., 2019, Qualitative Social Research, V20, DOI [10.17169/fqs-20.3, DOI 10.17169/FQS-20.3, 10.17169/fqs-20.3.3370]
   Lallemand C., 2020, Measuring the Contextual Dimension of User Experience: Development of the User Experience Context Scale (UXCS), DOI [10.1145/3419249.3420156, DOI 10.1145/3419249.3420156]
   Lau Josephine, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274371
   Laugwitz B, 2008, LECT NOTES COMPUT SC, V5298, P63, DOI 10.1007/978-3-540-89350-9_6
   Lister K, 2020, 17TH INTERNATIONAL WEB FOR ALL CONFERENCE (WEB4ALL), DOI 10.1145/3371300.3383343
   Luger E, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P5286, DOI 10.1145/2858036.2858288
   Mairesse F, 2010, USER MODEL USER-ADAP, V20, P227, DOI 10.1007/s11257-010-9076-2
   Masina F., 2020, J Med Int Res, V22, P1
   Mayring P., 2004, Qualitative content analysis: theoretical foundation, basic procedures and software solution, V1, P159
   Moorthy AE, 2014, LECT NOTES COMPUT SC, V8522, P324, DOI 10.1007/978-3-319-07863-2_32
   Neumann M., 2023, "We Need To Talk About ChatGPT": The future of AI and higher education
   Obrist M., 2010, Chi '10 extended abstracts on human factors in computing systems, P3197, DOI [10.1145/1753846.1753956, DOI 10.1145/1753846.1753956]
   Pailleur Felix, 2020, Human-Computer Interaction. Multimodal and Natural Interaction. Thematic Area, HCI 2020 Held as Part of the 22nd International Conference, HCII 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12182), P197, DOI 10.1007/978-3-030-49062-1_13
   Porcheron M, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P207, DOI 10.1145/2998181.2998298
   Porcheron M, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174214
   Pradhan A, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174033
   Prodigioso Volcan, 2020, With P from pandemic podcast II Voice and audio study in Spain
   Pyae A., 2018, P 20 INT C HUM COMP, P127, DOI 10.1145/3236112.3236130
   Rauschenberger M., 2021, Acceptance by Design : Voice Assistants, P23, DOI [10.25673/38471, DOI 10.25673/38471]
   Rauschenberger M, 2013, INT J INTERACT MULTI, V2, P39, DOI 10.9781/ijimai.2013.215
   Rolland C., 1998, Requirements Engineering, V3, P23, DOI 10.1007/BF02802919
   Roy Q, 2021, PROCEEDINGS OF THE 9TH INTERNATIONAL USER MODELING, ADAPTATION AND PERSONALIZATION HUMAN-AGENT INTERACTION, HAI 2021, P174, DOI 10.1145/3472307.3484173
   Schrepp M., 2021, Mensch und computer 2021-workshopband, P1
   Schrepp M, 2019, INT J INTERACT MULTI, V5, P88, DOI 10.9781/ijimai.2019.06.006
   Schwartz EH., 2022, Alexa beats Google assistant and Siri in voice assistant popularity as voice AI market expands
   Sciuto A, 2018, DIS 2018: PROCEEDINGS OF THE 2018 DESIGNING INTERACTIVE SYSTEMS CONFERENCE, P857, DOI 10.1145/3196709.3196772
   Soikkeli T, 2014, J UNIVERS COMPUT SCI, V20, P1964
   SPLENDIDRESEARCH GmbH, 2019, Digitale Sprachassistenten
   Tabassum Madiha, 2019, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V3, DOI 10.1145/3369807
   Tas S., 2019, Voice Assistants in Germany
   Vacher M, 2014, LREC 2014 - NINTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P4499
   Vacher M, 2015, ACM T ACCESS COMPUT, V7, DOI 10.1145/2738047
   Vimalkumar M, 2021, COMPUT HUM BEHAV, V120, DOI 10.1016/j.chb.2021.106763
   Yesilada Y., 2019, Human-Computer Interaction Series, V2nd, DOI [10.1007/978-1-4471-7440-0https://books.google.de/books?hl=de&lr=&id=FmabDwAAQBAJ&oi=fnd&pg=PR5&ots=nlWD8h2kSv&sig=lUT4WebYYmabf9Pm7gJFNT7bYnY#v=onepage&q%&f=false, DOI 10.1007/978-1-4471-7440-0HTTPS://BOOKS.GOOGLE.DE/BOOKS?HL=DE&LR=&ID=FMABDWAAQBAJ&OI=FND&PG=PR5&OTS=NLWD8H2KSV&SIG=LUT4WEBYYMABF9PM7GJFNT7BYNY#V=ONEPAGE&Q%&F=FALSE]
NR 68
TC 2
Z9 2
U1 6
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 NOV 14
PY 2023
DI 10.1002/smr.2618
EA NOV 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X9TN8
UT WOS:001101800200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Nhung, HLTK
   Van Hai, V
   Silhavy, P
   Prokopova, Z
   Silhavy, R
AF Ho Le Thi Kim Nhung
   Vo Van Hai
   Silhavy, Petr
   Prokopova, Zdenka
   Silhavy, Radek
TI Incorporating statistical and machine learning techniques into the
   optimization of correction factors for software development effort
   estimation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE optimizing correction factors; software development effort estimation;
   staked generalization ensemble; statistical and machine learning
   techniques
ID FEATURE-SELECTION; PROJECT EFFORT; RANDOM FOREST; MODEL; REGRESSION;
   ENSEMBLES
AB Accurate effort estimation is necessary for efficient management of software development projects, as it relates to human resource management. Ensemble methods, which employ multiple statistical and machine learning techniques, are more robust, reliable, and accurate effort estimation techniques. This study develops a stacking ensemble model based on optimization correction factors by integrating seven statistical and machine learning techniques (K-nearest neighbor, random forest, support vector regression, multilayer perception, gradient boosting, linear regression, and decision tree). The grid search optimization method is used to obtain valid search ranges and optimal configuration values, allowing more accurate estimation. We conducted experiments to compare the proposed method with related methods, such as use case points-based single methods, optimization correction factors-based single methods, and ensemble methods. The estimation accuracies of the methods were evaluated using statistical tests and unbiased performance measures on a total of four datasets, thus demonstrating the effectiveness of the proposed method more clearly. The proposed method successfully maintained its estimation accuracy across the four experimental datasets and gave the best results in terms of the sum of squares errors, mean absolute error, root mean square error, mean balance relative error, mean inverted balance relative error, median of magnitude of relative error, and percentage of prediction (0.25). The p-value for the t-test showed that the proposed method is statistically superior to other methods in terms of estimation accuracy. The results show that the proposed method is a comprehensive approach for improving estimation accuracy and minimizing project risks in the early stages of software development.
C1 [Ho Le Thi Kim Nhung] Univ Sci Vietnam Natl Univ, Fac Informat Technol, Ho Chi Minh City, Vietnam.
   [Vo Van Hai] Ind Univ Ho Chi Minh City, Fac Informat Technol, Ho Chi Minh City, Vietnam.
   [Silhavy, Petr; Prokopova, Zdenka; Silhavy, Radek] Tomas Bata Univ Zlin, Fac Appl Informat, Stranemi 4511, Zlin 76001, Czech Republic.
C3 Vietnam National University Hochiminh City; Industrial University of Ho
   Chi Minh City; Tomas Bata University Zlin
RP Silhavy, R (corresponding author), Tomas Bata Univ Zlin, Fac Appl Informat, Stranemi 4511, Zlin 76001, Czech Republic.
EM rsilhavy@utb.cz
RI Li, Pengfei/L-2703-2018; Van Hai, Vo/AEP-1396-2022; Silhavy,
   Radek/H-6422-2012
OI Van Hai, Vo/0000-0002-5427-1960; Silhavy, Radek/0000-0002-5637-8796; Ho
   Le Thi Kim, Nhung/0000-0002-3270-9343
FU Tomas Bata University in Zlin [RVO/FAI/2021/002, IGA/CebiaTech/2022/001]
FX Tomas Bata University in Zlin, Grant/Award Numbers: RVO/FAI/2021/002,
   IGA/CebiaTech/2022/001
CR Abdelali Zakrani, 2019, Smart Data and Computational Intelligence. Proceedings of the International Conference on Advanced Information Technology, Services and Systems (AIT2S-18). Lecture Notes in Networks and Systems (LNNS 66), P55, DOI 10.1007/978-3-030-11914-0_6
   Abdelali Z, 2019, PROCEDIA COMPUT SCI, V148, P343, DOI 10.1016/j.procs.2019.01.042
   Abdulmajeed Ashraf Abdulmunim, 2021, Journal of Physics: Conference Series, V1897, DOI 10.1088/1742-6596/1897/1/012029
   Alhazmi O. H., 2020, J. Softw. Eng. Appl, V13, P143, DOI [10.4236/jsea.2020.137010, DOI 10.4236/JSEA.2020.137010]
   Ali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2211
   [Anonymous], 2016, Practical Machine Learning
   [Anonymous], 2006, J. Math. Model. Algorithms
   Azzeh M, 2022, SCI COMPUT PROGRAM, V219, DOI 10.1016/j.scico.2022.102819
   Azzeh M, 2021, SCI COMPUT PROGRAM, V204, DOI 10.1016/j.scico.2020.102596
   Azzeh M, 2018, IET SOFTW, V12, P19, DOI 10.1049/iet-sen.2016.0322
   Azzeh M, 2016, APPL SOFT COMPUT, V49, P981, DOI 10.1016/j.asoc.2016.05.008
   Azzeh M, 2016, NEURAL COMPUT APPL, V27, P2241, DOI 10.1007/s00521-015-2004-y
   Azzeh M, 2015, J SYST SOFTWARE, V103, P36, DOI 10.1016/j.jss.2015.01.028
   BAILEY T, 1978, IEEE T SYST MAN CYB, V8, P311
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boehm BW., 1981, Software Engineering Economics
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Cabral JTHD, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110904
   Cawley GC, 2010, J MACH LEARN RES, V11, P2079
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Elish MO, 2013, 2013 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING (CIDM), P316, DOI 10.1109/CIDM.2013.6597253
   Elish MO, 2013, MATH PROBL ENG, V2013, DOI 10.1155/2013/312067
   Fonti V., 2017, FEATURE SELECTION US
   García-Floriano A, 2018, INFORM SOFTWARE TECH, V97, P99, DOI 10.1016/j.infsof.2018.01.003
   Golberg M., 2010, Introduction to Regression Analysis
   Hastie T., 2001, ELEMENTS STAT LEARNI, DOI 10.1007/978-0-387-84858-7_2
   Haykin S., 1999, NEURAL NETWORKS COMP, DOI [10.1017/S0269888998214044, DOI 10.1017/S0269888998214044]
   Hidmi O., 2017, International Journal of Computing, Communication and Instrumentation Engineering, V4, P143
   Nhung HLTK, 2022, IEEE ACCESS, V10, P2963, DOI 10.1109/ACCESS.2021.3139183
   Hosni M, 2016, INT CONF SOFT COMP, P174, DOI 10.1109/ISCMI.2016.15
   Hosni M, 2018, SOFT COMPUT, V22, P5977, DOI 10.1007/s00500-017-2945-4
   Huang CL, 2006, EXPERT SYST APPL, V31, P231, DOI 10.1016/j.eswa.2005.09.024
   Hussain A, 2021, IET SOFTW, V15, P230, DOI 10.1049/sfw2.12020
   Idri A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1925
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Karner G., 1993, Resource Estimation for Objectory Projects
   Khoshgoftaar TM, 2005, INTELL DATA ANAL, V9, P3, DOI 10.3233/IDA-2005-9102
   Kocaguneli E., 2009, S SOFTW REL ENG ISSR
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Krstajic D, 2014, J CHEMINFORMATICS, V6, DOI 10.1186/1758-2946-6-10
   Kumar PS, 2020, COMPUT SCI REV, V38, DOI 10.1016/j.cosrev.2020.100288
   Kumar TM., 2018, INT J ENG TECHNOL, V7, P294
   Nam LNH, 2017, INT J UNCERTAIN FUZZ, V25, P235, DOI 10.1142/S021848851750009X
   Linoff G. S., 2011, Data mining techniques: for marketing, sales, and customer relationship management, V3
   Mahmood Y., 2020, 2020 INT C ELECT COM, P1, DOI DOI 10.1109/ICECCE49384.2020.9179279
   Mahmood Y, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2245
   Malgonde O, 2019, EMPIR SOFTW ENG, V24, P1017, DOI 10.1007/s10664-018-9647-0
   Marapelli B., 2019, INT J INNOVATIVE TEC, V9, P1043, DOI [10.35940/ijitee.K2306, DOI 10.35940/IJITEE.K2306]
   Marapelli B., 2021, INT C EL COMP EN TEC, P1
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   MOLLER MF, 1993, NEURAL NETWORKS, V6, P525, DOI 10.1016/S0893-6080(05)80056-5
   Mustafa AB., 2018, PREDICTING SOFTWARE
   Muthukrishnan R, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER APPLICATIONS (ICACA), P18, DOI 10.1109/ICACA.2016.7887916
   Myrtveit I, 2012, EMPIR SOFTW ENG, V17, P23, DOI 10.1007/s10664-011-9183-7
   Najm A., 2019, 2019 INT C COMP SCI, P1
   Nhung HLTK., 2020, ADV INTELLIGENT SYST
   Nhung HLTK., 2019, INTELLIGENT SYSTEMS, DOI [10.1007/978-3-030-30329-7_44, DOI 10.1007/978]
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P200, DOI 10.1016/j.infsof.2010.10.005
   Pahariya J. S., 2009, Proceedings of the 2009 World Congress on Nature & Biologically Inspired Computing (NaBIC 2009), P849, DOI 10.1109/NABIC.2009.5393534
   Pospieszny P, 2018, J SYST SOFTWARE, V137, P184, DOI 10.1016/j.jss.2017.11.066
   Pourjafari E, 2019, IEEE ACCESS, V7, P93352, DOI 10.1109/ACCESS.2019.2928173
   Quinlan J.R., 1993, C45 PROGRAM MACHINE
   Satapathy SM, 2017, INNOV SYST SOFTW ENG, V13, P191, DOI 10.1007/s11334-017-0288-z
   Satapathy SM, 2016, IET SOFTW, V10, P10, DOI 10.1049/iet-sen.2014.0122
   Schapire RE, 1998, ANN STAT, V26, P1651
   Sharma P, 2018, 2018 INTERNATIONAL CONFERENCE ON COMPUTING, POWER AND COMMUNICATION TECHNOLOGIES (GUCON), P716, DOI 10.1109/GUCON.2018.8674908
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shukla S., 2021, INT C EV NOV APPR SO
   Shukla S., 2019, IEEE WORLD C SERVICE
   Shukla S, 2019, IEEE WORLD CONGR SER, P339, DOI 10.1109/SERVICES.2019.00094
   Silhavy R, 2021, ELECTRONICS-SWITZ, V10, DOI 10.3390/electronics10050592
   Silhavy R, 2017, J SYST SOFTWARE, V125, P1, DOI 10.1016/j.jss.2016.11.029
   Silhavy R, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0141887
   Singh AJ., 2020, INTELLIGENT COMMUNIC
   Srichandan S., 2012, INT J ADV COMPUTER T, V1, P113
   Subriadi Apol Pribadi, 2014, Journal of Theoretical and Applied Information Technology, V59, P735
   Kumar PS, 2022, INNOV SYST SOFTW ENG, V18, P283, DOI 10.1007/s11334-020-00379-y
   Trendowicz A., 2014, FDN BEST PRACTICE GU, DOI [10.1007/978-3-319-03629-8, DOI 10.1007/978]
   Tulai AF, 2004, LECT NOTES COMPUT SC, V3103, P1263
   Van der Lann MJ., 2003, UC BERKELEY DIVISION
   van der Vaart A, 2006, STATIST RISK MODEL, V24, P351, DOI 10.1524/stnd.2006.24.3.351
   Varshini A. G. P., 2020, INDIAN J SCI TECHNOL, V13, P2103, DOI DOI 10.17485/IJST/v13i21.573
   Varshini AGP, 2021, ELECTRONICS-SWITZ, V10, DOI 10.3390/electronics10101195
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   WOLPERT DH, 1992, NEURAL NETWORKS, V5, P241, DOI 10.1016/S0893-6080(05)80023-1
   XU L, 1992, IEEE T SYST MAN CYB, V22, P418, DOI 10.1109/21.155943
   Zakaria NA, 2021, INT J ADV COMPUT SC, V12, P726
NR 88
TC 1
Z9 1
U1 3
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2024
VL 36
IS 5
AR e2611
DI 10.1002/smr.2611
EA AUG 2023
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PW3G9
UT WOS:001106698900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Fu, Y
   Ren, M
   Ma, FC
   Yang, X
   Shi, HY
   Li, SS
   Liao, XK
AF Fu, Ying
   Ren, Meng
   Ma, Fuchen
   Yang, Xin
   Shi, Heyuan
   Li, Shanshan
   Liao, Xiangke
TI EVMFuzz: Differential fuzz testing of Ethereum virtual machine
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE differential testing; domain-specific mutation; EVM; fuzzing
AB The vulnerabilities in Ethereum virtual machine (EVM) may lead to serious problems for the Ethereum ecosystem. With lots of techniques being developed for the validation of smart contracts, the testing of EVM has not been well-studied. In this paper, we propose EVMFuzz, the first that uses the differential fuzzing technique to detect vulnerabilities in EVM. The core idea of EVMFuzz is to continuously generate seed contracts for different EVMs' execution, so as to find as many inconsistencies among execution results as possible, and eventually discover vulnerabilities with output cross-referencing. First, we present the evaluation metric for the internal inconsistency indicator. Then, we construct seed contracts via predefined mutators and employ a dynamic priority scheduling algorithm to guide seed contract selection and maximize the inconsistency. Finally, we leverage different EVMs as cross-referencing oracles avoiding manual checking. For evaluation, we selected four widely used EVMs for the test, conducted large-scale mutation on 36,295 real-world smart contracts, and generated 253,153 smart contracts as initial seeds. Accompanied by manual root cause analysis, we found five previously unknown security bugs and all had been included in the common vulnerabilities and exposures (CVE) database.
C1 [Fu, Ying; Li, Shanshan; Liao, Xiangke] Natl Univ Def Technol, Sch Comp, Changsha, Hunan, Peoples R China.
   [Ren, Meng; Ma, Fuchen; Yang, Xin] Tsinghua Univ, Sch Software, Beijing, Peoples R China.
   [Shi, Heyuan] Cent South Univ, Big Data Inst, Changsha, Hunan, Peoples R China.
C3 National University of Defense Technology - China; Tsinghua University;
   Central South University
RP Li, SS (corresponding author), Natl Univ Def Technol, Sch Comp, Changsha, Hunan, Peoples R China.
EM fuying@nudt.edu.cn; shanshanli@nudt.edu.cn
RI Li, Shan-Shan/JYO-4085-2024; Shan-Shan, Li/Q-9503-2017
OI Li, Shan-Shan/0000-0002-9346-2364; Ren, Meng/0000-0003-2639-3941; Fu,
   Ying/0000-0001-5329-2586
FU National Key Research and Development Program of China [2022YFB3104000,
   2022YFB3104003]; National Natural Science Foundation of China [61872373,
   62272473, 62202500, 62177046]; Hunan Natural Science Foundation
   [2021JJ30866]
FX ACKNOWLEDGMENTS This work is supported by the National Key Research and
   Development Program of China (Nos. 2022YFB3104000 and 2022YFB3104003),
   National Natural Science Foundation of China (Nos. 61872373, 62272473,
   62202500, and 62177046), and Hunan Natural Science Foundation (No.
   2021JJ30866).
CR Atzei Nicola, 2016, IACR Cryptology ePrint Archive, V2016, P1007
   Bohme M., 2016, P 2016 ACM SIGSAC C, P1032, DOI DOI 10.1145/2976749.2978428
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Chen Y., 2018, ENFUZZ ENSEMBLE LEAR
   Chen YT, 2016, ACM SIGPLAN NOTICES, V51, P85, DOI [10.1145/2980983.2908095, 10.1145/2908080.2908095]
   Ethereum, 2018, ABOUT US
   Ethereum, 2018, PYTH IMPL EVM
   Ethereum, 2018, GO ETHEREUM
   Ethereum, 2018, ETH C CLIENT TOOLS L
   EthereumJS, 2018, ETH VM IMPL JAV
   Etherscan, 2018, ETH ETH BLOCKCH EXPL
   Etherscan, 2018, ETH T HIST
   Fu J., 2022, 37 IEEE ACM INT C AU, P1
   Fu Y, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1110, DOI 10.1145/3338906.3341175
   Google, 2015, American fuzzy lop
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Hirai Yoichi, 2016, Formal verification of deed contract in Ethereum name service
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kersten ML., 2011, SQALPEL DATABASE PER
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Liang HL, 2018, IEEE T RELIAB, V67, P1199, DOI 10.1109/TR.2018.2834476
   Liang J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P809, DOI 10.1145/3236024.3275525
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Ma F., 2018, ACM T INT TECHNOLO T
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   MITRE, 2018, TOT CVE ENTR
   Newsham, 2015, TRIFORCEAFL AFL QEM
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Ren M, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P666, DOI 10.1145/3460319.3469078
   Schumilo S, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P167
   Shen YH, 2022, IEEE T COMPUT AID D, V41, P4563, DOI 10.1109/TCAD.2022.3198910
   Shen YH, 2021, ACM T EMBED COMPUT S, V20, DOI 10.1145/3477014
   Wang J., 2018, QUANFUZZ FUZZ TESTIN
   Wang MZ, 2018, PROC IEEE ACM INT C, P61, DOI 10.1145/3183440.3183494
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Zero GP., 2015, WINAFL FORK AFL FUZZ
NR 38
TC 0
Z9 0
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2024
VL 36
IS 4
AR e2556
DI 10.1002/smr.2556
EA MAR 2023
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MU0E5
UT WOS:000952107100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Martins, L
   Costa, H
   Machado, I
AF Martins, Luana
   Costa, Heitor
   Machado, Ivan
TI On the diffusion of test smells and their relationship with test code
   quality of Java projects
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Dataset; Replication study; Structural metrics; Test smells
ID METRICS
AB Test smells are considered bad practices that can reduce the test code quality, thus harming software testing goals and maintenance activities. Prior studies have investigated the diffusion of test smells and their impact on test code maintainability. However, we cannot directly compare the outcomes of the studies as most of them use customized datasets. In response, we introduced the TSSM (Test Smells and Structural Metrics) dataset, containing test smells detected using the JNose Test tool and structural metrics (test code and production code) calculated with the CK metrics tool of 13,703 open-source Java systems from GitHub. In addition, we perform an empirical study to investigate the relationship between test smells and structural metrics of test code and the relationship between test smells on a large-scale dataset. We split the projects into three clusters to analyze the distribution of test smells, the co-occurrences among test smells, and the correlation of test smells and structural metrics of test code. The ratio of smelly test classes with a specific test smell is similar among the clusters, but we could observe a significant difference in the number of test smells among them. The test smells Sleepy Test, Mystery Guest, and Resource Optimism rarely occur in the three clusters, and the last two are strongly correlated, indicating that those test smells are more severe than others. Our results point out that most test smells have a moderate correlation with high complexity, large size, and coupling of the test code, indicating that they can also negatively affect its quality. To support further studies, we made our dataset publicly available.
C1 [Martins, Luana; Machado, Ivan] Univ Fed Bahia, Inst Comp, Salvador, BA, Brazil.
   [Costa, Heitor] Univ Fed Lavras, Dept Comp Sci, Lavras, Brazil.
C3 Universidade Federal da Bahia; Universidade Federal de Lavras
RP Martins, L (corresponding author), Univ Fed Bahia, Inst Comp, Salvador, BA, Brazil.
EM martins.luana@ufba.br
RI Machado, Isabel C/I-6935-2012
OI Costa, Heitor/0000-0002-9903-7414; Martins, Luana/0000-0001-6340-7615;
   Machado, Ivan/0000-0001-9027-2293
FU Coordenacao de Aperfeicoamento de Pessoalde Nivel Superior [001];
   Fundacao de Amparo a Pesquisa do Estado da Bahia [JCB0060/2016,
   BOL0188/2020]
FX Coordenacao de Aperfeicoamento de Pessoalde Nivel Superior, Grant/Award
   Number: 001;Fundacao de Amparo a Pesquisa do Estado da Bahia,
   Grant/Award Numbers: JCB0060/2016,BOL0188/2020
CR Aljedaani W, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P170, DOI 10.1145/3463274.3463335
   Aniche M., 2022, JAVA CODE METRICS CA
   Baker P, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P90, DOI 10.1109/TAIC-PART.2006.35
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Bladel B., 2018, INT WORKSHOP REFACTO, P22, DOI DOI 10.1145/3242163.3242168
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chowdhury SA, 2022, IEEE WORK CONF MIN S, P252, DOI 10.1145/3524842.3527975
   Counsell S., 2007, 4 INT WORKSH SOFTW Q, P31
   De Bleser Jonas, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P457, DOI 10.1109/MSR.2019.00072
   Deursen A., 2001, Refactoring Test Code
   Durieux T, 2021, IEEE WORK CONF MIN S, P545, DOI 10.1109/MSR52588.2021.00071
   Fernandes Daniel, 2021, SBES '21: Brazilian Symposium on Software Engineering, P84, DOI 10.1145/3474624.3477066
   Fogel Karl, 2005, Producing Open Source Software: How to Run a Successful Free Software Project, V1st
   Garousi V, 2019, IEEE SOFTWARE, V36, P61, DOI 10.1109/MS.2018.2875843
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Gatrell M., 2009, P 13 INT C EV ASS SO, P1
   Gold NE, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10057-7
   Grano G, 2019, J SYST SOFTWARE, V156, P312, DOI 10.1016/j.jss.2019.07.016
   Greiler M, 2013, IEEE WORK CONF MIN S, P387, DOI 10.1109/MSR.2013.6624053
   Greiler M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P322, DOI 10.1109/ICST.2013.45
   Guerra EM., 2007, P INT C SOFTW ENG AD, P44, DOI [DOI 10.1109/ICSEA.2007.57, 10.1109/ICSEA.2007.57]
   Hadj-Kacem M, 2022, J KING SAUD UNIV-COM, V34, P8692, DOI 10.1016/j.jksuci.2021.10.008
   Hauke J, 2011, QUAEST GEOGR, V30, P87, DOI 10.2478/v10117-011-0021-1
   Jarczyk O, 2014, LECT NOTES COMPUT SC, V8851, P80, DOI 10.1007/978-3-319-13734-6_6
   Jorge Dalton, 2021, SAST'21: Brazilian Symposium on Systematic and Automated Software Testing, P36, DOI 10.1145/3482909.3482915
   Junior NS., 2022, J SOFTW ENG RES DEV, V9
   Kim DJ, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09969-1
   Kochhar PS, 2013, EUR CON SFTWR MTNCE, P353, DOI 10.1109/CSMR.2013.48
   Koochakzadeh Negar, 2010, Advances in Software Engineering, DOI 10.1155/2010/932686
   Lambiase S, 2020, INT C PROGRAM COMPRE, P441, DOI 10.1145/3387904.3389296
   Loriot B., 2022, ARXIV
   Martinez M, 2020, PROC INT CONF SOFTW, P69, DOI 10.1145/3377812.3382151
   Martins L., 2021, 35 BRAZ S SOFTW ENG, P115
   Meszaros G, 2003, LECT NOTES COMPUT SC, V2753, P73
   Palomba F, 2018, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2018.00040
   Palomba F, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI [10.1145/2897010.2897016, 10.1109/SBST.2016.010]
   Panichella A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10207-5
   Pecorelli F, 2020, INT C PROGRAM COMPRE, P296, DOI 10.1145/3387904.3389256
   Peruma A., 2019, P 29 ANN INT C COMP, P193, DOI DOI 10.5555/3370272.3370293
   Peruma A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1650, DOI 10.1145/3368089.3417921
   Qusef A, 2019, IEEE ACCESS, V7, P139526, DOI 10.1109/ACCESS.2019.2943488
   Reichhart S, 2007, J OBJECT TECHNOL, V6, P231, DOI 10.5381/jot.2007.6.9.a12
   Salkind N., 2012, EXPLORING RES, V8th
   Santana Railana, 2021, SBES '21: Brazilian Symposium on Software Engineering, P49, DOI 10.1145/3474624.3474639
   Santana Railana, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P374, DOI 10.1145/3422392.3422510
   Soares E, 2023, IEEE T SOFTWARE ENG, V49, P1152, DOI 10.1109/TSE.2022.3172654
   Soares E, 2020, PROCEEDINGS OF THE 5TH BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING, SAST 2020, P50, DOI 10.1145/3425174.3425212
   Spadini D, 2020, IEEE WORK CONF MIN S, P311, DOI 10.1145/3379597.3387453
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Tahir A, 2016, ASIA PAC SOFWR ENG, P137, DOI [10.1109/APSEC.2016.029, 10.1109/APSEC.2016.34]
   THEODORSSONNORHEIM E, 1986, COMPUT METH PROG BIO, V23, P57, DOI 10.1016/0169-2607(86)90081-7
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Van Rompaey B, 2006, PROC IEEE INT CONF S, P391
   Virginio Tassio, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P564, DOI 10.1145/3422392.3422499
   Virginio Tassio, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P92, DOI 10.1145/3422392.3422412
   Virgínio T, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P467, DOI 10.1145/3350768.3350775
   Virgnio T., 2021, J SOFTW ENG RES DEV, V9, P1
   Zeiss B, 2006, LECT NOTES COMPUT SC, V4320, P148
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
NR 61
TC 2
Z9 2
U1 1
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2024
VL 36
IS 4
DI 10.1002/smr.2532
EA JAN 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MU0E5
UT WOS:000914883300001
DA 2024-07-18
ER

PT J
AU Ahmad, MO
   Ahmad, I
   Qayum, F
AF Ahmad, Muhammad Ovais
   Ahmad, Iftikhar
   Qayum, Fawad
TI Early career software developers and work preferences in software
   engineering
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Five-Factor Model; personality; software engineering
ID PERSONALITY-TRAITS; INTELLIGENCE; PERSPECTIVE; IMPACT; MODEL
AB Context: The software engineering researchers and practitioners echoed the need for investigations to better understand the engineers developing software and services. In light of current studies, there are significant associations between the personalities of software engineers and their work preferences. However, limited studies are using psychometric measurements in software engineering. Objective: We aim to evaluate attitudes of early-stage software engineers and investigate link between their personalities and work preferences. Method: We collected extensive psychometric data from 303 graduate-level students in Computer Science programs at four Pakistani and one Swedish university using Five-Factor Model. The statistical analysis investigated associations between various personality traits and work preferences. Results: The data support the existence of two clusters of software engineers, one of which is more highly rated across the board. Numerous correlations exist between personality qualities and the preferred types of employment for software developers. For instance, those who exhibit greater levels of emotional stability, agreeableness, extroversion, and conscientiousness like working on technical activities on a set timetable. Similar relationships between personalities and occupational choices are also evident in the earlier studies. More neuroticism is reported in female respondents than in male respondents. Higher intelligence was demonstrated by those who worked on the "entire development process" and "technical components of the project." Conclusion: When assigning project tasks to software engineers, managers might use the statistically significant relationships that emerged from the analysis of personality attributes. It would be beneficial to construct effective teams by taking personality factors like extraversion and agreeableness into consideration. The study techniques and analytical tools we use may identify subtle relationships and reflect distinctions across various groups and populations, making them valuable resources for both future academic research and industrial practice.
C1 [Ahmad, Muhammad Ovais] Karlstad Univ, Dept Math & Comp Sci, Karlstad, Sweden.
   [Ahmad, Iftikhar] Univ Engn & Technol, Dept Comp Sci & Informat Technol, Peshawar, Pakistan.
   [Qayum, Fawad] Univ Malakand, Dept Comp Sci & IT, Chakdara, Pakistan.
C3 Karlstad University; University of Engineering & Technology Peshawar;
   University of Malakand
RP Ahmad, I (corresponding author), Univ Engn & Technol, Peshawar, Pakistan.
EM ia@uetpeshawar.edu.pk
RI Ahmad, Iftikhar/ABE-5182-2021; Ahmad, Muhamamd Ovais/F-7679-2012
OI Ahmad, Iftikhar/0000-0001-7863-3746; Ahmad, Muhamamd
   Ovais/0000-0002-7885-0369
CR Acuna ST., 2006, SOFTWARE PROCESS MOD, V10
   Amin A, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106405
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   Atkinson R.L., 1990, Introduction to psychology, V10th
   Balijepally V, 2006, COMMUN ASSOC INF SYS, V18, P55
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Bell D, 2010, SIGMIS CPR '10: PROCEEDINGS OF THE 2010 ACM SIGMIS COMPUTER PERSONNEL RESEARCH CONFERENCE, P43
   BLACK KR, 1994, AM BUS LAW J, V32, P69, DOI 10.1111/j.1744-1714.1994.tb00931.x
   Briggs-Mayers I., 1998, GUIDE DEV USE MYERS
   Broen MPG, 2015, PARKINSONISM RELAT D, V21, P142, DOI 10.1016/j.parkreldis.2014.11.016
   Capretz L. F., 2010, ACM SIGSOFT Software Engineering Notes, V35, P1, DOI DOI 10.1145/1734103.1734111
   Capretz LF, 2017, INFORM SOFTWARE TECH, V92, P92, DOI 10.1016/j.infsof.2017.07.011
   Costa P.T., 1992, REVISED NEO PERSONAL
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Da Cunha AD, 2007, COMMUN ACM, V50, P109, DOI 10.1145/1230819.1241672
   Daun M., 2015, 19 INT C EV ASS SOFT, P1
   DeMarco T., 2013, Peopleware: productive projects and teams
   Donnellan MB, 2006, PSYCHOL ASSESSMENT, V18, P192, DOI 10.1037/1040-3590.18.2.192
   Feist G J, 1998, Pers Soc Psychol Rev, V2, P290, DOI 10.1207/s15327957pspr0204_5
   Feldt R., 2008, 2008 INT WORKSH COOP, P49
   Feldt R, 2018, EMPIR SOFTW ENG, V23, P3801, DOI 10.1007/s10664-018-9655-0
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Goldberg L. R., 1999, PERSONALITY PSYCHOL, V7, P7, DOI DOI 10.1016/J.JRP.2014.05.003
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Hewner M, 2010, SIGCSE 10: PROCEEDINGS OF THE 41ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P275
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Kanij T, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P1, DOI 10.1109/CHASE.2015.7
   Kaufman SB, 2013, J CREATIVE BEHAV, V47, P233, DOI 10.1002/jocb.33
   Kosti MV, 2016, EMPIR SOFTW ENG, V21, P1509, DOI 10.1007/s10664-015-9395-3
   Kosti MV, 2014, INFORM SOFTWARE TECH, V56, P973, DOI 10.1016/j.infsof.2014.03.004
   Lee J.M., 1978, P 1978 ANN C, V2, P561, DOI [10.1145/800178.810092, DOI 10.1145/800178.810092]
   Li PL, 2020, EMPIR SOFTW ENG, V25, P322, DOI 10.1007/s10664-019-09773-y
   Lucas RE, 2009, DEV PSYCHOL, V45, P1353, DOI 10.1037/a0013914
   Lynn R, 1997, J SOC PSYCHOL, V137, P369, DOI 10.1080/00224549709595447
   MCCRAE RR, 1989, J PERS, V57, P17, DOI 10.1111/j.1467-6494.1989.tb00759.x
   MCCRAE RR, 1985, J PERS SOC PSYCHOL, V49, P710, DOI 10.1037/0022-3514.49.3.710
   Morgeson FP, 2005, PERS PSYCHOL, V58, P583, DOI 10.1111/j.1744-6570.2005.655.x
   Mount M.K., 1995, RES PERSONNEL HUMAN, V13, P153, DOI DOI 10.1111/J.1744-6570.1991.TB00688.X
   Rehman M., 2012, Proceedings of the 2012 International Conference on Computer & Information Science (ICCIS), P1115, DOI 10.1109/ICCISci.2012.6297193
   Roberts BW, 2005, PERS PSYCHOL, V58, P103, DOI 10.1111/j.1744-6570.2005.00301.x
   Russo D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10106-1
   Sabine J., 1995, SOC PSYCHOL-GERMANY
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Salleh N, 2009, INT SYMP EMP SOFTWAR, P214, DOI 10.1109/ESEM.2009.5315997
   Schneiderman Ben., 1980, Software Psychology: Human Factors in Computer and Information Systems
   Sfetsos P, 2009, EMPIR SOFTW ENG, V14, P187, DOI 10.1007/s10664-008-9093-5
   Smith EK, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P15, DOI [10.1145/2897586.2897596, 10.1109/CHASE.2016.011]
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Taber KS, 2018, RES SCI EDUC, V48, P1273, DOI 10.1007/s11165-016-9602-2
   Thompson ER, 2008, PERS INDIV DIFFER, V45, P542, DOI 10.1016/j.paid.2008.06.013
   Walle T, 2009, INT SYMP EMP SOFTWAR, P203, DOI 10.1109/ESEM.2009.5315996
   Wiesche M, 2014, SIGMIS-CPR'14: PROCEEDINGS OF THE 2014 CONFERENCE ON COMPUTERS AND PEOPLE RESEARCH, P149, DOI 10.1145/2599990.2600012
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
   Zhen Y, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2368
NR 57
TC 1
Z9 1
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2024
VL 36
IS 2
SI SI
DI 10.1002/smr.2513
EA OCT 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HT8V5
UT WOS:000863751100001
DA 2024-07-18
ER

PT J
AU De Pascale, D
   Cascavilla, G
   Sangiovanni, M
   Tamburri, DA
   van den Heuvel, WJ
AF De Pascale, Daniel
   Cascavilla, Giuseppe
   Sangiovanni, Mirella
   Tamburri, Damian A.
   van den Heuvel, Willem-Jan
TI Internet-of-things architectures for secure cyber-physical spaces: The
   VISOR experience report
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE CPS security & safety; cyber-physical spaces architectures;
   cyber-physical systems (CPS); experience report; Internet of things
   (IoT); software architectures
AB Internet of things (IoT) technologies are becoming a more and more widespread part of civilian life in common urban spaces, which are rapidly turning into cyber-physical spaces. Simultaneously, the fear of terrorism and crime in such public spaces is ever-increasing. Due to the resulting increased demand for security, video-based IoT surveillance systems have become an important area for research. Considering the large number of devices involved in the illicit recognition task, we conducted a field study in a Dutch Easter music festival in a national interest project called VISOR to select the most appropriate device configuration in terms of performance and results. We iteratively architected solutions for the security of cyber-physical spaces using IoT devices. We tested the performance of multiple federated devices encompassing drones, closed-circuit television, smart phone cameras, and smart glasses to detect real-case scenarios of potentially malicious activities such as mosh pits and pick-pocketing. Our results pave the way to select optimal IoT architecture configurations-that is, a mix of CCTV, drones, smart glasses, and camera phones in our case-to make safer cyber-physical spaces' a reality.
C1 [De Pascale, Daniel; Sangiovanni, Mirella; van den Heuvel, Willem-Jan] Univ Tilburg, Shertogenbosch, Netherlands.
   [De Pascale, Daniel; Cascavilla, Giuseppe; Sangiovanni, Mirella; Tamburri, Damian A.; van den Heuvel, Willem-Jan] JADS, Shertogenbosch, Netherlands.
   [Cascavilla, Giuseppe; Tamburri, Damian A.] Eindhoven Univ Technol, Shertogenbosch, Netherlands.
C3 Tilburg University; Eindhoven University of Technology
RP De Pascale, D (corresponding author), Univ Tilburg, Shertogenbosch, Netherlands.; De Pascale, D (corresponding author), JADS, Shertogenbosch, Netherlands.
EM d.de.pascale@tue.nl
RI Tamburri, Damian Andrew/AAJ-2507-2021
OI Tamburri, Damian Andrew/0000-0003-1230-8961; Cascavilla,
   Giuseppe/0000-0002-0724-3772
FU ANITA [787061]; PRoTECT [815356]
FX ANITA, Grant/Award Number: 787061; PRoTECT, Grant/Award Number: 815356
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   [Anonymous], GALAXY S10 REV STILL
   Baresi, 2013, DAGSTUHL REPORTS, V3, P114
   Bazhenov N, 2019, PROC CONF OPEN INNOV, P47, DOI [10.23919/FRUCT48121.2019.8981505, 10.23919/fruct48121.2019.8981505]
   Byun DJ., 2019, ACM SIGGRAPH 2019 TA, P1
   Cascavilla G, 2021, COMPUT SECUR, V105, DOI 10.1016/j.cose.2021.102258
   Chung L, 2012, Non-Functional Requirements in Software Engineering, V5
   Clark P., 2010, 2010 Information Security Curriculum Development Conference, P131
   forum dG, ANDR PREV ACC P STAT
   Gama K, 2018, ITICSE'18: PROCEEDINGS OF THE 23RD ANNUAL ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P248, DOI 10.1145/3197091.3197138
   Gennery DB, 2006, INT J COMPUT VISION, V68, P239, DOI 10.1007/s11263-006-5168-1
   Georgakopoulos D, 2016, IEEE CLOUD COMPUT, V3, P66, DOI 10.1109/MCC.2016.91
   Guimaraes CSS, 2018, LECT NOTE NETW SYST, V22, P36, DOI 10.1007/978-3-319-64352-6_4
   Kranz M, 2010, IEEE INTERNET COMPUT, V14, P46, DOI 10.1109/MIC.2009.141
   Krippendorf K., 1980, Content Analysis: An Introduction to Its Methodology
   Krippendorff K, 2004, HUM COMMUN RES, V30, P411, DOI 10.1093/hcr/30.3.411
   Krippendorff Klaus, 2011, COMPUTING KRIPPENDOR, DOI DOI 10.1002/9781405186407.WBIECR029
   Lewis KM., 2010, OPEN CARD SORTING FA
   Luckner M, 2020, ACM T INTERNET TECHN, V20, DOI 10.1145/3396850
   Misic J, 2018, IEEE NETWORK, V32, P81, DOI 10.1109/MNET.2018.1700395
   Muccini H., 2019, P 52 HAWAII INT C SY
   NL#TIMES, REC NUMB VIS PAASP F
   Rodda A., 2020, MATER TODAY-PROC
   Sharma D, 2018, J AMB INTEL HUM COMP, V9, P485, DOI 10.1007/s12652-016-0432-x
   Shi J, 2011, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON NUCLEAR ENGINEERING 2010, VOL 5, P1
   Tan T.-B., 2018, INT COMP S, P385
   Tomovic S, 2017, WIRELESS PERS COMMUN, V92, P181, DOI 10.1007/s11277-016-3845-0
   Tsigkanos C, 2016, COMPUTING, V98, P1011, DOI 10.1007/s00607-016-0509-6
   Tullis T., 2013, Measuring the User Experience: Collecting, Analyzing, and Presenting Usability Metrics
   Ullrich J, 2015, ERCIM NEWS, P18
   Wautelet Y, 2017, COMPUT LANG SYST STR, V50, P159, DOI 10.1016/j.cl.2017.06.007
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yang P, 2019, ACM T INTEL SYST TEC, V10, DOI 10.1145/3339474
NR 33
TC 2
Z9 2
U1 2
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2023
VL 35
IS 7
SI SI
DI 10.1002/smr.2511
EA SEP 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L0RH3
UT WOS:000860111400001
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Altamimi, E
   Elkawakjy, A
   Catal, C
AF Altamimi, Emran
   Elkawakjy, Abdullah
   Catal, Cagatay
TI Metamorphic relation automation: Rationale, challenges, and solution
   directions
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE automation; machine learning; metamorphic relations; metamorphic testing
ID SOFTWARE
AB Metamorphic testing addresses the issue of the oracle problem by comparing results transformation from multiple test executions. The relationship that governs the output transformation is called metamorphic relation. Metamorphic relations require expert knowledge and the generation of them is considered a time-consuming task. Researchers have proposed various techniques to automate metamorphic testing, generation, and selection. Although there are several research articles on this issue, there is a lack of overview of the state-of-the-art of metamorphic relation automation. As such, we performed a systematic literature review study to collect, extract, and synthesize the required data. Based on our research questions, the literature was categorized and summarized into different categories. We found that the automation of metamorphic relation is most effective in mathematical and scientific applications. We concluded that some approaches involve analysis of different forms of software-related information such as control flow graph and program dependence graph as well as an initial set of metamorphic relations. On the other hand, other methods involve analysis of executions of the software functions with random and specific inputs. The results show that this field is still in its infancy with opportunities for novel work, especially in methods utilizing machine learning.
C1 [Altamimi, Emran; Elkawakjy, Abdullah; Catal, Cagatay] Qatar Univ, Dept Comp Sci & Engn, Doha, Qatar.
C3 Qatar University
RP Catal, C (corresponding author), Qatar Univ, Dept Comp Sci & Engn, Doha, Qatar.
EM ccatal@au.edu.qa
RI Catal, Cagatay/AAF-3929-2019
OI Catal, Cagatay/0000-0003-0959-2930; Elkawakjy,
   Abdullah/0000-0002-3381-7098
FU Qatar Research Fund [NPRP12C-33905-SP-66]
FX Qatar Research Fund, Grant/Award Number: NPRP12C-33905-SP-66
CR [Anonymous], 2005, 2nd International Conference on Electicatl Engineering/Electronics, Computer, Telecommunications, and Information Technology
   Ayerdi J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1264, DOI 10.1145/3468264.3473920
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Chen T.Y., 2020, METAMORPHIC TESTING
   Chen TY, 2016, J SYST SOFTWARE, V116, P177, DOI 10.1016/j.jss.2015.07.037
   Chen TY, 2009, LECT NOTES COMPUT SC, V5522, P243, DOI 10.1007/978-3-642-02138-1_19
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Ding J., 2016, SEKE, P390
   Durelli VHS, 2019, IEEE T RELIAB, V68, P1189, DOI 10.1109/TR.2019.2892517
   Fontes Afonso, 2021, TORACLE 2021: Proceedings of the 1st International Workshop on Test Oracles, DOI 10.1145/3472675.3473974
   Gagandeep, 2012, COMM COM INF SC, V306, P152
   Kanewala U, 2016, SOFTW TEST VERIF REL, V26, P245, DOI 10.1002/stvr.1594
   Kanewala U, 2013, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE.2013.6698899
   Kelly Diane, 2008, P 3 ANN C ASS SOFTWA, P30
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Li JY, 2020, SOFTWARE PRACT EXPER, V50, P1345, DOI 10.1002/spe.2818
   Liu H, 2012, INT CONF QUAL SOFTW, P59, DOI 10.1109/QSIC.2012.10
   Mayer J, 2006, INT CONF QUAL SOFTW, P85
   Meng L., 2020, INT J PERFORM ENG, V16, P297, DOI [10.23940/ijpe.20.02.p12.297306, DOI 10.23940/IJPE.20.02.P12.297306]
   Mohri M., 2012, Foundations of Machine Learning
   Murphy Christian, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P867
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Nair A, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P1, DOI [10.1145/3340482.3342741, 10.1109/ncc.2019.8732208]
   Núñez A, 2015, ANN TELECOMMUN, V70, P127, DOI 10.1007/s12243-014-0442-7
   Planning S, 2002, The economic impacts of inadequate infrastructure for software testing
   Rahman K., 2020, PROC INT C SOFTW ENG, P420
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Shahri MP, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P140, DOI 10.1109/AITest.2019.00017
   Shalev-Shwartz S., 2014, UNDERSTANDING MACHIN, DOI 10.1017/CBO9781107298019
   Spieker H, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110574
   Srinivasan M., 2021, ARXIV
   Sun CA, 2021, IEEE T SOFTWARE ENG, V47, P1764, DOI 10.1109/TSE.2019.2934848
   Troya J, 2018, J SYST SOFTWARE, V136, P188, DOI 10.1016/j.jss.2017.05.043
   Tummers J, 2019, COMPUT ELECTRON AGR, V157, P189, DOI 10.1016/j.compag.2018.12.044
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Zhang B, 2019, PROC IEEE INT CONF S, P246, DOI 10.1109/ICSME.2019.00036
   Zhang Jie, 2014, P 29 ACM IEEE INT C, P701, DOI DOI 10.1145/2642937.2642994
   Zhang PC, 2017, IEEE ACCESS, V5, P21791, DOI 10.1109/ACCESS.2017.2758790
   Zhang XL, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P399, DOI 10.1109/SNPD.2016.7515931
   Zhou Z.Q., 2004, P 8 INT S FUT SOFTW, P346
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
NR 41
TC 1
Z9 1
U1 4
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2023
VL 35
IS 1
AR e2509
DI 10.1002/smr.2509
EA SEP 2022
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7M9LK
UT WOS:000854041400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Jolak, R
   Wortmann, A
   Liebel, G
   Umuhoza, E
   Chaudron, MRV
AF Jolak, Rodi
   Wortmann, Andreas
   Liebel, Grischa
   Umuhoza, Eric
   Chaudron, Michel R., V
TI Design thinking and creativity of colocated versus globally distributed
   software developers
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE cognitive aspects; collaborative design thinking; creativity; distance;
   empirical study; software engineering
ID DISTANCE
AB Designing software is an activity in which software developers think and make design decisions that shape the structure and behavior of software products. Designing software is one of the least understood software engineering activities. In a collaborative design setting, various types of distances can lead to challenges and effects that potentially affect how software is designed. To contribute to a better understanding of collaborative software design, we investigate how communication gaps caused by social and geographic distances affect its design thinking and the creativity of its discussions. To this end, we conducted a multiple-case study exploring the design thinking and creativity of colocated and distributed software developers in a collaborative design setting. Compared with colocated developers, distributed developers spend less time on exploring the problem space, which could be related to different sociotechnical challenges, such as lack of awareness and common understanding. Distributed development does not seem to affect the creativity of their activities. Developers engaging in collaborative design need to be aware that problem space exploration is reduced in a distributed setting. Unless distributed teams take compensatory measures, this could adversely affect the development. Regarding the effect distance has on creativity, our results are inconclusive and further studies are needed.
C1 [Jolak, Rodi] Chalmers Gothenburg Univ, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Wortmann, Andreas] Rhein Westfal TH Aachen, Dept Comp Sci, Aachen, Germany.
   [Liebel, Grischa] Reykjavik Univ, Sch Technol, Reykjavik, Iceland.
   [Umuhoza, Eric] Carnegie Mellon Univ Africa, Dept Elect & Comp Engn, Kigali, Rwanda.
   [Chaudron, Michel R., V] Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
   [Jolak, Rodi] Chalmers Gothenburg Univ, Dept Comp Sci, S-41296 Gothenburg, Sweden.
C3 RWTH Aachen University; Reykjavik University; Eindhoven University of
   Technology
RP Jolak, R (corresponding author), Chalmers Gothenburg Univ, Dept Comp Sci & Engn, Gothenburg, Sweden.
EM rodi.jolak@cse.gu.se
OI Chaudron, Michel/0000-0001-7517-6666; Liebel,
   Grischa/0000-0002-3884-815X; Jolak, Rodi/0000-0001-5656-9253; UMUHOZA,
   ERIC/0000-0002-2451-8897
CR Ahmed S, 2003, RES ENG DES, V14, P1, DOI 10.1007/s00163-002-0023-z
   Ahmed S, 2009, J MECH DESIGN, V131, DOI 10.1115/1.3184693
   [Anonymous], 1992, Proceedings of the 1992 ACM Conference on Computer Supported Cooperative Work (CSCW'92), DOI DOI 10.1145/143457.143468
   [Anonymous], 2005, Proceedings of the 2005 Workshop on Human and Social Factors of Software Engineering, HSSE'05, page
   [Anonymous], 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering
   Baker A, 2010, DESIGN STUD, V31, P590, DOI 10.1016/j.destud.2010.09.008
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V70, P204, DOI 10.1016/j.infsof.2015.05.004
   Bjorn P, 2014, ACM T COMPUT-HUM INT, V21, DOI 10.1145/2670534
   Boden M. A., 2004, CREATIVE MIND MYTHS
   Brooke J, 2013, J USABILITY STUD, V8, P29
   Brooks F.P., 2010, Design of Design: Essays from a Computer Scientist
   Buchanan R., 1992, Design Issues, V8, P5, DOI [10.2307/1511637, DOI 10.2307/1511637]
   Cherubini M, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P557
   Christiaans H, 2010, DESIGN STUD, V31, P641, DOI 10.1016/j.destud.2010.09.005
   Clark H. H., 1996, USING LANGUAGE
   CLARK HH, 1991, PERSPECTIVES ON SOCIALLY SHARED COGNITION, P127, DOI 10.1037/10096-006
   Conchuir Eoin O, 2009, Software Process: Improvement and Practice, V14, P201, DOI 10.1002/spip.417
   Cross, 2011, Design Thinking: Understanding How Designers Think and Work, DOI DOI 10.5040/9781474293884
   Cross N, 2004, DESIGN STUD, V25, P427, DOI 10.1016/j.destud.2004.06.002
   Cross N, 2001, DES ISSUES, V17, P49, DOI 10.1162/074793601750357196
   Cross N., 2001, Design Studies, V22, P425, DOI [10.1016/S0142-694X(01)00009-6, DOI 10.1016/S0142-694X(01)00009-6]
   Damian D, 2007, INT REQUIR ENG CONF, P59, DOI 10.1109/RE.2007.51
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   DOBRIGKEIT F, 2019, ACM, P1059
   Dorst K, 2011, DESIGN STUD, V32, P521, DOI 10.1016/j.destud.2011.07.006
   Ebert C, 2016, INT CONF GLOBAL SOFT, P144, DOI 10.1109/ICGSE.2016.19
   Gabora L, 2010, CREATIVITY RES J, V22, P1, DOI 10.1080/10400410903579494
   Goldschmidt G, 2016, CREATIVITY RES J, V28, P115, DOI 10.1080/10400419.2016.1162497
   Gutwin C., 1996, People and Computers XI. Proceedings of HCI '96, P281
   Hammond Tracy, 2002, AGENTS DESIGN
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hofstede G., 1980, Culture's consequences: International differences in work-related values
   JOLAK R, 2019, IEEE, P415
   Jolak R, 2020, INT CONF GLOBAL SOFT, P106, DOI 10.1145/3372787.3390438
   Jolak R, 2018, IEEE SOFTWARE, V35, P40, DOI 10.1109/MS.2018.290100920
   Jolak R, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P384, DOI 10.1109/SEAA.2017.55
   Kan JeffWai Tak, 2013, SOFTWARE DESIGNERS A
   Khan AA, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.1988
   Kimbell L, 2011, DES CULT, V3, P285, DOI 10.2752/175470811X13071166525216
   Koo TK, 2016, J CHIROPR MED, V15, P155, DOI 10.1016/j.jcm.2016.02.012
   Kruger C, 2006, DESIGN STUD, V27, P527, DOI 10.1016/j.destud.2006.01.001
   Lehmann-Willenbrock N, 2014, GROUP PROCESS INTERG, V17, P252, DOI 10.1177/1368430213497066
   Lindberg T, 2011, UNDERST INNOV, P3, DOI 10.1007/978-3-642-13757-0_1
   Maiden N, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P105, DOI 10.1109/RE.2005.34
   Martin R.L, 2009, The design of business: Why design thinking is the next competitive advantage
   Matthiesen S, 2020, INT CONF GLOBAL SOFT, P22, DOI 10.1145/3372787.3390432
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Mohanani R, 2021, IEEE T SOFTWARE ENG, V47, P936, DOI 10.1109/TSE.2019.2909033
   Monk A., 2003, HCI Models, Theories and Frameworks: Toward a Multi-Disciplinary Science, P265, DOI [10.1016/b978-155860808-5/50010-1, DOI 10.1016/B978-155860808-5/50010-1]
   Nguyen L, 2009, INFORM SOFTWARE TECH, V51, P655, DOI 10.1016/j.infsof.2008.09.002
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Olson J.S., 2013, Synth. Lect. Hum. Cent. Inform., V6, P1, DOI [10.2200/S00542ED1V01Y201310HCI020, DOI 10.2200/S00542ED1V01Y201310HCI020]
   Paasivaara M., 2003, Software Process Improvement and Practice, V8, P183, DOI 10.1002/spip.187
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Petre M., 2016, SOFTWARE DESIGN DECO
   Petre M., 2019, SOFTWARE DESIGN MULT
   Petre Marian, 2013, Software Designers in Action: A Human-Centric Look at Design Work, V1st
   Razavian M, 2016, J SOFTW-EVOL PROC, V28, P394, DOI 10.1002/smr.1776
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Sauro Jef, 2011, A Practical Guide to the System Usability Scale: Background, Benchmarks, and Best Practices
   Shah H, 2015, INT CONF GLOBAL SOFT, P13, DOI 10.1109/ICGSE.2015.25
   Tang A, 2018, J SYST SOFTWARE, V144, P22, DOI 10.1016/j.jss.2018.05.019
   Tullis T., 2004, A Comparison of Questionnaires for Assessing Website usabiity Usability
   Vesin B, 2017, PROC IEEE ACM INT C, P7, DOI 10.1109/ICSE-C.2017.19
   Weinreich R, 2015, FUTURE GENER COMP SY, V47, P145, DOI 10.1016/j.future.2014.12.002
   Williams C., 2019, 190512841 ARXIV
   Wiltschnig S, 2013, DESIGN STUD, V34, P515, DOI 10.1016/j.destud.2013.01.002
   Wu J., 2004, SOFTWARE DESIGN BOAR, P363
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
NR 71
TC 1
Z9 1
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2023
VL 35
IS 5
SI SI
AR e2377
DI 10.1002/smr.2377
EA SEP 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E6KV9
UT WOS:000692017000001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Shi, K
   Lu, Y
   Liu, GL
   Wei, ZC
   Chang, JF
AF Shi, Ke
   Lu, Yang
   Liu, Guangliang
   Wei, Zhenchun
   Chang, Jingfei
TI MPT-embedding: An unsupervised representation learning of code for
   software defect prediction
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE deep learning; defect prediction; representation learning; tree
   embedding
ID MODELS
AB Software project defect prediction can help developers allocate debugging resources. Existing software defect prediction models are usually based on machine learning methods, especially deep learning. Deep learning-based methods tend to build end-to-end models that directly use source code-based abstract syntax trees (ASTs) as input. They do not pay enough attention to the front-end data representation. In this paper, we propose a new framework to represent source code called multiperspective tree embedding (MPT-embedding), which is an unsupervised representation learning method. MPT-embedding parses the nodes of ASTs from multiple perspectives and encodes the structural information of a tree into a vector sequence. Experiments on both cross-project defect prediction (CPDP) and within-project defect prediction (WPDP) show that, on average, MPT-embedding provides improvements over the state-of-the-art method.
C1 [Shi, Ke; Lu, Yang; Liu, Guangliang; Wei, Zhenchun; Chang, Jingfei] Hefei Univ Technol, Sch Comp Sci & Informat Engn, Hefei, Anhui, Peoples R China.
   [Lu, Yang; Wei, Zhenchun] Hefei Univ Technol, Minist Educ, Engn Res Ctr Safety Crit Ind Measurement & Contro, Hefei, Anhui, Peoples R China.
   [Shi, Ke] Hefei Univ Technol, Sch Comp Sci & Engn, Hefei, Anhui, Peoples R China.
C3 Hefei University of Technology; Hefei University of Technology; Hefei
   University of Technology
RP Lu, Y (corresponding author), Hefei Univ Technol, Sch Comp Sci & Informat Engn, Hefei, Anhui, Peoples R China.
EM luyang.hf@126.com
OI Chang, Jingfei/0000-0003-0530-6511; Shi, Ke/0000-0003-0363-6197
FU Fundamental Research Funds for the Central Universities
   [PA2019GDPK0079]; National Key Research and Development Program
   [2016YFC0801804, 2018YFC0604404]; National Natural Science Foundation of
   China [61806067]
FX Fundamental Research Funds for the Central Universities, Grant/Award
   Number: PA2019GDPK0079; National Key Research and Development Program,
   Grant/Award Numbers: 2016YFC0801804, 2018YFC0604404; National Natural
   Science Foundation of China, Grant/Award Number: 61806067
CR Allamanis M., 2018, INT C LEARN REPR ICL
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   [Anonymous], 1994, P WORKSH PRAGM THEOR
   [Anonymous], 2016, IJCAI
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Cai HY, 2018, IEEE T KNOWL DATA EN, V30, P1616, DOI 10.1109/TKDE.2018.2807452
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chilowicz M, 2009, INT C PROGRAM COMPRE, P243, DOI 10.1109/ICPC.2009.5090050
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Duchi J, 2011, J MACH LEARN RES, V12, P2121
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Garcia-Duran A., 2017, ADV NEUR IN
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Goyal P, 2018, KNOWL-BASED SYST, V151, P78, DOI 10.1016/j.knosys.2018.03.022
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   Henderson-Sellers B, 1995, OBJECT ORIENTED METR, DOI DOI 10.5555/229953
   Hoa Khanh Dam, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P46, DOI 10.1109/MSR.2019.00017
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Jeffrey D, 2009, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2009.5090029
   Kang HJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1, DOI 10.1109/ASE.2019.00011
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li Y, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360588
   Lu HH, 2014, PROC INT SYMP SOFTW, P312, DOI 10.1109/ISSRE.2014.35
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mei-Huei Tang, 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P242, DOI 10.1109/METRIC.1999.809745
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nikolentzos G, 2017, AAAI CONF ARTIF INTE, P2429
   Ou MD, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1105, DOI 10.1145/2939672.2939751
   Perozzi B, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P701, DOI 10.1145/2623330.2623732
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Steidl D, 2013, INT WORKS SOFTW CLON, P76, DOI 10.1109/IWSC.2013.6613047
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Wang DX, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1225, DOI 10.1145/2939672.2939753
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Xu Z, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110402
   Yang J, 2015, EMPIR SOFTW ENG, V20, P1095, DOI 10.1007/s10664-014-9316-x
   Yang XX, 2018, IEEE T RELIAB, V67, P885, DOI 10.1109/TR.2018.2847353
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
   Zhou TC, 2019, INFORM SOFTWARE TECH, V114, P204, DOI 10.1016/j.infsof.2019.07.003
   Zibran M.F., 2011, P 5 INT WORKSH SOFTW, P75
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 56
TC 11
Z9 12
U1 1
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2021
VL 33
IS 4
AR e2330
DI 10.1002/smr.2330
EA DEC 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RH8PR
UT WOS:000598746000001
DA 2024-07-18
ER

PT J
AU Zhang, Z
   Lei, Y
   Mao, XG
   Yan, M
   Xu, L
   Wen, JH
AF Zhang, Zhuo
   Lei, Yan
   Mao, Xiaoguang
   Yan, Meng
   Xu, Ling
   Wen, Junhao
TI Improving deep-learning-based fault localization with resampling
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE fault localization; debugging; neural networks; deep learning;
   resampling
AB Many fault localization approaches recently utilize deep learning to learn an effective localization model showing a fresh perspective with promising results. However, localization models are generally learned from class imbalance datasets; that is, the number of failing test cases is much fewer than passing test cases. It may be highly susceptible to affect the accuracy of learned localization models. Thus, in this paper, we explore using data resampling to reduce the negative effect of the imbalanced class problem and improve the accuracy of learned models of deep-learning-based fault localization. Specifically, for deep-learning-based fault localization, its learning feature may require duplicate essential data to enhance the weak but beneficial experience incurred by the class imbalance datasets. We leverage the property of test cases (i.e., passing or failing) to identify failing test cases as the duplicate essential data and propose an iterative oversampling approach to resample failing test cases for producing a class balanced test suite. We apply the test case resampling to representative localization models using deep learning. Our empirical results on eight large-sized programs with real faults and four large-sized programs with seeded faults show that the test case resampling significantly improves fault localization effectiveness.
C1 [Zhang, Zhuo] Guilin Univ Elect Technol, Guangxi Key Lab Trusted Software, Guilin, Peoples R China.
   [Lei, Yan; Yan, Meng; Xu, Ling; Wen, Junhao] Chongqing Univ, Key Lab Dependable Serv Comp Cyber Phys Soc, Minist Educ, Chongqing, Peoples R China.
   [Lei, Yan; Yan, Meng; Xu, Ling; Wen, Junhao] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
   [Zhang, Zhuo; Mao, Xiaoguang] Natl Univ Def Technol, Coll Comp, Changsha, Hunan, Peoples R China.
C3 Guilin University of Electronic Technology; Chongqing University;
   Chongqing University; National University of Defense Technology - China
RP Lei, Y (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
EM yanlei@cqu.edu.cn
OI Yan, Meng/0000-0002-9538-9121
FU Guangxi Key Laboratory of Trusted Software [kx202008]; Fundamental
   Research Funds for the Central Universities [2019CDXYRJ0011]; National
   Natural Science Foundation of China [61602504, 61379054, 61672529];
   Scientific Research Fund of Hunan Provincial Education Department
   [15A007]
FX Guangxi Key Laboratory of Trusted Software, Grant/Award Number:
   kx202008; Fundamental Research Funds for the Central Universities,
   Grant/Award Number: 2019CDXYRJ0011; National Natural Science Foundation
   of China, Grant/Award Numbers: 61602504, 61379054, and 61672529;
   Scientific Research Fund of Hunan Provincial Education Department,
   Grant/Award Number: 15A007
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Anderson JL, 2007, J AM COLL CARDIOL, V50, P652, DOI 10.1016/j.jacc.2007.02.028
   [Anonymous], 2013, JOINT M FDN SOFTW EN
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Artzi S., 2010, ISSTA, P49, DOI DOI 10.1145/1831708.1831715
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Briand LC, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ISSRE.2007.31
   Chan WK, 2013, SOFTWARE PRACT EXPER, V43, P971, DOI 10.1002/spe.1147
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Cheng Gong, 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P470, DOI 10.1109/COMPSACW.2012.89
   Corder G. W., 2014, Nonparametric statistics: a step-by-step approach, DOI DOI 10.1002/9781118165881
   Debroy V., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P13, DOI 10.1109/QSIC.2010.80
   Debroy V, 2013, SOFTWARE PRACT EXPER, V43, P989, DOI 10.1002/spe.1146
   Graves A, 2013, INT CONF ACOUST SPEE, P6645, DOI 10.1109/ICASSP.2013.6638947
   Hao D., 2005, P 20 IEEE ACM INT C, P291
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He HB, 2008, IEEE IJCNN, P1322, DOI 10.1109/IJCNN.2008.4633969
   Huang S, 2015, I S BIOMED IMAGING, P1556, DOI 10.1109/ISBI.2015.7164175
   Japkowicz N., 2002, Intelligent Data Analysis, V6, P429
   Jarrett K, 2009, IEEE I CONF COMP VIS, P2146, DOI 10.1109/ICCV.2009.5459469
   Jones JA, 2004, PROC INT CONF SOFTW, P54, DOI 10.1109/ICSE.2004.1317420
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Krawczyk B, 2016, PROG ARTIF INTELL, V5, P221, DOI 10.1007/s13748-016-0094-0
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   LeCun Y, 2004, PROC CVPR IEEE, P97
   Lee S, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON NETWORK INFRASTRUCTURE AND DIGITAL CONTENT, PROCEEDINGS, P609, DOI 10.1109/ICNIDC.2009.5360944
   Lei Y, 2018, IET SOFTW, V12, P190, DOI 10.1049/iet-sen.2017.0026
   Lei Y, 2012, P INT COMP SOFTW APP, P1, DOI 10.1109/COMPSAC.2012.9
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Neelofar N, 2018, SOFTWARE PRACT EXPER, V48, P641, DOI 10.1002/spe.2527
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Pinto N, 2009, PLOS COMPUT BIOL, V5, DOI 10.1371/journal.pcbi.1000579
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tu JX, 2019, J SYST SOFTWARE, V147, P106, DOI 10.1016/j.jss.2018.10.013
   Turaga SC, 2010, NEURAL COMPUT, V22, P511, DOI 10.1162/neco.2009.10-08-881
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wong N, 2012, PROCEEDINGS OF THE 17TH ACM INTERNATIONAL CONFERENCE ON SUPPORTING GROUP WORK, P21
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Wong WE, 2009, INT J SOFTW ENG KNOW, V19, P573, DOI 10.1142/S021819400900426X
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Yoo S, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078840
   Yu Y, 2009, ACM IEEE INT C SOFTW, P201
   Zhang L, 2017, J SYST SOFTWARE, V129, P35, DOI 10.1016/j.jss.2017.04.017
   Zhang Z, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P445, DOI [10.1109/saner.2019.8668002, 10.1109/SANER.2019.8668002]
   Zhang Z, 2017, IEICE T INF SYST, VE100D, P3027, DOI 10.1587/transinf.2017EDL8143
   Zheng Wei, 2016, Mathematical Problems in Engineering, V2016, DOI DOI 10.1155/2016/1820454
NR 56
TC 28
Z9 30
U1 1
U2 25
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2021
VL 33
IS 3
AR e2312
DI 10.1002/smr.2312
EA AUG 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QT0GD
UT WOS:000563119900001
DA 2024-07-18
ER

PT J
AU Georgiadou, E
   Siakas, K
   Berki, E
   Estdale, J
   Rahanu, H
   Ross, M
AF Georgiadou, Elli
   Siakas, Kerstin
   Berki, Eleni
   Estdale, John
   Rahanu, Harjinder
   Ross, Margaret
TI The sociocultural dimension of the Software Process Improvement
   Manifesto: Pilot validation by experts
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE expert validation; principles; sociocultural; SPI Manifesto; STEEPLED;
   values
ID SYSTEMS
AB The Software Process Improvement (SPI) Manifesto is based on three basic values: people, business focus and organisational change underpinning the philosophy of SPI. In turn, these values bring up to date certain SPI principles serving as a foundation for action in software development. The authors of this paper carried out a pilot expert validation of the sociocultural dimension of the sociocultural, technical, economic, environmental, political, legal, ethical and demographic analysis of the SPI Manifesto. Further, the authors report on the rationale and results of the pilot validation of both the survey instrument and the qualitative responses generated by the field experts, targeting to enlighten and reinforce the importance of the sociocultural dimension of the SPI Manifesto in research and development. The related literature review findings and the pilot research study strengthen this target. The pilot study with experts in particular provided stronger indications that the sociocultural dimension is considered of high importance by between 62% and 88% of the respondents, who were IT and computing professionals and software practitioners from academia and industry.
C1 [Georgiadou, Elli; Rahanu, Harjinder] Middlesex Univ, Fac Sci & Technol, London NW4 4BT, England.
   [Siakas, Kerstin] Int Hellen Univ, Dept Informat & Elect Engn, GR-57400 Thessaloniki, Greece.
   [Siakas, Kerstin] Vaasa Univ, Sch Technol & Innovat, Wolffintie 34, Vaasa 65200, Finland.
   [Berki, Eleni] Univ Jyvaskyla, Fac Informat Technol, POB 35 Agora, FI-40014 Jyvaskyla, Finland.
   [Estdale, John] IT Architecture Specialists, Newbury RG20 9TT, Berks, England.
   [Ross, Margaret] Solent Univ, Sch Media Arts & Technol, Southampton, Hants, England.
C3 Middlesex University; International Hellenic University; University of
   Vaasa; University of Jyvaskyla
RP Georgiadou, E (corresponding author), Middlesex Univ, Fac Sci & Technol, London NW4 4BT, England.
EM e.georgiadou@mdx.ac.uk
RI ; Estdale, John/J-2894-2017
OI Rahanu, Dr Harjinder/0000-0002-3620-8036; Siakas,
   Kerstin/0000-0003-4165-8389; Estdale, John/0000-0003-1312-534X
CR [Anonymous], 2001, Agile Manifesto
   Barnett DJ, 2005, ENVIRON HEALTH PERSP, V113, P561, DOI 10.1289/ehp.7491
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   Berki E., 1998, P 12 INT C ISR SOC Q
   Berki E., 2007, AGILE SOFTWARE DEV Q, P23, DOI DOI 10.4018/978-1-59904-216-9.CH002
   Berki E., 2004, 1 S E EUR WORKSH FOR, P170
   Breske E, 2017, COMM COM INF SC, V748, P401, DOI 10.1007/978-3-319-64218-5_33
   Chaudhary S, 2015, INT J HUM CAP INF TE, V6, P49, DOI [10.4018/IJHCITP.2015040104, 10.4018/ijhcitp.2015040104]
   Checkland P, 2000, SYST RES BEHAV SCI, V17, pS11, DOI 10.1002/1099-1743(200011)17:1+<::AID-SRES374>3.0.CO;2-O
   Checkland P., 1981, Systems thinking, systems practice, V10th ed
   Chuang SW, 2014, J SYST SOFTWARE, V93, P84, DOI 10.1016/j.jss.2014.03.006
   Clarke P, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP), P86, DOI [10.1145/2904354.2904369, 10.1109/ICSSP.2016.019]
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Cornford Tony., 2006, Project research in information systems
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   EuroSPI Net, 2009, SPI MAN
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   Galliers R.D., 1992, INFORM SYSTEMS RES I
   Georgiadou E, 2019, BCS P SOFTW QUAL MAN, P77
   Georgiadou E, 2019, STEEPLED ANAL SPI MA, DOI [10.1007/978-3-030-28005-5, DOI 10.1007/978-3-030-28005-5]
   Kallman E., 1996, Ethical Decision Making and Information Technology
   Kalous J, 2012, P EINDELM C, P27
   KAPOSI A, 1993, SOFTWARE ENG J, V8, P31, DOI 10.1049/sej.1993.0005
   KAST FE, 1972, ACAD MANAGE J, V15, P447, DOI 10.5465/255141
   Khan AA, 2016, INT CONF COMPUT POW, P159, DOI 10.1109/ICCPEIC.2016.7557241
   Korsaa M, 2012, J SOFTW-EVOL PROC, V24, P525, DOI 10.1002/smr.502
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Mens T, 2012, COMPUTER, V45, P79, DOI 10.1109/MC.2012.273
   Messnarz R, 2011, COMMUNICATIONS COMPU, V172
   Mishra P, 2019, SOFTWARE QUALITY MAN
   Mystakidis S., 2015, IADIS INT J WWW INTE, V13, P57
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Niazi M, 2010, INFORM SOFTWARE TECH, V52, P1204, DOI 10.1016/j.infsof.2010.06.005
   Nummenmaa T, 2011, TRIM RES REPORTS, V4, P257
   Nummenmaa T, 2011, ACM SIGSOFT SOFTWARE, V36, P49
   Patil D., 2013, STEEPLED ANAL
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   PORTER ME, 1979, HARVARD BUS REV, V57, P137
   Runyan C W, 1998, Inj Prev, V4, P302
   Siakas Kerstin, 2016, International Journal of E-Entrepreneurship and Innovation, V6, P19, DOI 10.4018/IJEEI.2016010102
   Siakas K, 2006, INT P SERIES, V6, P411
   Siakas K, 2009, AGILE SOFTWARE DEV D, P819
   Siakas Kerstin V., 2007, Software Process: Improvement and Practice, V12, P597, DOI 10.1002/spip.344
   Siakas K.V., 2005, Information Systems, P412
   Siakas K, 2018, COMM COM INF SC, V896, P565, DOI 10.1007/978-3-319-97925-0_48
   Smith Adam S., 2020, Journal of Natural Science Collections, V7, P3
   Sommerville I., 1996, SOFTWARE PROCESS, V4, P89
   Spinello R., 2013, Cyberethics: Morality and Law in Cyberspace, V5th
   Spinello R.A., 1995, ETHICAL ASPECTS INFO
   Weisbond M., 1987, PRODUCTIVE WORKPLACE
   Wong B., 2008, P INT C SOFTW ENG, DOI [10.1145/1370101, DOI 10.1145/1370101]
   Yan T, 2012, J OFF STAT, V28, P503
   Yilmaz M, 2016, J UNIVERS COMPUT SCI, V22, P1487
   Yogi M, 2018, J INFORM SYSTEMS TEC, V15, P1, DOI [10.4301/007, DOI 10.4301/007]
   Zahra K, 2017, ICIET'17: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON INFORMATION AND EDUCATION TECHNOLOGY, P155, DOI 10.1145/3029387.3029392
NR 56
TC 5
Z9 6
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2020
VL 32
IS 11
SI SI
AR e2304
DI 10.1002/smr.2304
EA JUL 2020
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OV2ST
UT WOS:000553334700001
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Khan, AA
   Akbar, MA
AF Khan, Arif Ali
   Akbar, Muhammad Azeem
TI Systematic literature review and empirical investigation of motivators
   for requirements change management process in global software
   development
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE global software development (GSD); motivators; requirement change
   management (RCM); systematic literature review (SLR); taxonomy
ID PROCESS IMPROVEMENT; SUCCESS FACTORS; IMPLEMENTATION; FRAMEWORK; MODEL
AB Most software development firms have adopted the concepts of global software development (GSD) to develop high-quality and low-cost products. However, GSD is not a straightforward process. It is associated with many challenges that are mostly related to requirements change management (RCM). In this study, we explore the motivators that contribute to managing RCM activities in the GSD environment. We extracted a total of 25 motivators using the systematic literature review (SLR) approach and conducted a survey study to empirically evaluate the findings of the SLR. The results of the applied Spearman's statistical test show that the findings of the SLR and survey study had a positive moderate correlation (r(s)(25) = 0.566). We further analyzed the reported motivators according to organization size. Finally, we developed taxonomies of the identified motivators based on the framework proposed by Ramasubbu and the project management body of knowledge. We believe that the taxonomies provide a robust framework for tackling the challenges of RCM, which is significant for the success and evolution of GSD firms.
C1 [Khan, Arif Ali; Akbar, Muhammad Azeem] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics
RP Khan, AA (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
EM arif.khan@nuaa.edu.cn
RI Akbar, Muhammad Azeem/AAB-2338-2022; Khan, Arif Ali/ABG-2862-2020; khan,
   Arif/HMV-3165-2023; Akbar, Muhammad Azeem/ABD-5149-2021
OI Khan, Arif Ali/0000-0002-8479-1481; Akbar, Muhammad
   Azeem/0000-0002-6880-4991
CR Abrar MF, 2019, IEEE ACCESS, V7, P22660, DOI 10.1109/ACCESS.2019.2896212
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ågerfalk PJ, 2008, LECT NOTES COMPUT SC, V5007, P1, DOI 10.1007/978-3-540-79588-9_1
   Akbar MA, 2019, IEEE ACCESS, V7, P76985, DOI 10.1109/ACCESS.2019.2918552
   Ali S, 2017, IEEE ACCESS, V5, P23589, DOI 10.1109/ACCESS.2017.2764946
   Ali S, 2016, J SYST SOFTWARE, V117, P402, DOI 10.1016/j.jss.2016.03.069
   [Anonymous], 2013, Humanpub Org, DOI DOI 10.4156/AIS.VOL1.ISSUE1.3
   [Anonymous], E LEARN E MAN E SERV
   [Anonymous], NONPARAMETRIC STAT B
   [Anonymous], 2014, PROJ MAN BOOK KNOWL
   [Anonymous], IET SOFTW
   [Anonymous], 2001, SOCIAL RES UPDATE
   [Anonymous], 2011, CMUSEI2011HB001 SEI
   Baltar F, 2012, INTERNET RES, V22, P57, DOI 10.1108/10662241211199960
   Bhatti Muhammad Wasim, 2010, 2010 International Conference on Computer Information Systems and Industrial Management Applications (CISIM 2010), P319, DOI 10.1109/CISIM.2010.5643642
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Chen L, 2010, EASE 10 P 14 INT C E, P135
   CMMI for Development, 2010, CMUSEI2010TR033 CMMI
   Conchúir EO, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1536616.1536648
   Damian D, 2007, IEEE SOFTWARE, V24, P21, DOI 10.1109/MS.2007.55
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Finstad K, 2010, J USABILITY STUD, V5, P104
   GOODMAN LA, 1961, ANN MATH STAT, V32, DOI [DOI 10.1214/AOMS/1177705148, 10.1214/aoms/1177705148]
   Gopal A, 2003, MANAGE SCI, V49, P1671, DOI 10.1287/mnsc.49.12.1671.25120
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Ince DC., 1995, INTRO SOFTWARE QUALI
   Jayatilleke S, 2018, INFORM SOFTWARE TECH, V93, P163, DOI 10.1016/j.infsof.2017.09.004
   Keshta I, 2017, IEEE ACCESS, V5, P24162, DOI 10.1109/ACCESS.2017.2764490
   Khan A. A., 2012, Proceedings of the 2012 International Conference on Computer & Information Science (ICCIS), P944, DOI 10.1109/ICCISci.2012.6297161
   Khan AA, 2018, IET SOFTW, V12, P333, DOI 10.1049/iet-sen.2018.0010
   Khan AA, 2017, APPL COMPUT REV, V17, P5, DOI 10.1145/3131080.3131081
   Khan AA, 2017, IEEE ACCESS, V5, P13720, DOI 10.1109/ACCESS.2017.2728603
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Khan SU, 2012, IET SOFTW, V6, P1, DOI 10.1049/iet-sen.2010.0038
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Khan SU, 2011, J SYST SOFTWARE, V84, P686, DOI 10.1016/j.jss.2010.12.010
   Khan SU, 2011, THESIS
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kumar S. A., 2011, Int J Softw Eng its Appl, V2, P107, DOI DOI 10.5121/IJSEA.2011.2410
   Martin B., 2000, An Introduction to Medical Statistics, Vthird
   Minhas N.M., 2014, Journal of Software Engineering and Applications, V07, P779, DOI DOI 10.4236/JSEA.2014.79072
   Mishra D, 2011, J GLOB INF TECH MAN, V14, P48, DOI 10.1080/1097198X.2011.10856549
   Mosadeghrad Ali Mohammad, 2014, International Journal of Strategic Change Management, V5, P189, DOI 10.1504/IJSCM.2014.064460
   Nazir, 2013, EM TECHN ICET 2013 I, P1, DOI DOI 10.1109/ICET.2013.6743519
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Niazi M., 2012, 4 IEEE INT C GLOBAL, P166
   Niazi M, 2008, LECT NOTES COMPUT SC, V5089, P143, DOI 10.1007/978-3-540-69566-0_14
   Niazi M, 2016, INT J PROJ MANAG, V34, P1553, DOI 10.1016/j.ijproman.2016.08.008
   Niazi M, 2016, INFORM SOFTWARE TECH, V80, P1, DOI 10.1016/j.infsof.2016.08.002
   Niazi MK, 2004, THESIS
   Nurmuliani N, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P28, DOI 10.1109/ASWEC.2004.1290455
   Ramasubbu N, 2014, IEEE T SOFTWARE ENG, V40, P235, DOI 10.1109/TSE.2013.58
   Ramzan S, 2006, 10TH IEEE INTERNATIONAL MULTITOPIC CONFERENCE 2006, PROCEEDINGS, P219
   Shameem M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1979
   Shameem M, 2017, 2017 24TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE WORKSHOPS (APSECW), P17, DOI 10.1109/APSECW.2017.22
   Sinha V, 2006, IEEE SOFTWARE, V23, P52, DOI 10.1109/MS.2006.123
   Strens MR, 1996, IEEE SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P278, DOI 10.1109/ECBS.1996.494539
   Tomyim J, 2016, INT CONF SOFTW ENG, P7, DOI 10.1109/ICSESS.2016.7883005
   Trewin D., 2002, Small business in Australia (ABS catalogue no. 1321.0)
   Yu LG, 2010, AUTOMATIKA, V51, P89
   Zhu JY, 2008, 2008 INTERNATIONAL SYMPOSIUM ON INTELLIGENT INFORMATION TECHNOLOGY APPLICATION WORKSHOP: IITA 2008 WORKSHOPS, PROCEEDINGS, P987, DOI 10.1109/IITA.Workshops.2008.204
NR 62
TC 23
Z9 23
U1 3
U2 23
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2020
VL 32
IS 4
AR e2242
DI 10.1002/smr.2242
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KZ8FW
UT WOS:000523495100001
DA 2024-07-18
ER

PT J
AU Sajedi-Badashian, A
   Stroulia, E
AF Sajedi-Badashian, Ali
   Stroulia, Eleni
TI Guidelines for evaluating bug-assignment research
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE bug-assignment; bug report assignment; change request assignment;
   research evaluation; research reproducibility; software engineering
ID DEVELOPER RECOMMENDATION; REPRODUCIBLE RESEARCH; HELP ME; SOFTWARE;
   ACCURATE; TIME; TERM; ALGORITHMS; ALLOCATION
AB Bug assignment is the task of ranking candidate developers in terms of their potential competence to fix a bug report. Numerous methods have been developed to address this task, relying on different methodological assumptions and demonstrating their effectiveness with a variety of empirical studies with numerous data sets and evaluation criteria. Despite the importance of the subject and the attention it has received from researchers, there is still no unanimity on how to validate and comparatively evaluate bug-assignment methods and, often times, methods reported in the literature are not reproducible.
   In this paper, we first report on our systematic review of the broad bug-assignment research field. Next, we focus on a few key empirical studies and review their choices with respect to three important experimental-design parameters, namely, the evaluation metric(s) they report, their definition of who the real assignee is, and the community of developers they consider as candidate assignees.
   The substantial variability on these criteria led us to formulate a systematic experiment to explore the impact of these choices. We conducted our experiment on a comprehensive data set of bugs we collected from 13 long-term open-source projects, using a simple Tf-IDf similarity metric. On the basis of our arguments and/or experiments, we provide useful guidelines for performing further bug-assignment research. We conclude that mean average precision (MAP) is the most informative evaluation metric, the developer community should be defined as "all the project members," and the real assignee should be defined as "any developer who worked toward fixing a bug."
C1 [Sajedi-Badashian, Ali; Stroulia, Eleni] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
C3 University of Alberta
RP Sajedi-Badashian, A (corresponding author), 2-09 Athabasca Hall, Edmonton, AB T6G 2E8, Canada.
EM alisajedi@ualberta.ca
RI Stroulia, Eleni/H-6518-2018
OI Stroulia, Eleni/0000-0002-8784-8236
FU Alberta Innovates - Technology Futures; Faculty of Graduate Studies and
   Research, University of Alberta
FX Alberta Innovates - Technology Futures, Grant/Award Number: Graduate
   Student Scholarship; Faculty of Graduate Studies and Research,
   University of Alberta, Grant/Award Number: Queen Elizabeth II Graduate
   Scholarship
CR Aaron B., 1998, EQUATING R BASED D B
   Aggarwal K, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1821
   Ahsan SN, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P216, DOI 10.1109/ICSEA.2009.92
   Akbarinasaji S, 2018, J SYST SOFTWARE, V136, P173, DOI 10.1016/j.jss.2017.02.021
   Aljarah I., 2011, P 7 INT C PRED MOD S, P12
   ANJALI MD, 2016, VISHESHAGYA TIME BAS, P1
   [Anonymous], ICSME 15
   [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   Anvik J., 2006, 28th International Conference on Software Engineering Proceedings, P937, DOI 10.1145/1134285.1134457
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bama S.S., 2015, International Research Journal of Engineering and Technology, V2, P1015
   Banerjee S, 2017, INFORM SOFTWARE TECH, V89, P1, DOI 10.1016/j.infsof.2016.09.006
   Banitaan S, 2013, INT CONF COMM INF T, P215, DOI 10.1109/ICCITechnology.2013.6579552
   Baysal O., 2012, Proceedings 2012 First International Workshop on User Evaluation for Software Engineering Researchers (USER 2012), P29, DOI 10.1109/USER.2012.6226578
   Baysal O, 2009, INT C PROGRAM COMPRE, P297, DOI 10.1109/ICPC.2009.5090066
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bhattacharya P, 2010, PROC IEEE INT CONF S
   Bhattacharya P, 2012, J SYST SOFTWARE, V85, P2275, DOI 10.1016/j.jss.2012.04.053
   Borenstein M., 2009, INTRO METAANALYSIS
   Borg M., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering. ASE'14, P891
   Bortis G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P342, DOI 10.1109/ICSE.2013.6606580
   Budgen D., 2006, P 28 INT C SOFTW ENG, P1051, DOI DOI 10.1145/1134285.1134500
   CANFORA G, 2006, P 2006 ACM S APPL CO, P1767, DOI DOI 10.1145/1141277.1141693
   CAVALCANTI YC, 2014, P 29 ACM IEEE INT C, P325, DOI DOI 10.1145/2642937.2642964
   Cavalcanti YC, 2016, J SYST SOFTWARE, V115, P82, DOI 10.1016/j.jss.2016.01.038
   Cavalcanti YC, 2014, J SOFTW-EVOL PROC, V26, P620, DOI 10.1002/smr.1639
   Chaparro O, 2017, PROC IEEE ACM INT C, P421, DOI 10.1109/ICSE-C.2017.27
   Chen L, 2010, INT J ANTENN PROPAG, V2010, DOI 10.1155/2010/564357
   Clough P, 2013, INFORM RES, V18
   Cormack G. V., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P533, DOI 10.1145/1148170.1148262
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Cuzick J, 2005, LANCET, V365, P1308, DOI 10.1016/S0140-6736(05)61026-4
   Dedik V, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P363, DOI 10.1109/SEAA.2016.20
   Florea AC, 2017, LECT NOTES COMPUT SC, V10614, P64, DOI 10.1007/978-3-319-68612-7_8
   Florea AC, 2017, LECT NOTES ARTIF INT, V10246, P31, DOI 10.1007/978-3-319-59060-8_4
   Fomel S, 2009, COMPUT SCI ENG, V11, P5, DOI 10.1109/MCSE.2009.14
   *GITH, 2018, CLOS ISS US KEYW
   GITHUB, 2017, COLL
   Goyal A, 2017, PROC IEEE ACM INT C, P487, DOI 10.1109/ICSE-C.2017.41
   Helming J, 2010, INT C EV NOV APPR SO, P236
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   Hosseini H, 2012, EUR CON SFTWR MTNCE, P149, DOI 10.1109/CSMR.2012.25
   HOSSEN MK, 2014, P 22 INT C PROGR COM, P130
   Hu H, 2014, PROC INT SYMP SOFTW, P122, DOI 10.1109/ISSRE.2014.17
   Hu XT, 2013, I S BIOMED IMAGING, P1082
   Imtiaz S, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1832
   Jain S., 2016, International Dental and Medical Journal of Advance Research, V2, P1
   Jain V, 2012, IEEE SYS MAN CYBERN, P2845, DOI 10.1109/ICSMC.2012.6378180
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jonsson L., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P437, DOI 10.1109/ICST.2012.56
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Jonsson L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1361, DOI 10.1109/ICSE.2013.6606717
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Kagdi H, 2009, INT C PROGRAM COMPRE, P273, DOI 10.1109/ICPC.2009.5090056
   Kagdi H, 2008, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2008.4658064
   Karim MR, 2016, J SOFTW-EVOL PROC, V28, P1025, DOI 10.1002/smr.1777
   KATERENCHUK D, 2018, ARXIV180300719
   Kevic K, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P17, DOI 10.1109/CHASE.2013.6614727
   Khalil E, 2017, LECT NOTES COMPUT SC, V10452, P124, DOI 10.1007/978-3-319-66299-2_9
   Khatun A, 2016, INT CONF COMPUT INFO, P592, DOI 10.1109/ICCITECHN.2016.7860265
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Kitchenham B., 2007, 2007001 EBSE
   Kumari M, 2016, PROCEDIA COMPUT SCI, V89, P555, DOI 10.1016/j.procs.2016.06.093
   Lee SR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P926, DOI 10.1145/3106237.3117776
   Lin ZP, 2009, INT SYMP EMP SOFTWAR, P452
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   Lioma C, 2017, ICTIR'17: PROCEEDINGS OF THE 2017 ACM SIGIR INTERNATIONAL CONFERENCE THEORY OF INFORMATION RETRIEVAL, P91, DOI 10.1145/3121050.3121072
   Liu HT, 2016, INT CONF SEMANT, P1, DOI [10.1109/SKG.2016.11, 10.1109/SKG.2016.009]
   Liu J, 2016, INT J SOFTW ENG KNOW, V26, P1593, DOI 10.1142/S0218194016710030
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   MCGAW B, 1980, AM EDUC RES J, V17, P325, DOI 10.3102/00028312017003325
   McNee S M., 2006, Search, P1097
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Murphy G., 2004, P 16 INT C SOFTW ENG, P1
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Nasim S., 2011, Proceedings of the 2011 Frontiers of Information Technology (FIT 2011), P298, DOI 10.1109/FIT.2011.62
   Park J.-w., 2011, Costriage: a cost-aware triage algorithm for bug reporting systems, V25, P139, DOI DOI 10.1609/AAAI.V25I1.7839
   Park JW, 2016, KNOWL INF SYST, V48, P679, DOI 10.1007/s10115-015-0893-9
   Peng RD, 2011, SCIENCE, V334, P1226, DOI 10.1126/science.1213847
   Rahman M., 2012, Pharmaceutical Technology Report, Ashland Specialty Ingredients, P1, DOI DOI 10.1109/IJCNN.2012.6252669
   Rahman MM, 2009, INT SYMP EMP SOFTWAR, P440
   Runeson P, 2012, Case Study Research in Software Engineering: Guidelines and Examples, V1
   Saha RK, 2015, INFORM SOFTWARE TECH, V65, P114, DOI 10.1016/j.infsof.2015.03.002
   SAHU TP, 2016, INDIAN J SCI TECHNOL, V9
   SAJEDI A, 2016, P 19 INT C FUND APPR
   SAJEDIBADASHIAN. A, 2020, VOCABULARY TIM UNPUB, P1
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Santos A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239239
   Schwab M, 2000, COMPUT SCI ENG, V2, P61, DOI 10.1109/5992.881708
   Servant F, 2012, PROC INT CONF SOFTW, P36, DOI 10.1109/ICSE.2012.6227208
   Shani G, 2011, RECOMMENDER SYSTEMS HANDBOOK, P257, DOI 10.1007/978-0-387-85820-3_8
   Sharma M, 2015, LECT NOTES COMPUT SC, V9158, P444, DOI 10.1007/978-3-319-21410-8_35
   Shi Y, 2012, SIGIR 2012: PROCEEDINGS OF THE 35TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P155, DOI 10.1145/2348283.2348308
   Shokripour R, 2015, J SYST SOFTWARE, V102, P109, DOI 10.1016/j.jss.2014.12.049
   Shokripour R, 2014, IET SOFTW, V8, P269, DOI 10.1049/iet-sen.2013.0150
   Shokripour R, 2013, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2013.6623997
   Shokripour R, 2012, INT CONF ADV COMPUT, P144, DOI 10.1109/ACSAT.2012.56
   Sisman B, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1805
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Sun XB, 2017, J SYST SOFTWARE, V134, P355, DOI 10.1016/j.jss.2017.09.021
   Sun XB, 2014, 2014 3RD INTERNATIONAL WORKSHOP ON EVIDENTIAL ASSESSMENT OF SOFTWARE TECHNOLOGIES (EAST), P32, DOI 10.1145/2627508.2627514
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Tamrawi A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P884, DOI 10.1145/1985793.1985934
   Tao Zhang, 2012, Intelligent Computing Technology. Proceedings 8th International Conference, ICIC 2012, P505, DOI 10.1007/978-3-642-31588-6_65
   Thom James, 2007, P 12 AUSTRALASIAN DO, P100
   Tung Thanh Nguyen, 2014, ACM SIGSOFT Software Engineering Notes, V39, DOI 10.1145/2557833.2560585
   Vehtari A, 2016, J MACH LEARN RES, V17
   Wang H, 2014, TRENDS ENDOCRIN MET, V25, P8, DOI 10.1016/j.tem.2013.10.003
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weidt F., 2016, Relatorios Tecnicos do DCC/UFJF, V1, P1, DOI [10.1027/1016-9040.11.3.244, DOI 10.1027/1016-9040.11.3.244]
   Wu WJ, 2011, ASIA PAC SOFWR ENG, P389, DOI 10.1109/APSEC.2011.15
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xia X, 2015, J SOFTW-EVOL PROC, V27, P195, DOI 10.1002/smr.1706
   Xie X, 2012, P 8 INT C PRED MOD S, P19, DOI [DOI 10.1145/2365324.2365329, 10.1145/2365324.2365329]
   Xu GY, 2010, MOL PAIN, V6, DOI 10.1186/1744-8069-6-68
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Yan M, 2016, INFORM SOFTWARE TECH, V73, P37, DOI 10.1016/j.infsof.2016.01.005
   Yang B., 2002, ADV DEV HUM RESOUR, V4, P296, DOI DOI 10.1177/15222302004003005
   Yang G, 2014, P 29 ANN ACM S APPL, P1134
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zanjani MB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1091, DOI 10.1145/2950290.2983960
   Zanjani MB, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P88, DOI 10.1109/MSR.2015.16
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
   Zhang M, 2008, RECSYS'08: PROCEEDINGS OF THE 2008 ACM CONFERENCE ON RECOMMENDER SYSTEMS, P123
   Zhang T, 2017, INT C PROGRAM COMPRE, P230, DOI 10.1109/ICPC.2017.28
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
   Zhang W, 2016, CHINESE J ELECTRON, V25, P1011, DOI 10.1049/cje.2016.08.012
   Zhang W, 2016, INFORM SOFTWARE TECH, V70, P68, DOI 10.1016/j.infsof.2015.10.004
   Zhang XH, 2017, LECT NOTES COMPUT SC, V10221, P3, DOI 10.1007/978-3-319-56856-0_1
   Zhou Y, 2016, J SOFTW-EVOL PROC, V28, P150, DOI 10.1002/smr.1770
NR 134
TC 12
Z9 13
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2020
VL 32
IS 9
AR e2250
DI 10.1002/smr.2250
EA MAR 2020
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NO3YE
UT WOS:000517612700001
DA 2024-07-18
ER

PT J
AU Liu, G
   Lavazza, L
   Tosi, D
AF Liu, Geng
   Lavazza, Luigi
   Tosi, Davide
TI Evolution of functional size measures through ICONIX process phases
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE early size measurement; function points; functional size measurement
AB Functional size measures are used in several software development processes, because they can be applied as soon as the functional user requirements of a software application have been specified. Quite often, functional user requirements are used as the main input of effort and cost estimation. Since effort and cost estimates are fundamental for decision making, project managers would like to get reasonably accurate estimates even before user requirements have been specified completely and at the proper level of detail. To this end, early size estimation methods have been proposed. In this paper, we consider a specific situation; namely, we consider processes in which the requirements elicitation and modeling phases are carried out according to the ICONIX process. The ICONIX process involves a few stages, each one tackling an aspect of requirements and delivering a specific artifact, in the form of a UML model. We explore the possibility of deriving from ICONIX artifacts the information needed to estimate the final size of the application. To this end, we analyzed the requirements of 21 software applications and derived statistical models that correlate the information extracted from ICONIX artifacts to the size, expressed in function points, of the application. The analysis of the achieved estimates shows that the approach is viable, in that it provides early estimates with good accuracy.
C1 [Liu, Geng] Hangzhou Dianzi Univ, Sch Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Liu, Geng; Lavazza, Luigi; Tosi, Davide] Univ Insubria, Dipartimento Sci Teor & Applicate, Via O Rossi 9, I-21100 Varese, Italy.
C3 Hangzhou Dianzi University; University of Insubria
RP Lavazza, L (corresponding author), Univ Insubria, Dipartimento Sci Teor & Applicate, Via O Rossi 9, I-21100 Varese, Italy.
EM luigi.lavazza@uninsubria.it
RI Lavazza, Luigi/AAF-5323-2020; TOSI, DAVIDE/AAI-1310-2020
OI TOSI, DAVIDE/0000-0003-3815-2512; Lavazza, Luigi/0000-0002-5226-4337
FU Chinese Scholarship Council [201708330399]; Zhejiang Provincial Science
   Foundation of China [LY19F020046, LY17F020023]
FX Chinese Scholarship Council, Grant/Award Number: 201708330399; Zhejiang
   Provincial Science Foundation of China, Grant/Award Number: LY19F020046
   and LY17F020023
CR Abualkishik AZ, 2018, INFORM SOFTWARE TECH, V97, P179, DOI 10.1016/j.infsof.2018.01.012
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   [Anonymous], [No title captured]
   [Anonymous], 2015, COSMIC FUNCT SIZ MEA
   [Anonymous], 2005, 11 IEEE INT SOFTW ME
   [Anonymous], 2017, PROC 21 INT C EVAL A
   Asadullah M, 2015, THESIS
   Bernstein L, 2005, TRUSTWORTHY SYSTEMS THROUGH QUANTITATIVE SOFTWARE ENGINEERING, P1, DOI 10.1002/0471750336
   Cao J, 2012, SOFTWARE PROJECT FUN
   del Bianco V, 2014, INFORM SOFTWARE TECH, V56, P1253, DOI 10.1016/j.infsof.2014.04.009
   Fetcke T, 1999, AAS1999 U QUEB MONTR
   Gencel C, 2009, ASIA PAC SOFWR ENG, P19, DOI 10.1109/APSEC.2009.51
   IFPUG, 2004, TECH REP
   International Function Point Users Group (IFPUG), 2010, FUNCT POINT COUNT PR
   International Standardization Organization (ISO), 2003, 209262003 ISO IEC
   ISBSG International Software Benchmarking Standards Group, 2012, ISBSG REP
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Lavazza L, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P160, DOI 10.1109/IWSM-MENSURA.2012.32
   Lavazza Luigi, 2013, J ADV SOFTWARE, V6, P1
   Lavazza LA, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P100
   Liu G, 2016, P 11 INT C SOFTW ENG, P52
   Monsalve C, 2011, INT J SOFTW ENG KNOW, V21, P311, DOI 10.1142/S0218194011005359
   nesma, EARL FUNCT POINT AN
   ROSENBERG D., 2005, Agile Development with ICONIX Process-People, Process, and Pragmatism
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Simple Function Point Association (SiFPA), 2014, SIMPLE FUNCT POINT F
   Tichenor C., 1998, IFPUG FALL C USE ESC
   Timp A, 2015, UTIP IFPUG 03
   Ungan E, 2018, P ACAD PAPERS IWSM M, P1
   Ungan E., 2018, The China Software Cost Measurement Conference, September 19-20, 2018, P123
NR 30
TC 1
Z9 1
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2020
VL 32
IS 5
AR e2240
DI 10.1002/smr.2240
EA DEC 2019
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LH7EN
UT WOS:000501974500001
DA 2024-07-18
ER

PT J
AU Ramírez-Mora, SL
   Oktaba, H
   Pérez, JP
AF Ramirez-Mora, Sandra L.
   Oktaba, Hanna
   Patlan Perez, Juana
TI Group maturity, team efficiency, and team effectiveness in software
   development: A case study in a CMMI-DEV Level 5 organization
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Agile Software Development; case study; CMMI-DEV; effectiveness;
   efficiency; group maturity
ID QUALITY; SUCCESS
AB Group aspects are essential to the success of software projects; however, almost no research regarding group maturity in CMMI-DEV Level 5 organizations has been conducted. The objective of this work is to investigate group maturity and its relationship to the efficiency and effectiveness of Agile Software Development teams in a CMMI-DEV Level 5 organization. A case study was conducted, and three data collection methods were used: a validated questionnaire was given to nine agile software teams (59 people) to measure specific aspects of group maturity, team efficiency, and team effectiveness; the effort to develop Use Case Points and a group rate (related to productivity and salary) were collected to investigate team efficiency, and focus group sessions and semi-structured interviews were conducted with project managers and team leaders to explore group issues in software development. Aspects of group maturity were correlated with team effectiveness and team efficiency measures. Communication was found to be strongly correlated with team effectiveness and group rate, and conformity and the clarity of roles and goals were found to be strongly correlated with team efficiency. The results suggest that group maturity has a positive influence on software teams in CMMI-DEV Level 5 organizations.
C1 [Ramirez-Mora, Sandra L.] Univ Nacl Autonoma Mexico, Posgrad Ciencia & Ingn Comp, Mexico City, DF, Mexico.
   [Oktaba, Hanna] Univ Nacl Autonoma Mexico, Fac Ciencias, Mexico City, DF, Mexico.
   [Patlan Perez, Juana] Univ Nacl Autonoma Mexico, Fac Psicol, Mexico City, DF, Mexico.
C3 Universidad Nacional Autonoma de Mexico; Universidad Nacional Autonoma
   de Mexico; Universidad Nacional Autonoma de Mexico
RP Ramírez-Mora, SL (corresponding author), Univ Nacl Autonoma Mexico, Posgrad Ciencia & Ingn Comp, Mexico City, DF, Mexico.
EM sandra.ramirez@ciencias.unam.mx
FU Consejo Nacional de Ciencia y Tecnologia; Universidad Nacional Autonoma
   de Mexico
FX Consejo Nacional de Ciencia y Tecnologia; Universidad Nacional Autonoma
   de Mexico
CR Al-Sabbagh K, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1896
   [Anonymous], 2005, Social Psychology
   [Anonymous], 2004, GUID PROJ MAN BOD KN
   [Anonymous], 2001, 2000012011 ISOIEC
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   CMMI Product Team, 2010, CMMIR DEV VERS 1 3
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Collabnet Versionone, 2018, 13 ANN STAT AG REP
   CRONBACH LJ, 1955, PSYCHOL BULL, V52, P281, DOI 10.1037/h0040957
   CRONBACH LJ, 1951, PSYCHOMETRIKA, V16, P297, DOI [10.1007/BF02310555, DOI 10.1007/BF02310555]
   Dallal G., 2012, LITTLE HDB STAT PRAC
   Denis A, 2015, SYSTEM ANAL DESIGN O
   Elrod P. D., 2008, IEEE ENG MANAGEMENT, V36, P52
   EVANS NJ, 1980, SMALL GROUP BEHAV, V11, P359, DOI 10.1177/104649648001100401
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   FESTINGER L, 1950, PSYCHOL REV, V57, P271, DOI 10.1037/h0056932
   Figueiredo Filho Dalson Britto, 2013, Bras. political sci. rev., V7, P31
   Fowler M., 2001, Software Development, V9, P28
   Gil F, 2008, PAPEL PSICOL, V29, P25
   GOODMAN PS, 1987, RES ORGAN BEHAV, V9, P121
   Gren L, 2018, INFORM SOFTWARE TECH, V99, P11, DOI 10.1016/j.infsof.2018.02.006
   Gren L, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P1, DOI 10.1109/SEAA.2015.31
   Hoegl M, 2001, ORGAN SCI, V12, P435, DOI 10.1287/orsc.12.4.435.10635
   ISO/IEC, 2014, 270002014 ISOIEC
   Jensen, 1977, GROUP ORGAN STUD, V2, P419, DOI [DOI 10.1177/105960117700200404, 10.1177/105960117700200404]
   JORESKOG KG, 1969, PSYCHOMETRIKA, V34, P183, DOI 10.1007/BF02289343
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Kreitner R., 2007, FUNDAMENTALS ORG BEH
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   MAAGTIC, 2011, MAN ADM APL GEN MAT
   Marks MA, 2001, ACAD MANAGE REV, V26, P356, DOI 10.5465/AMR.2001.4845785
   McLeod L, 2011, EMPIR SOFTW ENG, V16, P430, DOI 10.1007/s10664-010-9153-5
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Mohamed MS, 2018, ANAL CORRELATED DATA
   MULLEN B, 1994, PSYCHOL BULL, V115, P210, DOI 10.1037/0033-2909.115.2.210
   Myers JL, 2010, DEV FUNDAMENTALS HYP
   Nunnally J.C., 1978, Assessment of Reliability. Psychometric Theory, V2nd
   Oktaba H, 2005, PROCESSES MODEL SOFT
   Pearson K., 1895, P R SOC LOND, V58, P240, DOI [DOI 10.1098/RSPL.1895.0041, 10.1098/rspl.1895.0041]
   Ramírez-Mora SL, 2018, PROC IEEE INT CONF S, P732, DOI 10.1109/ICSME.2018.00091
   Ramírez-Mora SL, 2017, 2017 5TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2017), P44, DOI 10.1109/CONISOFT.2017.00013
   Robbins S.P., 2009, ORG BEHAV, V13th
   Robson C., 2017, Real world research, V4th
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Salas E, 2005, SMALL GR RES, V36, P555, DOI 10.1177/1046496405277134
   Schermerhorn J.R., 2002, Organizational behavior
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shah S. M. A., 2015, ACM INT C P SERIES, DOI [10.1145/2785592.2785618, DOI 10.1145/2785592.2785618]
   Sieber J. E., 2001, Empirical Software Engineering, V6, P329, DOI 10.1023/A:1011978700481
   Stake Robert E., 1995, The Art of Case Study Research
   Stigler Stephen M, 1989, Statistical Science, V1989, P73, DOI DOI 10.1214/SS/1177012580
   Torrelles C, 2011, PROFESORADO, V15, P329
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
   Wheelan SA, 1998, SMALL GR RES, V29, P371, DOI 10.1177/1046496498293005
   Wheelan SA, 1996, SMALL GR RES, V27, P143, DOI 10.1177/1046496496271007
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zalesny M.D., 1995, Research in Personnel and Human Resources Management, V13, P81
NR 60
TC 8
Z9 9
U1 1
U2 32
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2020
VL 32
IS 4
AR e2232
DI 10.1002/smr.2232
EA OCT 2019
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA KZ8FW
UT WOS:000491138400001
DA 2024-07-18
ER

PT J
AU Verenich, I
   Dumas, M
   La Rosa, M
   Nguyen, H
AF Verenich, Ilya
   Dumas, Marlon
   La Rosa, Marcello
   Nguyen, Hoang
TI Predicting process performance: A white-box approach based on process
   models
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE explainable artificial intelligence; flow analysis; predictive process
   monitoring; process mining; transparent models
ID TIME PREDICTION; SAMPLE-SIZE
AB Predictive business process monitoring methods exploit historical process execution logs to provide predictions about running instances of a process. These predictions enable process workers and managers to preempt performance issues or compliance violations. A number of approaches have been proposed to predict quantitative process performance indicators for running instances of a process, including remaining cycle time, cost, or probability of deadline violation. However, these approaches adopt a black-box approach, insofar as they predict a single scalar value without decomposing this prediction into more elementary components. In this paper, we propose a white-box approach to predict performance indicators of running process instances. The key idea is to first predict the performance indicator at the level of activities and then to aggregate these predictions at the level of a process instance by means of flow analysis techniques. The paper develops this idea in the context of predicting the remaining cycle time of ongoing process instances. The proposed approach has been evaluated on real-life event logs and compared against several baselines.
C1 [Verenich, Ilya; Nguyen, Hoang] Queensland Univ Technol, Sch Informat Syst, Brisbane, Qld, Australia.
   [Verenich, Ilya; Dumas, Marlon] Univ Tartu, Inst Comp Sci, Tartu, Estonia.
   [Verenich, Ilya; La Rosa, Marcello] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
C3 Queensland University of Technology (QUT); University of Tartu;
   University of Melbourne
RP Verenich, I (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
EM ilya.verenich@unimelb.edu.au
RI Dumas, Marlon/H-2757-2015; La Rosa, Marcello/J-1088-2012
OI Dumas, Marlon/0000-0002-9247-7476; 
FU Australian Research Council [DP180102839]; Eesti Teadusagentuur
   [IUT20-55]
FX T Australian Research Council, Grant/Award Number: DP180102839; Eesti
   Teadusagentuur, Grant/Award Number: IUT20-55
CR Andrews R, 2016, COMP STAT DYNAMIC AS
   [Anonymous], LNBIP
   [Anonymous], 2017, ABS170502288 CORR
   [Anonymous], 2004, Web Semantics: Science, Services and Agents on the World Wide Web, DOI DOI 10.1016/J.WEBSEM.2004.03.001
   Armas-Cervantes A, 2016, INFORM SYST, V56, P304, DOI 10.1016/j.is.2015.09.009
   Augusto A, 2016, LECT NOTES COMPUT SC, V9974, P313, DOI 10.1007/978-3-319-46397-1_25
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Blumenfeld D, 2012, OPERATIONS RES CALCU
   Breuker D, 2016, MIS QUART, V40, P1009, DOI 10.25300/MISQ/2016/40.4.10
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Conforti R, 2015, DECIS SUPPORT SYST, V69, P1, DOI 10.1016/j.dss.2014.10.006
   de Leoni M, 2016, INFORM SYST, V56, P235, DOI 10.1016/j.is.2015.07.003
   Dumas M., 2013, Fundamentals of Business Process Management, DOI DOI 10.1007/978-3-662-56509-4
   Márquez-Chamorro AE, 2018, IEEE T SERV COMPUT, V11, P962, DOI 10.1109/TSC.2017.2772256
   Evermann J, 2017, LECT NOTES BUS INF P, V281, P327, DOI 10.1007/978-3-319-58457-7_24
   Fayyad U, 1996, AI MAG, V17, P37
   FogBugz, EV BAS SCHED
   Fowler B, 2017, 2017 SYSTEMS AND INFORMATION ENGINEERING DESIGN SYMPOSIUM (SIEDS), P253, DOI 10.1109/SIEDS.2017.7937726
   FUKUNAGA K, 1989, IEEE T PATTERN ANAL, V11, P873, DOI 10.1109/34.31448
   Hastie T., 2009, The Elements of Statistical Learning
   Hyndman RJ, 2006, INT J FORECASTING, V22, P679, DOI 10.1016/j.ijforecast.2006.03.001
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kull Meelis, 2014, Machine Learning and Knowledge Discovery in Databases. European Conference, ECML PKDD 2014. Proceedings: LNCS 8725, P18, DOI 10.1007/978-3-662-44851-9_2
   Lakshmanan GT, 2015, KNOWL INF SYST, V42, P97, DOI 10.1007/s10115-013-0697-8
   Leontjeva A, 2015, LECT NOTES COMPUT SC, V9253, P297, DOI 10.1007/978-3-319-23063-4_21
   Levy A, 2014, MACHINE LIKENESS EXP
   Lipton ZC, 2018, COMMUN ACM, V61, P36, DOI 10.1145/3233231
   Maggi FM, 2014, LECT NOTES COMPUT SC, V8484, P457, DOI 10.1007/978-3-319-07881-6_31
   Metzger A., 2012, Proceedings of the 2012 Annual SRII Global Conference (SRII), P313, DOI 10.1109/SRII.2012.42
   MITCHELL T, 1989, ANNU REV COMPUT SCI, V4, P417
   Möller A, 2016, J COSMOL ASTROPART P, DOI 10.1088/1475-7516/2016/12/008
   Olson RS, 2017, ABS170805070 CORR, V2017
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Polato M, 2014, IEEE IJCNN, P816, DOI 10.1109/IJCNN.2014.6889360
   Polyvyanyy A, 2009, LECT NOTES COMPUT SC, V5701, P229, DOI 10.1007/978-3-642-03848-8_16
   Ranzato MA., 2007, CVPR, DOI [10.1109/cvpr.2007.383157, 10.1109/CVPR.2007.383157]
   RAUDYS SJ, 1991, IEEE T PATTERN ANAL, V13, P252, DOI 10.1109/34.75512
   Rees-Jones Mitch, 2017, ABS170207735 CORR
   Rogge-Solti A, 2015, INFORM SYST, V54, P1, DOI 10.1016/j.is.2015.04.004
   Rogge-Solti A, 2013, LECT NOTES COMPUT SC, V8274, P389, DOI 10.1007/978-3-642-45005-1_27
   Senderovich A, 2017, LECT NOTES COMPUT SC, V10445, P306, DOI 10.1007/978-3-319-65000-5_18
   Senderovich A, 2015, INFORM SYST, V53, P278, DOI 10.1016/j.is.2015.03.010
   Tabachnick B.G., 2012, Using multivariate statistics, V6th
   Tan PN, 2013, INTRO DATA MINING WH
   Tax N, 2017, LECT NOTES COMPUT SC, V10253, P477, DOI 10.1007/978-3-319-59536-8_30
   Teinemaa I., 2017, ABS170706766 CORR
   Teinemaa I, 2016, LECT NOTES COMPUT SC, V9850, P401, DOI 10.1007/978-3-319-45348-4_23
   Torlay L, 2017, Brain Inform, V4, P159, DOI 10.1007/s40708-017-0065-7
   Urraca R, 2017, ADV INTELL SYST COMP, V527, P105, DOI 10.1007/978-3-319-47364-2_11
   van der Aalst WMP, 2011, INFORM SYST, V36, P450, DOI 10.1016/j.is.2010.09.001
   van der Aalst WMP, 2010, IEEE COMPUT INTELL M, V5, P28, DOI 10.1109/MCI.2009.935307
   van der Spoel S, 2013, LECT NOTES BUS INF P, V162, P60
   van Dongen BF, 2008, LECT NOTES COMPUT SC, V5331, P319
   Verenich I, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P85, DOI 10.1145/3084100.3084110
   Yang Y, 2012, J SYST SOFTWARE, V85, P1818, DOI 10.1016/j.jss.2012.03.005
NR 55
TC 17
Z9 18
U1 2
U2 27
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2019
VL 31
IS 6
SI SI
AR e2170
DI 10.1002/smr.2170
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE9GT
UT WOS:000472683600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wolski, M
   Walter, B
   Kupinski, S
   Chojnacki, J
AF Wolski, Marcin
   Walter, Bartosz
   Kupinski, Szymon
   Chojnacki, Jakub
TI Software quality model for a research-driven organizationAn experience
   report
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE quality models; software measurement; software process improvement;
   software quality
ID FRAMEWORK
AB In the paper, we present a measurement framework for evaluating quality in software products developed within the research and innovation framework project GEANT. The proposed framework is based on the quality models by Boehm and McCall, but also addresses the presence and point of view of a third stakeholder: an external funding agency (EU), which has started and is temporally financing the project, but aims at making it self-financing in the future. We also provide results of evaluation of 2 projects from the GEANT ecosystem and one open-source system with this framework.
C1 [Wolski, Marcin; Walter, Bartosz; Kupinski, Szymon; Chojnacki, Jakub] Poznan Supercomp & Networking Ctr, Poznan, Poland.
   [Walter, Bartosz] Poznan Univ Tech, Fac Comp, Poznan, Poland.
C3 Polish Academy of Sciences; Poznan Supercomputing & Networking Center;
   Poznan University of Technology
RP Walter, B (corresponding author), Poznan Univ Tech, Fac Comp, Poznan, Poland.
EM bartosz.walter@cs.put.poznan.pl
RI Walter, Bartosz/A-3234-2013; Chojnacki, Jakub/AAL-8170-2021
OI Walter, Bartosz/0000-0003-1212-2390; Wolski, Marcin/0000-0001-5550-7739;
   Kupinski, Szymon/0000-0002-4704-6802
FU H2020 Research Infrastructures [731122 (GN4-2)]
FX H2020 Research Infrastructures, Grant/Award Number: 731122 (GN4-2)
CR Adewumi A, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-3612-4
   [Anonymous], MEASURING INFORM SYS
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], 2012, EXPT SOFTWARE ENG, DOI DOI 10.1007/978-3-642-29044-2
   [Anonymous], 2016, SERVICE VALIDATION T
   Aversano L., 2010, ENASE 2010 P 5 INT C
   Barney S, 2012, INFORM SOFTWARE TECH, V54, P651, DOI 10.1016/j.infsof.2012.01.008
   Behkamal B, 2009, INFORM SOFTWARE TECH, V51, P599, DOI 10.1016/j.infsof.2008.08.001
   Bilicki V, 2014, FAILURE SUCCESSHOW M
   Boehm B., 1980, CHARACTERISTICS SOFT
   Casey Valentine, 2008, Software Process: Improvement and Practice, V13, P511, DOI 10.1002/spip.404
   (Chaos)   Standish Group, 2015, CHAOS REP Q A J LYNC
   Deissenboeck F, 2009, WOSQ: 2009 ICSE WORKSHOP ON SOFTWARE QUALITY, P9, DOI 10.1109/WOSQ.2009.5071551
   Ferenc R, 2013, EVOLVING SOFTWARE SY, P65, DOI [10. 1007/978-3-642-45398-4_3, DOI 10.1007/978-3-642-45398-4_3]
   GEANT, 2012, DEL SERV BORD
   ISO/IEC, 2001, Technical Report, V1st
   Likert R., 1932, ARCH PSYCHOL, V22, P55
   Lochmann K, 2011, P 8 INT WORKSH SOFTW, DOI [DOI 10.1145/2024587.2024591, 10. 1145/2024587. 2024591]
   McCall J.A., 1977, Factors in Software Quality, Volumes I, II, and III, VIII
   Mordal K, 2013, J SOFTW-EVOL PROC, V25, P1117, DOI 10.1002/smr.1558
   Moreira G.de Souza Pereira., 2010, Information technology: New generations (itng), 2010 seventh international conference on, P1177, DOI [10.1109/ITNG.2010.85, DOI 10.1109/ITNG.2010.85]
   Nakai H, 2017, IEEE REG 10 ANN INT, DOI [10. 1109/TENCON. 2016. 7848750, DOI 10.1109/TENCON.2016.7848750]
   Richardson I, 2012, INFORM SOFTWARE TECH, V54, P1175, DOI 10.1016/j.infsof.2012.05.002
   Scacchi W, 2007, ESEC FSE 06 6 JOINT
   Schrettner L, 2012, EUR CON SFTWR MTNCE, P453, DOI 10.1109/CSMR.2012.57
   Seffah A, 2006, SOFTWARE QUAL J, V14, P159, DOI 10.1007/s11219-006-7600-8
   Townsend A.M., 1998, Academy of Management Executive, V12, P17, DOI [10.1088/2043-6262/7/3/035017, DOI 10.1088/2043-6262/7/3/035017, 10.5465/ame.1998.1109047, DOI 10.5465/AME.1998.1109047]
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Wagner S, 2012, 2012 34 INT C SOFTW, DOI [10. 1109/icse. 2012. 6227106, DOI 10.1109/ICSE.2012.6227106]
   Wolski M, 2016, 2016 JOINT C INT WOR, DOI [10. 1109/iwsm-mensura. 2016. 031, DOI 10.1109/IWSM-MENSURA.2016.031]
   Yamashita A, 2015, 2015 IEEE INT C SOFT, DOI [10. 1109/icsm. 2015. 7332493, DOI 10.1109/ICSM.2015.7332493]
NR 31
TC 2
Z9 2
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2018
VL 30
IS 5
SI SI
AR e1911
DI 10.1002/smr.1911
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GI1OG
UT WOS:000434139400001
DA 2024-07-18
ER

PT J
AU Idri, A
   Abnane, I
   Abran, A
AF Idri, Ali
   Abnane, Ibtissam
   Abran, Alain
TI Evaluating Pred(<i>p</i>) and standardized accuracy criteria in software
   development effort estimation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE accuracy measure; MMRE; Pred(p); software development effort estimation;
   standardized accuracy
ID COST ESTIMATION; PROJECT EFFORT; ANALOGY; VALIDITY; MODELS
AB Software development effort estimation (SDEE) plays a primary role in software project management. But choosing the appropriate SDEE technique remains elusive for many project managers and researchers. Moreover, the choice of a reliable estimation accuracy measure is crucial because SDEE techniques behave differently given different accuracy measures. The most widely used accuracy measures in SDEE are those based on magnitude of relative error (MRE) such as mean/median MRE (MMRE/MedMRE) and prediction at level p (Pred(p)), which counts the number of observations where an SDEE technique gave MREs lower than p. However, MRE has proven to be an unreliable accuracy measure, favoring SDEE techniques that underestimate. Consequently, an unbiased measure called standardized accuracy (SA) has been proposed.
   This paper deals with the Pred(p) and SA measures. We investigate (1) the consistency of Pred(p) and SA as accuracy measures and SDEE technique selectors, and (2) the relationship between Pred(p) and SA. The results suggest that Pred(p) is less biased towards underestimates and generally selects the same best technique as SA. Moreover, SA and Pred(p) measure different aspects of technique performance, and SA may be used as a predictor of Pred(p) by means of the 3 association rules.
C1 [Idri, Ali; Abnane, Ibtissam] Univ Mohammed 5, Software Project Management Res Team, ENSIAS, Rabat, Morocco.
   [Abran, Alain] Ecole Technol Super, Dept Software Engn, Montreal, PQ, Canada.
C3 Mohammed V University in Rabat; University of Quebec; Ecole de
   Technologie Superieure - Canada
RP Idri, A (corresponding author), Univ Mohammed 5, Software Project Management Res Team, ENSIAS, Rabat, Morocco.
EM ali.idri@um5.ac.ma
RI Abnane, Ibtissam/L-8837-2019; Abran, Alain/I-2493-2016
OI Abnane, Ibtissam/0000-0001-5248-5757; Abran, Alain/0000-0003-2670-9061;
   Idri, Ali/0000-0002-4586-4158
CR Agrawal R., 1996, Advances in Knowledge Discovery and Data Mining, V12, P307, DOI DOI 10.1007/978-3-319-31750-2.
   Amazal FA., 2014, 21 AS PAC SOFTW ENG, P1
   Amazal FA, 2014, INT J COMPUT INTELL, V13, DOI 10.1142/S1469026814500138
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1998, P 4 INT C KNOWLEDGE
   [Anonymous], 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, DOI [DOI 10.1145/1370788.1370804, 10.1145/1370788.1370804]
   [Anonymous], 2012, P PROMISE 12
   Azzeh M., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering, p6:1, DOI [DOI 10.1145/2020390.2020396, 10.1145/2020390.2020396]
   Azzeh M, 2016, APPL SOFT COMPUT, V49, P981, DOI 10.1016/j.asoc.2016.05.008
   Azzeh M, 2015, J SYST SOFTWARE, V103, P36, DOI 10.1016/j.jss.2015.01.028
   Bakir A, 2010, SOFTWARE QUAL J, V18, P57, DOI 10.1007/s11219-009-9081-z
   BEZDEK JC, 1980, IEEE T PATTERN ANAL, V2, P1, DOI 10.1109/TPAMI.1980.4766964
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   de Oliveira Barros M., 2011, Relatorios Tecnicos DIA/UNIRIO, V5, P1
   Deeson E, 1991, COLLINS DICT INFORM
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Foss T, 2001, ANALYSIS
   Franca B, 2015, CLEI ELECT J, V18, P23
   Haykin S., 1999, NEURAL NETWORKS COMP, DOI [10.1017/S0269888998214044, DOI 10.1017/S0269888998214044]
   Herrera F, 2003, INT J INTELL SYST, V18, P309, DOI 10.1002/int.10091
   Idri A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P21, DOI 10.1109/METRIC.2002.1011322
   Idri A, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P85, DOI 10.1109/METRIC.2001.915518
   Idri A, 2006, INF COMMUN TECHNOL M
   Idri A, 2016, J SYST SOFTWARE, V117, P595, DOI 10.1016/j.jss.2016.04.058
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   Kadoda G., 2000, EXPERIENCES USING CA
   Keung J, 2013, AUTOMAT SOFTW ENG, V20, P543, DOI 10.1007/s10515-012-0108-5
   Keung J, 2009, IEEE AUS SOFT ENGR, P327, DOI 10.1109/ASWEC.2009.32
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Lokan C, 2001, IEEE SOFTWARE, V18, P26, DOI 10.1109/52.951491
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Minku L, 2015, INT SYMP EMP SOFTWAR, P172, DOI 10.1109/ESEM.2015.7321199
   Mittas N, 2015, INFORM SOFTWARE TECH, V57, P310, DOI 10.1016/j.infsof.2014.05.010
   Mühlenbein H, 1993, EVOL COMPUT, V1, P25, DOI 10.1162/evco.1993.1.1.25
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   Port Dan., 2009, Studies of confidence in software cost estimation research based on the criterions mmre and pred
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P304, DOI 10.1109/FOSE.2007.23
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sicilia MA, 2005, KYBERNETIKA, V41, P249
   Smola AJ, 2004, STAT COMPUT, V14, P199, DOI 10.1023/B:STCO.0000035301.49549.88
   Stensrud E, 2003, EMPIR SOFTW ENG, V8, P139, DOI 10.1023/A:1023010612345
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   XIE XLL, 1991, IEEE T PATTERN ANAL, V13, P841, DOI 10.1109/34.85677
   Zhou KL, 2014, SCI CHINA INFORM SCI, V57, DOI 10.1007/s11432-014-5146-0
NR 53
TC 40
Z9 40
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2018
VL 30
IS 4
AR e1925
DI 10.1002/smr.1925
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD1ZI
UT WOS:000430299400005
DA 2024-07-18
ER

PT J
AU Poth, A
AF Poth, Alexander
TI Effectivity and economical aspects for agile quality assurance in large
   enterprises
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT Conference on European System and Software Process Improvement and
   Innovation Initiative (EuroSPI2)
CY SEP 30-OCT 02, 2015
CL Ankara Univ, Ankara, TURKEY
HO Ankara Univ
DE agile software development; agile transition; quality assurance; quality
   management; quality risk mitigation
AB The transition from a classical to an agile software development procedure needs a structured and strategic roll out to realize the expected benefits of the transition phase. Quality assurance as part of the software development has also to be designed to realize its targets of the agile transition for adequate project and program quality assurance. Besides effectivity the economic aspects have to be implemented also in a value-driven agile product quality assurance. This tension between effectivity and economy will be shown on the example of the Volkswagen group IT. The transition is mapped to the SPI Manifesto to demonstrate the currency in 2009 of the established values and principles for software process improvement.
C1 [Poth, Alexander] Volkswagen AG, Berliner Ring 2, D-38436 Wolfsburg, Germany.
C3 Volkswagen; Volkswagen Germany
RP Poth, A (corresponding author), Volkswagen AG, Berliner Ring 2, D-38436 Wolfsburg, Germany.
EM alexander.poth@volkswagen.de
RI Poth, Alexander/N-3762-2019
CR Ahmad O, 2013, IEEE P SEAA
   [Anonymous], SOFTWARE INSPECTION
   DeMarco T, 2009, IEEE SOFTWARE, V26, P96, DOI 10.1109/MS.2009.101
   Deming WE, 1982, Out of the crisis
   euroSPI, 2009, SPI MAN
   Garre-Rubio M, 2012, IET SOFTW, V6, P451, DOI 10.1049/iet-sen.2011.0207
   Hernández-López A, 2015, INT J INF TECHNOL SY, V8, P46, DOI 10.4018/IJITSA.2015010103
   Korsaa M, 2013, J SOFTW-EVOL PROC, V25, P381, DOI 10.1002/smr.570
   Madhavan R, 1998, J MARKETING, V62, P1, DOI 10.2307/1252283
   Poth A, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.138
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Vegas S, 2009, IEEE T SOFTWARE ENG, V35, P551, DOI 10.1109/TSE.2009.13
NR 12
TC 8
Z9 11
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2016
VL 28
IS 11
BP 1000
EP 1004
DI 10.1002/smr.1823
PG 5
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA ED0WX
UT WOS:000388564700008
DA 2024-07-18
ER

PT J
AU Bardsiri, AK
   Hashemi, SM
AF Bardsiri, Amid Khatibi
   Hashemi, Seyyed Mohsen
TI A differential evolution-based model to estimate the software services
   development effort
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE development effort; analogy based estimation; software services;
   differential evolution algorithm
ID PROJECT EFFORT; OPTIMIZATION; ALGORITHM; WEIGHTS
AB Accurate estimation of software service development effort is a great challenge both in industry and for academia. The concept of effort is an important and effective parameter in process development and software service management. The reliable estimation of effort helps the project managers to allocate the resources better and manage cost and time so that the project will be finished in the determined time and budget. One of the most popular effort estimation methods is analogy-based estimation (ABE) to compare a service with similar historical cases. Unfortunately, ABE is not capable of generating accurate results unless determining weights for service features. Therefore, this paper aims to make an efficient and reliable model through combining ABE method and differential evolution algorithm to estimate the software services development effort. In fact, the differential evolution algorithm was utilized for weighing features in the similarity function of the ABE method. This weighing process could help determining the importance level of the various service features and extracting the best similar historical case. The proposed hybrid model has been evaluated on two real datasets and two artificial datasets. The obtained results were compared with common effort estimation methods. This comparison showed more accuracy, faster convergence, and lower cost of the proposed model. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Bardsiri, Amid Khatibi] Islamic Azad Univ, Sci & Res Branch, Dept Comp Engn, Tehran, Iran.
   [Hashemi, Seyyed Mohsen] Islamic Azad Univ, Sci & Res Branch, Tehran, Iran.
C3 Islamic Azad University; Islamic Azad University
RP Bardsiri, AK (corresponding author), Islamic Azad Univ, Sci & Res Branch, Dept Comp Engn, Tehran, Iran.
EM a.khatibi@srbiau.ac.ir
RI Bardsiri, Amid Khatibi/AAO-7811-2021
OI Bardsiri, Amid Khatibi/0000-0001-9640-498X; Hashemi, Seyyed
   Mohsen/0000-0002-2285-9540
CR Ahmed MA, 2005, INFORM SOFTWARE TECH, V47, P31, DOI 10.1016/j.infsof.2004.05.004
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Angelis L, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P4
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 1989, ANAL STAT PRODUCTIVI
   [Anonymous], 1991, ROUGH SETS THEORETIC
   Araújo RD, 2012, EXPERT SYST APPL, V39, P6129, DOI 10.1016/j.eswa.2011.11.077
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Azzeh M., 2011, 7 INT C PRED MOD SOF
   Azzeh M, 2014, INT J ADV COMPUT SC, V5, P6
   Azzeh M, 2015, IET SOFTW, V9, P39, DOI 10.1049/iet-sen.2013.0165
   Azzeh M, 2015, J SYST SOFTWARE, V103, P36, DOI 10.1016/j.jss.2015.01.028
   Azzeh M, 2010, EMPIR SOFTW ENG, V15, P60, DOI 10.1007/s10664-009-9113-0
   Bardsiri A.K., 2013, INT J MECHATRONICS E, V3, P1039
   Bardsiri A. K., 2014, INT J COMPUTER SCI E, V3, P46
   Bardsiri VK, 2013, SOFTWARE QUAL J, V21, P501, DOI 10.1007/s11219-012-9183-x
   Boehm BW, 2008, IEEE SOFTWARE, V25, P74, DOI 10.1109/MS.2008.133
   Boehm BW., 1981, Software Engineering Economics
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   BRIAND L, 2000, P 22 INT C SOFTW ENG
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Cusumano M, 2010, COMMUN ACM, V53, P27, DOI 10.1145/1721654.1721667
   DALKEY N, 1963, MANAGE SCI, V9, P458, DOI 10.1287/mnsc.9.3.458
   Daniela Z, 2011, ANALELE U VEST TIMIS, V39, P249
   Dave VS, 2014, ARTIF INTELL REV, V42, P295, DOI 10.1007/s10462-012-9339-x
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Ferrucci F, 2010, 2 INT S SEARCH BAS S
   Gosavi A, 2015, OPER RES COMPUT SCI, V55, P319, DOI 10.1007/978-1-4899-7491-4_10
   Hashemi SM., 2011, GLOBAL VILLAGE SERVI
   Hashemi SM, 2008, WORLD APPL SCI J, V3, P824
   Hirzalla M., 2009, SERV OR COMP ICSOC 2
   Hota H., 2015, COMPUTATIONAL INTELL, P195
   Hsu CJ, 2011, SOFTWARE QUAL J, V19, P165, DOI 10.1007/s11219-010-9110-y
   Hu Z, 2014, MATH PROBL ENG, V2014
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   Jeffery R, 2001, P 7 INT SOFTW METR S
   Jodpimai P, 2010, INT C COMP SCI ITS A
   Jones C., 2007, Estimating Software Costs: Bringing Realism To Estimating
   Jorgensen M, 2010, J SYST SOFTWARE, V83, P29, DOI 10.1016/j.jss.2009.03.076
   KADODA G, 2000, P EASE C KEEL UK
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Li JZ, 2008, EMPIR SOFTW ENG, V13, P63, DOI 10.1007/s10664-007-9054-4
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Li YF, 2007, INT C IND ENG ENG MA
   Limam N, 2010, IEEE T SOFTWARE ENG, V36, P559, DOI 10.1109/TSE.2010.2
   Mair C, 2005, ACM SIGSOFT SOFTW EN
   Malathi S., 2012, Indian Journal of Computer Science and Engineering, V3, P24
   Mezura-Montes E., 2006, P 8 ANN C GEN EV COM
   Milios D, 2011, IFIP ADV INF COMM TE, V364, P350
   Mittas N, 2010, EMPIR SOFTW ENG, V15, P523, DOI 10.1007/s10664-010-9128-6
   Mohanty B, 2014, INT J ELEC POWER, V54, P77, DOI 10.1016/j.ijepes.2013.06.029
   O'Brien L, 2009, SOFTW ENG C ASWEC 09
   Phannachitta P, 2013, 22 SOFTW ENG C ASWEC
   Pickard L., 2001, IEE Proceedings-Software, V148, P165, DOI 10.1049/ip-sen:20010621
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shukla R, 2014, 2 INT C SOFT COMP PR
   Song QB, 2011, EXPERT SYST APPL, V38, P7302, DOI 10.1016/j.eswa.2010.12.005
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Vesterstrom J., 2004, C EV COMP CEC2004
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Wu DS, 2013, J SUPERCOMPUT, V64, P898, DOI 10.1007/s11227-010-0525-9
NR 64
TC 7
Z9 7
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2016
VL 28
IS 1
BP 57
EP 77
DI 10.1002/smr.1765
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB7LL
UT WOS:000368696600003
DA 2024-07-18
ER

PT J
AU Ulziit, B
   Warraich, ZA
   Gencel, C
   Petersen, K
AF Ulziit, Bayarbuyan
   Warraich, Zeeshan Akhtar
   Gencel, Cigdem
   Petersen, Kai
TI A conceptual framework of challenges and solutions for managing global
   software maintenance
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE global software engineering; software maintenance; distributed
   development; outsourcing; management
ID PROCESS IMPROVEMENT; COMMUNICATION; PROGRAMS; ISSUES
AB ContextSoftware maintenance process in globally distributed settings brings significant management challenges to software organizations.
   ObjectivesInvestigate the factors specific to managing software maintenance process in globally distributed settings and best practices in software organizations.
   MethodA systematic literature review and interviews with industry practitioners were conducted. For analysis and synthesis, the grounded theory method was used.
   ResultsWe identified a number of management challenges and mitigation strategies and then classified them under people, process, product, and technology factors. Overall, a structure of challenges and solutions, the conceptual framework, has been developed that may be used to understand and classify global maintenance challenges.
   ConclusionsDistributed software maintenance process has specific management challenges in relation to process, people, product, and technology. Therefore, companies performing maintenance in distributed settings should consider these factors, which are not present in the general global software development literature, although many lessons apply to both. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Ulziit, Bayarbuyan] In Process AB, Stockholm, Sweden.
   [Warraich, Zeeshan Akhtar] Nasdaq OMX, Stockholm, Sweden.
   [Gencel, Cigdem] Free Univ Bolzano Bozen, Bolzano, Italy.
   [Gencel, Cigdem] DEISER, Madrid, Spain.
   [Petersen, Kai] Blekinge Inst Technol, Karlskrona, Sweden.
C3 Free University of Bozen-Bolzano; Blekinge Institute Technology
RP Petersen, K (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM kai.petersen@bth.se
RI Gencel, Cigdem/H-8630-2019
OI Gencel, Cigdem/0000-0003-0115-8902; Petersen, Kai/0000-0002-1532-8223
CR Ahmed RE, 2006, COMPUT ELECTR ENG, V32, P449, DOI 10.1016/j.compeleceng.2006.01.023
   [Anonymous], 1990, QUALITATIVE EVALUATI, DOI DOI 10.1002/NUR.4770140111
   [Anonymous], 2003, ADV SOFTWARE MAINTEN
   [Anonymous], 2005, P 18 ANN C NATL ADVI
   [Anonymous], 2005, The New Oxford American Dictionary
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Bianchi A, 2003, P INT WORKSH GLOB SO, P48
   Boehm BW., 1981, Software Engineering Economics
   Canfora G., 2000, Handbook of Software Engineering and Knowledge Engineering, P91
   Chen JC, 2009, J SYST SOFTWARE, V82, P981, DOI 10.1016/j.jss.2008.12.036
   Corbin J., 2015, BASICS QUALITATIVE R
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   Denzin N. K., 2018, SAGE HDB QUALITATIVE
   Erdil K., 2003, Comp180 Software Engineering Project
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   French A, 1998, PROC IEEE INT CONF S, P146, DOI 10.1109/ICSM.1998.738503
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Gonzalez R, 2005, IND MANAGE DATA SYST, V105, P45, DOI 10.1108/02635570510575180
   Gonzalez R, 2006, INFORM MANAGE-AMSTER, V43, P821, DOI 10.1016/j.im.2006.07.002
   Greco J, 2007, NOUS, P57
   Hall T, 2001, PROC IEEE INT CONF S, P422, DOI 10.1109/ICSM.2001.972755
   Harding D, 1999, BUS IMPR MEAS IEE SE, P6
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Holmström H, 2006, INFORM SYST MANAGE, V23, P7, DOI 10.1201/1078.10580530/46108.23.3.20060601/93703.2
   Hove S. E., 2005, Experiences from conducting semi-structured interviews in empirical software engineering research. Paper presented at: IEEE International Software Metrics Symposium (METRICS), P10, DOI DOI 10.1109/METRICS.2005.24
   Hunt B, 2008, AEROSP CONF PROC, P4513
   Hussey JamesM., 2007, Managing Global Development Risk
   Iqbal A, 2012, COMMUNICATION RISKS
   Jung HW, 2009, INFORM SOFTWARE TECH, V51, P351, DOI 10.1016/j.infsof.2008.04.005
   Keele S., 2007, GUIDELINES PERFORMIN
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Lanubile F., 2003, SIGSOFT Softw. Eng. Notes, V28, P2, DOI DOI 10.1145/966221.966224
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Lientz B P., 1980, Software Maintenance Management
   LUND AM, 1991, IEEE J SEL AREA COMM, V9, P496, DOI 10.1109/49.81940
   M- W Inc, 2004, MERR WEBST COLL DICT
   Matthews P.H., 2007, CONCISE OXFORD DICT
   McChesney I, 1995, PROPOSED CURRICULUM
   Merriam-Webster I, 1988, MERR WEBST COLL THES
   Moe NB, 2007, LECT NOTES COMPUT SC, V4589, P20
   Moore J.W., 1998, SOFTWARE ENG STANDAR
   Nakatsu RT, 2009, INFORM MANAGE-AMSTER, V46, P57, DOI 10.1016/j.im.2008.11.005
   Ng CSP, 2001, PROC IEEE INT CONF S, P528, DOI 10.1109/ICSM.2001.972766
   Nidhra S, 2013, INT J INFORM MANAGE, V33, P333, DOI 10.1016/j.ijinfomgt.2012.11.004
   Noll J., 2011, ACM INROADS, V1, P66, DOI [10.1145/1835428.1835445, DOI 10.1145/1835428.1835445]
   Nor MZM, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON COMPUTER TECHNOLOGY AND DEVELOPMENT, VOL 2, P201, DOI 10.1109/ICCTD.2009.66
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Pigoski TM., 1996, Practical Software Maintenance: Best Practices for Managing Your Software Investment
   Polo M., 2002, Information Technology & Management, V3, P247, DOI 10.1023/A:1015550329456
   Salmeron JL, 2010, J SYST SOFTWARE, V83, P1941, DOI 10.1016/j.jss.2010.05.073
   Sarkar S, 2008, P 1 BANG ANN COMP C, P2
   Sengupta B., 2006, 28th International Conference on Software Engineering Proceedings, P731, DOI 10.1145/1134285.1134402
   Seybold C, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P33
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Smith J.A., 2007, Qualitative psychology: Interpretative phenomenological analysis
   Smith MA, 1996, INFORM MANAGE, V31, P165, DOI 10.1016/S0378-7206(96)01077-4
   Sneed HM, 2008, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSM.2008.4658047
   Sosa Ernest., 2009, VIRTUE EPISTEMOLOGY, V1
   Steinar Kvale., 2009, INTERVIEWS LEARNING, V2nd
   Strauss A. L., 1997, Grounded Theory in Practice
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Tang Li, 2010, 2010 2nd International Workshop on Education Technology and Computer Science (ETCS), P675, DOI 10.1109/ETCS.2010.571
   Thomas G, 2006, BRIT EDUC RES J, V32, P767, DOI 10.1080/01411920600989412
   Tiwana A, 2004, IEEE SOFTWARE, V21, P51, DOI 10.1109/MS.2004.1331302
   Van Grembergen W, 2004, STRATEGIES FOR INFORMATION TECHNOLOGY GOVERNANCE, P1
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wood M, 1997, LECT NOTES COMPUT SC, V1301, P262, DOI 10.1145/267896.267915
   Yan Z g, 2004, EFFICIENT MAINTENANC
NR 73
TC 28
Z9 28
U1 0
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2015
VL 27
IS 10
BP 763
EP 792
DI 10.1002/smr.1720
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT0QO
UT WOS:000362501600002
OA Bronze
DA 2024-07-18
ER

PT J
AU Barabino, G
   Concas, G
   Corona, E
   Grechi, D
   Marchesi, M
   Tigano, D
AF Barabino, Giulio
   Concas, Giulio
   Corona, Erika
   Grechi, Daniele
   Marchesi, Michele
   Tigano, Danilo
TI Web framework points: an effort estimation methodology for Web
   application development using a content management framework
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Web applications; software effort estimation; content management
   framework; function points; Web objects
ID COST ESTIMATION; SOFTWARE
AB Web applications are among the most popular and relevant kinds of application. Most Web applications are developed using a content management framework (CMF). CMF helps to accelerate the publication of large amounts of information and the development of Web applications. However, developing Web applications through CMF is not exempt from cost and time overruns, as in traditional software projects. Currently, there is no estimation model able to adequately measure the effort of developing a Web application.
   This work presents a new methodology, called web framework points, to estimate the effort of Web applications developed with CMF. Web framework points is a hybrid methodology, composed of a sizing phase, which follows specific guidelines, and an effort estimation phase, obtained by applying a cost model to the size model of the project to estimate. The sizing of the project takes into account not only usual functional requirements, as in function points analysis, but also elements specific for developing a Web application through CMF. We also present the experimental validation of the proposed methodology, performed on a dataset of 29 real-world projects, of which 83% show an estimation error of less than 25%. Copyright (C) 2015 John Wiley & Sons, Ltd.
C1 [Barabino, Giulio; Grechi, Daniele; Tigano, Danilo] Univ Genoa, DITEN, Genoa, Italy.
   [Concas, Giulio; Corona, Erika; Marchesi, Michele] Univ Cagliari, DIEE, Cagliari, Italy.
C3 University of Genoa; University of Cagliari
RP Marchesi, M (corresponding author), Univ Cagliari, DIEE, Cagliari, Italy.
EM michele@diee.unica.it
RI Grechi, Daniele/GYD-5197-2022; Marchesi, Michele/U-7048-2019
OI Marchesi, Michele/0000-0003-1540-8773; Grechi,
   Daniele/0000-0002-4783-6855
FU Regione Autonoma della Sardegna (RAS) [CRP-17938 'LEAN 2.0']
FX This research is supported by Regione Autonoma della Sardegna (RAS),
   Regional Law No. 7-2007, project CRP-17938 'LEAN 2.0'. One of the
   authors, Giulio Concas, made a significant contribution to this work
   before he suddenly passed away on 15 October 2014. Giulio was a special
   colleague and friend, and this paper is dedicated to his memory.
CR Abrahao S, 2009, J SYST SOFTWARE, V82, P253, DOI 10.1016/j.jss.2008.06.031
   Aggarwal N., 2009, ACM SIGSOFT SOFTWARE, V34, P1, DOI DOI 10.1145/1507195.1507201
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   Alves LM, 2014, 2014 14TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND ITS APPLICATIONS (ICCSA), P27, DOI 10.1109/ICCSA.2014.17
   [Anonymous], 1986, Software Engineering Metrics and Models
   Aranda J, 2005, ACM SIGSOFT SOFTWARE, P346, DOI [DOI 10.1145/1095430.1081761, 10.1145/1081706.1081761]
   Armstrong JS, 2001, INT SER OPER RES MAN, V30, P417
   Assintel, 2000, MOD ORG NELL AZ SOFT
   Azhar Damir, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P173, DOI 10.1109/ESEM.2013.25
   Azhar D., 2012, Proceedings ofthe 8th International Conference on Predictive Models in Software Engineering, PROMISE, V12, P49, DOI [10.1145/2365324.2365332, DOI 10.1145/2365324.2365332]
   Barabino G., 2009, P INT C COMP INT SOF, P1, DOI DOI 10.1109/CISE.2009.5365936
   Boehm BW., 1981, Software Engineering Economics
   Bray T, 1996, COMPUT NETWORKS ISDN, V28, P993, DOI 10.1016/0169-7552(96)00061-X
   Briand LC, 1998, PROC INT CONF SOFTW, P390, DOI 10.1109/ICSE.1998.671392
   Buglione L, 2011, IEEE SOFTWARE, V28, P91, DOI 10.1109/MS.2011.55
   Conradi R., 2003, Empirical Methods and Studies in Software Engineering: Experiences from ESERNET
   Corona E, 2012, WETSOM 2012 P 3 INT, P14, DOI [10.1109/WETSoM.2012.6226986, DOI 10.1109/WETSOM.2012.6226986]
   Corona E, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P15, DOI 10.1109/IWSM-MENSURA.2012.12
   COSMICON, 2014, COSMIC FFP MEAS MAN
   Cowderoy AJC, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P144, DOI 10.1109/METRIC.1998.731239
   Ferrucci F, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P441, DOI 10.1109/SEAA.2008.60
   Ferrucci F, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P306, DOI 10.1109/SEAA.2009.47
   Folgieri R, 2011, P 2 INT WORKSH EM TR, P59, DOI [10.1145/1985374.1985388, DOI 10.1145/1985374.1985388]
   Hooi TC, 2008, 8TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY WORKSHOPS: CIT WORKSHOPS 2008, PROCEEDINGS, P116, DOI 10.1109/CIT.2008.Workshops.48
   ISO/IEC, 2005, 245702005 ISOIEC
   ISO/IEC, 2010, 29881 ISOIEC
   Jones Capers, 2013, Software Engineering Notes, V38, P1, DOI 10.1145/2492248.2492268
   Jorgensen M., 2004, International Journal of Project Management, V22, P317, DOI 10.1016/S0263-7863(03)00085-1
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen M, 2009, IEEE SOFTWARE, V26, P14, DOI 10.1109/MS.2009.47
   Mangia L, 2003, FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, PROCEEDINGS, P53
   Matos O., 2013, P 17 INT C EV ASS SO, P12, DOI DOI 10.1145/2460999.2461002
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P18, DOI 10.1109/METRIC.2003.1232452
   Mendes E, 2002, P INT COMP SOFTW APP, P393, DOI 10.1109/CMPSAC.2002.1045034
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Reifer DJ, 2000, IEEE SOFTWARE, V17, P57, DOI 10.1109/52.895169
   Ruhe M, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P30, DOI 10.1109/METRIC.2003.1232453
   Ruhe M, 2003, PROC INT CONF SOFTW, P285, DOI 10.1109/ICSE.2003.1201208
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P987, DOI 10.1109/32.965339
   Sikka G., 2010, ICETC 2010 P 2 INT C, DOI 10.1109/ICETC.2010.5529600
   SMS Ltd, 2011, EV YOU ALW WANT KNOW
   Tichenor C., 2013, CrossTalk, V26, P21
   *UKSMA, 1998, MKII FUNCT POINT AN
NR 45
TC 4
Z9 4
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2015
VL 27
IS 9
BP 603
EP 624
DI 10.1002/smr.1715
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT0QG
UT WOS:000362500800001
DA 2024-07-18
ER

PT J
AU Regan, G
   Biro, M
   Flood, D
   McCaffery, F
AF Regan, Gilbert
   Biro, Miklos
   Flood, Derek
   McCaffery, Fergal
TI Assessing traceabilitypractical experiences and lessons learned
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE requirements traceability; traceability assessment; medical device;
   safety critical; process assessment; automation
AB Most existing software systems that lack explicit traceability links between artefacts, or if implemented, are often not leveraged to take advantage of the information it can provide to a development or validation team. Within the medical device domain, as in other safety critical domains, regulation normally requires such systems that are certified before entering service. This involves submission of a safety case (a reasoned argument that the system is acceptably safe) to the regulator. A safety case should include evidence that the organisation has established effective software development processes. At the heart of such processes, they must incorporate traceability. However, numerous barriers such as a lack of awareness of traceability and a lack of guidance as to how to implement traceability hamper its effective implementation. In this paper, we address the lack of guidance on traceability implementation by presenting our experience of developing and trialling a traceability assessment model in two medical device organisations. We show that the assessment model was successful in identifying strengths and weaknesses in both organisations' implementation of traceability. Through experience of trialling the model, we propose an idea to improve it by automation, using the Open Services for Lifecycle Collaboration initiative. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Regan, Gilbert; Flood, Derek; McCaffery, Fergal] Dundalk Inst Technol, Dept Comp & Math, Dundalk, Ireland.
   [Biro, Miklos] Software Competence Ctr Hagenberg GmbH, Hagenberg, Austria.
C3 Dundalk Institute of Technology; Softwarepark Hagenberg
RP Regan, G (corresponding author), Dundalk Inst Technol, Dept Comp & Math, Dundalk, Ireland.
EM gilbert.regan@dkit.ie
RI regan, gilbert/AAJ-1460-2020; Biro, Miklos/K-8741-2014
OI Biro, Miklos/0000-0001-8627-1159; Mc Caffery,
   Fergal/0000-0002-0839-8362; Regan, Gilbert/0000-0002-5023-6914
FU Science Foundation Ireland [08/IN.1/I2030]; Lero-the Irish Software
   Research Centre [10/CE/I1855]; Science Foundation Ireland (SFI)
   [08/IN.1/I2030] Funding Source: Science Foundation Ireland (SFI)
FX This research is supported by the Science Foundation Ireland Principal
   Investigator Programme, grant number 08/IN.1/I2030 and by Lero-the Irish
   Software Research Centre (http://www.lero.ie) grant no. 10/CE/I1855.
CR Ambler S, DOBBS J WORLD SOFTWA
   Ambler S., 2013, AGILE REQUIREMENTS B
   [Anonymous], 2006, 623042006 ANSIAAMIIE
   [Anonymous], 2005, GUID CONT PREM SUBM
   [Anonymous], 2010, AUT SPICE PROC ASS M
   [Anonymous], 2008, 12207 ISOIEC
   [Anonymous], 13485 ISO
   [Anonymous], 155045 ISOIEC
   [Anonymous], 155042 ISOIEC
   Barafort B, 2008, SPICE
   Cleland-Huang J., 2012, Software and Systems Traceability, P265, DOI [DOI 10.1007/978144712239512, 10.1007/978-1-4471-2239-5, DOI 10.1007/978-1-4471-2239-5]
   Committee for Advancing Software-Intensive Systems Producibility, 2010, CRIT COD SOFTW PROD
   Dekhtar A, 2012, SOFTWARE SYSTEMS TRA, DOI [10.1007/978-1-4471-2239-5, DOI 10.1007/978-1-4471-2239-5]
   DeLucia A, 2012, SOFTWARE SYSTEMS TRA, P88, DOI [10.1007/978-1-4471-2239-5, DOI 10.1007/978-1-4471-2239-5]
   ECCS, 2010, SPAC PROD ASS PROC A
   FDA, 2002, GEN PRINC SOFTW VAL
   FDA, 1999, OFF THE SHELF SOFTW
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Hayes JaneHuffman., 2009, ICSE Workshop on Traceability in Emerging Forms of Software Engineering, P26, DOI DOI 10.1109/TEFSE.2009.5069579
   International Organization for Standardization, 2007, 149712007 ISO
   ISO/IEC, 2010, 24774 ISOIEC
   Klimpke L, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P465, DOI 10.1109/ICSEA.2009.74
   Mäder P, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P143, DOI 10.1109/RE.2009.23
   McCaffery F, 2007, J INFORM TECHNOLOGY, VXVIII
   McCaffery F, 2011, COMM COM INF SC, V155, P208
   Murphy T, 2013, MAGIC QUADRANT APPL
   Regan G, 2014, 14 INT C SPICE 2014, P72, DOI [10.1007/978-3-319-13036-1_7, DOI 10.1007/978-3-319-13036-1_7]
   Regan G, 2013, EUROSPI 2013
   Regan G, 2014, EUROSPI 2014, P206
   SEI, 2010, IMPR PROC DEV BETT P
NR 30
TC 11
Z9 11
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2015
VL 27
IS 8
SI SI
BP 591
EP 601
DI 10.1002/smr.1728
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CP8UU
UT WOS:000360170900010
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Bezemer, C
   Milon, E
   Zaidman, A
   Pouwelse, J
AF Bezemer, C.
   Milon, E.
   Zaidman, A.
   Pouwelse, J.
TI Detecting and analyzing I/O performance regressions
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE performance regressions; performance analysis; performance optimization
AB Regression testing can be performed by reexecuting a test suite on different software versions and comparing the outcome. For functional testing, the outcome of such tests is either pass (correct behavior) or fail (incorrect behavior). For nonfunctional testing, such as performance testing, this is more challenging as correct and incorrect are not clearly defined concepts for these types of testing. In this paper, we present an approach for detecting and analyzing input/output (I/O) performance regressions. Our method is supplemental to existing profilers, and its goal is to analyze the effect of source code changes on the performance of a system. In this paper, we focus on analyzing the amount of I/O writes being performed. The open source implementation of our approach, SPECTRAPERF, is available for download. We evaluate our approach in a field user study on Tribler, an open source peer-to-peer client and its decentralized solution for synchronizing messages, Dispersy. In this evaluation, we show that our approach can guide the performance optimization process, as it helps developers to find performance bottlenecks on the one hand and, on the other, allows them to validate the effect of performance optimizations. In addition, we perform a feasibility study on Django, the most popular Python project on Github, to demonstrate our applicability on other projects. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Bezemer, C.; Milon, E.; Zaidman, A.; Pouwelse, J.] Delft Univ Technol, Delft, Netherlands.
C3 Delft University of Technology
RP Bezemer, C (corresponding author), Delft Univ Technol, Delft, Netherlands.
EM c.bezemer@tudelft.nl
OI Bezemer, Cor-Paul/0000-0002-0474-5718; pouwelse, Prof. Dr.
   johan/0000-0002-9882-1506
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Alcocer JPS, 2012, P INT WORKSH SMALLT
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Bergel A, 2012, SOFTWARE PRACT EXPER, V42, P1165, DOI 10.1002/spe.1120
   Bezemer CP, 2014, J SYST SOFTWARE, V87, P87, DOI 10.1016/j.jss.2013.09.013
   Bezemer CP, PERFORMANCE REGRESSI, DOI 10.6084/m9.figshare.974535
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Jiang ZM, 2009, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSM.2009.5306331
   Larres J., 2013, P AUSTR COMP SCI C A, P3
   Mulder F., 2010, P JOINT ERCIM WORKSH, P23, DOI DOI 10.1145/1862372.1862381
   Nguyen ThanhHD., 2012, P 3 ACMSPEC INT C PE, P299
   Pouwelse JA, 2008, CONCURR COMP-PRACT E, V20, P127, DOI 10.1002/cpe.1189
   Prasad V., 2005, OTTAWA LINUX S, P49
   Reiss SP, 2009, IEEE INT WORK VIS SO, P73, DOI 10.1109/VISSOF.2009.5336418
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Savari SA, 2000, J INSTRUCTION LEVEL, V2, P1
   Woodside M, ENG FOSE IEEE, P171, DOI [DOI 10.1109/FOSE.2007.32, 10.1109/FOSE.2007.32]
   Zeilemaker N, 2013, PDS2013002 TU DELFT
NR 19
TC 10
Z9 12
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2014
VL 26
IS 12
BP 1193
EP 1212
DI 10.1002/smr.1657
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX0NS
UT WOS:000346649500007
OA Green Published
DA 2024-07-18
ER

PT J
AU Schweigert, T
   Vohwinkel, D
   Korsaa, M
   Nevalainen, R
   Biro, M
AF Schweigert, Tomas
   Vohwinkel, Detlef
   Korsaa, Morten
   Nevalainen, Risto
   Biro, Miklos
TI Agile maturity model: analysing agile maturity characteristics from the
   SPICE perspective
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile; agile maturity; SPI manifesto; agile manifesto; SPICE; CMMI;
   SEMAT; ISO; IEC 15504; EuroSPI; ECQA
AB The paper discusses structure, quality and content of the currently available agile maturity models. It presents two approaches on how to deal with such models. As a first step of the analysis, the paper contains a compilation of maturity level naming used by these agile maturity models because the variety of level naming is a sign of the variety of understanding and of definition of agile maturity.While many papers deal with agile from an inside perspective, this paper is written from the perspective of Software Process Improvement (SPI) and Capability Determination, the European Certification and Qualification Association PI Manager Certification Scheme and also the SPI Manifesto.The paper does not explicitly present its own agile maturity model.The analysis approaches presented in the paper show that the currently available agile maturity models are not fit for industrial use. The synthesis of an acceptable model seems to be feasible as the analysed models address typical organisational processes including life cycle management. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Schweigert, Tomas; Vohwinkel, Detlef] SQS, Cologne, Germany.
   [Korsaa, Morten] Delta, Copenhagen, Denmark.
   [Nevalainen, Risto] FiSMA, Helsinki, Finland.
   [Biro, Miklos] Software Competence Ctr Hagenberg GmbH, Hagenberg, Austria.
C3 Softwarepark Hagenberg
RP Schweigert, T (corresponding author), SQS, Cologne, Germany.
EM tomas.schweigert@sqs.com
RI Biro, Miklos/K-8741-2014
OI Biro, Miklos/0000-0001-8627-1159
CR Aiello B, AGILE PROCESS MATURI
   Alhir SS, 2009, MATURITY MODELS LEAN
   Ambler S, DISCIPLINED AGILISTS
   Ambler S., AGILE MATURITY MODEL
   Ambler SW, AGILE SCALING MODEL
   Anderson D.J., 2004, Agile management for software engineering: Applying the theory of constraints for business results
   Anderson DJ, KANBAN SUCCESSFUL EV
   [Anonymous], 15504 ISOIEC 2
   [Anonymous], 15504 ISOIEC 5
   [Anonymous], 2009, International Journal of Software EngineeringIJSE
   [Anonymous], AGILE MATURITY MODEL
   [Anonymous], 2008, Changing Software Development: Learning to Be Agile
   [Anonymous], 2010, YET ANOTHER AGILE MA
   [Anonymous], AGILE MATURITY MODEL
   [Anonymous], 2001, AGILE MANIFESTO
   Banerjee U, AGILE MATURITY MODEL
   Bavani R, DISTRIBUTED AGILE MA
   Beck K., 2000, EXTREME PROGRAMMING
   Benefield R., 2010, 43 HAW INT C SYST SC
   Bianco C., 11 INT SPICE C P
   Biro M, IND P 2012 EUROSPI C
   Blaschke M, TESTING EXPERIENCE
   Brown WJ, 2004, ANTIPATTERNS
   Derby E, ACHIEVING AGILITY ME
   Druckman A, AGILE TRANSFORMATION
   Elssamadisy A., 2008, AGILE ADOPTION PATTE
   Elssamadisy A, DOES AGILE COMMUNITY
   Gujral R, AGILE MATURITY MODEL
   Hammer M., 2007, HARVARD BUSINESS REV
   Heydt M, 2009, AGILE PROCESS MATURI
   Hibbs C, AGILE PROCESS MATURI
   Jacobson I., SEMAT 3 YEAR VISION
   Janus A, 2013, KONZEPTE AGILE QUALI
   Jeners S, 2012, COMM COM INF SC, V301, P205
   Kettunen P, 2013, Syst. Softw. Serv. Process Improv, P131, DOI [DOI 10.1007/978-3-642-39179-812, 10.1007/978-3-642-39179-8_12, DOI 10.1007/978-3-642-39179-8_12]
   King J, MATH FORMULA MAKE AG
   Korsaa M, PEOPLE ASPECTS MODER, V10.1002/smr.570, DOI DOI 10.1002/SMR.570
   Korsaa M, 2012, J SOFTW-EVOL PROC, V24, P525, DOI 10.1002/smr.502
   Kroll P, APPL LEAN THINKING G
   Kruse P, 2004, NEXT PRACTICE
   Kuruppath K, 2009, MATURING AGILE PROCE
   Kuvaja P., 1994, SOFTWARE PROCESS ASS
   Laanti M., 2013, Communications in Computer and Information Science, V364, P247, DOI DOI 10.1007/978-3-642-39179-8_22
   Lundak J., 2009, AGILE PROZESSE FALLS
   Malik N., SIMPLE LIFECYCLE AGI
   Minick E., ENTERPRISE CONTINUOU
   Ozcan-Top O, 2013, P 13 INT C SPICE 201
   Pettit R, 2007, AGILE MATURITY MODEL
   Pries-Heje J, 2010, SPI MANIFESTO ALCALA
   Rene R, 2011, CORPORATE FORESIGHT
   Ronen S, AGILE TESTING MATURI
   Rothman J., 2011, IS AGILE GOING
   Royce W, IMPROVING SOFTWARE E
   Schwaber K., 2012, Software in 30 Days
   Schweigert T., 2013, CCIS, P214, DOI DOI 10.1007/978-3-642-39179-8
   Schweigert T, 2012, COMM COM INF SC, V290, P289
   Sehlhorst S, AGILE MATURITY MODEL
   Sidky A, DISCIPLINED APPROACH
   Sims C, REVISITS AGILE PROCE
   Steiner M, 2012, J SOFTW-EVOL PROC, V24, P471, DOI 10.1002/smr.507
   Wagner K. W., 2007, PERFORMANCE EXCELLEN
   Waters K, 10 KEY PRINCIPLES AG
   Woods D, 2011, AGILE BI MATURITY MO
   Yin A, P ICSEA 2011 6 INT C, P20
   Yin APG, THESIS
NR 65
TC 14
Z9 14
U1 1
U2 46
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2014
VL 26
IS 5
SI SI
BP 513
EP 520
DI 10.1002/smr.1617
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH2SF
UT WOS:000335970700007
DA 2024-07-18
ER

PT J
AU Martín, D
   Guzmán, JG
   Urbano, J
   Amescua, A
AF Martin, Diego
   Garcia Guzman, Javier
   Urbano, Julian
   Amescua, Antonio
TI Skills and abilities for working in a global software development team:
   a competence model
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE global software development teams; GSD; Global IT Professionals;
   competence model; competences; global software development
ID KNOWLEDGE REPOSITORY; PROCESS IMPROVEMENT; MANAGEMENT
AB Nowadays, it is common to develop software development projects collaboratively among team members or organizations in different geographical locations. These teams, known as global software development (GSD) teams, allow organizations to save costs as well as have available highly qualified personnel. This kind of team is different from traditional teams, so it is necessary for team members to develop other essential competences to work efficiently in a global context. Unfortunately, there is no well-defined competence model that allows organizations to assess personnel competences and establish the relevant training program that allows them to work efficiently in such teams. This work defines and implements, in four GSD teams, a competence model specifically designed to address challenges that people face when they work in a GSD team. This competence model has been defined considering tasks a GSD team have to carry out, bodies of knowledge, and existing competence models for the software engineering profiles and the authors' experience working in such teams. As a result of the implementation process, it was confirmed that the competence model is a key factor for human capital improvement. When personnel have these competences, team and individual efficiency and product quality increase, and delays in delivering products decrease. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Martin, Diego; Garcia Guzman, Javier; Urbano, Julian; Amescua, Antonio] Univ Carlos III Madrid, Dept Comp Sci, Madrid 28911, Spain.
C3 Universidad Carlos III de Madrid
RP Guzmán, JG (corresponding author), Univ Carlos III Madrid, Dept Comp Sci, Avda Univ 30, Madrid 28911, Spain.
EM jgarciag@inf.uc3m.es
RI García-Guzmán, Javier/L-4666-2014
OI GARCIA GUZMAN, JAVIER/0000-0001-6039-795X; Amescua,
   Antonio/0000-0003-4355-6896; Martin, Diego/0000-0001-8810-0695
CR Allison I, 2007, INFORM SOFTWARE TECH, V49, P668, DOI 10.1016/j.infsof.2007.02.003
   Amescua A, 2010, IET SOFTW, V4, P434, DOI 10.1049/iet-sen.2010.0067
   Basili V, 2002, EXPERIENCE FACTORY E, P469, DOI [10.1002/0471028959.sof110, DOI 10.1002/0471028959.S0F110]
   Berczuk S., 2003, Software configuration management patterns: effective teamwork, practical integration
   Borges L., 2002, P INT C COMP SCI SOF, P227
   Carey J, 2002, FRAMEWORK PROCESS PA
   Dingsayr T, 2009, IEEE SOFTWARE, V26, P100, DOI 10.1109/MS.2009.82
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Gamma E., 1995, DESIGN PATTERNS, P1
   García J, 2011, INFORM SOFTWARE TECH, V53, P834, DOI 10.1016/j.infsof.2011.03.002
   Garcia S., 2006, CMMI SURVIVAL GUIDE
   Jacobson I, 2007, J OBJECT TECHNOL, V6, P41, DOI 10.5381/jot.2007.6.6.c5
   Landaeta JF, 2008, COMM COM INF SC, V16, P82
   Llorens J, 2004, STUD FUZZ SOFT COMP, V159, P221
   Martin D, 2007, P EUR SYST SOFTW PRO, P325
   Maurer F, 2002, ANN SOFTW ENG, V14, P145, DOI 10.1023/A:1020505708326
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Rouvoy Romain, 2008, IEEE Distributed Systems Online, V9, DOI 10.1109/MDSO.2008.17
   Sanchez-Segura MI, 2010, INFORM SCIENCES, V180, P2721, DOI 10.1016/j.ins.2010.03.028
   SCHUMMER T, 2003, P 8 EUR C PATT LANG, P53
   Shalloway A, 2005, DESIGN PATTERNS EXPL
   Sommerville I., 2004, Software Engineering
   Surhone LM, 2010, SOFTWARE ANAL PATTER
   Visaggio G, 2009, SOFTWARE ENG LNCS, V5413, P223, DOI [10.1007/978-3-540-95888-8_9, DOI 10.1007/978-3-540-95888-8_9]
NR 24
TC 14
Z9 17
U1 1
U2 35
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2014
VL 26
IS 3
SI SI
BP 339
EP 349
DI 10.1002/smr.1588
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD1VP
UT WOS:000333022100008
DA 2024-07-18
ER

PT J
AU Polgár, PB
   Kazinci, F
AF Polgar, Peter Balazs
   Kazinci, Ferenc
TI Report on an assessment experience based on ISO/IEC 29110
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE ISO/IEC 29110; software process improvement; software process
   assessment; very small entity (VSE)
AB In January 2011, a new standard ISO/IEC 29110 was published. To evaluate effectiveness of the assessment using ISO/IEC 29110, we have performed a series of lightweight assessment. The lightweight assessment method taken in this trial was using the task checklist based on ISO/IEC 29110-5 with the customized procedures based on ISO/IEC 15504-2. Through the trial, we found that the lightweight assessment required little effort to the project. Moreover, we found that the lightweight assessment was an acceptable way for the project to extract issues and risks in the project and urge awareness. Regarding the one aforementioned, the lightweight assessment using ISO/IEC 29110 has two benefits. Firstly, it is useful for the readiness checking of forthcoming tasks and workproducts. Secondly, the lightweight assessment are performed iteratively and repeatedly performed several times with little effort. As mentioned earlier, lightweight assessment should be performed not for the evaluation but as a daily routine tool to obtain the actual status and performance of management and to identify the problems. In this way, the ISO/IEC 29110 lightweight assessment is useful. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Polgar, Peter Balazs] Eotvos Lorand Univ, Basics Methodol Informat Program, Budapest, Hungary.
   [Kazinci, Ferenc] Budapest Univ Technol & Econ, Fac Comp Engn, Dept Telecommun & Media Informat, Budapest, Hungary.
C3 Eotvos Lorand University; Budapest University of Technology & Economics
RP Polgár, PB (corresponding author), Eotvos Lorand Univ, Basics Methodol Informat Program, Budapest, Hungary.
EM sirpepe@elte.hu
CR [Anonymous], P 5 INT C PROC SOFTW
   Becker-Kornstaedt U., 1999, STEP '99. Proceedings Ninth International Workshop Software Technology and Engineering Practice, P161, DOI 10.1109/STEP.1999.798789
   Heidenberg J, 2009, EUROSPI 2009 U ALC S
   Henderson-Sellers B, 2002, ANN SOFTW ENG, V14, P341, DOI 10.1023/A:1020570027891
   Hornbaek K., 2003, ACM Transactions on Computer-Human Interaction, V10, P119, DOI 10.1145/772047.772050
   Martin D, 2007, EUROSPI 2007 DELT
   *OBJ MAN GROUP, 2005, SOFTW PROC ENG MET S
   Object Management Group, 2008, SOFTW PROC ENG MET S
   Soto M, EUROSPI 2007
   Wang Y., 2000, SOFTWARE ENG PROCESS
NR 10
TC 4
Z9 4
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2014
VL 26
IS 3
SI SI
BP 313
EP 320
DI 10.1002/smr.1591
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD1VP
UT WOS:000333022100005
DA 2024-07-18
ER

PT J
AU Pérez-Castillo, R
   de Guzmán, IGR
   Caballero, I
   Piattini, M
AF Perez-Castillo, Ricardo
   Garcia-Rodriguez de Guzman, Ignacio
   Caballero, Ismael
   Piattini, Mario
TI Software modernization by recovering Web services from legacy databases
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE web services; SOA; software modernization; ADM; relational databases;
   MDA
AB Databases are considered to be a valuable asset for organizations because they contain all those organizations' persistent pieces of data. Both databases and the information systems that use them undergo erosion as a consequence of uncontrolled maintenance over time. However, when information systems evolve to become modernized versions of them, existing databases must not be discarded because they contain much valuable business knowledge that is not present anywhere else. Some of the software industry's current demands, such as time-to-market developments and the provision of software as services entail additional challenges in the reuse of legacy systems during software modernization. This paper addresses this problem and proposes a reengineering process that follows model-driven development principles to recover Web services from legacy databases. The Web services that are mined manage access to legacy databases without discarding them. Legacy databases can thus be used by modernized information systems in service-oriented environments. The adoption of this process is facilitated by the implementation of a support tool, which is used to conduct an industrial case study involving a real-life legacy database. The study demonstrates that the proposal reduces development efforts and improves the return of investment by extending the lifespan of legacy databases. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Perez-Castillo, Ricardo; Garcia-Rodriguez de Guzman, Ignacio; Caballero, Ismael; Piattini, Mario] Univ Castilla La Mancha, Alarcos Res Grp, E-13071 Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP Pérez-Castillo, R (corresponding author), Univ Castilla La Mancha, Alarcos Res Grp, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM ricardo.pdelcastillo@uclm.es
RI Piattini, Mario/F-6271-2013; de Guzmán, Ignacio
   García-Rodríguez/N-4489-2014; Pérez-Castillo, Ricardo/A-3033-2011;
   Caballero, Ismael/A-1079-2010; GENERO, MARCELA/L-6480-2014
OI Piattini, Mario/0000-0002-7212-8279; de Guzmán, Ignacio
   García-Rodríguez/0000-0002-0038-0942; Pérez-Castillo,
   Ricardo/0000-0002-9271-3184; Caballero, Ismael/0000-0002-5189-1427;
   GENERO, MARCELA/0000-0002-6868-7465
FU Spanish FPU Program; R + D project ALTAMIRA (JCCM) [PII2I09-0106-2463];
   R + D project PEGASO/MAGO (MICIN); R + D project PEGASO/MAGO (FEDER)
   [TIN2009-13718-C02-01]; R + D project MOTERO (JCCM); R + D project
   MOTERO (FEDER) [PEII11-0366-9449]; R + D project ORIGIN (CDTI); R + D
   project ORIGIN (FEDER) [IDI-2010043(1-5)]; R + D project IQMNet (MICIN)
   [TIN2010-09809-E]
FX This work was supported by the Spanish FPU Program, and by the R + D
   projects ALTAMIRA (JCCM, PII2I09-0106-2463); PEGASO/MAGO (MICIN and
   FEDER, TIN2009-13718-C02-01); MOTERO (JCCM and FEDER, PEII11-0366-9449);
   ORIGIN (CDTI and FEDER, IDI-2010043(1-5)); and IQMNet (MICIN,
   TIN2010-09809-E).
CR Alarcos Research Group, 2009, PRECISO REV ENG TOOL
   [Anonymous], 2006, SOFTWARE ENG
   Arnold RS, 1994, SOFTWARE REENGINEERI, P688
   Behm A, 2000, LECT NOTES COMPUTER
   Bézivin J, 2004, EIGHTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P58, DOI 10.1109/EDOC.2004.1342505
   BLAHA M, 2001, P 8 WORK C REV ENG W
   Caballero I, 2008, J UNIVERS COMPUT SCI, V14, P3658
   Calero C, 2005, COMPUTER STANDARDS I, P695
   CANFORA G, 2007, 2007 FUTURE SOFTWARE
   Canfora G, 2008, J SYST SOFTWARE, V81, P463, DOI 10.1016/j.jss.2007.06.006
   Canfora G, 2011, COMMUN ACM, V54, P142, DOI 10.1145/1924421.1924451
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Chung S, 2005, P IEEE INT C WEB SER
   Davenport T.H., 1993, PLANN REV, V21, P6, DOI [10.1108/eb054413, DOI 10.1108/EB054413]
   Di Lucca GA, 2004, J SOFTW MAINT EVOL-R, V16, P71, DOI 10.1002/smr.281
   Garcia-Rodriguez de Guzman I, 2007, P 19 INT C SOFTW ENG, P529
   Grose T, 2002, MASTERING XMI JAVA P, P480
   Grose TJ, 2001, MASTERING XMI JAVA P, P480
   Hainaut J-L, 2004, APPL CATEGORICAL STR
   ISO/IEC, 1992, 90751992 ISOIEC
   KAZMAN R, 1998, P WORK C REV ENG WCR
   Larman C., 1998, Applying UML and Patterns
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lewis GA, 2010, RES AGENDA SERVICE O, P40
   McBrien P, 1999, P 18 INT C CONC MOD
   Melton J., 1993, UNDERSTANDING NEW SQ
   Miller J, 2003, MDA GUIDE VERSION 1, P62
   OMG, 2003, WHY DO WE NEED STAND
   *OMG, 2006, ADM GLOSS DEF TERMS, P34
   *OMG, 2007, UN MOD LANG SUP VERS
   OMG QVT, 2008, MET FAC MOF 2 0 QUER
   Pereira ONM, 2006, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON DATABASES AND APPLICATIONS, P26
   Polo M, 2002, INFORM SOFTWARE TECH, V44, P923, DOI 10.1016/S0950-5849(02)00130-1
   Reus T, 2006, LECT NOTES COMPUT SC, V4066, P213
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shankaranarayanan G, 2005, P 38 ANN HAW INT C S
   Sneed HM, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P111
   Sneed HM, 2008, EMERGING METHODS TEC, P151
   Thiran P, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P58, DOI 10.1109/WCRE.2004.41
   Thiran P, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P198, DOI 10.1109/WCRE.2001.957824
   Turner M., 2003, Turning software into a service
   Wang HZ, 2009, 2009 WRI WORLD CONGRESS ON SOFTWARE ENGINEERING, VOL 3, PROCEEDINGS, P113, DOI 10.1109/WCSE.2009.384
   Wohlin C, 2000, EXPT SOFTWARE ENG IN, P204
   Yin R.K., 2011, Qualitative research from start to finish
   Zimmermann O, 2003, PERSPECRTIVES WEB SE
NR 45
TC 12
Z9 14
U1 0
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2013
VL 25
IS 5
BP 507
EP 533
DI 10.1002/smr.1554
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 142HQ
UT WOS:000318788400004
DA 2024-07-18
ER

PT J
AU Neumann, M
   Riel, A
   Brissaud, D
AF Neumann, Martin
   Riel, Andreas
   Brissaud, Daniel
TI IT-supported innovation management in the automotive supplier industry
   to drive idea generation and leverage innovation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE innovation management; automotive supplier industry; idea generation;
   knowledge management; knowledge mining; stakeholder model
AB Innovative product development is highly dependent on new product ideas and product information. This especially applies to companies that obtain their competitive advantages by technological lead like the automotive supplier industry. Innovation management in these industries has to focus on an efficient idea generation, implementation and capitalisation, and on technology tracking. This paper gives an insight into the industry-sector-specific characteristics of innovation management within the automotive supplier industry, and outlines a basic scheme of an innovation management system that aims at improving the existing innovation management at the automotive supplier Kolbenschmidt Pierburg AG. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Neumann, Martin] Kolbenschmidt Pierburg AG, D-41460 Neuss, Germany.
   [Riel, Andreas; Brissaud, Daniel] Grenoble INP, G SCOP UMR5272, F-38031 Grenoble, France.
C3 Rheinmetall AG; Communaute Universite Grenoble Alpes; Institut National
   Polytechnique de Grenoble; Universite Grenoble Alpes (UGA); Centre
   National de la Recherche Scientifique (CNRS)
RP Riel, A (corresponding author), Grenoble Inst Technol, G SCOP Lab, Grenoble, France.
EM andreas.riel@grenoble-inp.fr
RI Riel, Andreas/AAC-9491-2019; Brissaud, Daniel/HZM-0132-2023
OI Riel, Andreas/0000-0001-9859-019X; 
CR Ammar-Khodja S., 2008, METHODS TOOLS EFFECT, P3
   [Anonymous], COMPETITIVE INTELLIG
   Asakiewicz C., 2008, KNOWLEDGE MINING QUA
   Barachini F, 2008, SER INNOVAT KNOWL MA, V7, P159, DOI 10.1142/9789812837578_0014
   Birchall DW, 2003, SERIES TECHNOLOGY MA, V7, P167
   Brockhoff K., 1999, Forschung und Entwicklung. Planung und Kontrolle, V5
   Chesbrough H. W., 2003, OPEN INNOVATION NEW
   COOPER RG, 1986, J PROD INNOVAT MANAG, V3, P71, DOI 10.1111/1540-5885.320071
   Dannenberg J., 2008, AUTOMOBIL PRODUKTION, P18
   Dannenberg J, 2007, CAR INNOVATION 2015
   Finkler W., 2006, COMPETITIVE INTELLIG, P355
   Freeman R.E., 2004, ZFWU, V5, P228, DOI [DOI 10.5771/1439-880X-2004-3-228, 10.5771/1439-880X-2004-3-228]
   Freeman R.E., 2010, Strategic management: A stakeholder approach, DOI DOI 10.1017/CBO9781139192675
   Gassmann Oliver, 2007, PATENTMANAGEMENT INN
   German Association of the Automotive Industry (VDA), 2011, ANN REP 2011 GERM AS
   German Association of the Automotive Industry (VDA), 2011, EC SITUATION AUTOMOT
   Griffin A, 1997, J PROD INNOVAT MANAG, V14, P429
   Hambuchen TE., 1989, INNOVATION ALS PRODU
   Herrmann C, 2007, P 14 CIRP C LIF CYCL, P429
   LeCorre A., 2005, The innovation game: A new approach to innovation management and R D
   Mattes B, 2004, AUTOMOTIVE MANAGEMEN, P13
   Pleschka F, 1996, INNOVATIONSMANAGEMEN
   Riel A, 2008, 5 INT C DIG ENT TECH
   Stockmar J., 2004, AUTOMOTIVE MANAGEMNT, P61
   Stockmeyer B., 2001, THESIS TU MUNCHEN GE
NR 25
TC 7
Z9 8
U1 2
U2 30
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2013
VL 25
IS 4
SI SI
BP 329
EP 339
DI 10.1002/smr.578
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 131XD
UT WOS:000318030600002
DA 2024-07-18
ER

PT J
AU Fontana, FA
   Maggioni, S
   Raibulet, C
AF Fontana, Francesca Arcelli
   Maggioni, Stefano
   Raibulet, Claudia
TI Design patterns: a survey on their micro-structures
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE design; software engineering; design patterns; micro-structures; design
   pattern recognition; reverse engineering
AB Design patterns play a significant role in reverse engineering by providing information not only on how but also on why a solution has been implemented in a specific way because of their semantics. The application of design patterns leads to their personalization to a specific context, hence to the generation of variants. This makes their recognition a challenging task, which may be addressed through the understanding and detection of the micro-structures design patterns are made of. This is very useful for the detection as well as for the application of design patterns. The principal aim of this paper is to present a survey on these micro-structures and a comparison among them in the perspective of reverse engineering. Because of their less complex structure and behavior, as well as closer link to the source code, the recognition of these micro-structures may be automated, which can be considered a step towards the automatic recognition of the more complex design patterns. In this paper, we consider four of the most significant types of micro-structures: elemental design patterns, clues, sub-patterns, and micro patterns. To analyze the role of the micro-structures in the design pattern detection process, we make a comparison among these four types of micro-structures and among the micro-structures of various types in order to identify the relations among them. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Fontana, Francesca Arcelli; Maggioni, Stefano; Raibulet, Claudia] Univ Milano Bicocca, Milan, Italy.
C3 University of Milano-Bicocca
RP Raibulet, C (corresponding author), DISCo, Viale Sarca 336,Edificio 14, Milan, Italy.
EM claudia.raibulet@disco.unimib.it
RI Raibulet, Claudia/AAO-7387-2020
OI Raibulet, Claudia/0000-0002-7194-3159
CR [Anonymous], P 1 ECOOP WORKSH BUI
   Arcelli F, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P262, DOI 10.1109/ASWEC.2005.5
   Arcelli F, 2008, P ECOOP INT WORKSH A
   Arcelli F, 2006, WORK CONF REVERSE EN, P316
   Arcelli F, 2009, ENASE 2009: EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, PROCEEDINGS, P95
   Arcelli F, 2006, 13TH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P196, DOI 10.1109/STEP.2005.12
   Artho C, 2005, ELECTRON NOTES THEOR, V131, P3, DOI 10.1016/j.entcs.2005.01.018
   Beyer D, 2003, PROG COMPREHEN, P294
   Blewitt A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P324, DOI 10.1109/ASE.2001.989821
   Brawn K, 1997, THESIS U ILLINOIS UR
   Cooper J, 1998, ADDISON WESLEY DESIG
   Fabry J, 2004, COMPUT LANG SYST STR, V30, P21, DOI 10.1016/j.cl.2003.09.002
   Ferenc R., 2002, Acta Cybernetica, V15, P669
   Gamma Erich., 1994, DESIGN PATTERNS
   Gil J, 2005, ACM SIGPLAN NOTICES, V40, P97, DOI 10.1145/1103845.1094819
   Gueheneuc Y.G., 2007, P 1 EUROPLOP FOC GRO
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   Maggioni S, 2006, THESIS U MILANO BICO
   MARPLE Group, 2009, DES PATT DET CAT
   McC Smith J, 2002, 02040 TR U N ACR
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   Niere J, 2003, TRRI03236 U PAD
   Niere J, 2002, P 24 IEEE INT C SOFT, P726
   O'Cinneide M, 2001, THESIS U DUBLIN DUBL
   Shonle Macneil., 2007, ESEC FSE 07, P175
   Smith JM, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ASE.2003.1240309
   Stroulia E., 2002, Applied Computing Review, V10, P8, DOI 10.1145/568235.568237
   Tonella P, 2001, J SOFTW MAINT EVOL-R, V13, P309, DOI 10.1002/smr.235
   Tosi C, 2006, P 1 INT WORKSH DES P
   Wang W, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P165
   WENDEHALS L, 2003, P ICSE WORKSH DYN AN, P29
NR 33
TC 15
Z9 28
U1 1
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2013
VL 25
IS 1
BP 27
EP 52
DI 10.1002/smr.547
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 075UF
UT WOS:000313911600002
DA 2024-07-18
ER

PT J
AU Calvo-Manzano, JA
   Cuevas, G
   Gómez, G
   Mejia, J
   Muñoz, M
   San Feliu, T
AF Calvo-Manzano, Jose A.
   Cuevas, Gonzalo
   Gomez, Gerzon
   Mejia, Jezreel
   Munoz, Mirna
   San Feliu, Tomas
TI Methodology for process improvement through basic components and
   focusing on the resistance to change
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE project management; best practices; knowledge management; change
   management; process improvement; multi-model environment
AB This paper describes a multi-model methodology that implements a smooth and continuous process improvement, depending on the organization's business goals and allowing users to establish their improvement implementation pace. The methodology focuses on basic process components known as best practices. Besides, it covers following the topics: knowledge management and change management. The methodology description and the results of a case study on project management process are included. Copyright (c) 2010 John Wiley & Sons, Ltd.
C1 [Calvo-Manzano, Jose A.; Cuevas, Gonzalo; Mejia, Jezreel; Munoz, Mirna; San Feliu, Tomas] Univ Politecn Madrid, Fac Informat, E-28660 Madrid, Spain.
   [Gomez, Gerzon] Univ Autonoma Tamaulipas, Unidad Reynosa Rodhe, Victoria, Tamaulipas, Mexico.
C3 Universidad Politecnica de Madrid; Universidad Autonoma de Tamaulipas
RP Calvo-Manzano, JA (corresponding author), Univ Politecn Madrid, Fac Informat, Campus Montegancedo S-N, E-28660 Madrid, Spain.
EM joseantonio.calvomanzano@upm.es
RI Muñoz, Mirna/I-9193-2017; Calvo-Manzano, Jose A./K-9426-2013; San Feliu,
   Tomas/B-4515-2011
OI Muñoz, Mirna/0000-0001-8537-2695; Calvo-Manzano, Jose
   A./0000-0002-2864-2203; San Feliu, Tomas/0000-0002-6104-7430
FU everis Foundation; Universidad Politecnica de Madrid through the
   Software Process Improvement Research Group for Spain; Latin American
   Region
FX This work is sponsored by everis Foundation and Universidad Politecnica
   de Madrid through the Software Process Improvement Research Group for
   Spain and Latin American Region. Deserves special mention the support
   provided by Everis providing data and allowing the implementation of the
   pilots, without its help the implementation of this research work would
   not be possible.
CR Basili VictorR., 2002, EXPERIENCE FACTORY
   Beynon D.R., 2007, Interpreting capability' maturity model integration for business development organizations in the government and industrial business sectors
   Burke G, 2005, CROSSTALK J DEFENSE
   CALVOMANZANO JA, 2008, EUROSPI 2008 IND P
   CHRISTIE A, 2000, PROSIM 2000 WORKSH
   Conradi R, 2002, IEEE SOFTWARE, V19, P92, DOI 10.1109/MS.2002.1020295
   Fowler P., 1990, CMUSEI90TR024
   Fragidis G, 2006, IEEE INT C MAN INN T, V19, P92, DOI [10. 1109/ICMIT. 2006. 262186, DOI 10.1109/ICMIT.2006.262186]
   GAINER J, 1998, BEST PRACTICES INFOR
   Gibson D., 2006, CMUSEI2006TR004
   Goldenson D, 2007, SOFTWARE TECHNOLOGY, V10
   International Organization for Standardization, 2004, ISOIEC155042004
   KASUNIC M, 2003, INTEGRATED VIEW PROC
   Kasunic M, 2004, SEPG 2004 C
   KAUTZ K, 2004, NETWORKED TECHNOLOGI
   Kirwan P., 2007, UNIFIED PROCESS IMPR
   Lawrence J, 2009, SEPG 2009 C
   Mathiassen L, 2005, IEEE SOFTWARE, V22, P84, DOI 10.1109/MS.2005.159
   MCFEELEY B, 1996, HDB CARNEGIE MELLON
   Members of the Assessment Method Integrated Team, 2001, HDB CARN MELL U
   Mogilensky J, 2009, SEPG 2009 C
   Morgan P, 2007, SOFTWARE DEV MAGAZIN
   OST SEPG CMMI ISO and ANSI 748, 2009, SEPG C 2009
   PERSSE J, 2007, PROJECT MANAGEMENT S, P321
   POTTER N, 2006, MAKING PROCESS IMPRO, P2
   PRESSMAN R, 2006, INGENIERIA SOFTW ENF, P640
   PRIESHEJE J, 2007, CROSSTALK J DEFENSE
   SENGE P, 2000, DANZA CAMBIO COMO CR, P11
   Siviy J, 2007, ACHIEVING SUCCESS VI
   Software Engineering Institute (SEI), 2008, CMMI PERF RES
   Srivastava N, 2009, SEPG C
   [U. S. Department of Defense OSD Comptroller iCenter], 2004, BEST PRACT BENCHM MA
   WALKER R, 1999, SOFTWARE PROJECT MAN, P5
   WEST D, 2007, INF TECHN IT C 2007
   Williams T, 2008, IEEE T ENG MANAGE, V55, P248, DOI 10.1109/TEM.2007.912920
   WITHERS D, 2000, P 2000 WINT SIM C
   YAGER S, 2001, TOP 10 PROJECT MANAG
NR 37
TC 9
Z9 10
U1 3
U2 25
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2012
VL 24
IS 5
SI SI
BP 511
EP 523
DI 10.1002/smr.505
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 975AO
UT WOS:000306479100007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Mas, A
   Fluxà, B
   Amengual, E
AF Mas, Antonia
   Fluxa, Bartomeu
   Amengual, Esperanca
TI Lessons learned from an ISO/IEC 15504 SPI programme in a company
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE SPI (Software Process Improvement); SPICE (ISO; IEC 15504)
AB This paper describes a first-hand experience in Software Process Improvement within a Spanish Company which, since 2002, has been involved in an improvement programme led by our research group. We discuss the experience and the results of this improvement programme, as well as the lessons learned to deal with new future improvement initiatives in other companies of our environment. Copyright (c) 2010 John Wiley & Sons, Ltd.
C1 [Mas, Antonia; Fluxa, Bartomeu; Amengual, Esperanca] Univ Balearic Isl, Palma de Mallorca 07122, Spain.
   [Mas, Antonia; Fluxa, Bartomeu; Amengual, Esperanca] Brujula Tecnol Informac SA, Palma de Mallorca, Spain.
C3 Universitat de les Illes Balears
RP Mas, A (corresponding author), Univ Balearic Isl, Ctra Valldemossa,Km 7-5, Palma de Mallorca 07122, Spain.
EM antonia.mas@uib.es; tfluxa@brujula.es; eamengual@uib.es
RI Mas, Antonia/G-2596-2016; Amengual-Alcover, Esperanca/L-7065-2014
OI Mas, Antonia/0000-0003-4188-8088; Amengual-Alcover,
   Esperanca/0000-0002-0699-6684
FU CICYT 'Modelos de simulacion basados en ontologias y mejora de procesos
   para arquitecturas orientadas a servicios', SOAQSim
   [TIN2007-67843-C06-04]
FX This research has been supported by CICYT TIN2007-67843-C06-04 'Modelos
   de simulacion basados en ontologias y mejora de procesos para
   arquitecturas orientadas a servicios', SOAQSim.
CR Amengual E, 2007, IND P EUR SYST SOFTW, P1111
   International Organization for Standardization, 2006, 1550452006 ISOIEC
   International Organization for Standardization (ISO), 2003, 1550422003 ISOIEC
   *ISO IEC, 2004, 1550432004 ISOIEC
   ISO/IEC 15504-4:2007, 2007, 1550442007 ISOIEC
   ISO/IEC 15504-7:2008, 2008, 1550472008 ISOIEC
NR 6
TC 4
Z9 5
U1 0
U2 4
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2012
VL 24
IS 5
SI SI
BP 493
EP 500
DI 10.1002/smr.501
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 975AO
UT WOS:000306479100005
DA 2024-07-18
ER

PT J
AU Gorschek, T
   Gomes, A
   Pettersson, A
   Torkar, R
AF Gorschek, Tony
   Gomes, Andrigo
   Pettersson, Andreas
   Torkar, Richard
TI Introduction of a process maturity model for market-driven product
   management and requirements engineering
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE market driven; process improvement; technology product management;
   requirements engineering; process assessment; maturity model; software
   product management
ID SOFTWARE PROCESS IMPROVEMENT; EXPERIENCES; SCIENCE
AB The area of software product development of software intensive products has received much attention, especially in the area of requirements engineering and product management. Many companies are faced with new challenges when operating in an environment where potential requirements number in thousands or even tens of thousands, and where a product does not have a customer, but any number of customers or markets. The development organization carries not only all the costs of development, but also takes all the risks. In this environment traditional bespoke requirements engineering, together with traditional process assessment and improvement models fall short as they do not address the unique challenges of a market-driven environment. This paper introduces the Market-driven Requirements Engineering Process Model, aimed at enabling process improvement and process assurance for organizations faced with these new challenges. The model is also validated in the industry through three case studies where the model is used for process assessment and improvement suggestion. Initial results show that the model is appropriate for process improvement for organizations operating in a market-driven environment. In addition, the model was designed to be light weight in terms of low cost and thus adapted not only for large organizations but suitable for small and medium enterprises as well. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Gorschek, Tony; Torkar, Richard] Blekinge Inst Technol, Sch Comp, Karlskrona, Sweden.
   [Gomes, Andrigo] Spidexa Technol AB, Ronneby, Sweden.
   [Pettersson, Andreas] Anoto AB, Lund, Sweden.
C3 Blekinge Institute Technology
RP Gorschek, T (corresponding author), Blekinge Inst Technol, Sch Comp, Karlskrona, Sweden.
EM tony.gorschek@bth.se
RI Gorschek, Tony/E-3445-2013
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 2002, CAP MAT MOD INT CMMI
   [Anonymous], PRODUCT MANAGEMENT
   [Anonymous], 1998, Software process improvement
   [Anonymous], 2003, CONFIGURATION MANAGE
   [Anonymous], 2005, Just enough requirements management: where software development meets marketing
   [Anonymous], REQUIREMENTS EXPERIE
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   [Anonymous], 2003, INT WORKSH COTS PROD
   Balm G.J., 1996, Benchmarking for Quality Management Technology, V3, P28
   Beecham S, 2005, SOFTWARE QUAL J, V13, P247, DOI 10.1007/s11219-005-1752-9
   Berry M, 1998, LONG RANGE PLANN, V31, P455, DOI 10.1016/S0024-6301(98)80012-5
   Bray I.K., 2002, INTRO REQUIREMENTS E
   Butscher SA, 2000, MARK MANAG, V9, P48
   Carlshamre P., 2002, Requirements Engineering, V7, P139, DOI 10.1007/s007660200010
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Carlshamre P, 2000, 11TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, PROCEEDINGS, P961, DOI 10.1109/DEXA.2000.875142
   CMMI- PDT, 2010, CAP MAT MOD INT CMMI
   Connolly TM, 1998, DATABASE SYSTEMS PRA
   Dahlstedt A. G., 2003, 9 INT WORKSH REQ ENG, P71
   Davis AM, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1185216
   DAVIS AM, 1988, IEEE T SOFTWARE ENG, V14, P1453, DOI 10.1109/32.6190
   Deifel B., 1999, Proceedings. Tenth International Workshop on Database and Expert Systems Applications. DEXA 99, P316, DOI 10.1109/DEXA.1999.795186
   Feather MS, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P263, DOI 10.1109/ICRE.2002.1048537
   Fricker S, 2007, LECT NOTES COMPUT SC, V4542, P144
   Glass R.L., 1998, SOFTWARE RUNAWAYS
   Gomes A, 2007, THESIS BLEKINGE I TE
   Gorchels L., 2000, The product manager's handbook, the complete product management resource, V2nd
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Gorschek T, 2004, SOFTWARE PRACT EXPER, V34, P1311, DOI 10.1002/spe.615
   Gorschek T, 2003, P 9 INT WORKSH REQ E, P101
   Gorschek T, 2005, P 11 INT WORKSH REQ, P101
   Gorschek T., 2006, REQUIREMENTS ENG SUP
   Gorschek T, 2010, IEEE SOFTWARE, V27, P72
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   Gorschek T, 2007, REQUIR ENG, V12, P163, DOI 10.1007/s00766-007-0047-z
   Gorschek T, 2007, INFORM SOFTWARE TECH, V49, P790, DOI 10.1016/j.infsof.2006.09.003
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   HIHN J, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P276, DOI 10.1109/ICSE.1991.130653
   Hill N., 1999, How to measure customer satisfaction
   Host M, 2000, P PROSIM 00
   IEEE, 1984, 8301984 IEEE
   Jirotka M., 1994, Requirements Engineering: Social and Technical Issues
   Johnson G., 1993, EXPLORING CORPORATE, V3rd
   Kappel TA, 2001, J PROD INNOVAT MANAG, V18, P39, DOI 10.1016/S0737-6782(00)00066-7
   Karlsson L., 2004, "8th Internation Conference on Empirical Assessment in Software Engineering (EASE 2004)" Workshop - 26th International Conference on Software Engineering, P145, DOI 10.1049/ic:20040407
   KARLSSON L, 2003, P 8 INT WORKSH REQ E
   KARLSSON L, 2003, P 9 INT WORKSH REQ E, P47
   Kautz K., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P626, DOI 10.1109/ICSE.2000.870456
   Kostoff RN, 2001, IEEE T ENG MANAGE, V48, P132, DOI 10.1109/17.922473
   Kotler P., 2002, PRINCIPLES MARKETING, V3rd
   Kotler P.Armstrong G., 2001, PRINCIPLES MARKETING
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Kuilboer JP, 2000, INFORM SOFTWARE TECH, V42, P27, DOI 10.1016/S0950-5849(99)00054-3
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Loucopoulos P., 1995, SYSTEM REQUIREMENTS
   Mintzberg H., 2009, STRATEGY SAFARI GUID, V2nd
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Potts C., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P128, DOI 10.1109/ISRE.1995.512553
   Rautiainen K., 2002, Proceedings of the 35th Annual Hawaii International Conference on System Sciences, P3409, DOI 10.1109/HICSS.2002.994377
   Redling TJ., 2003, P 22 DIG AV SYST C, p10A1
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   Regnell B, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P254
   Regnell B., 1998, Requirements Engineering, V3, P121, DOI 10.1007/BF02919972
   Regnell B., 2005, ENG MANAGING SOFTWAR
   Reifer DJ, 2000, J SYST SOFTWARE, V50, P97, DOI 10.1016/S0164-1212(99)00119-3
   Robson C., 2002, Real World Research, V2nd
   Ross S.A., 2001, Essentials of corporate finance, V3rd
   Ruhe G, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/ISESE.2003.1237987
   Saaty TL., 2001, INT SERIES OPERATION
   Sasaki T, 2001, TECHNOLOGY MANAGEMENT IN THE KNOWLEDGE ERA, P481, DOI 10.1109/PICMET.2001.952195
   Sawyer Pete., 2001, SOFTWARE REQUIREMENT
   Simmons E, 2004, IEEE SOFTWARE, V21, P86, DOI 10.1109/MS.2004.25
   Soffer P, 2005, INT WORKSH SREP 05 C
   Sommerville I., 1999, REQUIREMENTS ENG GOO
   Sommerville I, 2001, Software Engineering
   Teece D.J., 2000, MANAGING INTELLECTUA
   Vahaniitty J., 2002, APPROACH PRODUCT ROA, P12
   Van Buren J., 1998, CROSSTALK J DEFENSE, V11, P3
   Villalón JACM, 2002, SOFTWARE QUAL J, V10, P261, DOI 10.1023/A:1021638523413
   Weber M, 2003, IEEE SOFTWARE, V20, P16, DOI 10.1109/MS.2003.1159025
   Wiegers K., 1999, SOFTWARE REQUIREMENT
   Wieringa R, 2004, IEEE SOFTWARE, V21, P16, DOI 10.1109/MS.2004.1270756
   Wohlin C, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P237, DOI 10.1109/ISESE.2005.1541833
   Wohlin C, 2005, P REQ ENG DEC SUPP W
   Wohlin Claes., 2005, Engineering and managing software requirements
   Yeh A. C., 1992, Proceedings of the Second Symposium on Assessment of Quality Software Development Tools (Cat. No.92TH0415-0), P211, DOI 10.1109/AQSDT.1992.205856
   Zairi M., 1999, Best Practice. Process Innovation Management
NR 89
TC 9
Z9 13
U1 1
U2 29
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2012
VL 24
IS 1
BP 83
EP 113
DI 10.1002/smr.535
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 910ND
UT WOS:000301645300006
DA 2024-07-18
ER

PT J
AU Codabux, Z
   Sultana, KZ
   Chowdhury, MNUR
AF Codabux, Zadia
   Zakia Sultana, Kazi
   Chowdhury, Md Naseef-Ur-Rahman
TI A catalog of metrics at source code level for vulnerability prediction:
   A systematic mapping study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review; Early Access
DE code level metrics; software metrics; software security; software
   vulnerability; systematic mapping study; vulnerability prediction
ID SOFTWARE METRICS; INDICATORS
AB Industry practitioners assess software from a security perspective to reduce the risks of deploying vulnerable software. Besides following security best practice guidelines during the software development life cycle, predicting vulnerability before roll-out is crucial. Software metrics are popular inputs for vulnerability prediction models. The objective of this study is to provide a comprehensive review of the source code-level security metrics presented in the literature. Our systematic mapping study started with 1451 studies obtained by searching the four digital libraries from ACM, IEEE, ScienceDirect, and Springer. After applying our inclusion/exclusion criteria as well as the snowballing technique, we narrowed down 28 studies for an in-depth study to answer four research questions pertaining to our goal. We extracted a total of 685 code-level metrics. For each study, we identified the empirical methods, quality measures, types of vulnerabilities of the prediction models, and shortcomings of the work. We found that standard machine learning models, such as decision trees, regressions, and random forests, are most frequently used for vulnerability prediction. The most common quality measures are precision, recall, accuracy, and F$$ F $$-measure. Based on our findings, we conclude that the list of software metrics for measuring code-level security is not universal or generic yet. Nonetheless, the results of our study can be used as a starting point for future studies aiming at improving existing security prediction models and a catalog of metrics for vulnerability prediction for software practitioners.
   The objective of this study is to provide a comprehensive review of the source code-level security metrics presented in the literature. Our systematic mapping study started with 1451 studies obtained by searching the four digital libraries from ACM, IEEE, ScienceDirect, and Springer. After applying our inclusion/exclusion criteria as well as the snowballing technique, we narrowed down 28 studies for an in-depth study to answer four research questions pertaining to our goal. We extracted a total of 685 code-level metrics. For each study, we identified the empirical methods, quality measures, types of vulnerabilities of the prediction models, and shortcomings of the work. We found that standard machine learning models, such as decision trees, regressions, and random forests, are most frequently used for vulnerability prediction. The most common quality measures are precision, recall, accuracy, and F$$ F $$-measure. Based on our findings, we conclude that the list of software metrics for measuring code-level security is not universal or generic yet. Nonetheless, the results of our study can be used as a starting point for future studies aiming at improving existing security prediction models and a catalog of metrics for vulnerability prediction for software practitioners. image
C1 [Codabux, Zadia] Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK, Canada.
   [Zakia Sultana, Kazi] Montclair State Univ, Sch Comp, Montclair, NJ 07043 USA.
   [Chowdhury, Md Naseef-Ur-Rahman] HP Inc, Palo Alto, CA USA.
C3 University of Saskatchewan; Montclair State University
RP Sultana, KZ (corresponding author), Montclair State Univ, Sch Comp, Montclair, NJ 07043 USA.
EM sultanak@montclair.edu
CR Al-Far A., 2018, Measuring impact score on confidentiality, integrity, and availability using code metrics, P1
   Alhazmi OH, 2007, COMPUT SECUR, V26, P219, DOI 10.1016/j.cose.2006.10.002
   Alothman B, 2017, INT CONF INTERNET, P111, DOI 10.23919/ICITST.2017.8356358
   Anu Vaibhav, 2020, 2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW), P49, DOI 10.1109/ISSREW51248.2020.00036
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Ball T, 1999, LECT NOTES COMPUT SC, V1687, P216, DOI 10.1145/318774.318944
   Ban XB, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5103
   Barabanov R., 2011, INFORM SECURITY METR
   Burrows R, 2011, CONF PROC INT SYMP C, P131, DOI 10.1109/ICPC.2011.30
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Du XN, 2019, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2019.00024
   Ferenc R, 2019, INT WORK REAL ARTIF, P8, DOI 10.1109/RAISE.2019.00010
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Gegick M, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P181, DOI 10.1109/ICST.2009.36
   Gegick Michael., 2008, QOP 08, P31, DOI DOI 10.1145/1456362.1456370
   Graff M., 2003, Secure Coding: Principles and Practices
   Howard M., 2002, Writing secure code
   Jimenez M, 2016, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2016.15
   Kalouptsoglou I, 2020, LECT NOTES COMPUT SC, V12252, P877, DOI 10.1007/978-3-030-58811-3_62
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Liu SG, 2020, IEEE T FUZZY SYST, V28, P1329, DOI 10.1109/TFUZZ.2019.2958558
   Lomio F, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111283
   Medeiros N, 2017, PROC INT SYMP SOFTW, P216, DOI 10.1109/ISSRE.2017.11
   Mitchell A., 2004, An empirical investigation into the dimensions of run-time coupling in java programs
   Morrison P, 2018, INFORM SOFTWARE TECH, V102, P146, DOI 10.1016/j.infsof.2018.05.011
   Moshtari S., 2016, P 31 ANN ACM S APPL, P1415, DOI DOI 10.1145/2851613.2851777
   Munson J. C., 1996, Empirical Software Engineering, V1, P279, DOI 10.1007/BF00127448
   Nguyen V. H., 2010, COMP COMM TECHN RES, P1
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   Ouedraogo M, 2012, J SYST SOFTWARE, V85, P193, DOI 10.1016/j.jss.2011.08.013
   Pendleton Marcus, 2017, ACM Computing Surveys, V49, DOI 10.1145/3005714
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rahman Akond, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P149, DOI 10.1109/MOBILESoft.2017.14
   Rawat MS, 2012, INT J ADV COMPUT SC, V3, P137
   Reynolds ZP, 2017, 2017 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE (SER&IP 2017), P55, DOI 10.1109/SER-IP.2017..20
   Rudolph M, 2012, 2012 SEVENTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES), P291, DOI 10.1109/ARES.2012.10
   Seacord R., 2005, SECURE CODING C C
   Shar LK, 2015, IEEE T DEPEND SECURE, V12, P688, DOI 10.1109/TDSC.2014.2373377
   Shar LK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P642, DOI 10.1109/ICSE.2013.6606610
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shin Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P315
   Staffs Keele, 2007, Tech. Rep.
   Sultana KZ, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2303
   Sultana KZ, 2018, ASIA PAC SOFWR ENG, P355, DOI 10.1109/APSEC.2018.00050
   Sultana KZ, 2017, 6TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING (SOFTWAREMINING), P40, DOI 10.1109/SOFTWAREMINING.2017.8100852
   Tang YM, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P27, DOI 10.1109/QRS.2015.15
   Tripp O, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P762, DOI 10.1145/2660267.2660339
   Verendel V, 2009, NEW SECURITY PARADIGMS WORKSHOP 2009, PROCEEDINGS, P37
   Villarrubia C., 2004, Towards a classification of security metrics, P342
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wartschinski L, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106809
   Wheeler DavidA., 2003, SECURE PROGRAMMING L
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Xu ZH, 2006, ISDA 2006: SIXTH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS DESIGN AND APPLICATIONS, VOL 1, P1049
   Yacoub SM, 2002, IEEE T SOFTWARE ENG, V28, P529, DOI 10.1109/TSE.2002.1010058
   Yang Y., 2020, ACM Computing Surveys (CSUR), V54, P1
   Yang YM, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3503509
   Yee GOM., 2013, Computer and Information Security Handbook (Third Edition), VThird Edition, pe57
   Younis A, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P97, DOI 10.1145/2857705.2857750
   Zhang Y, 2015, IEEE INT C ENG COMP, P40, DOI 10.1109/ICECCS.2015.15
   Zimmermann T., 2010, Searching for a needle in a haystack: predicting security vulnerabilities for windows vista, P421
   Zitser M., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1041685.1029911
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 68
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 NOV 17
PY 2023
DI 10.1002/smr.2639
EA NOV 2023
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y1LS1
UT WOS:001102957800001
DA 2024-07-18
ER

PT J
AU Alekseev, Y
   Onischuck, M
   Zorin, A
   Chernyi, V
   Iliyn, E
   Itsykson, V
AF Alekseev, Yaroslav
   Onischuck, Mikhail
   Zorin, Arseniy
   Chernyi, Vitaliy
   Iliyn, Evgeniy
   Itsykson, Vladimir
TI ATSM: A coverage-based framework and a tool for test suite minimization
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE automation; code coverage; Java; REST API; test suite minimization
AB Software projects grow larger every year, which, in turn, makes the testing process harder. One of the most useful methods for testing large projects is unit-test generation. However, some tests can repeatedly cover the same parts of the code, making it difficult to maintain a growing test codebase. In software testing, test suite minimization plays a crucial role in reducing the cost of testing and improving the efficiency of the testing process. In this paper, we provide an extensible minimization engine that detects redundant tests using one of the supported minimization algorithms without changing the coverage metrics. We also performed a comprehensive analysis of existing approaches and techniques, developed an engine structure, and implemented multiple algorithms of different kinds. Finally, we evaluated our tool on various open-source projects to demonstrate its effectiveness and efficiency.
C1 [Alekseev, Yaroslav; Onischuck, Mikhail; Zorin, Arseniy; Chernyi, Vitaliy; Iliyn, Evgeniy] Peter Great St Petersburg Polytech Univ, Polytech Skaya 29, St Petersburg 195251, Russia.
   [Itsykson, Vladimir] ITMO Univ, St Petersburg, Russia.
C3 Peter the Great St. Petersburg Polytechnic University; ITMO University
RP Zorin, A (corresponding author), Peter Great St Petersburg Polytech Univ, Polytech Skaya 29, St Petersburg 195251, Russia.
EM zorinarseny@yandex.ru
OI Chernyi, Vitaliy/0009-0003-6281-6726; Onischuck,
   Mikhail/0000-0001-5359-0161; Zorin, Arsenii/0000-0001-7858-4040;
   Itsykson, Vladimir/0000-0003-0276-4517
FU The work is supported by Huawei Russian Research Institute.; Huawei
   Russian Research Institute
FX The work is supported by Huawei Russian Research Institute.
CR Banerjee A, 2016, ADV COMPUT, V101, P121, DOI 10.1016/bs.adcom.2015.11.005
   Campos J, 2013, PROCEEDINGS OF THE 2013 10TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P317, DOI 10.1109/ITNG.2013.51
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Coviello C, 2018, PROC IEEE ACM INT C, P306, DOI 10.1145/3183440.3194983
   Coviello C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P95, DOI 10.1109/SANER.2018.8330200
   Cruciani E, 2019, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2019.00055
   Gotlieb Arnaud., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P171
   Goyal A, 2019, ICSOFT: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P226, DOI 10.5220/0007842502260237
   Hsu HY, 2009, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2009.5070541
   Jeffrey D, 2005, PROC IEEE INT CONF S, P549
   Kiran A, 2019, IEEE ACCESS, V7, P89093, DOI 10.1109/ACCESS.2019.2926384
   Li D, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P62, DOI 10.1109/GREENS.2013.6606423
   Liang You, 2012, 2012 8th International Conference on Natural Computation, P596, DOI 10.1109/ICNC.2012.6234754
   Lin JW, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1039, DOI 10.1145/3180155.3180174
   Muthyala K., 2011, Indian J. Comput. Sci. Eng, V2, P500
   ROBINSON AH, 1967, PR INST ELECTR ELECT, V55, P356, DOI 10.1109/PROC.1967.5493
   Robinson Brian, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P23, DOI 10.1109/ASE.2011.6100059
   Saputra Mochamad Chandra, 2020, 2020 IEEE 9th Global Conference on Consumer Electronics (GCCE), P287, DOI 10.1109/GCCE50665.2020.9291990
   Vahabzadeh A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P210, DOI 10.1145/3180155.3180203
   Wang S, 2015, J SYST SOFTWARE, V103, P370, DOI 10.1016/j.jss.2014.08.024
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zheng W, 2017, 2017 ANNUAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2017), P30, DOI 10.1109/SATE.2017.12
NR 22
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 SEP 20
PY 2023
DI 10.1002/smr.2621
EA SEP 2023
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R7VS6
UT WOS:001066402400001
DA 2024-07-18
ER

PT J
AU Abnane, I
   Idri, A
   Abran, A
AF Abnane, Ibtissam
   Idri, Ali
   Abran, Alain
TI Optimized fuzzy clustering-based k-nearest neighbors imputation for
   mixed missing data in software development effort estimation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE fuzzy logic; imputation; missing data; software development effort
   estimation
ID COST ESTIMATION; DATA SETS; ANALOGY; ALGORITHM; SYSTEMS
AB ContextSoftware development effort estimation (SDEE) is one of the most challenging aspects in project management. The presence of missing data (MD) in software attributes makes SDEE even more complex. K-nearest neighbors imputation (KNNI) has been widely used in SDEE to deal with the MD issue. However, KNNI, in its classical process, has low tolerance to imprecision and uncertainty especially when dealing with categorical features. When dealing with categorical attributes, KNNI uses a classical approach, employing mainly numbers or classical intervals to represent software attributes and similarity measures originally designed for numerical attributes. ObjectivesThis paper evaluates the use of an optimized fuzzy clustering-based KNNI (FC-KNNI) and compares it with classical KNN when dealing with mixed data in the context of SDEE. MethodsWe investigate the effect of two imputation techniques (FC-KNNI and KNNI) on five SDEE techniques: case-based reasoning, fuzzy case-based reasoning, support vector regression, multilayer perceptron, and reduced-error pruning tree. The evaluation is carried out using six publicly available datasets for SDEE using two performance measures, standardized accuracy (SA), and Pred (0.25). The Wilcoxon statistical test is also performed to assess the significance of results. ResultsThe results are promising in the sense that using an imputation technique designed for mixed data is better than reusing methods originally designed for numerical data. We found that FC-KNNI significantly outperforms KNNI regardless of the SDEE technique and dataset used. Another important finding is that F-CBR improved the analogy process compared to CBR. ConclusionThe introduction of fuzzy sets and fuzzy clustering in the analogy process improves its performances in terms of SA and Pred (0.25).
C1 [Abnane, Ibtissam; Idri, Ali] Mohammed V Univ, Software Project Management Res Team, ENSIAS, Rabat, Morocco.
   [Idri, Ali] Mohammed VI Polytech Univ, Ben Guerir, Morocco.
   [Abran, Alain] Univ Quebec, Dept Software Engn & Informat Technol, ETS, Montreal, PQ, Canada.
C3 Mohammed V University in Rabat; Mohammed VI Polytechnic University;
   University of Quebec; University of Quebec Montreal; Ecole de
   Technologie Superieure - Canada
RP Abnane, I (corresponding author), Mohammed V Univ, Software Project Management Res Team, ENSIAS, Rabat, Morocco.
EM ibtissam.abnane@ensias.um5.ac.ma
RI Abran, Alain/I-2493-2016
OI Abran, Alain/0000-0003-2670-9061
CR Abnane I, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2260
   Abnane I, 2018, FED CONF COMPUT SCI, P1015, DOI 10.15439/2018F95
   Agresti A., 2013, Categorical Data Analysis, V45, DOI DOI 10.1198/TECH.2003.S28
   Amazal Fatima-Azzahra, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P252, DOI 10.1109/IWSM.Mensura.2014.31
   Amazal FA., 2014, 21 AS PAC SOFTW ENG, P1
   Angelis L, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P4
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, DOI [DOI 10.1145/1370788.1370804, 10.1145/1370788.1370804]
   Bakir A, 2010, SOFTWARE QUAL J, V18, P57, DOI 10.1007/s11219-009-9081-z
   Cara FJ, 2012, MECH SYST SIGNAL PR, V31, P109, DOI 10.1016/j.ymssp.2012.04.004
   Cartwright MH, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P154, DOI 10.1109/METRIC.2003.1232464
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Damiani E., 2004, SOFT COMPUTING SOFTW, DOI [10.1007/978-3-540-44405-3, DOI 10.1007/978]
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Derrac J, 2014, INFORM SCIENCES, V260, P98, DOI 10.1016/j.ins.2013.10.038
   Dong YR, 2013, SPRINGERPLUS, V2, DOI 10.1186/2193-1801-2-222
   Dunn J. C., 1974, Journal of Cybernetics, V4, P95, DOI 10.1080/01969727408546059
   Eberhart R.C., 1995, Proc Int Symp Micro Mach Hum Sci, P39, DOI [DOI 10.1109/MHS.1995.494215, 10.1109/mhs.1995.494215]
   Foss T., 2001, MRE HETEROSCEDASTICI
   Gallego AJ, 2018, PATTERN RECOGN, V74, P531, DOI 10.1016/j.patcog.2017.09.038
   Gan G, 2007, ASA SIAM SER STAT AP, V20, P1, DOI 10.1137/1.9780898718348
   Hosni M, 2018, SOFT COMPUT, V22, P5977, DOI 10.1007/s00500-017-2945-4
   Huang Z., 1997, Data Min. Knowl. Discov., P1
   Huang ZX, 1998, DATA MIN KNOWL DISC, V2, P283, DOI 10.1023/A:1009769707641
   Huang ZX, 1999, IEEE T FUZZY SYST, V7, P446, DOI 10.1109/91.784206
   Idri A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P21, DOI 10.1109/METRIC.2002.1011322
   Idri A, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P85, DOI 10.1109/METRIC.2001.915518
   Idri A., 2016, INT J INTELL SYST, V0, P1, DOI [10.1142/S1469026814500138, DOI 10.1142/S1469026814500138]
   Idri A., 2015, INT C SOFTW ENG ART, P1, DOI [DOI 10.1109/ICTA.2015, DOI 10.1109/SNPD.2015.7176280, 10.1109/SNPD.2015.7176280]
   Idri A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.2114
   Idri A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1925
   Idri A, 2016, APPL SOFT COMPUT, V49, P990, DOI 10.1016/j.asoc.2016.08.012
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Idri A, 2016, J SYST SOFTWARE, V117, P595, DOI 10.1016/j.jss.2016.04.058
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   Jönsson P, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P108, DOI 10.1109/METRIC.2004.1357895
   Keung J, 2009, IEEE AUS SOFT ENGR, P327, DOI 10.1109/ASWEC.2009.32
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Lee S., 2012, J CHEM INF MODEL, DOI [10.1017/CBO9781107415324.004, DOI 10.1017/CBO9781107415324.004]
   Little RJ, 1987, STAT ANAL MISSING DA
   LITTLE RJA, 1989, SOCIOL METHOD RES, V18, P292, DOI 10.1177/0049124189018002004
   Lokan C, 2001, IEEE SOFTWARE, V18, P26, DOI 10.1109/52.951491
   Menzies T., 2017, The SEACRAFT Repository of Empirical Software Engineering Data
   Menzies T., 2015, The promise repository of empirical software engineering data
   Monte-Serrat DM., 2021, INT J COGN COMPUT EN, V2, P30, DOI [10.1016/J.IJCCE.2021.01.002, DOI 10.1016/J.IJCCE.2021.01.002]
   Pan YW, 2020, KNOWL-BASED SYST, V189, DOI 10.1016/j.knosys.2019.105088
   POLI R, 2007, SWARM INTELL-US, V1, P33, DOI [DOI 10.1007/S11721-007-0002-0, DOI 10.1109/ICNN.1995.488968]
   RUBIN DB, 1976, BIOMETRIKA, V63, P581, DOI 10.2307/2335739
   Rubin DB, 1987, Multiple imputation for survey nonresponse, DOI 10.1002/9780470316696
   Sehra SK, 2017, INFORM SOFTWARE TECH, V91, P1, DOI 10.1016/j.infsof.2017.06.002
   Sentas P, 2006, J SYST SOFTWARE, V79, P404, DOI 10.1016/j.jss.2005.02.026
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sheskin D.J., 2003, HDB PARAMETRIC NONPA, DOI [DOI 10.4324/9780203489536, 10.4324/9780203489536]
   Shi YH, 1998, IEEE C EVOL COMPUTAT, P69, DOI 10.1109/ICEC.1998.699146
   Song QB, 2008, J SYST SOFTWARE, V81, P2361, DOI 10.1016/j.jss.2008.05.008
   Nguyen TPQ, 2019, APPL SOFT COMPUT, V75, P254, DOI 10.1016/j.asoc.2018.11.028
   Tsekouras GE., 2004, INT J COMPUT INTELL, V1, P87
   Van Hulse J, 2014, INFORM SCIENCES, V259, P596, DOI 10.1016/j.ins.2010.12.017
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   ZADEH LA, 1994, COMMUN ACM, V37, P77, DOI 10.1145/175247.175255
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   Zadeh LA., 1993, COMPUT SECUR, V38, P1993
   Zhang W., 2011, INT C PRED MOD SOFTW, P4, DOI [10.1145/2020390.2020394, DOI 10.1145/2020390.2020394]
NR 66
TC 1
Z9 1
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2024
VL 36
IS 4
DI 10.1002/smr.2529
EA JAN 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MU0E5
UT WOS:000988341600001
DA 2024-07-18
ER

PT J
AU Walter, B
   Marovic, B
   Garnizov, I
   Wolski, M
   Todosijevic, A
AF Walter, Bartosz
   Marovic, Branko
   Garnizov, Ivan
   Wolski, Marcin
   Todosijevic, Andrijana
TI A software process improvement framework based on best practices
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE best practices; software maturity evaluation; software process
   improvement
AB Software process improvement requires significant effort related not only to the identification of relevant issues and providing an adequate response to them, but also to the implementation and adoption of the changes. Best practices provide recommendations to software teams on how to address identified objectives in practice, based on aggregated experience and knowledge. In the paper, we present the GeANT SPI framework based on best practices, together with the collected experience from the process of adopting the best practices.
C1 [Walter, Bartosz] Poznan Univ Tech, Fac Comp & Telecommun, Poznan, Poland.
   [Walter, Bartosz; Wolski, Marcin] Poznan Supercomp & Networking Ctr, Poznan, Poland.
   [Marovic, Branko] Univ Belgrade, Belgrade, Serbia.
   [Garnizov, Ivan] Friedrich Alexander Univ, Erlangen, Germany.
   [Todosijevic, Andrijana] AMRES, Belgrade, Serbia.
C3 Poznan University of Technology; Polish Academy of Sciences; Poznan
   Supercomputing & Networking Center; University of Belgrade; University
   of Erlangen Nuremberg
RP Walter, B (corresponding author), Poznan Univ Tech, Fac Comp & Telecommun, Poznan, Poland.
EM bartek.walter@man.poznan.pl
FU European Union [856726]; Polish Ministry of Science and Higher Education
FX This work is part of a project that has received funding from the
   European Union's Horizon 2020 research and innovation program under
   Grant Agreement No. 856726 (GN4-3). The scientific/academic work is
   financed from financial resources for science in the years 2019-2022
   granted for the realization of the international project cofinanced by
   the Polish Ministry of Science and Higher Education.
CR [Anonymous], 2010, CMMI FOR DEV
   [Anonymous], 2009, International Journal of Software EngineeringIJSE
   Aysolmaz B, 2011, COMM COM INF SC, V172, P97
   Bamberger J, 1997, COMPUTER, V30, P112, DOI 10.1109/2.587560
   Bayona-Ore Sussy, 2019, MATEC Web of Conferences, V292, DOI 10.1051/matecconf/201929201065
   Burnstein I, 1996, INTERNATIONAL TEST CONFERENCE 1996, PROCEEDINGS, P581, DOI 10.1109/TEST.1996.557106
   Cannegieter J., 2008, CMUSEI2008TN010
   Ebert C, 2016, INT CONF GLOBAL SOFT, P144, DOI 10.1109/ICGSE.2016.19
   Fontana RM, 2015, J SYST SOFTWARE, V102, P88, DOI 10.1016/j.jss.2014.12.032
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Fuggetta A., 2014, Proceedings of the on Future of Software Engineering, P1, DOI [10.1145/2593882.2593883, DOI 10.1145/2593882.2593883]
   Galinac T, 2009, INFORM SOFTWARE TECH, V51, P1351, DOI 10.1016/j.infsof.2009.05.002
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia-Mireles Gabriel Alberto, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P279, DOI 10.1049/ic.2012.0036
   Khan AA, 2016, IET SOFTW, V10, P125, DOI 10.1049/iet-sen.2015.0038
   Korsaa M, 2012, J SOFTW-EVOL PROC, V24, P525, DOI 10.1002/smr.502
   Messnarz R, 2014, J SOFTW-EVOL PROC, V26, P284, DOI [10.1002/smr.1583, 10.1002/smr.1591, 10.1002/smr.1586, 10.1002/smr.1582]
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Rahman A., 2011, International Conference on Information Technology and Multimedia (ICIM), 2011, P1
   Scacchi W., 2006, Software Process Improvement and Practice, V11, P95, DOI 10.1002/spip.255
   Singer L.-G., 2013, Improving the Adoption of Software Engineering Practices Through Persuasive Interventions
   Stanisavljevic Z, 2018, 2018 26TH TELECOMMUNICATIONS FORUM (TELFOR), P691
   Stojanov Z., 2016, INT C APPL INTERNET, P55
   Unterkalmsteiner M, 2014, J SOFTW-EVOL PROC, V26, P251, DOI 10.1002/smr.1637
   Walter B, 2021, COMM COM INF SC, V1442, P475, DOI 10.1007/978-3-030-85521-5_31
   Walter B, 2020, COMM COM INF SC, V1251, P30, DOI 10.1007/978-3-030-56441-4_3
   Walter B, 2019, COMM COM INF SC, V1060, P123, DOI 10.1007/978-3-030-28005-5_10
   Wolski M., 2017, DELIVERABLE D5 3 AN
   Zarour M, 2015, J SYST SOFTWARE, V101, P180, DOI 10.1016/j.jss.2014.11.041
NR 29
TC 0
Z9 0
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2023
VL 35
IS 9
SI SI
DI 10.1002/smr.2525
EA DEC 2022
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R4AX4
UT WOS:000898281100001
DA 2024-07-18
ER

PT J
AU Santos, JAM
   Petronilo, GXA
AF Santos, Jose Amancio M.
   Antunes Petronilo, Gadiel Xavier
TI Building empirical knowledge on the relationship between code smells and
   design patterns: An exploratory study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE code smell; design pattern; exploratory study; mining software
   repository
AB Code smell is a concept describing potential problems in software design. In opposition, design pattern describes good design solutions in terms of maintainability and reusability. Code smell and design pattern might be perceived as metaphors supporting software design activity in terms of understanding and communication. However, empirical evaluation is needed to investigate their effect in terms of programming activity. Our objective is to build empirical knowledge on the relationship between code smells and design patterns. We carried out an exploratory study based on mining software repositories and in a baseline study addressing software evolution. In total, we analyzed 61 software. Their classes were identified as linked to both code smells and design patterns metaphors. Then, we analyzed the co-occurrence of these metaphors. Our findings indicate that the relationship between smells and design patterns is software dependent. Some software present many smells linked to design patterns while for other software, smelly classes are not linked to design patterns. We also found that the instability metric weakly reflects this idea. Our study supports better understanding of the topic. It presents results in the opposite direction of expectations that the presence of smells is correlated with the absence of design patterns and vice versa.
C1 [Santos, Jose Amancio M.; Antunes Petronilo, Gadiel Xavier] State Univ Feira de Santana, Technol Dept, Feira De Santana, BA, Brazil.
C3 Universidade Estadual de Feira de Santana
RP Santos, JAM (corresponding author), State Univ Feira de Santana, Technol Dept, Feira De Santana, BA, Brazil.
EM zeamancio@uefs.br
RI Santos, José Amancio Macedo/M-9768-2018; Petronilo,
   Gustavo/ABC-5374-2020
OI Petronilo, Gustavo/0000-0001-7132-9143
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   [Anonymous], 2012, P 11 ANN INT C ASP O
   [Anonymous], 2013, ELECT COMMUN EUR ASS
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bigonha MAS, 2019, INFORM SOFTWARE TECH, V115, P79, DOI 10.1016/j.infsof.2019.08.005
   Brin S., 1997, SIGMOD Record, V26, P255, DOI [10.1145/253262.253327, 10.1145/253262.253325]
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Cardoso B., 2015, P ANN C BRAZ S INF S, V1, P347
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   Dale N., 2016, Computer science illuminated, V6th
   Feitosa D, 2019, INFORM SOFTWARE TECH, V105, P1, DOI 10.1016/j.infsof.2018.07.014
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fil? TGS., 2014, P X WORKSHOP ANUAL M
   Fontana F. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P450, DOI 10.1109/ICSTW.2011.12
   Fontana FA, 2019, J SYST SOFTWARE, V154, P139, DOI 10.1016/j.jss.2019.04.066
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler J., 2013, Practical statistics for field biology, V2nd
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gatrell M., 2011, Research Challenges in Information Science (RCIS), 2011 Fifth International Conference on, P1, DOI DOI 10.1109/RCIS.2011.6006827
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Hauke J, 2011, QUAEST GEOGR, V30, P87, DOI 10.2478/v10117-011-0021-1
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Henderson-Sellers B., 1995, Object-oriented metrics: measures of complexity
   Jaafar F., 2011, 2011 18th Working Conference on Reverse Engineering, P325, DOI 10.1109/WCRE.2011.47
   Jaafar F, 2016, EMPIR SOFTW ENG, V21, P896, DOI 10.1007/s10664-015-9361-0
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Juristo N., 2012, EMPIR SOFTW ENG
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kniesel G, 2009, INT C PROGRAM COMPRE, P208, DOI 10.1109/ICPC.2009.5090044
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Ma WWY, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P24, DOI 10.1109/SATE.2016.11
   Marinescu R, 2010, EUR CON SFTWR MTNCE, P274, DOI 10.1109/CSMR.2010.44
   Martin R., 1994, An Analysis of Dependencies, V12, P151
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   McConnell Steve., 2004, Code Complete, V2nd ed
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Paiva Thanis, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0041-1
   Pettersson N, 2010, IEEE T SOFTWARE ENG, V36, P575, DOI 10.1109/TSE.2009.92
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Santos Jose Amancio M., 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0042-0
   Santos JA., 2014, J SOFTWARE ENG RES D, V2, P1, DOI DOI 10.1186/S40411-014-0011-9
   Santos Jose Amancio, 2013, P 17 INT C EV ASS SO, P48
   Santos JAM, 2018, J SYST SOFTWARE, V144, P450, DOI 10.1016/j.jss.2018.07.035
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Sousa BL, 2019, SOFTWARE PRACT EXPER, V49, P1079, DOI 10.1002/spe.2697
   Sousa BL, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1528, DOI 10.1145/3167132.3167295
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Terra R., 2013, SIGSOFT Softw. Eng. Not., V38, P1, DOI [10.1145/2507288.2507314, DOI 10.1145/2507288.2507314]
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Walter B, 2018, J SYST SOFTWARE, V144, P1, DOI 10.1016/j.jss.2018.05.057
   Walter B, 2016, INFORM SOFTWARE TECH, V74, P127, DOI 10.1016/j.infsof.2016.02.003
   Wedyan F, 2020, IET SOFTW, V14, P1, DOI 10.1049/iet-sen.2018.5446
   Wieman R., 2011, Anti-Pattern Scanner: An Approach to Detect Anti-Patterns and Design Violations
   Xiong RH, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P163, DOI [10.1109/saner.2019.8668031, 10.1109/SANER.2019.8668031]
   Yamashita A, 2013, J SYST SOFTWARE, V86, P2639, DOI 10.1016/j.jss.2013.05.007
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 69
TC 0
Z9 0
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2022
VL 34
IS 9
AR e2487
DI 10.1002/smr.2487
EA JUL 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4F2FJ
UT WOS:000828292500001
DA 2024-07-18
ER

PT J
AU Balogun, AO
   Almomani, M
   Basri, S
   Almomani, O
   Capretz, LF
   Khan, AA
   Gilal, AR
   Baashar, Y
AF Balogun, Abdullateef Oluwagbemiga
   Almomani, Malek
   Basri, Shuib
   Almomani, Omar
   Capretz, Luiz Fernando
   Khan, Arif Ali
   Gilal, Abdul Rehman
   Baashar, Yahia
TI Towards the sustainability of small and medium software enterprises
   through the implementation of software process improvement: Empirical
   investigation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE small and medium software enterprises; software process improvement;
   sustainability success factors; systematic literature review
ID SUCCESS FACTORS; MODEL; FRAMEWORK; SMES; PROJECTS; INDUSTRY; SPI
AB To improve and sustain the quality of software products, software process improvement (SPI) is needed. Currently, small and medium software enterprises (SMSEs) represent a high proportion of companies around the world and become a cornerstone in the worldwide industry economy. These companies have realized that improving their process is crucial for success, but they are facing difficulties to implement it due to limited resources, limited knowledge, and time constraints. This study aimed to identify the sustainability success factors (SSFs) that have a positive impact on implementing SPI efforts in SMSEs. Data were collected through a systematic literature review (SLR) approach and quantitatively through a survey questionnaire. A list of 44 SSFs was identified during SLR and empirical study. Results illustrate that there is a positive correlation between the ranks obtained from both dataset (rs (44) = .548, rho = .001). Therefore, there would be significant differences between the SSFs identified in both datasets. In conclusion, the top-ranked factors can then be used to guide the SPI coordinators on where they should focus their attention to reach the desired SPI goals, which is crucial to deliver the software products and also facilitates in development of model for SPIs in the future.
C1 [Balogun, Abdullateef Oluwagbemiga] Univ Ilorin, Dept Comp Sci, Ilorin, Nigeria.
   [Almomani, Malek] World Islamic Sci & Educ Univ, Dept Software Engn & Informat Syst, Amman 11947, Jordan.
   [Basri, Shuib] Univ Teknol PETRONAS, Dept Comp & Informat Sci, Seri Iskandar, Perak, Malaysia.
   [Almomani, Omar] World Islamic Sci & Educ Univ, Dept Comp Network & Informat Syst, Amman, Jordan.
   [Capretz, Luiz Fernando] Western Univ, Dept Elect & Comp Engn, London, ON, Canada.
   [Khan, Arif Ali] Univ Oulu, M3S Empir Software Engn Res Unit, Oulu, Finland.
   [Gilal, Abdul Rehman] Sukkur IBA Univ, Dept Comp Sci, Sukkur, Pakistan.
   [Baashar, Yahia] Univ Malaysia Sabah UMS, Fac Comp & Informat, Labuan, Malaysia.
C3 University of Ilorin; Universiti Teknologi Petronas; Western University
   (University of Western Ontario); University of Oulu; Sukkur IBA
   University
RP Almomani, M (corresponding author), World Islamic Sci & Educ Univ, Dept Software Engn & Informat Syst, Amman 11947, Jordan.
EM malek.almomani@wise.edu.jo
RI almomani, Prof.Omar/ITT-1362-2023; Capretz, Luiz Fernando/K-5944-2013;
   almomani, Prof.Omar/AAY-7038-2020; khan, Arif/HMV-3165-2023; Balogun,
   Abdullateef Oluwagbemiga/AAE-5137-2019; Baashar, Yahia/AAP-6965-2020;
   Gilal, Abdul Rehman/M-3039-2017
OI almomani, Prof.Omar/0000-0003-3160-6542; Capretz, Luiz
   Fernando/0000-0001-6966-2369; almomani, Prof.Omar/0000-0003-3160-6542;
   Balogun, Abdullateef Oluwagbemiga/0000-0001-7411-3639; Baashar,
   Yahia/0000-0002-8004-3929; BASRI, SHUIB/0000-0002-1736-4834; Gilal,
   Abdul Rehman/0000-0002-1904-1588
CR Adam A.B., 2016, J MANAGMENT, V11, P35, DOI DOI 10.19166/DEREMA.V11I1.187
   Ahmad A, 2018, IEEE ACCESS, V6, P17711, DOI 10.1109/ACCESS.2018.2818724
   Ahmad Rodina, 2015, Journal of Software, V10, P1199, DOI 10.17706/jsw.10.101199-1215
   Ainin S, 2015, IND MANAGE DATA SYST, V115, P570, DOI 10.1108/IMDS-07-2014-0205
   Airaksinen A., DEPENDENT INDEPENDEN
   Ali S, 2016, J SYST SOFTWARE, V117, P402, DOI 10.1016/j.jss.2016.03.069
   Almomani MA., 2020, USING EXPERT PANEL V, P844, DOI [10.1007/978-3-030-63322-6_72, DOI 10.1007/978]
   Almomani MA, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1953
   Almomani MA, 2018, ADV SCI LETT, V24, P1716, DOI 10.1166/asl.2018.11144
   Almomani MA, 2016, 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCES (ICCOINS), P442, DOI 10.1109/ICCOINS.2016.7783256
   Almomani MAT, 2015, INT CONF IT CONVERGE
   [Anonymous], 2015, COMMUNICATION COORDI
   [Anonymous], 2014, ANN REP 2013 14
   Australian Research Council, 2019, ENG IMP ASS 2018 19
   Ayaz M., 2017, INT J MULTIDISCIP SC, V8, P1
   Baruch Y, 1999, HUM RELAT, V52, P421, DOI 10.1023/A:1016905407491
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Basri S., 2019, ORG FACTORS SOFTWARE, P1132, DOI [10.1007/978-3-030-33582-3_106, DOI 10.1007/978]
   Beecham S, 2005, J SYST SOFTWARE, V76, P251, DOI 10.1016/j.jss.2004.06.004
   Beelmann A, 2006, EUR PSYCHOL, V11, P244, DOI 10.1027/1016-9040.11.3.244
   Berdie D.R., 1986, QUESTIONNAIRES DESIG, V2nd
   Berisha G., 2015, ACAD J BUSINESS ADM, V1, P17
   Black T.R., 1999, Doing quantitative research in the social sciences: An integrated approach to research design, measurement, and statistics
   Bullen C.V., 1981, Center for Information Systems Research. Sloan School of Management M.I.T
   Chen Lianping, 2010, 14 INT C EVALUATION
   Chevers DA, 2017, J GLOB INF TECH MAN, V20, P110, DOI 10.1080/1097198X.2017.1321356
   Chong L.C., 2019, Management Science Letters, V9, P1617
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Cycyota CS, 2006, ORGAN RES METHODS, V9, P133, DOI 10.1177/1094428105280770
   Deming W. E., 1986, OUT CRISIS
   Department of Statistics M, 2020, MAL STAT BUS REG
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Dyba T., 2003, Software Engineering Notes, V28, P148, DOI 10.1145/949952.940092
   European Commission, 2016, US GUID SME DEF
   Frankfort-Nachmias C., 2007, STUDY GUIDE RES METH
   Garousi V, 2019, SOFTWARE QUAL J, V27, P429, DOI 10.1007/s11219-018-9419-5
   Garzás J, 2013, COMPUT STAND INTER, V35, P616, DOI 10.1016/j.csi.2013.04.002
   Gilal AR, 2016, INFORM SOFTWARE TECH, V74, P105, DOI 10.1016/j.infsof.2016.02.007
   Hashim J., 2015, International Journal of Business and Information, V2, P221
   Heroux MA., 2019, TOOLS TECHNIQUES HIG, P98, DOI [10.1007/978-3-030-44728-1_6, DOI 10.1007/978]
   Iqbal J, 2016, SOFTWARE QUAL J, V24, P997, DOI 10.1007/s11219-015-9277-3
   Jamalludin, 2017, J TELECOMMUN ELECT C, V9, P133
   Jones-Evans, 2009, STRATEG DIR, P7
   Keshta I., 2019, J KING SAUD UNIV-COM, P398, DOI DOI 10.1016/J.JKSUCI.2019.10.013
   Keshta I, 2018, IEEE ACCESS, V6, P41643, DOI 10.1109/ACCESS.2018.2859249
   Khan AA, 2017, IEEE ACCESS, V5, P13720, DOI 10.1109/ACCESS.2017.2728603
   Khan SU, 2012, IET SOFTW, V6, P1, DOI 10.1049/iet-sen.2010.0038
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kuhrmann M, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.62
   Kupper S, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2182
   Laporte CY, 2018, IEEE SOFTWARE, V35, P99, DOI 10.1109/MS.2017.4541041
   Larrucea X, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.1989
   Larrucea X, 2016, IEEE SOFTWARE, V33, P85, DOI 10.1109/MS.2016.42
   Lavallée M, 2012, PROC INT CONF SOFTW, P113, DOI 10.1109/ICSE.2012.6227201
   Lee JC, 2019, INFORM DEV, V35, P6, DOI 10.1177/0266666917724194
   Lee JC, 2016, COMPUT HUM BEHAV, V54, P462, DOI 10.1016/j.chb.2015.08.030
   Lückmann P, 2017, PROCEDIA COMPUT SCI, V121, P439, DOI 10.1016/j.procs.2017.11.059
   Meline T., 2006, CONT ISSUES COMMUNIC, V33, P21
   Memon ZA, 2012, MEHRAN UNIV RES J EN, V31, P271
   MSC, MSC MAL DIR
   Muñoz M, 2021, IET SOFTW, V15, P412, DOI 10.1049/sfw2.12041
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Niazi M, 2012, J SOFTW-EVOL PROC, V24, P877, DOI 10.1002/smr.543
   Nikitina, 2012, INT J ADV SOFTWARE, V5, P3, DOI [10.1007/978-3-642-31199-4_8, DOI 10.1007/978]
   O'Connor RV, 2012, INT J HUM CAP INF TE, V3, P13, DOI 10.4018/jhcitp.2012070102
   OConnor, 2016, MULTICASE STUDY ANAL, P30, DOI [10.1007/978-3-319-44817-6_3, DOI 10.1007/978]
   Pallant J., 2001, SPSS SURVIVAL MANUAL
   Papadopoulos G., 2018, Statistics on small and medium-sized enterprises - Statistics explained
   Rad BB, 2017, INT J COMPUT SCI NET, V17, P8
   Sanchez-Gordón ML, 2016, COMM COM INF SC, V633, P3, DOI 10.1007/978-3-319-44817-6_1
   Satorra A, 2001, PSYCHOMETRIKA, V66, P507, DOI 10.1007/BF02296192
   Sharifi M., 2016, EFFECTS CRITICAL SUC
   Sharma P, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2183
   Sharma P, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1993
   Sharma S, 2014, RES SOC JUSTICE PERS, P1
   Singh A, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2261
   Sison R., 2006, 28th International Conference on Software Engineering Proceedings, P628, DOI 10.1145/1134285.1134378
   Solemon B., 2008, REQUIREMENTS ENG PRO
   Soman S., 2020, EXPLORATORY ANAL CHA, V1427, DOI 10.1088/1742-6596/1427/1/012010
   Staples M, 2008, INFORM SOFTWARE TECH, V50, P605, DOI 10.1016/j.infsof.2007.07.003
   Sukamolson S., 2007, LANGUAGE I CHULALONG, V1, P2
   Sulayman M, 2014, INFORM SOFTWARE TECH, V56, P807, DOI 10.1016/j.infsof.2014.02.006
   Sulayman M, 2012, INFORM SOFTWARE TECH, V54, P479, DOI 10.1016/j.infsof.2011.12.007
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Voronkova OV., 2018, Espacios, V39, P13
   Wallace LG, 2014, INFORM MANAGE-AMSTER, V51, P249, DOI 10.1016/j.im.2013.12.003
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Yang, 2019, CRITICAL SUCCESS FAC
   Zarour M, 2018, J COMPUT SCI-NETH, V14, P122, DOI DOI 10.3844/JCSSP.2018.122.131
NR 92
TC 2
Z9 2
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2022
VL 34
IS 8
AR e2466
DI 10.1002/smr.2466
EA MAY 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3L2JI
UT WOS:000799695600001
DA 2024-07-18
ER

PT J
AU Zabardast, E
   Bennin, KE
   Gonzalez-Huerta, J
AF Zabardast, Ehsan
   Bennin, Kwabena Ebo
   Gonzalez-Huerta, Javier
TI Further investigation of the survivability of code technical debt items
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE bugs; code smells; code technical debt items; survivability;
   vulnerabilities
ID SMELLS; SOFTWARE; MANAGEMENT
AB Context: Technical debt (TD) discusses the negative impact of sub-optimal decisions to cope with the need-for-speed in software development. Code technical debt items (TDI) are atomic elements of TD that can be observed in code artifacts. Empirical results on open-source systems demonstrated how code-smells, which are just one type of TDIs, are introduced and "survive" during release cycles. However, little is known about whether the results on the survivability of code-smells hold for other types of code TDIs (i.e., bugs and vulnerabilities) and in industrial settings. Goal: Understanding the survivability of code TDIs by conducting an empirical study analyzing two industrial cases and 31 open-source systems from Apache Foundation. Method: We analyzed 133,670 code TDIs (35,703 from the industrial systems) detected by SonarQube (in 193,196 commits) to assess their survivability using survivability models. Results: In general, code TDIs tend to remain and linger for long periods in open-source systems, whereas they are removed faster in industrial systems. Code TDIs that survive over a certain threshold tend to remain much longer, which confirms previous results. Our results also suggest that bugs tend to be removed faster, while code smells and vulnerabilities tend to survive longer.
C1 [Zabardast, Ehsan; Gonzalez-Huerta, Javier] Blekinge Inst Technol, Software Engn Res Lab SERL, Campus Karlskrona,Valhallavge 1, Blekinge, Sweden.
   [Bennin, Kwabena Ebo] Wageningen Univ & Res, Informat Technol Grp, Wageningen, Netherlands.
C3 Blekinge Institute Technology; Wageningen University & Research
RP Zabardast, E (corresponding author), Blekinge Inst Technol, Software Engn Res Lab SERL, Campus Karlskrona,Valhallavge 1, Blekinge, Sweden.
EM ehsan.zabardast@bth.se
RI Gonzalez-Huerta, Javier/V-4258-2019
OI Gonzalez-Huerta, Javier/0000-0003-1350-7030; Bennin,
   Kwabena/0000-0001-9140-9271
FU KK foundation through the SHADE KK-Hog project [2017/0176]; Research
   Profile project SERT under Blekinge Institute of Technology, SERL Sweden
   [2018/010]
FX This research was supported by the KK foundation through the SHADE
   KK-Hog project under grant 2017/0176 and Research Profile project SERT
   under grant 2018/010 at Blekinge Institute of Technology, SERL Sweden.
CR Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   [Anonymous], 2010, 24765 ISOIECIEEE
   [Anonymous], 2018, REFACTORING IMPROVIN
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Arvanitou EM, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P123, DOI 10.1145/3319008.3319019
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Digkas G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P153, DOI 10.1109/SANER.2018.8330205
   Digkas G, 2017, LECT NOTES COMPUT SC, V10475, P51, DOI 10.1007/978-3-319-65831-5_4
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 2006, CODESMELL
   Guaman D., 2017, P 2017 7 INT WORKSHO, P171, DOI [DOI 10.18178/WCSE.2017.06.030, 10.18178/wcse.2017.06.030]
   ISO/IEC, 2018, 270052018 ISOIEC
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kruchten P., 2019, Managing Technical Debt
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Leys C, 2013, J EXP SOC PSYCHOL, V49, P764, DOI 10.1016/j.jesp.2013.03.013
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Marcilio D, 2019, INT C PROGRAM COMPRE, P209, DOI 10.1109/ICPC.2019.00040
   Martin R. C., 2008, CLEAN CODE
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Miller Jr Rupert G, 2011, Survival analysis, V66
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   National Institute of Standards and Technology (NIST), 2012, NIST Special Publication, V800-146
   Neamtiu I, 2013, J SOFTW-EVOL PROC, V25, P193, DOI 10.1002/smr.564
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Saarimäki N, 2019, EUROMICRO CONF PROC, P317, DOI 10.1109/SEAA.2019.00055
   Saarimäki N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P98, DOI 10.1109/TechDebt.2019.00028
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Zabardast E, 2020, EUROMICRO CONF PROC, P376, DOI 10.1109/SEAA51224.2020.00068
NR 46
TC 1
Z9 1
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2022
VL 34
IS 2
AR e2425
DI 10.1002/smr.2425
EA JAN 2022
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YW3RG
UT WOS:000740993400001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Shahin, M
   Nasab, AR
   Babar, MA
AF Shahin, Mojtaba
   Nasab, Ali Rezaei
   Babar, Muhammad Ali
TI A qualitative study of architectural design issues in DevOps
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE continuous delivery; DevOps; qualitative study; software architecture;
   Stack Overflow
ID DELIVERY
AB Software architecture is critical in succeeding with Development and Operations (DevOps). However, designing software architectures that enable and support DevOps (DevOps-driven software architectures) is a challenge for organizations. We assert that one of the essential steps towards characterizing DevOps-driven architectures is to understand architectural design issues raised in DevOps. At the same time, some of the architectural issues that emerge in the DevOps context (and their corresponding architectural practices or tactics) may stem from the context (i.e., domain) and characteristics of software organizations. To this end, we conducted a mixed-methods study that consists of a qualitative case study of two teams in a company during their DevOps transformation and a content analysis of Stack Overflow and DevOps Stack Exchange posts to understand architectural design issues in DevOps. Our study found eight specific and contextual architectural design issues faced by the two teams and classified architectural design issues discussed in Stack Overflow and DevOps Stack Exchange into 11 groups. Our aggregated results reveal that the main characteristics of DevOps-driven architectures are being loosely coupled and prioritizing deployability, testability, supportability, and modifiability over other quality attributes. Finally, we discuss some concrete implications for research and practice.
C1 [Shahin, Mojtaba] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Nasab, Ali Rezaei] Shiraz Univ, Dept Engn Comp Sci & Informat Technol, Shiraz, Iran.
   [Babar, Muhammad Ali] Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
C3 Monash University; Shiraz University; University of Adelaide
RP Shahin, M (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM mojtaba.shahin@monash.edu
FU Australian Government Research Training Program Scholarship; Data61
FX When some parts of this work were carried out, the first author was
   affiliated with the University of Adelaide and supported by the
   Australian Government Research Training Program Scholarship and Data61.
   We like to thank the participants and the CTO of the case company.
CR Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Bass Len, 2018, IEEE Software, V35, P8, DOI 10.1109/MS.2017.4541051
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Bellomo S, 2014, I C DEPEND SYS NETWO, P702, DOI 10.1109/DSN.2014.104
   Bergman G., 2016, SERVING 86 MILLION U
   Bosch J, 2016, IEEE SOFTWARE, V33, P82, DOI 10.1109/MS.2016.14
   Callanan M, 2016, IEEE SOFTWARE, V33, P53, DOI 10.1109/MS.2016.66
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Cerny Tomas., 2017, P INT C RES ADAPTIVE, P228, DOI [DOI 10.1145/3129676.3129682, 10.1145/3129676.31296825, DOI 10.1145/3129676.31296825]
   Chen LP, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P39, DOI 10.1109/ICSA.2018.00013
   Chen LP, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P131, DOI 10.1109/WICSA.2015.23
   Cito J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P393, DOI 10.1145/2786805.2786826
   Di Nitto E., 2016, Proceedings of the 2nd International Workshop on Quality-Aware DevOps, P12
   Dragoni N., 2017, Microservices: yesterday, today, and tomorrow, P195, DOI [DOI 10.1007/978-3-319-67425-4_12, 10.1007/978-3-319-67425-4_12]
   Erder M, 2016, CONTINUOUS ARCHITECTURE: SUSTAINABLE ARCHITECTURE IN AN AGILE AND CLOUD-CENTRIC WORLD, P1
   Erich FMA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1885
   Evans E., 2003, Domain-Driven Design
   Forsgren N., 2017, STATE DEVOPS REP
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Haff G., 2017, DEVOPS SUCCESS NEW T
   Haselböck S, 2017, PROCEEDINGS OF THE FIFTH EUROPEAN CONFERENCE ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS (ECBS 2017), DOI 10.1145/3123779.3123804
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Hohpe G, 2016, IEEE SOFTWARE, V33, P30, DOI 10.1109/MS.2016.137
   Hoorn VA., 2017, ARXIV PREPRINT ARXIV
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jaatun M. G., 2017, 12 INT C AVAILABILIT, P1
   Kang H, 2016, INT CONF CLOUD ENG, P202, DOI 10.1109/IC2E.2016.26
   Laukkarinen T, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P15, DOI 10.1109/ICSE-NIER.2017.20
   Leite L., 2020, ARXIV PREPRINT ARXIV
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Lewis GA, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2016.38
   Luz WP, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.083
   Lwakatare LE, 2019, INFORM SOFTWARE TECH, V114, P217, DOI 10.1016/j.infsof.2019.06.010
   Lwakatare LE, 2016, P ANN HICSS, P5437, DOI 10.1109/HICSS.2016.671
   Mäkinen S, 2016, INFORM SOFTWARE TECH, V80, P175, DOI 10.1016/j.infsof.2016.09.001
   Mårtensson T, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P169, DOI 10.1109/ICSA.2017.11
   Newman S., 2020, USE MICROSERVICES AN
   Nybom K., 2016, INT C AG SOFTW DEV, P131, DOI [10.1007/978-3-319-33515-5_11, DOI 10.1007/978-3-319-33515-5_11]
   Oliveira Nigini, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274399
   Openja M, 2020, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSME46990.2020.00020
   Prechelt L, 2016, PROC INT CONF SOFTW, P1017, DOI 10.1145/2884781.2884789
   Rahman AAU, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P70, DOI [10.1109/CSED.2016.021, 10.1145/2896941.2896946]
   Ralph P., 2020, ARXIV PREPRINT ARXIV
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schauenberg D., 2014, DEV DEPLOYMENT COLLA
   Schermann G., 2016, PEERJ PREPRINTS
   Schmidt M., 2016, DEVOPS CONTINUOUS DE
   Shahin M., 2017, P 21 INT C EV ASS SO, P384
   Shahin M., 2021, INTERVIEW QUESTIONS, DOI DOI 10.5281/ZENODO.4935072
   Shahin M, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P175, DOI 10.1145/3379177.3388891
   Shahin M, 2017, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2017.18
   Shahin M, 2019, EMPIR SOFTW ENG, V24, P1061, DOI 10.1007/s10664-018-9651-4
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Skelton M., 2019, Team Topologies: Organizing Business and Technology Teams for Fast Flow
   Soliman M, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P128, DOI 10.1109/WICSA.2016.13
   Stol KJ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2533685
   Stranghoner R., SELF CONTAINED SYSTE
   STRUTZEL E, 1968, NURS RES, V17, P364
   Taibi Davide., 2017, Em Proceedings of the XP2017 Scientific Workshops, P1, DOI DOI 10.1145/3120459.3120483
   Tómasdóttir KF, 2017, IEEE INT CONF AUTOM, P578, DOI 10.1109/ASE.2017.8115668
   Vadlamani SL, 2020, PROC IEEE INT CONF S, P312, DOI 10.1109/ICSME46990.2020.00038
   Waseem M, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110798
   Wettinger J, 2016, FUTURE GENER COMP SY, V56, P317, DOI 10.1016/j.future.2015.07.017
   Wiggins A., 12 FACTOR APP METHOD
   Woods E, 2016, IEEE SOFTWARE, V33, P20, DOI 10.1109/MS.2016.86
   XebiaLabs, EXPL MICR 14 QUEST A
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
   Zdun U, 2020, IEEE SOFTWARE, V37, P87, DOI 10.1109/MS.2019.2947982
   Zhu LM, 2016, IEEE SOFTWARE, V33, P32, DOI 10.1109/MS.2016.81
NR 73
TC 3
Z9 3
U1 6
U2 32
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2023
VL 35
IS 5
SI SI
AR e2379
DI 10.1002/smr.2379
EA SEP 2021
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E6KV9
UT WOS:000702004900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wei, Y
   Sun, XB
   Bo, LL
   Cao, SC
   Xia, X
   Li, B
AF Wei, Ying
   Sun, Xiaobing
   Bo, Lili
   Cao, Sicong
   Xia, Xin
   Li, Bin
TI A comprehensive study on security bug characteristics
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE bug characteristics; empirical study; security bugs
ID AGREEMENT
AB Security bugs can catastrophically impact our increasingly digital lives. Designing effective tools for detecting and fixing software security bugs requires a deep understanding of security bug characteristics. In this paper, we conducted a comprehensive study on security bugs and proposed the classification criteria for security bug category, that is, root cause, consequence, and location. In addition, we selected 1076 bug reports from five projects (i.e., Apache Tomcat, Apache HTTP Server, Mozilla Firefox, Linux Kernel, and Eclipse) in the NVD for investigation. Finally, we investigated the correlation between the classification results and obtained some findings: (1) memory operation is the most common security bug; (2) the primary root causes of security bugs are CON (Configuration Error), INP (Input Validation Error), and MEM (Memory Error); (3) the severity of more than 40% of security bugs is high; (4) security bugs caused by INP mainly occur on web; and (5) security bugs caused by LOG (Logic Resource Error) usually lead to DoS (Denial of Service). We discussed these findings through data analysis, which can also help developers better understand the characteristics of security bugs.
C1 [Wei, Ying; Sun, Xiaobing; Bo, Lili; Cao, Sicong; Li, Bin] Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.
   [Sun, Xiaobing; Bo, Lili] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Bo, Lili] Nanjing Univ Aeronaut & Astronaut, Key Lab Safety Crit Software, Minist Ind & Informat Technol, Nanjing, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
C3 Yangzhou University; Nanjing University; Nanjing University of
   Aeronautics & Astronautics; Monash University
RP Sun, XB; Li, B (corresponding author), Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.
EM xbsun@yzu.edu.cn; lb@yzu.edu.cn
RI Xia, Xin/AAD-6217-2022; Wei, Ying/HZK-9397-2023
OI Xia, Xin/0000-0002-6302-3256; Cao, Sicong/0000-0003-3688-4437
FU Jiangsu "333" Project; Key Laboratory of Safety-Critical Software
   Ministry of Industry and Information Technology [NJ2020022]; National
   Natural Science Foundation of China [61872312, 61972335, 62002309];
   Natural Science Research Project of Universities in Jiangsu Province
   [20KJB520024]; Open Funds of State Key Laboratory for Novel Software
   Technology of Nanjing University [KFKT2020B15, KFKT2020B16]; Six Talent
   Peaks Project in Jiangsu Province [RJFW-053]; Yangzhou city-Yangzhou
   University Science and Technology Cooperation Fund Project [YZU201902];
   Yangzhou University Top-level Talents Support Program [2019]
FX Jiangsu "333" Project; Key Laboratory of Safety-Critical Software
   Ministry of Industry and Information Technology, Grant/Award Number: No.
   NJ2020022; National Natural Science Foundation of China, Grant/Award
   Numbers: No. 61872312, No. 61972335, No. 62002309; Natural Science
   Research Project of Universities in Jiangsu Province, Grant/Award
   Number: No. 20KJB520024; Open Funds of State Key Laboratory for Novel
   Software Technology of Nanjing University, Grant/Award Numbers: No.
   KFKT2020B15, No. KFKT2020B16; Six Talent Peaks Project in Jiangsu
   Province, Grant/Award Number: No. RJFW-053; Yangzhou city-Yangzhou
   University Science and Technology Cooperation Fund Project, Grant/Award
   Number: No. YZU201902; Yangzhou University Top-level Talents Support
   Program, Grant/Award Number: 2019
CR Alhazmi O.H., 2006, IASTED INT C COMMUNI, P138
   Ayanam V. S., 2009, THESIS SO POLYTECHNI
   Cantor AB, 1996, PSYCHOL METHODS, V1, P150, DOI 10.1037/1082-989X.1.2.150
   Castelluccio M, 2019, EMPIR SOFTW ENG, V24, P3008, DOI 10.1007/s10664-018-9665-y
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li XD, 2017, P REL MAINT S
   Lowis Lutz, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P439, DOI 10.1109/COMPSAC.2009.173
   Piantadosi V, 2019, IEEE INT CONF SOFTW, P68, DOI 10.1109/ICST.2019.00017
   Piessens Frank, 2002, P 13 INT S SOFTW REL, P47
   Sharma C., 2014, ICAETR 2014, DOI 10.1109/ICAETR.2014.7012815
   Shinde P. S., 2016, P WORLD C FUT TRENDS, P1
   Sun XB, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-017-9459-5
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Warrens M., 2010, Statistical Methodology, V7, P673
   Weber S., 2005, SIGSOFT SOFTW ENG NO, V30, P1, DOI DOI 10.1145/1082983.1083209
   Weiler N, 2002, WET ICE 2002: ELEVENTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P109, DOI 10.1109/ENABL.2002.1029997
   Xu, 2020, SOURCE CODE BINARY L, P1397
   XU J., 2005, P 12 ACM C COMPUTER, P223, DOI DOI 10.1145/1102120.1102151
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
NR 21
TC 12
Z9 12
U1 1
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2021
VL 33
IS 10
AR e2376
DI 10.1002/smr.2376
EA SEP 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA5EF
UT WOS:000692025300001
DA 2024-07-18
ER

PT J
AU Gharib, M
   da Silva, LD
   Ceccarelli, A
AF Gharib, Mohamad
   da Silva, Leandro Dias
   Ceccarelli, Andrea
TI A model to discipline autonomy in cyber-physical systems-of-systems and
   its application
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE autonomy; conceptual modeling; controllability; cyber&#8208; physical
   systems&#8208; of&#8208; systems; simulation
ID ADJUSTABLE AUTONOMY; DESIGN SCIENCE; VALIDATION; FRAMEWORK
AB A cyber-physical system-of-systems (CPSoS) can be defined as a system-of-systems (SoS), composed of several operable and autonomous constituent systems (CSs) that are themselves cyber-physical systems (CPSs). A main challenge in integrating CPSoS to function as a single integrated system is the autonomy of its components, which may result in undesirable, unsecure, or even unsafe situations. In this paper, we advocate that in order to facilitate the integration of CPSs within the overall context of their CPSoS, we may need to adjust their level of autonomy in a way that enables them to perform their activities and avoid undesirable, unsecure , and unsafe situations. Reducing such situations surely contributes to the dependability of the CPSoS. In particular, we propose a novel model-based approach for modeling and analyzing the autonomy levels of CPSs based on their awareness concerning their operational environment as well as their capability to react in a timely, secure, and safe manner while performing their activities. The model is further described in a UML profile and applied to represent activities for autonomous driving scenarios. Using a driving simulator, we implement such models on a target vehicle, and we show the resulting safety improvement, especially in terms of reduced collisions.
C1 [Gharib, Mohamad; Ceccarelli, Andrea] Univ Florence, Dept Math & Informat, Florence, Italy.
   [da Silva, Leandro Dias] Univ Fed Alagoas, Comp Inst, Maceio, Alagoas, Brazil.
C3 University of Florence; Universidade Federal de Alagoas
RP Gharib, M (corresponding author), Univ Florence, Dept Math & Informat, Florence, Italy.
EM mohamad.gharib@unifi.it
RI Gharib, Mohamad/AAA-3573-2020; Ceccarelli, Andrea/HQZ-4187-2023
OI Gharib, Mohamad/0000-0003-2286-2819; Ceccarelli,
   Andrea/0000-0002-2291-2428; Dias da Silva, Leandro/0000-0003-4352-1466
FU H2020 Marie Sklodowska-Curie Actions [823788]; ADVANCE
   [H2020-MSCA-RISE-2018]; Marie Curie Actions (MSCA) [823788] Funding
   Source: Marie Curie Actions (MSCA)
FX H2020 Marie Sklodowska-Curie Actions, Grant/Award Number: 823788;
   ADVANCE, Grant/Award Number: H2020-MSCA-RISE-2018
CR Amanatidis T, 2018, ACMIEEE INT CONF HUM, P51, DOI 10.1145/3173386.3177054
   [Anonymous], 2010, 12 WORLD C TRANSP RE, DOI DOI 10.1016/J.AAP.2011.04.003
   [Anonymous], 1992, Proceedings of the 1992 ACM Conference on Computer Supported Cooperative Work (CSCW'92), DOI DOI 10.1145/143457.143468
   [Anonymous], 2014, Object constraint language (ocl)
   [Anonymous], 2008, INTELLIGENTE SYSTEME
   Basich Connor., 2020, P INT JOINT C AUT AG, P123
   Beer JM, 2014, J HUM-ROBOT INTERACT, V3, P74, DOI 10.5898/JHRI.3.2.Beer
   Birk W., 2009, WORLD C EXH INT TRAN
   Biro M, 2018, IEEE SOFTWARE, V35, P24, DOI 10.1109/MS.2017.4541050
   Bondavalli A., 2016, CYBER PHYS SYSTEMS S, V10099, DOI [10.1007/978-3-319-47590-5, DOI 10.1007/978-3-319-47590-5]
   BROOKS RA, 1986, IEEE T ROBOTIC AUTOM, V2, P14, DOI 10.1109/JRA.1986.1087032
   Castelfranchi C., 1995, Intelligent Agents. ECAI-94 Workshop on Agent Theories, Architectures, and Languages Proceedings, P56
   Castelfranchi C, 2000, FRONT ARTIF INTEL AP, V54, P353
   Ceccarelli Andrea, 2016, Cyber-Physical Systems of Systems. Foundations - a Conceptual Model and Some Derivations: the AMADEOS Legacy. LNCS 10099, P1, DOI 10.1007/978-3-319-47590-5_1
   Chen J, 2018, J SYST ENG ELECTRON, V29, P286, DOI 10.21629/JSEE.2018.02.09
   Conner D, 2018, SPRINGER TRACTS ADV, V121, DOI [10.1007/978-3-319-74666-1_12, DOI 10.1007/978-3-319-74666-1_12]
   Crandall JW, 2002, IEEE SYS MAN CYBERN, P1624
   Danks D, 2017, IEEE INTELL SYST, V32, P88, DOI 10.1109/MIS.2017.1
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   Edwards KW, 1996, THESIS
   Falcone R, 2000, LECT NOTES ARTIF INT, V1792, P273
   Fernandez-Cara E, B SOC ESPANOLA MATEM, V26, P79
   FRENCH JRP, 1956, PSYCHOL REV, V63, P181, DOI 10.1037/h0046123
   Gharib M, 2018, LECT NOTES COMPUT SC, V10707, P194, DOI 10.1007/978-3-319-99843-5_18
   Gharib M, 2018, LAT-AM SYMP DEP COMP, P135, DOI 10.1109/LADC.2018.00024
   Gharib M, 2018, I C DEPENDABLE SYST, P271, DOI 10.1109/DSN-W.2018.00074
   Gharib M, 2017, 2017 12TH SYSTEM OF SYSTEMS ENGINEERING CONFERENCE (SOSE)
   Golob TF, 2003, J TRANSP ENG, V129, P342, DOI 10.1061/(ASCE)0733-947X(2003)129:4(342)
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hegeman G, 2007, TRANSP RES RECORD, P45, DOI 10.3141/2018-07
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hoffmann H, 2020, P IEEE, V108, P1027, DOI 10.1109/JPROC.2020.2977054
   ISO, 2011, ROAD VEH FUNCT SAF, V26262
   Jamshidi M, 2008, IEEE AERO EL SYS MAG, V23, P4, DOI 10.1109/MAES.2008.4523909
   Lesser VR, 1999, IEEE T KNOWL DATA EN, V11, P133, DOI 10.1109/69.755622
   Levitt S., 2018, Treatment of cerebral palsy and motor delay, P1, DOI [DOI 10.1002/9781119373902, 10.1002/9781119373902]
   Lin L, 2015, PROCEEDINGS OF THE 2015 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS (AAMAS'15), P1615
   Liu GQ, 2018, CHIN AUTOM CONGR, P2253, DOI 10.1109/CAC.2018.8623449
   Luck M., 1995, ICMAS-95 Proceedings. First International Conference on Multi-Agent Systems, P254
   Machin M, 2018, IEEE T SYST MAN CY-S, V48, P702, DOI 10.1109/TSMC.2016.2633291
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Martin C.E., 1996, Proceedings of Fourth International Conference on Control, Automation, Robotics, and Vision, P1318
   Mashkoor A, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2239
   Mashkoor A, 2017, REQUIR ENG, V22, P433, DOI 10.1007/s00766-016-0246-6
   Mashkoor A, 2017, SOFTW SYST MODEL, V16, P789, DOI 10.1007/s10270-016-0514-4
   Horcas JM, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1926
   Mirnig AG, 2017, ACMIEEE INT CONF HUM, P207, DOI 10.1145/3029798.3038334
   Mostafa SA, 2018, INT J MED INFORM, V112, P173, DOI 10.1016/j.ijmedinf.2018.02.001
   Mostafa SA, 2017, INT J INTELL COMPUT, V10, P430, DOI 10.1108/IJICC-02-2017-0013
   Mostafa S, 2018, ARCHIT ENG DES MANAG, V14, P139, DOI [10.1080/17452007.2017.1301367, 10.1007/s10462-017-9560-8]
   Nahavandi S, 2017, IEEE SYST MAN CYBERN, V3, P10, DOI 10.1109/MSMC.2016.2623867
   Nam C, 2020, IEEE T HUM-MACH SYST, V50, P194, DOI 10.1109/THMS.2019.2896845
   Odell J. J., 2003, Agent-Oriented Software Engineering III. Third International Workshop, AOSE 2002. Revised Papers and Invited Contributions (Lecture Notes in Computer Science Vol.2585), P16
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Porter ME, 2014, HARVARD BUS REV, V92, P64
   Rogers S., 1999, Proceedings of the Third International Conference on Autonomous Agents, P198, DOI 10.1145/301136.301193
   Salado A, 2015, 2015 10th System of Systems Engineering Conference (SoSE), P352, DOI 10.1109/SYSOSE.2015.7151936
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   Tan N, 2016, AUTOMAT CONSTR, V69, P68, DOI 10.1016/j.autcon.2016.06.001
   Trende Alexander., 2019, P 11 INT C AUT US IN, P287
   Venable John, 2012, Design Science Research in Information Systems. Advances in Theory and Practice. Proceedings 7th International Conference, DESRIST 2012, P423, DOI 10.1007/978-3-642-29863-9_31
   Wampler J, 2017, OCEANS 2017, P1, DOI DOI 10.1109/OCEANSE.2017.8084787
   Watson DP, 2005, J HOPKINS APL TECH D, V26, P368
   Whiffen Bruce., 2004, National Highway Visibility Conference, P1
   Wieringa Roel., 2009, Proceedings of the 4th international conference on design science research in information systems and technology, P8
   Zhang TT, 2019, CHIN CONT DECIS CONF, P2330, DOI 10.1109/CCDC.2019.8833423
   Zhang XT, 2019, INT CONF MEASURE, P66, DOI 10.1109/ICMIC48233.2019.9068562
   Zhang X, 2015, INT CONF SOFTW ENG, P313, DOI 10.1109/ICSESS.2015.7339063
NR 68
TC 3
Z9 3
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2021
VL 33
IS 9
SI SI
AR e2328
DI 10.1002/smr.2328
EA NOV 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UP0XV
UT WOS:000591350600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pandey, P
   Litoriya, R
AF Pandey, Prateek
   Litoriya, Ratnesh
TI Software process selection system based on multicriteria decision making
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Agile family; FAHP; MCDM; process selection system
ID FUZZY AHP; CRITERIA; ISSUES; MODEL
AB Whatever be the nature of underlying software, the impact of the software development process that was used to create it would remain vital. The objective of this paper is to provide a process selection framework for the software development firm's engineers and managers, looking to identify the proper way to build software to run on a mobile, web, or desktop. The motivation behind this work comes from the fact that the applications that fall in one of the above three categories can be significantly different in terms of scale, UI, and memory requirements, time to market, and other characteristics. Software development that needs to be completed in a challenging timeframe has to resort to principles and values as declared in Agile Manifesto. The availability of various agile methodologies has made the project managers often stuck when selecting the most suitable one. The proposed agile process identification system addresses this dilemma of engineering fraternity using a fuzzy variant of a popular multiple-criteria decision-making (MCDM) technique called the analytic hierarchy process (AHP). The proposed system is validated through a primary dataset generated as a result of the development of 20 software projects. The results are encouraging enough with a probability of true identification close to 88%.
C1 [Pandey, Prateek; Litoriya, Ratnesh] JAYPEE Univ Engn & Technol, Dept Comp Sci & Engn, Raghogarh, India.
RP Litoriya, R (corresponding author), JAYPEE Univ Engn & Technol, Dept Comp Sci & Engn, Raghogarh, India.
EM litoriya.ratnesh@gmail.com
RI Pandey, Prateek/JHU-1353-2023; Litoriya, Dr. Ratnesh/ABD-1225-2021;
   Pandey, Prateek/AGQ-1450-2022
OI Litoriya, Ratnesh/0000-0002-7285-422X; Pandey,
   Prateek/0000-0001-5384-6606
CR Ahmad F, 2012, PROCEEDINGS OF KNOWLEDGE MANAGEMENT INTERNATIONAL CONFERENCE (KMICE) 2012, P286
   Al-Subhi Al-Harbi K. M., 2001, International Journal of Project Management, V19, P19, DOI 10.1016/S0263-7863(99)00038-1
   Al-Zewairi M., 2017, Journal of Computer and Communications, V5, P74, DOI [10.4236/jcc.2017.55007, DOI 10.4236/JCC.2017.55007]
   Altarawneh H, 2008, SERA 2008: 6TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P125, DOI 10.1109/SERA.2008.14
   [Anonymous], 2015, CHAOS REP
   Asuquo DE., 2016, Int J Comput Appl, V141, P19
   Ayag Z, 2007, J INTELL FUZZY SYST, V18, P345
   Basha E, 2007, 2007 INTERNATIONAL CONFERENCE ON INFORMATION AND COMMUNICATION TECHNOLOGIES AND DEVELOPMENT (ICTD), P10, DOI 10.1109/ICTD.2007.4937387
   Beck K., 2001, The Agile Alliance, 2009December, P2006
   Berman AF, 2018, P I MECH ENG L-J MAT, V232, P204, DOI 10.1177/1464420715620919
   Bortolini RF, 2021, MANAGE DECIS, V59, P1765, DOI 10.1108/MD-07-2017-0663
   Brans J. P., MULTIPLE CRITERIA DE, P163
   Büyüközkan G, 2004, INT J GEN SYST, V33, P259, DOI 10.1080/03081070310001633581
   Büyüközkan G, 2014, J INTELL FUZZY SYST, V27, P3181, DOI 10.3233/IFS-141275
   Dayanandan U., 2018, INT J INTELL ENG SYS, V11, P88
   Deng HP, 1999, INT J APPROX REASON, V21, P215, DOI 10.1016/S0888-613X(99)00025-0
   Diebold P, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2167
   Dozic S, 2018, J AIR TRANSP MANAG, V68, P165, DOI 10.1016/j.jairtraman.2017.08.003
   Fojtik R, 2011, PROCEDIA COMPUT SCI, V3, DOI 10.1016/j.procs.2011.01.032
   Güngör Z, 2009, APPL SOFT COMPUT, V9, P641, DOI 10.1016/j.asoc.2008.09.003
   Hota H.S., 2012, INT J COMPUT APPL, V57, P45
   Ibrahim A., 2019, Journal of Physics: Conference Series, V1338, DOI 10.1088/1742-6596/1338/1/012054
   Jakiel P, 2015, EXPERT SYST APPL, V42, P4054, DOI 10.1016/j.eswa.2014.12.039
   Khan AA, 2019, APPL SOFT COMPUT, V83, DOI 10.1016/j.asoc.2019.105648
   Kubler S, 2016, EXPERT SYST APPL, V65, P398, DOI 10.1016/j.eswa.2016.08.064
   Larimian T, 2013, SUSTAIN CITIES SOC, V7, P25, DOI 10.1016/j.scs.2012.10.001
   Litoriya R., 2013, J SOFTWARE ENG APPL, V6, P297, DOI 10.4236/jsea.2013.66037
   Litoriya R, 2012, CSI 6 INT C SOFTW EN, DOI [10.1109/CONSEG.2012.6349494, DOI 10.1109/CONSEG.2012.6349494]
   Mardani A, 2015, ECON RES-EKON ISTRAZ, V28, P516, DOI 10.1080/1331677X.2015.1075139
   Mashal Alqudah, 2018, International Journal on Advanced Science, Engineering and Information Technology, V8, P2315, DOI DOI 10.18517/IJASEIT.8.6.6566
   Massachusetts Technology Corporation, 2013, MOB WEB APPL DESK AP
   Naghadehi MZ, 2009, EXPERT SYST APPL, V36, P8218, DOI 10.1016/j.eswa.2008.10.006
   Olsen D, 2015, LEAN PRODUCT PLAYBOO, P199
   Pandey M, 2018, INGENIERIE SYSTEMES, V23, P19
   Pandey M, 2019, PROGRAM COMPUT SOFT+, V45, P268, DOI 10.1134/S0361768819050050
   Pandey M, 2019, WIRELESS PERS COMMUN, V108, P683, DOI 10.1007/s11277-019-06424-9
   Pandey M, 2019, WIRELESS PERS COMMUN, V107, P1687, DOI 10.1007/s11277-019-06351-9
   Pandey M, 2018, INT J SOFTW ENG KNOW, V28, P937, DOI 10.1142/S0218194018400119
   Pandey P, 2020, INT J FUZZY SYST, V22, P1212, DOI 10.1007/s40815-020-00815-y
   Pandey P, 2020, J INTELL FUZZY SYST, V38, P3359, DOI 10.3233/JIFS-190508
   Poth A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.1986
   Pressman R. S., 2010, Software Engineering: A Practitioner's Approach
   Reifer DJ, 2000, IEEE SOFTWARE, V17, P57, DOI 10.1109/52.895169
   Rossi M, 1996, INFORM SYST, V21, P209, DOI 10.1016/0306-4379(96)00012-9
   Russo RDSM, 2015, PROCEDIA COMPUT SCI, V55, P1123, DOI 10.1016/j.procs.2015.07.081
   Saeeda H, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2247
   Sahroni T.R., 2016, 2016 11 INT C KNOWL, P1, DOI [10.1109/kicss.2016.7951412, DOI 10.1109/KICSS.2016.7951412]
   Samanlioglu F, 2018, J INTELL FUZZY SYST, P1
   Sehra S K., 2017, IJETT, V45, P4
   Shaverdi M, 2014, PROCEDIA COMPUT SCI, V31, P995, DOI 10.1016/j.procs.2014.05.352
   Tadic D, 2013, J INTELL FUZZY SYST, V25, P547, DOI 10.3233/IFS-120659
   The Standish Group International, 2018, PROJ RES BENCHM REP
   Tolfo C, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1945
   Vahidnia MH, 2009, J ENVIRON MANAGE, V90, P3048, DOI 10.1016/j.jenvman.2009.04.010
   Wang YM, 2011, INT J APPROX REASON, V52, P541, DOI 10.1016/j.ijar.2010.12.004
   Waris M, 2019, MATH PROBL ENG, V2019, DOI 10.1155/2019/6391431
   Whaiduzzaman M, 2014, SCI WORLD J, DOI 10.1155/2014/459375
   Wu P, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING SOSE 2009, P1
   Zhou JL, 2015, J INTELL FUZZY SYST, V29, P1381, DOI 10.3233/IFS-141512
NR 59
TC 7
Z9 7
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2021
VL 33
IS 2
AR e2305
DI 10.1002/smr.2305
EA AUG 2020
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YZ7ZN
UT WOS:000555065100001
DA 2024-07-18
ER

PT J
AU Muñoz, M
   Peña, A
   Mejía, J
   Gasca-Hurtado, GP
   Gómez-Alvarez, MC
   Laporte, CY
AF Munoz, Mirna
   Pena, Adriana
   Mejia, Jezreel
   Piedad Gasca-Hurtado, Gloria
   Clara Gomez-Alvarez, Maria
   Laporte, Claude Y.
TI Analysis of 13 implementations of the software engineering management
   and engineering basic profile guide of ISO/IEC 29110 in very small
   entities using different life cycles
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE basic profile; ISO; IEC 29110; lifecycle development; software process
   improvement; teams; VSEs
ID STANDARDS
AB We are living in an age of growing demand for software products. This growing demand creates opportunities for very small entities (VSEs) to not only survive but also flourish. In this context, VSEs need to produce high-quality products to meet market needs. However, in their quest to produce high-quality software, VSEs need to overcome the challenge of implementing international standards, which they find difficult to do because of lack of knowledge and practical experience. This paper provides an analysis performed to 13 teams of VSEs, using different life cycles, which achieved the implementation of the ISO/IEC 29110, to analyze the effort each team invests to implement the best practices provided by the standard. Besides, the paper provides an analysis of the difficulties, and the benefits of using the six-step method are included. This analysis is of interest because software engineering knowledge developed by researchers should be transferred to the industry to reduce the gap between them. The results highlight, on the one hand, the practices representing more effort for teams by life cycle. On the other hand, the results highlight the six-step method that allowed the 13 teams to achieve a high level of coverage of the ISO/IEC 29110 international standard.
C1 [Munoz, Mirna; Mejia, Jezreel] Ctr Invest Matemat, Unidad Zacatecas, Zacatecas, Zacatecas, Mexico.
   [Pena, Adriana] Univ Guadalajara, Dept Ciencias Comp, CUCEI, Guadalajara, Jalisco, Mexico.
   [Piedad Gasca-Hurtado, Gloria; Clara Gomez-Alvarez, Maria] Univ Medellin, Fac Ingn, Ingn Software, Antioquia, Colombia.
   [Laporte, Claude Y.] Ecole Technol Super, Dept Software & IT Engn, Montreal, PQ, Canada.
C3 Universidad de Guadalajara; Universidad de Medellin; University of
   Quebec; Ecole de Technologie Superieure - Canada
RP Mejia, J (corresponding author), CIMAT Ctr Invest Matemat, Unidad Zacatecas, Parque Quantum, Zacatecas 98160, Zacatecas, Mexico.
RI Muñoz, Mirna/I-9193-2017; Peña Pérez Negrón, Adriana/AFK-8243-2022;
   Gasca-Hurtado, Gloria Piedad/A-6878-2015; Gomez Alvarez, Maria
   Clara/B-4350-2015
OI Muñoz, Mirna/0000-0001-8537-2695; Peña Pérez Negrón,
   Adriana/0000-0001-6823-2367; Laporte, Claude/0000-0002-3453-740X;
   Gasca-Hurtado, Gloria Piedad/0000-0003-0157-1959; Gomez Alvarez, Maria
   Clara/0000-0002-4355-2978
CR Ahmed Faheem, 2013, International Journal of Information Processing and Management, V4, P171, DOI 10.4156/ijipm.vol4.issue3.17
   Association for project management, 2020, TYP CYCL
   Clarke P, 2015, COMMUNICATIONS COMPU, V543
   Davila A, 2015, 29110 ISOIEC, P1, DOI [10.1109/CLEI.2015.7360042, DOI 10.1109/CLEI.2015.7360042]
   ISO/IEC, 2020, 2911071 ISOIEC TR
   ISO/IEC, 2011, 291105122011 ISOIEC
   ISO/IEC, 2020, 2911054 ISOIEC TR
   ISO/IEC, 2020, 2911061 ISOIEC
   ISO/IEC/IEEE, 2017, ISO/IEC/IEEE 12207:2017
   Laporte Claude Y., 2017, 2017 IEEE Canada International Humanitarian Technology Conference (IHTC), P94, DOI 10.1109/IHTC.2017.8058208
   Laporte C Y., 2017, Cross Talk, P23
   Laporte CY, 2008, COMPUTER, V41, P98, DOI 10.1109/MC.2008.86
   Laporte CY, 2018, IEEE SOFTWARE, V35, P99, DOI 10.1109/MS.2017.4541041
   Laporte CY, 2016, COMPUTER, V49, P84, DOI 10.1109/MC.2016.242
   Laporte CY, 2020, COMPUTER IEEE COMPUT, V53, P2
   Larrucea X, 2016, J SOFTW-EVOL PROC, V28, P969, DOI 10.1002/smr.1795
   Larrucea X, 2016, IEEE SOFTWARE, V33, P85, DOI 10.1109/MS.2016.42
   Munoz M, 2019, COMMUNICATIONS COMPU, V1060
   Muñoz M, 2019, COMPUT STAND INTER, V66, DOI 10.1016/j.csi.2019.03.008
   Novikov DA, 2016, NEW FRONTIERS INFORM, V98
   NYCE, 2020, 29110412011 NYCE ISO
   NYCE, 2018, CERT NMX I 059 MOPR
   Pries-Heje J, 2010, SPI MANIFESTO V A 1
   Project Management Institute, 2017, GUID PROJ MAN BOD KN, P44
   Rangel N, 2017, COMM COM INF SC, V748, P675, DOI 10.1007/978-3-319-64218-5_56
   Rodríguez-Dapena P, 2017, IEEE METROL AEROSPAC, P11, DOI 10.1109/MetroAeroSpace.2017.7999557
   Sanchez-Gordon ML, 2017, COMPUT STAND INTER, V54, P162, DOI 10.1016/j.csi.2016.11.009
   Sanchez-Gordon ML, 2015, COMM COM INF SC, V526, P114, DOI 10.1007/978-3-319-19860-6_10
   Software Engineering Institute, 2010, CMUSEI2010TR033
   Watts H, 2010, CMUSEI2010TR020
   Watts H, 2000, CMUSEI2000TR023
NR 31
TC 3
Z9 3
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2020
VL 32
IS 11
SI SI
AR e2300
DI 10.1002/smr.2300
EA JUL 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OV2ST
UT WOS:000552506300001
DA 2024-07-18
ER

PT J
AU Sablis, A
   Smite, D
   Moe, N
AF Sablis, Aivars
   Smite, Darja
   Moe, Nils
TI Team-external coordination in large-scale software development projects
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE case study; empirical; expertise coordination; large-scale software
   development; work coordination
ID KNOWLEDGE MANAGEMENT; PERFORMANCE; INFORMATION; SPEED; COMMUNICATION;
   PRODUCTIVITY; FAMILIARITY; EXPERTISE; NETWORKS; PROGRAMS
AB High-quality work is said to depend on team abilities. However, teams working in large-scale projects often do not have all expertise to complete their tasks, which are also highly interdependent. Therefore, teams need to rely on coordination with other teams, experts, and supporting roles. In this paper, we explore teams' coordination needs and evaluate the impact of the satisfaction of these needs on team performance. We conducted an embedded multicase study with nine teams in two projects in two companies. We collected qualitative data through nine focus groups and 19 interviews and quantitative data using a questionnaire with 49 members from the studied teams. Our results suggest that project-, team-, and task-related characteristics impact teams' coordination needs. Even in the same project, teams may have different expertise and work coordination needs. We found that the satisfaction of these needs seems to influence teams' performance, although our results are inconclusive and yield a closer look in future research. On the basis of our findings, we recommend the companies to cultivate a networking culture and support teams external coordination with other teams and experts, paying attention to their needs, for example, driven by a lack of experience or increased work complexity.
C1 [Sablis, Aivars; Smite, Darja; Moe, Nils] Blekinge Inst Technol, Dept Software Engn, Blekinge Tekniska Hgsk, S-37179 Karlskrona, Sweden.
   [Moe, Nils] SINTEF, Digital, Strindvegen 4, N-7034 Trondheim, Norway.
C3 Blekinge Institute Technology; SINTEF
RP Sablis, A (corresponding author), Blekinge Inst Technol, Dept Software Engn, Blekinge Tekniska Hgsk, S-37179 Karlskrona, Sweden.
EM aivars.sablis@bth.se
RI Moe, Nils Brede/AAD-8183-2021
OI Sablis, Aivars/0000-0003-2972-139X
FU Research council of Norway [267704]; Swedish Knowledge Foundation
   [2009/0249, 2016/0191]
FX Research council of Norway, Grant/Award Number: 267704; Swedish
   Knowledge Foundation, Grant/Award Numbers: KK-Hog grant 2009/0249,
   KK-Hog grant 2016/0191
CR ACKERMAN MS, 1998, COMPUTER SUPPORTED C, P39
   Akgün AE, 2005, INFORM MANAGE-AMSTER, V42, P1105, DOI 10.1016/j.im.2005.01.001
   Amrit C., 2008, IMPROVING COORDINATI
   Andres H.P., 2002, Journal of Management Information Systems, V18, P41, DOI DOI 10.1080/07421222.2002.11045695
   Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   Bauer T.N., 2011, ORG SOCIALIZATION EF
   Begel A, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P1, DOI 10.1109/CHASE.2009.5071401
   Bjarnason E, 2011, INT REQUIR ENG CONF, P37, DOI 10.1109/RE.2011.6051639
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   Britto R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1921
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Crowston K, 1997, ORGAN SCI, V8, P157, DOI 10.1287/orsc.8.2.157
   Crowston K, 2006, HUMAN COMPUTER INTER, P134
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   DeCuir-Gunby JT, 2011, FIELD METHOD, V23, P136, DOI 10.1177/1525822X10388468
   Deshpande S, 2011, LECT NOTES BUS INF P, V91, P153
   DeVellis R. F., 2016, Scale development: Theory and applications, DOI DOI 10.1037/CCP0000482
   Dietrich P, 2013, PROJ MANAG J, V44, P6, DOI 10.1002/pmj.21377
   Ding T, 2015, THEOR APPL CLIMATOL, V122, P651, DOI 10.1007/s00704-014-1322-9
   Dingsoyr T, 2005, COMMUN ACM, V48, P96, DOI 10.1145/1101779.1101783
   Dingsoyr T, 2002, INT J SOFTW ENG KNOW, V12, P391, DOI 10.1142/S0218194002000962
   Dingsoyr T, 2003, PROC INT CONF SOFTW, P84, DOI 10.1109/ICSE.2003.1201190
   Dingsoyr T., 2014, WHAT IS LARGE LARGE, P273
   Dingsoyr T, 2018, PROJ MANAG J, V49, P64, DOI 10.1177/8756972818798980
   Dingsoyr T, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P91, DOI 10.1145/3195836.3195850
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Dingsoyr T, 2017, PROCEDIA COMPUT SCI, V121, P123, DOI 10.1016/j.procs.2017.11.017
   Earl M, 2001, J MANAGE INFORM SYST, V18, P215
   Espinosa JA, 2007, ORGAN SCI, V18, P613, DOI 10.1287/orsc.1070.0297
   Espinosa JA, 2007, J MANAGE INFORM SYST, V24, P135, DOI 10.2753/MIS0742-1222240104
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Fitzgerald B, 2006, OP FLEXIBLE DISTRIBU
   FRUCHTERMAN TMJ, 1991, SOFTWARE PRACT EXPER, V21, P1129, DOI 10.1002/spe.4380211102
   Gregor S, 2006, MIS QUART, V30, P611
   Guinan PJ, 1998, INFORM SYST RES, V9, P101, DOI 10.1287/isre.9.2.101
   Hannay J. E., 2010, PERCEIVED PRODUCTIVI, P15
   Heath S, 2009, QUAL RES, V9, P645, DOI 10.1177/1468794109343631
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Huckman RS, 2009, MANAGE SCI, V55, P85, DOI 10.1287/mnsc.1080.0921
   Johnson M, 2010, J WORKPLACE LEARN, V22, P180, DOI 10.1108/13665621011028620
   Kankanhailli A., 2005, MIS QUART, V29, P113, DOI DOI 10.2307/25148670
   Kline R.B., 2016, Principles and Practice of Structural Equation Modeling, VFourth
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Lewis K, 2003, J APPL PSYCHOL, V88, P587, DOI 10.1037/0021-9010.88.4.587
   Lunenburg F.C., 2012, INT J SCHOLARLY ACAD, V14, P1
   Malone ThomasW., 1990, CSCW 90, P357, DOI DOI 10.1145/99332.99367
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Manteli C, 2014, INFORM SOFTWARE TECH, V56, P1309, DOI 10.1016/j.infsof.2014.04.012
   Marsden P.V., 2011, SAGE HDB SOCIAL NETW, P370, DOI [10.4135/9781446294413, DOI 10.4135/9781446294413, DOI 10.4135/9781446294413.N25]
   Martini A, 2016, J SOFTW-EVOL PROC, V28, P4, DOI 10.1002/smr.1757
   Mathiassen L, 2005, ROLE NETWORKS NETWOR, p256b
   Moe NB, 2018, SCHEDULE NOT SCHEDUL
   Moe NB, 2014, NETWORKING LARGE SCA, V12
   Moe NB, 2017, EMERGING RES THEMES, P14
   Moe NB, 2016, INT CONF GLOBAL SOFT, P29, DOI 10.1109/ICGSE.2016.30
   Nahapiet J, 1998, ACAD MANAGE REV, V23, P242, DOI 10.2307/259373
   Nyrud H, 2017, INTERTEAM COORDINATI, V16
   Ovaska P., 2003, Software Process Improvement and Practice, V8, P233, DOI 10.1002/spip.186
   Paasivaara M, 2014, INFORM SOFTWARE TECH, V56, P1556, DOI 10.1016/j.infsof.2014.06.008
   Paasivaara M, 2012, INT SYMP EMP SOFTWAR, P235, DOI 10.1145/2372251.2372294
   Paetsch F., 2003, Requirements engineering and agile software development, P308, DOI DOI 10.1109/ENABL.2003.1231428
   Pernstål J, 2015, INFORM SOFTWARE TECH, V67, P44, DOI 10.1016/j.infsof.2015.06.007
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Petersen K, 2009, WATERFALL MODEL LARG, P386
   Petersen K, 2014, J SOFTW-EVOL PROC, V26, P1150, DOI 10.1002/smr.1653
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Sarkar S, 2008, IEEE T SOFTWARE ENG, V34, P700, DOI 10.1109/TSE.2008.43
   Sengupta B., 2006, 28th International Conference on Software Engineering Proceedings, P731, DOI 10.1145/1134285.1134402
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Smite D, 2020, IEEE SOFTWARE UNPUB
   Smite D, 2017, INFORM SOFTWARE TECH, V86, P71, DOI 10.1016/j.infsof.2017.01.003
   Stewart D. W., 1990, Focus groups: Theory and practice
   Strode DE, 2016, INFORM SYST FRONT, V18, P23, DOI 10.1007/s10796-015-9574-1
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Tiwana A, 2005, J MANAGE INFORM SYST, V22, P13, DOI 10.1080/07421222.2003.11045836
   Ulziit B, 2015, J SOFTW-EVOL PROC, V27, P763, DOI 10.1002/smr.1720
   VANDEVEN AH, 1976, AM SOCIOL REV, V41, P322
   Yuan MH, 2009, IEEE T ENG MANAGE, V56, P494, DOI 10.1109/TEM.2008.927819
   Zhou M, 2009, LEARNING OFFSHORED L
NR 89
TC 14
Z9 16
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2021
VL 33
IS 3
AR e2297
DI 10.1002/smr.2297
EA JUN 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA QT0GD
UT WOS:000543671000001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Gren, L
   Goldman, A
   Jacobsson, C
AF Gren, Lucas
   Goldman, Alfredo
   Jacobsson, Christian
TI Agile ways of working: A team maturity perspective
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile software development; group maturity; iterative development; teams
ID FACULTY GROUP DEVELOPMENT; PERFORMANCE; VALIDATION; MODEL; LINKS
AB With the agile approach to managing software development projects comes an increased dependability on well-functioning teams, since many of the practices are built on teamwork. The objective of this study was to investigate if, and how, team development from a group psychological perspective is related to some work practices of agile teams. Data were collected from 34 agile teams (200 individuals) from six software development organizations and one university in both Brazil and Sweden using the Group Development Questionnaire (Scale IV) and the Perceptive Agile Measurement (PAM). The result indicates a strong correlation between levels of group maturity and the two agile practices iterative development and retrospectives. We, therefore, conclude that agile teams at different group development stages adopt parts of team agility differently, thus confirming previous studies but with more data and by investigating concrete and applied agile practices. We thereby add evidence to the hypothesis that an agile implementation and management of agile projects need to be adapted to the group maturity levels of the agile teams.
C1 [Gren, Lucas] Chalmers Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Gren, Lucas] Univ Gothenburg, Gothenburg, Sweden.
   [Goldman, Alfredo] Univ Sao Paulo, Dept Math & Stat, Sao Paulo, SP, Brazil.
   [Jacobsson, Christian] Univ Gothenburg, Dept Psychol, Gothenburg, Sweden.
C3 Chalmers University of Technology; University of Gothenburg;
   Universidade de Sao Paulo; University of Gothenburg
RP Gren, L (corresponding author), Univ Gothenburg, Gothenburg, Sweden.; Gren, L (corresponding author), Chalmers Univ Technol, Gothenburg, Sweden.
EM lucas.gren@cse.gu.se
RI Jacobsson, Christian/N-3288-2017
OI Jacobsson, Christian/0000-0003-3941-5935; Gren,
   Lucas/0000-0001-5488-9894
CR Acker J, 2006, GENDER SOC, V20, P441, DOI 10.1177/0891243206289499
   Ahmad Muhammad Ovais, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P9, DOI 10.1109/SEAA.2013.28
   Balijepally V., 2006, COMMUNICATIONS ASS I, V18, P4
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Bion W., 1992, EXPERIENCES GROUPS O
   Chin G., 2004, Agile Project Management: How to Succeed in the Face of Changing Project Requirements
   Cobb C.G., 2011, Making sense of agile project management: Balancing control and agility
   Cockburn A., 2007, Agile software development: the cooperative game
   Cohen D, 2004, ADV COMPUT, V62, P1, DOI 10.1016/S0065-2458(03)62001-2
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Combs J, 2006, PERS PSYCHOL, V59, P501, DOI 10.1111/j.1744-6570.2006.00045.x
   Cooke J, 2011, AGILE EXECUTIVE GUID
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Derby Esther., 2006, AGILE RETROSPECTIVES
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Gren L, 2017, J SYST SOFTWARE, V124, P104, DOI 10.1016/j.jss.2016.11.024
   Gren L, 2015, J SYST SOFTWARE, V107, P38, DOI 10.1016/j.jss.2015.05.008
   Gren Lucas, 2017, EASE, P292, DOI [DOI 10.1145/3084226, 10.1145/3084226.3084269, DOI 10.1145/3084226.3084269]
   GUZZO RA, 1985, PERS PSYCHOL, V38, P275, DOI 10.1111/j.1744-6570.1985.tb00547.x
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hoda R, 2009, LECT NOTES BUS INF P, V31, P186
   Hummel M, 2013, BUS INFORM SYST ENG+, V5, P343, DOI 10.1007/s12599-013-0282-4
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Jacobsson C, 2014, SMALL GR RES, V45, P400, DOI 10.1177/1046496414534473
   Jalote P, 2004, J SYST SOFTWARE, V70, P117, DOI [10.1016/S0164-1212(03)00010-4, 10.1016/S0164-1212(02)00010-4]
   Jensen, 1977, GROUP ORGAN STUD, V2, P419, DOI [DOI 10.1177/105960117700200404, 10.1177/105960117700200404]
   Karlsson L, 2007, EMPIR SOFTW ENG, V12, P3, DOI 10.1007/s10664-006-7240-4
   Keyton J., 2002, COMMUNICATING GROUPS
   Kim Gene, 2013, PHOENIX PROJECT NOVE
   Klein C, 2009, SMALL GR RES, V40, P181, DOI 10.1177/1046496408328821
   Kozlowski SWJ, 2006, PSYCHOL SCI, P77, DOI 10.1111/j.1529-1006.2006.00030.x
   Krebs W., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P60
   Lehtinen TOA, 2017, EMPIR SOFTW ENG, V22, P2409, DOI 10.1007/s10664-016-9464-2
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Licorish SA, 2016, ASIA PAC SOFWR ENG, P369, DOI [10.1109/APSEC.2016.47, 10.1109/APSEC.2016.062]
   Licorish SA, 2015, INFORM SOFTWARE TECH, V64, P113, DOI 10.1016/j.infsof.2015.02.004
   Lowman R.L. )., 2002, The California school of organizational studies handbook of organizational consulting psychology: A comprehensive guide to theory, skills, and techniques
   Mahnic V, 2012, J SYST SOFTWARE, V85, P2086, DOI 10.1016/j.jss.2012.04.005
   McDonald S, 2007, COMMUN ACM, V50, P67
   Melnik G, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P21
   Melo CD, 2012, EUROMICRO CONF PROC, P376, DOI 10.1109/SEAA.2012.45
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Oosterhout VM, 2010, BUSINESS AGILITY INF
   Poth A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.1986
   Putta A, 2018, LECT NOTES COMPUT SC, V11271, P334, DOI 10.1007/978-3-030-03673-7_24
   Rising L, 2000, IEEE SOFTWARE, V17, P26, DOI 10.1109/52.854065
   Roberge MÉ, 2010, HUM RESOUR MANAGE R, V20, P295, DOI 10.1016/j.hrmr.2009.09.002
   Robson Sean, 2013, AGILE SAP INTRO FLEX
   Schein E.H., 1988, PROCESS CONSULTATION, V1
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Seger T, 2008, AGILE 2008, PROCEEDINGS, P3, DOI 10.1109/Agile.2008.27
   Senior B., 2004, INT J PRODUCT PERFOR, V53, P317
   Serrador P, 2015, INT J PROJ MANAG, V33, P1040, DOI 10.1016/j.ijproman.2015.01.006
   Sidky A, 2007, INNOV SYST SOFTW ENG, V3, P203, DOI 10.1007/s11334-007-0026-z
   So C., 2010, MAKING SOFTWARE TEAM
   So C, 2009, LECT NOTES BUS INF P, V31, P83
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   Streiner DL, 2003, J PERS ASSESS, V80, P217, DOI 10.1207/S15327752JPA8003_01
   SUNDSTROM E, 1990, AM PSYCHOL, V45, P120, DOI 10.1037/0003-066X.45.2.120
   Tapanainen T, 2008, PROCEEDINGS OF THE 2ND EUROPEAN CONFERENCE ON INFORMATION MANAGEMENT AND EVALUATION, P425
   Teh A, 2012, IEEE SOFTWARE, V29, P53, DOI 10.1109/MS.2011.157
   THOMAS KW, 1992, J ORGAN BEHAV, V13, P265, DOI 10.1002/job.4030130307
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
   WAHBA MA, 1976, ORGAN BEHAV HUM PERF, V15, P212, DOI 10.1016/0030-5073(76)90038-6
   Weinberg G.M., 1998, PSYCHOL COMPUTER PRO
   Wheelan S.A., 2013, CREATING EFFECTIVE T, V4th
   Wheelan S.A., 2005, Group processes: A developmental perspective, V2nd
   Wheelan SA, 1998, SMALL GR RES, V29, P371, DOI 10.1177/1046496498293005
   Wheelan SA, 1999, SMALL GR RES, V30, P59, DOI 10.1177/104649649903000104
   Wheelan SA, 1996, SMALL GR RES, V27, P143, DOI 10.1177/1046496496271007
   Wheelan SA, 2003, AM J CRIT CARE, V12, P527, DOI 10.4037/ajcc2003.12.6.527
   Wheelan SA, 2005, J EDUC RES, V98, P323, DOI 10.3200/JOER.98.6.323-330
   Wheelan SA, 2003, SMALL GR RES, V34, P223, DOI 10.1177/1046496403251608
   Wheelan SA, 2009, SMALL GR RES, V40, P247, DOI 10.1177/1046496408328703
   Wufka M, 2015, 2015 AGILE CONFERENCE, P60, DOI 10.1109/Agile.2015.10
NR 79
TC 20
Z9 26
U1 4
U2 77
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2020
VL 32
IS 6
AR e2244
DI 10.1002/smr.2244
EA DEC 2019
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA LY8BL
UT WOS:000503149000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kupper, S
   Pfahl, D
   Jürisoo, K
   Diebold, P
   Münch, J
   Kuhrmann, M
AF Kupper, Steffen
   Pfahl, Dietmar
   Jurisoo, Kristjan
   Diebold, Philipp
   Muench, Juergen
   Kuhrmann, Marco
TI How has SPI changed in times of agile development? Results from a
   multi-method study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile methods; software process improvement; SPI; systematic review
ID SOFTWARE-PROCESS-IMPROVEMENT; FRAMEWORK; METHODOLOGIES; MOTIVATORS;
   MATURITY; ADOPTION; PROJECTS; CMMI
AB The emergence of agile methods and practices has not only changed the development processes but might also have affected how companies conduct software process improvement (SPI). Through a set of complementary studies, we aim to understand how SPI has changed in times of agile software development. Specifically, we aim (a) to identify and characterize the set of publications that connect elements of agility to SPI, (b) to explore to which extent agile methods/practices have been used in the context of SPI, and (c) to understand whether the topics addressed in the literature are relevant and useful for industry professionals. To study these questions, we conducted an in-depth analysis of the literature identified in a previous mapping study, an interview study, and an analysis of the responses given by industry professionals to SPI-related questions stemming from an independently conducted survey study. Regarding the first question, we identified 55 publications that focus on both SPI and agility of which 48 present and discuss how agile methods/practices are used to steer SPI initiatives. Regarding the second question, we found that the two most frequently mentioned agile methods in the context of SPI are Scrum and Extreme Programming (XP), while the most frequently mentioned agile practices are integrate often, test-first, daily meeting, pair programming, retrospective, on-site customer, and product backlog. Regarding the third question, we found that a majority of the interviewed and surveyed industry professionals see SPI as a continuous activity. They agree with the agile SPI literature that agile methods/practices play an important role in SPI activities but that the importance given to specific agile methods/practices does not always coincide with the frequency with which these methods/practices are mentioned in the literature.
C1 [Kupper, Steffen] Tech Univ Clausthal, Inst Appl Software Syst Engn, Goslar, Germany.
   [Pfahl, Dietmar; Jurisoo, Kristjan] Univ Tartu, Inst Comp Sci, Tartu, Estonia.
   [Pfahl, Dietmar] Univ Calgary, Dept Elect & Comp Engn, Calgary, AB, Canada.
   [Diebold, Philipp] Fraunhofer IESE, Proc Engn, Kaiserslautern, Germany.
   [Muench, Juergen] Reutlingen Univ, Herman Hollerith Ctr, Boblingen, Germany.
   [Diebold, Philipp] Bagilstein GmbH, Mainz, Germany.
   [Kuhrmann, Marco] Univ Passau, Fac Comp Sci & Math, Passau, Germany.
C3 TU Clausthal; University of Tartu; University of Calgary; University of
   Passau
RP Pfahl, D (corresponding author), Univ Tartu, Inst Comp Sci, Tartu, Estonia.
EM dietmar.pfahl@ut.ee
RI Münch, Jürgen/ABC-2316-2020; Pfahl, Dietmar Alfred Paul Kurt/H-3084-2015
OI Münch, Jürgen/0000-0003-0327-8094; Pfahl, Dietmar Alfred Paul
   Kurt/0000-0003-2400-501X; Kuhrmann, Marco/0000-0001-6101-8931; Diebold,
   Philipp/0000-0002-3910-7898
FU Eesti Teadusagentuur [IUT20-55]
FX Eesti Teadusagentuur, Grant/Award Number: IUT20-55
CR Abdel-Hamid Amr Noaman, 2011, Proceedings of the 2011 Agile Conference, P195, DOI 10.1109/AGILE.2011.26
   al-Tarawneh MY, 2011, PROCEDIA COMPUT SCI, V3, DOI 10.1016/j.procs.2010.12.146
   Allison I, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P418, DOI 10.1109/QUATIC.2010.81
   Anna B, 2004, P 13 EUR C INF SYST
   [Anonymous], 2011, 1SC7 ISOIEC JTC
   [Anonymous], 2014, P 2014 INT C SOFTW S
   [Anonymous], J SOFTW EVOL PROC
   [Anonymous], 2015, P INT C SOFTW SYST P, DOI [10.1145/2785592.2785600, DOI 10.1145/2785592.2785600]
   [Anonymous], 2006, J BRAZILIAN COMPUTER
   [Anonymous], MANAGING SOFTWARE PR
   [Anonymous], CMUSEI2000TR023
   Aoyama M, 1996, INFORM SOFTWARE TECH, V38, P133, DOI 10.1016/0950-5849(95)01068-8
   Armbrust O, SOFTW PROCESS IMPROV, V13, P301
   Ayed H, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P71, DOI 10.1109/IWSM-Mensura.2013.21
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   BASILI VR, 1995, ADV COMPUT, V41, P65, DOI DOI 10.1016/S0065-2458(08)60231-4
   Basili VR, 2010, MAKING SOFTWARE LEAR
   Birkhölzer T, 2011, EUROMICRO CONF PROC, P294, DOI 10.1109/SEAA.2011.52
   BRODMAN JG, 1994, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.1994.296795
   Brown AW, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P873, DOI 10.1109/ICSE.2013.6606636
   Coleman G, 2008, J SYST SOFTWARE, V81, P772, DOI 10.1016/j.jss.2007.07.027
   Conradi R, 2002, IEEE SOFTWARE, V19, P92, DOI 10.1109/MS.2002.1020295
   Diebold P, 2015, LECT NOTES BUS INF P, V212, P40, DOI 10.1007/978-3-319-18612-2_4
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   El Emam K, 2000, ADV COMPUT, V53, P319
   Esfahani Hesam Chiniforooshan, 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P21, DOI 10.1109/AGILE.2010.7
   Femmer H, 2014, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2014.9
   Fontana RM, 2015, J SYST SOFTWARE, V102, P88, DOI 10.1016/j.jss.2014.12.032
   Fontana RM, 2014, J SYST SOFTWARE, V97, P140, DOI 10.1016/j.jss.2014.07.030
   Fucci D., 2014, 8 ACM IEEE INT S ESE, V10, P1
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   Gandomani Taghi Javdani, 2014, 2014 8th Malaysian Software Engineering Conference (MySEC), P240, DOI 10.1109/MySec.2014.6986021
   Gandomani TJ, 2013, COMM COM INF SC, V403, P146
   Garcia I, 2010, IET SOFTW, V4, P237, DOI 10.1049/iet-sen.2009.0045
   Garzás J, 2013, J SOFTW-EVOL PROC, V25, P1325, DOI 10.1002/smr.1605
   Hall T., 2002, Software Process Improvement and Practice, V7, P3, DOI 10.1002/spip.150
   Hannay JE, 2010, ESEM 10, P15
   Hanssen GK, 2008, J SYST SOFTWARE, V81, P843, DOI 10.1016/j.jss.2007.10.025
   Helgesson YYL, J SOFTW EVOL PROCESS, V24, P436
   Henderson-Sellers B., 2006, Information Systems Technology and Its Applications, P13
   Hodgetts P, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P106
   Homchuenchom D, 2011, SPIALS LIGHT WEIGHT, P195
   Horvat R. V., 2000, Software Process Improvement and Practice, V5, P45, DOI 10.1002/(SICI)1099-1670(200003)5:1<45::AID-SPIP110>3.0.CO;2-2
   Hull MEC, 2002, INFORM SOFTWARE TECH, V44, P1, DOI 10.1016/S0950-5849(01)00158-6
   Humphrey Watts S., 2000, CMU/SEI Technical Report CMU/SEI-2000-TR-022
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jacobsen JW, 2016, LECT NOTES COMPUT SC, V10027, P327, DOI 10.1007/978-3-319-49094-6_21
   Kitchenham M, 2007, EBSE200701 KEEL U
   Korhonen K, 2013, SOFTWARE QUAL J, V21, P599, DOI 10.1007/s11219-012-9189-4
   Kruchten P, 2013, J SOFTW-EVOL PROC, V25, P351, DOI 10.1002/smr.572
   Kuhrmann M, HYBRID SOFTWARE SYST, DOI 10.13140/RG.2.2.12403.840042017
   Kuhrmann M., 2016, PEERJ COMPUT SCI, V2, P1
   Kuhrmann M., 2017, SEUH, V1790, P20
   Kuhrmann M, 2019, P INT C SOFTW SYST P, V1, P1
   Kuhrmann M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P1, DOI 10.1109/ICSE-SEET.2019.00009
   Kuhrmann M, 2019, IEEE SOFTWARE, V36, P20, DOI 10.1109/MS.2018.110161245
   Kuhrmann M, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P30, DOI 10.1145/3084100.3084104
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Kuhrmann M, 2016, INT CONF GLOBAL SOFT, P89, DOI 10.1109/ICGSE.2016.10
   Kuhrmann M, 2015, INT CONF GLOBAL SOFT, P51, DOI 10.1109/ICGSE.2015.11
   Laanti M, 2011, INFORM SOFTWARE TECH, V53, P276, DOI 10.1016/j.infsof.2010.11.010
   Laporte CY, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P38, DOI 10.1109/QUATIC.2014.12
   Lee S, 2013, J INF PROCESS SYST, V9, P69, DOI 10.3745/JIPS.2013.9.1.069
   Li J, 2010, TRANSITION PLAN DRIV, V10
   Linaker J., 2015, Guidelines for Conducting Surveys in Software Engineering
   Manhart P, 2004, PROC INT CONF SOFTW, P378, DOI 10.1109/ICSE.2004.1317460
   Mc Caffery F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P551, DOI 10.1145/1368088.1368164
   McHugh M, 2014, J SOFTW-EVOL PROC, V26, P504, DOI 10.1002/smr.1608
   McHugh Martin., 2013, International Conference on Software Process Improvement and Capability Determination, P199, DOI [10.1007/ 978-3-642-38833-0_18, DOI 10.1007/978-3-642-38833-0_18]
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Munch J., 2012, FRAUNHOFER IESE SERI
   O'Connor R.V., 2014, Communications in Computer and Information Science Systems, Software and Services Process Improvement, V425, P135, DOI DOI 10.1007/978-3-662-43896-1_12
   O'Hagan AO., 2014, Proceedings, 21st European Conference on Systems, Software, and Services Process Improvement (EuroSPI 2014), CCIS, V425, P182
   Ozcan-Top O., 2013, Software Process Improvement and Capability Determination, V349, P130, DOI [10.1007/978-3-642-38833-0_12, DOI 10.1007/978-3-642-38833-0_12]
   Papatheocharous E., 2013, Systems, Software and Services Process Improvement, P237, DOI DOI 10.1007/978-3-642-39179-8_21
   Parnass DL, 1986, IEEE T SOFTWARE ENG, V12, P1
   PAULISH DJ, 1994, COMPUTER, V27, P50, DOI 10.1109/2.312039
   Petersen K, 2010, J SYST SOFTWARE, V83, P1275, DOI 10.1016/j.jss.2010.02.005
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Pikkarainen M, 2012, EMPIR SOFTW ENG, V17, P675, DOI 10.1007/s10664-011-9185-5
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Pino FJ, 2010, J SYST SOFTWARE, V83, P1662, DOI 10.1016/j.jss.2010.03.077
   Pino FJ, 2009, LECT NOTES COMPUT SC, V5543, P342, DOI 10.1007/978-3-642-01680-6_31
   Qumer A, 2008, J SYST SOFTWARE, V81, P1899, DOI 10.1016/j.jss.2007.12.806
   Rodríguez P, 2014, P ANN HICSS, P4770, DOI 10.1109/HICSS.2014.586
   Rozman I, 1997, SOFTWARE QUAL J, V6, P37, DOI 10.1023/A:1018539413913
   Rubin V., 2014, P 2014 ICSSP, P70
   Salinas CJT, 2012, SCRUM BASED APPROACH, P282
   Salo O., 2007, Software Process Improvement and Practice, V12, P81, DOI 10.1002/spip.305
   Salo O, 2005, 2005 International Symposium on Empirical Software Engineering (ISESE), Proceedings, P187, DOI 10.1109/ISESE.2005.1541828
   Salo O, 2004, EUROMICRO CONF PROC, P310, DOI 10.1109/EURMIC.2004.1333385
   Schweigert T., 2013, CCIS, P214, DOI DOI 10.1007/978-3-642-39179-8
   Schweigert T, 2013, TESTSPICE AGILE TEST, P154
   Schweigert T, 2014, J SOFTW-EVOL PROC, V26, P513, DOI 10.1002/smr.1617
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Sidky A, 2007, INNOV SYST SOFTW ENG, V3, P203, DOI 10.1007/s11334-007-0026-z
   Silva FS, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P139, DOI 10.1109/QUATIC.2014.25
   Silva FS, 2015, INFORM SOFTWARE TECH, V58, P20, DOI 10.1016/j.infsof.2014.09.012
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sletholt MT, 2012, COMPUT SCI ENG, V14, P24, DOI 10.1109/MCSE.2011.113
   Song F, 2010, HEALTH TECHNOL ASSES, V14, P1, DOI 10.3310/hta14080
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Stelzer D., 1998, Software Process Improvement and Practice, V4, P227, DOI 10.1002/(SICI)1099-1670(199812)4:4<227::AID-SPIP106>3.0.CO;2-1
   Taylor Philip S., 2008, Software Process: Improvement and Practice, V13, P21, DOI 10.1002/spip.358
   Theocharis G, 2015, LECT NOTES COMPUT SC, V9459, P149, DOI 10.1007/978-3-319-26844-6_11
   Tuan N.N., 2013, P 4 S INFORM COMMUNI, DOI [10.1145/2542050.2542072, DOI 10.1145/2542050.2542072]
   Umarji M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P129
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   Viana Davi, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P121, DOI 10.1049/ic.2012.0015
   Vijayasarathy LR, 2016, IEEE SOFTWARE, V33, P86, DOI 10.1109/MS.2015.26
   Wanderley F., 2012, 16 INT SOFTWARE PROD, V2, P18, DOI [/10.1145/2364412.2364416, DOI 10.1145/2364412.2364416]
   West D., 2011, Water-Scrum-Fall is the Reality of Agile for Most Organizations
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhang Lina, 2012, Proceedings of the 2012 International Conference on Computer Science and Electronics Engineering (ICCSEE 2012), P554, DOI 10.1109/ICCSEE.2012.477
NR 117
TC 7
Z9 7
U1 1
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2019
VL 31
IS 11
AR e2182
DI 10.1002/smr.2182
EA AUG 2019
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JO6CC
UT WOS:000484317900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, DY
   Li, L
   Kim, D
   Bissyandé, TF
   Lo, D
   Le Traon, Y
AF Li, Daoyuan
   Li, Li
   Kim, Dongsun
   Bissyande, Tegawende F.
   Lo, David
   Le Traon, Yves
TI Watch out for this commit! A study of influential software changes
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE change prediction; change risk; influential change; software changes;
   software evolution
AB One single code change can significantly influence a wide range of software systems and their users. For example, (a) adding a new feature can spread defects in several modules, while (b) changing an API method can improve the performance of all client programs. Unfortunately, developers often may not clearly know whether code changes are influential at commit time. This paper investigates influential software changes and proposes an approach to identify them immediately when they are applied. Our goals are to (a) identify existing influential changes (ICs) in software projects, (b) understand their characteristics, and (c) build a classification model of ICs to help developers find and address them early. We first conduct a post-mortem analysis to discover existing influential changes by using intuitions (eg, changes referred by other changes). Then, we re-categorize all identified changes through an open-card sorting process. Subsequently, we conduct a survey with about 100 developers to finalize a taxonomy. Finally, from our ground truth, we extract features, including metrics such as the complexity of changes and file centrality in co-change graphs to build machine learning classifiers. The experiment results show that our classification model with random samples achieves 86.8% precision, 74% recall, and 80.4% F-measure, respectively.
C1 [Li, Daoyuan; Li, Li; Kim, Dongsun; Bissyande, Tegawende F.; Le Traon, Yves] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, Luxembourg, Luxembourg.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 University of Luxembourg; Singapore Management University
RP Kim, D; Bissyandé, TF (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, Luxembourg, Luxembourg.
EM dongsun.kim@uni.lu
RI Li, Li/AAR-3316-2020; LE TRAON, Yves/T-2911-2019; LO, David/A-2493-2012;
   WANG, YANAN/KCL-4840-2024; Kim, Dongsun/B-4856-2015
OI LE TRAON, Yves/0000-0002-1045-4861; Kim, Dongsun/0000-0003-0272-6860
FU Fonds National de la Recherche Luxembourg [C15/IS/10449467,
   C15/IS/9964569]
FX Fonds National de la Recherche Luxembourg, Grant/Award Number:
   C15/IS/10449467 and C15/IS/9964569
CR Alpaydin E, 2004, INTRO MACHINE LEARNI
   [Anonymous], 2019, INNOV SMART GRID TEC
   [Anonymous], 2018, ARXIV181001791
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Beyer D, 2005, PROG COMPREHEN, P259, DOI 10.1109/WPC.2005.12
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bissyand~e T. F., 2015, ARXIV150705742
   Bissyandé TF, 2012, IEEE INT CONF AUTOM, P60, DOI 10.1145/2351676.2351686
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Brudaru I. I., 2008, P 2008 INT WORKSHOP, P30
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   D'Ambros Marco., 2006, MINING SOFTWARE REPO, P26, DOI DOI 10.1145/1137983.1137992
   Dagenais B, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000805
   Dagenais B, 2009, PROC INT CONF SOFTW, P599, DOI 10.1109/ICSE.2009.5070565
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   FREEMAN LC, 1977, SOCIOMETRY, V40, P35, DOI 10.2307/3033543
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Gîrba T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P113, DOI 10.1109/IWPSE.2005.21
   Github, PMD EXT CROSS LANG S
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Herzig K, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P60, DOI 10.1109/ISSRE.2011.16
   HERZIG KS, 2010, P 32 ACM IEEE INT C, V2, P393
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hong W, 2011, IEEE ANTENNAS PROP, P2032, DOI 10.1109/APS.2011.5996906
   Hu M., 2006, AAAI SPRING S COMPUT, P61
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kaleeswaran S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P266, DOI 10.1145/2568225.2568258
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim E, 2010, INT CONF ADV COMMUN, P686
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Koyuncu A, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P237, DOI 10.1145/3092703.3092713
   Kui Liu, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P1, DOI 10.1109/SANER.2019.8667970
   LAWALL J, 2013, AUTOMATING SOURCE CO
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Lewis D.D, 1998, EUR C MACH LEARN, P4
   Leys C, 2013, J EXP SOC PSYCHOL, V49, P764, DOI 10.1016/j.jesp.2013.03.013
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Liu B, 2010, CH CRC MACH LEARN PA, P627
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2018, ASIA PAC SOFWR ENG, P658, DOI 10.1109/APSEC.2018.00085
   Liu K, 2018, PROC IEEE INT CONF S, P275, DOI 10.1109/ICSME.2018.00037
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Meng N, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P392, DOI 10.1109/ICSE.2015.58
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, ACM SIGPLAN NOTICES, V46, P329, DOI 10.1145/1993316.1993537
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Montgomery D.C., 2001, Engineering Statistics, V2nd
   Nielsen Jakob., 1995, Card Sorting to Discover the Users' Model of the Information Space
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   OHANA B, 2009, THESIS
   Onoue S, 2013, ASIA PAC SOFWR ENG, P7, DOI 10.1109/APSEC.2013.104
   Padioleau Y., 2006, Operating Systems Review, V40, P59, DOI 10.1145/1218063.1217942
   Padioleau Y, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P247, DOI 10.1145/1357010.1352618
   Palix N, 2011, ACM SIGPLAN NOTICES, V46, P305, DOI 10.1145/1961296.1950401
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Robbes R., 2012, P ACM SIGSOFT 20 INT
   Robillard MP, 2008, WORK CONF REVERSE EN, P17, DOI 10.1109/WCRE.2008.15
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Rolim Reudismam, 2018, ARXIV180303806
   Rousseeuw PJ, 1999, TECHNOMETRICS, V41, P212, DOI 10.2307/1270566
   SABIDUSSI G, 1966, PSYCHOMETRIKA, V31, P581, DOI 10.1007/BF02289527
   Sawant AA, 2016, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSME.2016.64
   SERVANT F, 2012, P ACM SIGSOFT 20 INT
   Sherriff Mark, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P268, DOI 10.1109/ICST.2008.25
   Shihab E., 2012, P ACM SIGSOFT 20 INT
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Sliwerski J., 2005, P 5 JOINT M EUROPEAN, P107
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Son S, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P1069
   Spencer Donna., 2004, CARD SORTING DEFINIT
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Tao YD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P64, DOI 10.1145/2635868.2635873
   Teyton C, 2014, J SOFTW-EVOL PROC, V26, P1030, DOI 10.1002/smr.1660
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Varrette S, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P959, DOI 10.1109/HPCSim.2014.6903792
   WEI Y, 2010, P 19 INT S SOFTW TES, P61
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zhang L, 2012, COMMER TIMES, V1, P40
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 101
TC 5
Z9 6
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2019
VL 31
IS 12
AR e2181
DI 10.1002/smr.2181
EA AUG 2019
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ2JD
UT WOS:000482117100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Paspallis, N
AF Paspallis, Nearchos
TI An MDD-based method for building context-aware applications with high
   reusability
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE code generation; context awareness; MDD; middleware; plug-in;
   reusability
ID MODEL-DRIVEN DEVELOPMENT; FRAMEWORK; SOFTWARE; LANGUAGE
AB Adding context -awareness capabilities to modern mobile and pervasive computing applications (apps) is becoming a mainstream activity in the software engineering community. In this respect, many context models and middleware architectures have been proposed with the aim to provide the developers with tools and abstractions that make it easier to produce context-aware applications. However, current solutions suffer from relatively low reusability and lack ease-of-use. In this paper, we propose a two-layer approach based on model-driven development: At the higher layer, we introduce the design of reusable context plug-ins, which can be used to monitor low-level context data and to infer higher-level information about the users, their computing infrastructure, and their interaction. At the lower layer, the plug-ins themselves are synthesized using more elementary, reusable components. We argue that this development approach provides significant advantages to the developers, as it enables them to design, implement, reuse, and maintain the codebase of context-aware apps more efficiently. To evaluate this approach, we demonstrate it in the context of a two-part example application and assess it both qualitatively and quantitatively.
C1 [Paspallis, Nearchos] UCLan Cyprus, Sch Sci, 12-14 Univ Ave, CY-7080 Pyla, Larnaca, Cyprus.
RP Paspallis, N (corresponding author), UCLan Cyprus, Sch Sci, 12-14 Univ Ave, CY-7080 Pyla, Larnaca, Cyprus.
EM npaspallis@uclan.ac.uk
OI Paspallis, Nearchos/0000-0002-2636-7973
CR Ambler SW, 2003, IEEE SOFTWARE, V20, P71, DOI 10.1109/MS.2003.1231156
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 1997, COMPONENT SOFTWARE O
   Anvaari M., 2010, ECSA '10: Proceedings of the Fourth European Conference on Software Architecture, P85, DOI DOI 10.1145/1842752.1842775
   Ayed D, 2007, LECT NOTES ARTIF INT, V4635, P15
   Baer PA, 2007, COMMUNICATION COLLAB, P1
   Bagheri H, 2016, J SYST SOFTWARE, V119, P31, DOI 10.1016/j.jss.2016.05.039
   Bardram JE, 2005, LECT NOTES COMPUT SC, V3468, P98
   Bettini C, 2010, PERVASIVE MOB COMPUT, V6, P161, DOI 10.1016/j.pmcj.2009.06.002
   Bombonatti D, 2017, SOFTWARE PRACT EXPER, V47, P943, DOI 10.1002/spe.2416
   Brunette Waylon., 2012, Proceedings of the 10th international conference on Mobile systems, applications, and services, MobiSys '12, P351, DOI DOI 10.1145/2307636.2307669
   Carlson HE, 2011, PITUITARY, 3RD EDITION, P383, DOI 10.1016/B978-0-12-380926-1.10011-2
   Carton Andrew, 2007, First International Workshop on Software Engineering for Pervasive Computing Applications, Systems, and Environments (SEPCASE '07), DOI 10.1109/SEPCASE.2007.3
   Cassou D, 2012, IEEE T SOFTWARE ENG, V38, P1445, DOI 10.1109/TSE.2011.107
   Ceri S, 2007, WORLD WIDE WEB, V10, P387, DOI 10.1007/s11280-006-0014-5
   Cervantes H, 2004, PROC INT CONF SOFTW, P614, DOI 10.1109/ICSE.2004.1317483
   Christensen B, 2016, INT J MED INFORM, V89, P43, DOI 10.1016/j.ijmedinf.2016.02.004
   Consortium MUSIC, 2006, SELF AD APPL MOB US
   DeLeon P, 1999, INT CONF ACOUST SPEE, P3097, DOI 10.1109/ICASSP.1999.757496
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Ferreira Denzil, 2015, Frontiers in ICT, V2, P6
   Floch J, 2013, SOFTWARE PRACT EXPER, V43, P359, DOI 10.1002/spe.2116
   Fra C., 2011, 2011 IEEE International Conference on Pervasive Computing and Communications Workshops (PerCom Workshops 2011). PerCom-Workshops 2011: 2011 IEEE International Conference on Pervasive Computing and Communications Workshops (PERCOM Workshops 2011), P421, DOI 10.1109/PERCOMW.2011.5766926
   Geihs K, 2008, SEFM 2008: Sixth IEEE International Conference on Software Engineering and Formal Methods, Proceedings, P387, DOI 10.1109/SEFM.2008.37
   Haghighi PD, 2006, INT WORKSHOP DATABAS, P455, DOI 10.1109/DEXA.2006.25
   Hallsteinsen S, 2012, J SYST SOFTWARE, V85, P2840, DOI 10.1016/j.jss.2012.07.052
   Hong J.H., 2002, Roc. of Conference on Human Factors in Computing Systems 2002 (CHT02), Minneapolis, Minnesota, USA, V16, P554
   Hong JY, 2009, EXPERT SYST APPL, V36, P8509, DOI 10.1016/j.eswa.2008.10.071
   Hoyos JR, 2016, COMPUT ELECTR ENG, V55, P39, DOI 10.1016/j.compeleceng.2016.07.002
   Jörges S, 2008, INNOV SYST SOFTW ENG, V4, P361, DOI 10.1007/s11334-008-0071-2
   Jorges S., 2013, Construction i Evolution of Code Generators, A Model-Driven i Service-Oriented Approach
   Kalman R E., 1960, J BASIC ENG, V82, P35, DOI DOI 10.1115/1.3662552
   Karp RichardM., 1972, STOC 72, P125
   Kieburtz RB, 1996, PROC INT CONF SOFTW, P542, DOI 10.1109/ICSE.1996.493448
   Kim H-K, 2015, LNEE, P325
   Krysztof Czarnecki UE, 2000, GENERATIVE PROGRAMMI
   Kwapisz JR., 2011, ACM SIGKDD EXPLORATI, V12, P74, DOI [DOI 10.1145/1964897.1964918, 10.1145/1964897.1964918]
   Lara OD, 2013, IEEE COMMUN SURV TUT, V15, P1192, DOI 10.1109/SURV.2012.110112.00192
   Leach RJ, 2013, SOFTWARE REUSE METHO
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Martínez Y, 2013, INFORM SOFTWARE TECH, V55, P189, DOI 10.1016/j.infsof.2012.07.004
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MCFADDEN T, 2004, P 1 INT WORKSH ADV C, P90
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Munnelly J, 2007, FIFTH ANNUAL IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P114, DOI 10.1109/PERCOM.2007.7
   Naujokat S., 2012, Proceedings 2012 2nd International Workshop on Developing Tools as Plug-ins (TOPI 2012), P7, DOI 10.1109/TOPI.2012.6229816
   Naujokat S, 2014, SOFTWARE PRACT EXPER, V44, P277, DOI 10.1002/spe.2243
   Oldevik J, 2005, LECT NOTES COMPUT SC, V3748, P239
   Panach JI, 2015, INFORM SOFTWARE TECH, V58, P338, DOI 10.1016/j.infsof.2014.07.002
   Paspallis N, 2013, PERS UBIQUIT COMPUT, P1
   Paspallis N, SUMMARY CLASSROOM BA
   Paspallis N, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P30, DOI 10.1145/3053600.3053603
   Paspallis N, 2010, IEEE GLOBE WORK, P1684, DOI 10.1109/GLOCOMW.2010.5700227
   Paspallis N, 2008, LECT NOTES COMPUT SC, V5331, P553
   Perich F, 2005, VLDB J, V14, P182, DOI 10.1007/s00778-004-0127-3
   Priefer D, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P633, DOI 10.1145/2889160.2889176
   Reichle R, 2008, LECT NOTES COMPUT SC, V5053, P281
   Reichle R, 2008, INT CONF PERVAS COMP, P434, DOI 10.1109/PERCOM.2008.29
   Richards M, 2015, Software Architecture Patterns
   Rubin J., 2008, Handbook of Usability Testing: how to Plan, Design, and Conduct Effective Tests, V2nd ed.
   Russell S, 2009, ARTIFICIAL INTELLIGE, Vthird
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   Sedlacek J, 2017, VISUALVM ALL IN ONE
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Selvaraj V, 2013, CYVIS SOFTWARE COMPL
   Sommerville I., 2010, SOFTWARE ENG
   Strang T, 2003, LECT NOTES COMPUT SC, V2893, P236
   Taylor RN, 2009, SOFTWARE ACHITECTURE
   Varshavsky A., 2009, Ubiquitous Computing Fundamentals, P285
   Wagelaar D, 2005, LECT NOTES COMPUT SC, V3713, P367, DOI 10.1007/11557432_27
NR 72
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2019
VL 31
IS 11
AR e2200
DI 10.1002/smr.2200
EA AUG 2019
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JO6CC
UT WOS:000482116600001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Sharma, P
   Sangal, AL
AF Sharma, Pooja
   Sangal, Amrit Lal
TI Investigating the factors which impact SPI implementation initiatives in
   software SMEs-A systematic map and review
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE Global Software Development; software process improvement; SPI factors;
   systematic literature review; systematic mapping
ID PROCESS IMPROVEMENT; SUCCESS FACTORS
AB Context For successful initiation of software process improvement (SPI) initiatives in software SMEs, it is vital for the practitioners to have deep understanding of various SPI inhibitors. Objective The paper has the following objectives: investigate factors which impact SPI implementation initiatives in software SMEs, synthesize available evidence, identify gaps between existing approaches available in the literature, and to develop the taxonomy of the factors. Methods Database search and snowballing procedure are adapted to perform the systematic mapping and review, which includes 105 primary studies published between 2002 and 2018. Also, we reviewed the empirical studies for their rigor and relevance. Results A total of 16 inhibitors have been identified and are grouped into PMBOK knowledge areas framework. From the rigor and relevance scores, it is observed that despite the research has been conducted in an industrial context, it lacks rigor (mean = 1.79) and thus hinders the possibility of generalizing the results. This calls for more studies with thorough empirical analysis and validation using adequate statistical tests. Conclusions The results can help the practitioners to understand the dynamics of factors, which undermine SPI implementation in software SMEs and also to assist them in the development of effective control and mitigation strategies.
C1 [Sharma, Pooja; Sangal, Amrit Lal] Dr BR Ambedkar Natl Inst Technol, Dept Comp Sci & Engn, Jalandhar 144011, Punjab, India.
C3 National Institute of Technology (NIT System); Dr B R Ambedkar National
   Institute of Technology Jalandhar
RP Sharma, P (corresponding author), Dr BR Ambedkar Natl Inst Technol, Dept Comp Sci & Engn, Jalandhar 144011, Punjab, India.
EM poojas.cs.16@nitj.ac.in
RI sharma, pooja/ADH-1737-2022; Sangal, Amrit Lal/Z-5459-2019
OI sharma, pooja/0000-0002-5079-5812; Sangal, Amrit Lal/0000-0003-2501-4014
CR García-Mireles GA, 2015, J SYST SOFTWARE, V103, P150, DOI 10.1016/j.jss.2015.01.057
   [Anonymous], 2012 INT C COMP INF
   [Anonymous], 2006, P 1 INT RES WORKSH P
   [Anonymous], AUSTR SOFTW ENG C, DOI DOI 10.1109/ASWEC.2001.948512
   [Anonymous], 2009, THESIS IT U GOTENBOR
   [Anonymous], COMMUNICATIONS COMPU
   [Anonymous], 2014, NELS, DOI DOI 10.1007/978-3-662-43896-1_1
   [Anonymous], RES J APPL SCI ENG T
   [Anonymous], 2013, GUIDE PROJECT MANAGE, V5
   [Anonymous], 2018, ARXIV180106810
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], 2013, RES J APPL SCI ENG T, DOI 10.19026/rjaset.6.3554
   [Anonymous], J P PAK ACAD SCI A
   [Anonymous], PROCESS MINING SOFTW
   [Anonymous], ENT IND PUBL
   Claudia V, 2013, 2013 INTERNATIONAL CONFERENCE ON MECHATRONICS, ELECTRONICS AND AUTOMOTIVE ENGINEERING (ICMEAE 2013), P223, DOI 10.1109/ICMEAE.2013.33
   Condori-Fernandez N, 2009, INT SYMP EMP SOFTWAR, P503
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Espinosa-Curiel IE, 2013, J SOFTW-EVOL PROC, V25, P393, DOI 10.1002/smr.569
   El-Emam K., 2001, Empirical Software Engineering, V6, P207, DOI 10.1023/A:1011487332587
   Galinac T, 2009, INFORM SOFTWARE TECH, V51, P1351, DOI 10.1016/j.infsof.2009.05.002
   Garcia I, 2012, STUD COMPUT INTELL, V377, P1
   Garcia Javier, 2008, Software Process: Improvement and Practice, V13, P36, DOI 10.1002/spip.395
   Henriques Vaughan, 2017, Interdisciplinary Journal of Information, Knowledge, and Management, V12, P53
   Horvat R. V., 2000, Software Process Improvement and Practice, V5, P45, DOI 10.1002/(SICI)1099-1670(200003)5:1<45::AID-SPIP110>3.0.CO;2-2
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Khan AA, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.1988
   Khan AA, 2017, IEEE ACCESS, V5, P13720, DOI 10.1109/ACCESS.2017.2728603
   Khan AA, 2016, IET SOFTW, V10, P125, DOI 10.1049/iet-sen.2015.0038
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kitchenham B. A., 2010, EASE, V10, P25
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kuhrmann M, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.62
   Kuhrmann M, 2016, INT CONF GLOBAL SOFT, P89, DOI 10.1109/ICGSE.2016.10
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lavallée M, 2012, PROC INT CONF SOFTW, P113, DOI 10.1109/ICSE.2012.6227201
   Lopez-Herrejon RE, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1912
   Mc Caffery F, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.3
   Montoni Mariano Angel, 2009, Software Process: Improvement and Practice, V14, P289, DOI 10.1002/spip.428
   Munir H, 2016, EMPIR SOFTW ENG, V21, P684, DOI 10.1007/s10664-015-9380-x
   Nasir M. H. N. M., 2008, Journal of Applied Sciences, V8, P4362, DOI 10.3923/jas.2008.4362.4368
   Ngwenyama O, 2003, IEEE T ENG MANAGE, V50, P100, DOI 10.1109/TEM.2002.808267
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   Niazi M, 2015, J SOFTW-EVOL PROC, V27, P700, DOI 10.1002/smr.1704
   Niazi M, 2012, J SOFTW-EVOL PROC, V24, P877, DOI 10.1002/smr.543
   Niazi M, 2010, INFORM SOFTWARE TECH, V52, P1204, DOI 10.1016/j.infsof.2010.06.005
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen KK, 2008, CONTEMP SECUR STUD, P11
   Petticrew M., 2006, Syst. Rev. Soc. Sci.: A Pract. guide, DOI DOI 10.1002/9780470754887
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Ramasubbu N, 2014, IEEE T SOFTWARE ENG, V40, P235, DOI 10.1109/TSE.2013.58
   Ribaud V, 2010, COMM COM INF SC, V99, P165
   Sánchez-Gordón ML, 2016, SOFTWARE QUAL J, V24, P549, DOI 10.1007/s11219-015-9282-6
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Sulayman M, 2012, INFORM SOFTWARE TECH, V54, P479, DOI 10.1016/j.infsof.2011.12.007
   Sulayman M, 2009, COMM COM INF SC, V59, P1
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Wen L, 2012, COMM COM INF SC, V290, P38
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Zahran Sami., 1999, J SOFTW MAINT-RES PR, V11, P285
NR 65
TC 9
Z9 9
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2019
VL 31
IS 7
AR e2183
DI 10.1002/smr.2183
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IK8EW
UT WOS:000476827600003
DA 2024-07-18
ER

PT J
AU Diebold, P
   Theobald, S
   Wahl, J
   Rausch, Y
AF Diebold, Philipp
   Theobald, Sven
   Wahl, Johannes
   Rausch, Yves
TI Stepwise transition to agile: From three agile practices to Kanban
   adaptation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile software development practices; agile transition; Kanban board;
   process improvement; Scrum; SME
AB Many smaller companies cannot afford the time and effort to change their development processes all at once. In some cases, companies are not aware of the fact that many aspects of agile development are already in place. The aim of this work was to evaluate if an evolutionary transition to agile software development is suitable for small companies. We conducted a case study with a small company to start their step-by-step agile transition. Initially, three agile software development practices were introduced. Based on the assessment of improvements, the transition continued with three Kanban practices. Experiences with the improvement process and the selected practices were elicited by means of qualitative interviews for data collection. Our case study reports details on the implementation of the first practices as well as the way the resulting agile transition has taken so far. The positive experiences reported by all employees during the agile transition indicate that an evolutionary transition is suitable for small companies. The experiences concerning the transition process and the positive effects of the selected practices motivate practitioners to start their own agile transition.
C1 [Diebold, Philipp; Theobald, Sven] Fraunhofer IESE, Kaiserslautern, Germany.
   [Diebold, Philipp] Bagilstein GmbH, Mainz, Germany.
   [Wahl, Johannes; Rausch, Yves] TQsoft GmbH, Bad Kreuznach, Germany.
RP Theobald, S (corresponding author), Fraunhofer IESE, Kaiserslautern, Germany.
EM sven.theobald@iese.fraunhofer.de
OI Theobald, Sven/0000-0001-7491-6431; Diebold, Philipp/0000-0002-3910-7898
FU German Federal Ministry of Education and Research
FX German Federal Ministry of Education and Research
CR [Anonymous], 2016, 10 ANN STAT AG REP
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2014, STATUS QUO AGILE 201
   [Anonymous], 2014, P 18 INT C EV ASS SO, DOI DOI 10.1145/2601248.2601254
   Beck K., 2001, Agile manifesto
   Block M., 2011, Proceedings of the 2011 Agile Conference, P234, DOI 10.1109/AGILE.2011.16
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Cvetkovi N, 2017, ANN DAAAM P, V28
   Davis N, 2013, 2013 AGILE CONFERENCE (AGILE), P164, DOI 10.1109/AGILE.2013.21
   Diebold P, 2015, PVM 15
   Diebold P., 2017, WEG UNVOLLSTANDIGEN
   Diebold P, 2015, P ICSSP 15
   Diebold P., 2017, LNBIP, V283, P243, DOI [10.1007/978- 3-319- 57633-6, DOI 10.1007/978-3-319-57633-6]
   Diebold P, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P147, DOI 10.1145/3202710.3203145
   Diebold P, 2015, LECT NOTES BUS INF P, V212, P40, DOI 10.1007/978-3-319-18612-2_4
   Diebold Philipp, 2016, Managing Software Process Evolution, P15
   Hulkko H, 2005, PROC INT CONF SOFTW, P495
   Ikonen M, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P305, DOI 10.1109/ICECCS.2011.37
   Kropp M, 2016, LECT NOTES COMPUT SC, V10027, P416, DOI 10.1007/978-3-319-49094-6_28
   Lucassen G, 2016, LECT NOTES COMPUT SC, V9619, P205, DOI 10.1007/978-3-319-30282-9_14
   Muñoz-Mata Mirna Ariadna, 2015, Rev.fac.ing.univ. Antioquia, P115, DOI 10.17533/udea.redin.n77a14
   Nikitina Natalja, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P140, DOI 10.1109/ICSSP.2012.6225959
   Power K., 2014, AGIL PROCESS SOFTW E, P312
   Schmitt A, 2016, LECT NOTES COMPUT SC, V10027, P360, DOI 10.1007/978-3-319-49094-6_23
   Sison R, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P462, DOI 10.1109/ASPEC.2007.35
   Sutherland J., 2013, The scrum guide. The Definitive Guide to Scrum: The Rules of the Game
NR 26
TC 12
Z9 13
U1 1
U2 58
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2019
VL 31
IS 5
SI SI
AR e2167
DI 10.1002/smr.2167
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY7LJ
UT WOS:000468316500002
DA 2024-07-18
ER

PT J
AU Çetin, E
   Durdu, PO
AF Cetin, Esra
   Durdu, Pinar Onay
TI Blended Scrum model for software development organizations
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile; software development; Scrum; Scrum practices; software process
   models
ID AGILE
AB Software organizations have to develop software in a short time, and quickly respond to changing requirements. Recently, organizations have started to implement agile development models to reduce cost and increase productivity and quality. Scrum, one of the most widely used agile methodologies, is often implemented in various ways that depart in an uncontrolled fashion from the original model, resulting in development methods often called "ScrumBut." Some argue that such incomplete implementations violate Scrum's core practices and philosophy, while others propose that all methodologies should be adapted to organization's unique culture and integrated with their best practices. In this research, a Blended Scrum model was proposed to overcome uncontrolled ScrumBut issues while transitioning to Scrum. The study was organized as a case study in which software professionals working in Scrum teams were interviewed. In addition, a questionnaire was conducted with other software professionals to determine how agile methods, specifically Scrum, were used. The interviews and questionnaire revealed various Scrum practical implementations. The Blended Scrum model was developed by integrating original Scrum with practices that were determined by interviews and questionnaire conducted with software professionals with real-world Scrum experience. Finally, the Blended Scrum model was evaluated by Scrum professionals and received positive feedback.
C1 [Cetin, Esra] Kocaeli Univ, Grad Sch Nat & Appl Sci, Dept Comp Engn, Kocaeli, Turkey.
   [Durdu, Pinar Onay] Kocaeli Univ, Dept Comp Engn, Fac Engn, Kocaeli, Turkey.
C3 Kocaeli University; Kocaeli University
RP Durdu, PO (corresponding author), Kocaeli Univ, Dept Comp Engn, Fac Engn, Kocaeli, Turkey.
EM pinar.onaydurdu@kocaeli.edu.tr
RI DURDU, PINAR ONAY/F-6720-2018
OI DURDU, PINAR ONAY/0000-0002-0439-1702
CR Akif R., 2012, Int J Sci Eng Res, V3, P1
   Ambler S., 2008, AGILE ADOPTION RATE
   [Anonymous], PRETTY GOOD SCRUM SE
   [Anonymous], SAIS 2018 P 26
   [Anonymous], YAZLM GELITIRME SURE
   [Anonymous], FRACTIONAL SCRUM SCR
   [Anonymous], OLAY INCELEMESININ T
   [Anonymous], 5 ANN AGIL REP
   [Anonymous], 12 ANN STAT AG REP
   [Anonymous], WHAT IS SCRUMBUT
   [Anonymous], K SCHWABER SCRUM
   [Anonymous], YTU FBE YUKSEK LISAN
   [Anonymous], IMPROVEMENT SUCCESS
   [Anonymous], 1990, QUALITATIVE EVALUATI
   [Anonymous], 2002, AGILE SOFTWARE DEV S
   [Anonymous], INT J SOFTWARE ENG I
   [Anonymous], SCRUMBUTS MODIFYING
   [Anonymous], SCRUMBUT TEST AKA NO
   [Anonymous], 2000, QUESTIONNAIRE DESIGN
   [Anonymous], 23 INT C SOFTW ENG K
   [Anonymous], 2013, The Scrum Guide
   [Anonymous], THESIS
   [Anonymous], WHAT PRACTITIONERS V
   Ardito C, 2016, HUMAN COMPU, P117, DOI 10.1007/978-3-319-32165-3_5
   Ashraf Sara, 2018, International Journal of Modern Education and Computer Science, V10, P24, DOI 10.5815/ijmecs.2018.01.03
   Black J.A., 1976, Methods and issues in social research
   Boehm B, 2004, PROC INT CONF SOFTW, P718, DOI 10.1109/ICSE.2004.1317503
   Bryman A., 1992, Mixing methods: Qualitative and quantitative research, P57
   Carew PJ., 2017, GLOB J FLEX SYST MAN, V18, P275, DOI DOI 10.1007/S40171-017-0162-8
   Cho J., 2009, ISSUES INFORM SYSTEM, VX, P340, DOI DOI 10.48009/2_IIS_2009_340-348
   Denzin N.K., 1994, The international encyclopedia of education, P6461
   Eloranta VP, 2016, INFORM SOFTWARE TECH, V74, P194, DOI 10.1016/j.infsof.2015.12.003
   Fitriani WR, 2016, INT C ADV COMP SCI I, P155, DOI 10.1109/ICACSIS.2016.7872736
   Gall D., 1996, Educational research an introduction
   Glesne C., 1999, BECOMING QUALITATIVE
   Hanssen G K., 2016, Agile processes, in software engineering, and extreme programming: 17th international conference, XP 2016, P367, DOI DOI 10.1007/978-3-319-33515-5_8
   Harvie DP, 2016, IEEE T SOFTWARE ENG, V42, P476, DOI 10.1109/TSE.2015.2489654
   Hayata T., 2011, 2011 IEEE International Conference on Service Operations and Logistics and Informatics (SOLI), P285, DOI 10.1109/SOLI.2011.5986572
   Heikkila Ville T., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P85, DOI 10.1109/ESEM.2013.27
   Hossain Emam, 2011, INT C SOFTWARE SYSTE, P110, DOI [10.1145/1987875.1987894, DOI 10.1145/1987875.1987894]
   Husen T., 1994, The International Encyclopaedia of Education, P5051
   Lehtinen TOA, 2017, EMPIR SOFTW ENG, V22, P2409, DOI 10.1007/s10664-016-9464-2
   Lorber AA, 2013, 2013 AGILE CONFERENCE (AGILE), P156, DOI 10.1109/AGILE.2013.20
   Paasivaara M, 2016, INT CONF GLOBAL SOFT, P74, DOI 10.1109/ICGSE.2016.34
   Paasivaara M, 2009, INT CONF GLOBAL SOFT, P195, DOI 10.1109/ICGSE.2009.27
   Pauly D, 2015, P ANN HICSS, P5074, DOI 10.1109/HICSS.2015.601
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Pries-Heje L., 2011, Proceedings of the 2011 Agile Conference, P20, DOI 10.1109/AGILE.2011.34
   Przybylek A, 2017, FED CONF COMPUT SCI, P1211, DOI 10.15439/2017F423
   Rahayu P, 2016, 2016 INT C INF TECHN, P1, DOI DOI 10.1109/ICITSI.2016.7858222
   Sandelowski M, 2000, RES NURS HEALTH, V23, P334, DOI 10.1002/1098-240X(200008)23:4<334::AID-NUR9>3.0.CO;2-G
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Schwaber K., 2010, Scrum
   Shastri Y, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P45, DOI 10.1145/3021460.3021465
   Shastri Y, 2016, ASIA PAC SOFWR ENG, P57, DOI [10.1109/APSEC.2016.019, 10.1109/APSEC.2016.28]
   Silva Ana, 2017, P 21 INT C EVALUATIO, P364, DOI [10.1145/3084226.3084262, DOI 10.1145/3084226.3084262]
   Silverman SueWilliam., 2009, Fearless Confessions: A Writer's Guide to Memoir
   Smits H, 2007, AGILE 2007, Proceedings, P371, DOI 10.1109/AGILE.2007.34
   Souza JP, 2017, COMM COM INF SC, V680, P131, DOI 10.1007/978-3-319-55907-0_12
   Tsui F.F., 2013, Essentials of Software Engineering
   Wolcott H. F., 1994, Transforming qualitative data: Description, analysis, and interpretation
   Yildirim A., 2008, Sosyal Bilimlerde Nitel Arastirma Yontemleri, 6
   Yin RK, 2002, Applied Social Research Methods Series, V34
NR 64
TC 3
Z9 4
U1 10
U2 100
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2019
VL 31
IS 2
AR e2147
DI 10.1002/smr.2147
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL7GF
UT WOS:000458906200006
DA 2024-07-18
ER

PT J
AU González, AH
   Calero, C
   Parra, DP
   Mancebo, J
AF Hernandez Gonzalez, Anaisa
   Calero, Coral
   Perez Parra, Dianelys
   Mancebo, Javier
TI Approaching Green BPM characterisation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE BPM; Green BPM; Green business process management; SLR; systematic
   literature review
ID MANAGEMENT; FRAMEWORK; INDICATORS; DESIGN
AB Sustainable development is a type of development that meets the needs of the present without compromising the ability of future generations to meet their own needs. Sustainability has recently become more and more important for businesses. This has led to what is known as Green BPM (Green business process management), in which sustainability is considered to be a business objective. The objective of this work was to carry out a systematic literature review in order to evaluate how the subject of Green BPM has evolved and how the term "Green BPM" has been conceptualised so as to propose a new definition compiled from those previously formulated; identify the impact of the incorporation of Green aspects into the BPM life cycle stages; and discover the impact of Green BPM research efforts by means of the PDCA (plan-do-check-act) model, thus identifying (1) the goals that have been proposed when Green initiatives are carried out in BPM, (2) the context in which this has been applied, and (3) the performance indicators considered. Finally, we propose a new characteristic, Process Greenability, together with its subcharacteristics, in addition to identifying the relationship between these subcharacteristics and the indicators identified to make them measurable.
C1 [Hernandez Gonzalez, Anaisa; Perez Parra, Dianelys] Univ Tecnol La Habana Jose Antonio Echeverria CUJ, Sch Comp Engn, Dept Software Engn, Havana, Cuba.
   [Calero, Coral; Mancebo, Javier] Univ Castilla La Mancha, Escuela Super Informat, Dept Technol & Informat Syst, Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP Mancebo, J (corresponding author), Univ Castilla La Mancha, Escuela Super Informat, Dept Technol & Informat Syst, Ciudad Real, Spain.
EM javier.mancebo@uclm.es
RI Calero, Coral/D-4319-2011; Mancebo Pavon, Javier/C-6401-2017
OI Mancebo Pavon, Javier/0000-0001-9473-6710; Hernandez Gonzalez,
   Anaisa/0000-0003-1169-301X
FU Ministerio de Economia y Competitividad; Fondo Europeo de Desarrollo
   Regional FEDER [TIN2015-70259-C2-1-R]; Consejeria de Educacion, Cultura
   y Deportes de la Direccion General de Universidades, Investigacion e
   Innovacion de la JCCM [SBPLY/17/180501/000364]
FX Ministerio de Economia y Competitividad and Fondo Europeo de Desarrollo
   Regional FEDER, Grant/Award Number: TIN2015-70259-C2-1-R; Consejeria de
   Educacion, Cultura y Deportes de la Direccion General de Universidades,
   Investigacion e Innovacion de la JCCM, Grant/Award Number:
   SBPLY/17/180501/000364
CR Ahmed MD, 2012, DECIS SUPPORT SYST, V53, P611, DOI 10.1016/j.dss.2012.02.004
   [Anonymous], 2011, ALP CONV SUST RUR DE
   Azevedo SG, 2012, IEEE T ENG MANAGE, V59, P753, DOI 10.1109/TEM.2012.2189108
   Barbian D, 2013, PROC EUR CONF INTELL, P38
   Becker C, 2014, ARXIV14106968
   Benedict T., 2013, BPM CBOK VERSION 3 0
   Betz S., 2014, P 28 ENV C OLD
   Betz S, 2014, 2014 IEEE FOURTH INTERNATIONAL CONFERENCE ON BIG DATA AND CLOUD COMPUTING (BDCLOUD), P612, DOI 10.1109/BDCloud.2014.113
   Bocken NMP, 2014, J CLEAN PROD, V65, P42, DOI 10.1016/j.jclepro.2013.11.039
   Calero C., 2015, Green in Software Engineering, P231, DOI DOI 10.1007/978-3-319-08581-410
   Cappiello C., 2011, 2011 IEEE International Conference on Intelligent Computer Communication and Processing, P463, DOI 10.1109/ICCP.2011.6047917
   Cleven A., 2012, Green Business Process Management, P111, DOI DOI 10.1007/978-3-642-27488-6
   De Soete W, 2016, SYSTEMS-BASEL, V4, DOI 10.3390/systems4010016
   Donnelly K, 2006, J CLEAN PROD, V14, P1357, DOI 10.1016/j.jclepro.2005.11.029
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Genero M, 2014, METODOS INVESTIGACIO, P199
   Ghose A., 2010, AUSTRALAS J INF SYST, V16, P2
   Gohar SR, 2016, ARXIV160602459
   Grauler M., 2013, WIRTSCHAFTSINF, P68
   Hailemariam G, 2010, BUS PROC MAN WORKSH
   Hasan H., 2012, Green Business Process Management, P39
   Hoesch-Klohe Konstantin, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P386, DOI 10.1109/SCC.2010.21
   Hoesch-Klohe K, 2010, ICSOC WORKSH SPRING, P193
   Hoesch-Klohe K., 2012, 1 INT WORKSH REQ ENG
   Hoesch-Klohe K, 2012, ENV AWARE BUSINESS P, P265
   Hoesch-Klohe K, 2010, LECT NOTES COMPUT SC, V6470, P551, DOI 10.1007/978-3-642-17358-5_38
   Houy C., 2011, BUSINESS PROCESS MAN, V66, P501
   Houy C., 2012, Green Business Process Management, P75, DOI DOI 10.1007/978-3-642-27488-6
   Jakobi T., 2014, ENVIROINFO
   Joung CB, 2013, ECOL INDIC, V24, P148, DOI 10.1016/j.ecolind.2012.05.030
   Kocmanová A, 2014, J BUS ECON MANAG, V15, P1017, DOI 10.3846/16111699.2013.791637
   Kroeger TA, 2014, INFORM SOFTWARE TECH, V56, P252, DOI 10.1016/j.infsof.2013.10.003
   Kuppusamy M, 2015, INT J APPL BUSINESS, V13, P259
   Lee SY, 2015, SUSTAINABILITY-BASEL, V7, P14521, DOI 10.3390/su71114521
   Loos P, 2011, BUSINESS INF SYS ENG, V3
   Lübbecke P, 2016, P ANN HICSS, P1049, DOI 10.1109/HICSS.2016.134
   Lübbecke P, 2015, P ANN HICSS, P866, DOI 10.1109/HICSS.2015.109
   Morioka SN, 2016, J CLEAN PROD, V136, P134, DOI 10.1016/j.jclepro.2016.01.104
   Muñoz E, 2013, J CLEAN PROD, V47, P149, DOI 10.1016/j.jclepro.2012.11.032
   Nowak Alexander, 2013, 2013 17th IEEE International Enterprise Distributed Object Computing Conference (EDOC 2013), P259, DOI 10.1109/EDOC.2013.36
   Nowak A., 2011, Proceedings of the 2011 IEEE 9th International Conference on Dependable, Autonomic and Secure Computing (DASC 2011), P569, DOI 10.1109/DASC.2011.105
   Nowak Alexander, 2011, Information and Communication on Technology for the Fight against Global Warming. Proceedings First International Conference (ICT-GLOW 2011), P150, DOI 10.1007/978-3-642-23447-7_14
   Nowak A., 2014, P ADVCOMP, P132
   Nowak A., 2011, P 18 C PATTERN LANGU, P6, DOI [10.1145/2578903.2579144, DOI 10.1145/2578903.2579144]
   Nowak A., 2013, P 20 C PATT LANG PRO, V18, P1
   Nowak A, 2013, OVERVIEW IMPLICIT GR, P1
   Nowak A, 2013, IEEE INT CONF SERV, P168, DOI 10.1109/SOCA.2013.11
   Nowak A, 2012, COMPUTING, V94, P463, DOI 10.1007/s00607-012-0188-x
   Nowak A, 2011, LECT NOTES COMPUT SC, V6568, P187, DOI 10.1007/978-3-642-19394-1_20
   Olsson S, 2015, SUSTAINABILITY-BASEL, V7, P6336, DOI 10.3390/su7066336
   Opitz N., 2012, KICK STARTING GREEN
   Opitz N, 2014, PACIS, P12
   Opitz N, 2014, P ANN HICSS, P3808, DOI 10.1109/HICSS.2014.473
   Pei XY, 2014, ADV MATER RES-SWITZ, V838-841, P3087, DOI 10.4028/www.scientific.net/AMR.838-841.3087
   Peko G, 2014, MOBILE NETW APPL, V19, P608, DOI 10.1007/s11036-014-0525-8
   Recker J., 2012, Green Business Process Management, P93, DOI DOI 10.1007/978-3-642-27488-66
   Reiter M, 2014, P ANN HICSS, P885, DOI 10.1109/HICSS.2014.117
   Rocha RD, 2013, INFORM SOFTWARE TECH, V55, P1355, DOI 10.1016/j.infsof.2013.02.007
   Rozman T., 2015, COMMUN COMPUT PHYS, V22nd, P247
   Schmidt NH., 2012, GREEN BUSINESS PROCE, DOI [10.1007/978-3-642-27488-6_13, DOI 10.1007/978-3-642-27488-6_13]
   Seidel S., 2012, ACIS 2012 LOCATION L, P1
   Seidel S., 2011, WORKING PAPERS INFOR, V11
   Seidel S., 2012, Green Business Process Management, P3, DOI DOI 10.1007/978-3-642-27488-61
   Shrake SO, 2012, IEEE POTENTIALS, V31, P10, DOI 10.1109/MPOT.2011.943055
   Stolze C, 2012, SUSTAINABILITY BUSIN
   Tan Y, 2011, COMP MAN CAMAN 2011, P1
   Thies H., 2012, Green Business Process Management, P181, DOI DOI 10.1007/978-3-642-27488-611
   Trappey AJC, 2013, INT C COMP SUPP COOP, P639, DOI 10.1109/CSCWD.2013.6581035
   Unhelkar B, 2012, HARNESSING GREEN IT, P149
   van dersAalst WM, 2003, LNCS, V2678
   vom Brocke J., 2012, Green business process management: Towards the sustainable enterprise
   Walson R., 2012, GREEN BUSINESS PROCE, P147
   Wang Ke., 2012, PERFORMANCE RECONFIG, P1
   Wati Y, 2011, P 2011 44 HAW INT C, P1
   Wesumperuma A., 2013, P 24 AUSTR C INF SYS, P1
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yale, 2010, 2010 ENV PERF IND
   Zeise N, 2012, GREEN BUSINESS PROCE, P131
   Zhang H, 2013, INFORM SOFTWARE TECH, V55, P1341, DOI 10.1016/j.infsof.2012.09.008
   Zhang Z.H., 2000, ENV MANAGEMENT HLTH, V11, P139, DOI [10.1108/09566160010321541, DOI 10.1108/09566160010321541]
NR 81
TC 10
Z9 10
U1 10
U2 40
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2019
VL 31
IS 2
AR e2145
DI 10.1002/smr.2145
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL7GF
UT WOS:000458906200003
DA 2024-07-18
ER

PT J
AU Erdogan, O
   Pekkaya, ME
   Gök, H
AF Erdogan, Onur
   Pekkaya, Muhammed Emre
   Gok, Halime
TI More effective sprint retrospective with statistical analysis
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE process improvement; product quality; productivity; Scrum; sprint
   retrospective; statistical analysis
ID SCRUM
AB Scrum teams aim to deliver products productively with highest possible value and quality, so they try to deliver high priority and high value product backlog items in earlier sprints. Making size estimation of product backlog items correctly is one of the most prominent factors for effective sprint planning. Retrospective meetings are an opportunity for teams to improve product quality, their productivity, and estimation capability. Enhancing in those areas requires empiricism as agility requires; hence, measureable indicators should be inspected and adapted at regular intervals. In this study, we assessed how and what kind of historical data is required to be collected for monitoring, and how statistical analysis can be investigated for inspection and adaptation in retrospective meetings. We experimented that statistics of Correlation between Story Point and Actual Effort and Consistency of Relative Estimation were convenient for inspection and adaptation of estimation capability of teams. Past retrospective meetings also showed that statistics of Team's Actual Effort on Product, Team Velocity, Actual Effort for One Story Point, Innovation Rate, and Velocity vs Unplanned Effort Rate were helpful to control and increase the productivity of teams. Actual Effort Rate of Quality Activities and Subcomponent Defect Density statistical results helped to enhance product quality.
C1 [Erdogan, Onur; Pekkaya, Muhammed Emre; Gok, Halime] Sci & Technol Res Council Turkey TUBITAK, Informat & Informat Secur Res Ctr BILGEM, Software Technol Res Inst YTE, Ankara, Turkey.
C3 Turkiye Bilimsel ve Teknolojik Arastirma Kurumu (TUBITAK)
RP Erdogan, O (corresponding author), Sci & Technol Res Council Turkey TUBITAK, Informat & Informat Secur Res Ctr BILGEM, Software Technol Res Inst YTE, Ankara, Turkey.
EM onur.erdogan@tubitak.gov.tr
RI AydÄ±n, Ebru/D-1403-2010
CR Akole A, 2016, WHAT IS RELATIONSHIP
   [Anonymous], 2015, BAS SCRUM AG
   Chrissis M., 2011, CMMI DEV GUIDELINES
   Cohn M., 2005, Agile Estimating and Planning
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Diebold P, 2015, AGIL PROCESS SOFTW E, P1
   Downey S, 2013, P ANN HICSS, P4870, DOI 10.1109/HICSS.2013.471
   ESI International an informa business, 2010, ESI INT INFORMA BUSI, P1
   Fuqua A, 2014, DONT ESTIMATE STORIE
   Glazer Hillel., 2008, Cmmi or agile: Why not embrace both!
   Kniberg H, 2007, SCRUM XP TRENCHES DO
   Lei H, 2017, ROBOT CIM-INT MANUF, V43, P59, DOI 10.1016/j.rcim.2015.12.001
   Mahnic V, 2012, ELEKTRON ELEKTROTECH, V18, P73, DOI 10.5755/j01.eee.18.8.2630
   Padmanabhan V, MAINTAINING QUALITY
   Potter N., 2009, The Process Group-Post newsletter, V16, P1
   Rawsthorne D, 2010, AGILE METRICS
   Schwaber K., 2013, DEFINITIVE GUIDE SCR
   SEI, 2010, CMMI DEV VERS 1 3 CM, P482
   Villanueva G, 2014, SCRUM CONTINUOUS PRO
   Williams L., 2011, Proceedings of the 2011 5th International Symposium on Empirical Software Engineering and Measurement (ESEM 2011), P463, DOI 10.1109/ESEM.2011.65
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
NR 21
TC 4
Z9 5
U1 0
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2018
VL 30
IS 5
SI SI
AR e1933
DI 10.1002/smr.1933
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GI1OG
UT WOS:000434139400002
DA 2024-07-18
ER

PT J
AU Aivaloglou, E
   Hoepelman, D
   Hermans, F
AF Aivaloglou, Efthimia
   Hoepelman, David
   Hermans, Felienne
TI Parsing Excel formulas: A grammar and its application on 4 large
   datasets
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT 15th IEEE International Working Conference on Source Code Analysis and
   Manipulation (SCAM)
CY SEP 27-28, 2015
CL Bremen, GERMANY
SP IEEE, IEEE Comp Soc, Tech Council Software Engn, Gramma Tech Inc, Microsoft Res
DE formula grammar; spreadsheets; syntax
AB Spreadsheets are popular end user programming tools, especially in the industrial world. This makes them interesting research targets. However, there does not exist a reliable grammar that is concise enough to facilitate formula parsing and analysis and to support research on spreadsheet codebases. This paper presents a grammar for spreadsheet formulas that can successfully parse 99.99% of more than 8 million unique formulas extracted from 4 spreadsheet datasets. Our grammar is compatible with the spreadsheet formula language, recognizes the spreadsheet formula elements that are required for supporting spreadsheets research, and produces parse trees aimed at further manipulation and analysis. Additionally, we use the grammar to analyze the characteristics of the formulas of the 4 datasets in 3 different dimensions: complexity, functionality, and data utilization. Our results show that (1) most Excel formulas are simple, however formulas with more than 50 functions or operations exist, (2) almost all formulas use data from other cells, which is often not local, and (3) a surprising number of referring mechanisms are used by less than 1% of the formulas.
C1 [Aivaloglou, Efthimia; Hoepelman, David; Hermans, Felienne] Delft Univ Technol, Software Engn Res Grp, Mekelweg 4, NL-2628 CD Delft, Netherlands.
C3 Delft University of Technology
RP Aivaloglou, E (corresponding author), Delft Univ Technol, Software Engn Res Grp, Mekelweg 4, NL-2628 CD Delft, Netherlands.
EM e.aivaloglou@tudelft.nl
RI Hermans, Felienne/AAS-2175-2021
OI Aivaloglou, Efthimia/0000-0002-6531-2166
CR ABREU R, 2014, SMELLING FAULTS IN S, P111, DOI DOI 10.1109/ICSME.2014.33
   AIVALOGLOU E, 2015, A GRAMMAR FOR SPREAD, P121
   [Anonymous], 2013, P 2013 C CTR ADV STU
   [Anonymous], 2007, Technical report
   BADAME S, 2012, REFACTORING MEETS SP, P399
   BARIK T, 2015, FUSE A REPRODUCIBLE, P486, DOI DOI 10.1109/MSR.2015.70
   BELL D, 1993, SIGPLAN NOTICES, V28, P26, DOI 10.1145/165364.165373
   CHEUNG SC, 2016, CUSTODES AUTOMATIC S, P464, DOI DOI 10.1145/2884781.2884796
   CUNHA J, 2012, TOWARDS A CATALOG OF, V7336, P202
   DOU W, 2016, DETECTING TABLE CLON, P787, DOI DOI 10.1145/2950290.2950359
   Dou WS, 2017, IEEE T SOFTWARE ENG, V43, P226, DOI 10.1109/TSE.2016.2584059
   Fischer Bernd, 2012, Software Language Engineering. 4th International Conference, SLE 2011. Revised Selected Papers, P324, DOI 10.1007/978-3-642-28830-2_18
   Fisher Marc, 2005, P 1 WORKSHOP END USE, P1
   HERMANS F, 2011, SUPPORTING PROFESSIO, P451
   HERMANS F, 2016, SPREADSHEETS ARE COD, P56, DOI DOI 10.1109/SANER.2016.86
   HERMANS F, 2013, DATA CLONE DETECTION, P292
   Hermans F, EXCEL TURING MACHINE
   HERMANS F, 2012, DETECTING AND VISUAL, P441
   Hermans F, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P747, DOI 10.1145/2635868.2661673
   Klimt B, 2004, LECT NOTES COMPUT SC, V3201, P217
   Lämmel R, 2009, LECT NOTES COMPUT SC, V5423, P246
   Microsoft, EXC XLSX EXT OFF OP
   Microsoft, EXC FUNCT ALPH
   SCAFFIDI C, 2005, ESTIMATING NUMBERS E, P207
   Shiozawa H., 1999, Proceedings 1999 IEEE Symposium on Information Visualization (InfoVis'99), P79, DOI 10.1109/INFVIS.1999.801861
   USA Bureau of Labor Statistics, 2005, TECHNICAL REPORT
   VanDenBrand M., 1997, P 2 INT C THEOR PRAC, P6, DOI [10.5555/2227706.2227712, DOI 10.5555/2227706.2227712]
   Winston W. L., 2001, OR MS TODAY, V28, P8
   Zaytsev VV, 2010, THESIS
NR 29
TC 3
Z9 4
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2017
VL 29
IS 12
SI SI
AR e1895
DI 10.1002/smr.1895
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA FQ1BL
UT WOS:000418091000004
DA 2024-07-18
ER

PT J
AU Fleck, M
   Troya, J
   Wimmer, M
AF Fleck, Martin
   Troya, Javier
   Wimmer, Manuel
TI Search-based model transformations
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE model transformation; transformation orchestration; model-driven
   engineering; searchbased; software engineering
ID ALGORITHM; MODULARIZATION; ENVIRONMENT; STATISTICS; TOOL
AB Model transformations are an important cornerstone of model-driven engineering, a discipline which facilitates the abstraction of relevant information of a system as models. The success of the final system mainly depends on the optimization of these models through model transformations. Currently, the application of transformations is realized either by following the apply-as-long-as-possible strategy or by the provision of explicit rule orchestrations. This implies two main limitations. First, the optimization objectives are implicitly hidden in the transformation rules and their orchestration. Second, manually finding the best orchestration for a particular scenario is a major challenge due to the high number of possible combinations.
   To overcome these limitations, we present a novel framework that builds on the non-intrusive integration of optimization and model transformation technologies. In particular, we formulate the transformation orchestration task as an optimization problem, which allows for the efficient exploration of the transformation space and explication of the transformation objectives. Our generic framework provides several search algorithms and guides the user in providing a proper search configuration. We present different instantiations of our framework to demonstrate its feasibility, applicability, and benefits using several case studies. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Fleck, Martin; Wimmer, Manuel] TUWien, Inst Software Technol & Interact Syst, Business Informat Grp, Vienna, Austria.
   [Troya, Javier] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
C3 Technische Universitat Wien; University of Sevilla
RP Fleck, M (corresponding author), TUWien, Inst Software Technol & Interact Syst, Business Informat Grp, Vienna, Austria.
EM fleck@big.tuwien.ac.at
RI Troya, Javier/B-6951-2017
OI Troya, Javier/0000-0002-1314-9694
FU European Commission [317859]; Christian Doppler Forschungsgesellschaft;
   BMWFW, Austria; Spanish and the Andalusian RDI programmes
   [TIN2015-70560-R, P10-TIC-5960, P12-TIC-1867]
FX The authors thank the anonymous reviewers for their insightful and
   constructive comments and suggestions. This work is funded by the
   European Commission under FEDER and under ICT Policy Support Programme,
   grant no. 317859, by the Christian Doppler Forschungsgesellschaft and
   the BMWFW, Austria, and by the Spanish and the Andalusian R&D&I
   programmes under grants and projects BELI (TIN2015-70560-R), THEOS
   (P10-TIC-5960) and COPAS (P12-TIC-1867).
CR Abdeen H., 2011, 2011 18th Working Conference on Reverse Engineering, P394, DOI 10.1109/WCRE.2011.55
   Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Abdeen H, 2009, WORK CONF REVERSE EN, P103, DOI 10.1109/WCRE.2009.13
   Agrawal A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ASE.2003.1240339
   [Anonymous], 1988, Statistical power analysis for the behavioral sciences
   [Anonymous], P WORKSH SCAL MOD DR
   [Anonymous], OBJ CONSTR LANG OCL
   [Anonymous], EMF REF 2015
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], MET FAC MOF 2 0 COR
   [Anonymous], P 6 TRANSF TOOL CONT
   [Anonymous], 2014, P AMT MODELS 14
   [Anonymous], P 1 INT WORKSH COMB
   [Anonymous], P 2 INT WORKSH MOD D
   [Anonymous], 2015, NASBASE
   [Anonymous], P 2 WORKSH AN MOD TR
   [Anonymous], P 40 HAW INT INT C S
   [Anonymous], ELECT COMMUNICATIONS
   [Anonymous], P IEEE INT WORK C SO
   [Anonymous], P 8 C GEN EV COMP GE
   [Anonymous], 2003, 2003002 IND I TECHN
   [Anonymous], P FED C COOPIS DOA O
   Arendt T, 2013, AUTOMAT SOFTW ENG, V20, P141, DOI 10.1007/s10515-012-0114-7
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Baki I, 2014, LECT NOTES COMPUT SC, V8767, P636, DOI 10.1007/978-3-319-11653-2_39
   Banos MD, 2011, LECT NOTES COMPUT SC, V6956, P267, DOI 10.1007/978-3-642-23716-4_23
   Bechikh S, 2011, SOFT COMPUT, V15, P1807, DOI 10.1007/s00500-011-0694-3
   ben Fadhel A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P212, DOI 10.1109/ICSM.2012.6405274
   Bergmayr A, 2014, LECT NOTES COMPUT SC, V8767, P552, DOI 10.1007/978-3-319-11653-2_34
   Berry A, 2014, ANN MATH ARTIF INTEL, V72, P45, DOI 10.1007/s10472-014-9418-6
   Biermann E., 2010, Electron. Commun. Eur. Assoc. Softw. Sci. Technol, V26, P1, DOI [10.14279/tuj.eceasst.26.353, DOI 10.14279/TUJ.ECEASST.26.353]
   Born K, 2015, LECT NOTES COMPUT SC, V9033, P165, DOI 10.1007/978-3-662-46675-9_11
   Bruneliere Hugo., 2010, P IEEEACM INT C AUTO, P173, DOI DOI 10.1145/1858996.1859032
   Chen ZB, 2009, SCI COMPUT PROGRAM, V74, P168, DOI 10.1016/j.scico.2008.08.003
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Clavel M., 2007, ALL MAUDE A HIGH PER, DOI DOI 10.1007/978-3-540-71999-1
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, P151
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Denil J, 2014, LECT NOTES COMPUT SC, V8769, P80, DOI 10.1007/978-3-319-11743-0_6
   Drago ML, 2015, COMPUT SCI-RES DEV, V30, P1, DOI 10.1007/s00450-011-0202-0
   Drago ML, 2011, LECT NOTES COMPUT SC, V6981, P2, DOI 10.1007/978-3-642-24485-8_2
   Fatiregun D, 2003, LECT NOTES COMPUT SC, V2724, P2511
   Faunes Martin, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P17, DOI 10.1007/978-3-642-38883-5_2
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Genero M, 2005, METRICS FOR SOFTWARE CONCEPTUAL MODELS, P1, DOI 10.1142/9781860946066
   GLOVER F, 1986, COMPUT OPER RES, V13, P533, DOI 10.1016/0305-0548(86)90048-1
   GODIN R, 1993, SIGPLAN NOTICES, V28, P394, DOI 10.1145/167962.165931
   Gogolla Martin., 2014, Workshop on the Analysis of Model Transformations (AMT), P24
   Goldberg D. E., 1985, P 1 INT C GEN ALG TH, P154
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2002, GEN EV COMP C GECCO, P1351
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2010, LECT NOTES COMPUT SC, V6013, P1, DOI 10.1007/978-3-642-12029-9_1
   Holland I.H., 1975, ADAPTATION NATURAL A
   HOLT RC, 1983, CONCURRENT EUCLID UN
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kappel Gerti, 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P197, DOI 10.1007/978-3-642-28279-9_15
   Kessentini M, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P51, DOI 10.1109/CMSBSE.2013.6604438
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Kessentini M, 2010, LECT NOTES COMPUT SC, V6138, P156, DOI 10.1007/978-3-642-13595-8_14
   Kessentini M, 2008, LECT NOTES COMPUT SC, V5301, P159, DOI 10.1007/978-3-540-87875-9_12
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kleiner Mathias, 2013, Modelling Foundations and Applications. 9th European Conference, ECMFA 2013. Proceedings. LNCS 7949, P54, DOI 10.1007/978-3-642-39013-5_5
   Kolandouz-Rahimi S, 2014, SCI COMPUT PROGRAM, V85, P5, DOI 10.1016/j.scico.2013.07.013
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Kurtev I, 2008, LECT NOTES COMPUT SC, V5088, P377
   Lano K, 2013, ELECTRON PROC THEOR, P8, DOI 10.4204/EPTCS.135.2
   Law A., 1999, Simulation Modeling and Analysis, V3rd
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Masoud H, 2014, J SYST SOFTWARE, V93, P110, DOI 10.1016/j.jss.2014.02.053
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mitchell BS, 2008, SOFT COMPUT, V12, P77, DOI 10.1007/s00500-007-0218-3
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mkaouer W, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1263, DOI 10.1145/2576768.2598366
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   O'Keeffe M., 2003, PPPJ 03, P59, DOI [10.1145/957289.957308, DOI 10.1145/957289.957308]
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Rivera JE, 2009, S VIS LANG HUM CEN C, P51, DOI 10.1109/VLHCC.2009.5295300
   Romano Jeanine, 2006, ANN M FLOR ASS I RES, V177, P34
   Saada H, 2013, IEEE INT CONF AUTOM, P688, DOI 10.1109/ASE.2013.6693134
   Schatz Bernhard, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P173, DOI 10.1109/ECBS.2010.25
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Shelburg Jeffery, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P209, DOI 10.1007/978-3-642-39742-4_16
   Sheskin J.D., 2004, Handbook of Parametric and Nonparametric Statistical Procedures, VThird
   Smith JS, 2003, J MANUF SYST, V22, P157, DOI 10.1016/S0278-6125(03)90013-6
   Syriani E., 2013, JOINT P MODELS 13 DE, P21
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   Visser E., 2001, Electronic Notes in Theoretical Computer Science, V57, DOI 10.1016/S1571-0661(04)00270-1
   YOURDON E, 1979, STRUCTURED DESIGN FU
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 105
TC 20
Z9 20
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2016
VL 28
IS 12
SI SI
BP 1081
EP 1117
DI 10.1002/smr.1804
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ2JF
UT WOS:000393035400004
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Rust, P
   Flood, D
   McCaffery, F
AF Rust, Peter
   Flood, Derek
   McCaffery, Fergal
TI Creation of an IEC 62304 compliant software development plan
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT Conference on European System and Software Process Improvement and
   Innovation Initiative (EuroSPI2)
CY SEP 30-OCT 02, 2015
CL Ankara Univ, Ankara, TURKEY
HO Ankara Univ
DE IEC 62304; medical device software development plan; regulatory
   compliance; software process improvement; software process improvement
   roadmaps
ID MEDICAL DEVICE; IMPLEMENTATION
AB Organizations engaged in medical device software development are required to demonstrate compliance with a set of medical device standards and regulations before the device can be marketed. One such standard IEC 62304, Medical Device SoftwareSoftware Life Cycle Processes, defines the processes that are required in order to develop safe software. Demonstrating compliance with IEC 62304 can be problematic for organizations that are new to or have limited experience in the domain. The standard defines what processes must be carried out but does not state how. In a review of a number of such organizations, it was found that the development of a software development plan proved to be a difficult task. In this work we have created a software development plan template to assist organizations with this arduous task. The software development plan template will be validated with these organizations as part of the future work.
C1 [Rust, Peter; Flood, Derek; McCaffery, Fergal] Dundalk Inst Technol, Comp, Dundalk, Ireland.
C3 Dundalk Institute of Technology
RP Rust, P (corresponding author), Dundalk Inst Technol, Comp, Dundalk, Ireland.
EM peter.rust@dkit.ie
OI Mc Caffery, Fergal/0000-0002-0839-8362
CR *AAMI, 2001, SW682001 AAMI ANSI
   Alemzadeh H, 2013, IEEE SECUR PRIV, V11, P14, DOI 10.1109/MSP.2013.49
   [Anonymous], 2019, MEDICAL LAB ACCREDIT
   [Anonymous], 2006, 623042006 IEC, V3
   Eagles S, 62304 TIR32 TRAINING
   Flood D., 2013, CCIS, V364, P25
   Flood D, 2015, J SOFTW-EVOL PROC, V27, P319, DOI 10.1002/smr.1711
   Hall L., 2013, SPACE TECHNOLOGY ROA
   Höss A, 2014, RADIAT ONCOL, V9, DOI 10.1186/1748-717X-9-79
   IEEE Standards Board, 1998, 10581998 IEEE STAND
   International Organization for Standardization, 2007, 149712007 ISO
   McConnell S., 1997, Software Project Survival Guide
   McFeeley R., 1995, SOFTWARE PROCESS IMP
   McHugh M, 2011, COMM COM INF SC, V155, P97
   Phaal R., 2011, Public-domain roadmaps
   Rust P, 2015, SPICE 2015
   Wallace DoloresR., 2001, International Journal of Reliability Quality and Safety Engineering, V8, P351, DOI DOI 10.1142/S021853930100058X
NR 17
TC 4
Z9 5
U1 1
U2 20
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2016
VL 28
IS 11
BP 1005
EP 1010
DI 10.1002/smr.1826
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA ED0WX
UT WOS:000388564700009
OA Green Accepted
DA 2024-07-18
ER

PT J
AU de Gea, JMC
   Nicolás, J
   Alemán, JLF
   Toval, A
   Ouhbi, S
   Idri, A
AF Carrillo de Gea, Juan M.
   Nicolas, Joaquin
   Fernandez Aleman, Jose L.
   Toval, Ambrosio
   Ouhbi, Sofia
   Idri, Ali
TI Co-located and distributed natural-language requirements specification:
   traditional versus reuse-based techniques
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE experiment; global software development; internationalisation;
   requirements reuse; requirements specification; software engineering
   education
ID GLOBAL SOFTWARE-DEVELOPMENT; ENGINEERING PRACTICES; CHALLENGES; MODELS;
   TOOLS
AB Requirements Engineering (RE) includes processes intended to elicit, analyse, specify and validate systems and software requirements throughout the software life cycle. Mastering the principles of RE is key to achieving the goals of better, cheaper and quicker systems and software development projects. It is also important to be prepared to work with remote teammates, as distributed and global projects are becoming more common. This paper presents an experiment with a total of 31 students from two universities in Spain and Morocco who were assigned to either a co-located or a distributed team. Both traditional and reuse-based requirements specification techniques were applied by the participants to produce requirements documents. Their outcomes were then analysed, and the approaches were compared from the point of view of their effect on a set of performance-based and perception-based variables in co-located and distributed settings. We found significant differences in only productivity (Z=-2.320, p=0.020) and difficulty (Z=-2.124, p=0.034) as regards the scores attained for non-reuse and reuse conditions, both in the co-located modality. Our findings show that, in general, the participants attained similar results for requirements specification when using the two strategies in both distributed and non-distributed environments. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Carrillo de Gea, Juan M.; Nicolas, Joaquin; Fernandez Aleman, Jose L.; Toval, Ambrosio] Univ Murcia, Software Engn Res Grp, Reg Campus Int Excellence Campus Mare Nostrum, Murcia, Spain.
   [Ouhbi, Sofia; Idri, Ali] Mohammed V Univ, Software Project Management Res Team, ENSIAS, Rabat, Morocco.
C3 University of Murcia; Mohammed V University in Rabat
RP de Gea, JMC (corresponding author), Univ Murcia, Fac Comp Sci, Dept Informat & Syst, Campus Univ Espinardo, E-30100 Murcia, Spain.
EM jmcdg1@um.es
RI Ouhbi, Sofia/H-3641-2019; Fernández-Alemán, José Luis/G-1282-2011;
   Toval, Ambrosio/P-1180-2014; Nicolás Ros, Joaquín/C-6321-2015; Aleman,
   Jose/B-5899-2012; Carrillo de Gea, Juan Manuel/P-1224-2014
OI Ouhbi, Sofia/0000-0001-7614-9731; Toval, Ambrosio/0000-0002-8273-5937;
   Nicolás Ros, Joaquín/0000-0003-1760-3804; Aleman,
   Jose/0000-0003-0164-1777; Carrillo de Gea, Juan
   Manuel/0000-0002-3320-622X
FU GEODAS-REQ project (Spanish Ministry of Economy and Competitiveness);
   GEODAS-REQ project (European Fund for Regional Development)
   [TIN2012-37493-C03-01]; Mediterranean Office for Youth [2010/045/01,
   2010/045/02]
FX This work is partially supported by the GEODAS-REQ project (Spanish
   Ministry of Economy and Competitiveness and European Fund for Regional
   Development, TIN2012-37493-C03-01) and the Mediterranean Office for
   Youth (grants 2010/045/01 and 2010/045/02).
CR Abrahao S, 2011, INFORM SCIENCES, V181, P3356, DOI 10.1016/j.ins.2011.04.005
   ACM/IEEE Joint Task Force on Computing Curricula, 2013, SOFTW ENG 2013 CURR
   [Anonymous], 2010, 15172010 IEEE
   [Anonymous], 1995, SYSTEMS REQUIREMENTS
   [Anonymous], 1998, WORLDWIDE SERIES COM
   [Anonymous], 2011, 1SC7 ISOIEC JTC
   [Anonymous], 2008, 1SC36 ISOIEC JTC
   Barber K. S., 1999, AUSTRALASIAN J INFOR, V7, P75
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bhat JM, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.137
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Campus Mare Nostrum, WHAT IS CMN
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Carmel E, 2007, COMMUN ACM, V50, P40, DOI 10.1145/1290958.1290959
   de Gea JMC, 2015, COMPUT SCI INF SYST, V12, P257, DOI 10.2298/CSIS131201001C
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Carver J, 2003, LECT NOTES COMPUT SC, V2765, P81
   Cos JA, 2012, IEEE GLOB ENG ED C E, P96
   Cybulski JL, 1996, 964 TR U MELB DEP IN
   Damian D., 2006, 28th International Conference on Software Engineering Proceedings, P685, DOI 10.1145/1134285.1134391
   Daneva M, 2014, P 8 ACM IEEE INT S E
   de Gea J. M. C., 2013, MANAGING REQUIREMENT, P171, DOI DOI 10.1007/978-3-642-34419-0
   Ebert Christof., 2012, Global Software and IT: A guide to Distributed Development, Projects and Outsourcing
   Favaro J, 2002, IEEE SOFTWARE, V19, P15, DOI 10.1109/52.991325
   Firesmith D., 2004, J OBJECT TECHNOLOGY, V3, P61, DOI DOI 10.5381/JOT.2004.3.1.C6
   Fleiss J.L., 2013, Statistical Methods for Rates and Proportions
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Gillespie R., 1993, Studies in Economic History and Policy: USA in the Twentieth Century
   Goldin L, 2015, REQUIR ENG, V20, P23, DOI 10.1007/s00766-013-0182-7
   Gotel O, 2009, LECT NOTES BUS INF P, V16, P90
   He Z., 2002, Proceedings of the Inaugural Conference on the Principles and Practice of Programming and the Second Workshop on Intermediate Representation Engineering for Virtual Machines, P89
   Heck P, 2014, J SOFTW-EVOL PROC, V26, P1280, DOI 10.1002/smr.1678
   Herbsleb JD, 2005, PROC INT CONF SOFTW, P524
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   Holmes R, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377657
   Holtkamp P, 2015, J SOFTW-EVOL PROC, V27, P50, DOI 10.1002/smr.1701
   Honig WL, 2007, ITICSE 2007: 12TH ANNUAL CONFERENCE ON INNOVATION & TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P181, DOI 10.1145/1269900.1268838
   Hooks I., 2001, Customer centered products: Creating successful products through smart requirements management
   Janes A, 2013, J SOFTW-EVOL PROC, V25, P1273, DOI 10.1002/smr.1602
   Kauppinen M, 2004, INFORM SOFTWARE TECH, V46, P937, DOI 10.1016/j.infsof.2004.04.002
   Lam W, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P6, DOI [10.1109/ISRE.1997.566834, 10.1007/BF02813029]
   Markov GA, 2011, LECT NOTES COMPUT SC, V6606, P34, DOI 10.1007/978-3-642-19858-8_4
   Martín D, 2014, J SOFTW-EVOL PROC, V26, P339, DOI [10.1002/smr.1588, 10.1002/smr.1587]
   Mavin A, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P213
   Mavin A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P277, DOI 10.1109/RE.2010.39
   Mavin A, 2012, IEEE SOFTWARE, V29, P17, DOI 10.1109/MS.2012.36
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Maxwell KD, 2000, IEEE SOFTWARE, V17, P80, DOI 10.1109/52.820015
   McClure Carma., 1997, Software Reuse Techniques: Adding Reuse to the System Development Process
   Meth H, 2013, INFORM SOFTWARE TECH, V55, P1695, DOI 10.1016/j.infsof.2013.03.008
   Moody DL, 2002, LECT NOTES COMPUT SC, V2503, P214
   Moros B, 2013, INFORM SOFTWARE TECH, V55, P941, DOI 10.1016/j.infsof.2012.12.003
   Murphy TE., 2014, G00235237 GARTN INC
   Niazi M, 2015, IET SOFTW, V9, P135, DOI 10.1049/iet-sen.2014.0130
   Noll J., 2011, ACM INROADS, V1, P66, DOI [10.1145/1835428.1835445, DOI 10.1145/1835428.1835445]
   Ott D., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P291, DOI 10.1109/RE.2012.6345817
   Ouhbi S, 2015, REQUIR ENG, V20, P119, DOI 10.1007/s00766-013-0192-5
   Pacheco CL, 2015, J SOFTW-EVOL PROC, V27, P1, DOI 10.1002/smr.1698
   Palomares C, 2014, LECT NOTES COMPUTER, V8396, P301
   Premraj R, 2005, P 11 IEEE INT S SOFT, P37
   Prikladnicki R., 2003, Software Process Improvement and Practice, V8, P267, DOI 10.1002/spip.188
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Rine DC, 2000, INFORM SOFTWARE TECH, V42, P47, DOI 10.1016/S0950-5849(99)00055-5
   Robertson S., 2006, Mastering the Requirements Process
   Seyff N, 2009, LECT NOTES COMPUT SC, V5512, P147, DOI 10.1007/978-3-642-02050-6_13
   Seyff N, 2009, REQUIR ENG, V14, P91, DOI 10.1007/s00766-009-0077-9
   Sillitti A, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P309, DOI 10.1007/3-540-28244-0_14
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Thurimella AK, 2015, IEEE SYSTEMS J, P1, DOI [10.1109/JSYST.2015,2418290., DOI 10.1109/JSYST.2015,2418290]
   Toval A., 2011, 2011 IEEE Global Engineering Education Conference (EDUCON), P907, DOI 10.1109/EDUCON.2011.5773253
   Toval A., 2001, Requirements Engineering, V6, P205, DOI 10.1007/PL00010360
   Toval A, 2008, COMPUTER SYSTEMS SCI, V23, P1
   Benitti FBV, 2013, J UNIVERS COMPUT SCI, V19, P254
   von Knethen A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P273, DOI 10.1109/ICRE.2002.1048538
   Windle D. R., 2002, SOFTWARE REQUIREMENT
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 79
TC 9
Z9 10
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2016
VL 28
IS 3
BP 205
EP 227
DI 10.1002/smr.1772
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DH6SL
UT WOS:000372921700003
DA 2024-07-18
ER

PT J
AU Leotta, M
   Stocco, A
   Ricca, F
   Tonella, P
AF Leotta, Maurizio
   Stocco, Andrea
   Ricca, Filippo
   Tonella, Paolo
TI Robula plus : an algorithm for generating robust XPath locators for web
   testing
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE web testing; test cases fragility; robust XPath locator; maintenance
   effort reduction; DOM selector
AB Automated test scripts are used with success in many web development projects, so as to automatically verify key functionalities of the web application under test, reveal possible regressions and run a large number of tests in short time. However, the adoption of automated web testing brings advantages but also novel problems, among which the test code fragility problem. During the evolution of the web application, existing test code may easily break and testers have to correct it. In the context of automated DOM-based web testing, one of the major costs for evolving the test code is the manual effort necessary to repair broken web page element locators - lines of source code identifying the web elements (e.g. form fields and buttons) to interact with. In this work, we present Robula+, a novel algorithm able to generate robust XPath-based locators - locators that are likely to work correctly on new releases of the web application. We compared Robula+ with several state of the practice/art XPath locator generator tools/algorithms. Results show that XPath locators produced by Robula+ are by far the most robust. Indeed, Robula+ reduces the locators' fragility on average by 90% w.r.t. absolute locators and by 63% w.r.t. Selenium IDE locators. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Leotta, Maurizio; Stocco, Andrea; Ricca, Filippo] Univ Genoa, DIBRIS, Genoa, Italy.
   [Tonella, Paolo] Fdn Bruno Kessler, Trento, Italy.
C3 University of Genoa; Fondazione Bruno Kessler
RP Leotta, M (corresponding author), Univ Genoa, DIBRIS, Genoa, Italy.
EM maurizio.leotta@unige.it
RI Leotta, Maurizio/I-8145-2014; Stocco, Andrea/GVT-6917-2022; Tonella,
   Paolo/C-1702-2015; Stocco, Andrea/I-7081-2019; Ricca,
   Filippo/ABB-3276-2020
OI Leotta, Maurizio/0000-0001-5267-0602; Stocco,
   Andrea/0000-0001-8956-3894; Stocco, Andrea/0000-0001-8956-3894; 
CR Abe M, 2003, 2003 SYMPOSIUM ON APPLICATIONS AND THE INTERNET, PROCEEDINGS, P156, DOI 10.1109/SAINT.2003.1183044
   [Anonymous], 2014, INT S SOFTWARE TESTI, DOI DOI 10.1145/2610384.2610390
   [Anonymous], 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)
   Anton T., 2005, LWA, P126
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Chapman P, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P263
   Christophe L, 2014, PROC IEEE INT CONF S, P141, DOI 10.1109/ICSME.2014.36
   Collins E. F., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P57, DOI 10.1109/IWAST.2012.6228991
   Dalvi N, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P335
   Dyutiman Choudhary Dyutiman Choudhary, 2011, Pro-poor value chain development for high value products in mountain regions: Indian Bay Leaf
   Ebert C, 2009, IEEE SOFTWARE, V26, P88, DOI 10.1109/MS.2009.144
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   Kowalkiewicz M, 2006, WWW, P887, DOI 10.1145/1135777.1135928.
   Leotta M., 2013, P 2013 INT WORKSH JO, P53, DOI DOI 10.1145/2489280.2489284
   Leotta M, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P775, DOI 10.1145/2695664.2695847
   Leotta M, 2016, ADV COMPUT, V101, P193, DOI 10.1016/bs.adcom.2015.11.007
   Leotta M, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P36, DOI 10.1109/SBST.2015.16
   Leotta M, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P449, DOI 10.1109/ISSREW.2014.17
   Leotta M, 2013, IEEE ICST WORKSHOP, P108, DOI 10.1109/ICSTW.2013.19
   Leotta M, 2013, WORK CONF REVERSE EN, P272, DOI 10.1109/WCRE.2013.6671302
   Massol V., 2003, JUNIT IN ACTION
   Mirzaaghaei Mehdi, 2011, P 19 ACM SIGSOFT S 1, P396
   Montoto P, 2011, DATA KNOWL ENG, V70, P269, DOI 10.1016/j.datak.2010.12.001
   Myllymaki J., 2002, ROBUST WEB DATA EXTR
   Pirzadeh H., 2014, ACMIEEE INT C AUTOMA, P683, DOI [10.1145/2642937.2642954, DOI 10.1145/2642937.2642954]
   Rao G., 2013, MSUCSE002 IBM DEV
   Thummalapenta S., 2012, 20 ACM SIGSOFT S FDN, P41, DOI [10.1145/2393596.2393643, DOI 10.1145/2393596.2393643]
   Thummalapenta S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1002, DOI 10.1109/ICSE.2013.6606650
   Thummalapenta S, 2012, PROC INT CONF SOFTW, P881, DOI 10.1109/ICSE.2012.6227131
   Tonella P, 2014, ADV COMPUT, V93, P1, DOI 10.1016/B978-0-12-800162-2.00001-4
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 31
TC 56
Z9 57
U1 0
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2016
VL 28
IS 3
BP 177
EP 204
DI 10.1002/smr.1771
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DH6SL
UT WOS:000372921700002
DA 2024-07-18
ER

PT J
AU Lopes, JD
   Braga, JL
   Resende, MA
AF Lopes, Jhoney da. Silva
   Braga, Jose Luis
   Resende Filho, Moises A.
TI Systems dynamics model for decision support in risk assessment in
   software projects
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software engineering; decision support; systems dynamics; risk;
   economics; management; measurement
AB Project management is widely studied and has several tools that aid in the efficiency and effectiveness of software production. However, in project management, numerous risk factors are involved in the development of software. These risk factors interact in a dynamic and non-linear way, hindering decision-making. The objective of this paper is to present a model of systems dynamics, which is a descriptive technique used for modeling and simulating systems, involving risk factors that strongly influence the development of software. The model generated is a tool that aims to assist project managers in their decision-making. The relationships between variables were extracted from actual or empirical experiments available in the literature, thus bringing the model results closer to the real world. The model enables reproducing scenarios in which real-world tests would be costly or dangerous to be carried out, allowing the impacts of risks in software development process to be analyzed. Copyright (C) 2015 John Wiley & Sons, Ltd.
C1 [Lopes, Jhoney da. Silva; Braga, Jose Luis] Univ Fed Vicosa, Dept Informat, Vicosa, MG, Brazil.
   [Resende Filho, Moises A.] Univ Brasilia UNB, Dept Econ, Brasilia, DF, Brazil.
C3 Universidade Federal de Vicosa; Universidade de Brasilia
RP Lopes, JD (corresponding author), Univ Fed Vicosa, Dept Informat, Vicosa, MG, Brazil.
EM jhoney.lopes@ufv.br
RI Resende Filho, Moises/I-4200-2013
OI Resende Filho, Moises/0000-0002-5004-2685
CR Ambrósio BG, 2011, J SOFTW MAINT EVOL-R, V23, P35, DOI 10.1002/smr.469
   [Anonymous], PROGRAMMING LANGUAGE
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   Barros M d O, 2002, J SYST SOFTWARE, V1, P30
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Charette R. N., 1989, SOFTWARE ENG RISK AN
   CMMI/SEI-Software Engineering Institute, 2011, CAP MAT MOD INT CMMI
   Cobb C. W., 1928, American Economic Review, P139
   COSTA S., 2012, THESIS U FEDERAL VIC
   Daibert MS., 2010, THESIS U FEDERAL VIC
   GIBBS WW, 1994, SCI AM, V271, P86, DOI 10.1038/scientificamerican0994-86
   Hermsdorf VO, 2011, 14 WER WORKSH ENG RE, V14, P309
   Houston DX, 2001, J SYST SOFTWARE, V59, P247, DOI 10.1016/S0164-1212(01)00066-8
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Leopoldino CB, 2004, THESIS ESCOLA ADM RI
   Madachy R. J., 2007, Software Process Dynamics
   Pendharkar PC, 2008, INFORM SOFTWARE TECH, V50, P1181, DOI 10.1016/j.infsof.2007.10.019
   Peterson I, 1996, FATAL DEFECT CHASING, P268
   Pindyck R.S., 2010, Microeconomia, V7
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Senge P., 1990, A quinta disciplina - Arte e pratica da organizacao que aprende
   Sprague RH., 1996, DECISION SUPPORT MAN
   Vazquez CE, 2009, ANALISE PONTO FUNCAO
NR 24
TC 5
Z9 5
U1 2
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2015
VL 27
IS 12
BP 976
EP 989
DI 10.1002/smr.1754
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB5JV
UT WOS:000368551300003
DA 2024-07-18
ER

PT J
AU Takeuchi, M
   Kohtake, N
   Shirasaka, S
   Koishi, Y
   Shioya, K
AF Takeuchi, Motoko
   Kohtake, Naohiko
   Shirasaka, Seiko
   Koishi, Yumi
   Shioya, Kazunori
TI Maturity differences between customer and supplier-challenges, problems,
   and possible solutions
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE customer; supplier; maturity; outsourcing; process capability
AB SUMMARY
   In a globalized world, success in business today is linked with success with outsourcing. Several factors have a strong influence in this 'game'. It is our opinion that organizational maturity and process capability are very important.
   Low maturity in general is a problem in collaboration in a customer-supplier relationship. It is obvious that differences in maturity and process capability between customer and supplier will bring challenges and eventually problems.
   The insight into the difference in maturity between customer and supplier is important during the daily work-maybe even more important when a customer selects a supplier. It is here the 'landscape of problems' is formed.
   We have based our performance analysis on CMMI (R) 1.2 for each possible combination of difference in maturity between the customer and supplier. The problems initiated by the difference are described along with our best suggestion for possible solutions on the basis of our experiences from working with process improvement in companies worldwide.
   It is not possible to present the entire set of results of the performed analysis in this paper. Only the main results, argumentation, and conclusions will be presented.
   This paper describes the results and ends with a discussion and conclusion on the topic. Further work will go on, and the goal is to develop a simple tool to assist companies in their use of outsourcing support.
   This work is part of the 3-year Danish SourceIT research project, an 18 person-year project focusing on outsourcing and maturity, which is supported by the Danish Agency for Science Technology and Innovation under the Ministry of Science Technology and Innovation. Danske Bank, CSC Scandihealth, Nets, Roskilde University, and DELTA have been part of this project. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Takeuchi, Motoko; Kohtake, Naohiko; Shirasaka, Seiko; Koishi, Yumi; Shioya, Kazunori] Software Res Associates Inc, Tokyo, Japan.
RP Takeuchi, M (corresponding author), Software Res Associates Inc, Tokyo, Japan.
EM motoko-t@sra.co.jp
RI Sicilia, Miguel-Angel/F-5002-2012; Messnarz, Richard/AAH-8716-2020;
   Colomo-Palacios, Ricardo/E-5139-2010; Biro, Miklos/K-8741-2014
OI Messnarz, Richard/0000-0002-0555-3160; Colomo-Palacios,
   Ricardo/0000-0002-1555-9726; Biro, Miklos/0000-0001-8627-1159; Miguel
   Angel, Sicilia Urban/0000-0003-3067-4180
CR [Anonymous], 29110412011 ISOIEC
   [Anonymous], 2911012011 ISOIEC TR
   [Anonymous], 1550422003 ISOIEC
   [Anonymous], 29110 ISOIEC
   Varkoi Timo, 2010, 7 INT C QUAL INF COM
NR 5
TC 53
Z9 53
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2014
VL 26
IS 3
SI SI
BP 306
EP 312
DI 10.1002/smr.1591
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD1VP
UT WOS:000333022100004
DA 2024-07-18
ER

PT J
AU Wang, XR
   Pollock, L
   Vijay-Shanker, K
AF Wang, Xiaoran
   Pollock, Lori
   Vijay-Shanker, K.
TI Automatic Segmentation of Method Code into Meaningful Blocks: Design and
   Evaluation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE program understanding; readability; software tool; automatic formatting
AB Good programming practice and guidelines suggest that programmers use both vertical and horizontal spacing to visibly delineate between code segments that represent different algorithmic steps or high-level actions. Unfortunately, programmers do not always follow these guidelines. Editors and integrated development environments (IDEs) can easily indent codes based on syntax, but they do not currently support automatic blank line insertion, which presents more significant challenges involving the semantics. This paper presents and evaluates a heuristic solution to the automatic blank line insertion problem by leveraging both program structure and naming information to identify meaningful blocks', consecutive statements that logically implement a high-level action. Our tool, SEGMENT, takes as input a Java method and outputs a segmented version that separates meaningful blocks by vertical spacing. We report on several studies involving human judgments to evaluate the effectiveness of the automatic blank line insertion algorithm, for different size methods and for different levels of programmer expertise. The results indicate strong positive overall opinion of SEGMENT's effectiveness in comparison with both developer-written blank lines and blank lines inserted by newcomers to the code. The results vary only slightly among short and long methods, and among novice and advanced programmers. SEGMENT assists in making users obtain an overall picture of a method's actions and comprehend it quicker as well as provides hints for internal documentation placement. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Wang, Xiaoran; Pollock, Lori; Vijay-Shanker, K.] Univ Delaware, Newark, DE 19716 USA.
C3 University of Delaware
RP Wang, XR (corresponding author), Univ Delaware, Newark, DE 19716 USA.
EM xiaoranlr@gmail.com
FU National Science Foundation [CCF-0702401, CCF-0915803]; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [0915803] Funding Source: National Science Foundation
FX We thank our human evaluators for all their time, without which the
   evaluation of SEGMENT would not be possible. This study has been
   supported by the National Science Foundation under grant nos.
   CCF-0702401 and CCF-0915803.
CR AbdElHafiz SK, 1996, IEEE T SOFTWARE ENG, V22, P339, DOI 10.1109/32.502226
   Aggarwal KK, 2002, P A REL MAI, P235, DOI 10.1109/RAMS.2002.981648
   [Anonymous], 2010, Syntaxhighlighter
   Borstler J., 2008, Toward a Measurement Framework for Example Program Quality
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Bruce Kim., 2005, Java: An Eventful Approach
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, P121
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Crosby ME, 2002, P 14 ANN PSYCH PROGR
   ELSHOFF JL, 1982, COMMUN ACM, V25, P512, DOI 10.1145/358589.358596
   Gil J, 2005, ACM SIGPLAN NOTICES, V40, P97, DOI 10.1145/1103845.1094819
   GOLDBERG A, 1987, IEEE SOFTWARE, V4, P62, DOI 10.1109/MS.1987.231775
   HAAHR P, 1999, PROGRAMMING STYLE JA
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haneef N. J., 1998, Software Engineering Notes, V23, P75, DOI 10.1145/279437.279470
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Humphrey W.S., 1996, INTRO PERSONAL SOFTW
   Jackson S, 2008, SCI COMPUT PROGRAM, V72, P40, DOI 10.1016/j.scico.2007.11.002
   Komondoor R, 2003, PROG COMPREHEN, P33
   Lea D, 2000, JAVA CODING IN PRESS
   Murphy G, 2005, ECOOP 2005 OBJECT OR
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Relf P. A., 2005, 2005 INT S EMP SOFTW, P52
   Rupakheti C. R., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P205, DOI 10.1109/WCRE.2010.30
   Schach Stephen R., 2004, Object-Oriented and Classical Software Engineering
   Sridhara G., 2011, INT C SOFTW ENG ICSE
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   SUN, 1999, COD CONV JAV PROGR L
   Sutter H., 2004, C DEPTH SERIES
   Tsantalis N, 2009, EUR CON SFTWR MTNCE, P119, DOI 10.1109/CSMR.2009.23
   Wang X, 2011, WORK C REV ENG WCRE
   Yang LM, 2009, ASIA PAC SOFWR ENG, P43, DOI 10.1109/APSEC.2009.20
   Zograf B, 2011, JAVA PROGRAMMING STY
NR 33
TC 8
Z9 12
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2014
VL 26
IS 1
SI SI
BP 27
EP 49
DI 10.1002/smr.1581
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA0PV
UT WOS:000330799000003
DA 2024-07-18
ER

PT J
AU Garrido, A
   Johnson, R
AF Garrido, Alejandra
   Johnson, Ralph
TI Embracing the C preprocessor during refactoring
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE refactoring; preprocessor directives; code analysis; software
   maintenance
AB C preprocessor directives are heavily used in C programs because they provide useful and even necessary additions to the C language. However, they are usually executed and discarded before any analysis is applied on C programs. In refactoring, preprocessor directives must be preserved through the whole process of parsing, analysis and transformation to retain editable yet correct source code. We propose a new preprocessing approach and special program representations that allow a program to be analyzed and transformed without losing its preprocessor directives, but treating them as first-class program entities. These representations are essential for a correct refactoring tool. We also describe the challenges that preprocessor directives bring to refactoring and how the program representations that we propose solve those challenges. Finally, we give details of two refactorings and present some case studies with our successfully applied solution. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Garrido, Alejandra] Univ Nacl La Plata, Fac Informat, LIFIA, RA-1900 La Plata, Buenos Aires, Argentina.
   [Garrido, Alejandra] Consejo Nacl Invest Cient & Tecn, La Plata, Buenos Aires, Argentina.
   [Johnson, Ralph] Univ Illinois, Urbana, IL USA.
C3 National University of La Plata; Consejo Nacional de Investigaciones
   Cientificas y Tecnicas (CONICET); University of Illinois System;
   University of Illinois Urbana-Champaign
RP Garrido, A (corresponding author), Univ Nacl La Plata, Fac Informat, LIFIA, RA-1900 La Plata, Buenos Aires, Argentina.
EM garrido@lifia.info.unlp.edu.ar
RI Garrido, Alejandra/GRF-5135-2022
OI Garrido, Alejandra/0000-0002-5052-705X
FU Universidad Abierta Interamericana, Argentina [2163]; CONICET
FX The first author acknowledges the support of Universidad Abierta
   Interamericana, Argentina through grant agreement No. 2163 with CONICET.
CR [Anonymous], 2011, 98992011 ISOIEC
   Badros GJ, 2000, SOFTWARE PRACT EXPER, V30, P907, DOI 10.1002/(SICI)1097-024X(20000710)30:8<907::AID-SPE324>3.0.CO;2-I
   CloneDr C, 2012, SEMANTICS DESIGN
   Cox A, 2002, P IWPC 2002 INT WORK
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garrido A, 2005, PROC IEEE INT CONF S, P379
   Garrido A., 2005, THESIS U ILLINOIS UR
   Garrido Alejandra., 2002, Proceedings of IWPSE 2002, P6
   Harbison SP, 1991, REFERENCE MANUAL
   Kullbach B., 2001, 8 WORK C REV ENG STU
   Latendresse M, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P165, DOI 10.1109/CSMR.2004.1281417
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Livadas P, 1994, IEEE 3 WORKSH PROGR
   Overbey JL, 2009, LECT NOTES COMPUT SC, V5452, P114, DOI 10.1007/978-3-642-00434-6_8
   Padioleau Y., 2009, P 18 INT C COMP CONS
   Spinellis D, 2010, SCI COMPUT PROGRAM, V75, P216, DOI 10.1016/j.scico.2009.09.003
   Vittek M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P101, DOI 10.1109/CSMR.2003.1192417
   Vittek Marian., 2005, ICSM 2005 Industrial and Tool Volume, P61
   Waddington DG, 2005, ELECTRON NOTES THEOR, V141, P35, DOI 10.1016/j.entcs.2005.04.037
NR 20
TC 5
Z9 5
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2013
VL 25
IS 12
BP 1285
EP 1304
DI 10.1002/smr.1603
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 271BG
UT WOS:000328364600004
OA Green Published
DA 2024-07-18
ER

PT J
AU Bai, X
   Huang, LG
   Zhang, H
   Koolmanojwong, S
AF Bai, Xu
   Huang, LiGuo
   Zhang, He
   Koolmanojwong, Supannika
TI Hybrid modeling and simulation for trustworthy software process
   management: a stakeholder-oriented approach
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE trustworthy process management; process modeling and simulation;
   stakeholder-oriented process modeling; process modeling stakeholders;
   process modeling language; hybrid process simulation
ID IMPACT
AB Process Management Model (PMM) and Process Simulation Model (PSM) are the critical infrastructural components of the Trustworthy Process Management Framework (TPMF), which involves a large and heterogeneous group of stakeholders in process modeling and simulation to improve process trustworthiness. Process Modeling Stakeholders (PMS) have different levels of dependency on various process modeling and simulation techniques. They may also possess different perspectives or concerns in modeling. To support trustworthy process management, this paper integrates the stakeholder-oriented approach and hybrid simulation technique into software process modeling at three levels of abstraction (i.e., activity, sub-process and system). The hybrid process simulation combines micro-level discrete process models with the macro-level continuous process models to capture process dynamics. In particular, the stakeholder-oriented approach addresses the various perspectives of PMS during process modeling and simulation. Finally, a case study with a realistic process model demonstrates that this approach incrementally integrates stakeholders' modeling concerns through hybrid simulation, which is difficult to achieve using discrete or continuous modeling/simulation techniques independently. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Bai, Xu; Huang, LiGuo] So Methodist Univ, Dept Comp Sci & Engn, Dallas, TX 75205 USA.
   [Zhang, He] Univ New S Wales, Natl ICT Australia, Sydney, NSW, Australia.
   [Koolmanojwong, Supannika] Univ So Calif, Ctr Syst & Software Engn, Los Angeles, CA 90089 USA.
C3 Southern Methodist University; University of New South Wales Sydney;
   NICTA; University of Southern California
RP Huang, LG (corresponding author), So Methodist Univ, Dept Comp Sci & Engn, Dallas, TX 75205 USA.
EM lghuang@lyle.smu.edu
RI ZHANG, HE/E-5977-2012
OI Huang, LiGuo/0000-0001-7790-0195
FU Australian Government; Australian Research Council; Science Foundation
   Ireland [03/CE2/I303 1]; NICTA; Australian Research Council through the
   ICT Centre of Excellence program; Division Of Computer and Network
   Systems; Direct For Computer & Info Scie & Enginr [1126747] Funding
   Source: National Science Foundation
FX Contract/grant sponsor: Australian Government; Contract/grant sponsor:
   Australian Research Council; Contract/grant sponsor: The Science
   Foundation Ireland; contract/grant number: 03/CE2/I303 1; He Zhang's
   research is supported by NICTA, which is funded by the Australian
   Government as represented by the Department of Broadband, Communications
   and the Digital Economy and the Australian Research Council through the
   ICT Centre of Excellence program, and also supported, in part, by the
   Science Foundation Ireland grant 03/CE2/I303 1 to Lero-the Irish
   Software Engineering Research Centre (www.lero.ie).
CR Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   Amoroso E., 1994, 2nd ACM Conference on Computer and Communications Security, P39, DOI 10.1145/191177.191188
   An LJ, 2005, PROCEEDINGS OF THE 2005 WINTER SIMULATION CONFERENCE, VOLS 1-4, P2068
   Bai X, 2008, TECHNICAL REPORT
   Bai X, 2009, TECHNICAL REPORT
   Bai X, 2010, ICSP 10 P INT C SOFT
   Baldi M, 1994, E3 OBJECT ORIENTED S, P279
   Bandinelli S., 1994, SOFTWARE PROCESS MOD, P223
   Biffl S., 2005, Value-Based Software Engineering
   Cass A. G., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P754, DOI 10.1109/ICSE.2000.870488
   Deiters W., 1990, SIGSOFT Software Engineering Notes, V15, P193, DOI 10.1145/99278.99295
   Huang L., 2006, Applying the Value/Petri process to ERP software development in China, P502
   isee Systems, 2008, SYST THINK BUS
   Jäger D, 1999, LECT NOTES COMPUT SC, V1687, P91, DOI 10.1145/318774.318788
   Kellner M.I., 1991, Software Process, P176
   KeungSik Choi, 2006, Software Process Improvement and Practice, V11, P373, DOI 10.1002/spip.284
   Lakey PB, 2003, PROSIM 03 INT WORKSH
   Lanubile F., 2003, SIGSOFT Softw. Eng. Notes, V28, P2, DOI DOI 10.1145/966221.966224
   Lehman MM, 1999, J SYST SOFTWARE, V46, P123, DOI 10.1016/S0164-1212(99)00006-0
   Liu DP, 2008, LECT NOTES COMPUT SC, V5007, P307
   Madachy R., 2004, Software Process Modeling With System Dynamics
   Madachy R, 2008, WORKSH MOD SYST SOFT
   MADACHY R., 2006, ACM SIGSOFT: ACM Special Interest Group on Software Engineering, P25
   Madachy R.J., 2008, Software Process Dynamics
   Martin R. H., 2000, Software Process Improvement and Practice, V5, P147, DOI 10.1002/1099-1670(200006/09)5:2/3<147::AID-SPIP122>3.0.CO;2-T
   Osterweil L., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P2
   Osterweil L., 2006, Lecture Notes in Computer Science, P68
   Osterweil LJ, 1998, LECT NOTES COMPUT SC, V1487, P152
   Powell A, 1999, J SYST SOFTWARE, V46, P151, DOI 10.1016/S0164-1212(99)00008-4
   Raffo DM, 1999, PREDICTING IMPACT PO
   Rus I, 1999, J SYST SOFTWARE, V46, P173, DOI 10.1016/S0164-1212(99)00010-2
   Setamanit S. O., 2006, P 2006 INT WORKSH GL, P8
   Sutton S. M.  Jr., 1995, ACM Transactions on Software Engineering and Methodology, V4, P221, DOI 10.1145/214013.214017
   Sutton SM, 1997, LECT NOTES COMPUT SC, V1301, P142, DOI 10.1145/267896.267908
   Sutton SMJ, 1997, TECHNICAL REPORT
   Systems V, 2008, SYSTEM 5 VENSIM VENT
   Tvedt JD, 1996, THESIS TEMPE
   Wakeland W. W., 2004, Software Process Improvement and Practice, V9, P107, DOI 10.1002/spip.200
   Yang Y, 2009, LECT NOTES COMPUT SC, V5543, P389, DOI 10.1007/978-3-642-01680-6_35
   Zamli K.Z., 2001, Malaysian Journal of Computer Science, V14, P26
   Zhang H, 2008, LECT NOTES COMPUT SC, V5007, P333, DOI 10.1007/978-3-540-79588-9_29
   Zhang H, 2008, LECT NOTES COMPUT SC, V5007, P345, DOI 10.1007/978-3-540-79588-9_30
   Zhang H, 2008, ASIA PAC SOFWR ENG, P59, DOI 10.1109/APSEC.2008.50
NR 43
TC 5
Z9 5
U1 0
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2012
VL 24
IS 7
SI SI
BP 721
EP 740
DI 10.1002/smr.480
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 021TS
UT WOS:000309908900002
DA 2024-07-18
ER

PT J
AU Prikladnicki, R
AF Prikladnicki, Rafael
TI Propinquity in global software engineering: examining perceived distance
   in globally distributed project teams
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE gobal software engineering; perceived distance; distributed project
   management
AB In social psychology, propinquity refers to the physical (objective) or psychological (subjective) proximity between people. In this paper, we explore the psychological dimension of propinquity by examining the phenomenon of feeling distant from geographically distributed people, in the context of distributed software teams. The perceived distance is an important challenge faced by distributed teams, and it is frequently based on factors beyond the physical distance, such as communication and cultural differences. The purpose of this paper is to present a model to assess and make more visible the construct of 'perceived distance' among members of global software engineering teams. The model was applied in three real-world cases to assess its effectiveness in uncovering hidden and useful information during the project lifecycle. The practical experience lived with the quantification of perceived distance gave us good indication that this data can benefit the practice of global software engineering. In most of the projects evaluated, project managers were not expecting the results found. We present the model, details of its applications, analysis of the results, lessons learned and practical implications for the management of distributed software projects and teams. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Prikladnicki, Rafael] Pontificia Univ Catolica Rio Grande do Sul, Sch Comp Sci, Porto Alegre, RS, Brazil.
   [Prikladnicki, Rafael] Pontificia Univ Catolica Rio Grande do Sul, Technol Management Agcy, Porto Alegre, RS, Brazil.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul; Pontificia
   Universidade Catolica Do Rio Grande Do Sul
RP Prikladnicki, R (corresponding author), Pontificia Univ Catolica Rio Grande do Sul, Sch Comp Sci, Porto Alegre, RS, Brazil.
EM rafaelp@pucrs.br
FU PDTI; Dell Computers of Brazil Ltd. [Law 8.248/91]
FX Study developed by the MuNDDoS Research Group on Distributed Software
   Development and partially supported by the PDTI program, financed by
   Dell Computers of Brazil Ltd. (Law 8.248/91). We also thank the company
   and all the participants who voluntarily answered the questionnaire.
CR Aspray W., 2006, GLOBALIZATION OFFSHO
   Boehm B., 2006, 28th International Conference on Software Engineering Proceedings, P12, DOI 10.1145/1134285.1134288
   Bradner Erin., 2002, Proceedings of the 2002 ACM conference on Computer supported cooperative work, CSCW '02, P226
   Burgoon JK, 2002, J COMMUN, V52, P657, DOI 10.1111/j.1460-2466.2002.tb02567.x
   Carmel E., 2005, Offshoring Information Technology: Sourcing and Outsourcing to a Global Workforce
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   CATALDO M, 2007, THESIS CARNEGIE MELL
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   Dias Neto AC, 2006, 5 BRAZ S SOFTW QUAL
   Evaristo R., 2004, J ENG TECHNOL MANAGE, V21, P75
   Gumm DC, 2006, IEEE SOFTWARE, V23, P45, DOI 10.1109/MS.2006.122
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 2005, PROC INT CONF SOFTW, P524
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hinds PJ, 2003, ORGAN SCI, V14, P615, DOI 10.1287/orsc.14.6.615.24872
   Hofstede G., 1993, Executive, V7, P81, DOI [DOI 10.5465/AME.1993.9409142061, 10.5465/ame.1993]
   Jarvenpaa S. L., 1998, Journal of Management Information Systems, V14, P29
   Kiel L., 2003, International Workshop on Global Software Development at ICSE, P44
   Komi-Sirvio S, 2005, KNOWL PROCESS MANAG, V12, P108, DOI 10.1002/kpm.225
   Layman L, 2006, INFORM SOFTWARE TECH, V48, P781, DOI 10.1016/j.infsof.2006.01.004
   Meyer B, 2006, COMPUTER, V39, P124, DOI 10.1109/MC.2006.37
   NAHEMOW L, 1975, J PERS SOC PSYCHOL, V32, P205, DOI 10.1037/0022-3514.32.2.205
   NGUYEN T, 2008, P INT C GLOB SOFTW E
   O'Leary MB, 2007, MIS QUART, V31, P433
   Paasivaara M, 2009, INT CONF GLOBAL SOFT, P195, DOI 10.1109/ICGSE.2009.27
   Prikladnicki R., 2003, Software Process Improvement and Practice, V8, P267, DOI 10.1002/spip.188
   Prikladnicki R, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P262
   Prikladnicki R, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P18, DOI 10.1109/ICGSE.2006.261212
   Ramasubbu N, 2005, IEEE SOFTWARE, V22, P80, DOI 10.1109/MS.2005.69
   SANGWAN R, 2007, GLOBAL SOFTWARE DEV
   Sengupta B., 2006, 28th International Conference on Software Engineering Proceedings, P731, DOI 10.1145/1134285.1134402
   Wilson JM, 2008, ORGAN STUD, V29, P979, DOI 10.1177/0170840607083105
NR 32
TC 14
Z9 14
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2012
VL 24
IS 2
SI SI
BP 119
EP 137
DI 10.1002/smr.475
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 910NE
UT WOS:000301645500002
DA 2024-07-18
ER

PT J
AU Yu, Q
   Zhu, Y
   Han, H
   Zhao, Y
   Jiang, SJ
   Qian, JY
AF Yu, Qiao
   Zhu, Yi
   Han, Hui
   Zhao, Yu
   Jiang, Shujuan
   Qian, Junyan
TI Evolutionary measures and their correlations with the performance of
   cross-version defect prediction for object-oriented projects
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE cross-version defect prediction; evolutionary measures; evolutionary
   projects; software evolution
ID METRICS
AB Cross-version defect prediction (CVDP) for evolutionary projects has attracted much attention from researchers in recent years. For multiple versions of an object-oriented project, the degree of evolution (e.g., the degree of class change) between successive versions can reflect the differences between versions, which could affect the performance of CVDP. Therefore, how to measure the degree of evolution between successive versions and explore the correlations with the performance of CVDP are very important for software defect prediction. Based on the successive versions of evolutionary projects, this paper proposes six evolutionary measures from three aspects of class change, metric change, and label change, including the Ratio of New Classes (RNC), the Ratio of Deleted Classes (RDC), the Average Ratio of Metric Change (ARMC), the Ratio of Label Changed Classes (RLCC), the Ratio of Unchanged Classes (RUC), and the Ratio of Interference Classes (RIC). An empirical study was conducted on 40 versions of 11 object-oriented projects from the PROMISE repository. Precision, Recall, F-measure, and AUC were used as the performance indicators. Three correlation approaches (Pearson, Spearman, and Kendall) are applied to show the correlations between evolutionary measures and the performance of CVDP. The statistical results show that RNC, RDC, and RUC show no correlation with four performance indicators. ARMC shows weak or medium positive correlations with Recall and F-measure. RLCC and RIC show very strong or strong negative correlations with Recall and F-measure. The results indicate that the correlations between the proposed evolutionary measures and the performance of CVDP are different, which can guide the training set selection of CVDP.
C1 [Yu, Qiao; Zhu, Yi; Han, Hui] Jiangsu Normal Univ, Sch Comp Sci & Technol, Xuzhou, Peoples R China.
   [Zhao, Yu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
   [Jiang, Shujuan] China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou, Peoples R China.
   [Qian, Junyan] Guangxi Normal Univ, Guangxi Key Lab Multisource Informat Min & Secur, Guilin, Peoples R China.
   [Qian, Junyan] Guilin Univ Elect Technol, Guangxi Key Lab Trusted Software, Guilin, Peoples R China.
C3 Jiangsu Normal University; Nanjing University of Aeronautics &
   Astronautics; China University of Mining & Technology; Guangxi Normal
   University; Guilin University of Electronic Technology
RP Yu, Q (corresponding author), Jiangsu Normal Univ, Sch Comp Sci & Technol, Xuzhou, Peoples R China.
EM yuqiao@jsnu.edu.cn
RI yu, qiao/KFT-2125-2024
FU This work was partly supported by the National Natural Science
   Foundation of China (61902161, 62077029, 62162004, and U21A20474), the
   CCF-Huawei Populus Grove Fund (CCF-HuaweiFM202209), the Natural Science
   Foundation of the Jiangsu Higher Education Institu [61902161, 62077029,
   62162004, U21A20474, CCF-HuaweiFM202209]; National Natural Science
   Foundation of China [18KJB520016]; Natural Science Foundation of the
   Jiangsu Higher Education Institutions of China [kx201704]; Guangxi Key
   Laboratory of Trusted Software [17XLR001]; Research Support Program for
   Doctorate Teachers of Jiangsu Normal University
FX This work was partly supported by the National Natural Science
   Foundation of China (61902161, 62077029, 62162004, and U21A20474), the
   CCF-Huawei Populus Grove Fund (CCF-HuaweiFM202209), the Natural Science
   Foundation of the Jiangsu Higher Education Institutions of China
   (18KJB520016), the Guangxi Key Laboratory of Trusted Software
   (kx201704), and the Research Support Program for Doctorate Teachers of
   Jiangsu Normal University (17XLR001).
CR Alshehri YA, 2018, IEEE SOUTHEASTCON
   Amasaki S., 2017, P 13 INT C PREDICTIV, P93, DOI [10.1145/3127005.3127015, DOI 10.1145/3127005.3127015]
   Amasaki S, 2020, EMPIR SOFTW ENG, V25, P1573, DOI 10.1007/s10664-019-09777-8
   Amasaki S, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P32, DOI 10.1145/3273934.3273938
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Chen Xiang, 2016, Journal of Software, V27, P1, DOI 10.13328/j.cnki.jos.004923
   Cui C, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2497
   Falessi D, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3467895
   Fiore A, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P91, DOI 10.1109/SEAA53835.2021.00021
   Gao HL, 2019, INT CONF SOFTW ENG, P206, DOI [10.1109/icsess47205.2019.9040793, 10.1109/ICSESS47205.2019.9040793]
   Gong Li-Na, 2019, Journal of Software, V30, P3090, DOI 10.13328/j.cnki.jos.005790
   Gong LA, 2023, IEEE T SOFTWARE ENG, V49, P2440, DOI 10.1109/TSE.2022.3220740
   Gong LN, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2172
   Jiang QT, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1840
   Jiang QT, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P361, DOI 10.1109/SANER.2015.7081846
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Kabir MA, 2020, P INT COMP SOFTW APP, P882, DOI 10.1109/COMPSAC48688.2020.0-154
   Kanwar S, 2023, EXPERT SYST APPL, V218, DOI 10.1016/j.eswa.2023.119625
   Kpodjedo S, 2011, EMPIR SOFTW ENG, V16, P141, DOI 10.1007/s10664-010-9151-7
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Li BX, 2016, 2016 IEEE/ACIS 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P273
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Lina Gong, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P698, DOI 10.1109/ASE.2019.00071
   Liu S., 2021, Comp Res Rep
   Liu YB, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P232, DOI 10.1109/SANER.2018.8330212
   Lu HH, 2014, PROC INT SYMP SOFTW, P312, DOI 10.1109/ISSRE.2014.35
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Miletic M, 2018, 2018 41ST INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1460, DOI 10.23919/MIPRO.2018.8400263
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Ni C, 2022, IEEE T SOFTWARE ENG, V48, P786, DOI 10.1109/TSE.2020.3001739
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Shukla S, 2018, SOFT COMPUT, V22, P1959, DOI 10.1007/s00500-016-2456-8
   Stanic B, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P493, DOI 10.1109/QRS-C.2017.85
   Wang Dan-Dan, 2016, Journal of Software, V27, P3014, DOI 10.13328/j.cnki.jos.004869
   Xu Z, 2018, INT C PROGRAM COMPRE, P132, DOI 10.1145/3196321.3196331
   Xu Z, 2019, J SYST SOFTWARE, V154, P59, DOI 10.1016/j.jss.2019.03.027
   Xu Z, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P209, DOI 10.1109/SANER.2018.8330210
   Yu Q., 2022, Proc Asia-Pacific Symp Internetware, P192
   Yu Q, 2020, IET SOFTW, V14, P283, DOI 10.1049/iet-sen.2018.5439
   Zhang NN, 2021, INFORM SCIENCES, V570, P545, DOI 10.1016/j.ins.2021.05.008
   Zhao YY, 2022, INFORM SOFTWARE TECH, V149, DOI 10.1016/j.infsof.2022.106939
   Zhao YH, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3567550
NR 47
TC 0
Z9 0
U1 2
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 OCT 15
PY 2023
DI 10.1002/smr.2625
EA OCT 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U5XA7
UT WOS:001085519700001
OA Bronze
DA 2024-07-18
ER

PT J
AU Lenberg, P
   Feldt, R
   Gren, L
   Tengberg, LGW
   Tidefors, I
   Graziotin, D
AF Lenberg, Per
   Feldt, Robert
   Gren, Lucas
   Tengberg, Lars Goeran Wallgren
   Tidefors, Inga
   Graziotin, Daniel
TI Qualitative software engineering research: Reflections and guidelines
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review; Early Access
DE behavioral software engineering; COREQ; interpretive phenomenological
   analysis; narrative and discourse analysis; qualitative research;
   reflexivity
ID GROUNDED THEORY; DISCOURSE ANALYSIS; RESEARCH METHODOLOGIES;
   CONCEPTUAL-FRAMEWORK; GOOGLE SCHOLAR; REFLEXIVITY; CHALLENGES; HEALTH;
   VALIDITY; SCIENCE
AB Researchers are increasingly recognizing the importance of human aspects in software development. Because qualitative methods are used to explore human behavior in-depth, we believe that studies using such methods will become more common. Existing qualitative software engineering guidelines do not cover the full breadth of qualitative methods and the knowledge on how to use them like in social sciences. The purpose of this study was to extend the software engineering community's current body of knowledge regarding available qualitative methods and their quality assurance frameworks and to provide recommendations and guidelines for their use. With the support of an epistemological argument and a survey of the literature, we suggest that future research would benefit from (1) utilizing a broader set of research methods, (2) more strongly emphasizing reflexivity, and (3) employing qualitative guidelines and quality criteria. We present an overview of three qualitative methods commonly used in social sciences but rarely seen in software engineering research, namely interpretative phenomenological analysis, narrative analysis, and discourse analysis. Furthermore, we discuss the meaning of reflexivity in relation to the software engineering context and suggest means of fostering it. Our paper will help software engineering researchers better select and then guide the application of a broader set of qualitative research methods.
   The behavioral and social sciences have an established history and research tradition to study human behavior, cognition, motivation, and affect quantitatively. To a fair extent, this expertise extends to qualitative research. We argue that qualitative software engineering research would greatly benefit from a knowledge transfer from these disciplines. We introduce (a) qualitative methods that are novel to software engineering, (b) new practices that enrich qualitative research in software engineering, and (c) quality assurance frameworks. image
C1 [Lenberg, Per; Feldt, Robert; Gren, Lucas] Univ Gothenburg, Dept Comp Sci, Gothenburg, Sweden.
   [Feldt, Robert] Blekinge Inst Technol, Dept Software Engn, Gothenburg, Sweden.
   [Tengberg, Lars Goeran Wallgren; Tidefors, Inga] Univ Gothenburg, Dept Psychol, Gothenburg, Sweden.
   [Graziotin, Daniel] Univ Stuttgart, Inst Software Engn, Stuttgart, Germany.
C3 University of Gothenburg; Blekinge Institute Technology; University of
   Gothenburg; University of Stuttgart
RP Lenberg, P (corresponding author), Univ Gothenburg, Dept Comp Sci, Gothenburg, Sweden.
EM perle@chalmers.se
OI Gren, Lucas/0000-0001-5488-9894; Graziotin, Daniel/0000-0002-9107-7681
FU Alexander von Humboldt-Stiftung; Swedish Armed Forces; Swedish
   Governmental Agency for Innovation Systems (VINNOVA) [2017-04874];
   Alexander von Humboldt (AvH) Foundation; Vinnova [2017-04874] Funding
   Source: Vinnova
FX Alexander von Humboldt-Stiftung; Swedish Armed Forces; Swedish
   Governmental Agency for Innovation Systems (VINNOVA), Grant/Award
   Number: 2017-04874; Alexander von Humboldt (AvH) Foundation
CR Adolph S, 2012, J SYST SOFTWARE, V85, P1269, DOI 10.1016/j.jss.2012.01.059
   Adriaanse LS, 2013, ELECTRON LIBR, V31, P727, DOI 10.1108/EL-12-2011-0174
   Ali M., 2016, Phys Comput Sci, V53, P417
   Alsahli A, 2016, SCI PROGRAMMING-NETH, V2016, DOI 10.1155/2016/8198039
   [Anonymous], 1972, Research on Human Behavior: A Systematic Guide to Method
   [Anonymous], 1971, The Psychology of Computer Programming
   [Anonymous], 2013, Facilitating Action Learning: A Practitioner's Guide
   [Anonymous], 1997, Material discourses of health and illness
   [Anonymous], 1997, Journal of Technology Education, DOI DOI 10.21061/JTE.V9I1.A.4
   [Anonymous], 2007, Qualitative Research in Psychology, DOI [10.1080/14780880701473425, DOI 10.1080/14780880701473425]
   [Anonymous], 2001, Qualitative Inquiry, DOI DOI 10.1177/107780040100700103
   Aritz J., 2010, Journal of Business Communication, V47, P20
   Atieno OP, 2009, PROBL EDUC 21ST CENT, V13, P13
   Ayala C, 2018, EMPIR SOFTW ENG, V23, P3073, DOI 10.1007/s10664-017-9594-1
   Babu GR, 2015, QUAL REP, V20, P314
   Bäckström B, 2007, NURS INQ, V14, P243, DOI 10.1111/j.1440-1800.2007.00373.x
   Bano M, 2017, EMPIR SOFTW ENG, V22, P2339, DOI 10.1007/s10664-016-9465-1
   Barry CA, 1999, QUAL HEALTH RES, V9, P26, DOI 10.1177/104973299129121677
   Bass JM, 2016, INFORM SOFTWARE TECH, V75, P1, DOI 10.1016/j.infsof.2016.03.001
   Berger R, 2015, QUAL RES, V15, P219, DOI 10.1177/1468794112468475
   Besker T, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110586
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Boje DM, 2004, ACAD MANAGE REV, V29, P571
   Bradbury-Jones C, 2007, J ADV NURS, V59, P290, DOI 10.1111/j.1365-2648.2007.04306.x
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brocki JM, 2006, PSYCHOL HEALTH, V21, P87, DOI 10.1080/14768320500230185
   Brown RB., 2006, Doing your dissertation in business and management: the reality of researching and writing
   Buckner S, 2005, J SOC WORK PRACT, V19, P59, DOI 10.1080/02650530500071969
   Burck C, 2005, J FAM THER, V27, P237, DOI 10.1111/j.1467-6427.2005.00314.x
   Chaabane M, 2019, SCI COMPUT PROGRAM, V184, DOI 10.1016/j.scico.2019.102305
   Chandler D., 2007, Semiotics: The Basics
   Chapple A, 1998, FAM PRACT, V15, P556, DOI 10.1093/fampra/15.6.556
   Chia R, 2000, ORGANIZATION, V7, P513, DOI 10.1177/135050840073009
   Clancy Marie, 2013, Nurse Res, V20, P12
   Clandinin D. J., 2000, NARRATIVE INQUIRY EX
   Corbin J., 2015, BASICS QUALITATIVE R
   Creswell J.W., 2023, Research design: Qualitative, quantitative, and mixed methods approaches, Vsixth
   Cronin CJ, 2016, CUMBRIA PARTNERSHIP, V5, P8
   Crossley M., 2000, Introducing Narrative Psychology: Self, Trauma and the Construction of Meaning
   Crowe M, 1998, J ADV NURS, V28, P339, DOI 10.1046/j.1365-2648.1998.00780.x
   Cruz Shirley S. J. O., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P1, DOI 10.1049/ic.2011.0001
   Cutcliffe JR, 2002, QUAL HEALTH RES, V12, P1000, DOI 10.1177/104973202129120313
   Czarniawska Barbara., 1997, A Narrative Approach to Organization Studies, V1st
   DeFranco JF, 2017, INNOV SYST SOFTW ENG, V13, P129, DOI 10.1007/s11334-017-0287-0
   Dennehy D, 2020, INFORM TECHNOL PEOPL, V33, P477, DOI 10.1108/ITP-02-2018-0102
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   Dybå T, 2011, EMPIR SOFTW ENG, V16, P425, DOI 10.1007/s10664-011-9163-y
   Ebad SA, 2018, SOFTWARE PRACT EXPER, V48, P1056, DOI 10.1002/spe.2569
   Eckert R, 2019, J SYST SOFTWARE, V149, P250, DOI 10.1016/j.jss.2018.12.007
   Elliott R, 1999, BRIT J CLIN PSYCHOL, V38, P215, DOI 10.1348/014466599162782
   Fannoun S, 2019, LEARN ORGAN, V26, P44, DOI 10.1108/TLO-09-2018-0149
   Feldman MS, 2004, J PUBL ADM RES THEOR, V14, P147, DOI 10.1093/jopart/muh010
   Finlay L, 2011, PHENOMENOLOGY FOR THERAPISTS: RESEARCHING THE LIVED WORLD, P139
   Flick, 2014, INTRO QUALITATIVE RE
   Fontana RM, 2015, J SYST SOFTWARE, V102, P88, DOI 10.1016/j.jss.2014.12.032
   Fossey E, 2002, AUST NZ J PSYCHIAT, V36, P717, DOI 10.1046/j.1440-1614.2002.01100.x
   Fossey EM, 2001, AUST NZ J PSYCHIAT, V35, P91, DOI 10.1046/j.1440-1614.2001.00846.x
   Foster E., 2010, Adolescents' Experience of 'Adjustment' to Life with Diabetes: An Interpretative Phenomenological Analysis
   Frisina A., 2006, Forum Qualitative Sozialforschung Forum: Qualitative Social Research, V7, DOI 10.17169/fqs-7.3.138
   Gandomani TJ, 2015, J SYST SOFTWARE, V107, P204, DOI 10.1016/j.jss.2015.06.006
   Gandornani TJ, 2016, COMPUT HUM BEHAV, V62, P257, DOI 10.1016/j.chb.2016.04.009
   Gee J., 2014, INTRO DISCOURSE ANAL, DOI DOI 10.4324/9781315819679
   Georgaca E., 2012, QUALITATIVE RES METH, P147
   Ghobadi S, 2020, J MANAGE INFORM SYST, V37, P96, DOI 10.1080/07421222.2019.1705508
   Ghosh A, 2019, INFORM SOFTWARE TECH, V108, P139, DOI 10.1016/j.infsof.2019.01.001
   Giacomini MK, 2000, JAMA-J AM MED ASSOC, V284, P357, DOI 10.1001/jama.284.3.357
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Gill MJ, 2015, ORGANIZATION, V22, P306, DOI 10.1177/1350508413514287
   Gill MJ, 2014, ORGAN RES METHODS, V17, P118, DOI 10.1177/1094428113518348
   Giuffrida R, 2015, INFORM SOFTWARE TECH, V63, P11, DOI 10.1016/j.infsof.2015.02.013
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Gough B, 2017, J POSIT PSYCHOL, V12, P311, DOI 10.1080/17439760.2016.1262615
   Gough B, 2012, PSYCHOL METHODS, V17, P374, DOI 10.1037/a0029313
   Graziotin D, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3469888
   Graziotin D, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P25, DOI 10.1145/2804381.2804386
   Gren L, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267437
   Guba E.G., 1994, Handbook of Qualitative Research, V2, P163
   Guillemin M, 2004, QUAL INQ, V10, P261, DOI 10.1177/1077800403262360
   Hammersley M., 1990, READING ETHNOGRAPHIC
   Hamzah MHI, 2019, J INF COMMUN TECHNOL, V18, P273, DOI 10.32890/jict2019.18.3.3
   Harper D., 1988, Visual Anthropology, V1, P1, DOI 10.1080/08949468.1987.9966457
   Harzing AW, 2016, SCIENTOMETRICS, V106, P787, DOI 10.1007/s11192-015-1798-9
   Heider F, 1944, AM J PSYCHOL, V57, P243, DOI 10.2307/1416950
   Henwood K.L., 2003, QUALITATIVE RES PSYC
   Hewitt JP., 2016, The Oxford Handbook of Positive Psychology, V3rd ed., P135
   Highsmith J., 2002, Agile software development ecosystems
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Hoda R, 2016, J SYST SOFTWARE, V117, P245, DOI 10.1016/j.jss.2016.02.049
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Hofman Nila Ginger, 2004, Health Care Women Int, V25, P647
   Houghton Catherine E, 2010, Nurse Res, V18, P15
   Hunter SV., 2010, Current Narratives, V1, P44
   Iyawa GE, 2016, ELECTR J INF SYS DEV, V77
   Jian GW, 2011, ORGANIZATION, V18, P45, DOI 10.1177/1350508410373672
   Johnson R. B., 2004, ED RES, V33, P14, DOI DOI 10.3102/0013189X033007014
   Josselson R., 2007, HDB NARRATIVE INQUIR, P545
   Jovanovic M, 2017, J SYST SOFTWARE, V133, P174, DOI 10.1016/j.jss.2017.07.008
   Kapoulas A, 2012, QUAL MARK RES, V15, P354, DOI 10.1108/13522751211257051
   Kashfi P, 2019, J SYST SOFTWARE, V154, P37, DOI 10.1016/j.jss.2019.03.066
   Kelly Russell., 2002, Forum: Qualitative Social Research Volume, V3, P18, DOI [DOI 10.17169/FQS-3.3.831, 10.17169/FQS-3.3.831]
   Kendall KE, 2020, INFORM SYST J, V30, P369, DOI 10.1111/isj.12270
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Koller V., 2012, CRITICAL APPROACHES, V5, P19
   Kugelmann R, 2001, J HEALTH PSYCHOL, V6, P604, DOI 10.1177/135910530100600511
   Kurtanovic Z, 2018, REQUIR ENG, V23, P357, DOI 10.1007/s00766-018-0293-2
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   LECOMPTE MD, 1982, REV EDUC RES, V52, P31, DOI 10.2307/1170272
   Lee TW, 1999, J VOCAT BEHAV, V55, P161, DOI 10.1006/jvbe.1999.1707
   LeGreco M, 2009, QUAL INQ, V15, P1516, DOI 10.1177/1077800409343064
   Lenberg P, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2148
   Lenberg P, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P43, DOI 10.1109/CHASE.2015.13
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Liamputtong P., 2009, Qualitative Research Methods
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   Luz WP, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.083
   Lyon LA, 2020, COMPUT SCI EDUC, V30, P102, DOI 10.1080/08993408.2019.1682379
   Lyons J., 1968, Introduction to theoretical linguistics
   Mack N., 2005, QUALITATIVE RES METH
   Mäkinen S, 2016, INFORM SOFTWARE TECH, V80, P175, DOI 10.1016/j.infsof.2016.09.001
   Makkreel RA., 1982, Research in Phenomenology, V12, P39
   Malley-Keighran MPO, 2014, INT J LANG COMM DIS, V49, P174, DOI 10.1111/1460-6984.12066
   Malterud K, 2001, LANCET, V358, P483, DOI 10.1016/S0140-6736(01)05627-6
   MARTIN J, 1983, ADMIN SCI QUART, V28, P438, DOI 10.2307/2392251
   Martinez D, 2020, IEEE ACCESS, V8, P72461, DOI 10.1109/ACCESS.2020.2987882
   Martini A, 2016, J SOFTW-EVOL PROC, V28, P4, DOI 10.1002/smr.1757
   Maxwell J.A., 2012, QUALITATIVE RES DESI
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Mays N, 2000, BMJ-BRIT MED J, V320, P50, DOI 10.1136/bmj.320.7226.50
   McGrath J. E., 1995, Readings in Human-Computer Interaction, P152, DOI [10.1016/B978-0-08-051574-8.50019-4, DOI 10.1016/B978-0-08-051574-8.50019-4]
   McLeod J., 1996, British Journal of Guidance Counselling, V24, P309, DOI DOI 10.1080/03069889608253015
   Medeiros J, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106194
   Medeiros J, 2018, J SYST SOFTWARE, V142, P171, DOI 10.1016/j.jss.2018.04.064
   Melegati J, 2019, INFORM SOFTWARE TECH, V109, P92, DOI 10.1016/j.infsof.2019.02.001
   Millward LJ, 2006, J OCCUP ORGAN PSYCH, V79, P315, DOI 10.1348/096317906X110322
   Minhas NM, 2020, INFORM SOFTWARE TECH, V120, DOI 10.1016/j.infsof.2019.106254
   Mongeon P, 2016, SCIENTOMETRICS, V106, P213, DOI 10.1007/s11192-015-1765-5
   Moran D., 2012, Husserl's Crisis of the European Sciences and Transcendental Phenomenology: An Introduction
   Morgan A., 2010, Journal of Health and Social Care Improvement, V1, P1
   Morrow SL, 2005, J COUNS PSYCHOL, V52, P250, DOI 10.1037/0022-0167.52.2.250
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Murray M., 2003, Qualitative psychology: A practical guide to research methods, P111
   Myers MD, 1997, MIS QUART, V21, P241, DOI 10.2307/249422
   Oliveira E, 2020, EMPIR SOFTW ENG, V25, P2519, DOI 10.1007/s10664-020-09820-z
   Oriol M, 2020, SOFTWARE QUAL J, V28, P931, DOI 10.1007/s11219-020-09509-y
   Overcash JA, 2003, CRIT REV ONCOL HEMAT, V48, P179, DOI 10.1016/j.critrevonc.2003.04.006
   Padgett D., 1998, QUALITATIVE METHODS
   Palaganas EC, 2017, QUAL REP, V22, P426
   Pano A, 2018, EMPIR SOFTW ENG, V23, P3503, DOI 10.1007/s10664-018-9613-x
   Parker I., 2015, Critical discursive psychology, VSecond
   Patton M. Q., 2015, Qualitative research and evaluation methods
   Patton MQ, 2005, QUALITATIVE RES, DOI DOI 10.1002/0470013192.BSA514
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Petty NJ, 2012, MANUAL THER, V17, P378, DOI 10.1016/j.math.2012.03.004
   Pietkiewicz I., 2014, PSYCHOL J, V20, P7, DOI [DOI 10.14691/CPPJ.20.1.7, https://doi.org/10.14691/cppj.20.1.7]
   Pietkiewicz I., 2012, Czasopismo Psychologiczne, V18, P361, DOI DOI 10.14691/CPPJ.20.1.7
   Pillow W. S., 2003, QUALITATIVE STUDIES, V16, P175, DOI [https://doi.org/10.1080/0951839032000060635, DOI 10.1080/0951839032000060635, 10.1080/0951839032000060635]
   Pinto G, 2018, SOFTWARE PRACT EXPER, V48, P2223, DOI 10.1002/spe.2637
   Polkinghorne DE, 2007, QUAL INQ, V13, P471, DOI 10.1177/1077800406297670
   Ponterotto JG, 2005, J COUNS PSYCHOL, V52, P126, DOI 10.1037/0022-0167.52.2.126
   Popay J, 1998, QUAL HEALTH RES, V8, P341, DOI 10.1177/104973239800800305
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Probst B, 2014, QUAL SOC WORK, V13, P813, DOI 10.1177/1473325013506248
   Rejab MM., 2019, Interdisciplinary Journal of Information, Knowledge, and Management, V14, P99, DOI DOI 10.28945/4280
   Reynolds J, 2011, HEALTH RES POLICY SY, V9, DOI 10.1186/1478-4505-9-43
   Ricoeur Paul., 2010, Time and Narrative
   Riessman C. K., 2005, Narrative, Memory Everyday Life, P1, DOI DOI 10.2307/1252124
   Riessman CK., 2000, QUALITATIVE RES SOCI, P168
   Rolfe G, 2006, J ADV NURS, V53, P304, DOI 10.1111/j.1365-2648.2006.03727.x
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sablis A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2297
   SANDELOWSKI M, 1993, ADV NURS SCI, V16, P1
   SANDELOWSKI M, 1986, ADV NURS SCI, V8, P27, DOI 10.1097/00012272-198604000-00005
   Sarbin Theodore R., 1986, Narrative psychology: The storied nature of human conduct, P3
   Sas D, 2020, SOFTWARE QUAL J, V28, P505, DOI 10.1007/s11219-019-09478-x
   Seale C., 1999, Qualitative inquiry, V5, P465, DOI [DOI 10.1177/107780049900500402, 10.1177/107780049900500402]
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Senapathi M, 2017, J SYST SOFTWARE, V132, P298, DOI 10.1016/j.jss.2017.07.010
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Shkedi A., 2005, MULTIPLE CASE NARRAT
   Siddoo V, 2017, INT J INF TECHNOL SY, V10, P22, DOI 10.4018/IJITSA.2017010102
   Silva Farias Roselane, 2019, Empirical Software Engineering, V24, P3255, DOI 10.1007/s10664-019-09723-8
   Singh K, 2023, BEHAV INFORM TECHNOL, V42, P403, DOI 10.1080/0144929X.2021.2023636
   Smith J., 2009, INTERPRETATIVE PHENO
   Smith J.A., 2007, Qualitative psychology: Interpretative phenomenological analysis
   Smith J. A., 2015, Qualitative psychology: A practical guide to research methods
   Smith J. A., 2004, QUALITATIVE RES PSYC, V1, P39, DOI DOI 10.1191/1478088704QP004OA
   Smith JA, 2011, HEALTH PSYCHOL REV, V5, P9, DOI 10.1080/17437199.2010.510659
   Smith S, 2006, INT J THER REHABIL, V13, P209, DOI 10.12968/ijtr.2006.13.5.21377
   Snyder H, 2019, J BUS RES, V104, P333, DOI 10.1016/j.jbusres.2019.07.039
   Sofaer S, 1999, HEALTH SERV RES, V34, P1101
   Starks H, 2007, QUAL HEALTH RES, V17, P1372, DOI 10.1177/1049732307307031
   Stebbins R A., 2001, Exploratory Research in the Social Sciences, Vvol 48
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   Strandberg PE, 2019, IEEE ACCESS, V7, P46434, DOI 10.1109/ACCESS.2019.2909093
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   Stuhlmiller CM, 2001, INNOVAT PSYCHOL, P63
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Tassabehji R, 2021, HUM RELAT, V74, P1296, DOI 10.1177/0018726720914723
   Taylor KJ, 2016, INFORM TECHNOL PEOPL, V29, P670, DOI 10.1108/ITP-02-2014-0031
   Teixeira J, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0028-2
   Tomer G, 2016, INFORM TECHNOL PEOPL, V29, P146, DOI 10.1108/ITP-10-2013-0181
   Tomkins L, 2013, QUAL RES ORGAN MANAG, V8, P258, DOI 10.1108/QROM-04-2012-1060
   Tong A, 2007, INT J QUAL HEALTH C, V19, P349, DOI 10.1093/intqhc/mzm042
   Torraco R. J., 2005, HUMAN RESOURCE DEV R, V4, P356, DOI [DOI 10.1177/1534484305278283, 10.1177/1534484305278283]
   Tracy SJ, 2010, QUAL INQ, V16, P837, DOI 10.1177/1077800410383121
   Tsui ABM, 2007, TESOL QUART, V41, P657, DOI 10.2307/40264401
   Ulziit B, 2015, J SOFTW-EVOL PROC, V27, P763, DOI 10.1002/smr.1720
   Wang Y, 2016, EMPIR SOFTW ENG, V21, P2233, DOI 10.1007/s10664-015-9407-3
   Watt D, 2007, QUAL REP, V12, P82
   Weick K., 1995, SENSEMAKING ORG
   Weise P., 2021, Frictions in Software Development: An Interpretive Phenomenological Analysis
   Whittemore R, 2001, QUAL HEALTH RES, V11, P522, DOI 10.1177/104973201129119299
   Wildgaard L, 2015, SCIENTOMETRICS, V104, P873, DOI 10.1007/s11192-015-1608-4
   Wiles JL, 2005, AREA, V37, P89, DOI 10.1111/j.1475-4762.2005.00608.x
   Willig C., 2013, INTRO QUALITATIVE RE
   Zayan D, 2019, SOFTW SYST MODEL, V18, P2213, DOI 10.1007/s10270-017-0652-3
   Zayour I, 2016, INFORM SOFTWARE TECH, V70, P130, DOI 10.1016/j.infsof.2015.10.010
NR 220
TC 1
Z9 1
U1 8
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 SEP 12
PY 2023
DI 10.1002/smr.2607
EA SEP 2023
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R4TM8
UT WOS:001064285800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sun, XB
   Li, LL
   Bo, LL
   Wu, XX
   Wei, Y
   Li, B
AF Sun, Xiaobing
   Li, Lili
   Bo, Lili
   Wu, Xiaoxue
   Wei, Ying
   Li, Bin
TI Automatic software vulnerability classification by extracting
   vulnerability triggers
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Bert Q&A; TextRCNN; triggers extraction; vulnerability classification
AB Vulnerability classification is a significant activity in software development and software maintenance. Natural Language Processing (NLP) techniques, which utilize the descriptions in public repositories, are widely used in automatic software vulnerability classification. However, vulnerability descriptions are ordinarily short and contain many technical terms, making them difficult for machines to automatically comprehend. In this paper, we present an approach based on vulnerability triggers to automatically classify vulnerabilities. First, we extract vulnerability triggers with Bert Question and Answer (Bert Q&A). Then, we use Recurrent Convolutional Neural Networks for Text classification (TextRCNN) to classify vulnerabilities based on Common Weakness Enumeration (CWE). We statistically perform an analysis of vulnerability triggers and comprehensively evaluate the classification performance of our approach on a set of 4769 prelabeled vulnerability entries, as well as compare it with state-of-the-art vulnerability classification approaches. Experiment results show that our approach can achieve a F1-measure of 95% on extraction and 80.8% on classification.
C1 [Sun, Xiaobing; Li, Lili; Bo, Lili; Wu, Xiaoxue; Wei, Ying; Li, Bin] Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.
   [Sun, Xiaobing; Bo, Lili] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Sun, Xiaobing; Li, Bin] Yangzhou Univ, Jiangsu Prov Engn Res Ctr Knowledge Management &, Yangzhou, Jiangsu, Peoples R China.
   [Bo, Lili] Nanjing Univ Aeronaut & Astronaut, Key Lab Safety Crit Software, Minist Ind & Informat Technol, Nanjing, Peoples R China.
C3 Yangzhou University; Nanjing University; Yangzhou University; Nanjing
   University of Aeronautics & Astronautics
RP Li, LL (corresponding author), Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.
EM lilibo@yzu.edu.cn
RI Wei, Ying/HZK-9397-2023
OI Sun, Xiaobing/0000-0001-5165-5080
FU National Natural Science Foundation of China [61872312, 61972335,
   62002309]; Six Talent Peaks Project in Jiangsu Province [RJFW-053];
   Jiangsu "333" Project; Natural Science Foundation of the Jiangsu Higher
   Education Institutions of China [20KJB520016]; Open Funds of State Key
   Laboratory for Novel Software Technology of Nanjing University
   [KFKT2022B17, KFKT2020B16]; Innovation (Science and technology) project
   of Scientific Research Base of Nanjing University of Aeronautics and
   Astronautics [NJ2020022]; Natural Science Research Project of
   Universities in Jiangsu Province [20KJB520024]; Yangzhou University
   Interdisciplinary Research Foundation for Animal Husbandry Discipline of
   Targeted Support [yzuxk202015]; Yangzhou city-Yangzhou University
   Science and Technology Cooperation Fund Project [YZ2021157]; Yangzhou
   University Top-level Talents Support Program (2019)
FX This work is supported by the National Natural Science Foundation of
   China (no.61872312, no.61972335, and no.62002309), the Six Talent Peaks
   Project in Jiangsu Province (no. RJFW-053), the Jiangsu "333" Project;
   the Natural Science Foundation of the Jiangsu Higher Education
   Institutions of China (no. 20KJB520016); the Open Funds of State Key
   Laboratory for Novel Software Technology of Nanjing University
   (no.KFKT2022B17 and no.KFKT2020B16), the Innovation (Science and
   technology) project of Scientific Research Base of Nanjing University of
   Aeronautics and Astronautics (no. NJ2020022), the Natural Science
   Research Project of Universities in Jiangsu Province (no. 20KJB520024),
   the Yangzhou University Interdisciplinary Research Foundation for Animal
   Husbandry Discipline of Targeted Support (yzuxk202015), the Yangzhou
   city-Yangzhou University Science and Technology Cooperation Fund Project
   (YZ2021157), and Yangzhou University Top-level Talents Support Program
   (2019).
CR [Anonymous], 2013, P WORKSH ICLR 2013 S
   [Anonymous], 2016, P INT C BROADBAND WI
   Aota M, 2020, IEEE SYMP COMP COMMU, P26, DOI 10.1109/iscc50000.2020.9219568
   Cao SC, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106576
   Chen JF, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110616
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cong X., 2020, ARXIV
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Das S. S., 2021, 2021 IEEE 8th International Conference on Data Science and Advanced Analytics (DSAA), P1
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Doddington G., 2004, The Automatic Content Extraction (ACE) Program-Tasks, Data, and Evaluation
   Du X, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P671
   Huang ZH, 2015, COMPUT INTEL NEUROSC, V2015, DOI 10.1155/2015/685404
   Kam H.T., 1995, Proc. of the 3rd Int'l Conf. on Document Analysis and Recognition, Montreal, Canada, P14
   Kim Y, 2014, ARXIV PREPRINT ARXIV, DOI 10.3115/v1/D14-1181
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Lample G, 2018, Arxiv, DOI arXiv:1711.00043
   Li Q., 2013, P 51 ANN M ASS COMP
   Liu A., 2021, ASS COMPUTATIONAL LI, P302
   Liu J, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P1641
   Liu K, 2020, AI OPEN, V1, P22, DOI 10.1016/j.aiopen.2021.02.004
   Liu P., 2016, P 25 INT JOINT C ART, P2873
   Liu Y, 2020, IEEE INT CONF AUTOM, P834, DOI 10.1145/3324884.3416628
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Ni Z, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110538
   Paszke A, 2019, ADV NEUR IN, V32
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Ponta SE, 2020, EMPIR SOFTW ENG, V25, P3175, DOI 10.1007/s10664-020-09830-x
   Romano J., 2006, FLORIDA ASS INSTITUT, V177
   Russell S., 2020, ARTIF INTELL
   Russo ER, 2019, J SYST SOFTWARE, V156, P84, DOI 10.1016/j.jss.2019.06.001
   Shuai B, 2013, 2013 IEEE INTERNATIONAL CONFERENCE ON INFORMATION AND AUTOMATION (ICIA), P312, DOI 10.1109/ICInfA.2013.6720316
   Spanos G, 2018, J SYST SOFTWARE, V146, P152, DOI 10.1016/j.jss.2018.09.039
   Stuckman J, 2017, IEEE T RELIAB, V66, P17, DOI 10.1109/TR.2016.2630503
   Tao Wen, 2015, Journal of Communications, V10, P107, DOI 10.12720/jcm.10.2.107-116
   Triet Huynh Minh Le, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P371, DOI 10.1109/MSR.2019.00063
   WALKER SH, 1967, BIOMETRIKA, V54, P167, DOI 10.1093/biomet/54.1-2.167
   Wang JA., 2010, Proceedings of the 6th Cyber Security and Information Intelligence Research Workshop, CSIIRW 2010, P29
   Wei Y, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2376
   Woolson RF, 2007, Wiley encyclopedia of clinical trials, P1, DOI [10.1002/9780471462422.eoct979, DOI 10.1002/9780471462422.EOCT979]
   Zhou C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10010-8
NR 43
TC 5
Z9 5
U1 9
U2 27
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2024
VL 36
IS 2
SI SI
AR e2508
DI 10.1002/smr.2508
EA SEP 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HT8V5
UT WOS:000851437800001
DA 2024-07-18
ER

PT J
AU Daun, M
   Tenbergen, B
AF Daun, Marian
   Tenbergen, Bastian
TI Context modeling for cyber-physical systems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE collaborative system networks; context; context analysis; context
   modeling; dynamic context; cyber-physical systems; model-based
   engineering; requirements engineering; validation; verification
ID SOFTWARE; REQUIREMENTS; CHALLENGES; SAFETY; FRAMEWORK; DESIGN
AB When developing cyber-physical systems (CPS), the context is of vital importance. CPS interact with the world not only through sensing the environment and acting upon it (like embedded systems) but also by communicating with other CPS (like systems in the Internet of Things [IoT]). This means that the context interactions CPS must deal with are much greater than regular embedded or loT systems: On the one hand, external systems and human users constrain the specific interaction among them. On the other hand, properties of these external systems, human users, and laws, regulations, or standards constrain the way the CPS must be developed. In this paper, we propose a comprehensive, ontologically grounded context modeling framework to systematically explore the problem space in which a CPS under development will operate. This allows for the systematic elicitation of requirements for the CPS, early validation and verification of its properties, and safety assessment of its context interactions at runtime.
C1 [Daun, Marian] Univ Duisburg Essen, Paluno, Ruhr Inst Software Technol, Essen, Germany.
   [Tenbergen, Bastian] SUNY Coll Oswego, Dept Comp Sci, Oswego, NY USA.
C3 University of Duisburg Essen; State University of New York (SUNY)
   System; State University of New York (SUNY) - Oswego
RP Daun, M (corresponding author), Univ Duisburg Essen, Paluno, Ruhr Inst Software Technol, Essen, Germany.
EM marian.daun@paluno.uni-due.de
OI Tenbergen, Bastian/0000-0002-0145-4800; Daun, Marian/0000-0002-9156-9731
FU German Federal Ministry of Education and Research [01IS12005C]
FX This research was partly funded by the German Federal Ministry of
   Education and Research under grant number 01IS12005C. We would like to
   thank our colleagues Andre Heuer, Philipp Bohn, Jennifer Brings, Andrea
   Salmon, and Thorsten Weyer for their collaboration in research projects
   and for influencing our work as well as industry partners from the
   valuable feedback from practical application that led to iterative
   improvement of the context modeling framework. Open access funding
   enabled and organized by Projekt DEAL.
CR Al-Hammouri A, 2007, SENSYS'07: PROCEEDINGS OF THE 5TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS, P383
   Albers K., 2016, ADV MODEL BASED ENG, DOI 10.1007/978-3-319-48003-9_3
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   [Anonymous], 2011, ISO 262622011
   [Anonymous], 2011, ISO/IEC JTC 1/SC 7, DOI DOI 10.1007/BF01077867
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   Antonino PO, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2018), P19, DOI 10.1109/ICSA-C.2018.00012
   Banerjee A, 2012, P IEEE, V100, P283, DOI 10.1109/JPROC.2011.2165689
   Baresi L, 2006, COMPUTER, V39, P36, DOI 10.1109/MC.2006.362
   Bedjeti A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P117, DOI 10.1109/ICSA.2017.26
   Berry DM, 1998, NINTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, PROCEEDINGS, P147, DOI 10.1109/IWSSD.1998.667930
   Brandstetter V., 2015, P CAISE 2015 FOR 27, P189
   Brandstetter V., 2015, COMPL SYS INFOR MODE, P50
   Brings J, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P396, DOI 10.5220/0006603403960403
   Broy Manfred, 2012, Large-Scale Complex IT Systems. Development, Operation and Management. 17th Monterey Workshop 2012. Revised Selected Papers, P1, DOI 10.1007/978-3-642-34059-8_1
   Broy Manfred., 2013, Complex Systems Design Management, P1
   Caramihai SI, 2013, ADV INTELL SYST, V187, P355
   Cook W, 2018, 2018 4TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING FOR SELF-ADAPTIVE, COLLABORATIVE, AND CYBER PHYSICAL SYSTEMS (RESACS 2018), P32, DOI 10.1109/RESACS.2018.00011
   Daun M., 2012, MODEL BASED ENG EMBE, P51, DOI [10.1007/978-3-642-34614-9_4, DOI 10.1007/978-3-642-34614-9_4]
   Daun M., 2016, ADV MODEL BASED ENG, DOI 10.1007/978-3-319-48003-9_3
   Daun M., 2015, CEUR WORKSHOP P, V1337, P115
   Daun M., 2015, WORKSH EM ID TRENDS
   Daun M., 2014, GEM TAG WORKSH TAG S, P67
   Daun M, 2016, 2016 3RD INTERNATIONAL WORKSHOP ON EMERGING IDEAS AND TRENDS IN ENGINEERING OF CYBER-PHYSICAL SYSTEMS (EITEC), P5, DOI 10.1109/EITEC.2016.7503689
   Daun M, 2014, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE 2014), P226
   DeMarco T., 1979, STRUCTURED ANAL SYST
   Devesh Mishra, 2020, Intelligent Communication, Control and Devices. Proceedings of ICICCD 2018. Advances in Intelligent Systems and Computing (AISC 989), P367, DOI 10.1007/978-981-13-8618-3_39
   Dhaussy P, 2009, LECT NOTES COMPUT SC, V5795, P438, DOI 10.1007/978-3-642-04425-0_34
   Ericson CA, 2005, HAZARD ANALYSIS TECHNIQUES FOR SYSTEM SAFETY, P1
   Felty AP, 2003, ACM T SOFTW ENG METH, V12, P3, DOI 10.1145/839268.839270
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   Fortino G, 2018, 2018 IEEE 4TH WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P488, DOI 10.1109/WF-IoT.2018.8355174
   Gause DC, 2005, IEEE SOFTWARE, V22, P13, DOI 10.1109/MS.2005.143
   Gharib M, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2328
   Ghezzi C, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1888
   Giaimo F, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962709
   Gonçcalves MB, 2014, IEEE SYS MAN CYBERN, P1605, DOI 10.1109/SMC.2014.6974145
   Gunter CA, 2000, IEEE SOFTWARE, V17, P37, DOI 10.1109/52.896248
   Harper KE, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P123, DOI 10.1109/WICSA.2015.22
   Holtmann J, 2016, J SOFTW-EVOL PROC, V28, P722, DOI 10.1002/smr.1780
   Houdek F., 2016, ADV MODEL BASED ENG, DOI 10.1007/978-3-319-48003-9_3
   ISO, 214481 ISO
   Jackson, 2006, PROBLEM FRAMES
   JACKSON M, 1995, PROC INT CONF SOFTW, P283, DOI 10.1145/225014.225041
   Jedlitschka A., 2012, MODEL BASED ENG EMBE, DOI 10.1007/978-3-642-34614-9_10
   Jianhui Mao, 2012, Proceedings of the 2012 Second International Conference on Intelligent System Design and Engineering Application (ISDEA), P509, DOI 10.1109/ISdea.2012.592
   Karsai G, 2003, P IEEE, V91, P145, DOI 10.1109/JPROC.2002.805824
   Kelly T., 2004, P WORKSH ASS CAS DEP
   Koziolek H, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P196, DOI 10.1109/ICSA.2018.00029
   Kruchten P, 2013, J SOFTW-EVOL PROC, V25, P351, DOI 10.1002/smr.572
   Lagarde F, 2008, LECT NOTES COMPUT SC, V4961, P116, DOI 10.1007/978-3-540-78743-3_10
   Lawrence JD, 1997, RELIAB ENG SYST SAFE, V55, P267, DOI 10.1016/S0951-8320(96)00098-1
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Lee Jay, 2015, Manufacturing Letters, V3, P18, DOI 10.1016/j.mfglet.2014.12.001
   Leitao P, 2016, COMPUT IND, V81, P11, DOI 10.1016/j.compind.2015.08.004
   Lemos Rd., 2013, SOFTWARE ENG SELF AD, P32
   Madala K, 2020, PROC INT SYMP SOFTW, P380, DOI 10.1109/ISSRE5003.2020.00043
   McDermid J., 2002, P INT S FORM TECHN R, P22, DOI [10.1007/3-540-45739-9_2, DOI 10.1007/3]
   McMenamin S., 1984, ESSENTIAL SYSTEMS AN
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Micskei Z., 2012, P AG MULT SYST TECHN, P503, DOI [10.1007/978-3-642-30947-2_55, DOI 10.1007/978]
   Moshirpour M, 2012, INT J SOFTW ENG KNOW, V22, P729, DOI 10.1142/S0218194012400104
   Mosterman PJ, 2016, SOFTW SYST MODEL, V15, P5, DOI 10.1007/s10270-015-0469-x
   Nakamura M, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, P289, DOI 10.1109/ICAC.2015.57
   Object Management Group, OMG MET OBJ FAC MOF
   Palensky P, 2014, IEEE T SYST MAN CY-S, V44, P318, DOI 10.1109/TSMCC.2013.2265739
   PARNAS DL, 1995, SCI COMPUT PROGRAM, V25, P41, DOI 10.1016/0167-6423(95)96871-J
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   PONSARD C, J SOFTW EVOL PROCESS, V33
   Pumfrey D.J., 1999, The Principled Design of Computer System Safety Analyses
   Qui R., 2011, DELIVERABLE D1 3 A S
   Rashid A., 2019, The Cyber Security Body of Knowledge
   Robertson S., 2013, MASTERING REQUIREMEN, V3rd
   Sangiovanni-Vincentelli A, 2012, EUR J CONTROL, V18, P217, DOI 10.3166/EJC.18.217-238
   Shanaa W., 2017, P 3 INT WS RE SELF A
   Sindre G., 2001, P 14 NORW INF C NIK, P219
   Sindre G, 2007, INT FED INFO PROC, V244, P252
   Sommerville I., 2020, ENIGNEERING SOFTWARE
   Sparks G., 2010, ENTERPRISE ARCHITECT
   Strang T, 2003, LECT NOTES COMPUT SC, V2893, P236
   Sun X., 2014, ISGT 2014, P1
   Sutcliffe A., 2002, DOMAIN THEORY PATTER
   Team N, 1996, INFORM SYST, V21, P515, DOI 10.1016/0306-4379(96)00026-9
   Tenbergen B, 2021, SOFTW SYST MODEL, V20, P175, DOI 10.1007/s10270-020-00799-1
   Tenbergen B, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P206, DOI 10.1109/ICSA.2018.00030
   Tenbergen B, 2018, REQUIR ENG, V23, P291, DOI 10.1007/s00766-017-0267-9
   Tenbergen B, 2015, LECT NOTES COMPUT SC, V9013, P17, DOI 10.1007/978-3-319-16101-3_2
   Tripakis S., P 2014 NTL WS T CPS
   Tröls M, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2308
   van den Bergh J., MODEL DRIVEN ENG LAN, V4199, p140
   van Lamsweerde A., 2010, REQUIR ENG
   Walewski J. W., 2016, 2016 11 SYST SYST EN, P1
   Wan JF, 2014, IEEE COMMUN MAG, V52, P106, DOI 10.1109/MCOM.2014.6871677
   Weyer T., 2010, THESIS U DUISBURG ES
   Wieringa Roel J., 2014, Design science methodology for information systems and software engineering
   Yu E., 1995, MODELING STRATEGIC R
   Yu E.S.-K., 1996, Modelling strategic relationships for process reengineering
   Zahid M, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2346
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
   Zhuoqun Yang, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P55, DOI 10.1007/978-3-319-05843-6_5
NR 100
TC 1
Z9 1
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2023
VL 35
IS 7
SI SI
AR e2451
DI 10.1002/smr.2451
EA APR 2022
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L0RH3
UT WOS:000782145800001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Zarras, AV
   Dinos, I
   Vassiliadis, P
AF Zarras, Apostolos, V
   Dinos, Ioannis
   Vassiliadis, Panos
TI The athletic heart syndrome in web service evolution
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE complex systems; web service evolution; Lehman's laws
ID DYNAMIC EVOLUTION
AB Despite the particular standards, technologies, and trends (W3C, RESTful, microservices, etc.) that a team decides to follow for the development of a service-oriented system, most likely the team members will have to use one or more services that solve general-purpose problems like cloud computing, networking and content delivery, storage and database, management and governance, and application integration. Typically, general-purpose services are long-lived, they have several responsibilities, their interfaces are complex, and they grow over time. The way that these services evolve also affects the evolution of any system that will depend on them. Consequently, the selection of the particular services that will be used is a main concern for the team. In this paper, we report a pattern, called the athletic heart syndrome, which facilitates the selection of services that evolve properly. Patterns specify best practices that emerge from multiple real-world cases. In our context, the athletic heart syndrome comes out from a study that concerns the evolution of a set of popular, long-lived Amazon services that cover different domains. According to the athletic heart syndrome, the developers should select services whose heartbeat of changes looks like the heartbeat of an athlete when he is at rest. Specifically, the heartbeat of changes should consist mostly of calm periods, interrupted by few spikes of change. Similarly, the incremental growth of the services should involve mainly calm periods of maintenance, separated by spikes of growth. Selecting services that adhere to the pattern signifies high chances that the services evolve to deal with changing requirements. The pattern further guarantees that the service evolution involves both the expansion of the services with new functionalities and the maintenance of existing ones. The pattern also assures that the complexity increase in the service interfaces will be smooth and tolerable. Finally, conformance with the pattern implies that the growth of the services will be predictable.
C1 [Zarras, Apostolos, V; Dinos, Ioannis; Vassiliadis, Panos] Univ Ioannina, Dept Comp Sci & Engn, Ioannina, Greece.
C3 University of Ioannina
RP Zarras, AV (corresponding author), Univ Ioannina, Dept Comp Sci & Engn, Ioannina, Greece.
EM zarras@cs.uoi.gr
RI Vassiliadis, Panos/AAI-8035-2020
OI Vassiliadis, Panos/0000-0003-0085-6776; Zarras,
   Apostolos/0000-0001-9521-5853
CR Ali M, 2013, 2013 IEEE SEVENTH INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2013), P113, DOI 10.1109/SOSE.2013.35
   Andrikopoulos V, 2012, IEEE T SOFTWARE ENG, V38, P609, DOI 10.1109/TSE.2011.22
   [Anonymous], 2006, SOFTWARE EVOLUTION F
   Athanasopoulos D, 2015, IEEE T SERV COMPUT, V8, P550, DOI 10.1109/TSC.2014.2310195
   Autili M, 2018, ECSA 2018: PROCEEDINGS OF THE 12TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE: COMPANION PROCEEDINGS, DOI 10.1145/3241403.3241425
   Autili M, 2015, IEEE SOFTWARE, V32, P50, DOI 10.1109/MS.2014.131
   Banati H, 2012, 2012 2ND INTERNATIONAL CONFERENCE ON UNCERTAINTY REASONING AND KNOWLEDGE ENGINEERING (URKE), P44, DOI 10.1109/URKE.2012.6319580
   Baresi Luciano, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P77, DOI 10.1109/WICSA.2014.24
   Baresi L, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P3, DOI 10.1007/978-3-030-31646-4_1
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Campinhos Joao, 2017, 2017 IEEE/ACM 2nd International Workshop on Variability and Complexity in Software Design (VACE). Proceedings, P20, DOI 10.1109/VACE.2017.6
   De Angelis F, 2013, 2013 8TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST (AST), P26, DOI 10.1109/IWAST.2013.6595787
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Espinha T, 2015, J SYST SOFTWARE, V100, P27, DOI 10.1016/j.jss.2014.10.014
   Fokaefs M., 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P49, DOI 10.1109/ICWS.2011.114
   Fokaefs M, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P81, DOI 10.1109/ICWS.2015.21
   Fokaefs M, 2013, PROC IEEE INT CONF S, P444, DOI 10.1109/ICSM.2013.68
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Geihs, 2019, P SEM SER ADV TECHN, V2510
   Huu Tam Tran, 2021, Context-Aware Systems and Applications, and Nature of Computation and Communication. 9th EAI International Conference (ICCASA 2020) and 6th EAI International Conference (ICTCC 2020). Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 343), P233, DOI 10.1007/978-3-030-67101-3_19
   Jun Li, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P300, DOI 10.1109/ICWS.2013.48
   Khebizi A, 2017, SERV ORIENTED COMPUT, V11, P163, DOI 10.1007/s11761-016-0204-7
   Kuchana P., 2004, Software architecture design patterns in Java
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Lehman MM, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P84, DOI 10.1109/METRIC.1998.731229
   Leitner P, 2008, P IEEE I C SERV COMP, P59, DOI 10.1109/SCC.2008.21
   Lübke D, 2019, PROCEEDINGS OF THE 24TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2019), DOI 10.1145/3361149.3361164
   Lv C, 2018, IEEE T SERV COMPUT, V11, P630, DOI 10.1109/TSC.2015.2466544
   Meszaros G, 1998, SOFTW PATT S, P529
   Nguyen Cu D., 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P636, DOI 10.1109/ICWS.2011.75
   Romano D., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P392, DOI 10.1109/ICWS.2012.29
   Romano D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1365, DOI 10.1109/ICSE.2013.6606718
   Sampaio AR, 2017, PROC IEEE INT CONF S, P539, DOI 10.1109/ICSME.2017.63
   Skoulis I, 2014, LECT NOTES COMPUT SC, V8484, P379, DOI 10.1007/978-3-319-07881-6_26
   Sneed HM, 2010, IEEE INT S WEB SYST, P111, DOI 10.1109/WSE.2010.5623580
   Treiber M, 2009, LECT NOTES COMPUT SC, V5472, P284, DOI 10.1007/978-3-642-01247-1_29
   Vassiliadis P, 2021, AWS DATA WSDL DESCRI
   Vassiliadis P, 2017, INFORM SYST, V63, P24, DOI 10.1016/j.is.2016.06.010
   Wang HZ, 2016, LECT NOTES COMPUT SC, V9936, P282, DOI 10.1007/978-3-319-46295-0_18
   Wang SY, 2014, 2014 IEEE 21ST INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2014), P201, DOI 10.1109/ICWS.2014.39
   Wang XH, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P1, DOI 10.1109/ICWS.2018.00008
   Wang Y, 2013, SERV ORIENTED COMPUT, V7, P259, DOI 10.1007/s11761-013-0128-4
   Wellhausen T., 2011, P 16 EUROPEAN C PATT, P1, DOI DOI 10.1145/2396716.2396721
   Xie GW, 2009, PROC IEEE INT CONF S, P51, DOI 10.1109/ICSM.2009.5306356
   Zarras AV, 2016, LECT NOTES COMPUT SC, V9694, P444, DOI 10.1007/978-3-319-39696-5_27
   Zhi Le Zou, 2008, 2008 IEEE International Conference on Web Services (ICWS), P329, DOI 10.1109/ICWS.2008.21
NR 47
TC 4
Z9 4
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2022
VL 34
IS 10
SI SI
AR e2418
DI 10.1002/smr.2418
EA DEC 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5A6PE
UT WOS:000734596600001
DA 2024-07-18
ER

PT J
AU Yu, GB
   Huang, ZC
   Chen, PF
AF Yu, Guangba
   Huang, Zicheng
   Chen, Pengfei
TI TraceRank: Abnormal service localization with dis-aggregated end-to-end
   tracing data in cloud native systems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE end-to-end tracing; microservice; random walk; root cause analysis;
   spectrum
AB Modern cloud native applications are generally built with a microservice architecture. To tackle various performance problems among a large number of services and machines, an end-to-end tracing tool is always equipped in these systems to track the execution path of every single request. However, it is nontrivial to conduct root cause analysis of anomalies with such a large volume of tracing data. This paper proposes a novel system named TraceRank to identify and locate abnormal services causing performance problems with dis-aggregated end-to-end traces. TraceRank mainly includes an anomaly detection module and a root cause analysis module. The root cause analysis procedure is triggered when an anomaly is detected. To fully leverage the information provided by the tracing data, both the spectrum analysis and the PageRank-based random walk methods are introduced to pinpoint abnormal services. The experiments in TrainTicket and Bookinfo microservice benchmarks and a real-world system show that TraceRank can locate root causes with 90% in Precision and 86% in Recall. TraceRank has up to 10% improvement compared with several state-of-the-art approaches in both Precision and Recall. Finally, TraceRank has good scalability and a low overhead to adapt to large-scale microservice systems.
C1 [Yu, Guangba; Huang, Zicheng; Chen, Pengfei] Sun Yat Sen Univ, Sch Comp & Engn, Guangzhou, Peoples R China.
C3 Sun Yat Sen University
RP Chen, PF (corresponding author), Sun Yat Sen Univ, Sch Comp & Engn, Guangzhou, Peoples R China.
EM chenpf7@mail.sysu.edu.cn
OI Chen, Pengfei/0000-0003-0972-6900
FU Key-Area Research and Development Program of Guangdong Province
   [2020B010165002]; National Natural Science Foundation of China
   [61802448, U1811462]; Natural Science Foundation of Guangdong Province
   [2019A1515012229]; Wechat Rhino-Bird Joint Research Program
   [JR-WXG-2021621]; Basic and Applied Basic Research of Guangzhou
   [202002030328]
FX Key-Area Research and Development Program of Guangdong Province,
   Grant/Award Number: 2020B010165002; National Natural Science Foundation
   of China, Grant/Award Numbers: 61802448, U1811462; Natural Science
   Foundation of Guangdong Province, Grant/Award Number: 2019A1515012229;
   Wechat Rhino-Bird Joint Research Program, Grant/Award Number:
   JR-WXG-2021621; Basic and Applied Basic Research of Guangzhou,
   Grant/Award Number: 202002030328
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   [Anonymous], 2007, NSDI
   [Anonymous], 2003, P 12 INT C WORLD WID
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Barham P, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P259
   Baset Salman A., 2012, Operating Systems Review, V46, P57, DOI 10.1145/2331576.2331586
   Chen PF, 2014, IEEE INFOCOM SER, P1887, DOI 10.1109/INFOCOM.2014.6848128
   Chen Y-YM., 2004, P 1 C S NETWORKED SY, p1
   Doray F, 2017, IEEE T PARALL DISTR, V28, P462, DOI 10.1109/TPDS.2016.2567390
   Dunn E., 2013, WE DEPLOY 300 TIMES
   Farshchi M, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P24, DOI 10.1109/ISSRE.2015.7381796
   Gan Y, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P19, DOI 10.1145/3297858.3304004
   Guo XF, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1387, DOI 10.1145/3368089.3417066
   He ZX, 2021, INT J ENGINE RES, V22, P2673, DOI 10.1177/1468087420936490
   Heorhiadi V, 2016, INT CON DISTR COMP S, P57, DOI 10.1109/ICDCS.2016.11
   Nguyen H, 2013, INT CON DISTR COMP S, P21, DOI 10.1109/ICDCS.2013.26
   Jayathilaka H, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P469, DOI 10.1145/3038912.3052649
   Jiang JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P502, DOI 10.1109/ASE.2019.00054
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kaldor J, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P34, DOI 10.1145/3132747.3132749
   Kandula S, 2009, ACM SIGCOMM COMP COM, V39, P243, DOI 10.1145/1594977.1592597
   Las-Casas P, 2018, PROCEEDINGS OF THE 2018 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '18), P326, DOI 10.1145/3267809.3267841
   Li Z., 2021, PROD OPER MANAG, P1, DOI DOI 10.1111/poms.13530
   Lin JJ, 2018, LECT NOTES COMPUT SC, V11236, P3, DOI 10.1007/978-3-030-03596-9_1
   Liu C., 2016, P CYBER PHYS SYSTEMS, p1
   Liu DW, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P338, DOI 10.1109/ICSE-SEIP52600.2021.00043
   Liu P, 2020, PROC INT SYMP SOFTW, P48, DOI 10.1109/ISSRE5003.2020.00014
   Ma M, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P246, DOI 10.1145/3366423.3380111
   Ma M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P60, DOI [10.1109/1CWS.2019.00022, 10.1109/ICWS.2019.00022]
   Ma MH, 2020, PROC VLDB ENDOW, V13, P1176, DOI 10.14778/3389133.3389136
   Mace Jonathan., 2017, End-to-End Tracing: Adoption and Use Cases
   Michlmayr Anton., 2009, MWSOC 09 P 4 INT WOR, P1, DOI DOI 10.1145/1657755.1657756
   Myunghwan Kim, 2013, Performance Evaluation Review, V41, P93
   Nagaraj K, 2012, P 9 USENIX C NETW SY, P353
   Nedelkoski S, 2019, IEEE INT CONF CLOUD, P179, DOI [10.1109/CLOUD2019.00038, 10.1109/CLOUD.2019.00038]
   Nedelkoski S, 2019, IEEE ACM INT SYMP, P241, DOI 10.1109/CCGRID.2019.00038
   Page L., 1999, PAGERANK CITATION RA
   Phillips T, 2010, LECT NOTES COMPUT SC, V6263, P157, DOI 10.1007/978-3-642-15105-7_13
   Roy A, 2019, IEEE ACM T NETWORK, V27, P2001, DOI 10.1109/TNET.2019.2938228
   Sambasivan R. R, 2011, P 8 USENIX C NETW SY, P43
   Scheinert D, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON CLOUD INTELLIGENCE (CLOUDINTELLIGENCE 2021), P7, DOI 10.1109/CloudIntelligence52565.2021.00011
   Shan HS, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P3215, DOI 10.1145/3308558.3313653
   Sigelman Benjamin H., 2010, Dapper, a large-scale distributed systems tracing infrastructure
   Thalheim J, 2017, PROCEEDINGS OF THE 2017 INTERNATIONAL MIDDLEWARE CONFERENCE (MIDDLEWARE'17), P14, DOI 10.1145/3135974.3135977
   Thereska E., 2006, ACM SIGMETRICS PERFO, P3
   Wang LZ, 2020, 2020 IEEE 13TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2020), P142, DOI 10.1109/ICWS49710.2020.00026
   Wang P, 2018, 2018 18TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND GRID COMPUTING (CCGRID), P492, DOI 10.1109/CCGRID.2018.00076
   Wu L, 2020, IEEE IFIP NETW OPER, DOI 10.1109/noms47738.2020.9110353
   Wu L, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON CLOUD INTELLIGENCE (CLOUDINTELLIGENCE 2021), P31, DOI 10.1109/CloudIntelligence52565.2021.00015
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xu Y, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON CLOUD INTELLIGENCE (CLOUDINTELLIGENCE 2021), P37, DOI 10.1109/CloudIntelligence52565.2021.00016
   Ye ZH, 2021, 21ST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2021), P416, DOI 10.1109/CCGrid51090.2021.00051
   Yu GB, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P3087, DOI 10.1145/3442381.3449905
   Yu GB, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P68, DOI 10.1109/ICWS.2019.00023
   Yu GX, 2021, IEEE T VIS COMPUT GR, V27, P3769, DOI 10.1109/TVCG.2020.2988466
   Zhang M., 2017, P 26 ACM SIGSOFT INT, p261
   Zhou H, 2018, PROCEEDINGS OF THE 2018 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '18), P149, DOI 10.1145/3267809.3267823
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
NR 59
TC 8
Z9 8
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2021 DEC 7
PY 2021
AR e2413
DI 10.1002/smr.2413
EA DEC 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XK7SW
UT WOS:000727661500001
DA 2024-07-18
ER

PT J
AU Constantino, K
   Souza, M
   Zhou, SR
   Figueiredo, E
   Kästner, C
AF Constantino, Kattiana
   Souza, Mauricio
   Zhou, Shurui
   Figueiredo, Eduardo
   Kastner, Christian
TI Perceptions of open-source software developers on collaborations: An
   interview and survey study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE collaboration in software development; collaborative software
   development; distributed collaboration; open-source software projects;
   sustained developer community participation
ID CONCEPTUAL-FRAMEWORK; SUSTAINABILITY; COMMUNICATION
AB With the emergence of social coding platforms, collaboration has become a key and dynamic aspect to the success of software projects. In such platforms, developers have to collaborate and deal with issues of collaboration in open-source software development. Although collaboration is challenging, collaborative development produces better software systems than any developer could produce alone. Several approaches have investigated collaboration challenges, for instance, by proposing or evaluating models and tools to support collaborative work. Despite the undeniable importance of the existing efforts in this direction, there are few works on collaboration from perspectives of developers. In this work, we aim to investigate the perceptions of open-source software developers on collaborations, such as motivations, techniques, and tools to support global, productive, and collaborative development. Following an ad hoc literature review, an exploratory interview study with 12 open-source software developers from GitHub, our novel approach for this problem also relies on an extensive survey with 121 developers to confirm or refute the interview results. We found different collaborative contributions, such as managing change requests. Besides, we observed that most collaborators prefer to collaborate with the core team instead of their peers. We also found that most collaboration happens in software development (60%) and maintenance (47%) tasks. Furthermore, despite personal preferences to work independently, developers still consider collaborating with others in specific task categories, for instance, software development. Finally, developers also expressed the importance of the social coding platforms, such as GitHub, to support maintainers, and contributors in making decisions and developing tasks of the projects. Therefore, these findings may help project leaders optimize the collaborations among developers and reduce entry barriers. Moreover, these findings may support the project collaborators in understanding the collaboration process and engaging others in the project.
C1 [Constantino, Kattiana; Figueiredo, Eduardo] Univ Fed Minas Gerais, Belo Horizonte, MG, Brazil.
   [Souza, Mauricio] Univ Fed Lavras, Lavras, MG, Brazil.
   [Zhou, Shurui] Univ Toronto, Toronto, ON, Canada.
   [Kastner, Christian] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
C3 Universidade Federal de Minas Gerais; Universidade Federal de Lavras;
   University of Toronto; Carnegie Mellon University
RP Constantino, K (corresponding author), Univ Fed Minas Gerais, Belo Horizonte, MG, Brazil.
EM kattiana@dcc.ufmg.br
RI Constantino, Kattiana/ABB-5575-2021
OI Constantino, Kattiana/0000-0003-4511-7504
FU CAPES [88881.189537/2018-01]; FAPEMIG [PPM-00651-17]
FX CAPES, Grant/Award Number: 88881.189537/2018-01; FAPEMIG, Grant/Award
   Number: PPM-00651-17
CR [Anonymous], 2010, INT C EV ASS SOFTW E
   [Anonymous], 2007, Leadership at a Distance: Research in Technologically-Supported Work
   Arciniegas-Mendez M, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P1049, DOI 10.1145/2998181.2998360
   Balali S., 2020, Proceedings of the 16th International Symposium on Open Collaboration, P1
   Begel Andrew, 2008, P 4 INT WORKSH COMP, P3, DOI [DOI 10.1145/RESEARCH(ICER'1404520.1404522, 10.1145/Research(ICER'1404520.1404522]
   Bernard HR., 2018, RES METHODS ANTHR QU
   Bird C., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P568, DOI 10.1109/ICSM.2011.6080832
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   Bjorn P., 2014, P COMPANION PUBLICAT, P301
   Blincoe K, 2016, INFORM SOFTWARE TECH, V70, P30, DOI 10.1016/j.infsof.2015.10.002
   Cai YF, 2016, DECIS SUPPORT SYST, V91, P103, DOI 10.1016/j.dss.2016.08.004
   Capiluppi A, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P317, DOI 10.1109/CSMR.2003.1192440
   Condori-Fernandez N, 2018, J SYST SOFTWARE, V137, P289, DOI 10.1016/j.jss.2017.12.005
   Constantino K, 2020, INT CONF GLOBAL SOFT, P55, DOI 10.1145/3372787.3390442
   Corbin J., 2015, BASICS QUALITATIVE R
   Costa C, 2021, IEEE T SOFTWARE ENG, V47, P1198, DOI 10.1109/TSE.2019.2917191
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   Farias V, 2019, IEEE SOFTWARE, V36, P42, DOI 10.1109/MS.2018.2874325
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   Giuffrida R, 2015, INFORM SOFTWARE TECH, V63, P11, DOI 10.1016/j.infsof.2015.02.013
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Jiang J, 2017, EMPIR SOFTW ENG, V22, P547, DOI 10.1007/s10664-016-9436-6
   Jiang J, 2015, J COMPUT SCI TECH-CH, V30, P998, DOI 10.1007/s11390-015-1577-3
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kalliamvakou E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P574, DOI 10.1109/ICSE.2015.74
   Krüger J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P764, DOI 10.1145/3180155.3180215
   Lakhani KR, 2003, RES POLICY, V32, P923, DOI 10.1016/S0048-7333(02)00095-1
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Laurent A.M. S., 2004, UNDERSTANDING OPEN S
   Lee A, 2017, INT SYMP EMP SOFTWAR, P1, DOI 10.1109/ESEM.2017.7
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Linåker J, 2018, J SYST SOFTWARE, V135, P17, DOI 10.1016/j.jss.2017.09.032
   Marlow Jennifer, 2013, Proc. Conf. Computer Supported Cooperative Work (CSCW 13), P117, DOI [10.1145/2441776.2441792, DOI 10.1145/2441776.2441792]
   McDonald N., 2013, CHI'13 Extended Abstracts on Human Factors in Computing Systems: ACM, P139
   McDonald N, 2014, ADV COMPLEX SYST, V17, DOI 10.1142/S0219525914500246
   Miller C, 2019, IFIP ADV INF COMM TE, V556, P116, DOI 10.1007/978-3-030-20883-7_11
   Miller KW, 2010, IT PROF, V12, P14, DOI 10.1109/MITP.2010.147
   Minto Shawn., 2007, Proc. MSR, P5, DOI [10.1109/MSR.2007.27., DOI 10.1109/MSR.2007.27]
   Mokarzel RN, 2019, INT CONF GLOBAL SOFT, P139, DOI 10.1109/ICGSE.2019.00034
   Morrison P, 2016, S VIS LANG HUM CEN C, P171, DOI 10.1109/VLHCC.2016.7739681
   Morse Janice M., 1994, HDB QUALITATIVE RES, P220
   Oliveira J, 2019, SBQS: PROCEEDINGS OF THE 18TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, P49, DOI 10.1145/3364641.3364648
   Oliveira J, 2017, LECT NOTES COMPUT SC, V10221, P184, DOI 10.1007/978-3-319-56856-0_13
   Onoue S, 2013, ASIA PAC SOFWR ENG, P7, DOI 10.1109/APSEC.2013.104
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Qureshi I, 2011, ORGAN RES METHODS, V14, P208, DOI 10.1177/1094428110375002
   Rastogi A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P102, DOI 10.1109/SANER.2016.27
   Riehle D, 2009, IEEE SOFTWARE, V26, P52, DOI 10.1109/MS.2009.44
   Schilling A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3446, DOI 10.1109/HICSS.2012.644
   Schilling A, 2014, P ANN HICSS, P4003, DOI 10.1109/HICSS.2014.495
   Stanciulescu S, 2015, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSM.2015.7332461
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Steinmacher I, 2010, LECT NOTES COMPUT SC, V6257, P185, DOI 10.1007/978-3-642-15714-1_15
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Surian D., 2011, P 2011 18 WORKING C, P379
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Tymchuk Y., 2014, MSR 2014 P 11 WORKIN, P304, DOI DOI 10.1145/2597073.2597093
   Ulziit B, 2015, J SOFTW-EVOL PROC, V27, P763, DOI 10.1002/smr.1720
   Venters CC, 2018, J SYST SOFTWARE, V138, P174, DOI 10.1016/j.jss.2017.12.026
   Viggiato M, 2019, PROC IEEE INT CONF S, P218, DOI 10.1109/ICSME.2019.00033
   Viggiato M, 2019, INT CONF GLOBAL SOFT, P84, DOI 10.1109/ICGSE.2019.00013
   von Krogh G, 2012, MIS QUART, V36, P649
   Whitehead J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P214, DOI 10.1109/FOSE.2007.4
   Yue Y, 2019, INT CONF GLOBAL SOFT, P78, DOI 10.1109/ICGSE.2019.00028
   Zhou MH, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P271, DOI 10.1145/1985793.1985831
   Zhou SR, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P350, DOI 10.1145/3338906.3338918
NR 80
TC 9
Z9 9
U1 2
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2023
VL 35
IS 5
SI SI
AR e2393
DI 10.1002/smr.2393
EA OCT 2021
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E6KV9
UT WOS:000710223800001
DA 2024-07-18
ER

PT J
AU Rico, S
   Bjarnason, E
   Engström, E
   Höst, M
   Runeson, P
AF Rico, Sergio
   Bjarnason, Elizabeth
   Engstrom, Emelie
   Host, Martin
   Runeson, Per
TI A case study of industry-academia communication in a joint software
   engineering research project
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE case study; collaboration; communication; industry-academia
ID UNIVERSITY; COLLABORATIONS
AB Empirical software engineering research relies on good communication with industrial partners. Conducting joint research both requires and contributes to bridging the communication gap between industry and academia (IA) in software engineering. This study aims to explore communication between the two parties in such a setting. To better understand what facilitates good IA communication and what project outcomes such communication promotes, we performed a case study, in the context of a long-term IA joint project, followed by a validating survey among practitioners and researchers with experience of working in similar settings. We identified five facilitators of IA communication and nine project outcomes related to this communication. The facilitators concern the relevance of the research, practitioners' attitude and involvement in research, frequency of communication and longevity of the collaboration. The project outcomes promoted by this communication include, for researchers, changes in teaching and new scientific venues, and for practitioners, increased awareness, changes to practice, and new tools and source code. Besides, both parties gain new knowledge and develop social-networks through IA communication. Our study presents empirically based insights that can provide advise on how to improve communication in IA research projects and thus the co-creation of software engineering knowledge that is anchored in both practice and research.
C1 [Rico, Sergio; Bjarnason, Elizabeth; Engstrom, Emelie; Host, Martin; Runeson, Per] Lund Univ, Dept Comp Sci, Lund, Sweden.
C3 Lund University
RP Rico, S (corresponding author), Lund Univ, Dept Comp Sci, Lund, Sweden.
EM sergio.rico@cs.lth.se
RI Höst, Martin/KDN-4323-2024; Rico, Sergio/KEJ-0444-2024; Engström,
   Emelie/AAG-7808-2019; Runeson, Per/H-5113-2019
OI Höst, Martin/0000-0002-9360-8693; Rico, Sergio/0000-0002-9348-2912;
   Engström, Emelie/0000-0001-6736-9425; Runeson, Per/0000-0003-2795-4851;
   Bjarnason, Elizabeth/0000-0001-9070-0008
FU VINNOVA [2007-03423]; Strategic Research Area ELLIIT
FX Strategic Research Area ELLIIT; VINNOVA, Grant/Award Number: 2007-03423
CR Ankrah S, 2015, SCAND J MANAG, V31, P387, DOI 10.1016/j.scaman.2015.02.003
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Baba Y, 2010, INT J INNOV MANAG, V14, DOI 10.1142/S1363919610002611
   Basili V, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.290110216
   bin Ali N, 2019, EMPIR SOFTW ENG, V24, P2020, DOI 10.1007/s10664-018-9670-1
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V70, P204, DOI 10.1016/j.infsof.2015.05.004
   Bjarnason E, 2014, IEEE SOFTWARE, V31, P37, DOI 10.1109/MS.2014.26
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Canhoto AI, 2016, IND MARKET MANAG, V56, P86, DOI 10.1016/j.indmarman.2016.03.010
   Carver JC, 2018, IEEE SOFTWARE, V35, P120, DOI 10.1109/MS.2018.3571250
   Clauss T, 2017, IND MARKET MANAG, V62, P185, DOI 10.1016/j.indmarman.2016.09.001
   Collier A, 2011, SMALL ENTERP RES, V18, P2, DOI 10.5172/ser.18.1.2
   Engström E, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P283, DOI 10.1109/ICST.2014.41
   Enoiu E. P., 2014, P 2014 ACM INT WORKS, P49, DOI 10.1145/2647648.2647655
   Garousi V, 2020, EMPIR SOFTW ENG, V25, P1687, DOI 10.1007/s10664-020-09803-0
   Garousi V, 2019, EMPIR SOFTW ENG, V24, P2540, DOI 10.1007/s10664-019-09711-y
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Gawel A., 2014, Poznan University of Economics Review, V14, P20
   Ghazi AN, 2018, IEEE ACCESS, V6, P26416, DOI 10.1109/ACCESS.2018.2834957
   Good M, 2019, TECHNOVATION, V82-83, P35, DOI 10.1016/j.technovation.2018.06.009
   Grünbacher P, 2013, IEEE-ACM INT WKSP CO, P27, DOI 10.1109/CESI.2013.6618466
   Hong JZ, 2010, KNOWL PROCESS MANAG, V17, P62, DOI 10.1002/kpm.342
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Kaindia H., 2002, Requirements Engineering, V7, P113, DOI 10.1007/s007660200008
   Kanso A., 2014, Proceedings of the 2014 international workshop on Long-term industrial collaboration on software engineering - WISE'14, P43, DOI DOI 10.1145/2647648
   Kyoung-Joo L, 2011, R&D MANAGE, V41, P190, DOI 10.1111/j.1467-9310.2011.00633.x
   Le Goues C, 2018, IEEE SOFTWARE, V35, P50, DOI 10.1109/MS.2018.3571235
   Marijan D, 2021, INFORM SOFTWARE TECH, V132, DOI 10.1016/j.infsof.2020.106473
   Mathiassen L., 2002, Information Technology & People, V15, P321, DOI 10.1108/09593840210453115
   Mikkonen T, 2018, INFORM SOFTWARE TECH, V95, P34, DOI 10.1016/j.infsof.2017.10.013
   Misirli A., 2014, P 2 INT WORKSH COND, P25, DOI [10.1145/2593690.2593691, DOI 10.1145/2593690.2593691]
   Perkmann M, 2007, INT J MANAG REV, V9, P259, DOI 10.1111/j.1468-2370.2007.00225.x
   Runeson P., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P872, DOI 10.1109/ICST.2012.190
   Runeson Per, 2014, P 2014 INT WORKSH LO, P25, DOI [10.1145/2647648.2647652, DOI 10.1145/2647648.2647652]
   Rybnicek R., 2019, Journal of Business Economics, V89, P221, DOI 10.1007/s11573-018-0916-6
   Salter AJ, 2001, RES POLICY, V30, P509, DOI 10.1016/S0048-7333(00)00091-3
   Sandberg AB, 2011, IEEE SOFTWARE, V28, P74, DOI 10.1109/MS.2011.49
   Wohlin C, 2012, IEEE SOFTWARE, V29, P67, DOI 10.1109/MS.2011.92
NR 38
TC 4
Z9 4
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2021
VL 33
IS 10
AR e2372
DI 10.1002/smr.2372
EA JUL 2021
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA WA5EF
UT WOS:000679128200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Khan, JA
   Liu, L
   Wen, LJ
   Ali, R
AF Khan, Javed Ali
   Liu, Lin
   Wen, Lijie
   Ali, Raian
TI Conceptualising, extracting and analysing requirements arguments in
   users' forums: The CrowdRE-Arg framework
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE argumentation; machine learning; natural language processing; new
   features; requirements; user forum
ID RATIONALE; SYSTEMS; DESIGN
AB Due to the pervasive use of online forums and social media, users' feedback are more accessible today and can be used within a requirements engineering context. However, such information is often fragmented, with multiple perspectives from multiple parties involved during on-going interactions. In this paper, the authors propose a Crowd-based Requirements Engineering approach by Argumentation (CrowdRE-Arg). The framework is based on the analysis of the textual conversations found in user forums, identification of features, issues and the arguments that are in favour or opposing a given requirements statement. The analysis is to generate an argumentation model of the involved user statements, retrieve the conflicting-viewpoints, reason about the winning-arguments and present that to systems analysts to make informed-requirements decisions. For this purpose, the authors adopted a bipolar argumentation framework and a coalition-based meta-argumentation framework as well as user voting techniques. The CrowdRE-Arg approach and its algorithms are illustrated through two sample conversations threads taken from the Reddit forum. Additionally, the authors devised algorithms that can identify conflict-free features or issues based on their supporting and attacking arguments. The authors tested these machine learning algorithms on a set of 3,051 user comments, preprocessed using the content analysis technique. The results show that the proposed algorithms correctly and efficiently identify conflict-free features and issues along with their winning arguments.
C1 [Khan, Javed Ali; Liu, Lin; Wen, Lijie] Tsinghua Univ, Sch Software, Beijing, Peoples R China.
   [Ali, Raian] Bournemouth Univ, Dept Comp & Informat, Poole BH12 5BB, Dorset, England.
C3 Tsinghua University; Bournemouth University
RP Khan, JA (corresponding author), Tsinghua Univ, Sch Software, Beijing, Peoples R China.
EM engr_javed501@yahoo.com
RI Ali, Raian/AAM-9992-2021; Ali, Raian/HZI-8249-2023; Khan, Javed
   Ali/ISS-4923-2023
OI Ali, Raian/0000-0002-5285-7829; Khan, Javed Ali/0000-0003-3306-1195;
   Wen, Lijie/0000-0003-0358-3160
FU National Natural Science Foundation of China [61432020]; Natural Science
   Foundation of China
FX National Natural Science Foundation of China, Grant/Award Number:
   61432020; Natural Science Foundation of China
CR Alkadhi R, 2017, P 24 INT C SOFTW AN, P1
   Alkadhi R, 2017, INT SYMP EMP SOFTWAR, P175, DOI 10.1109/ESEM.2017.26
   Alkadhi R, 2017, IEEE WORK CONF MIN S, P436, DOI 10.1109/MSR.2017.43
   Atkinson K, 2017, AI MAG, V38, P25, DOI 10.1609/aimag.v38i3.2704
   Bagheri E, 2011, P 2011 ACM S APPL CO, P659, DOI DOI 10.1145/1982185.1982332
   Bai Q, 2019, FRONT PSYCHOL, V2221, P10, DOI DOI 10.3389/FPSYG.2019.02221
   Bakiu E, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P182, DOI 10.1109/REW.2017.76
   Bentley J. L., 1980, SIGACT News, V12, P36, DOI 10.1145/1008861.1008865
   Bhat M, 2017, LECT NOTES COMPUT SC, V10475, P138, DOI 10.1007/978-3-319-65831-5_10
   Boltuzic Filip, 2014, Proceedings of the First Workshop on Argumentation Mining, P49
   Bosc T, 2016, COMPUTATIONAL MODELS
   Burge EJ, 2008, MISTRK, VI
   Cabrio E, 2013, NATURAL LANGUAGE BIP
   Cayrol C, 2005, ACCEPTABILITY ARGUME
   Cayrol C, 2009, ARGUMENTATION AI
   Charrada EB, 2016, P 24 INT C REQ ENG W, P74
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cocarascu O, 2016, P 1 INT WORKSH AI PR
   Cocarascu O, 2017, MINING BIPOLAR ARGUM
   Dhinakaran VT, 2018, P 26 INT C REQ ENG R, P1
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Dutoit AH, 2012, J REQUIRE ENG JRE, P3
   Dutoit AH, 2006, RATIONALE MANAGEMENT
   Elrakaiby Y, 2017, P 25 INT C REQ ENG R, P1
   Faiz S.I., 2014, Proceedings of the First Workshop on Argumentation Mining, P100
   Franqueira VNL, 2011, P 19 INT C REQ ENG R
   Ghanavati S, 2017, P 29 INT C ADV INF S
   Groen EC, 2017, INT REQUIR ENG CONF, P80, DOI 10.1109/RE.2017.73
   Guibon G., 2016, From Emojis to Sentiment Analysis
   Guzman E, 2017, INT REQUIR ENG CONF, P11, DOI 10.1109/RE.2017.88
   Haley CB, 2005, P 3 S REQ ENG IS 13
   Hartmann J, 2019, INT J RES MARK, V36, P20, DOI 10.1016/j.ijresmar.2018.09.009
   Hazarika D., 2018, P 27 INT C COMP LING, P1837
   Hutchinson A., 2018, Reddit Now Has as Many Users as Twitter, and Far Higher Engagement Rates
   Jarczyk A, 1992, P 25 HAW INT C SYST
   Joulin A, 2016, ARXIV201616123651, V1612, P3651
   Jureta IJ, 2008, CLEAR JUSTIFICATION
   Kanchev GM, 2017, P 25 INT C REQ ENG R
   Khan JA, 2018, P 6 INT REQ ENG WORK
   Khan JA, 2019, P 27 INT C REQ ENG R
   Khan JA, 2019, LECT NOTES COMPUT SC, V11412, P245, DOI 10.1007/978-3-030-15538-4_18
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kolcz A., 2004, ACM SIGKDD EXPLORATI, V6, P1, DOI [10.2973/odp.proc.ir.207.2004, DOI 10.1145/1007730.1007733]
   KOSKO B, 1986, INT J MAN MACH STUD, V24, P65, DOI 10.1016/S0020-7373(86)80040-2
   Kunz W, 1970, 131 U CAL I URB REG
   Kurtanovic Z, 2018, REQUIR ENG, V23, P357, DOI 10.1007/s00766-018-0293-2
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   Lee JT, 1997, IEEE EXPERT, V12, P78, DOI 10.1109/64.592267
   Leite J., 2011, IJCAI, V11, P2287, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-381
   Liang Y, 2012, COMPUT AIDED DESIGN, V44, P916, DOI 10.1016/j.cad.2011.08.002
   Lippi M, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2850417
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Mirbel I, 2012, COMPUT LOGIC MULTIAG, P1
   Mochales R, 2008, FRONT ARTIF INTEL AP, V189, P11, DOI 10.3233/978-1-58603-952-3-11
   Modgil S, 2014, ARGUM COMPUT, V5, P31, DOI 10.1080/19462166.2013.869766
   Morales-Ramirez Itzel, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P232, DOI 10.1007/978-3-319-05843-6_17
   Morales-Ramirez I, 2015, APPL ONTOL ONTOLOGY, V10, P3
   Morales-Ramirez I, 2017, LECT NOTES COMPUT SC, V10253, P159, DOI 10.1007/978-3-319-59536-8_11
   Neuendorf K. A., 2017, The content analysis guidebook, V2nd, DOI 10.4135/9781071802878
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pennington J, 2014, P 2014 INT C EMP MET
   Rahwan I, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P1, DOI 10.1007/978-0-387-98197-0
   Rogers B, 2014, P 6 INT C DES COMP C, P457, DOI DOI 10.1007/978-3-319-14956-1_26
   Rogers B, 2017, DESIGN COMPUTING AND COGNITION '16, P633, DOI 10.1007/978-3-319-44989-0_34
   Rogers B, 2012, PROC INT CONF SOFTW, P1313, DOI 10.1109/ICSE.2012.6227091
   Sarro F, 2018, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2018.00018
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Sherief N, 2015, LECT NOTES BUS INF P, V235, P174, DOI 10.1007/978-3-319-25897-3_12
   Strauss A., 1990, BASICS QUALITATIVE R
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Tizard J, 2019, INT REQUIR ENG CONF, P17, DOI 10.1109/RE.2019.00014
   Yu Y, 2015, J SYST STWARE
   Zee MV, 2016, P 35 INT C CONC MOD
   Zhang X, 2015, ADV NEUR IN, V28
   Zhou S, 2006, FUZZY CAUSAL NETWORK
NR 76
TC 16
Z9 17
U1 1
U2 13
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2020
VL 32
IS 12
AR e2309
DI 10.1002/smr.2309
EA AUG 2020
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PF0YK
UT WOS:000563798300001
DA 2024-07-18
ER

PT J
AU Mora-Cantallops, M
   Sicilia, MA
   García-Barriocanal, E
   Sánchez-Alonso, S
AF Mora-Cantallops, Marcal
   Sicilia, Miguel-angel
   Garcia-Barriocanal, Elena
   Sanchez-Alonso, Salvador
TI Evolution and prospects of the Comprehensive R Archive Network (CRAN)
   package ecosystem
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE CRAN; empirical analysis; open-source software; package ecosystem; R;
   software evolution
ID OPEN-SOURCE SOFTWARE; SYSTEMS; MODEL
AB Free and open source software package ecosystems have existed for a long time, but such collaborative development practice has surged in recent years. One of the oldest and most popular package ecosystems is Comprehensive R Archive Network (CRAN), the repository of packages of the statistical language R, a popular statistical computing environment. CRAN stores a large number of packages that are updated regularly and depend on many other packages in a complex graph of relations. As the repository grows, its sustainability could be threatened by that complexity or nonuniform evolution of some packages. This paper provides an empirical analysis of the evolution of the CRAN repository in the last 20 years, considering the laws of software evolution and the effect of CRAN's policies on such development. Results show how the progress of CRAN is consistent with the laws of continuous growth and change and how there seems to be a relevant increase in complexity in recent years. Significant challenges are raising related to the scale and scope of software package managers and the services they provide; understanding how they change over time and what might endanger their sustainability are key factors for their future improvement, maintenance, policies, and, eventually, sustainability of the ecosystem.
C1 [Mora-Cantallops, Marcal; Sicilia, Miguel-angel; Garcia-Barriocanal, Elena; Sanchez-Alonso, Salvador] Univ Alcala, Alcala De Henares, Spain.
C3 Universidad de Alcala
RP Mora-Cantallops, M (corresponding author), Univ Alcala, Alcala De Henares, Spain.
EM marcal.mora@uah.es
RI Sanchez-Alonso, Salvador/M-2950-2014; Mora-Cantallops,
   Marçal/Z-4249-2019; Mora Cantallops, Marçal/HNI-2426-2023
OI Mora-Cantallops, Marçal/0000-0002-2480-1078; Mora Cantallops,
   Marçal/0000-0002-2480-1078; Miguel Angel, Sicilia
   Urban/0000-0003-3067-4180
CR [Anonymous], 2008, Software Evolution, DOI [10.1007/978-3-540-76440-311, DOI 10.1007/978-3-540-76440-311]
   Barry EJ, 2007, J SOFTW MAINT EVOL-R, V19, P1, DOI 10.1002/smr.342
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Capiluppi A, 2009, EUR CON SFTWR MTNCE, P169, DOI 10.1109/CSMR.2009.37
   Cheung YW, 1998, J STAT COMPUT SIM, V60, P57, DOI 10.1080/00949659808811871
   Coelho J, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106274
   Csardi G, 2019, PKGSEARCH SEARCH QUE
   de Vasconcelos JB, 2017, INT J INFORM MANAGE, V37, P1499, DOI 10.1016/j.ijinfomgt.2016.05.005
   Decan A., 2015, P 2015 EUR C SOFTW A, P1, DOI [10.1145/2797433.2797476, DOI 10.1145/2797433.2797476]
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2016, ACM PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ECSA-W), DOI 10.1145/2993412.3003382
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Decan A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P493, DOI 10.1109/SANER.2016.12
   German DM, 2013, EUR CON SFTWR MTNCE, P243, DOI 10.1109/CSMR.2013.33
   Gezici B, 2019, INFORM SOFTWARE TECH, V112, P178, DOI 10.1016/j.infsof.2019.04.002
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Herraiz I, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2543581.2543595
   HILLMER SC, 1982, J AM STAT ASSOC, V77, P63, DOI 10.2307/2287770
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Koch S, 2007, J SOFTW MAINT EVOL-R, V19, P361, DOI 10.1002/smr.348
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Lehman MM, 2001, ANN SOFTW ENG, V11, P15, DOI 10.1023/A:1012535017876
   Mens T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P403, DOI 10.1109/CSMR-WCRE.2014.6747205
   Nikora AP, 2005, J SOFTW MAINT EVOL-R, V17, P65, DOI 10.1002/smr.303
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Rashid M, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2198
   Serebrenik A., 2015, P 2015 EUR C SOFTW A, P1, DOI [10.1145/2797433.2797475, DOI 10.1145/2797433.2797475]
   Svahnberg M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1806
   Yu L, 2013, International Journal of Software and Informatics, V7, P469
   Zanella G., 2020, HAWAII INT C SYSTEM, P471, DOI [10.24251/HICSS.2020.058, DOI 10.24251/HICSS.2020.058]
   Zheng XL, 2008, PHYSICA A, V387, P6190, DOI 10.1016/j.physa.2008.06.050
NR 32
TC 5
Z9 5
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2020
VL 32
IS 11
SI SI
AR e2270
DI 10.1002/smr.2270
EA JUN 2020
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OV2ST
UT WOS:000543662800001
DA 2024-07-18
ER

PT J
AU Quinton, C
   Vierhauser, M
   Rabiser, R
   Baresi, L
   Grünbacher, P
   Schuhmayer, C
AF Quinton, Clement
   Vierhauser, Michael
   Rabiser, Rick
   Baresi, Luciano
   Gruenbacher, Paul
   Schuhmayer, Christian
TI Evolution in dynamic software product lines
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE consistency; dynamic software product lines; evolution
ID SUPPORT
AB Many software systems today provide support for adaptation and reconfiguration at runtime, in response to changes in their environment. Such adaptive systems are designed to run continuously and may not be shut down for reconfiguration or maintenance tasks. The variability of such systems has to be explicitly managed, together with mechanisms that control their runtime adaptation and reconfiguration. Dynamic software product lines (DSPLs) can help to achieve this. However, dealing with evolution is particularly challenging in a DSPL, as changes made at runtime can easily lead to inconsistencies. This paper describes the challenges of evolving DSPLs using an example cyber-physical system for home automation. We discuss the shortcomings of existing work and present a reference architecture to support DSPL evolution. To demonstrate its feasibility and flexibility, we implemented the proposed reference architecture for two different DSPLs: the aforementioned cyber-physical system, which uses feature models to describe its variability, and a runtime monitoring infrastructure, which is based on decision models. To assess the industrial applicability of our approach, we also implemented the reference architecture for a real-world DSPL, an automation software system for injection molding machines. Our results provide evidence on the flexibility, performance, and industrial applicability of our approach.
C1 [Quinton, Clement] Univ Lille, CRIStAL UMR CNRS 9189, Inria Lille Nord Europe, Ave Carl Gauss, F-59655 Villeneuve Dascq, France.
   [Vierhauser, Michael] Johannes Kepler Univ Linz, Dept Business Informat Software Engn, Linz, Austria.
   [Rabiser, Rick] Johannes Kepler Univ Linz, LIT CPS Lab, Linz, Austria.
   [Baresi, Luciano] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Milan, Italy.
   [Gruenbacher, Paul; Schuhmayer, Christian] Johannes Kepler Univ Linz, Inst Software Syst Engn, CD Lab MEVSS, Linz, Austria.
C3 Universite de Lille; Johannes Kepler University Linz; Johannes Kepler
   University Linz; Polytechnic University of Milan; Johannes Kepler
   University Linz
RP Quinton, C (corresponding author), Univ Lille, CRIStAL UMR CNRS 9189, Inria Lille Nord Europe, Ave Carl Gauss, F-59655 Villeneuve Dascq, France.
EM clement.quinton@univ-lille.fr
RI Vierhauser, Michael/AAG-5859-2021; Baresi, Luciano/N-4208-2018;
   Grunbacher, Paul/C-2970-2013; Rabiser, Rick/B-8673-2017
OI Vierhauser, Michael/0000-0003-2672-9230; Baresi,
   Luciano/0000-0001-6467-837X; Grunbacher, Paul/0000-0002-1951-5288;
   Rabiser, Rick/0000-0003-3862-1112
FU Austrian Science Fund [J3998-N31]; Italian Technology Cluster For Smart
   Communities [CTN01_00034_594053]; Austrian Science Fund (FWF) [J3998N31]
FX Austrian Science Fund, Grant/Award Number: J3998-N31; Italian Technology
   Cluster For Smart Communities, Grant/Award Number: CTN01_00034_594053;
   Austrian Science Fund (FWF), Grant/Award Number: J3998N31
CR Acher M, 2011, LECT NOTES COMPUT SC, V6903, P220, DOI 10.1007/978-3-642-23798-0_25
   Angelov S, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P141, DOI 10.1109/WICSA.2009.5290800
   [Anonymous], 2015, EMPIR SOFTW ENG
   [Anonymous], 2015, P 9 INT WORKSH VAR M
   [Anonymous], 2011, P 15 INT SOFTW PROD
   [Anonymous], 2011, THESIS
   [Anonymous], 2015, PROC 19 INT C SOFTW, DOI DOI 10.1145/2791060.2791101
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Arcega L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P505, DOI 10.1109/SANER.2016.24
   Bak K, 2011, LECT NOTES COMPUT SC, V6563, P102, DOI 10.1007/978-3-642-19440-5_7
   Baresi L, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P57, DOI 10.1109/SEAMS.2015.24
   Baresi L, 2012, COMPUTER, V45, P42, DOI 10.1109/MC.2012.289
   Bashari M, 2017, INT J SOFTW ENG KNOW, V27, P191, DOI 10.1142/S0218194017500085
   Bass Len, 2012, SEI S SOFTW
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bencomo N., 2010, SOFTW PROD LIN 14 IN, P61
   Bencomo N, 2012, COMPUTER, V45, P36, DOI 10.1109/MC.2012.292
   Berg Kathrin., 2005, WHITE RIVER S AFRICA, P182
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Borba P, 2012, THEOR COMPUT SCI, V455, P2, DOI 10.1016/j.tcs.2012.01.031
   Botterweck Goetz., 2014, EVOLVING SOFTWARE SY, P265, DOI DOI 10.1007/978-3-642-45398-4_9
   Capilla R., 2013, SYSTEMS SOFTWARE VAR
   Capilla R, 2016, 2016 IEEE 1ST INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P6, DOI 10.1109/FAS-W.2016.16
   Capilla R, 2014, J SYST SOFTWARE, V91, P3, DOI 10.1016/j.jss.2013.12.038
   Cheng Z, 2014, 2014 27TH BIENNIAL SYMPOSIUM ON COMMUNICATIONS (QBSC), P101, DOI 10.1109/QBSC.2014.6841193
   Corporation I, 2005, ARCHITECTURAL BLUEPR
   Czarnecki K., 2006, GPCE, P211
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Deelstra S, 2009, INFORM SOFTWARE TECH, V51, P195, DOI 10.1016/j.infsof.2008.04.002
   DENG G, 2008, DESIGNING SOFTWARE I, P1280
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Elsner C., 2010, P VAMOS 2010, P131
   Elsner C, 2011, EUROMICRO CONF PROC, P116, DOI 10.1109/SEAA.2011.26
   Font Jaime., 2015, P 19 INT C SOFTWARE, P411, DOI [DOI 10.1145/2791060.2793678, 10.1145/2791060.2793678]
   Galster M., 2011, JOINT ACM SIGSOFT C, P153, DOI DOI 10.1145/2000259.2000285
   Gamez Nadia, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P102, DOI 10.1007/978-3-642-21347-2_9
   Gamez N, 2013, INFORM SOFTWARE TECH, V55, P563, DOI 10.1016/j.infsof.2012.06.012
   Guo JM, 2012, EXPERT SYST APPL, V39, P4987, DOI 10.1016/j.eswa.2011.10.014
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Helleboogh A., 2009, P 3 INT WORKSH DYN S, P18
   Hinchey M, 2012, COMPUTER, V45, P22, DOI 10.1109/MC.2012.332
   Johnsson S., 2000, P 1 ICSE 2000 WORKSH, P27
   Knauber P, 2004, P 8 INT C SOFTW REUS
   Marques M, 2019, INFORM SOFTWARE TECH, V105, P190, DOI 10.1016/j.infsof.2018.08.014
   Mauro J, 2018, SCI COMPUT PROGRAM, V163, P139, DOI 10.1016/j.scico.2018.05.002
   McGregor J.D., 2003, CMUSEI2003TR005
   Mende T, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P163
   Murta LGP, 2006, IEEE INT CONF AUTOM, P135
   Nakagawa E. Y., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P297, DOI 10.1109/WICSA-ECSA.212.49
   Neves L, 2015, J SYST SOFTWARE, V106, P42, DOI 10.1016/j.jss.2015.04.024
   Neves L, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P33
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Passos L, 2013, P 7 INT WORKSH VAR M
   Passos L., 2013, Proc. of the 17th Software Product Line Conference (SPLC), P91
   Pleuss A, 2012, J SYST SOFTWARE, V85, P2261, DOI 10.1016/j.jss.2011.08.008
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Provoost M, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P195, DOI 10.1109/SEAMS.2019.00033
   Prud'homme C., 2014, CHOCO3 DOCUMENTATION
   Quinton C, 2013, P 2013 INT WORKSHOP, P21, DOI [10.1145/2462326.2462332, DOI 10.1145/2462326.2462332]
   Quinton C, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P122, DOI 10.1145/2648511.2648524
   Quinton C, 2016, SOFTWARE PRACT EXPER, V46, P55, DOI 10.1002/spe.2311
   Romero D, 2015, LECT NOTES COMPUT SC, V9278, P294, DOI 10.1007/978-3-319-23727-5_25
   Schmid K., 2007, ECEASST, V8, P1
   Seidl C., 2012, P 16 INT SOFTW PROD, V1, P76, DOI DOI 10.1145/2362536.2362550
   Seidl C, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P22, DOI 10.1145/2648511.2648514
   Sharifloo AM, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P158, DOI [10.1109/SEAMS.2016.026, 10.1145/2897053.2897058]
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Vierhauser Michael, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P531, DOI 10.1007/978-3-642-33666-9_34
   Vierhauser M, 2015, IEEE INT CONF AUTOM, P715, DOI 10.1109/ASE.2015.25
   Vierhauser M, 2016, J SYST SOFTWARE, V112, P123, DOI 10.1016/j.jss.2015.07.008
   Weinreich Rainer, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P95, DOI 10.1109/WICSA.2014.22
   Zschaler Steffen, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P82
NR 77
TC 9
Z9 9
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2021
VL 33
IS 2
AR e2293
DI 10.1002/smr.2293
EA JUN 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YZ7ZN
UT WOS:000541231900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Akbar, MA
   Mahmood, S
   Huang, ZQ
   Khan, AA
   Shameem, M
AF Akbar, Muhammad Azeem
   Mahmood, Sajjad
   Huang, Zhiqiu
   Khan, Arif Ali
   Shameem, Mohammad
TI Readiness model for requirements change management in global software
   development
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE global software development; readiness model; requirements change
   management; requirements engineering; systematic mapping study
ID IMPLEMENTATION; FRAMEWORK
AB Requirements Change Management (RCM) is one of the challenges faced by Global Software Development (GSD) organisations as requirements evolution is inevitable due to dynamic business and operating environments. GSD organisations face issues when dealing with RCM because many organisations embark on GSD without understanding their readiness to undertake such an initiative. Currently, there is no readiness model to assess the RCM process in the context of GSD. The objective of this study is to develop a requirements change management readiness model (RCMRM) for GSD organisations. A Systematic Mapping Study (SMS) was conducted to identify the primary studies related to RCM in the GSD projects. By using SMS, 109 primary studies were selected and 73 RCM practices were identified which were used to design the readiness levels of the proposed RCMRM. To validate the RCMRM, initially, two case studies were conducted in two GSD organisations. Based on the suggestions and recommendations of the case study participants,the RCMRM was further modified. The updated version of RCMRM was further validated by two different GSD organisations. The results of the second case study indicate that RCMRM is effective in assessing the readiness of the RCM process in the context of GSD.
C1 [Akbar, Muhammad Azeem; Huang, Zhiqiu; Khan, Arif Ali] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
   [Mahmood, Sajjad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
   [Shameem, Mohammad] Madanapalle Inst Technol & Sci, Dept Comp Applicat, Madanapalle, India.
C3 Nanjing University of Aeronautics & Astronautics; King Fahd University
   of Petroleum & Minerals; Madanapalle Institute of Technology & Science
RP Mahmood, S (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
EM smahmood@kfupm.edu.sa
RI khan, Arif/HMV-3165-2023; Akbar, Muhammad Azeem/ABD-5149-2021; Khan,
   Arif Ali/ABG-2862-2020; Akbar, Muhammad Azeem/AAB-2338-2022; Shameem,
   Mohammad/AFU-4006-2022; Mahmood, Sajjad/B-2295-2010
OI Akbar, Muhammad Azeem/0000-0002-6880-4991; Khan, Arif
   Ali/0000-0002-8479-1481; Shameem, Mohammad/0000-0002-6055-5345; Mahmood,
   Sajjad/0000-0001-5786-5118
CR Afzal W, 2016, J SYST SOFTWARE, V111, P1, DOI 10.1016/j.jss.2015.08.048
   Akbar MA, 2019, J COMPUT LANG, V51, P112, DOI 10.1016/j.cola.2018.12.005
   Akbar MA, 2018, IEEE ACCESS, V6, P4811, DOI 10.1109/ACCESS.2017.2787981
   Ali S, 2016, J SYST SOFTWARE, V117, P402, DOI 10.1016/j.jss.2016.03.069
   Assawamekin N, 2010, 2010 IEEE ACIS 9 INT, P673
   Bano M., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P64, DOI 10.1109/ICSEA.2010.17
   Barry E. J., 2002, Information Technology & Management, V3, P113, DOI 10.1023/A:1013168927238
   Chen L, 2010, EASE 10 P 14 INT C E, P135
   Chrissis M, 2006, CMMI GUIDELINES PROC, V1
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Damian D, 2003, P INT WORKSH GLOB SO
   DASKALANTONAKIS MK, 1994, IEEE SOFTWARE, V11, P17, DOI 10.1109/52.300079
   Esbensen M., 2014, P 18 INT C SUPP GROU, P12, DOI DOI 10.1145/2660398.2660413
   Hussain W, 2016, REQUIREMENTS CHANGE
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Jayatilleke S, 2018, INFORM SOFTWARE TECH, V93, P163, DOI 10.1016/j.infsof.2017.09.004
   Keshta I, 2017, IEEE ACCESS, V5, P24162, DOI 10.1109/ACCESS.2017.2764490
   Khan AA, 2017, IEEE ACCESS, V5, P13720, DOI 10.1109/ACCESS.2017.2728603
   Khan AA, 2014, PROCD SOC BEHV, V129, P496, DOI 10.1016/j.sbspro.2014.03.706
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Khan SU, 2011, J SYST SOFTWARE, V84, P686, DOI 10.1016/j.jss.2010.12.010
   Khan SU., 2011, SOFTWARE OUTSOURCING
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Komi-Sirvio S, 2005, KNOWL PROCESS MANAG, V12, P108, DOI 10.1002/kpm.225
   Lai Richard, 2011, Journal of Software, V6, P1050, DOI 10.4304/jsw.6.6.1050-1066
   Lindquist C., 2006, FIXING REQUIREMENTS
   Mahmood S, 2017, INFORM SOFTWARE TECH, V91, P102, DOI 10.1016/j.infsof.2017.06.009
   Makarainen M, 1996, APPL MANAGEMENT REQU
   Manifesto C., 2012, YEAR EXECUTIVE SPONS
   McGee S, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P51, DOI 10.1109/ICSEA.2009.17
   Mufti Y, 2018, IEEE ACCESS, V6, P28611, DOI 10.1109/ACCESS.2018.2840322
   Ngwenyama O, 2003, IEEE T ENG MANAGE, V50, P100, DOI 10.1109/TEM.2002.808267
   Ngwenyama O, 2008, GLOBAL INFORM SYSTEM
   Niazi M, 2008, LECT NOTES COMPUT SC, V5089, P143, DOI 10.1007/978-3-540-69566-0_14
   Niazi M, 2007, LECT NOTES COMPUT SC, V4589, P96
   Niazi M, 2016, INFORM SOFTWARE TECH, V80, P1, DOI 10.1016/j.infsof.2016.08.002
   Nurmuliani N, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P28, DOI 10.1109/ASWEC.2004.1290455
   Nurmuliani N., 2006, VERIFIED OK
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Pierce K, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P124, DOI 10.1109/ICGSE.2013.23
   Ramzan S., 2005, INT C INF COMM TECHN, P309, DOI 10.1109/ICICT.2005.1598607
   Ramzan S, 2006, 10TH IEEE INTERNATIONAL MULTITOPIC CONFERENCE 2006, PROCEEDINGS, P219
   Rehman S, 2018, LECT NOTES COMPUT SC, V11342, P428, DOI 10.1007/978-3-030-05345-1_37
   Shafiq M, 2018, IEEE ACCESS, V6, P25747, DOI 10.1109/ACCESS.2018.2834473
   Sharma S, 2015, 2015 1ST INTERNATIONAL CONFERENCE ON FUTURISTIC TRENDS ON COMPUTATIONAL ANALYSIS AND KNOWLEDGE MANAGEMENT (ABLAZE), P28, DOI 10.1109/ABLAZE.2015.7154962
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Tanabe D, 2008, INT REQUIR ENG CONF, P3, DOI 10.1109/RE.2008.18
NR 47
TC 7
Z9 7
U1 2
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2020
VL 32
IS 10
AR e2264
DI 10.1002/smr.2264
EA APR 2020
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ4PK
UT WOS:000527873300001
DA 2024-07-18
ER

PT J
AU Alhammad, MM
   Moreno, AM
AF Alhammad, Manal M.
   Moreno, Ana M.
TI Challenges of gamification in software process improvement
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE software process improvement; SPI; gamification; systematic mapping
ID SUPPORT; SUCCESS; ENTERPRISES; DYNAMICS
AB Software process improvement (SPI) initiatives have contributed for a long time to the progress of software development. However, the outcome of such initiatives has not always been as effective as expected. The literature of SPI points out that motivation of practitioners involved in SPI initiatives is a critical factor for its success. On the other hand, gamification has been perceived as motivational and has the potential to improve people's engagement. Thus, researchers have been recently investigating the impact of gamification in increasing the motivation and commitment of the organization members involved in SPI. Despite the novelty of the field, we see the integration of gamification and SPI as an opportunity of study and research. The aim of this paper is to investigate and report the state of the practice in this field, identifying key challenges faced by organizations wishing to incorporate gamification into their SPI initiatives. One of the main challenges identified is related to the complexity of gamifying SPI because it involves different organizational roles and aspects that may require designing different gamification strategies. Another relevant issue is the need of more empirical data to provide sound evidence about the real impact of gamification on improving SPI initiatives.
C1 [Alhammad, Manal M.; Moreno, Ana M.] King Saud Univ, Riyadh, Saudi Arabia.
   [Alhammad, Manal M.] Univ Politecn Madrid, Madrid, Spain.
C3 King Saud University; Universidad Politecnica de Madrid
RP Alhammad, MM (corresponding author), King Saud Univ, Riyadh, Saudi Arabia.
EM manalhammad@ksu.edu.sa
RI Moreno, Ana M./AAC-1166-2020; Alhammad, Manal/HHZ-6146-2022
OI Moreno, Ana M./0000-0001-8397-6794; Alhammad, Manal/0000-0001-7789-6667
CR Abrahamsson P., 2002, Proceedings of the 35th Annual Hawaii International Conference on System Sciences, P3239, DOI 10.1109/HICSS.2002.994403
   Alhammad MM, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234161
   Alhammad MM, 2018, J SYST SOFTWARE, V141, P131, DOI 10.1016/j.jss.2018.03.065
   Ambler SW, 2016, CROSSTALK J DEF SOFT, V29, P25
   Anwar A., 2016, AMECSE 16 P 2 AFRICA, P60, DOI [10.1145/2944165.2944175, DOI 10.1145/2944165.2944175]
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   Bayona-Oré S, 2014, SOFTWARE QUAL J, V22, P21, DOI 10.1007/s11219-012-9190-y
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   Buisman A.L.D., 2014, the Proceedings of the Computer Science Education Research Conference, VVV, P9, DOI DOI 10.1145/2691352.2691353
   Chou Y.-k., 2013, Octalysis: Complete Gamification Framework
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   da Silva GC, 2016, ADV INTELL SYST, V448, P603, DOI 10.1007/978-3-319-32467-8_53
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [10.1145/2181037.2181040, DOI 10.1145/2181037.2181040]
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   Hamari J, 2014, P ANN HICSS, P3025, DOI 10.1109/HICSS.2014.377
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Iqbal J, 2016, SOFTWARE QUAL J, V24, P997, DOI 10.1007/s11219-015-9277-3
   Iversen J. H., 2004, MANAGING RISK SOFTWA
   Khandelwal S, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P122, DOI 10.1145/3021460.3021474
   Kuhrmann M, 2016, PEERJ COMPUT SCI, V2, P62
   Larrucea X, 2016, IEEE SOFTWARE, V33, P85, DOI 10.1109/MS.2016.42
   Lehtinen TOA, 2014, INFORM SOFTWARE TECH, V56, P623, DOI 10.1016/j.infsof.2014.01.015
   Mathiassen L, 2005, IEEE SOFTWARE, V22, P84, DOI 10.1109/MS.2005.159
   Müller SD, 2010, J SYST SOFTWARE, V83, P2128, DOI 10.1016/j.jss.2010.06.017
   Munoz M., 2016, INT C SOFTW PROC IMP, P111
   Nah F.F.-H., 2014, GAMIFICATION ED REV, P401
   Ngwenyama O, 2010, EUR J INFORM SYST, V19, P303, DOI 10.1057/ejis.2010.18
   Niazi M, 2015, J SOFTW-EVOL PROC, V27, P700, DOI 10.1002/smr.1704
   Niazi M, 2010, INFORM SOFTWARE TECH, V52, P1204, DOI 10.1016/j.infsof.2010.06.005
   O'Connor RV, 2012, INT J HUM CAP INF TE, V3, P13, DOI 10.4018/jhcitp.2012070102
   O'Neill D, 2016, CROSSTALK, V29, P4
   Passos OM, 2012, IEEE SOFTWARE, V29, P97, DOI 10.1109/MS.2012.52
   Pedreira O, 2015, INFORM SOFTWARE TECH, V57, P157, DOI 10.1016/j.infsof.2014.08.007
   Pereira P, 2014, LECT NOTES COMPUT SC, V8518, P742, DOI 10.1007/978-3-319-07626-3_70
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Robertson Margaret., 2010, Kotaku
   Monteiro LFS, 2011, J SOFTW MAINT EVOL-R, V23, P395, DOI 10.1002/smr.482
   Samalikova J, 2014, J SOFTW-EVOL PROC, V26, P714, DOI 10.1002/smr.1645
   Sanchez-Gordon M-L, 2016, MANAGING SOFTWARE PR, P109, DOI [10.1007/978-3-319-31545-4_7, DOI 10.1007/978-3-319-31545-4_7]
   Staples M, 2008, INFORM SOFTWARE TECH, V50, P605, DOI 10.1016/j.infsof.2007.07.003
   Werbach K., 2012, For the win: How game thinking can revolutionize your business
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wilson DN, 2001, J SYST SOFTWARE, V59, P135, DOI 10.1016/S0164-1212(01)00057-7
   Witt Maximilian., 2011, Informatik schafft Communities, P192
   Yilmaz M, 2016, COMM COM INF SC, V609, P71, DOI 10.1007/978-3-319-38980-6_6
   Zahra K, 2017, ICIET'17: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON INFORMATION AND EDUCATION TECHNOLOGY, P155, DOI 10.1145/3029387.3029392
   Zichermann G., 2011, GAMIFICATION DESIGN
NR 48
TC 12
Z9 13
U1 1
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2020
VL 32
IS 6
AR e2231
DI 10.1002/smr.2231
EA JAN 2020
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LY8BL
UT WOS:000507432700001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ali, S
   Huang, JW
   Khan, SU
   Li, HQ
AF Ali, Sikandar
   Huang, Jiwei
   Khan, Siffat Ullah
   Li, Hongqi
TI A framework for modelling structural association amongst barriers to
   software outsourcing partnership formation: An interpretive structural
   modelling approach
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE client-vendor relationship; contract renovation; empirical study;
   interpretive structural modelling (ISM); software outsourcing
   partnership; systematic literature review
ID SUPPLY CHAIN MANAGEMENT; EMPIRICAL-ANALYSIS; WASTE MANAGEMENT;
   DECISION-MAKING; SUCCESS FACTORS; PERFORMANCE; IMPLEMENTATION; OFFSHORE;
   RISKS; EXPLORATION
AB Software Outsourcing Partnership (SOP) is considered as a type of risk and reward sharing relationship between a client organisation, in the developed countries, and its overseas vendor organisation. Regardless of numerous benefits, the development of SOP still remnants in its infancy stage due to several interactive barriers. Some studies have been conducted to examine the barriers to SOP formation. However, no attempt has been reported so far to explore the multifaceted interrelationships amongst them. To bridge the gap, this study implements Interpretive Structural Model (ISM) approach to reconnoitre the interrelationships amongst the barriers in the context of SOP formation. The objective of this research paper is to develop a framework for modelling structural association amongst the barriers. To achieve the objective, we used a hybrid methodology based on systematic literature review (SLR), empirical survey, and ISM. Firstly, via SLR study, we identified 27 barriers to SOP formation. Secondly, to empirically explore the interrelationships amongst the identified barriers, a questionnaire survey was performed with 50 experts from a total of 20 different countries. Further, interrelationships amongst the barriers were identified using ISM via panel review, and their classifications were carried out via Cross-Impact Matrix Multiplication Applied to the Classification Approach.
C1 [Ali, Sikandar; Huang, Jiwei; Li, Hongqi] China Univ Petr, Dept Comp Sci & Technol, Beijing 102249, Peoples R China.
   [Ali, Sikandar; Huang, Jiwei; Li, Hongqi] China Univ Petr, Beijing Key Lab Petr Data Min, Beijing, Peoples R China.
   [Khan, Siffat Ullah] Univ Malakand, Dept Comp Sci & IT, Dir Lower, Pakistan.
C3 China University of Petroleum; China University of Petroleum; University
   of Malakand
RP Huang, JW (corresponding author), China Univ Petr, Dept Comp Sci & Technol, Beijing 102249, Peoples R China.
EM huangjw@cup.edu.cn
RI Ali, Sikandar/AAE-6488-2019; Huang, Jiwei/C-3154-2014; Khan, Siffat
   Ullah/B-3309-2017
OI Ali, Sikandar/0000-0002-2753-8615; Khan, Siffat
   Ullah/0000-0003-0339-7915
FU Fundamental Research Funds for the Central Universities [2462020YJRC001,
   2462018YJRC040]; National Natural Science Foundation of China
   [61972414]; National Key Research and Development Program of China
   [2018YFB1003800]
FX Fundamental Research Funds for the Central Universities, Grant/Award
   Numbers: 2462020YJRC001 and 2462018YJRC040; National Natural Science
   Foundation of China, Grant/Award Number: 61972414; National Key Research
   and Development Program of China, Grant/Award Number: 2018YFB1003800
CR Abdullah LM, 2012, J SYST SOFTWARE, V85, P1930, DOI 10.1016/j.jss.2012.02.040
   Agarwal A., 2014, Journal of Internet Banking Commerce, V19, P1
   Ajitkumar S, 2008, INT FED INFO PROC, V287, P403
   Al-Muftah H, 2018, GOV INFORM Q, V35, P502, DOI 10.1016/j.giq.2018.03.002
   Ali S., 2018, 2018 IEEE Globecom Workshops (GC Wkshps), P1
   Ali SKDR, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2233
   Ali S, 2019, IEEE ACCESS, V7, P164556, DOI 10.1109/ACCESS.2019.2949919
   Ali S, 2018, IEEE ACCESS, V6, P55431, DOI 10.1109/ACCESS.2018.2871710
   Ali S, 2017, IEEE ACCESS, V5, P23589, DOI 10.1109/ACCESS.2017.2764946
   Ali S, 2016, J SYST SOFTWARE, V117, P402, DOI 10.1016/j.jss.2016.03.069
   Ali S, 2014, INT CONF GLOBAL SOFT, P153, DOI 10.1109/ICGSE.2014.12
   Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   [Anonymous], INT C EL COMM ICEC X
   [Anonymous], TAXONOMY REFEREED OU
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], THESIS
   [Anonymous], BUS PROCESS MANAG J
   [Anonymous], 2006, ANAL RATER AGREEMENT
   [Anonymous], IEEE 39 HAW INT C SY
   [Anonymous], 1 INF SYST WORKSH GL
   [Anonymous], 2013, RES DESIGN QUALITATI
   [Anonymous], 19 INT C IND ENG ENG
   [Anonymous], 2018, RES METHODS STAT PSY
   Astri LY, 2015, PROCEDIA COMPUT SCI, V59, P188, DOI 10.1016/j.procs.2015.07.548
   Awan U, 2018, PROCEDIA MANUF, V17, P1039, DOI 10.1016/j.promfg.2018.10.082
   Bamford J, 2004, HARVARD BUS REV, V82, P90
   Berger H, 2011, INT J INFORM MANAGE, V31, P480, DOI 10.1016/j.ijinfomgt.2011.06.001
   Chandramowli S, 2011, HABITAT INT, V35, P246, DOI 10.1016/j.habitatint.2010.09.005
   Chang TH, 2009, INFORM SCIENCES, V179, P355, DOI 10.1016/j.ins.2008.10.012
   Chou JS, 2015, INT J PROJ MANAG, V33, P1136, DOI 10.1016/j.ijproman.2014.12.003
   Cox K, 2009, IET SOFTW, V3, P339, DOI 10.1049/iet-sen.2008.0076
   Das Aundhe M, 2009, EUR MANAG J, V27, P418, DOI 10.1016/j.emj.2009.01.004
   Diabat A, 2011, RESOUR CONSERV RECY, V55, P659, DOI 10.1016/j.resconrec.2010.12.002
   Dyer JH, 2001, MIT SLOAN MANAGE REV, V42, P37
   Gan XL, 2018, J CLEAN PROD, V197, P8, DOI 10.1016/j.jclepro.2018.06.184
   Gao HH, 2015, CHINESE J CHEM ENG, V23, P1987, DOI 10.1016/j.cjche.2015.11.009
   García-Canal E, 2002, J WORLD BUS, V37, P91, DOI 10.1016/S1090-9516(02)00069-X
   Gonzalez R, 2010, IND MANAGE DATA SYST, V110, P284, DOI 10.1108/02635571011020359
   Guangxu Li, 2018, IEEE Transactions on Systems, Man, and Cybernetics: Systems, V48, P982, DOI 10.1109/TSMC.2016.2627050
   HAWTHORNE RW, 1975, SOCIO ECON PLAN SCI, V9, P31, DOI 10.1016/0038-0121(75)90039-7
   Hussain M, 2016, APPL MATH MODEL, V40, P3671, DOI 10.1016/j.apm.2015.09.018
   Kannan G, 2007, INT J PROD RES, V45, P3831, DOI 10.1080/00207540600676676
   Kedia BL, 2007, J INT MANAG, V13, P22, DOI 10.1016/j.intman.2006.09.006
   Kemppainen K., 2003, International Journal of Physical Distribution & Logistics Management, V33, P701, DOI 10.1108/09600030310502885
   Kern T, 2002, J STRATEGIC INF SYST, V11, P153, DOI 10.1016/S0963-8687(02)00004-5
   Khan SU, 2017, IET SOFTW, V11, P1, DOI 10.1049/iet-sen.2015.0080
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   King WR, 2005, INFORM SYST MANAGE, V22, P89, DOI 10.1201/1078/45099.22.2.20050301/87281.10
   Kinnula M., 2007, Proceedings of the 40th Annual Hawaii International Conference on System Sciences
   Kishore R, 2003, COMMUN ACM, V46, P86, DOI 10.1145/953460.953464
   Koh C, 2007, SIGMIS CPR 2007: PROCEEDINGS OF THE 2007 ACM SIGMIS CPR CONFERENCE GLOBAL INFORMATION TECHNOLOGY WORKFORCE, P87
   Kou G, 2016, TECHNOL ECON DEV ECO, V22, P649, DOI 10.3846/20294913.2016.1202353
   Kou G, 2014, INFORM SCIENCES, V275, P1, DOI 10.1016/j.ins.2014.02.137
   Kumar A, 2018, SUSTAIN PROD CONSUMP, V14, P36, DOI 10.1016/j.spc.2018.01.002
   Kuo MS, 2012, APPL SOFT COMPUT, V12, P476, DOI 10.1016/j.asoc.2011.08.020
   Larsen MM, 2013, STRATEGIC MANAGE J, V34, P533, DOI 10.1002/smj.2023
   Lee JN, 2008, INFORM SYST FRONT, V10, P145, DOI 10.1007/s10796-008-9066-7
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Li GX, 2015, J OPER RES SOC, V66, P1793, DOI 10.1057/jors.2015.1
   Li GJ, 2019, SCI TOTAL ENVIRON, V651, P309, DOI 10.1016/j.scitotenv.2018.09.188
   Lim MK, 2017, J CLEAN PROD, V162, P806, DOI 10.1016/j.jclepro.2017.06.056
   Lioliou E, 2015, J INF TECHNOL, V30, P307, DOI 10.1057/jit.2015.3
   Majumdar A, 2019, SUSTAIN PROD CONSUMP, V17, P176, DOI 10.1016/j.spc.2018.10.005
   MALONE DW, 1975, P IEEE, V63, P397, DOI 10.1109/PROC.1975.9765
   Mandal A., 1994, International Journal of Operations & Production Management, V14, P52, DOI 10.1108/01443579410062086
   Mathew SK, 2013, J STRATEGIC INF SYST, V22, P298, DOI 10.1016/j.jsis.2013.03.001
   Mehta N, 2010, COMMUN ACM, V53, P160, DOI 10.1145/1646353.1646393
   Miranda SM, 2005, J INF TECHNOL, V20, P152, DOI 10.1057/palgrave.jit.2000045
   Mishra RP, 2015, PROC CIRP, V26, P424, DOI 10.1016/j.procir.2014.07.174
   Muduli K, 2013, RESOUR CONSERV RECY, V76, P50, DOI 10.1016/j.resconrec.2013.03.006
   Mukherjee D, 2013, J INT MANAG, V19, P377, DOI 10.1016/j.intman.2013.03.015
   Niazi M, 2004, LECT NOTES COMPUT SC, V3009, P1
   Niazi M, 2013, IET SOFTW, V7, P283, DOI 10.1049/iet-sen.2012.0136
   Piltan M, 2016, EXPERT SYST APPL, V64, P605, DOI 10.1016/j.eswa.2016.08.006
   Potdar PK, 2017, MATER TODAY-PROC, V4, P1744, DOI 10.1016/j.matpr.2017.02.016
   Pramod V. R., 2015, International Journal of Business Excellence, V8, P537
   Prodanovic P., 2001, FUZZY SET RANKING ME
   Rajaprasad SVS, 2015, SAF HEALTH WORK-KR, V6, P200, DOI 10.1016/j.shaw.2015.04.001
   Ravi V, 2005, TECHNOL FORECAST SOC, V72, P1011, DOI 10.1016/j.techfore.2004.07.002
   Rhodes J, 2016, SERV BUS, V10, P59, DOI 10.1007/s11628-014-0256-8
   Ross JW, 1999, MIS QUART, V23, P215, DOI 10.2307/249752
   Rothaermel FT, 2008, STRATEGIC MANAGE J, V29, P47, DOI 10.1002/smj.634
   Sajid Z, 2017, RENEW ENERG, V107, P194, DOI 10.1016/j.renene.2017.01.058
   Sangaiah AK, 2013, OPEN ENG, V3, P419, DOI 10.2478/s13531-012-0070-9
   Service RW, 2009, ORGAN RES METHODS, V12, P614, DOI 10.1177/1094428108324514
   Sharma P, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1993
   Shen LY, 2016, J CLEAN PROD, V127, P214, DOI 10.1016/j.jclepro.2016.03.151
   Singh, 2003, J ADV MANAGEMENT RES, V1, P28, DOI [DOI 10.1108/97279810380000356, 10.1108/97279810380000356]
   Soderberg AM, 2013, J INT MANAG, V19, P347, DOI 10.1016/j.intman.2013.04.004
   Srinivasan M, 2011, EUR MANAG J, V29, P260, DOI 10.1016/j.emj.2011.02.004
   Susarla A, 2012, MANAGE SCI, V58, P1388, DOI 10.1287/mnsc.1110.1493
   Teo TSH, 2014, INFORM MANAGE-AMSTER, V51, P177, DOI 10.1016/j.im.2013.12.001
   Trivedi A, 2015, INT J DISAST RISK RE, V14, P527, DOI 10.1016/j.ijdrr.2015.10.006
   Tuan NT, 2017, PROCEDIA ENGINEER, V182, P717, DOI 10.1016/j.proeng.2017.03.186
   Tuten TL, 2001, IND MARKET MANAG, V30, P149, DOI 10.1016/S0019-8501(00)00140-1
   Valmohammadi C, 2016, INFORM MANAGE-AMSTER, V53, P157, DOI 10.1016/j.im.2015.09.006
   Venkatraman NV, 2004, MIT SLOAN MANAGE REV, V45, P14
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Wang YJ, 2008, EXPERT SYST APPL, V34, P1837, DOI 10.1016/j.eswa.2007.02.029
   WARFIELD JN, 1974, IEEE T SYST MAN CYB, VSMC4, P81, DOI 10.1109/TSMC.1974.5408524
   Wei ZL, 2018, IEEE T ENG MANAGE, V65, P128, DOI 10.1109/TEM.2017.2755664
   Wu WS, 2015, RELIAB ENG SYST SAFE, V142, P515, DOI 10.1016/j.ress.2015.06.013
   Xiao L, 2018, TELEMAT INFORM, V35, P629, DOI 10.1016/j.tele.2018.01.010
NR 103
TC 15
Z9 16
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2020
VL 32
IS 6
AR e2243
DI 10.1002/smr.2243
EA JAN 2020
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA LY8BL
UT WOS:000506905700001
DA 2024-07-18
ER

PT J
AU Zhang, Y
   Wang, HM
   Wu, YW
   Hu, DY
   Wang, T
AF Zhang, Yang
   Wang, Huaimin
   Wu, Yiwen
   Hu, Dongyang
   Wang, Tao
TI GitHub's milestone tool: A mixed-methods analysis on its use
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE GitHub; issues; milestone tool; open source
AB Social coding site GitHub provides developers with many management tools to facilitate project maintenance and developer collaboration. Milestone tool, in particular, plays an important role in organizing and tracking progress on groups of issues or pull requests in a project. However, few research has analyzed the milestone tool, even though it has been used in practice for a long time. In this paper, we want to address this literature gap and present an ongoing work aimed at investigating the use of the milestone tool in GitHub open-source projects. We conduct a mixed-methods analysis in a large-scale dataset of GitHub projects, to help developers gain some insights into the milestone tool, including its usage, benefits, and limitations. We quantitatively investigate the basic adoption of milestone tool and its correlation with project properties. We also survey developers to understand the reasons for using milestone tool or not and their perceptions of the milestone tool. We find that certain types of projects use milestone tool more than others. Adopting the milestone tool is associated with more commits, more releases, and more project popularity, but the current milestone tool also has some limitations. These observations can then be forwarded to the GitHub community for follow-up and can result in them potentially making a better milestone tool.
C1 [Zhang, Yang; Wang, Huaimin; Wu, Yiwen; Hu, Dongyang; Wang, Tao] Natl Univ Def Technol, Key Lab Parallel & Distributed Comp, Changsha, Hunan, Peoples R China.
   [Zhang, Yang; Wang, Huaimin; Wu, Yiwen; Hu, Dongyang; Wang, Tao] Natl Univ Def Technol, Coll Comp, Changsha, Hunan, Peoples R China.
C3 National University of Defense Technology - China; National University
   of Defense Technology - China
RP Zhang, Y (corresponding author), Natl Univ Def Technol, Key Lab Parallel & Distributed Comp, Changsha, Hunan, Peoples R China.
EM yangzhang15@nudt.edu.cn
RI wu, yiwen/KLY-8477-2024; zhang, yang/P-5853-2018
OI zhang, yang/0000-0002-3111-1534; wu, yiwen/0000-0002-8652-116X; Wang,
   Huaimin/0000-0002-3245-1901
FU National Grand RD Plan [2018YFB1003903]; National Natural Science
   Foundation of China [61432020, 61702534]
FX National Grand R&D Plan, Grant/Award Number: 2018YFB1003903; National
   Natural Science Foundation of China, Grant/Award Numbers: 61432020 and
   61702534
CR BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   Bissyandé TF, 2013, P INT COMP SOFTW APP, P303, DOI 10.1109/COMPSAC.2013.55
   Blincoe K, 2016, INFORM SOFTWARE TECH, V70, P30, DOI 10.1016/j.infsof.2015.10.002
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   BRESLOW N, 1970, BIOMETRIKA, V57, P579, DOI 10.1093/biomet/57.3.579
   Cabot J, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P550, DOI 10.1109/SANER.2015.7081875
   Izquierdo JLC, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P479, DOI 10.1109/SANER.2015.7081860
   Cohen J, 2003, APPL MULTIPLE REGRES, DOI DOI 10.4324/9780203774441
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   GEHAN EA, 1965, BIOMETRIKA, V52, P203, DOI 10.1093/biomet/52.1-2.203
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Jiang J, 2019, INFORM SOFTWARE TECH, V105, P150, DOI 10.1016/j.infsof.2018.08.012
   Jiang J, 2017, EMPIR SOFTW ENG, V22, P547, DOI 10.1007/s10664-016-9436-6
   Johnson PCD, 2014, METHODS ECOL EVOL, V5, P944, DOI 10.1111/2041-210X.12225
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kendall M. G., 1948, Rank correlation methods.
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Nakagawa S, 2013, METHODS ECOL EVOL, V4, P133, DOI 10.1111/j.2041-210x.2012.00261.x
   Peng ZH, 2018, PROCEEDINGS OF CHINESE CHI 2018: SIXTH INTERNATIONAL SYMPOSIUM OF CHINESE CHI (CHINESE CHI 2018), P152, DOI 10.1145/3202667.3202694
   Perez-Riverol Y, 2016, PLOS
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Salo R, 2015, SPLST, P164
   Sheoran Jyoti, 2014, P 11 WORK C MIN SOFT, P336, DOI DOI 10.1145/2597073.2597114
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Trockman A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P511, DOI 10.1145/3180155.3180209
   Wang W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P314, DOI 10.1109/MSR.2015.36
   Zhang YS, 2015, PROCEEDINGS OF THE SIXTH ASIA SYMPOSIUM ON QUALITY ELECTRONIC DESIGN ASQED 2015, P83, DOI 10.1109/ACQED.2015.7274012
   Zhang Y, 2018, SOFTWAREMINING '18: PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING, P12, DOI 10.1145/3242887.3242891
   Zhang Y, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-015-1024-6
NR 33
TC 4
Z9 4
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2020
VL 32
IS 4
AR e2229
DI 10.1002/smr.2229
EA NOV 2019
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KZ8FW
UT WOS:000497207000001
DA 2024-07-18
ER

PT J
AU Aman, H
   Amasaki, S
   Yokogawa, T
   Kawahara, M
AF Aman, Hirohisa
   Amasaki, Sousuke
   Yokogawa, Tomoyuki
   Kawahara, Minoru
TI Empirical study of abnormality in local variables and its application to
   fault-prone Java method analysis
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE abnormality; fault-prone method analysis; local variable; Mahalanobis
   distance; naming; scope
ID SOFTWARE; PREDICTION
AB Programmers are familiar with local variables, and in many cases, they can freely define the local variables they use. Thus, the properties of these variables are widely diverse, and this may cause variations in the quality of code. Although variables are named in accordance with coding conventions, the following matters have not received much attention from an empirical viewpoint: automatically deciding whether a local variable is "abnormal" and determining the harmful effect of an abnormal variable. This study focuses on the trends in the name, type, and scope of local variables, then proposes the use of the Mahalanobis distance to evaluate their abnormality. The empirical study entailed collecting local variables from eight open-source software projects, and the paper reports the following findings: (a) the trend in the variation of the names of variables according to their type; (b) the majority of variables have short names with narrow scopes, where a name is often a word or an abbreviation thereof; (c) methods with an abnormal variable are approximately 1.4 times more likely to be fault prone than methods that contain only normal variables; (d) the proposed abnormality metric can be useful in a random forest-based fault-prone method analysis model.
C1 [Aman, Hirohisa; Kawahara, Minoru] Ehime Univ, Ctr Informat Technol, Matsuyama, Ehime, Japan.
   [Amasaki, Sousuke; Yokogawa, Tomoyuki] Okayama Prefectural Univ, Fac Comp Sci & Syst Engn, Okayama, Japan.
C3 Ehime University; Okayama Prefectural University
RP Aman, H (corresponding author), Ehime Univ, Ctr Informat Technol, Matsuyama, Ehime, Japan.
EM aman@ehime-u.ac.jp
OI Aman, Hirohisa/0000-0001-7074-5225
FU Japan Society for the Promotion of Science [16K00099]
FX Japan Society for the Promotion of Science, Grant/Award Number: 16K00099
CR Aman H, 2015, INT SYMP EMP SOFTWAR, P50
   Aman Hirohisa, 2016, JOINT P 4 INT WORKSH, P4
   [Anonymous], 2001, MAHALANOBIS TAGUCHI
   Binkley D, 2013, IEEE WORK CONF MIN S, P401, DOI 10.1109/MSR.2013.6624055
   Binkley D, 2009, SCI COMPUT PROGRAM, V74, P430, DOI 10.1016/j.scico.2009.02.006
   Boswell D., 2011, ART READABLE CODE
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Ceccato M, 2014, EMPIR SOFTW ENG, V19, P1040, DOI 10.1007/s10664-013-9248-x
   Cudney E.A., 2009, Journal of Industrial and Systems Engineering, V2, P250
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Fenton N.E., 1997, SOFTWARE METRICS
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Folleco A, 2008, IEEE C EVOL COMPUTAT, P3853, DOI 10.1109/CEC.2008.4631321
   Free Software Foundation, 2016, GNU COD STAND
   Gosling J., 2005, Java Language Specification, Vthird
   Hata H., 2011, Proc. 12th Int'l Workshop on Principles of Software Evolution and the 7th Annual ERCIM Workshop on Software Evolution, P96
   Hill E, 2014, EMPIR SOFTW ENG, V19, P1754, DOI 10.1007/s10664-013-9261-0
   Ho TK, 1998, IEEE T PATTERN ANAL, V20, P832, DOI 10.1109/34.709601
   Jain A K, 1988, ALGORITHMS CLUSTERIN
   Jamdagni A., 2010, 8 AUSTR INFORM SECUR, P8
   Kaur A, 2008, 2008 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER THEORY AND ENGINEERING, P37, DOI 10.1109/ICACTE.2008.204
   Kawamoto K., 2012, 2012 Fourth International Workshop on Empirical Software Engineering in Practice (IWESEP 2012), P30, DOI 10.1109/IWESEP.2012.15
   Kernighan B. W., 1999, The Practice of Programming, V1st
   Khoshgoftaar TM, 2003, EMPIR SOFTW ENG, V8, P255, DOI 10.1023/A:1024424811345
   Laurikkala J., 2000, 5 INT WORKSH INT DAT
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liblit Ben, 2006, PPIG, P53
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Low D., 1998, CROSSROADS, V4, P21
   Marciniak JJ, 2002, ENCY SOFTWARE ENG
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   New B, 2006, PSYCHON B REV, V13, P45, DOI 10.3758/BF03193811
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Oracle, 2015, JDBC BAS
   Prasad NR, 2009, CMC-COMPUT MATER CON, V14, P1, DOI 10.1145/1541880.1541882
   Scanniello G, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3104029
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Sun Microsystems, 1999, COD CONV JAV PROGR L
   Upton G., 2014, Oxford Paperback Reference
   Utkin LV, 2016, AUTOM CONTROL COMPUT, V50, P726, DOI 10.3103/S0146411616080319
   Wake W.C., 2003, Refactoring Workbook, V1st
NR 45
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2020
VL 32
IS 4
AR e2220
DI 10.1002/smr.2220
EA OCT 2019
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KZ8FW
UT WOS:000492173800001
DA 2024-07-18
ER

PT J
AU Gong, LN
   Jiang, SJ
   Jiang, L
AF Gong, Lina
   Jiang, Shujuan
   Jiang, Li
TI An improved transfer adaptive boosting approach for mixed-project defect
   prediction
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE class imbalance; cross-project; mixed-project; software defect
   prediction; transfer learning
ID CODE
AB Software defect prediction (SDP) has been a very important research topic in software engineering, since it can provide high-quality results when given sufficient historical data of the project. Unfortunately, there are not abundant data to bulid the defect prediction model at the beginning of a project. For this scenario, one possible solution is to use data from other projects in the same company. However, using these data practically would get poor performance because of different distributional characteristics among projects. Also, software has more non-defective instances than defective instances that may cause a significant bias towards defective instances. Considering these two problems, we propose an improved transfer adaptive boosting (ITrAdaBoost) approach for being given a small number of labeled data in the testing project. In our approach, ITrAdaBoost can not only employ the Matthews correlation coefficient (MCC) as the measure instead of accuracy rate but also use the asymmetric misclassification costs for non-defective and defective instances. Extensive experiments on 18 public projects from four datasets indicate that: (a) our approach significantly outperforms state-of-the-art cross-project defect prediction (CPDP) approaches, and (b) our approach can obtain comparable prediction performances in contrast with within project prediction results. Consequently, the proposed approach can build an effective prediction model with a small number of labeled instances for mixed-project defect prediction (MPDP).
C1 [Gong, Lina; Jiang, Shujuan; Jiang, Li] China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou, Jiangsu, Peoples R China.
   [Gong, Lina; Jiang, Shujuan; Jiang, Li] China Univ Min & Technol, Engn Res Ctr Mine Digitalizat, Minist Educ, Xuzhou, Jiangsu, Peoples R China.
   [Gong, Lina] Zaozhuang Univ, Dept Informat Sci & Engn, Zaozhuang, Peoples R China.
C3 China University of Mining & Technology; China University of Mining &
   Technology; Zaozhuang University
RP Jiang, SJ (corresponding author), China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou, Jiangsu, Peoples R China.; Jiang, SJ (corresponding author), China Univ Min & Technol, Engn Res Ctr Mine Digitalizat, Minist Educ, Xuzhou, Jiangsu, Peoples R China.
EM shjjiang@cumt.edu.cn
RI Jiang, Shujuan/K-4178-2012
OI Jiang, Shujuan/0000-0003-0643-0565; Gong, Lina/0000-0002-5272-6706
CR Aguilar-Savén RS, 2004, INT J PROD ECON, V90, P129, DOI 10.1016/S0925-5273(03)00102-6
   [Anonymous], 2015, HIGH ORDER CONSERVAT
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], ESEM 2017
   [Anonymous], ICSE 2013
   [Anonymous], SOFTW QUAL J
   [Anonymous], IEEE T NEURAL NETW
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dai Wenyuan, 2007, P 24 INT C MACHINE L, P193
   Freund Y., 1995, COMPUTATIONAL LEARNI
   Gao Y, 2016, ADV INTEL SYS RES, V136, P739
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Li H, 2013, LECT NOTES ELECTR EN, V256, P547, DOI 10.1007/978-3-642-38466-0_61
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Li Y, 2017, IEEE ACCESS, V5, P25646, DOI 10.1109/ACCESS.2017.2771460
   Liu MX, 2014, IEEE T RELIAB, V63, P676, DOI 10.1109/TR.2014.2316951
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Seiffert C, 2014, INFORM SCIENCES, V259, P571, DOI 10.1016/j.ins.2010.12.016
   Shen Y, 2013, IEEE IMTC P, P1045
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Vashisht V., 2015, Journal of Software Engineering and Applications, V8, P384, DOI [10.4236/jsea.2015.88038, DOI 10.4236/JSEA.2015.88038]
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Wohlfeil B, 2009, OFC: 2009 CONFERENCE ON OPTICAL FIBER COMMUNICATION, VOLS 1-5, P94
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Zhang XY, 2015, APPL INTELL, V42, P544, DOI 10.1007/s10489-014-0610-5
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
NR 47
TC 11
Z9 11
U1 1
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2019
VL 31
IS 10
AR e2172
DI 10.1002/smr.2172
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JH7OM
UT WOS:000492957500006
DA 2024-07-18
ER

PT J
AU Usman, M
   Iqbal, MZ
   Khan, MU
AF Usman, Muhammad
   Iqbal, Muhammad Zohaib
   Khan, Muhammad Uzair
TI An automated model-based approach for unit-level performance test
   generation of mobile applications
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE aspect; mobile application; model-based; performance profile;
   performance testing; state machine
AB Mobile devices have limited resources, including memory and processing speed. The performance of mobile applications is an important concern. There are a large number of mobile platforms available with varying operating systems and hardware. Native applications are usually developed and maintained separately for these platforms. The overall performance of native applications may significantly vary across platforms. The current industrial practice is to manually test the performance for each variant, which is not a scalable or efficient approach. We tackled the problem of generating native application variants in our previous work. This paper proposes an automated model-based approach for performance test generation for native application variants at unit level. We propose a performance profile that allows modeling of domain-specific performance parameters on UML models, which are used for automated performance test generation for each native variant. The results of applying the approach on two real-world applications show that the approach evaluates the performance of application variants for two different versions of Android successfully and have potential to reduce the effort and time. A questionnaire-based study is conducted to evaluate the usefulness of the approach.
C1 [Usman, Muhammad; Iqbal, Muhammad Zohaib; Khan, Muhammad Uzair] Natl Univ Comp & Emerging Sci, Software Qual Engn & Testing QUEST Lab, Islamabad, Pakistan.
RP Usman, M (corresponding author), Natl Univ Comp & Emerging Sci, Software Qual Engn & Testing QUEST Lab, Islamabad, Pakistan.
EM m.usman@questlab.pk
RI Khan, Muhammad Sarwar/Q-8307-2019
OI Usman, Muhammad/0000-0003-2759-3259; Iqbal, Muhammad Zohaib
   Z/0000-0001-8190-5327
CR Ajayi OO, 2018, PERFORMANCE EVAL, V7
   Albassam E, 2013, 2013 3RD INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING: ENGINEERING COMPUTER GAMES TO ENABLE POSITIVE, PROGRESSIVE CHANGE (GAS), P1, DOI 10.1109/GAS.2013.6632582
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Ali S, 2012, SOFTW SYST MODEL, V11, P633, DOI 10.1007/s10270-011-0206-z
   [Anonymous], 2009, P INT C UBIQUITOUS I, DOI DOI 10.1145/1516241.1516349
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2014, INSTALAPSE
   [Anonymous], 2014, SCRAMBLE
   [Anonymous], 2010, P USENIX ANN TECH C
   [Anonymous], 2014, ANDROID VERSIONS
   [Anonymous], P INT C COMP NETW DI
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   Ardalan A, 2007, BRIT J EDUC TECHNOL, V38, P1085, DOI 10.1111/j.1467-8535.2007.00694.x
   Banerjee A, 2018, IEEE T SOFTWARE ENG, V44, P470, DOI 10.1109/TSE.2017.2689012
   Battaglia Mike, 2008, ENCY SURVEY RES METH, P148, DOI DOI 10.4135/9781412963947.N105
   Binder R.V., 2000, AW OBJ TECHNOL S
   Charland A, 2011, COMMUN ACM, V54, P49, DOI 10.1145/1941487.1941504
   Ciman Matteo, 2014, 10th International Conference on Web Information Systems and Technologies (WEBIST 2014). Proceedings, P423
   Corral L, 2012, PROCEDIA COMPUT SCI, V10, P736, DOI 10.1016/j.procs.2012.06.094
   Dageförde JC, 2016, P ANN HICSS, P5803, DOI 10.1109/HICSS.2016.718
   Dehlinger J., 2011, Proceedings of the Workshop on Mobile Software Engineering, P29
   Filman R, 2004, ASPECT ORIENTED SOFT, V1
   Habchi S, 2018, ASE18 P 33 IEEE ACM
   Huang Junxian., 2010, MobiSys, P165, DOI [10.1145/1814433.1814452, DOI 10.1145/1814433.1814452]
   Iftikhar S, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P426, DOI 10.1109/MODELS.2015.7338274
   Iqbal M., 2013, SOFTWARE SYSTEMS MOD, P1
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P1367, DOI 10.1007/s10270-014-0405-5
   Jabbarvand R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P208, DOI 10.1145/3106237.3106244
   Jiang H, 2017, LECT NOTES COMPUT SC, V10610, P192, DOI 10.1007/978-3-319-68690-5_12
   Jilani AA, 2019, ADV COMPUT, V112, P135, DOI 10.1016/bs.adcom.2017.12.003
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Jung W, 2012, CODES+ISSS'12:PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON HARDWARE/SOFTWARE-CODESIGN AND SYSTEM SYNTHESIS, P353
   Kang Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P410, DOI 10.1145/2950290.2950316
   Khan MU, 2015, LECT NOTES COMPUT SC, V9153, P92, DOI 10.1007/978-3-319-21151-0_7
   Khan MU, 2014, PROC IEEE INT CONF S, P557, DOI 10.1109/ICSME.2014.94
   Kim H, 2009, 2009 THIRD IEEE INTERNATIONAL CONFERENCE ON SECURE SOFTWARE INTEGRATION AND RELIABILITY IMPROVEMENT, PROCEEDINGS, P171, DOI 10.1109/SSIRI.2009.28
   Dantas VLL, 2009, 2009 24TH INTERNATIONAL SYMPOSIUM ON COMPUTER AND INFORMATION SCIENCES, P553
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Liu YP, 2014, IEEE T SOFTWARE ENG, V40, P911, DOI 10.1109/TSE.2014.2323982
   Ma Y, 2018, IEEE T MOBILE COMPUT, V17, P990, DOI 10.1109/TMC.2017.2756633
   Muccini H., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P29, DOI 10.1109/IWAST.2012.6228987
   Murmuria R., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P147, DOI 10.1109/SERE.2012.19
   Myllymaki T, 2002, SOFTWARE INFRASTRUCT, P85
   Nascimento L, 2008, CORE ASSETS DEV SOFT
   Nascimento LM, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P43, DOI 10.1109/SEAA.2008.14
   Nistor Adrian., 2014, ISSTA'14, P282, DOI DOI 10.1145/2610384.2610410
   OMG, 2014, UML SUP V2 4 1
   OMG, 2018, UML TEST PROF UTP V2
   OMG, 2017, OBJ CONSTR LANG OCL
   OMG, 2013, UN MOD LANG UML V2 4
   OMG, 2013, MOD AN REAL TIM EMB
   OMG, 2017, UML PROF SCHED PERF
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Quinton C., 2011, P 15 INT SOFTW PROD, V2, P23
   Ravindranath L, 2012, APPINSIGHT MOBILE AP, V2012, P107
   Usman Muhammad, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P111, DOI 10.1109/APSEC.2014.26
   Usman M, 2017, J SYST SOFTWARE, V123, P1, DOI 10.1016/j.jss.2016.09.049
   Utting M, 2006, PRACTICAL MODEL BASE, V1
   Vaupel S, 2014, LECT NOTES COMPUT SC, V8767, P1, DOI 10.1007/978-3-319-11653-2_1
   Willocx M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P38, DOI [10.1145/2897073.2897092, 10.1109/MobileSoft.2016.028]
   Willocx M, 2015, IEEE INT CONF MO, P454, DOI [10.1109/MobServ.2015.68, 10.1109/MS.2015.68]
   Wohlin C., 2012, Experimentation in Software Engineering, V1
   Yoon C., 2012, USENIX Annual Technical Conference, V12, P1
   Zhang L, 2013, HARDW SOFTW COD SYST
   Zhang WS, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P149
NR 66
TC 5
Z9 5
U1 2
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2020
VL 32
IS 1
AR e2215
DI 10.1002/smr.2215
EA JUL 2019
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KD1EN
UT WOS:000477213800001
OA Bronze
DA 2024-07-18
ER

PT J
AU Tanveer, B
   Vollmer, AM
   Braun, S
   bin Ali, N
AF Tanveer, Binish
   Vollmer, Anna Maria
   Braun, Stefan
   bin Ali, Nauman
TI An evaluation of effort estimation supported by change impact analysis
   in agile software development
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile; case study; change impact analysis; effort estimation;
   expert-based
ID METRICS
AB In agile software development, functionality is added to the system in an incremental and iterative manner. Practitioners often rely on expert judgment to estimate the effort in this context. However, the impact of a change on the existing system can provide objective information to practitioners to arrive at an informed estimate. In this regard, we have developed a hybrid method, that utilizes change impact analysis information for improving effort estimation. We also developed an estimation model based on gradient boosted trees (GBT). In this study, we evaluate the performance and usefulness of our hybrid method with tool support and the GBT model in a live iteration at Insiders Technologies GmbH, a German software company. Additionally, the solution was also assessed for perceived usefulness and understandability in a study with graduate and post-graduate students. The results from the industrial evaluation show that the proposed method produces more accurate estimates than only expert-based or only model-based estimates. Furthermore, both students and practitioners perceived the usefulness and understandability of the method positively.
C1 [Tanveer, Binish] Fraunhofer Inst Expt Software Engn IESE, Proc Engn Dept, Kaiserslautern, Germany.
   [Vollmer, Anna Maria] Fraunhofer Inst Expt Software Engn IESE, Data Engn Dept, Kaiserslautern, Germany.
   [Braun, Stefan] Insiders Technol GmBH, Prod Dev, Kaiserslautern, Germany.
   [bin Ali, Nauman] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
C3 Fraunhofer Gesellschaft; Fraunhofer Gesellschaft; Blekinge Institute
   Technology
RP Tanveer, B (corresponding author), Fraunhofer Inst Expt Software Engn IESE, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
EM binish.tanveer@iese.fraunhofer.de
RI Ali, Nauman bin/J-4293-2015
OI Ali, Nauman bin/0000-0001-7266-5632; Vollmer, Anna
   Maria/0000-0002-3563-8253
FU Bundesministerium fur Bildung und Forschung [01IS15050G]
FX Bundesministerium fur Bildung und Forschung, Grant/Award Number:
   01IS15050G
CR Abrahamsson P, 2011, INT SYMP EMP SOFTWAR, P400, DOI 10.1109/ESEM.2011.58
   Ali NB, 2016, 10 ESEM
   [Anonymous], 2014, SOFTWARE PROJECT EFF
   Antoniol G., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P250, DOI 10.1109/METRIC.1999.809746
   Bhalerao S., 2009, International Journal of Computer Science and Applications, V6, P85
   Bin Ali N, 2016, J SYST SOFTWARE, V111, P213, DOI 10.1016/j.jss.2015.10.013
   bin Ali Nauman, 2014, P EUR C SOFTW ENG ED, P59
   Bohner SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P42, DOI 10.1109/ICSM.1996.564987
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Briand LC, 1998, PROC INT CONF SOFTW, P390, DOI 10.1109/ICSE.1998.671392
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Danh NC, 2013, PROCEEDINGS OF 2013 IEEE RIVF INTERNATIONAL CONFERENCE ON COMPUTING AND COMMUNICATION TECHNOLOGIES: RESEARCH, INNOVATION, AND VISION FOR THE FUTURE (RIVF), P27, DOI 10.1109/RIVF.2013.6719861
   Elish MO, 2015, SOFT COMPUT, V19, P2511, DOI 10.1007/s00500-014-1576-2
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Fowler M., 2001, Software Development, V9, P28
   GOODHUE DL, 1995, MIS QUART, V19, P213, DOI 10.2307/249689
   Hussain I, 2013, DATA KNOWL ENG, V85, P2, DOI 10.1016/j.datak.2012.06.005
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2009, IEEE SOFTWARE, V26, P14, DOI 10.1109/MS.2009.47
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Lee YW, 2003, J MANAGE INFORM SYST, V20, P13, DOI 10.1080/07421222.2003.11045775
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   McKinney V, 2002, INFORM SYST RES, V13, P296, DOI 10.1287/isre.13.3.296.76
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Moser R, 2007, P 19 INT C SOFTW ENG, P519
   Nassif AB, 2012, 2012 11TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2012), VOL 2, P301, DOI 10.1109/ICMLA.2012.155
   Nelson RR, 2005, J MANAGE INFORM SYST, V21, P199, DOI 10.1080/07421222.2005.11045823
   Popli R, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON RELIABILTY, OPTIMIZATION, & INFORMATION TECHNOLOGY (ICROIT 2014), P57, DOI 10.1109/ICROIT.2014.6798284
   Raslan A.T., 2015, International Journal of Computer Science and Information Security, V13, P37
   Satapathy Shashank Mouli, 2014, ACM SIGSOFT Software Engineering Notes, V39, P1, DOI 10.1145/2597716.2597725
   Satapathy SM, 2017, INNOV SYST SOFTW ENG, V13, P191, DOI 10.1007/s11334-017-0288-z
   Sungjoo Kang, 2010, 2010 IEEE/ACIS 9th International Conference on Computer and Information Science (ICIS 2010), P743, DOI 10.1109/ICIS.2010.126
   Tanveer B., 2017, ACM, P252, DOI [10.1145/3084226, DOI 10.1145/3084226]
   TANVEER B, 2017, PROCESS, V29, DOI DOI 10.1002/SMR.1862
   Tanveer B, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P21, DOI 10.1145/3202710.3203152
   Tanveer B, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P430, DOI 10.1109/SEAA.2017.64
   Tanveer B, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP), P41, DOI [10.1109/ICSSP.2016.014, 10.1145/2904354.2904373]
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Usman M., 2015, ACM INT C P SERIES, P1
   Venkatesh V, 2008, DECISION SCI, V39, P273, DOI 10.1111/j.1540-5915.2008.00192.x
   Ziauddin S. K. T., 2012, Advances in computer science and its applications (ACSA), V2, P314
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 46
TC 10
Z9 10
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2019
VL 31
IS 5
SI SI
AR e2165
DI 10.1002/smr.2165
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY7LJ
UT WOS:000468316500004
DA 2024-07-18
ER

PT J
AU Wohlrab, R
   Pelliccione, P
   Knauss, E
   Larsson, M
AF Wohlrab, Rebekka
   Pelliccione, Patrizio
   Knauss, Eric
   Larsson, Mats
TI Boundary objects and their use in agile systems engineering
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile systems engineering; boundary objects; design science;
   documentation
ID CHALLENGES; TRACEABILITY
AB Agile methods are increasingly introduced in automotive companies in the attempt to become more efficient and flexible in the system development. The adoption of agile practices influences communication between stakeholders and makes companies rethink the management of artifacts and documentation like requirements, safety compliance documents, and architecture models. Practitioners aim to reduce irrelevant documentation but face a lack of guidance to determine what artifacts are needed and how they should be managed. This paper presents artifacts, challenges, guidelines, and practices for the continuous management of systems engineering artifacts in automotive based on a theoretical and empirical understanding of the topic. In collaboration with 53 practitioners from six automotive companies, we conducted a design-science study involving interviews, a questionnaire, focus groups, and practical data analysis of a systems engineering tool. The guidelines suggest the distinction between artifacts that are shared among different actors in a company (boundary objects) and those that are used within a team (locally relevant artifacts). We propose an analysis approach to identify boundary objects and three practices to manage systems engineering artifacts in industry.
C1 [Wohlrab, Rebekka; Pelliccione, Patrizio; Knauss, Eric] Chalmers, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Wohlrab, Rebekka; Pelliccione, Patrizio; Knauss, Eric] Univ Gothenburg, Gothenburg, Sweden.
   [Wohlrab, Rebekka; Larsson, Mats] Systemite AB, Gothenburg, Sweden.
   [Pelliccione, Patrizio] Univ Aquila, Laquila, Italy.
C3 Chalmers University of Technology; University of Gothenburg; University
   of L'Aquila
RP Wohlrab, R (corresponding author), Chalmers, Dept Comp Sci & Engn, Gothenburg, Sweden.; Wohlrab, R (corresponding author), Univ Gothenburg, Gothenburg, Sweden.
EM wohlrab@chalmers.se
RI Pelliccione, Patrizio/Q-5118-2019
OI Pelliccione, Patrizio/0000-0002-5438-2281; Wohlrab,
   Rebekka/0000-0002-5449-7900; Knauss, Eric/0000-0002-6631-872X
FU VINNOVA FFI [2014-05599, 2015-04881]; Knut and Alice Wallenberg
   Foundation
FX VINNOVA FFI, Grant/Award Number: 2014-05599 and 2015-04881; Knut and
   Alice Wallenberg Foundation
CR Abraham R., 2017, Guidelines for Architecture Models as Boundary Objects, P193
   Abraham R., 2013, P 21 EUR C INF SYST, P120
   [Anonymous], 1986, POWER ACTION BELIEF
   [Anonymous], 2018, Qualitative inguiry research design choosing among five approaches
   [Anonymous], 2012, Applied Social Research Method Series
   [Anonymous], 2017, EMISS CONTROL SCI TE, V3, P1, DOI DOI 10.1515/LINGVAN-2017-0007
   Bass JM, 2016, INFORM SOFTWARE TECH, V75, P1, DOI 10.1016/j.infsof.2016.03.001
   Bechky BA, 2003, ORGAN SCI, V14, P312, DOI 10.1287/orsc.14.3.312.15162
   Blomkvist JK, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1875, DOI 10.1145/2702123.2702366
   Bowker GC, 1999, Sorting Things Out
   Carlile PR, 2002, ORGAN SCI, V13, P442, DOI 10.1287/orsc.13.4.442.2953
   D'Ambrosio J, 2017, IEEE SYS MAN CYBERN, P2075, DOI 10.1109/SMC.2017.8122925
   Diebold P, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P80, DOI 10.1145/3084100.3084108
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Ebert C, 2017, IEEE SOFTWARE, V34, P33, DOI 10.1109/MS.2017.82
   Eliasson U, 2015, INT REQUIR ENG CONF, P372, DOI 10.1109/RE.2015.7320454
   Eliasson U, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P115, DOI 10.1109/WICSA.2015.18
   Flint, 2001, SOC RES UPDATE, P33, DOI DOI 10.1111/J.1442-2018.2010.00541.X
   Haberfellner R., 2005, INCOSE International Symposium, V15, P1449
   Hanssen GK, 2009, PROC IEEE INT CONF S, P487, DOI 10.1109/ICSM.2009.5306278
   Heldal R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P216, DOI 10.1145/2976767.2976808
   Hevner A, 2010, INTEGR SER INFORM SY, V22, P121, DOI 10.1007/978-1-4419-5653-8_10
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Houston D.X., 2014, Proceedings of the International Conference on Software and System Process (ICSSP'14), P65
   Hummel M, 2013, BUS INFORM SYST ENG+, V5, P343, DOI 10.1007/s12599-013-0282-4
   International Organization for Standardization , 2011, 262622011 ISO, P2011
   Kähkönen T, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P2
   Kajko-Mattsson M, 2008, P 2 INT S EMP SOFTW
   Kuhrmann M, 2019, IEEE SOFTWARE, V36, P20, DOI 10.1109/MS.2018.110161245
   Kuhrmann M, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P11, DOI 10.1109/ICGSE.2013.11
   Lagerberg Lina, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P348, DOI 10.1109/ESEM.2013.53
   LATOUR B, 1987, FOLLOW SCI ENG SOC
   Lave J., 1991, PERSPECTIVES SOCIALL, P63, DOI DOI 10.1037/10096-003
   Leffingwell D., 2007, The Agile Software Development Series, V1a
   Levina N, 2005, MIS QUART, V29, P335
   Likert R., 1932, ARCH PSYCHOL, V140, P53
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Maro S, 2018, J SYST SOFTWARE, V141, P85, DOI 10.1016/j.jss.2018.03.060
   Mendez FD, 2018, ARXIV180600098
   Méndez V, 2010, SPRINGER SER SYNERG, P183, DOI 10.1007/978-3-642-11443-4_6
   Nord RL, 2006, IEEE SOFTWARE, V23, P47, DOI 10.1109/MS.2006.54
   Pareto L., 2010, Proceedings of the 13th International Conference on Model Driven Engineering Languages and Systems (MODELS'10), P406
   Pelliccione P, 2017, J SYST ARCHITECT, P77
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Prause C. R., 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P130, DOI 10.1109/ICSSP.2012.6225956
   Pretschner A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P55, DOI 10.1109/FOSE.2007.22
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ruping A., 2003, Agile Documentation: A Pattern Guide to Producing Lightweight Documents for Software Projects
   SCACCHI W, 1984, IEEE T SOFTWARE ENG, V10, P49, DOI 10.1109/TSE.1984.5010198
   Schwaber K., 2001, Agile software development with scrum
   Selic B, 2009, IEEE SOFTWARE, V26, P11, DOI 10.1109/MS.2009.167
   STAR SL, 1989, SOC STUD SCI, V19, P387, DOI 10.1177/030631289019003001
   Turner R, 2007, CROSS TALK J DEF SOF
   Voigt S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962616
   Wenger E., 2002, GUIDE MANAGING KNOWL
   Wohlrab R, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P31, DOI 10.1145/3202710.3203155
   Wohlrab R, 2018, LECT NOTES COMPUT SC, V10753, P155, DOI 10.1007/978-3-319-77243-1_10
   Wohlrab R, 2016, INT REQUIR ENG CONF, P216, DOI 10.1109/RE.2016.17
NR 59
TC 19
Z9 21
U1 0
U2 24
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2019
VL 31
IS 5
SI SI
AR e2166
DI 10.1002/smr.2166
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HY7LJ
UT WOS:000468316500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hachemi, A
   Ahmed-Nacer, M
AF Hachemi, Asma
   Ahmed-Nacer, Mohamed
TI Reusing process patterns in software process models modification
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE first-order conflict; model merging; pattern reuse; process model;
   process pattern
AB Process patterns offer proven solutions to reuse in process modeling. This reuse can take many forms; however, we are particularly interested in the form where patterns are merged with already existing process models to enrich or to correct them to satisfy certain constraints or to increase their efficiency. We aim through the present work to propose an approach that proceeds the merging automatically. The difficulty is that some conflicts may arise between the pattern being reused and the model being modified, resulting in an incoherent process model. We start this work by studying possible conflicts (especially that of first order), which can be encountered when merging, and then we propose an algorithm ensuring the automatic reuse and managing these conflicts. We highlight through a comparison the benefits of our proposal. The difficulty of patterns reuse to modify existing models gives rise to very few works in the literature. Our approach aims to offer a possible solution that ensures conflicts management. Automating such form of reuse will enhance patterns exploitation within the software community, as well as it will open many perspectives based on process models merging.
C1 [Hachemi, Asma; Ahmed-Nacer, Mohamed] USTHB, Comp Sci Dept, Comp Syst Lab, PB 32 El Alia, Algiers, Algeria.
C3 University Science & Technology Houari Boumediene
RP Hachemi, A (corresponding author), USTHB, Comp Sci Dept, Comp Syst Lab, PB 32 El Alia, Algiers, Algeria.
EM ashachemi@usthb.dz
CR García-Mireles GA, 2016, ADV INTELL SYST, V405, P25, DOI 10.1007/978-3-319-26285-7_3
   Ambler S W., 1998, Process patterns. Building large-scale systems using object technology
   Ambler SW, 2016, WHAT IS HIST PROCESS
   [Anonymous], 2016, EMF COMP
   [Anonymous], 2011, The Wall Street Journal
   [Anonymous], 2013, JOINT M EUR SOFTW EN, DOI DOI 10.1145/2491411.2491446
   [Anonymous], 2016, BIBLIO COMP VERSIONI
   Bendraou R, 2007, THESIS
   Biglari B, 2012, NEW TRENDS SOFTWARE
   Brosch Petra, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P336, DOI 10.1007/978-3-642-30982-3_10
   Brosch P, 2012, LECT NOTES COMPUTER, V7167
   COPLIEN JO, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P183
   Dittrich Y, 2016, INFORM SOFTWARE TECH, V70, P220, DOI 10.1016/j.infsof.2015.07.001
   Estublier J, 2005, P SOFTW PROC WORKSH
   FUGGETTA A, 2000, P 22 INT C SOFTW ENG
   Gerth C, 2013, SOFTW SYST MODEL, V12, P517, DOI 10.1007/s10270-011-0226-8
   Hachemi A., 2015, LECT NOTES ELECT ENG, P575
   Hachemi A, 2017, P 14 ACS IEEE INT C
   Hagen M, 2004, P INT WORKSH SOFTW P
   He X-y, 2009, P 21 INT C SOFTW ENG
   Henninger S., 2007, SOFTWARE PATTERN COM
   Dam HK, 2016, J SYST SOFTWARE, V112, P137, DOI 10.1016/j.jss.2015.06.044
   Hoa Khanh Dam, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P153, DOI 10.1109/WICSA.2014.31
   Iida H, 1999, P INT WORKSH PRINC S
   Kessentini M, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1453
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kneuper R., 2002, HDB SOFTWARE ENG KNO, V2
   lida H, 2002, P 1 WORKSH SOFTW DEV
   Martins PV, 2016, ADV INTELL SYST, V405, P47, DOI 10.1007/978-3-319-26285-7_5
   Montangero C, 1999, LNCS GMBH, V1500
   *OMG, 2008, SOFTW SYST PROC ENG
   Osterweil L., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P2
   Reder A, 2012, IEEE INT CONF AUTOM, P220, DOI 10.1145/2351676.2351707
   Ribo JM, 2002, LSI0214R POL U CAT
   RIBO JM, 2000, LSI0034R POL U CAT
   Sabetzadeh M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P815, DOI 10.1145/1368088.1368208
   Tasharofi S, 2007, INT FED INFO PROC, V244, P222
   Tran H. D., 2007, THESIS
   Tran HN, 2007, P 9 INT C SOFTW ENG
   Tran HN, 2007, P 2 INT C SOFTW ENG
   Wieland K, 2012, COMPUTER SUPPORTED C, DOI 10. 1007/s10606-012-9172-4
   Zheng L, 2010, PROCEEDINGS OF THE 17TH INTERNATIONAL CONGRESS ON SOUND AND VIBRATION
NR 42
TC 2
Z9 4
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2018
VL 30
IS 8
AR e1938
DI 10.1002/smr.1938
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GP8BA
UT WOS:000441133300005
DA 2024-07-18
ER

PT J
AU Rashid, N
   Khan, SU
AF Rashid, Nasir
   Khan, Siffat Ullah
TI Using agile methods for the development of green and sustainable
   software: Success factors for GSD vendors
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile software development; empirical study; green and sustainable
   software; GSD vendor; success factors; systematic literature review
   (SLR)
ID SYSTEMATIC LITERATURE-REVIEWS; DEVELOPMENT LIFE-CYCLE; PROCESS
   IMPROVEMENT; CHALLENGES; MODEL
AB Over the last decade, the use of agile methods has grown dramatically for software development. Agile methods guarantee to accelerate the delivery of remarkable software with increased user satisfaction and reduced cost. However, in recent years, due to the emergence of green software engineering, software developers are compelled to focus more on green and sustainable aspects of software. Green software engineering aims to design, develop, and use the software with confined energy and computing resources. Recently, software engineers in global software development have adapted agile methods for quick, interactive, and environment-friendly software development. In this study, we have identified 16 success factors, through systematic literature review (SLR) and applied contrived search criteria derived from the research questions; 80 relevant papers were identified and reviewed. Findings of the SLR study were then empirically validated through questionnaire survey in global software development industry, in which 106 experts from 25 different countries participated. The findings of our industrial survey are mostly in coherence with the SLR findings. However, there is a difference in ranks of the various success factors across the 2 data sets (SLR and industrial survey).
C1 [Rashid, Nasir; Khan, Siffat Ullah] Univ Malakand, Dept Comp Sci & IT, Chakdara, Pakistan.
C3 University of Malakand
RP Khan, SU (corresponding author), Univ Malakand, Dept Comp Sci & IT, Chakdara, Pakistan.
EM siffatullah@uom.edu.pk
RI Khan, Siffat Ullah/B-3309-2017; Rashid, Nasir/ABI-6676-2020
OI Khan, Siffat Ullah/0000-0003-0339-7915; 
CR Abbas N., 2010, IEEE AG C AGILE UK, P78
   Afzal W, 2016, J SYST SOFTWARE, V111, P1, DOI 10.1016/j.jss.2015.08.048
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Agarwal Shalabh, 2012, International Journal of Research and Reviews in Computer Science, V3, P1425
   Ahalt S, 2014, COMPUT SCI ENG, V16, P18, DOI 10.1109/MCSE.2014.5
   Ahmed M.M., 2015, International Journal of Software Engineering and Its Applications, V9, P173
   Ahuja L, 2015, 4 IEEE INT C REL INF
   Akbar R, 2008, P 8 C APPL INF COMM, P113
   Ali S., 2012, IOSR J COMPUTER ENG, V2, P08
   Ali S, 2016, J SYST SOFTWARE, V117, P402, DOI 10.1016/j.jss.2016.03.069
   Ali S, 2014, INT CONF GLOBAL SOFT, P153, DOI 10.1109/ICGSE.2014.12
   Alzoubi YI, 2016, INFORM MANAGE-AMSTER, V53, P22, DOI 10.1016/j.im.2015.08.003
   Ambreen T, 2016, EMPIRICAL RES REQUIR, P1
   Amsel N, 2010, CHI 10 EXTENDED ABST, P325
   [Anonymous], 2014, P SEKE
   [Anonymous], J SOFTW MAINT EVOL R
   [Anonymous], THESIS
   [Anonymous], 2010, P 11 INT C PROD FOC
   [Anonymous], INT J SYS ASSUR ENG
   [Anonymous], CO 2 REDUCTION ICT P
   [Anonymous], [No title captured]
   [Anonymous], P PAK ACAD SCI J
   [Anonymous], DTIC DOCUMENT
   [Anonymous], 2010, P 14 INT C EV ASS SO
   [Anonymous], 2013, J GLOBAL RES COMPUT
   [Anonymous], 2011, INT J NEW COMPUT ARC
   Appasami G, 2011, INT J COMB OPTIM PRO, V2, P39
   Ardito L, 2015, IT PROF, V17, P44, DOI 10.1109/MITP.2015.16
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   Bano M, 2015, INFORM SOFTWARE TECH, V58, P148, DOI 10.1016/j.infsof.2014.06.011
   Becker C, 2015, UK SHCI WORKSH SUST
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V77, P61, DOI 10.1016/j.infsof.2016.03.008
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   Calero C., 2015, Green in Software Engineering, P231, DOI DOI 10.1007/978-3-319-08581-410
   Chang DN, 2014, J CLEAN PROD, V83, P48, DOI 10.1016/j.jclepro.2014.07.050
   Chauhan NS, 2013, IT PROF, V15, P28, DOI 10.1109/MITP.2013.6
   Cockburn A., 2006, AGILE SOFTWARE DEV C
   Danait A, 2005, AGILE 2005, Proceedings, P214, DOI 10.1109/ADC.2005.9
   Dick M, 2010, INTEGRATION ENV INFO, P69
   Dick M, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P78, DOI 10.1109/GREENS.2013.6606425
   Durdik Z, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P517, DOI 10.1109/ICSM.2012.6405316
   Dutta S, 2016, 3 INT C COMP SUST GL, P231
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Erdelyi K, 2013, 11 IEEE INT S INT SY, P360
   Estler HC, 2014, EMPIR SOFTW ENG, V19, P1197, DOI 10.1007/s10664-013-9271-y
   Fowler M., 2001, Software Development, V9, P28
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Germain É, 2005, J SYST SOFTWARE, V75, P17, DOI 10.1016/j.jss.2004.02.022
   Giuffrida R, 2013, INFORM SOFTWARE TECH, V55, P1143, DOI 10.1016/j.infsof.2013.01.004
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Hummel M, 2014, P ANN HICSS, P4712, DOI 10.1109/HICSS.2014.579
   Ilyas M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1875
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Jalali S, 2010, 5 IEEE INT C GLOB SO, P245
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Kaefer, 2009, 31 INT C SOFTW ENG V, P59
   Kern E., 2015, The Green in Software Engineering, P61
   Kern E, 2015, ENVIRON IMPACT ASSES, V52, P53, DOI 10.1016/j.eiar.2014.07.003
   Khan AW, 2013, IET SOFTW, V7, P327, DOI 10.1049/iet-sen.2013.0013
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Khan SU, 2012, IET SOFTW, V6, P1, DOI 10.1049/iet-sen.2010.0038
   Khan S. U., 2015, Proc. Pakistan Acad. Sci. J., V52, P315
   Khan SU, 2011, J SYST SOFTWARE, V84, P686, DOI 10.1016/j.jss.2010.12.010
   Khan SU, 2016, J ENG, V1, P1
   Khan SU, 2012, INT C SOFTW ENG GREE, P124
   Kitchenham B.A., 2007, TECHNICAL REPORT VER
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lo C-TD, 2010, 34 IEEE ANN COMP SOF, P211
   Luo Z, 2013, MECH DESIGN SUSTAINA, P3
   Mahmood S, 2015, P 19 INT C EV ASS SO, P31
   Mahmood S, 2017, INFORM SOFTWARE TECH, V91, P102, DOI 10.1016/j.infsof.2017.06.009
   Mahmoud Sara S., 2013, International Journal of Software Engineering and Its Applications, V7, P55
   Mohammed NM, 2017, COMPUT STAND INTER, V50, P107, DOI 10.1016/j.csi.2016.10.001
   Naumann S, 2011, SUSTAIN COMPUT-INFOR, V1, P294, DOI 10.1016/j.suscom.2011.06.004
   Nazir F, 2017, INT C INF SCI APPL S, P98
   Niazi M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1872
   Niazi M, 2016, INFORM SOFTWARE TECH, V80, P1, DOI 10.1016/j.infsof.2016.08.002
   Niazi M, 2015, IET SOFTW, V9, P135, DOI 10.1049/iet-sen.2014.0130
   Niazi M, 2015, J SOFTW-EVOL PROC, V27, P700, DOI 10.1002/smr.1704
   Niazi M, 2015, ARAB J SCI ENG, V40, P845, DOI 10.1007/s13369-015-1586-0
   Nielsen LL, 2011, J MATH MODEL, V7, P15
   Pankowska M., 2013, MECH DESIGN SUSTAINA, P265, DOI [10.1007/978-94-007-5995-4-_}13, DOI 10.1007/978-94-007-5995-4-_}13]
   Rashid N., 2015, Proc. Pakistan Acad. Sci., V52, P301
   Rashid N., 2014, 2014 1 AG C PAK ISL, V26, P2041
   Rashid N, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P247, DOI 10.5220/0005913802470253
   Soderberg A.-M., 2015, P 13 EIASM WORKSH MA, P32
   Sriram R, 2012, IEEE INT C MAN INN T
   Sutherland J, 2007, IEEE HICSS 40 ANN HA, P339
   Taina Juha, 2011, UPGRADE: The European Journal for the Informatics Professional, V12, P22
   Taromirad M, 2008, 15 ANN IEEE INT C WO, P161
   Tate K., 2005, Sustainable software development: an agile perspective
   van Kelle E, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P77, DOI 10.1109/CHASE.2015.24
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Verner J. M., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P2, DOI 10.1049/ic.2012.0001
   Vithana V, 2015, INT J COMPUT APPL, V113, P331
   Wohlin C, 2014, P 18 INT C EV ASS SO, P115
   Zahedi M, 2016, INT J INFORM MANAGE, V36, P995, DOI 10.1016/j.ijinfomgt.2016.06.007
NR 98
TC 5
Z9 5
U1 1
U2 23
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2018
VL 30
IS 8
AR e1927
DI 10.1002/smr.1927
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GP8BA
UT WOS:000441133300001
DA 2024-07-18
ER

PT J
AU Al-Sabbagh, K
   Gren, L
AF Al-Sabbagh, KhaledWalid
   Gren, Lucas
TI The connections between group maturity, software development velocity,
   and planning effectiveness
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE group maturity; software engineering; velocity; planning effectiveness;
   performance
ID VALIDATION; PERFORMANCE; TEAMWORK; QUALITY; TEAMS
AB Empirical evidence regarding the connection between group development (maturity) and the success of software development teams is lacking. The purpose of this research is to gain a qualitative and quantitative understanding of how velocity and planning effectiveness of software teams connect to a group development model. The Group Development Questionnaire was given to 19 software developers from 4 work groups to assess their group development maturity. The work groups' responses to the survey were checked for correlation with development velocity and planning effectiveness. Semistructured interviews were conducted with 16 individuals from the same 4 work groups to explore issues about their group maturity and to validate the responses of the interviewees in the Group Development Questionnaire. The measurement of the fourth stage of group development had a strong association with the planning effectiveness measurement, which means that a team with less issues in the fourth phase of group development is more effective in adhering to its plans. On the other hand, group development and velocity showed no significant convergent validity. We conclude that the dynamics within software development teams might correlate to their ability to deliver the expected outcome as planned but not to their ability to develop tasks faster.
C1 [Al-Sabbagh, KhaledWalid] Chalmers Univ Technol, Dept Appl Informat Technol, SE-41296 Gothenburg, Sweden.
   [Al-Sabbagh, KhaledWalid; Gren, Lucas] Univ Gothenburg, SE-41296 Gothenburg, Sweden.
   [Gren, Lucas] Chalmers Univ Technol, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
C3 Chalmers University of Technology; University of Gothenburg; Chalmers
   University of Technology
RP Al-Sabbagh, K (corresponding author), Chalmers Univ Technol, Dept Appl Informat Technol, SE-41296 Gothenburg, Sweden.; Al-Sabbagh, K (corresponding author), Univ Gothenburg, SE-41296 Gothenburg, Sweden.
EM khaals@chalmers.se
OI Al-Sabbagh, Khaled/0000-0003-2571-5099; Gren, Lucas/0000-0001-5488-9894
CR Agarwal M., 2012, International Journal of Emerging Technology and Advanced Engineering, V2, P97
   Pomar FA, 2014, J SOFTW-EVOL PROC, V26, P776, DOI 10.1002/smr.1661
   Allison I, 2007, INFORM SOFTWARE TECH, V49, P668, DOI 10.1016/j.infsof.2007.02.003
   Anderson NR, 1998, J ORGAN BEHAV, V19, P235, DOI 10.1002/(SICI)1099-1379(199805)19:3<235::AID-JOB837>3.0.CO;2-C
   [Anonymous], THESIS
   Asproni G., 2004, Agile Times, V4, P8
   Bahli B, 2005, J INF TECHNOL EDUC-R, V4, P97
   Barsade SG, 2002, ADMIN SCI QUART, V47, P644, DOI 10.2307/3094912
   Boehm B.W., 1981, Software engineering economics, V197
   Buzaglo G, 1999, SMALL GR RES, V30, P108, DOI 10.1177/104649649903000106
   CISSNA KN, 1984, SMALL GROUP BEHAV, V15, P3, DOI 10.1177/104649648401500101
   COHN M, 2015, DIFFERENCE STORY TAS
   Davidson B., 2001, THESIS
   EVANS NJ, 1986, SMALL GROUP BEHAV, V17, P203, DOI 10.1177/104649648601700205
   Gack G.A., 2003, SOFTWARE QUALITY PRO, V5, P5
   Goth G, 2000, IEEE SOFTWARE, V17, P125
   Gren L, 2017, J SYST SOFTWARE, V124, P104, DOI 10.1016/j.jss.2016.11.024
   Gren L, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P1, DOI 10.1109/SEAA.2015.31
   Gren L, 2015, J SYST SOFTWARE, V107, P38, DOI 10.1016/j.jss.2015.05.008
   Gren Lucas, 2017, EASE, P292, DOI [DOI 10.1145/3084226, 10.1145/3084226.3084269, DOI 10.1145/3084226.3084269]
   Hernández-López A, 2010, INT J HUM CAP INF TE, V1, P32, DOI 10.4018/jhcitp.2010070103
   Hinsz VB, 1997, PSYCHOL BULL, V121, P43, DOI 10.1037/0033-2909.121.1.43
   Hoegl M, 2001, ORGAN SCI, V12, P435, DOI 10.1287/orsc.12.4.435.10635
   Huckman RS, 2009, MANAGE SCI, V55, P85, DOI 10.1287/mnsc.1080.0921
   Humphrey WS, 2000, IEEE SOFTWARE, V17, P71, DOI 10.1109/MS.2000.895171
   Jensen, 1977, GROUP ORGAN STUD, V2, P419, DOI [DOI 10.1177/105960117700200404, 10.1177/105960117700200404]
   Karn JS, 2007, BEHAV INFORM TECHNOL, V26, P99, DOI 10.1080/01449290500102110
   Keyton J., 2002, COMMUNICATING GROUPS
   Liang TP, 2007, IND MANAGE DATA SYST, V107, P636, DOI 10.1108/02635570710750408
   McLeod L, 2011, EMPIR SOFTW ENG, V16, P430, DOI 10.1007/s10664-010-9153-5
   Mills TheodoreM., 1967, The Sociology of Small Groups
   Ong A, 2005, P 9 AS PAC C INF SYS, P7
   Ramasubbu Narayan., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P125
   Roberge MÉ, 2010, HUM RESOUR MANAGE R, V20, P295, DOI 10.1016/j.hrmr.2009.09.002
   Runeson P., 2009, PRODUCT FOCUSED SOFT, V32, P441, DOI 10.1007/978-3-642-02152-7_36
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sawyer S, 2001, INFORM SYST J, V11, P155, DOI 10.1046/j.1365-2575.2001.00100.x
   Sison R, 2005, 12 AS PAC SOFTW ENG, P1
   Sudhakar GP, 2011, TEAM PERFORM MANAG, V17, P187, DOI 10.1108/13527591111143718
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
   Wheelan S A, 1996, Rehabil Nurs, V21, P75
   Wheelan S.A., 1994, GROUP DEV QUESTIONNA
   Wheelan S.A., 2005, Group processes: A developmental perspective, V2nd
   Wheelan SA, 1999, SMALL GR RES, V30, P59, DOI 10.1177/104649649903000104
   Wheelan SA, 1996, SMALL GR RES, V27, P143, DOI 10.1177/1046496496271007
   Wheelan SA, 2003, AM J CRIT CARE, V12, P527, DOI 10.4037/ajcc2003.12.6.527
NR 46
TC 4
Z9 4
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2018
VL 30
IS 1
AR e1896
DI 10.1002/smr.1896
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FS7MP
UT WOS:000419982100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jabangwe, R
   Wohlin, C
   Petersen, K
   Smite, D
   Börstler, J
AF Jabangwe, Ronald
   Wohlin, Claes
   Petersen, Kai
   Smite, Darja
   Borstler, Jurgen
TI A method for investigating the quality of evolving object-oriented
   software using defects in global software development projects
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE global software development; software quality; software evolution;
   object-oriented software; distributed software development; defect
   analysis
ID VISUALIZATION
AB Context: Global software development (GSD) projects can have distributed teams that work independently in different locations or team members that are dispersed. The various development settings in GSD can influence quality during product evolution. When evaluating quality using defects as a proxy, the development settings have to be taken into consideration.
   Objective: The aim is to provide a systematic method for supporting investigations of the implication of GSD contexts on defect data as a proxy for quality.
   Method: A method engineering approach was used to incrementally develop the proposed method. This was done through applying the method in multiple industrial contexts and then using lessons learned to refine and improve the method after application.
   Results: A measurement instrument and visualization was proposed incorporating an understanding of the release history and understanding of GSD contexts.
   Conclusion: The method can help with making accurate inferences about development settings because it includes details on collecting and aggregating data at a level that matches the development setting in a GSD context and involves practitioners at various phases of the investigation. Finally, the information that is produced from following the method can help practitioners make informed decisions when planning to develop software in comparable circumstances. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Jabangwe, Ronald] Dundalk Inst Technol, Regulated Software Res Ctr, Lero, Dundalk, Ireland.
   [Jabangwe, Ronald; Wohlin, Claes; Petersen, Kai; Smite, Darja; Borstler, Jurgen] Blekinge Inst Technol, Dept Software Engn, S-37179 Karlskrona, Sweden.
C3 Dundalk Institute of Technology; Blekinge Institute Technology
RP Jabangwe, R (corresponding author), Dundalk Inst Technol, Regulated Software Res Ctr, Lero, Dundalk, Ireland.; Jabangwe, R (corresponding author), Blekinge Inst Technol, Dept Software Engn, S-37179 Karlskrona, Sweden.
EM ronald.jabangwe@dkit.ie
RI Jabangwe, Ronald/P-1049-2018; Börstler, Jürgen/IWE-4001-2023
OI Jabangwe, Ronald/0000-0002-2305-6352; Börstler,
   Jürgen/0000-0003-0639-4234; Petersen, Kai/0000-0002-1532-8223
FU Swedish Knowledge Foundation [20120200]; Ericsson Software Research
FX This research is partly funded by the Swedish Knowledge Foundation under
   the grant 20120200 (2013-2016) and Ericsson Software Research.
CR [Anonymous], 2010, ISOIECIEEE24765
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2011, REAL WORLD RES
   [Anonymous], 2007, Software Visualization: Visualizing the Structure, Behavior, and Evolution of Software
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili V. R., 1993, Software Engineering - ESEC '93. 4th European Software Engineering Conference Proceedings, P68
   Basili Victor R., 1992, TECH REP
   Bassil S, 2001, PROG COMPREHEN, P7, DOI 10.1109/WPC.2001.921708
   Bird Christian, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P237, DOI 10.1109/MSR.2012.6224286
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, COMMUN ACM, V52, P85, DOI 10.1145/1536616.1536639
   Boehm B W., 1978, Characteristics of software quality, V1
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Cagnazzo L, 2009, ELE COM ENG, P29
   Cataldo M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P101, DOI 10.1145/1595696.1595714
   Cataldo M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P161, DOI 10.1145/1985793.1985816
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Conchúir EO, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1536616.1536648
   da Silva Fabio Q. B., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P87, DOI 10.1109/ICGSE.2010.18
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   ISO/IEC, 2010, Technical report
   Jabangwe R., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P41, DOI 10.1109/ICGSE.2012.30
   Jabangwe R, 2015, EMPIR SOFTW ENG, V20, P640, DOI 10.1007/s10664-013-9291-7
   Jabangwe R, 2016, INFORM SOFTWARE TECH, V72, P125, DOI 10.1016/j.infsof.2015.12.005
   Jabangwe R, 2015, SOFTWARE QUAL J, V23, P539, DOI 10.1007/s11219-014-9247-1
   Jabangwe R, 2013, ASIA PAC SOFWR ENG, P289, DOI 10.1109/APSEC.2013.47
   Kocaguneli E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P882, DOI 10.1109/ICSE.2013.6606637
   Kuhrmann M, 2014, J SOFTW-EVOL PROC, V26, P1053, DOI 10.1002/smr.1642
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Mayer RJ, 1995, DTIC DOCUMENT
   McCall J. A., 1977, TECH REP
   Meneely A, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P453
   Mens T., 2008, Software Evolution
   Moser R, 2008, LECT NOTES COMPUT SC, V5082, P252
   Munch J, 2012, FRAUNHOFER IESE SERI, P139
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Posnett D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P452, DOI 10.1109/ICSE.2013.6606591
   Ramasubbu N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P261, DOI 10.1145/1985793.1985830
   Runeson P., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P341
   Seth F.P., 2014, CCIS, P147
   SHNEIDERMAN B, 1992, ACM T GRAPHIC, V11, P92, DOI 10.1145/102377.115768
   Smite D., 2014, SOFTWARE PROJECT MAN, P301
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Smite D, 2012, J SOFTW-EVOL PROC, V24, P605, DOI 10.1002/smr.550
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Ter Hofstede AHM, 1997, INFORM SYST, V22, P401, DOI 10.1016/S0306-4379(97)00024-0
   Verner J. M., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P2, DOI 10.1049/ic.2012.0001
   Wohlin C., 2014, P 8 ACM IEEE INT S E, V46, P1, DOI [10.1145/2652524.2652559, DOI 10.1145/2652524.2652559]
   Yu L, 2013, International Journal of Software and Informatics, V7, P469
NR 54
TC 1
Z9 2
U1 3
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2016
VL 28
IS 8
BP 622
EP 641
DI 10.1002/smr.1788
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EC7FG
UT WOS:000388301300001
DA 2024-07-18
ER

PT J
AU Ruohonen, J
   Hyrynsalmi, S
   Leppänen, V
AF Ruohonen, Jukka
   Hyrynsalmi, Sami
   Leppanen, Ville
TI Time series trends in software evolution
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software evolution; time series analysis; stationarity; unit roots;
   dynamic regression
ID OIL-PRICE SHOCK; GREAT CRASH; COINTEGRATION; REGRESSION; METRICS;
   GROWTH; SCALE; MODEL
AB BACKGROUND - The laws of software evolution were formulated to describe time series trends in software over time.
   OBJECTIVE - Building on econometrics, the paper relates the laws theoretically to the concept of stationarity. The theoretical argumentation builds on the fact that in a stationary time series, the mean and variance remain constant. The concept is further elaborated with different statistical types of time series trends. These provide the objective for the empirical experiment that evaluates whether software size measures in a typical software evolution dataset are stationary.
   METHOD - The time series analysis is based on conventional statistical tests for the evaluation of stationarity.
   RESULTS - The empirical dataset contains time series extracted from the version control systems used in Vaadin and Tomcat between circa 2006 and 2013. The results establish that the observed time series are neither stationary nor follow simple mathematical functions that would translate into stationarity.
   CONCLUSION - The testing framework presented in the paper allows evaluating the stationarity of software evolution time series. The results can be interpreted theoretically against the laws of software evolution. These methodological and theoretical contributions improve the foundations of predictive time series modeling of software evolution problems. Copyright (C) 2015 John Wiley & Sons, Ltd.
C1 [Ruohonen, Jukka; Leppanen, Ville] Univ Turku, Dept Informat Technol, FI-20014 Turun, Finland.
   [Hyrynsalmi, Sami] Turku Sch Econ & Business Adm, Dept Management & Entrepreneurship, FI-20014 Turun, Finland.
C3 University of Turku; University of Turku
RP Ruohonen, J (corresponding author), Univ Turku, Dept Informat Technol, FI-20014 Turun, Finland.
EM juanruo@utu.fi
RI Hyrynsalmi, Sami/U-6315-2017; Ruohonen, Jukka/AFB-9028-2022
OI Hyrynsalmi, Sami/0000-0002-5073-3750; Ruohonen,
   Jukka/0000-0001-5147-3084; Leppanen, Ville/0000-0001-5296-677X
CR Amasaki S, 2014, J SOFTWARE EVOLUTION, V27, P488
   [Anonymous], 2005, NEW INTRO MULTIPLE T
   [Anonymous], 1983, J. Time Ser. Anal., DOI [DOI 10.1111/J.1467-9892.1983.TB00371.X, 10.1111/j.1467-9892.1983.tb00371.x]
   [Anonymous], 2010, THESIS SWINBURNE U T
   Barry EJ, 2007, J SOFTW MAINT EVOL-R, V19, P1, DOI 10.1002/smr.342
   Bettenburg N, 2013, EMPIR SOFTW ENG, V18, P375, DOI 10.1007/s10664-012-9205-0
   Canfora G, 2007, P 4 INT WORKSH MIN S, P1
   Canfora G., 2012, EMPIR SOFTW ENG, V54, P1
   Canfora Gerardo., 2010, P IEEE INT C SOFTWAR, P1
   CHAN KH, 1977, ECONOMETRICA, V45, P737, DOI 10.2307/1911686
   Couto C, 2014, J SYST SOFTWARE, V93, P24, DOI 10.1016/j.jss.2014.01.033
   DICKEY DA, 1981, ECONOMETRICA, V49, P1057, DOI 10.2307/1912517
   DICKEY DA, 1979, J AM STAT ASSOC, V74, P427, DOI 10.2307/2286348
   DURLAUF SN, 1988, ECONOMETRICA, V56, P1333, DOI 10.2307/1913101
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   ENGLE RF, 1987, J ECONOMETRICS, V35, P143, DOI 10.1016/0304-4076(87)90085-6
   ENGLE RF, 1987, ECONOMETRICA, V55, P251, DOI 10.2307/1913236
   Engle RF, 2012, ENCY FINANCIAL MODEL, VII, P359
   Fraley C, 2013, FRACDIFF FRACTIONALL
   Fuentetaja E, 2002, PROC IEEE INT CONF S, P226, DOI 10.1109/ICSM.2002.1167769
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Gonzalez-Barahona JM, 2014, J SOFTW-EVOL PROC, V26, P589, DOI 10.1002/smr.1615
   Granger CWJ, 2012, J ECONOMETRICS, V169, P142, DOI 10.1016/j.jeconom.2012.01.031
   GRANGER CWJ, 1993, ECON J, V103, P307, DOI 10.2307/2234769
   Granger CWJ, 1996, J ECONOMETRICS, V73, P61, DOI 10.1016/0304-4076(95)01733-X
   GRANGER CWJ, 1981, J ECONOMETRICS, V16, P121, DOI 10.1016/0304-4076(81)90079-8
   Granger CWJ, 1974, J Econometrics, V2, P111, DOI [10.1002/9780470996249.ch27, DOI 10.1016/0304-4076(74)90034-7]
   Hamilton J.D., 1994, Time series analysis
   Hendry D. F., 1995, DYNAMIC ECONOMETRICS
   Hendry DF, 2000, ENERG J, V21, P1
   Hendry DF, 1996, J STAT PLAN INFER, V49, P177, DOI 10.1016/0378-3758(95)00036-4
   Herraiz I, 2008, THESIS U RJ CARLOS M
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Jorgensen M, 2012, J SYST SOFTWARE, V85, P2494, DOI 10.1016/j.jss.2012.05.068
   Juselius K., 2006, The Cointegrated VAR Model: Methodology and Applications
   Kenmei B, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P73
   Kitchenham BA, 2002, INFORM SOFTWARE TECH, V44, P13, DOI 10.1016/S0950-5849(01)00204-X
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Lehman MM, 2001, PROC IEEE INT CONF S, P219, DOI 10.1109/ICSM.2001.972735
   Lehman MM, 1998, PROC IEEE INT CONF S, P208, DOI 10.1109/ICSM.1998.738510
   LEHMAN MM, 1985, PROGRAM EVOLUTION PR, P247
   Lehman MM, 1985, PROGRAM EVOLUTION PR, P134
   Lütkepohl H, 2004, CONTRIB TO ECON ANAL, V269, P107
   Maddala G., 2001, INTRO ECONOMETRICS
   Myrtveit I, 2012, EMPIR SOFTW ENG, V17, P23, DOI 10.1007/s10664-011-9183-7
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Ng S, 2001, ECONOMETRICA, V69, P1519, DOI 10.1111/1468-0262.00256
   Perron P, 2005, J ECONOMETRICS, V129, P65, DOI 10.1016/j.jeconom.2004.09.004
   PERRON P, 1989, ECONOMETRICA, V57, P1361, DOI 10.2307/1913712
   Pfaff B, 2008, USE R, P3
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   STOCK JH, 1988, J ECON PERSPECT, V2, P147, DOI 10.1257/jep.2.3.147
   Turski WM, 1996, IEEE T SOFTWARE ENG, V22, P599, DOI 10.1109/32.536959
   van der Spek P, 2010, THESIS VRIJE U AMSTE
   Wu J., 2006, THESIS U WATERLOO WA
   Zeileis A., 2013, DYNLM DYNAMIC LINEAR
   Zeileis A., 2005, J STAT SOFTW, V14, P1, DOI DOI 10.18637/JSS.V014.I06
   ZIVOT E, 1992, J BUS ECON STAT, V10, P251, DOI 10.2307/1391541
NR 59
TC 7
Z9 8
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2015
VL 27
IS 12
BP 990
EP 1015
DI 10.1002/smr.1755
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB5JV
UT WOS:000368551300004
DA 2024-07-18
ER

PT J
AU Ahmad, A
   Jamshidi, P
   Pahl, C
AF Ahmad, Aakash
   Jamshidi, Pooyan
   Pahl, Claus
TI Classification and comparison of architecture evolution reuse
   knowledge-a systematic review
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE software architecture; architecture-centric software evolution;
   architecture evolution reuse knowledge; systematic literature review;
   evidence-based study in software evolution; research synthesis
ID SOFTWARE ARCHITECTURE
AB Context: Architecture-centric software evolution (ACSE) enables changes in system's structure and behaviour while maintaining a global view of the software to address evolution-centric trade-offs. The existing research and practices for ACSE primarily focus on design-time evolution and runtime adaptations to accommodate changing requirements in existing architectures.
   Objectives: We aim to identify, taxonomically classify and systematically compare the existing research focused on enabling or enhancing change reuse to support ACSE.
   Method: We conducted a systematic literature review of 32 qualitatively selected studies and taxonomically classified these studies based on solutions that enable (i) empirical acquisition and (ii) systematic application of architecture evolution reuse knowledge (AERK) to guide ACSE.
   Results: We identified six distinct research themes that support acquisition and application of AERK. We investigated (i) how evolution reuse knowledge is defined, classified and represented in the existing research to support ACSE and (ii) what are the existing methods, techniques and solutions to support empirical acquisition and systematic application of AERK.
   Conclusions: Change patterns (34% of selected studies) represent a predominant solution, followed by evolution styles (25%) and adaptation strategies and policies (22%) to enable application of reuse knowledge. Empirical methods for acquisition of reuse knowledge represent 19% including pattern discovery, configuration analysis, evolution and maintenance prediction techniques (approximately 6% each). A lack of focus on empirical acquisition of reuse knowledge suggests the need of solutions with architecture change mining as a complementary and integrated phase for architecture change execution. Copyright (C) 2014 John Wiley & Sons, Ltd.
C1 [Ahmad, Aakash; Jamshidi, Pooyan; Pahl, Claus] Dublin City Univ, Sch Comp, Dublin 9, Ireland.
   [Ahmad, Aakash; Jamshidi, Pooyan; Pahl, Claus] Lero, Limerick, Ireland.
   [Jamshidi, Pooyan; Pahl, Claus] Irish Ctr Cloud Comp & Commerce IC4, Dublin, Ireland.
C3 Dublin City University; University of Limerick
RP Jamshidi, P (corresponding author), Dublin City Univ, Sch Comp, Dublin 9, Ireland.
EM pooyan.jamshidi@computing.dcu.ie
RI Ahmad, Aakash/AAR-7569-2021; Jamshidi, Pooyan/K-2848-2014
OI Jamshidi, Pooyan/0000-0002-9342-0703; Ahmad, Aakash/0000-0002-3198-9638;
   Pahl, Claus/0000-0002-9049-212X
FU Science Foundation Ireland [10/CE/I1855]; Irish Centre for Cloud
   Computing and Commerce (IC4), a national technology centre - Enterprise
   Ireland; Irish Industrial Development Authority
FX The authors would like to thank Dr Jim Buckely (affiliated with:
   Lero-the Irish Software Engineering Research Centre, University of
   Limerick, Ireland) and Bardia Mohabbati (affiliated with: Simon Fraser
   University, Canada) for their feedback and thoughtful suggestions
   throughout the development and evaluation of the review protocol. This
   work was supported, in part, by Science Foundation Ireland grant
   10/CE/I1855 to Lero-the Irish Software Engineering Research Centre
   (www.lero.ie). The research work described in this paper was partly
   supported by the Irish Centre for Cloud Computing and Commerce (IC4), a
   national technology centre funded by Enterprise Ireland and the Irish
   Industrial Development Authority
CR Ahmad A, 2012, 10 INT WORKSH SYST S
   Ahmad A, CLASSIFICATION COMP
   Ahmad A, 2013, ACM SIGSOFT SOFTWARE, V38
   Ahmad A, 2012, 7 WORKSH SHARING REU
   [Anonymous], 16 EUR C SOFTW MAINT
   Babar MA, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P69, DOI 10.1007/978-3-642-02374-3_5
   Baresi L, 2006, COMPUTER, V39, P36, DOI 10.1109/MC.2006.362
   Barnes JM, 2014, SOFTW SYST MODEL, V13, P649, DOI 10.1007/s10270-012-0301-9
   Barnes JM, 2013, 3 WORKSH DEV TOOLS P
   Bengtsson P, 1999, 3 EUR C SOFTW MAINT
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Bradbury J, 2004, INT WORKSH SELF MAN
   Breivold HP, 2012, INFORM SOFTWARE TECH, V54, P16, DOI 10.1016/j.infsof.2011.06.002
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   CHAPIN N, 2001, J SOFTWARE MAINTENAN, V13
   Côté I, 2007, LECT NOTES COMPUT SC, V4758, P29
   Dancy E, 2006, 2006 C CTR ADV STUD, P146
   Dong X, 2008, 16 IEEE INT C PROGR
   Gamma E, 1993, OBJECT ORIENTED PROG
   Ganek AG, 2003, IBM SYST J, V42, P5, DOI 10.1147/sj.421.0005
   Garg AX, 2008, CLIN J AM SOC NEPHRO, V3, P253, DOI 10.2215/CJN.01430307
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Gui N, 2012, IEEE 6 INT C SELF AD
   Hoek A, 2001, JOINT 8 EUR SOFTW EN
   Jamshidi P, 2013, IEEE T CLOUD COMPUTI
   Jamshidi P, 2013, 17 EUR C SOFTW MAINT
   Kazman R, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P154, DOI 10.1109/WCRE.1998.723185
   Lassing N, 2003, J SYST SOFTWARE, V65, P141, DOI 10.1016/S0164-1212(02)00056-0
   Le Goaer Olivier, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P311, DOI 10.1109/COMPSAC.2008.104
   Lehman M, 1996, LNCS
   Li ZY, 2013, INFORM SOFTWARE TECH, V55, P777, DOI 10.1016/j.infsof.2012.11.005
   Medvidovic N, 1999, INT C SOFTW ENG
   Mens K, 1999, LNCS
   Mens T., 2008, Software evolution, P1, DOI [DOI 10.1007/978-3-540-76440-3, 10.1007/978-3-540-76440-3_1]
   Oreizy P, IEEE J INTELLIGENT S
   Pahl C, 2009, INFORM SOFTWARE TECH, V51, P1739, DOI 10.1016/j.infsof.2009.06.001
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Razavian M, 2009, SERV OR COMP ICSOC S
   Slyngstad OPN, 2008, 15 AS PAC SOFTW ENG
   Stammel J, 2011, KARLSRUHE REPORTS IN
   Ulrich WM, 2010, INFORMATION SYSTEMS TRANSFORMATION: ARCHITECTURE-DRIVEN MODERNIZATION CASE STUDIES, pXII
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   Winter A., 2007, International Workshop on SOA Maintenance and Evolution, P107
   Yskout K, 2012, J SOFTWARE SYSTEMS M
   Zhang H, 2013, INFORM SOFTWARE TECH, V55, P1341, DOI 10.1016/j.infsof.2012.09.008
NR 47
TC 15
Z9 16
U1 0
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2014
VL 26
IS 7
BP 654
EP 691
DI 10.1002/smr.1643
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AM2DW
UT WOS:000339660300004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Santos, AL
AF Santos, Andre L.
TI GUI code tracing through direct program interaction
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE program comprehension; feature location; instrumentation; tracing; GUI
ID MAINTENANCE TASKS; SOFTWARE
AB A significant part of a developer's activity is spent on maintenance tasks, which might involve dealing with unfamiliar code. Especially in these cases, a maintenance task is likely to imply a considerable amount of time locating the relevant source code that needs to be changed, a problem often referred to as feature location. This paper proposes a navigation mechanism for tracing user interface elements of a running program to their representation in the source code. The mechanism realization relies on instrumenting the program in order to enable navigation from user interface elements to locations in the source code. We developed a prototype implementation of the proposed mechanism that implies an acceptable instrumentation overhead, suitable for being used on industrial-scale programs. We performed a user study and observed that the proposed mechanism enables fast code location and that the time spent to accomplish similar tasks does not change significantly as program size increases. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Santos, Andre L.] Univ Lisbon, Fac Sci, LASIGE, P-1749016 Lisbon, Portugal.
   [Santos, Andre L.] Inst Univ Lisboa ISCTE IUL, P-1649026 Lisbon, Portugal.
C3 Universidade de Lisboa; Instituto Universitario de Lisboa
RP Santos, AL (corresponding author), Inst Univ Lisboa ISCTE IUL, Av Forcas Armadas,Edifcio II, P-1649026 Lisbon, Portugal.
EM andre.santos@iscte.pt
RI Santos, André L./B-3479-2012
CR [Anonymous], SIGSOFT SOFTW ENG NO
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   *ECL FDN, SWT STAND WIDG TOOLK
   Eclipse Foundation, ASPECTJ PROGR LANG
   Eclipse Foundation, ECL WORKB
   Ishio T., 2003, P 6 INT WORKSH PRINC
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Ko AJ, 2005, PROC INT CONF SOFTW, P126
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Ko AJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P301, DOI 10.1145/1368088.1368130
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Myers BA, 1997, IEEE T SOFTWARE ENG, V23, P347, DOI 10.1109/32.601073
   OSGi Alliance, OSGI STAND JAV COMP
   Santos A. L., 2012, VL HCC IEEE S VIS LA
   Sillito J., 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering, P23, DOI DOI 10.1145/1181775.1181779
   Storey MAD, 1999, J SYST SOFTWARE, V44, P171, DOI 10.1016/S0164-1212(98)10055-9
   Sutherland A, 2009, PROC IEEE INT CONF S, P563, DOI 10.1109/ICSM.2009.5306389
   Weiser Mark., 1981, Proceedings of the 5th International Conference on Software Engineering, P439
   Xi L., 2011, IEEE 3 INT C COMM SO, P670
   YourKit LLC, YOURKIT JAV PROF
NR 20
TC 2
Z9 2
U1 0
U2 3
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2014
VL 26
IS 6
SI SI
BP 552
EP 568
DI 10.1002/smr.1650
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ3WM
UT WOS:000337598600004
DA 2024-07-18
ER

PT J
AU Lucia
   Lo, D
   Jiang, LX
   Thung, F
   Budi, A
AF Lucia
   Lo, David
   Jiang, Lingxiao
   Thung, Ferdian
   Budi, Aditya
TI Extended comprehensive study of association measures for fault
   localization
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Association Measures; Fault Localization; Program Spectra
ID INTERESTINGNESS MEASURES; BUG ISOLATION
AB Spectrum-based fault localization is a promising approach to automatically locate root causes of failures quickly. Two well-known spectrum-based fault localization techniques, Tarantula and Ochiai, measure how likely a program element is a root cause of failures based on profiles of correct and failed program executions. These techniques are conceptually similar to association measures that have been proposed in statistics, data mining, and have been utilized to quantify the relationship strength between two variables of interest (e.g., the use of a medicine and the cure rate of a disease). In this paper, we view fault localization as a measurement of the relationship strength between the execution of program elements and program failures. We investigate the effectiveness of 40 association measures from the literature on locating bugs. Our empirical evaluations involve single-bug and multiple-bug programs. We find there is no best single measure for all cases. Klosgen and Ochiai outperform other measures for localizing single-bug programs. Although localizing multiple-bug programs, Added Value could localize the bugs with on average smallest percentage of inspected code, whereas a number of other measures have similar performance. The accuracies of the measures in localizing multi-bug programs are lower than single-bug programs, which provokes future research. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Lucia; Lo, David; Jiang, Lingxiao; Thung, Ferdian; Budi, Aditya] Singapore Management Univ, Sch Informat Syst, Singapore 178902, Singapore.
C3 Singapore Management University
RP Lucia (corresponding author), Singapore Management Univ, Sch Informat Syst, 80 Stamford Rd, Singapore 178902, Singapore.
EM lucia.2009@smu.edu.sg
RI Jiang, Lingxiao/E-8553-2012; Thung, Ferdian/AAX-9321-2020; Lo,
   David/A-2493-2012
OI Jiang, Lingxiao/0000-0002-4336-8548; Lo, David/0000-0002-4367-7201
CR Abreu R., 2009, Ph.D. thesis
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Aggarwal C. C., 1998, Proceedings of the Seventeenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems. PODS 1998, P18, DOI 10.1145/275487.275490
   Agrawal R., P 20 INT C VERY LARG
   Agresti A.., 2019, INTRO CATEGORICAL DA
   Altman RB, 2002, ANNU REV PHARMACOL, V42, P113, DOI 10.1146/annurev.pharmtox.42.082401.140850
   Anderberg M., 1973, Clustering Analysis for Applications
   [Anonymous], 1957, B JPN SOC SCI FISH
   [Anonymous], 2001, ADAP COMP MACH LEARN
   [Anonymous], 1996, Advances in Knowledge Discovery and Data Mining
   [Anonymous], 2002, 0232002 NAT I STAND
   [Anonymous], MUT TEST AC IND C PR
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 1975, MATH BIOSCI, DOI 10.1016/0025-5564(75)90047-4
   [Anonymous], SIEMENS PROGRAMS HR
   [Anonymous], CSD021203 UC BERK
   [Anonymous], 2008, ISSTA
   Artzi S., 2010, ISSTA, P49, DOI DOI 10.1145/1831708.1831715
   Artzi Shay., 2010, P 32 ACMIEEE INT C S, P265
   Bandyopadhyay A., 2011, Proceedings of the 2011 IEEE 13th International Symposium on High-Assurance Systems Engineering (HASE 2011), P317, DOI 10.1109/HASE.2011.52
   Bo Jiang, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P21, DOI 10.1109/QSIC.2011.37
   Brin S., 1997, SIGMOD Record, V26, P255, DOI [10.1145/253262.253327, 10.1145/253262.253325]
   Cheng H, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   CLARK P, 1991, LECT NOTES ARTIF INT, V482, P151
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   DICE LR, 1945, ECOLOGY, V26, P297, DOI 10.2307/1932409
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Feldman A., 2006, P 21 NATL C ON ARTIF, P827
   Geng LQ, 2006, ACM COMPUT SURV, V38, DOI 10.1145/1132960.1132963
   Gini C., 1912, Studi Economico-Giuricici della R. Universita de Cagliari
   GOODMAN LA, 1954, J AM STAT ASSOC, V49, P732, DOI 10.2307/2281536
   Gupta N., 2005, Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, New York, NY, USA: Association for Computing Machinery, ASE'05, P263, DOI 10.1145/1101908.1101948
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   Healey J.F., 2008, STAT TOOL SOCIAL RES, V8th
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Ko AJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P301, DOI 10.1145/1368088.1368130
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Manevich R., 2004, Software Engineering Notes, V29, P63, DOI 10.1145/1041685.1029907
   Mayer Wolfgang, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P128, DOI 10.1109/ASE.2008.23
   Mayer W, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P471
   Mayer W, 2007, ELECTRON NOTES THEOR, V174, P61, DOI 10.1016/j.entcs.2006.12.030
   Mayer Wolfgang., 2008, PROC 19 INT WORKSH P, P127
   Ohsaki M, 2004, LECT NOTES ARTIF INT, V3202, P362
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Piatetsky-Shapiro G., 1991, Knowledge discovery in databases, P229
   Qi DW, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P33, DOI 10.1145/1595696.1595704
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Renieris M., 2003, Proceedings. 18th IEEE International Conference on Automated Software Engineering (ASE'03), P141
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   ROGERS DJ, 1960, SCIENCE, V132, P1115, DOI 10.1126/science.132.3434.1115
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   SMYTH P, 1992, IEEE T KNOWL DATA EN, V4, P301, DOI 10.1109/69.149926
   SOKAL ROBERT R., 1958, UNIV KANSAS SCI BULL, V38, P1409
   Sorenson T.J., 1948, Det Kongelige Danske Videnskabernes Selskab Biologiske Skrifter, V5, P1
   Sterling CD, 2007, SOFTWARE PRACT EXPER, V37, P1061, DOI 10.1002/spe.798
   Tallam S, 2008, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2008.4658058
   Tan P., 2002, Proceedings of the Eighth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, KDD'02, P32, DOI DOI 10.1145/775047.775053
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Yule GU, 1912, J R STAT SOC, V75, P579, DOI 10.2307/2340126
   Yule GU, 1900, PHILOS T R SOC LOND, V194, P257, DOI 10.1098/rsta.1900.0019
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
NR 69
TC 65
Z9 81
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2014
VL 26
IS 2
BP 172
EP 219
DI 10.1002/smr.1616
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA5IJ
UT WOS:000331129000002
OA Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Janes, A
   Remencius, T
   Sillitti, A
   Succi, G
AF Janes, Andrea
   Remencius, Tadas
   Sillitti, Alberto
   Succi, Giancarlo
TI Managing changes in requirements: an empirical investigation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE requirements; empirical investigation; management
AB This paper describes the challenges of handling changing requirements in software companies. This empirical investigation deals with the different sources of changes and with the different approaches to requirements evolution. We have considered the point of view of 35 managers of software companies interviewed through a questionnaire. The final results highlight some areas to improve requirements engineering and requirements management. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Janes, Andrea; Remencius, Tadas; Sillitti, Alberto; Succi, Giancarlo] Free Univ Bolzano, Bolzano, Italy.
C3 Free University of Bozen-Bolzano
RP Sillitti, A (corresponding author), Free Univ Bolzano, Piazza Domenicani 3, Bolzano, Italy.
EM Alberto.Sillitti@unibz.it
RI Janes, Andrea/IVV-0008-2023; Janes, Andrea/B-5388-2015; Succi,
   Giancarlo/AAZ-2354-2020
OI Janes, Andrea/0000-0002-1423-6773; Janes, Andrea/0000-0002-1423-6773;
   Succi, Giancarlo/0000-0001-8847-0186
CR [Anonymous], 1 WESTM C PROF AW SO
   [Anonymous], 1988, NONPARAMETRIC STAT
   Basili V. R., 1992, CSTR2956 U MAR
   Berry D. M., 2002, P INN SOFTW SYST ENG
   Brooks F.P., 1987, IEEE Computer, V20
   BYRD T. A, 1992, MIS Q
   Coman I., 2009, INT J COMPUTERS APPL, V31
   Coman I. D., 2008, 16 IEEE INT C PROGR
   Converse J.M., 1986, Survey questions: Handcrafting the standardized questionnaire
   Cook D. A., 2002, REQUIREMENTS RISKS C
   Corral L., 2012, 50 INT C OBJ MOD COM
   Curtis B., 1988, COMMUNICATION ACM, V31
   di Bella E, 2013, INFORM SCIENCES, V221, P72, DOI 10.1016/j.ins.2012.09.031
   Emam K., 1995, P 2 IEEE S REQ ENG Y
   Fronza I., 2009, 3 INT S EMP SOFTW EN
   Fronza I, 2013, J SYST SOFTWARE, V86, P2, DOI 10.1016/j.jss.2012.06.025
   Goguen J.A., 1993, 1993 P IEEE INT S RE, P152, DOI DOI 10.1109/ISRE.1993.324822
   Grehag A., 2001, 7 INT WORKSH REQ ENG
   HARKER SDP, 1992, CHANGE EVOLUTION REQ
   Highsmith J., 2002, Agile software development ecosystems
   Lubars M., 1993, REV STATE PRACTICE R
   MARBACH G, 1996, RICERCHE MERCATO
   March J. G., 1998, THEORIES CHOICE MAKI, P20
   May L. J., 1998, J DEFENSE SOFTWARE E
   Nuseibeh Bashar., 2000, REQUIREMENTS ENG ROA
   Petrinja E., 2009, 2 EM TRENDS FLOSS RE
   Rezaei A., 2012, METHODOLOGIES TECHNO
   Saiedian H, 2000, INFORM SOFTWARE TECH, V42, P419, DOI 10.1016/S0950-5849(99)00101-9
   Scotto M, 2007, INT J SOFTW ENG KNOW, V17, P231, DOI 10.1142/S0218194007003215
   Sillitti A., 2012, 34 INT C SOFTW ENG I
   Silverman D., 2013, DOING QUALITATIVE RE, DOI DOI 10.3917/DS.293.0349
   Stark G., 1998, EXAMINATION EFFECTS
   Verganti R., 1999, J PRODUCT INNOVATION, V16
NR 33
TC 9
Z9 9
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2013
VL 25
IS 12
BP 1273
EP 1283
DI 10.1002/smr.1602
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 271BG
UT WOS:000328364600003
DA 2024-07-18
ER

PT J
AU Tunkelo, T
   Hameri, AP
   Pigneur, Y
AF Tunkelo, Teemu
   Hameri, Ari-Pekka
   Pigneur, Yves
TI Improving globally distributed software development and support
   processes - A workflow view
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software process improvement; software quality; global software
   engineering
ID QUALITY MANAGEMENT; PROCESS IMPROVEMENT; PROCESS MATURITY; CYCLE TIME;
   PERFORMANCE; IMPLEMENTATION; OPERATIONS; LESSONS; MODEL
AB We propose a new approach and related indicators for globally distributed software support and development based on a 3-year process improvement project in a globally distributed engineering company. The company develops, delivers and supports a complex software system with tailored hardware components and unique end-customer installations. By applying the domain knowledge from operations management on lead time reduction and its multiple benefits to process performance, the workflows of globally distributed software development and multitier support processes were measured and monitored throughout the company. The results show that the global end-to-end process visibility and centrally managed reporting at all levels of the organization catalyzed a change process toward significantly better performance. Due to the new performance indicators based on lead times and their variation with fixed control procedures, the case company was able to report faster bug-fixing cycle times, improved response times and generally better customer satisfaction in its global operations. In all, lead times to implement new features and to respond to customer issues and requests were reduced by 50%. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Tunkelo, Teemu; Hameri, Ari-Pekka; Pigneur, Yves] Univ Lausanne, Fac Business & Econ, Internef, CH-1015 Lausanne, Switzerland.
C3 University of Lausanne
RP Hameri, AP (corresponding author), Univ Lausanne, Fac Business & Econ, Internef, CH-1015 Lausanne, Switzerland.
EM ahameri@unil.ch
CR Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 1982, Quality, productivity, and competitive position
   [Anonymous], 1979, ACTION SCI
   Baddoo N., 2002, Empirical Software Engineering, V7, P93, DOI 10.1023/A:1015203013834
   Bartezzaghi E., 1994, International Journal of Operations & Production Management, V14, P5, DOI 10.1108/01443579410056768
   Bharadwaj AS, 2000, MIS QUART, V24, P169, DOI 10.2307/3250983
   Boutellier R, 1998, R&D MANAGE, V28, P13, DOI 10.1111/1467-9310.00077
   Caldwell B., 2002, OUTSOURCING COST RED
   Cataldo M, 2012, J SOFTW-EVOL PROC, V24, P153, DOI 10.1002/smr.477
   Cavaye ALM, 1996, INFORM SYST J, V6, P227, DOI 10.1111/j.1365-2575.1996.tb00015.x
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Coghlan D., 2001, DOING ACTION RES YOU
   da Silva FQB, 2012, J SOFTW-EVOL PROC, V24, P625, DOI 10.1002/smr.563
   Edgell J., 2008, INT J, V1, P173
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Gummesson E., 1991, QUALITATIVE METHODS
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   Holmström J, 2009, DECISION SCI, V40, P65, DOI 10.1111/j.1540-5915.2008.00221.x
   Issac G, 2006, SOFTWARE QUAL J, V14, P291, DOI 10.1007/s11219-006-0037-2
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Jalote P., 2000, CMM PRACTICE PROCESS
   Kettinger WJ, 1997, MIS QUART, V21, P55, DOI 10.2307/249742
   Kuechler William, 2008, Journal of Design Research, V7, P1, DOI 10.1504/JDR.2008.019897
   Kueng P, 2000, TOTAL QUAL MANAGE, V11, P67, DOI 10.1080/0954412007035
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   McDermid J. A., 1999, IEE Proceedings-Software, V146, P179, DOI 10.1049/ip-sen:19990618
   Meijboom B, 2002, INT J OPER PROD MAN, V22, P824, DOI 10.1108/01443570210436163
   Moses J, 2009, SOFTWARE QUAL J, V17, P203, DOI 10.1007/s11219-008-9071-6
   Myers MD, 1997, MIS QUART, V21, P241, DOI 10.2307/249422
   Napier Nannette P., 2008, Software Process: Improvement and Practice, V13, P64, DOI 10.1002/spip.390
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Piri A, 2012, J SOFTW-EVOL PROC, V24, P185, DOI 10.1002/smr.476
   Prikladnicki R, 2012, J SOFTW-EVOL PROC, V24, P119, DOI 10.1002/smr.475
   Raffo DM, 2005, INFORM SOFTWARE TECH, V47, P1009, DOI 10.1016/j.infsof.2005.09.004
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Ravichandran T, 1999, J MANAGE INFORM SYST, V16, P119, DOI 10.1080/07421222.1999.11518259
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sambamurthy V, 1999, MIS QUART, V23, P261, DOI 10.2307/249754
   Schmenner RW, 2001, PROD OPER MANAG, V10, P87
   Sein MK, 2011, MIS QUART, V35, P37
   Siakas K. V., 2006, Software Process Improvement and Practice, V11, P319, DOI 10.1002/spip.275
   Smite D, 2012, J SOFTW-EVOL PROC, V24, P605, DOI 10.1002/smr.550
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Sousa R, 2009, INT J OPER PROD MAN, V29, P834, DOI 10.1108/01443570910977715
   Stuart I, 2002, J OPER MANAG, V20, P419, DOI 10.1016/S0272-6963(02)00022-0
   Subramanian GH, 2007, J SYST SOFTWARE, V80, P616, DOI 10.1016/j.jss.2006.06.014
   Taxén L, 2006, INFORM SOFTWARE TECH, V48, P767, DOI 10.1016/j.infsof.2006.01.007
   Vitharana P, 2008, INF RESOUR MANAG J, V21, P18, DOI 10.4018/irmj.2008040102
   Watson RT, 1998, MIS QUART, V22, P61, DOI 10.2307/249678
   Whiston S.C., 1993, J CAREER DEV, V19, P175
   Wilson DN, 1998, SOFTWARE QUAL J, V7, P67, DOI 10.1023/B:SQJO.0000042060.88173.fe
   Yang YH, 2001, IND MANAGE DATA SYST, V101, P329, DOI 10.1108/EUM0000000005821
NR 54
TC 4
Z9 5
U1 0
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2013
VL 25
IS 12
BP 1305
EP 1324
DI 10.1002/smr.1604
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 271BG
UT WOS:000328364600005
OA Green Published
DA 2024-07-18
ER

PT J
AU Qusef, A
   Bavota, G
   Oliveto, R
   De Lucia, A
   Binkley, D
AF Qusef, Abdallah
   Bavota, Gabriele
   Oliveto, Rocco
   De Lucia, Andrea
   Binkley, David
TI Evaluating test-to-code traceability recovery methods through controlled
   experiments
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE traceability recovery; slicing; conceptual coupling; empirical studies
ID SCENARIO-DRIVEN APPROACH; LINKS
AB Recently, different methods and tools have been proposed to automate or semi-automate test-to-code traceability recovery. Among these, Slicing and Coupling based Test to Code trace Hunter (SCOTCH) exploits slicing and conceptual coupling to identify the classes tested by a JUnit test. However, until now the evaluation of test-to-code traceability recovery methods has been limited to experiments assessing their tracing accuracy rather than the actual support these methods provide to a software engineer during traceability recovery tasks. Indeed, a research method or tool has a better chance of being transferred to practitioners if it is supported by empirical evidence. In this paper, we present the results of two controlled experiments carried out to evaluate the support given by SCOTCH during traceability recovery, when compared with other traceability recovery methods. The results show that SCOTCH is able to suggest a higher number of correct links with higher accuracy, thus sensibly improving the performances of software engineers during test-to-code traceability recovery tasks. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Qusef, Abdallah; Bavota, Gabriele; De Lucia, Andrea] Univ Salerno, I-84084 Fisciano Sa, Italy.
   [Oliveto, Rocco] Univ Molise, I-86090 Pesche Is, Italy.
   [Binkley, David] Loyola Univ Maryland, Baltimore, MD USA.
C3 University of Salerno; University of Molise; Loyola University Maryland
RP Oliveto, R (corresponding author), Univ Molise, I-86090 Pesche Is, Italy.
EM rocco.oliveto@unimol.it
RI De Lucia, Andrea/AAG-6781-2020
OI BAVOTA, Gabriele/0000-0002-2216-3148; De Lucia,
   Andrea/0000-0002-4238-1425; Qusef, Abdallah/0000-0003-4769-6992
FU NSF [CCF 0916081]
FX We are very grateful to Annibale Panichella of the University of
   Salerno, Italy, for his valuable support during the execution of the
   experiment at the University of Salerno. Special thanks go to the
   students who were involved in the two experiments as subjects. We would
   also like to thank anonymous reviewers for their careful reading of our
   manuscript and useful comments. Their comments have helped us to
   substantially revise, extend, and improve the original version of this
   paper. Finally, Dave Binkley is supported by NSF grant CCF 0916081.
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   [Anonymous], PRACTICAL NONPARAMET
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, PROG COMPREHEN, P79, DOI 10.1109/WPC.2000.852482
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Basili V., 1994, The Goal Question Metric Approach, P528
   Bavota G, 2012, P 28 IEEE I IN PRESS
   Beck K, 1998, JAVA REP, V3, P37
   Boogerd C, 2008, PROC IEEE INT CONF S, P277, DOI 10.1109/ICSM.2008.4658076
   Bouillon P, 2007, LECT NOTES COMPUT SC, V4536, P101
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   De Lucia Andrea, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P39, DOI 10.1109/ASE.2008.14
   De Lucia A., 2012, INFORM RETRIEVAL MET, P71
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   DELUCIA A, 2004, P 16 INT C SOFTW ENG, P31
   Devore J., 1999, APPL STAT ENG SCI
   Egyed A, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P163, DOI 10.1109/ASE.2002.1115010
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   Egyed A, 2001, PROC INT CONF SOFTW, P123, DOI 10.1109/ICSE.2001.919087
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Hayes JH, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P26, DOI 10.1109/TEFSE.2009.5069579
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   KOREL B, 1990, J SYST SOFTWARE, V13, P187, DOI 10.1016/0164-1212(90)90094-3
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Qusef A., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P63, DOI 10.1109/ICSM.2011.6080773
   Qusef A, 2010, PROC IEEE INT CONF S
   RAGHAVAN SA, 1989, IEEE SOFTWARE, V6, P81, DOI 10.1109/52.31655
   Redwine S. T.  Jr., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P189
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   RYDER BG, 1979, IEEE T SOFTWARE ENG, V5, P216, DOI 10.1109/TSE.1979.234183
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Sneed HM, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P69, DOI 10.1109/CSMR.2004.1281407
   Van Deursen A., 2002, PROC 3 INT C EXTREME, P71
   Van Deursen A, 2001, TECHNICAL REPORT
   Van Rompaey B., 2009, THESIS U ANTWERP
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2009.39
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   ZELKOWITZ M, 2003, SE EMPIRICAL VALIDAT, pCH12
   Ziftci Celal, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P472, DOI 10.1109/ASE.2011.6100102
   Zisman A., 2012, SOFTWARE SYSTEMS TRA, P147, DOI DOI 10.1007/978-1-4471-2239-57
NR 49
TC 13
Z9 17
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2013
VL 25
IS 11
SI SI
BP 1167
EP 1191
DI 10.1002/smr.1573
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 272IG
UT WOS:000328453100003
DA 2024-07-18
ER

PT J
AU Clarke, P
   O'Connor, RV
AF Clarke, Paul
   O'Connor, Rory V.
TI An empirical examination of the extent of software process improvement
   in software SMEs
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software process; software process improvement; empirical study;
   software SMEs
ID ORGANIZATIONS; EXPERIENCE; SCORECARD; CMMI
AB Although earlier studies revealed much about software process improvement (SPI) in software small- to medium-sized enterprises (SMEs), no earlier research set out to determine the full extent of SPI being implemented in software SMEs. Therefore, this study was designed from the outset to elicit all instances of SPI, which we term SPI events - no matter how small or informal. We make the important new discovery that SMEs initiate a considerable amount of SPI, albeit in varying quantities in different organisations. No earlier study reported that the practice of SPI was so widespread in software SMEs, and this is perhaps related to the extensive scope of the enquiry adopted in this study. Our study also finds that the significant majority of SPI in software SMEs is minor or moderate in nature, sometimes leveraging the human capital via improvements in tacit knowledge. Software development is an intrinsically human intensive activity, and it therefore follows that the maximisation of the human capital in an organisation is a source of competitive advantage. However, contemporary process maturity frameworks and quality management standards do not fully exploit the capacity of human capital and may therefore diminish rather than improve the competitive advantage of software SMEs. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Clarke, Paul] Dublin City Univ, Lero Grad Sch Software Engn, Dublin 9, Ireland.
   [O'Connor, Rory V.] Dublin City Univ, Dublin 9, Ireland.
   [O'Connor, Rory V.] Lero, Irish Software Engn Res Ctr, Limerick, Ireland.
C3 Dublin City University; Dublin City University; University of Limerick
RP Clarke, P (corresponding author), Dublin City Univ, Sch Comp, Dublin 9, Ireland.
EM pclarke@computing.dcu.ie
RI Clarke, Paul/JAX-9606-2023
OI Clarke, Paul/0000-0002-4487-627X; O'Connor, Rory/0000-0001-9253-0313
FU Science Foundation Ireland [10/CE/I1855]
FX This work was supported, in part, by Science Foundation Ireland grant
   10/CE/I1855 to Lero - the Irish Software Engineering Research Centre
   (www.lero.ie).
CR [Anonymous], W ELECT SHOW CONVENT
   [Anonymous], 2017, 122072017 ISOIECIEEE
   [Anonymous], 2003, Official Journal of the European Union L, VL124, P36
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Basri S, 2011, COMM COM INF SC, V172, P143
   Biro M., 2000, Software Process Improvement and Practice, V5, P213, DOI 10.1002/1099-1670(200012)5:4<213::AID-SPIP129>3.0.CO;2-0
   Boehm B., 2003, BALANCING AGILITY DI
   Cater-Steel A., 2008, SOFTWARE PROCESS IMP
   Clarke P, 2012, COMM COM INF SC, V290, P62
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Clarke P, 2010, COMM COM INF SC, V99, P25
   Coleman G, 2008, J SYST SOFTWARE, V81, P772, DOI 10.1016/j.jss.2007.07.027
   Colla PE, 2008, LECT NOTES COMPUT SC, V5007, P36, DOI 10.1007/978-3-540-79588-9_5
   Dangle KC, 2005, IEEE SOFTWARE, V22, P68, DOI 10.1109/MS.2005.162
   Ferreira AIF, 2007, PUBLICATION SERIES S, P1227
   Fleck D., 2004, P 22 ANN PAC NW SOFT, P107
   Fowler M., 2001, Software Development, V9, P28
   Fuller A., 2001, FACTORS ENABLE INHIB
   Habra N, 2008, INFORM SOFTWARE TECH, V50, P763, DOI 10.1016/j.infsof.2007.08.004
   Huang W, 2010, INT J AUTOM COMPUT, V7, P389, DOI 10.1007/s11633-010-0519-3
   Humphrey W S, 1995, A discipline for software engineering
   IEEE, 2004, GUID SOFTW ENG BOOK
   KAPLAN RS, 1992, HARVARD BUS REV, V70, P71
   Keane B, 2005, LECT NOTES COMPUT SC, V3792, P49
   Mc Caffery F, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.3
   Montoni M, 2007, LECT NOTES COMPUT SC, V4764, P175
   Moore J. W., 1998, Sixteenth Annual Pacific Northwest Software Quality Conference Joint ASQ Software Division's Eighth International Conference on Software Quality, P326
   Niazi M, 2008, LECT NOTES COMPUT SC, V5089, P427, DOI 10.1007/978-3-540-69566-0_34
   Niazi M, 2009, INFORM SOFTWARE TECH, V51, P1231, DOI 10.1016/j.infsof.2009.03.001
   Nikitina N, 2010, COMM COM INF SC, V99, P189
   O'Connor RV, 2009, AUSTRALAS J INF SYST, V16, P7
   Oktaba H, 2007, COMPUTER, V40, P21, DOI 10.1109/MC.2007.361
   Poulin L. A, 2007, IEEE CANADIAN REV, V56, P23
   Richardson I., 2001, Software Process Improvement and Practice, V6, P157, DOI 10.1002/spip.144
   Ryan S, 2009, J SYST SOFTWARE, V82, P229, DOI 10.1016/j.jss.2008.05.037
   Sanders Marty, 2007, Software Process Improvement and Practice, V12, P351, DOI 10.1002/spip.319
   Sanders M., 1998, SPIRE HDB BETTER FAS
   SEI, 2006, CMUSEI2006TR008
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Sureshchandar GS, 2005, MEAS BUS EXCELL, V9, P12, DOI 10.1108/13683040510602849
   Tilley T, 2005, LNCS
   von Wangenheim CG, 2006, IEEE SOFTWARE, V23, P91, DOI 10.1109/MS.2006.13
   Wilkie F. G., 2005, Software Process Improvement and Practice, V10, P189, DOI 10.1002/spip.223
NR 43
TC 26
Z9 29
U1 3
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2013
VL 25
IS 9
BP 981
EP 998
DI 10.1002/smr.1580
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 213WU
UT WOS:000324092000005
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Reimanis, D
   Izurieta, C
AF Reimanis, Derek
   Izurieta, Clemente
TI A study of behavioral decay in design patterns
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE software design; software engineering; software evolution; software
   maintenance; software quality
ID STATIC ANALYSIS; QUALITY
AB Design patterns represent a means of communicating reusable solutions to common problems, provided they are implemented and maintained correctly. However, many design pattern instances erode as they age, sacrificing qualities they once provided. Identifying such instances of pattern decay is valuable because it allows for proactive attempts to extend the longevity and quality attributes of pattern components. Apart from structural decay, design patterns can exhibit symptoms of behavioral decay. We utilized a taxonomy that characterizes these negative behaviors and designed a case study wherein we measured structural and behavioral decay, hereafter referred to as pattern grime, as well as pattern quality and size, across pattern evolutions. We evaluated the relationships between structural and behavioral grime and found statistically significant cases of strong correlations between specific types of structural and behavioral grime. Furthermore, we extended the QATCH operational software quality model to incorporate design pattern evolution metrics and measured and correlated software quality to the presence of behavioral grime in software systems. Our results suggest a strong inverse relationship between software quality and behavioral grime.
   Design patterns may exhibit symptoms of behavioral decay, wherein improper behavioral extensions of the pattern negatively affect the quality of the software. We validate types of behavioral decay found from real-world pattern instances and evaluate the relationship between behavioral decay and each of structural decay, size, and system quality. We found a strong inverse relationship between system quality and behavioral decay, concluding that behavioral decay offers new insight into pattern evolution. image
C1 [Reimanis, Derek; Izurieta, Clemente] Montana State Univ, Gianforte Sch Comp, Bozeman, MT USA.
   [Izurieta, Clemente] Idaho Natl Labs, Joint Appointment Idaho Natl Labs, Idaho Falls, ID USA.
   [Reimanis, Derek] Montana State Univ, Gianforte Sch Comp, Bozeman, MT 59718 USA.
C3 Montana State University System; Montana State University Bozeman;
   United States Department of Energy (DOE); Idaho National Laboratory;
   Montana State University System; Montana State University Bozeman
RP Reimanis, D (corresponding author), Montana State Univ, Gianforte Sch Comp, Bozeman, MT 59718 USA.
EM derekreimanis@montana.edu
OI Reimanis, Derek/0000-0002-0747-0457
CR Ammann Paul, 2008, Introduction to software testing, V1st
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Bonett DG, 2000, PSYCHOMETRIKA, V65, P23, DOI 10.1007/BF02294183
   Collard ML., 2005, Addressing source code using srcML
   deNormalizaci??n OI., 2011, 250102011 ISOIEC
   Eden AH., 2002, LePUS: a visual formalism for object-oriented architectures, P26
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Feitosa D, 2018, IEEE ACCESS, V6, P23065, DOI 10.1109/ACCESS.2018.2829895
   Feitosa D, 2017, LECT NOTES COMPUT SC, V10611, P165, DOI 10.1007/978-3-319-69926-4_13
   France R., 2002, Metarole-based modeling language (RBML) specification v1. 0
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Griffith I., 2014, Design pattern decay: the case for class grime, P39
   Hassaine S, 2012, EUR CON SFTWR MTNCE, P267, DOI 10.1109/CSMR.2012.34
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Izurieta Clemente, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P171, DOI 10.1109/ICST.2008.27
   Izurieta Clemente, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P449
   Izurieta C., 2019, Structural and behavioral taxonomies of design pattern grime, P8
   Izurieta C., 2009, Decay and Grime Buildup in Evolving Object Oriented Design Patterns
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kim D., 2004, A Meta-Modeling Approach to Specifying Patterns
   Kim DK, 2008, SOFTWARE QUAL J, V16, P329, DOI 10.1007/s11219-008-9048-5
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Lauder A., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P114, DOI 10.1007/BFb0054089
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   Lu LJ, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P127, DOI 10.1109/ICECCS.2011.20
   Maplesden D., 2007, Design pattern formalization techniques, P20
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   McNatt WB, 2001, P INT COMP SOFTW APP, P574, DOI 10.1109/CMPSAC.2001.960670
   Reimanis D, 2019, LECT NOTES COMPUT SC, V11602, P77, DOI 10.1007/978-3-030-22888-0_6
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Schanz T., 2010, Object oriented design pattern decay: a taxonomy, P7
   Sefika M, 1996, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.1996.493433
   Siavvas MG, 2017, EXPERT SYST APPL, V86, P350, DOI 10.1016/j.eswa.2017.05.060
   Spinellis D, 2005, IEEE SOFTWARE, V22, P9, DOI 10.1109/MS.2005.111
   Strasser S., 2011, An automated software tool for validating design patterns
   Taibi T., 2003, Journal of Object Technology, V2, P127
   Taibi Toufik., 2007, Design Pattern Formalization Techniques
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Wagner S, 2012, PROC INT CONF SOFTW, P1133, DOI 10.1109/ICSE.2012.6227106
NR 42
TC 0
Z9 0
U1 3
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 NOV 21
PY 2023
DI 10.1002/smr.2638
EA NOV 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y5TG4
UT WOS:001105874600001
DA 2024-07-18
ER

PT J
AU Hu, TY
   Li, JY
   Xu, XF
   Li, BX
AF Hu, Tianyuan
   Li, Jingyue
   Xu, Xiangfei
   Li, Bixin
TI SoliTester: Detecting exploitable external-risky vulnerability in smart
   contracts using contract account triggering method
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE agent contract; code analysis; dynamic testing; smart contract;
   vulnerability detection
AB The vulnerability in smart contracts (SCs) on the blockchain system may lead to severe security compromises. The SC can be invoked from an externally owned account (EOA) or a contract account (CA). The account a user creates to receive or send ether is an EOA. A CA contains codes that can interact with SCs. In Solidity SC, some vulnerabilities can only be exploited by the interactions between CAs and vulnerable SCs, which can be named external-risky vulnerabilities. Most state-of-the-art (SOTA) detectors detect external-risky vulnerabilities by executing contract codes as an EOA user, thus reporting many unexploitable vulnerabilities. Therefore, we propose a CA-triggering method to identify exploitable external-risky vulnerabilities in Solidity SCs. We first designed agent contracts to simulate CAs' interactions with the target SCs in the real blockchain environment. We then detect vulnerability exploitation by analyzing transaction logs between agent contracts and target SCs and identifying successful exploits. We implemented the CA-triggering method in a tool named SoliTester and evaluated it using three benchmark datasets, which contain three types of external-risky vulnerabilities, namely, Reentancy (RE), Unchecked Call (UcC), and TxOrigin (TO). The results show that SoliTester can efficiently detect exploitable external-risky vulnerabilities with significantly better precisions and recalls than SOTA detectors.
   We propose a contract account triggering method to detect exploitable external-risky vulnerabilities in Solidity smart contracts. We designed agent contracts to simulate contract accounts' interactions with the target smart contract in the real blockchain environment. We then analyze transaction logs to identify successful vulnerability exploitation. A tool named SoliTester was implemented based on this method.
C1 [Hu, Tianyuan; Xu, Xiangfei; Li, Bixin] Southeast Univ, Sch Comp Sci & Engn, Nanjing, Peoples R China.
   [Li, Jingyue] Norwegian Univ Sci & Technol, Dept Comp Sci, Trondheim, Norway.
C3 Southeast University - China; Norwegian University of Science &
   Technology (NTNU)
RP Li, BX (corresponding author), Southeast Univ, Sch Comp Sci & Engn, Nanjing, Peoples R China.
EM bx.li@seu.edu.cn
RI Li, Bixin/AAM-1176-2020
OI Hu, Tianyuan/0000-0002-5431-9346
FU This work was supported in part by the Key Research and Development
   Program of Jiangsu Province under grant BE2021002-3, in part by the
   Research Council of Norway under grant 309494, and in part by the
   National Key Research and Development Program of China [BE2021002-3];
   Key Research and Development Program of Jiangsu Province [309494];
   Research Council of Norway [2019YFE0105500]; National Key Research and
   Development Program of China
FX This work was supported in part by the Key Research and Development
   Program of Jiangsu Province under grant BE2021002-3, in part by the
   Research Council of Norway under grant 309494, and in part by the
   National Key Research and Development Program of China under grant
   2019YFE0105500.
CR [Anonymous], 2019, Manticore: a symbolic execution tool for analysis of smart contracts and binaries
   [Anonymous], 2020, Smart contract weakness classification and test cases.
   Antonopoulos Andreas M, 2018, Mastering Ethereum: Building Smart Contracts and DApps
   Chinen Y, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2020), P327, DOI 10.1109/Blockchain50366.2020.00048
   Choi J, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P227, DOI 10.1109/ASE51524.2021.9678888
   ConsenSys, 2018, MYTHR OP SOURC SEC A
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Feist J., 2019, Slither: a static analysis framework for smart contracts, P8
   Ferreira JF, 2020, IEEE INT CONF AUTOM, P1349, DOI 10.1145/3324884.3415298
   Ferreira Torres C., 2021, Confuzzius: a data dependency-aware hybrid fuzzer for smart contracts
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   Hu T., 2023, Why smart contracts reported as vulnerable were not exploited?
   Hu Tianyuan, 2023, IEEE Trans. Rel.
   Ivanov N, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3593293
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Liu C., 2018, Reguard: finding reentrancy bugs in smart contracts, P65
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Nikolic I., 2018, Finding the greedy, prodigal, and suicidal contracts at scale, P653, DOI 10.1145/3274694.3274743
   Perez D, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1325
   Ren M, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P566, DOI 10.1145/3460319.3464837
   Tikhomirov S., 2018, Smartcheck: Static analysis of ethereum smart contracts, P9
   Tolmach P, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3464421
   Torres CF., 2018, Osiris: Hunting for integer bugs in ethereum smart contracts, P664
   Torres CF, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1591
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Wang HJ, 2022, IEEE T DEPEND SECURE, V19, P1795, DOI 10.1109/TDSC.2020.3037332
   Xue YX, 2024, IEEE T DEPEND SECURE, V21, P515, DOI 10.1109/TDSC.2022.3182373
   Xue YX, 2020, IEEE INT CONF AUTOM, P1029, DOI 10.1145/3324884.3416553
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Zhang QZ, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P116, DOI [10.1109/saner48275.2020.9054822, 10.1109/SANER48275.2020.9054822]
   Zheng Z., 2023, Turn the rudder: a beacon of reentrancy detection for smart contracts on ethereum, P295
NR 33
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 NOV 10
PY 2023
DI 10.1002/smr.2633
EA NOV 2023
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X6PZ8
UT WOS:001099662300001
DA 2024-07-18
ER

PT J
AU Ersoy, E
   Çalli, E
   Erdogan, B
   Bagriyanik, S
   Sözer, H
AF Ersoy, Ersin
   Calli, Engin
   Erdogan, Batuhan
   Bagriyanik, Selami
   Sozer, Hasan
TI A longitudinal case study on Nexus transformation: Impact on
   productivity, quality, and motivation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile software development; industrial case study; Nexus; scaled agile
   transformation; software development process
AB There have been success stories reported regarding the adoption of agile software development methods in the industry. There also exist observations on their limitations. One of these limitations is scalability since agile methods like Scrum were originally designed for small software teams. Scalable agile frameworks were introduced to address this limitation. We conducted an industrial case study on the adoption of such a framework, called Nexus. Our study involves quantitative and qualitative evaluation based on observations within a product development organization over a period of 12 months. Scrum is used for the development of a product during the first 6 months of this period. Nexus is used in the remaining 6 months. Data are collected throughout the whole period for measuring productivity, quality, and team member motivation. Results suggest a significant increase in productivity and product quality after switching to Nexus. Team motivation was slightly improved as well.
   An industrial case study is conducted for 12 months, where Scrum is used during the first 6 months and Nexus is used in the remaining 6 months. A significant increase in productivity and product quality is observed after Nexus transformation, while slight improvement is observed in team motivation as well. image
C1 [Ersoy, Ersin; Erdogan, Batuhan] Turkiye, Paycell, Istanbul, Turkiye.
   [Calli, Engin] Logo Yazilim, Kocaeli, Turkiye.
   [Bagriyanik, Selami] Istanbul Topkapi Univ, Dept Comp Engn, Istanbul, Turkiye.
   [Bagriyanik, Selami] Singular Software Technol, Istanbul, Turkiye.
   [Sozer, Hasan] Ozyegin Univ, Dept Comp Sci, Istanbul, Turkiye.
C3 Istanbul Topkapi University; Ozyegin University
RP Ersoy, E (corresponding author), Turkiye, Paycell, Istanbul, Turkiye.
EM ersin.ersoy@turkcell.com.tr
RI ; Sozer, Hasan/A-4722-2015
OI Ersoy, Ersin/0000-0002-6100-9514; Sozer, Hasan/0000-0002-2968-4763;
   Bagriyanik, Selami/0000-0002-5561-4283
CR Almeida F., 2021, J. Appl. Sci. Manag. Eng. Technol., V2, P16
   Alqudah M., 2016, International Journal on Advanced Science, Engineering and Information Technology, V6, P1, DOI [DOI 10.18517/IJASEIT.6.6.1374, 10.18517/IJASEIT.6.6.1374]
   Anderson DJ., 2018, KANBAN MATURITY MODE
   [Anonymous], ATL JIR ISS PROJ TRA
   [Anonymous], COMMON SOFTWARE MEAS
   [Anonymous], ?About us"
   Astels David., 2002, PRACTICAL GUIDE EXTR
   Bagriyanik S., 2015, GLOBAL J TECHNOL, V7, P98
   Bagriyanik S, 2016, INFORM SOFTWARE TECH, V72, P189, DOI 10.1016/j.infsof.2015.12.011
   BAUMEISTER RF, 1995, PSYCHOL BULL, V117, P497, DOI 10.1037/0033-2909.117.3.497
   Beck K., PRINCIPLES AGILE MAN
   Bittner K., 2017, The Nexus Framework for scaling Scrum: Continuously Delivering an integrated product with multiple Scrum teams
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Crocker R, 2004, LECT NOTES COMPUT SC, V3134, P231
   Deveci A., 2018, TURK NAT SOFTW ENG S
   Diebold P, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234177
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Ersoy E., 2019, 6 INT MAN INF SYST C, P186
   Ertaban C., 2018, P 19 INT C AG SOFTW, P1
   Ertaban C., 2017, CEUR WORKSHOP P
   Firat P., 2018, AFR J BUS MANAGE, V12, P154
   Fowler M., 2001, Software Development, V9, P28
   Ghosh G. K., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), DOI 10.1109/ICGSE.2012.46
   Hacaloglu T., 2019, TURK NAT SOFTW ENG S
   Hacaloglu T, 2019, EUROMICRO CONF PROC, P204, DOI 10.1109/SEAA.2019.00041
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hunt John., 2006, Agile Software Construction, P161
   Joskowski A, 2023, SOFTWARE PRACT EXPER, V53, P1525, DOI 10.1002/spe.3201
   Kalenda M., 2017, THESIS BRNO
   Kalenda M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1954
   Kaur A, 2022, J KING SAUD UNIV-COM, V34, P946, DOI 10.1016/j.jksuci.2019.03.001
   Leffingwell D., 2018, SAFE 4 5 REFERENCE G
   m.Breyter, 2022, AGILE PRODUCT PROJEC
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Maximini D., 2018, SCRUM CULTURE
   Melo C., 2011, Proceedings of the 2011 Agile Conference, P57, DOI 10.1109/AGILE.2011.35
   Mills A.J., 2010, Encyclopedia of case study research
   Paasivaara M, 2012, INT SYMP EMP SOFTWAR, P235, DOI 10.1145/2372251.2372294
   Puschmann T, 2017, BUS INFORM SYST ENG+, V59, P69, DOI 10.1007/s12599-017-0464-6
   Ratner I. M., 2011, Proceedings of the 2011 Agile Conference, P240, DOI 10.1109/AGILE.2011.46
   Sakhrawi Z, 2022, INNOV SYST SOFTW ENG, V18, P137, DOI 10.1007/s11334-021-00420-8
   Salm M, 2017, CONTRIB ECON, P41, DOI 10.1007/978-3-319-62671-0_3
   Salmanoglu M., 2015, 25 INT WORKSH SOFTW
   Schwaber K., 2015, Nexus guide. The definitive guide to Nexus: The exoskeleton of scaled Scrum development
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Sutherland J., 1995, OOPSL C AUST TEX
   TAKEUCHI H, 1986, HARVARD BUS REV, V64, P137
   Theobald S, 2019, LECT NOTES BUS INF P, V364, P88, DOI 10.1007/978-3-030-30126-2_11
   Trudel S., 2010, P INT WORKSH SOFTW M, P47
   Uludag Ö, 2021, LECT NOTES BUS INF P, V419, P123, DOI 10.1007/978-3-030-78098-2_8
   Vallon R, 2013, LECT NOTES BUS INF P, V149, P150
   Vijayasarathy LR, 2016, IEEE SOFTWARE, V33, P86, DOI 10.1109/MS.2015.26
   Winska E., 2020, Data-Centric Business and Applications, P101, DOI DOI 10.1007/978-3-030-34706-2_6
   Yau A., 2013, IS RIGOROUS AGILE ME
   Yue S, 2002, WATER RESOUR RES, V38, DOI 10.1029/2001WR000861
NR 55
TC 0
Z9 0
U1 2
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2024
VL 36
IS 5
DI 10.1002/smr.2615
EA SEP 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PW3G9
UT WOS:001061342700001
DA 2024-07-18
ER

PT J
AU Lucas, W
   Carvalho, F
   Nunes, RC
   Bonifácio, R
   Saraiva, J
   Accioly, P
AF Lucas, Walter
   Carvalho, Fausto
   Nunes, Rafael Campos
   Bonifacio, Rodrigo
   Saraiva, Joao
   Accioly, Paola
TI Embracing modern C plus plus features: An empirical assessment on the
   KDE community
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE C plus plus programming language; language evolution; software
   rejuvenation
AB Similar to software systems, programming languages evolve substantially over time. Indeed, the community has more recently seen the release of new versions of mainstream languages in shorter and shorter time frames. For instance, the C++ working group has begun to release a new version of the language every 3 years, which now has a greater number of modern C++ features and improvements in modern standards (C++11, C++14, C++17, and C++ 20). Nonetheless, there is little empirical evidence on how developers are transitioning to use modern C++ constructs in legacy systems, and not understanding the trends and reasons for adopting these new modern C++ features might hinder software developers in conducting rejuvenation efforts. In this paper, we conduct an in-depth study to understand the development practices of KDE contributors to evolve their projects toward the use of modern C++ features. Our results show a trend in the widespread adoption of some modern C++ features (lambda expressions, auto-typed variables, and range-based for) in KDE community projects. We also found that developers in the KDE community are making large efforts to modernize their programs using automated tools, and we present some modernization scenarios and the benefits of adopting modern C++ features of the C++ programming language. Our results might help C++ software developers, in general, to evolve C++ legacy systems and tools builders to implement more effective tools that could help in rejuvenation efforts.
C1 [Lucas, Walter; Carvalho, Fausto; Nunes, Rafael Campos; Bonifacio, Rodrigo] Univ Brasilia, Comp Sci Dept, Brasilia, Brazil.
   [Saraiva, Joao] Univ Minho, Braga, Portugal.
   [Accioly, Paola] Fed Univ Cariri, Juazeiro Do Norte, Brazil.
C3 Universidade de Brasilia; Universidade do Minho; Universidade Federal do
   Cariri
RP Lucas, W (corresponding author), Univ Brasilia, Comp Sci Dept, Brasilia, Brazil.
EM walter.mendonca@aluno.unb.br
RI Bonifacio, Rodrigo/B-3450-2014; Saraiva, Joao/L-6113-2015
OI Accioly, Paola/0000-0002-4428-2543; Campos Nunes,
   Rafael/0000-0003-3769-6171; Silva, Fausto/0000-0002-6622-2330; Saraiva,
   Joao/0000-0002-5686-7151; Bonifacio, Rodrigo/0000-0002-2380-2829; lucas,
   walter/0000-0001-7391-9622
FU FAP-DF; CAPES [07/2019]; Foundation for Science and Technology (FCT)
   [LA/P/0063/2020]; INESC TEC INTERNATIONAL VISITING RESEARCHER PROGRAMME
   [2022 EDITION]
FX FAP-DF; CAPES, Grant/Award Number: 07/2019; Foundation for Science and
   Technology (FCT), Grant/Award Number: LA/P/0063/2020
CR Alqaimi Anwar, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P310, DOI 10.1109/MSR.2019.00057
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   Becker P., 2011, 148822011 ISOIEC
   Bosu A, 2019, INT SYMP EMP SOFTWAR, P295
   Bragagnolo S., 2021, SOFTWARE MIGRATION T
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, P121
   Canedo ED., 2020, P 14 ACM IEEE INT S, DOI [10.1145/3382494.3410682, DOI 10.1145/3382494.3410682]
   Chen L, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3356579
   Dantas R, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P497, DOI 10.1109/SANER.2018.8330247
   de Mendonca WLM., 2020, J SOFTW ENG RES DEV, V8, p7:1, DOI [10.5753/jserd.2020.744, DOI 10.5753/JSERD.2020.744]
   de Winter JCF, 2016, PSYCHOL METHODS, V21, P273, DOI 10.1037/met0000079
   Deitel P., 2022, DEITEL DEV SERIES
   Ferreira M, 2017, INT C PROGRAM COMPRE, P207, DOI 10.1109/ICPC.2017.35
   Järvi J, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P178
   Josuttis NM., 2019, C 17 COMPLETE GUIDE
   Kumar A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P98, DOI 10.1109/ICSM.2012.6405259
   Lucas W, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P187, DOI 10.1145/3350768.3350791
   Mazinanian D, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133909
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meyers S., 2014, EFFECTIVE MODERN C 4
   Myers L., 2004, Encyclopaedia of Statistical Evidence, DOI [DOI 10.1002/0471667196.ESS5050, 10.1002/0471667196.ess5050.pub2, DOI 10.1002/0471667196.ESS5050.PUB2]
   O'Dwyer A., 2017, MASTERING C 17 STL M
   Overbey JL., 2009, P 24 ANN ACM SIGPLAN, P493, DOI [10.1145/1640089.1640127, DOI 10.1145/1640089.1640127]
   Pirkelbauer P, 2010, LECT NOTES COMPUT SC, V5901, P639
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Rajlich V., 2014, Proceedings of the Conference on the Future of Software Engineering, P133, DOI [10.1145/2593882.2593893, DOI 10.1145/2593882.2593893]
   Ricca Filippo, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P337, DOI 10.1007/978-3-642-21843-9_26
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Schaling B., 2014, The Boost C++ Libraries
   Stepanov A., 1995, BYTE
   Stroustrup B., 1997, The C++ Programming Language
   Stroustrup B., 2007, Proceedings of the third ACM SIGPLAN conference on History of programming languages, P4, DOI [10.1145/1238844.1238848, DOI 10.1145/1238844.1238848]
   Stroustrup B, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3386320
   Stroustrup Bjarne, 2013, The C++ programming language
   Uesbeck PM, 2016, PROC INT CONF SOFTW, P760, DOI 10.1145/2884781.2884849
   Zheng MW, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P67, DOI 10.1109/ASE51524.2021.9678600
NR 36
TC 1
Z9 1
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2024
VL 36
IS 5
DI 10.1002/smr.2605
EA AUG 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PW3G9
UT WOS:001040946500001
DA 2024-07-18
ER

PT J
AU Ouellet, A
   Badri, M
AF Ouellet, Alexandre
   Badri, Mourad
TI Combining object-oriented metrics and centrality measures to predict
   faults in object-oriented software: An empirical validation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE centrality measures; cross-version and cross-system validation;
   empirical analysis; fault-proneness prediction; machine learning
   algorithms; object-oriented metrics
ID DEFECT PREDICTION; DESIGN METRICS; NORMALITY; PRONENESS; NUMBER; POWER
AB Many object-oriented metrics have been proposed in the literature to measure various structural properties of object-oriented software. Furthermore, many centrality measures have been introduced to identify central nodes in large networks. However, few studies have used them to measure dependencies in software systems. In fact, centrality measures, as opposed to most traditional object-oriented metrics that mainly focus on intrinsic properties of classes, can be used to better model the control flow and to identify the most important classes in a software system. This paper aims (1) to investigate the relationships between object-oriented metrics and centrality measures and (2) to explore the ability of their combination to support fault-proneness prediction from different perspectives (fault-prone classes, fault severity, and number of faults). Many studies in the literature have addressed the prediction of fault-prone classes, from different perspectives, using object-oriented metrics. The main motivation here is in fact to investigate if the information captured by centrality measures is related to fault proneness and complementary to the information captured by object-oriented metrics and to investigate if the combination of object-oriented metrics and centrality measures improves the performance of fault-proneness prediction significantly. We used size, complexity, and coupling object-oriented metrics in addition to various centrality measures. We collected data from 20 different versions of five open-source Java software systems. We first studied the relationships between selected metrics and their relationships to fault proneness. Then, we built different models to predict fault-prone classes using several machine learning algorithms. In addition, we built models to predict if a class contains a high severity fault, and the number of faults in a class. Results indicate that using centrality measures in combination with object-oriented metrics improves the prediction of fault-prone classes as well as the prediction of the number of faults in a class. However, the combination has no significant impact, according to the data we collected, on the quality of the prediction of fault severity. Moreover, using centrality measures in combination with object-oriented metrics also improves the prediction performance of fault proneness and the number of faults in both cross-version and cross-system validation.
C1 [Ouellet, Alexandre; Badri, Mourad] Univ Quebec Trois Rivieres, Dept Math & Comp Sci, Trois Rivieres, PQ, Canada.
C3 University of Quebec; University of Quebec Trois Rivieres
RP Ouellet, A (corresponding author), Univ Quebec Trois Rivieres, Dept Math & Comp Sci, Trois Rivieres, PQ, Canada.
EM alexandre.ouellet@uqtr.ca
OI Ouellet, Alexandre/0000-0001-7266-3207
CR Abreu F.B., 1994, Proceedings of the 4th international conference on software quality, V186, P1, DOI DOI 10.5281/ZENODO.1217609
   Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Alves TL, 2010, PROC IEEE INT CONF S
   [Anonymous], 2009, PROC ACM INT C PREDI
   [Anonymous], 1988, Applied Regression Analysis and Other Multivariable Methods
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Bird C., 2011, P ACM 2011 C COMP SU, P143, DOI DOI 10.1145/1958824.1958846
   BONACICH P, 1987, AM J SOCIOL, V92, P1170, DOI 10.1086/228631
   Borgatti SP, 2006, SOC NETWORKS, V28, P466, DOI 10.1016/j.socnet.2005.11.005
   Boucher A, 2018, INFORM SOFTWARE TECH, V96, P38, DOI 10.1016/j.infsof.2017.11.005
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Chen DB, 2012, PHYSICA A, V391, P1777, DOI 10.1016/j.physa.2011.09.017
   Chen L, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-015-5426-3
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Choudhary GR, 2018, COMPUT ELECTR ENG, V67, P15, DOI 10.1016/j.compeleceng.2018.02.043
   Concas Giulio, 2010, Advances in Software Engineering, DOI 10.1155/2010/729826
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   Concas G, 2011, IEEE T SOFTWARE ENG, V37, P872, DOI 10.1109/TSE.2011.54
   DAGOSTIN.R, 1973, BIOMETRIKA, V60, P613, DOI 10.1093/biomet/60.3.613
   Dangalchev C, 2006, PHYSICA A, V365, P556, DOI 10.1016/j.physa.2005.12.020
   Elish MO, 2014, ARTIF INTELL REV, V42, P695, DOI 10.1007/s10462-012-9348-9
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fenton Norman E., 1996, Software Metrics A Practical and Rigorous Approach, V2nd
   FREEMAN LC, 1977, SOCIOMETRY, V40, P35, DOI 10.2307/3033543
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hinkle D., 1988, Applied statistics for the behavioral sciences, V5th
   Hollander M., 2014, Nonparametric Statistical Methods, Solutions Manual, Vthird
   Hosmer DW, 2000, APPL LOGISTIC REGRES
   Jiang Y, 2013, INT J SOFTW ENG KNOW, V23, P1399, DOI 10.1142/S0218194013500447
   Jolliffe I.T., 1986, Principal component analysis, DOI DOI 10.1016/0169-7439(87)80084-9
   Joyce KE, 2010, PLOS ONE, V5, DOI 10.1371/journal.pone.0012200
   Jureczko M., 2020, DATA TAR GZ
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kanmani S, 2007, INFORM SOFTWARE TECH, V49, P483, DOI 10.1016/j.infsof.2006.07.005
   Kaur A, 2018, J KING SAUD UNIV-COM, V30, P2, DOI 10.1016/j.jksuci.2016.04.002
   Kaur A, 2008, 2008 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER THEORY AND ENGINEERING, P37, DOI 10.1109/ICACTE.2008.204
   Kendall M. G., 1948, Rank correlation methods.
   Khoshgoftaar TM, 1996, IEEE T RELIAB, V45, P456, DOI 10.1109/24.537016
   Korn A, 2009, PHYSICA A, V388, P2221, DOI 10.1016/j.physa.2009.02.013
   Kubat M., 1997, ICML, P179
   Kubat M., 1997, EUR C MACH LEARN, P146
   Landherr A, 2010, BUS INFORM SYST ENG+, V2, P371, DOI 10.1007/s12599-010-0127-3
   Lin CY, 2008, NUCLEIC ACIDS RES, V36, pW438, DOI 10.1093/nar/gkn257
   Ling-Zan Zhu, 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P37, DOI 10.1109/COMPSACW.2011.17
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   Malhotra R, 2015, EXPERT SYST, V32, P203, DOI 10.1111/exsy.12078
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Malhotra R, 2010, INT J SYST ASSUR ENG, V1, P269, DOI 10.1007/s13198-011-0048-7
   Martin R., 1994, An Analysis of Dependencies, V12, P151
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Moeyersoms J, 2015, J SYST SOFTWARE, V100, P80, DOI 10.1016/j.jss.2014.10.032
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Newman M.E., 2010, Networks: an introduction
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Ortiz-Arroyo D, 2008, LECT NOTES COMPUT SC, V5376, P15, DOI 10.1007/978-3-540-89900-6_5
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Ouellet A., 2019, CCIS, P129, DOI DOI 10.1007/978-3-030-29238-610
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Rathore SS, 2019, ARTIF INTELL REV, V51, P255, DOI 10.1007/s10462-017-9563-5
   Rathore SS, 2017, SOFT COMPUT, V21, P7417, DOI 10.1007/s00500-016-2284-x
   Rathore SS, 2015, PROCEDIA COMPUT SCI, V62, P303, DOI 10.1016/j.procs.2015.08.454
   Russell S., 2016, Artificial intelligence a modern approach
   Sammut C., 2011, Encyclopedia of machine learning, DOI DOI 10.1007/978-0-387-30164-8
   Saporta G., 2011, Probabilites Analyse des donnees et Statistique
   Scanniello G, 2013, IEEE INT CONF AUTOM, P640, DOI 10.1109/ASE.2013.6693126
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shatnawi R., 2012, 2012 International Conference on Innovations in Information Technology (IIT), P54, DOI 10.1109/INNOVATIONS.2012.6207774
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Turhan B, 2009, DATA KNOWL ENG, V68, P278, DOI 10.1016/j.datak.2008.10.005
   Vasilescu Bogdan., 2011, Proceedings of the 2Nd International Workshop on Emerging Trends in Software Metrics, WETSoM '11, P23
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Yap BW, 2011, J STAT COMPUT SIM, V81, P2141, DOI 10.1080/00949655.2010.520163
   Yu P, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P99
   Zakari A, 2018, IEEE ACCESS, V6, P23990, DOI 10.1109/ACCESS.2018.2829541
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zheng J, 2009, EXPERT SYST APPL, V36, P2116, DOI 10.1016/j.eswa.2007.12.029
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zimmermann T., 2008, SOFTWARE ENG 2008, P531
NR 99
TC 1
Z9 1
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2024
VL 36
IS 4
DI 10.1002/smr.2548
EA MAR 2023
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MU0E5
UT WOS:000946284500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Trabelsi, I
   Abdellatif, M
   Abubaker, A
   Moha, N
   Mosser, S
   Ebrahimi-Kahou, S
   Gueheneuc, YG
AF Trabelsi, Imen
   Abdellatif, Manel
   Abubaker, Abdalgader
   Moha, Naouel
   Mosser, Sebastien
   Ebrahimi-Kahou, Samira
   Gueheneuc, Yann-Gael
TI From legacy to microservices: A type-based approach for microservices
   identification using machine learning and semantic analysis
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE decomposition; microservices; migration; ML; monolith; semantic analysis
AB The microservices architecture (MSA) style has been gaining interest in recent years because of its high scalability, ability to be deployed in the cloud, and suitability for DevOps practices. While new applications can adopt MSA from their inception, many legacy monolithic systems must be migrated to an MSA to benefit from the advantages of this architectural style. To support the migration process, we propose MicroMiner, a microservices identification approach that is based on static-relationship analyses between code elements as well as semantic analyses of the source code. Our approach relies on machine learning (ML) techniques and uses service types to guide the identification of microservices from legacy monolithic systems. We evaluate the efficiency of our approach on four systems and compare our results to ground-truths and to those of two state-of-the-art approaches. We perform a qualitative evaluation of the resulted microservices by analyzing the business capabilities of the identified microservices. Also a quantitative analysis using the state-of-the-art metrics on independence of functionality and modularity of services was conducted. Our results show the effectiveness of our approach to automate one of the most time-consuming steps in the migration of legacy systems to microservices. The proposed approach identifies architecturally significant microservices with a 68.15% precision and 77% recall.
C1 [Trabelsi, Imen; Abdellatif, Manel; Moha, Naouel; Ebrahimi-Kahou, Samira] Ecole Technol Super, Dept Software Engn & Informat Technol, Montreal, PQ, Canada.
   [Abubaker, Abdalgader; Ebrahimi-Kahou, Samira] Mila Quebec Artificial Intelligence Inst, Montreal, PQ, Canada.
   [Abubaker, Abdalgader] Univ Khartoum, Dept Pure Math, Khartoum, Sudan.
   [Mosser, Sebastien] McMaster Univ, Hamilton, ON, Canada.
   [Ebrahimi-Kahou, Samira] CIFAR Al Chair, Toronto, ON, Canada.
   [Gueheneuc, Yann-Gael] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 University of Quebec; Ecole de Technologie Superieure - Canada;
   University of Khartoum; McMaster University; Concordia University -
   Canada
RP Trabelsi, I (corresponding author), Ecole Technol Super, Dept Software Engn & Informat Technol, Montreal, PQ, Canada.
EM imen.trabelsi.1@ens.etsmtl.ca
RI Abdellatif, manel/JFS-0902-2023
OI Abdellatif, Manel/0000-0002-8647-1676; Trabelsi,
   Imen/0000-0001-7268-4067
CR Abdellatif M, 2020, LECT NOTES COMPUT SC, V12571, P476, DOI 10.1007/978-3-030-65310-1_34
   Abdellatif M, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110868
   Abdellatif M, 2018, LECT NOTES COMPUT SC, V11236, P634, DOI 10.1007/978-3-030-03596-9_46
   Ahmadvand M, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P68, DOI [10.1109/REW.2016.026, 10.1109/REW.2016.14]
   Amari S, 1999, NEURAL NETWORKS, V12, P783, DOI 10.1016/S0893-6080(99)00032-5
   Baresi L, 2017, LECT NOTES COMPUT SC, V10465, P19, DOI 10.1007/978-3-319-67262-5_2
   BEZDEK JC, 1984, COMPUT GEOSCI, V10, P191, DOI 10.1016/0098-3004(84)90020-7
   Blondel VD, 2008, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2008/10/P10008
   Boussaidi G. E., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P345, DOI 10.1109/WCRE.2012.44
   Brito M, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1409, DOI 10.1145/3412841.3442016
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Dragoni N, 2018, LECT NOTES COMPUT SC, V10742, P95, DOI 10.1007/978-3-319-74313-4_8
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Escobar Daniel, 2016, 2016 XLII Latin American Computing Conference (CLEI), P1
   Feng Z., 2020, CODEBERT PRE TRAINED
   FLOYD RW, 1962, COMMUN ACM, V5, P526, DOI 10.1145/368959.368993
   Fritzsch J, 2019, LECT NOTES COMPUT SC, V11350, P128, DOI 10.1007/978-3-030-06019-0_10
   Gao Xin-Bo, 2000, Acta Electronica Sinica, V28, P80
   Gat E, 1998, ARTIFICIAL INTELLIGENCE AND MOBILE ROBOTS, P195
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Hassan S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P1, DOI 10.1109/ICSA.2017.32
   Huergo R.S., 2014, IT Convergence Practice, V2, P1
   Iyyer M, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1681
   Jain H., 2004, International Journal of Web Services Research, V1, P1, DOI 10.4018/jwsr.2004010101
   Jin WX, 2021, IEEE T SOFTWARE ENG, V47, P987, DOI 10.1109/TSE.2019.2910531
   Khadka Ravi, 2013, 2013 IEEE 7th International Symposium on the Maintenance and Evolution of Service-Oriented and Cloud-Based Systems (MESOCA), P2, DOI 10.1109/MESOCA.2013.6632729
   Kipf TN, 2016, ARXIV
   Klock S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P11, DOI 10.1109/ICSA.2017.38
   Lapuz N, 2021, COMM COM INF SC, V1442, P301, DOI 10.1007/978-3-030-85521-5_20
   Levcovitz A., 2016, ARXIV
   LEWIS G., 2005, SMART SERVICE ORIENT
   Lewis J., 2014, MartinFowler. com
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Microsoft, 2019, US DOM AN MOD MICR
   Moravcik Oliver, 2012, INT J COMPUTER THEOR, V4, P891, DOI DOI 10.7763/IJCTE.2012.V4.601
   Mustafa O, 2018, PROGR IS, P283, DOI 10.1007/978-3-319-65687-8_25
   Nadareishvili I., 2016, Microservice Architecture: Aligning Principles, Practices, and Culture
   Newman S., 2015, BUILDING MICROSERVIC
   Peterson L.E., 2009, SCHOLARPEDIA, V4, P1883, DOI 10.4249/scholarpedia.1883
   Rademacher F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P38, DOI 10.1109/ICSAW.2017.32
   Richards M, 2015, Software Architecture Patterns
   Rish Irina, 2001, IJCAI 2001 WORKSHOP, V3, P41
   Saidani I, 2019, LECT NOTES COMPUT SC, V11895, P58, DOI 10.1007/978-3-030-33702-5_5
   SWAIN PH, 1977, IEEE T GEOSCI REMOTE, V15, P142, DOI 10.1109/TGE.1977.6498972
   Xiao ZX, 2016, 2016 4TH INTERNATIONAL CONFERENCE ON ENTERPRISE SYSTEMS (ES) PROCEEDINGS, P60, DOI 10.1109/ES.2016.14
NR 45
TC 2
Z9 2
U1 6
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2023
VL 35
IS 10
SI SI
AR e2503
DI 10.1002/smr.2503
EA SEP 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U4OH4
UT WOS:000849882500001
DA 2024-07-18
ER

PT J
AU Szabó, B
   Hercegfi, K
AF Szabo, Balint
   Hercegfi, Karoly
TI User-centered approaches in software development processes: Qualitative
   research into the practice of Hungarian companies
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE user experience (UX); UX maturity; UX methods; software processes;
   qualitative research; interviews
ID AGILE METHODS; USABILITY; MODEL; REQUIREMENTS; EXPERIENCE; INTERVIEW;
   LESSONS; DESIGN
AB Integrating user-centered approaches into development processes is one of the main challenges nowadays that derives from different objectives of software engineering (SE) and human-computer interaction (HCI) fields. For SE experts, the main goal is quality code creation, whereas for HCI professionals, it is the continuous product interaction with the users. The major question is what tools and timings can be used together to achieve these goals effectively. Therefore, this article provides comparative, exploratory, and qualitative research about possible solutions on how practitioners transfer HCI values and practices to SE processes. The current practice of software companies was studied by conducting interviews on a sample of 13 Hungarian Information Technology companies to explore the SE processes in respect of several dimensions (applied development models, the integrity of user-centered methods, and the user experience [UX] maturity). According to preliminary expectations, the development processes of the various companies proceed in different steps; nevertheless, they can be well grouped together based on the UX methods applied. The results representing the various user-centered processes can be considered useful for future decision makers of software companies worldwide.
C1 [Szabo, Balint; Hercegfi, Karoly] Budapest Univ Technol & Econ, Fac Econ & Social Sci, Dept Ergon & Psychol, Q Bldg,A Wing,Room 112, H-1117 Budapest, Hungary.
C3 Budapest University of Technology & Economics
RP Szabó, B (corresponding author), Budapest Univ Technol & Econ, Fac Econ & Social Sci, Dept Ergon & Psychol, Q Bldg,A Wing,Room 112, H-1117 Budapest, Hungary.
EM szabo.balint@gtk.bme.hu
RI Hercegfi, Karoly/KFT-3415-2024
OI Hercegfi, Karoly/0000-0002-3015-7100; Szabo, Balint/0000-0003-0350-6499
CR Abbas N, 2008, LECT NOTES BUS INF P, V9, P94
   Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Abrahao S, 2010, J SYST SOFTWARE, V83, P2015, DOI 10.1016/j.jss.2010.05.080
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Agee P, 2021, BUILD RES INF, V49, P84, DOI 10.1080/09613218.2020.1808946
   Aggarwal PK, 2021, 2021 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, DATA SCIENCE & ENGINEERING (CONFLUENCE 2021), P196, DOI 10.1109/Confluence51648.2021.9377178
   Al Ghanmi Nora Khaled., 2020, Bulletin of Electrical Engineering and Informatics, V9, P2630, DOI DOI 10.11591/EEI.V9I6.2484
   Almeyda S, 2021, LECT NOTES COMPUT SC, V12779, P187, DOI 10.1007/978-3-030-78221-4_13
   Alves R, 2014, PROCEEDINGS OF THE NORDICHI'14: THE 8TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION: FUN, FAST, FOUNDATIONAL, P93, DOI 10.1145/2639189.2641208
   Ananjeva A, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110785
   Andersson S, 2012, DEV IMPLEMENTATION U
   [Anonymous], 2012, Non-functional requirements in software engineering
   [Anonymous], 1998, Contextual design: defining customer-centered systems
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], 1993, Usability Engineering
   Anwer F., 2017, Int. J. Multidiscip. Sci. Eng, V8, P1
   Ardito C, 2014, COMPUTER, V47, P86, DOI 10.1109/MC.2014.355
   Bak J.O., 2008, P 5 NORD C HUM COMP, P23, DOI [DOI 10.1145/1463160.1463164, 10.1145/1463160.1463164]
   Banfield Richard., 2015, DESIGN SPRINT PRACTI
   Basias N., 2018, Review of Integrative Business and Economics Research, V7, P91
   Baxter K, 2015, UNDERSTANDING YOUR USERS: A PRACTICAL GUIDE TO USER RESEARCH METHODS, 2ND EDITION, P1
   Beasley A.M., 2013, Practical Web Analytics for User Experience: How analytics can help you understand your users, DOI DOI 10.1016/C2012
   BENINGTON HD, 1983, ANN HIST COMPUT, V5, P350
   Bias R G, 2005, COST JUSTIFYING USAB
   Birrell N.D., 1985, A Practical Handbook for Software Development
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Bogdan SSC., 2019, HUMAN CTR SOFTWARE E
   Boivie I, 2006, INTERACT COMPUT, V18, P601, DOI 10.1016/j.intcom.2005.10.003
   Bruun A, 2018, NORDICHI'18: PROCEEDINGS OF THE 10TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION, P352, DOI 10.1145/3240167.3240213
   Budwig M., 2009, Proc. CHI Extended Abstracts, P3075, DOI DOI 10.1145/1520340.1520434
   Cajander Å, 2013, LECT NOTES COMPUT SC, V8119, P762
   Cano Sandra, 2021, Trends and Applications in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 1365), P435, DOI 10.1007/978-3-030-72657-7_42
   Chamberlain S, 2006, LECT NOTES COMPUT SC, V4044, P143
   Chapman L, 2014, LECT NOTES COMPUT SC, V8520, P12, DOI 10.1007/978-3-319-07638-6_2
   Chasanidou D, 2015, LECT NOTES COMPUT SC, V9186, P12, DOI 10.1007/978-3-319-20886-2_2
   Chisnell D., 2008, Handbook of usability testing: How to plan, design, and conduct effective tests, V2nd
   Cho S., 2020, INT C INTELLIGENT HU, P357
   Christensen SY., 2020, INTERMOUNTAIN ENG TE, P1
   Clemmensen T., 2003, Software Process Improvement and Practice, V8, P99, DOI 10.1002/spip.173
   Costabile Maria Francesca., 2001, Handbook of Software Engineering Knowledge Engineering: Fundamentals, V1, P179
   Coutaz J., 1995, Software Engineering and Human-Computer Interaction. ICSE '94 Workshop on SE-HCI: Joint Research Issues. Proceedings, P35
   Cross K., 2000, CONTEXTUAL INQUIRY, V317, DOI [10.1145/633482.633485, DOI 10.1145/633482.633485]
   da Silva T., 2012, Journal of Software Engineering and Applications, V05, P743, DOI DOI 10.4236/JSEA.2012.510087
   Denning PJ, 2008, COMMUN ACM, V51, P29, DOI 10.1145/1409360.1409371
   Desmarais MC, 2005, HUMAN CTR SOFTWARE E, V1st, DOI DOI 10.1007/1-4020-4113-6
   Dilshad R., 2013, Focus Group Interview as a tool for qualitative research: An analysis
   Ding Y, 2020, INT J HUM-COMPUT INT, V36, P1008, DOI 10.1080/10447318.2019.1709330
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Durmus MS, 2018, INFORM-J COMPUT INFO, V42, P577, DOI 10.31449/inf.v42i4.2027
   Estdale J, 2018, COMM COM INF SC, V896, P492, DOI 10.1007/978-3-319-97925-0_42
   Fernando Capretz Luiz, 2014, IEEE Software, V31, P103, DOI 10.1109/MS.2014.30
   Ferreira Jennifer, 2012, Proceedings of the 2012 Agile Conference, P11, DOI 10.1109/Agile.2012.33
   Fowler M., 2001, Software Development, V9, P28
   Fraser J, 2015, PROCEDIA MANUF, V3, P626, DOI 10.1016/j.promfg.2015.07.285
   Fuge M., 2015, Journal of Mechanical Design, V137, P1
   Georges Vanessa, 2020, CHI EA '20: Extended Abstracts of the 2020 CHI Conference on Human Factors in Computing Systems, P1, DOI 10.1145/3334480.3383042
   Gerea C., 2015, Proceedings of the Latin American Conference on Human Computer Interaction, V19, P4, DOI [10.1145/2824893.2824914, DOI 10.1145/2824893.2824914]
   Gonzalez-Holland Emily, 2017, Proceedings of the Human Factors and Ergonomics Society Annual Meeting, V61, P1472, DOI 10.1177/1541931213601853
   Grundy J., 2021, Evaluation of Novel Approaches to Software Engineering, P444, DOI [10.1007/978-3-030-70006-5_18, DOI 10.1007/978-3-030-70006-5_18]
   Gulliksen J., 2004, PROC NORDICHI 2004, P207
   Güncan D, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2274
   Gurcan F, 2021, INT J HUM-COMPUT INT, V37, P267, DOI 10.1080/10447318.2020.1819668
   Hafeez T, 2021, PLOS ONE, V16, DOI 10.1371/journal.pone.0246913
   Hassenzahl M, 2006, BEHAV INFORM TECHNOL, V25, P91, DOI 10.1080/01449290500330331
   Hassenzahl M, 2010, INTERACT COMPUT, V22, P353, DOI 10.1016/j.intcom.2010.04.002
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herendy Csilla, 2020, HCI International 2020 - Late Breaking Papers. User Experience Design and Case Studies. 22nd HCI International Conference, HCII 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12423), P123, DOI 10.1007/978-3-030-60114-0_8
   Hertzum M., 2012, COMMUN ASSOC INF SYS, V30, P313, DOI [10.17705/1cais.03020, DOI 10.17705/1CAIS.03020]
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   HIPA, 2018, INFORM COMMUNICATION
   Hu R., 2021, INT C RIGOROUS STATE, P34
   Hussain J, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18051622
   Inan Nur Aulia, 2021, ICSCA 2021: 2021 10th International Conference on Software and Computer Applications, P307, DOI 10.1145/3457784.3457832
   Iriarte AA., 2021, EVALUATING USER EXPE, DOI [10.6036/NT10072, DOI 10.6036/NT10072]
   Isomursu Minna, 2012, Proceedings of the 2012 Agile Conference, P1, DOI 10.1109/Agile.2012.10
   Izso L., 2000, WORK PSYCHOL 21 CENT, V2018, P761
   Jaaskelainen R., 2010, HDB TRANSLATION STUD, V1, P371
   Jackson S., 2015, Cengage Learning
   Joshi A, 2010, J SYST SOFTWARE, V83, P2045, DOI 10.1016/j.jss.2010.03.078
   Kaganski S, 2017, PROC CIRP, V63, P283, DOI 10.1016/j.procir.2017.03.143
   Karapanos E., 2013, MODELING USERSEXPERI, P57, DOI [10.1007/978-3-642-31000-3_4., DOI 10.1007/978-3-642-31000-3_4]
   Karlsson L, 2007, INFORM SOFTWARE TECH, V49, P588, DOI 10.1016/j.infsof.2007.02.008
   Kashfi P., 2015, MODELS INTEGRATING U
   Kashfi P, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.130
   Ke Sun, 2021, Simulation Tools and Techniques. 12th EAI International Conference, SIMUtools 2020. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 369), P716, DOI 10.1007/978-3-030-72792-5_56
   Kim J, 2020, INT J ENERG RES, V44, P8170, DOI 10.1002/er.5262
   Kneuper R., 2018, Software Processes and Life Cycle Models: An Introduction to Modelling, Using and Managing Agile, Plan-Driven and Hybrid Processes
   Kneuper R, 2017, IEEE ANN HIST COMPUT, V39, P41, DOI 10.1109/MAHC.2017.3481346
   Kochanowska M., 2022, PERSPECTIVES DESIGN, P19
   Kujala S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P75, DOI 10.1109/RE.2005.72
   Kula I., 2017, End-user considerations in educational technology design, P123, DOI [10.4018/978-1-5225-2639-1.ch006, DOI 10.4018/978-1-5225-2639-1.CH006]
   Kumar M., 2018, International Journal of Education and Management Engineering, V8, P59, DOI 10.5815/ijeme.2018.06.06
   Kuusinen K., 2012, Proceedings of the 7th Nordic Conference on Human-Computer Interaction: Making Sense Through Design (NordiCHI'12), P139, DOI DOI 10.1145/2399016.2399037
   Law ELC, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P719
   Law ELC, 2014, INT J HUM-COMPUT ST, V72, P526, DOI 10.1016/j.ijhcs.2013.09.006
   Lazar J., 2017, RES METHODS HUMAN CO, DOI DOI 10.1016/B978-0-12-805390-4.00014-5
   Lenberg P, 2014, P 7 INT WORKSH COOP, P48, DOI DOI 10.1145/2593702.2593711
   Lindblom J., 2020, HUMAN ROBOT INTERACT, P231, DOI [10.1007/978-3-030-42307-0_9, DOI 10.1007/978-3-030-42307-0_9]
   Losana P, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21186298
   Luther L, 2020, MULTIMODAL TECHNOLOG, V4, DOI 10.3390/mti4020018
   Ma Y., 2021, P CHINA SAE C 2019 S, P989
   Mahanta P., 2017, MOVE MEANINGFUL INTE, P232, DOI [10.1007/978-3-319-73805-5_24, DOI 10.1007/978]
   Mahmood Z, 2017, COMPUT COMMUN NETW S, pVII
   Mao JY, 2005, COMMUN ACM, V48, P105, DOI 10.1145/1047671.1047677
   Marti P, 2016, ACSIS-ANN COMPUT SCI, V8, P1647, DOI 10.15439/2016F302
   Maslov I., 2020, 2020 IEEE INT C ENG, P1, DOI [10.1109/ICE/ITMC49519.2020.9198333, DOI 10.1109/ICE/ITMC49519.2020.9198333]
   Mathur S, 2010, INT J COMPUT APPL, V1, P29
   McDonagh D., 2002, FOCUS GROUPS SUPPORT, DOI [10.1201/9780203302743, DOI 10.1201/9780203302743]
   Medlock Michael C, 2005, Cost-Justifying Usability, P489
   Megyeri M, 2024, ERGON DES, V32, P48, DOI 10.1177/10648046211026028
   Miller L, 2005, AGILE 2005, PROCEEDINGS, P225, DOI 10.1109/ADC.2005.16
   Ming-Chang Lee, 2006, International Journal of Services and Standards, V2, P101, DOI 10.1504/IJSS.2006.008161
   Mingwei Z, 2020, INT C ARTIFICIAL INT, V8, P157
   Munassar NMA, 2010, International Journal of Computer Science Issues (IJCSI), V7, P94
   Ogunyemi A., 2014, IBERIAN C INFORM SYS, P1, DOI [10.1109/CISTI.2014.6877024, DOI 10.1109/CISTI.2014.6877024]
   Ogunyemi AA, 2019, INT J HUM-COMPUT INT, V35, P1461, DOI 10.1080/10447318.2018.1541544
   Osorio JA, 2011, EUROMICRO CONF PROC, P453, DOI 10.1109/SEAA.2011.69
   Ovad T, 2015, 2015 AGILE CONFERENCE, P40, DOI 10.1109/Agile.2015.13
   Overmyer S. P., 1991, Human Aspects in Computing. Design and Use of Interactive Systems and Work with Terminals. Proceedings of the Fourth International Conference on Human-Computer Interaction, P303
   Palacin-Silva M, 2017, CONF SOFTW ENG EDUC, P212, DOI 10.1109/CSEET.2017.41
   Parizi RB., 2020, P IBERO AM C SOFTWAR
   Parker G.M., 2002, CROSS FUNCTIONAL TEA
   Péraire C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P38, DOI 10.1109/ICSE-SEET.2019.00013
   Plattner H, 2011, UNDERST INNOV, P1, DOI 10.1007/978-3-642-13757-0
   Plonka L., 2014, LECT NOTES BUS INF P, V179, P1461, DOI [10.1007/978-3-319-06862-6_1, DOI 10.1007/978]
   Pradhan D., 2020, INT J ENG RES TECHNO, V8, P1
   Prenner N, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P145, DOI 10.1145/3379177.3388907
   Pressman R. S., 2010, Software Engineering: A Practitioner's Approach
   Quiñones D, 2018, COMPUT STAND INTER, V59, P109, DOI 10.1016/j.csi.2018.03.002
   Rather M. A., 2015, International Journal of Application or Innovation in Engineering & Management (IJAIEM), V4, P23
   Robert J-M., 2017, HDB HUMAN MACHINE IN, p303
   Rogers Yvonne, 2011, Interaction design: beyond humancomputer interaction
   Rohrer C., 2014, When to Use Which User-Experience Research Methods
   Rosenbaum S., 2000, CHI 2000 C HUMAN FAC, P337, DOI DOI 10.1145/332040.332454
   Royce W.W., 1970, Proceedings of WESCON, P1
   Ruparelia N. B., 2010, SIGSOFT Softw. Eng. Notes, V35, P8, DOI DOI 10.1145/1764810.1764814
   Salvador T., 1999, DESIGN MANAGEMENT J, V10, P35
   Salvendy G., 2021, Handbook of Human Factors and Ergonomics
   Sauer J, 2020, ERGONOMICS, V63, P1207, DOI 10.1080/00140139.2020.1774080
   Savarit E., 2020, PRACTICAL USER RES E
   Schuh G, 2017, IN C IND ENG ENG MAN, P725, DOI 10.1109/IEEM.2017.8289986
   Scialdone MJ., 2020, J INFORM SYSTEMS ED, V31, P179
   Sedano T, 2020, IEEE SOFTWARE, V37, P58, DOI 10.1109/MS.2020.3013274
   Shaya O, 2015, WEB ANAL, DOI [10.13140/RG.2.1.4674.9926, DOI 10.13140/RG.2.1.4674.9926]
   SHNEIDERMAN B, 2020, ACM T INTERACT INTEL, V10, P1, DOI [DOI 10.1145/3419764, 10.1145/3419764]
   Sikorski M., 2012, USER SYSTEM INTERACT
   Sinha SudhiR., 2017, Building an Effective IoT Ecosystem for Your Business
   Sitorus J.H. P., 2020, Jurnal Mantik, V4, P1369
   Snyder C., 2003, Paper Prototyping: The Fast and Easy Way to Design and Refne User Interfaces, VIllustrated
   Spencer D., 2009, CARD SORTING DESIGNI
   Stackowiak R., 2020, DESIGN THINKING SOFT, DOI [10.1007/978-1-4842-6153-8, DOI 10.1007/978]
   Svensson RB, 2012, IEEE T SOFTWARE ENG, V38, P923, DOI 10.1109/TSE.2011.47
   Sy D, 2007, J USABILITY STUD, V2, P112
   Tariq MU., 2020, INT BUSINESS INFORM
   Teixeira ELS., 2021, SAE TECHNICAL PAPER
   Tenner A.R., 1994, Total Quality Management Three Steps to Continuous Improvement
   Tichindelean M, 2021, SUSTAINABILITY-BASEL, V13, DOI 10.3390/su131810415
   Vaananen-Vainio-Mattila K., 2008, Proceedings of Extended Abstracts on Human Factors in Computing Systems (CHE08), P3961
   Vermeeren Arnold POS, 2010, P 6 NORD C HUM COMP, P521, DOI [DOI 10.1145/1868914.1868973, 10.1145/1868914, DOI 10.1145/1868914]
   VersionOne, 2021, 15 ANN STAT AG REP, V15
   Wilson C., 2013, Interview Techniques for UX Practitioners: A User-Centered Design Method
   Wilson C., 2013, User Interface Inspection Methods"
   Wright P., 2010, Synthesis Lectures on Human-Centered Informatics, DOI [DOI 10.2200/S00229ED1V01Y201003HCI009, 10.2200/S00229ED1V01Y201003HCI009]
   Xu Y, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2227, DOI 10.1145/2783258.2788602
   Young S. W., 2014, WEAVE J LIB USER EXP, V1, P75, DOI [DOI 10.3998/WEAVE.12535642.0001.101, 10.3998/weave.12535642.0001.101]
   Zakariashvili M, 2021, MIDDLE EUR SCI B, V16, P95
NR 166
TC 0
Z9 0
U1 3
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2023
VL 35
IS 2
AR e2501
DI 10.1002/smr.2501
EA AUG 2022
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8F6FF
UT WOS:000844421400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Qasaimeh, M
   Abu Hammour, R
   Yassein, MB
   Al-Qassas, RS
   Torralbo, JAL
   Lizcano, D
AF Qasaimeh, Malik
   Abu Hammour, Rand
   Yassein, Muneer Bani
   Al-Qassas, Raad S.
   Torralbo, Juan Alfonso Lara
   Lizcano, David
TI Advanced security testing using a cyber-attack forecasting model: A case
   study of financial institutions
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE cyber security; forecasting model; machine learning; security software
   testing
ID NEURAL-NETWORK
AB As the number of cyber-attacks on financial institutions has increased over the past few years, an advanced system that is capable of predicting the target of an attack is essential. Such a system needs to be integrated into the existing detection systems of financial institutions as it provides them with proactive controls with which to halt an attack by predicting patterns. Advanced prediction systems also enhance the software design and security testing of new advanced cyber-security measures by providing new testing scenarios supported by attack forecasting. This present study developed a model that forecasts future network-based cyber-attacks on financial institutions using a deep neural network. The dataset that was used to train and test the model consisted of some of the biggest cyber-attacks on banking institutions over the past three years. This provided insight into new patterns that may end with a cyber-crime. These new attacks were also evaluated to determine behavioral similarities with the nearest known attack or a combination of several existing attacks. The performance of the forecasting model was then evaluated in a real banking environment and provided a forecasting accuracy of 90.36%. As such, financial institutions can use the proposed forecasting model to improve their security testing measures.
C1 [Qasaimeh, Malik; Yassein, Muneer Bani] Jordan Univ Sci & Technol, Fac Comp & Informat Technol, Irbid, Jordan.
   [Abu Hammour, Rand; Al-Qassas, Raad S.] Princess Sumaya Univ Technol, Dept Comp Sci, Amman, Jordan.
   [Torralbo, Juan Alfonso Lara; Lizcano, David] Madrid Open Univ UDIMA, Dept Comp Sci, Madrid, Spain.
C3 Jordan University of Science & Technology; Princess Sumaya University
   for Technology; Madrid Open University, UDIMA
RP Qasaimeh, M (corresponding author), Jordan Univ Sci & Technol, Irbid, Jordan.
EM mgqasaimeh@just.edu.jo
RI Al-Qassas, Raad/B-6320-2016; Lara Torralbo, Juan Alfonso/I-9196-2014;
   Lizcano, David/B-4518-2011
OI Al-Qassas, Raad/0000-0002-5836-1111; Lara Torralbo, Juan
   Alfonso/0000-0001-5131-8447; Lizcano, David/0000-0001-7928-5237
CR Al Batayneh AA, 2021, ACM J DATA INF QUAL, V13, DOI 10.1145/3418172
   Amiri M, 2016, ENG COMPUT-GERMANY, V32, P631, DOI 10.1007/s00366-016-0442-5
   [Anonymous], 2020, Documentation
   Applebaum S, 2021, PROCEDIA COMPUT SCI, V189, P359, DOI 10.1016/j.procs.2021.05.105
   Arora AS, 2019, J DISCRET MATH SCI C, V22, P541, DOI 10.1080/09720529.2019.1638579
   Ataya Georges, 2010, Information Security Technical Report, V15, P138, DOI 10.1016/j.istr.2011.02.004
   Bakdash JZ, 2018, J CYBERSECURITY, V4, DOI 10.1093/cybsec/tyy007
   Basheer H.A., 2020, International Journal of Power Electronics and Drive Systems, V10, P3615, DOI [10.11591/ijece.v10i4.pp3615-3622, DOI 10.11591/IJECE.V10I4.PP3615-3622]
   Bhatti G, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18124179
   Cai L., 2015, Data Science Journal, DOI DOI 10.5334/DSJ-2015-002
   Danquah P., 2020, J. Inf. Secur., V11, P225, DOI DOI 10.4236/JIS.2020.114015
   Dumagpi JK, 2020, IEICE T INF SYST, VE103D, P454, DOI 10.1587/transinf.2019EDL8154
   Hettema H, 2021, COMPUT SECUR, V109, DOI 10.1016/j.cose.2021.102396
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   Husák M, 2019, IEEE COMMUN SURV TUT, V21, P640, DOI 10.1109/COMST.2018.2871866
   Internet Society, 2019, 2018 CYB INC BREACH
   Kaur A, 2022, ARCH COMPUT METHOD E, V29, P2071, DOI 10.1007/s11831-021-09649-9
   Kiliç I, 2019, 2019 4TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND ENGINEERING (UBMK), P542, DOI [10.1109/UBMK.2019.8907177, 10.1109/ubmk.2019.8907177]
   Lallie HS, 2021, COMPUT SECUR, V105, DOI 10.1016/j.cose.2021.102248
   Mahmood T, 2013, 2013 2ND NATIONAL CONFERENCE ON INFORMATION ASSURANCE (NCIA), P129, DOI 10.1109/NCIA.2013.6725337
   Malhotra Y., 2018, SSRN ELECT J, DOI 10.2139/ssrn.3193693
   Megahed NA, 2020, SUSTAIN CITIES SOC, V61, DOI 10.1016/j.scs.2020.102350
   Mohammed MA, 2021, J INTELL SYST, V30, P976, DOI 10.1515/jisys-2021-0171
   MonsterCloud S, 2022, TOP CYB SEC EXP REP
   Moyo S, 2020, IEEE ACCESS, V8, P33735, DOI 10.1109/ACCESS.2020.2971000
   Okutan A, 2018, CYBERSECURITY, V1, DOI 10.1186/s42400-018-0016-5
   Oreski D, 2017, APPL SOFT COMPUT, V52, P109, DOI 10.1016/j.asoc.2016.12.023
   Ozkan-Okay M, 2021, IEEE ACCESS, V9, P157727, DOI 10.1109/ACCESS.2021.3129336
   Patchin JW, 2020, POLICING, V43, P137, DOI 10.1108/PIJPSM-08-2019-0136
   Patro Mohan., 2015, Transactions on Machine Learning and Artificial Intelligence, DOI DOI 10.14738/TMLAI.32.1108
   Prasad M, 2020, APPL SOFT COMPUT, V87, DOI 10.1016/j.asoc.2019.105980
   Qasaimeh M., 2021, 7 INT C ENG MIS ASS
   Raschka S, 2020, INFORMATION, V11, DOI 10.3390/info11040193
   Riya S., 2017, INT J ADV ENG RES DE, V4, DOI DOI 10.1007/S11831
   ROSENBLATT F, 1958, PSYCHOL REV, V65, P386, DOI 10.1037/h0042519
   Safitri A., 2021, INT J COMPUT APPL, V174, P23, DOI DOI 10.1038/S41591-018-0171-Y
   Saurenko TN, 2021, AUTOM CONTROL COMPUT, V55, P903, DOI 10.3103/S0146411621080277
   Schwemmer MA, 2018, NAT MED, V24, P1669, DOI 10.1038/s41591-018-0171-y
   Tam K., 2013, UTM SECURITY FORTINE, P307, DOI DOI 10.1007/S00366-016-0442-5
   Thompson JA, 2016, PEERJ, V4, DOI 10.7717/peerj.1621
   Werner G., 2017, P 12 ANN C CYB INF S, DOI DOI 10.1145/3064814.3064831
   Yu S, 2014, IEEE T PARALL DISTR, V25, P2245, DOI 10.1109/TPDS.2013.181
   Zhang YB, 2015, INT J SECUR APPL, V9, P359
   Zhao LA, 2011, EXPERT SYST APPL, V38, P4972, DOI 10.1016/j.eswa.2010.09.154
NR 44
TC 5
Z9 5
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2022
VL 34
IS 11
SI SI
AR e2489
DI 10.1002/smr.2489
EA AUG 2022
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5O9IJ
UT WOS:000837463900001
DA 2024-07-18
ER

PT J
AU Jilani, AA
   Khan, MU
   Iqbal, MZ
   Usman, M
AF Jilani, Atif Aftab
   Khan, Muhammad Uzair
   Iqbal, Muhammad Zohaib
   Usman, Muhammad
TI An automated search-based test model generation approach for structural
   testing of model transformations
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE constraint solving; instance generation; model transformation; search
   based; structural testing; test model
ID OCL CONSTRAINTS; SOFTWARE; SPECIFICATIONS; ENVIRONMENT
AB Model transformation testing has become crucial as model-driven engineering has raised the abstraction level for developing software systems. Transformation is written to transform models from one level of abstraction to another, for example, model to model or model to code. A major challenge in testing the transformation is the creation of test models, such that (i) they conform to the source meta-model (i.e., multiplicities and Object Constraint Language [OCL] constraints on meta-model) and (ii) they provide coverage of the complete transformation (solving branch conditions for traversing all paths). Manual creation of test models requires a lot of time and effort. Still, the validity of the developed test models cannot be ensured. This paper aims to solve the above challenges using an automated search-based strategy. The proposed approach is two-stepped. First, valid test models are generated by solving source meta-model constraints. Second, the generated models are evolved for achieving the structural coverage of the transformation by solving the branch conditions. A toolset model transformation testing environment (MOTTER) is developed to automate the search-based solution. The proposed work is empirically evaluated on two case studies using four search algorithms. The result reflects that it successfully generates valid test models for achieving desired structural coverage with high performance on both the case studies.
C1 [Jilani, Atif Aftab; Khan, Muhammad Uzair; Iqbal, Muhammad Zohaib; Usman, Muhammad] Natl Univ Comp & Emerging Sci, Software Qual Engn & Testing QUEST Lab, Islamabad, Pakistan.
RP Usman, M (corresponding author), Natl Univ Comp & Emerging Sci, Software Qual Engn & Testing QUEST Lab, Islamabad, Pakistan.
EM m.usman@questlab.pk
RI Khan, Muhammad Sarwar/Q-8307-2019
OI Usman, Muhammad/0000-0003-2759-3259; Jilani, Atif/0000-0002-8311-8279
CR Ali S., 2015, EMPIRI SOFTW ENG, P1
   Ali S., 2014, PROCEEDING 16 ANN C
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 2010, The Unified Modeling Language(UML)
   Arcuri A., 2011, INT S SEARCH BASED S
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, SOFTW TEST VERIF REL, V23, P119, DOI 10.1002/stvr.457
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Brottier E, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85
   Brownlee J, 2011, CLEVER ALGORITHMS NA
   Burgueño L, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a7
   Chekam TT., 2017, 2017 IEEEACM 39 INT, p597
   Chen, 2020, EVALUATION MODEL TRA
   Davis L., 1991, Handbook of Genetic Algorithms
   Droste S, 2002, THEOR COMPUT SCI, V276, P51, DOI 10.1016/S0304-3975(01)00182-7
   Eclipse OCL, 2005, ECL COMM ECL OCL PRO
   Ehrig K, 2009, SOFTW SYST MODEL, V8, P479, DOI 10.1007/s10270-008-0095-y
   Elqortobi M, 2018, COMM COM INF SC, V929, P63, DOI 10.1007/978-3-030-02852-7_6
   Fay MP, 2010, STAT SURV, V4, P1, DOI 10.1214/09-SS051
   Ferdjoukh A., 2015, 2015 3 INT C MODEL D, p213
   G. ATLAS, ATLAS TRANSFORMATION
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Gómez-Abajo P, 2021, SOFTW SYST MODEL, V20, P767, DOI 10.1007/s10270-020-00827-0
   Gonzalez Carlos A., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P449, DOI 10.1007/978-3-642-33666-9_29
   González CA, 2014, LECT NOTES COMPUT SC, V8568, P25
   Gosavi MA, 2018, IEEE SOUTHEASTCON
   Guerra E., 2019, 2019 ACMIEEE 22 INT, p78
   He X, 2019, SOFTW SYST MODEL, V18, P2051, DOI 10.1007/s10270-017-0634-5
   Hilken F, 2018, SOFTW SYST MODEL, V17, P885, DOI 10.1007/s10270-016-0568-3
   Hoffmann B., 2011, GCM, V39, P49
   Iqbal MZ, 2010, LECT NOTES COMPUT SC, V6394, P286
   Jackson EK, 2011, LECT NOTES COMPUT SC, V6981, P653, DOI 10.1007/978-3-642-24485-8_48
   Jahanbin S., 2018, 2018 8 INT C COMPUTE, p98
   Jansen K, 2010, INSTRUMENTATION TRAN
   Jilani AA, 2019, ADV COMPUT, V112, P135, DOI 10.1016/bs.adcom.2017.12.003
   Jilani AA, 2014, LECT NOTES COMPUT SC, V8568, P17
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Kuester JM, 2007, LECT NOTES COMPUT SC, V4364, P193
   Lahrouni M., 2019, BLACK BOX CONTRACT B, V16, p651
   Mantz F, 2015, SCI COMPUT PROGRAM, V104, P2, DOI 10.1016/j.scico.2015.01.002
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mottu J-M., 2012, ISSRE 23 IEEE INT S
   Mythily M, 2019, CLUSTER COMPUT, V22, P12351, DOI 10.1007/s10586-017-1618-5
   Nguyen T.T., 2019, 2019 IEEE Canadian Conference of Electrical and Computer Engineering, P1, DOI DOI 10.1109/CCECE.2019.8861573
   Nguyen T-H., 2018, 2018 10 INT C KNOWLE, p264
   Oldevik J., 2006, MOFSCRIPT USER GUIDE
   OMG, 2017, OBJECT CONSTRAINT LA
   Rojas JM., 2016, EMPIR SOFTW ENG, P1, DOI DOI 10.1007/S10664-015-9424-2.
   Rumpe B., 2005, P MODELS
   Sahin D, 2015, J SOFTW-EVOL PROC, V27, P821, DOI 10.1002/smr.1735
   Scalabrino S, 2016, LECT NOTES COMPUT SC, V9962, P64, DOI 10.1007/978-3-319-47106-8_5
   Schmidt D.C., 2006, Computer, V39, P2531
   Selim G.M., 2012, Proceedings of the First Workshop on the Analysis of Model Transformations, P21
   Selway M, 2018, LECT NOTE MANAGE IND, P103, DOI 10.1007/978-3-319-55914-8_8
   Sen S., 2012, SOFTW SYST MODEL, P1
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Shamshiri S, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1660
   Thu E. E., 2017, J COMPUT COMMUN, V5
   Tiso A., 2012, P AMT, P15
   Tolksdorf G, 2019, COMPUT CHEM ENG, V121, P670, DOI 10.1016/j.compchemeng.2018.12.006
   Wang J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P432, DOI 10.1109/ASWEC.2008.42
   Wang W., 2013, 17 EUR C SOFTW MAINT, P5
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Winkelmann J, 2008, ELECTRON NOTES THEOR, V211, P159, DOI 10.1016/j.entcs.2008.04.038
   Xiao H., 2014, COMPUTER SOFTWARE AP, p11
   Yue T, 2016, SOFTW SYST MODEL, V15, P757, DOI 10.1007/s10270-014-0438-9
NR 68
TC 1
Z9 1
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2022
VL 34
IS 11
SI SI
AR e2461
DI 10.1002/smr.2461
EA MAY 2022
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5O9IJ
UT WOS:000792513800001
DA 2024-07-18
ER

PT J
AU Rafi, S
   Akbar, MA
   Mahmood, S
   Alsanad, A
   Alothaim, A
AF Rafi, Saima
   Akbar, Muhammad Azeem
   Mahmood, Sajjad
   Alsanad, Ahmed
   Alothaim, Abdulrahman
TI Selection of DevOps best test practices: A hybrid approach using ISM and
   fuzzy TOPSIS analysis
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE DevOps; fuzzy TOPSIS; ISM; prioritization; test practices
ID REQUIREMENTS CHANGE MANAGEMENT; DECISION-MAKING; SUCCESS FACTORS;
   INTERVAL
AB Testing is a complex phase in DevOps process due to need of an automated process that provides feedback at different strategies of continuous development and operations pipeline. Software organization face several challenges during the testing phase due to lack of understanding on testing best practices for the DevOps paradigm. The objective of this study is to prioritize DevOps best testing practices, which can facilitate the selection of testing practices during DevOps process. To perform this research, we have extended the work done by Hornbeek, using the 15 DevOps testing practices discussed in his study. First, we categorize the test practices against culture, automation, lean, measurement, and sharing (CALMS) pillars of DevOps adoption principles. Next, a questionnaire-based survey was conducted to collect feedback from industry practitioners on the DevOps test practices and their categorization against CALMS criteria. Finally, we applied Interpretive Structure Modeling (ISM) to find the interrelationship between CALMS criteria, and fuzzy TOPSIS was used to prioritize the DevOps test practices that will assist practitioners to better manage the testing activities during DevOps process.
C1 [Rafi, Saima] Univ Murcia, Dept Informat & Syst, Murcia 30100, Spain.
   [Akbar, Muhammad Azeem] Lappeenranta Univ Technol, Dept Informat Technol, Lappeenranta, Finland.
   [Mahmood, Sajjad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
   [Alsanad, Ahmed; Alothaim, Abdulrahman] King Saud Univ, Coll Comp & Informat Sci, Dept Informat Syst, STCs Artificial Intelligence Chair, Riyadh 11451, Saudi Arabia.
C3 University of Murcia; Lappeenranta-Lahti University of Technology LUT;
   King Fahd University of Petroleum & Minerals; King Saud University
RP Rafi, S (corresponding author), Univ Murcia, Dept Informat & Syst, Murcia 30100, Spain.; Alsanad, A (corresponding author), King Saud Univ, Coll Comp & Informat Sci, Dept Informat Syst, STCs Artificial Intelligence Chair, Riyadh 11451, Saudi Arabia.
EM saeem112@yahoo.com; aasanad@ksu.edu.sa
RI AlSanad, Ahmed/GSE-3705-2022; Mahmood, Sajjad/B-2295-2010
OI Mahmood, Sajjad/0000-0001-5786-5118; Alothaim,
   Abdulrahman/0000-0001-6794-5701
FU Deanship of Scientific Research, King Saud University
FX Deanship of Scientific Research, King Saud University
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Agarwal A, 2017, Jindal J Business Res, V6, P44
   Akbar MA, 2019, J COMPUT LANG, V51, P112, DOI 10.1016/j.cola.2018.12.005
   Akbar MA, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1633, DOI 10.1145/3297280.3297656
   Akbar MA, 2019, IEEE ACCESS, V7, P76985, DOI 10.1109/ACCESS.2019.2918552
   Angara J, 2017, INDIAN J SCI TECHNOL, V9, P1
   [Anonymous], 2011, FUZZY SET THEORY ITS
   [Anonymous], 1977, INTERPRETIVE STRUCTU
   Attri R, 2013, INT J SYST ASSUR ENG, V4, P365, DOI 10.1007/s13198-012-0122-9
   Beikkhakhian Y, 2015, EXPERT SYST APPL, V42, P6224, DOI 10.1016/j.eswa.2015.02.035
   Bolscher R, 2019, ICSOFT: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P27, DOI 10.5220/0007837000270039
   Bozbura FT, 2007, EXPERT SYST APPL, V32, P1100, DOI 10.1016/j.eswa.2006.02.006
   Chen TY, 2008, FUZZY SET SYST, V159, P1410, DOI 10.1016/j.fss.2007.11.004
   Clokie K., 2017, PRACTICAL GUIDE TEST
   Cruzes DS, 2019, LECT NOTES COMPUT SC, V11622, P442, DOI 10.1007/978-3-030-24305-0_33
   Forsgren N., 2019, Accelerate State of DevOps Report
   Garousi V, 2019, SOFTWARE QUAL J, V27, P429, DOI 10.1007/s11219-018-9419-5
   Gill AQ, 2018, VINE J INF KNOWL MAN, V48, P122, DOI 10.1108/VJIKMS-02-2017-0007
   Hornbeek, 2017, DEVOPS GRAY, V1, P11
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   Kannan G, 2009, RESOUR CONSERV RECY, V54, P28, DOI 10.1016/j.resconrec.2009.06.004
   Khan AA, 2017, IEEE ACCESS, V5, P13720, DOI 10.1109/ACCESS.2017.2728603
   Krohling RA, 2011, EXPERT SYST APPL, V38, P4190, DOI 10.1016/j.eswa.2010.09.081
   Kumar DT, 2014, RESOUR CONSERV RECY, V92, P268, DOI 10.1016/j.resconrec.2014.02.005
   Lawrence J., 2013, Electronic Journal of Business Research Methods, V11, P29, DOI DOI 10.1080/10548408.2014.883346
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Linaker J., 2015, Guidelines for Conducting Surveys in Software Engineering
   Lunsford T., 1995, JPO: Journal of Prosthetics and Orthotics, V7, p17A
   Maroukian K, 2020, Leading DevOps practice and principle adoption, P41, DOI [10.5121/csit.2020.100504, DOI 10.5121/CSIT.2020.100504]
   Niazi M, 2005, J SYST SOFTWARE, V78, P204, DOI 10.1016/j.jss.2004.09.001
   Niazi M, 2007, LECT NOTES COMPUT SC, V4589, P96
   Perera P, 2016, INT CONF ADV ICT, P281, DOI 10.1109/ICTER.2016.7829932
   Pietrantuono R, 2016, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE.2016.50
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Rafi Saima, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P413, DOI 10.1145/3383219.3383278
   Rafi Saima, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P457, DOI 10.1145/3383219.3383285
   Raj Tilak, 2011, International Journal of Productivity and Quality Management, V8, P153, DOI 10.1504/IJPQM.2011.041844
   Ravi V, 2005, TECHNOL FORECAST SOC, V72, P1011, DOI 10.1016/j.techfore.2004.07.002
   SHARMA HD, 1995, TECHNOL FORECAST SOC, V48, P285, DOI 10.1016/0040-1625(94)00066-6
   Soni M, 2016, IEEE CONF CLOUD COMP, P85, DOI 10.1109/CCEM.2015.29
   Stauss A.L., 1990, BASICS QUALITATIVE R
   VELLEMAN PF, 1993, AM STAT, V47, P65, DOI 10.2307/2684788
   Verona J., 2018, PRACTICAL DEVOPS IMP
   Yang JL, 2008, INFORM SCIENCES, V178, P4166, DOI 10.1016/j.ins.2008.06.003
   YOON KS, 1985, INT J PROD RES, V23, P345, DOI 10.1080/00207548508904712
   Zimmerer P, 2018, PROC IEEE ACM INT C, P532, DOI 10.1145/3183440.3183465
NR 46
TC 8
Z9 8
U1 7
U2 23
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2022
VL 34
IS 5
AR e2448
DI 10.1002/smr.2448
EA MAR 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0X1KN
UT WOS:000766836400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Da Silva, L
   Borba, P
   Pires, A
AF Da Silva, Leuson
   Borba, Paulo
   Pires, Arthur
TI Build conflicts in the wild
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE broken builds; build conflicts; code integration; conflicting
   contribution
ID CONTINUOUS INTEGRATION; SOFTWARE-DEVELOPMENT; PREDICT
AB When collaborating, developers often create and change software artifacts without being fully aware of team members' work. While such independence is essential for increasing development productivity, it might also result in conflicts when integrating developers' contributions. To better understand the conflicts revealed by failures when building integrated code, we investigate their frequency and structure and adopted resolution patterns in 451 open-source Java projects. To detect such build conflicts, we select merge scenarios from git repositories, parse their Travis build logs, and check whether the build error messages are related to the merged changes. We find and classify 239 build conflicts and their resolution patterns. Most build conflicts are caused by missing declarations removed or renamed by one developer but referenced by another developer. Conflicts caused by renaming are often resolved by updating the missing reference, whereas removed declarations are often reintroduced. Most fix commits are authored by one of the merge scenario contributors. Based on our catalogue of conflict causes, awareness tools could alert developers about the risk of conflict situations. Program repair tools could benefit from our catalogue of resolution patterns to automatically fix conflicts; we illustrate that with a proof of concept implementation of a tool that fixes conflicts.
C1 [Da Silva, Leuson; Borba, Paulo; Pires, Arthur] Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco
RP Da Silva, L (corresponding author), Univ Fed Pernambuco, Recife, PE, Brazil.
EM lmps2@cin.ufpe.br
OI Da Silva, Leuson/0000-0002-9086-9038; Borba, Paulo/0000-0002-0381-2843
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico;
   Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior; Fundacao de
   Amparo a Ciencia e Tecnologia do Estado de Pernambuco; INES; CNPq
   [465614/2014-0]; CAPES [88887.136410/2017-00]; FACEPE [APQ-0399-1.03/17,
   IBPG0692-1.03/17]; PRONEX [APQ/0388-1.03/14]
FX Conselho Nacional de Desenvolvimento Cientifico e Tecnologico;
   Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior; Fundacao de
   Amparo a Ciencia e Tecnologia do Estado de Pernambuco; INES; CNPq,
   Grant/Award Number: 465614/2014-0; CAPES, Grant/Award Number:
   88887.136410/2017-00; FACEPE, Grant/Award Numbers: APQ-0399-1.03/17,
   IBPG0692-1.03/17; PRONEX, Grant/Award Number: APQ/0388-1.03/14
CR Accioly P, 2018, EMPIR SOFTW ENG, V23, P2051, DOI 10.1007/s10664-017-9586-1
   Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Bird C, 2012, P ACM SIGSOFT 20 INT, P1
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Brun Y, 2013, IEEE T SOFTWARE ENG, V39, P1358, DOI 10.1109/TSE.2013.28
   Cavalcanti G, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1002, DOI 10.1109/ASE.2019.00097
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   Cavalcanti G, 2015, INT SYMP EMP SOFTWAR, P267, DOI 10.1109/ESEM.2015.7321191
   Chacon S, 2014, PRO GIT, DOI DOI 10.1007/978-1-4842-0076-6
   Da Silva L, 2020, PROC IEEE INT CONF S, P174, DOI 10.1109/ICSME46990.2020.00026
   Danhua Shao, 2007, 2007 IEEE International Conference on Software Maintenance, P74
   DaSilva L., ONLINE APPENDIX
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   Dias K, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106256
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fowler M, 2017, Feature toggle
   Fowler Martin., 2009, Feature Branch
   Ghaleb TA., 2019, STUDYING IMPACT NOIS, V1
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Grinter R. E., 1996, Computer Supported Cooperative Work (CSCW), V5, P447, DOI 10.1007/BF00136714
   Hassan AE, 2006, IEEE INT CONF AUTOM, P189
   Henderson F., 2017, ARXIV PREPRINT ARXIV
   Herzig K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P39, DOI 10.1109/ICSE.2015.133
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Hodgson P, 2017, Feature branching vs. feature flags: What's the right tool for the job?
   Hodgson P, 2017, Feature toggles (aka Feature Flags)
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Kerzazi N, 2014, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2014.26
   Labuschagne A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P821, DOI 10.1145/3106237.3106288
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Lessenich O, 2018, AUTOMAT SOFTW ENG, V25, P279, DOI 10.1007/s10515-017-0227-0
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   Potvin R, 2016, COMMUN ACM, V59, P78, DOI 10.1145/2854146
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Rocha T, 2019, J SYST SOFTWARE, V154, P176, DOI 10.1016/j.jss.2019.04.060
   Rodríguez-Pérez G, 2020, EMPIR SOFTW ENG, V25, P1294, DOI 10.1007/s10664-019-09781-y
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Sung CH, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P172, DOI 10.1145/3377813.3381362
   van der Veen E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P357, DOI 10.1109/MSR.2015.40
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vasilescu B, 2014, PROC IEEE INT CONF S, P401, DOI 10.1109/ICSME.2014.62
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P2218, DOI 10.1007/s10664-019-09765-y
   Vassallo C, 2017, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2017.67
   Xu SZ, 2019, INT C PROGRAM COMPRE, P335, DOI 10.1109/ICPC.2019.00052
   Zampetti F, 2020, EMPIR SOFTW ENG, V25, P1095, DOI 10.1007/s10664-019-09785-8
   Zampetti F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P38, DOI [10.1109/SANER.2019.8667996, 10.1109/saner.2019.8667996]
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Zimmermann T., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, Washington, DC, USA, P11, DOI DOI 10.1109/MSR.2007.22
NR 57
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2022
VL 34
IS 4
AR e2441
DI 10.1002/smr.2441
EA MAR 2022
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0G9RF
UT WOS:000765709700001
DA 2024-07-18
ER

PT J
AU John, MM
   Olsson, HH
   Bosch, J
AF John, Meenu Mary
   Olsson, Helena Holmstrom
   Bosch, Jan
TI Towards an AI-driven business development framework: A multi-case study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE AI-driven business development framework; artificial intelligence;
   challenges; deep learning; iterations and triggers; machine learning
AB Artificial intelligence (AI) and the use of machine learning (ML) and deep learning (DL) technologies are becoming increasingly popular in companies. These technologies enable companies to leverage big quantities of data to improve system performance and accelerate business development. However, despite the appeal of ML/DL, there is a lack of systematic and structured methods and processes to help data scientists and other company roles and functions to develop, deploy and evolve models. In this paper, based on multi-case study research in six companies, we explore practices and challenges practitioners experience in developing ML/DL models as part of large software-intensive embedded systems. Based on our empirical findings, we derive a conceptual framework in which we identify three high-level activities that companies perform in parallel with the development, deployment and evolution of models. Within this framework, we outline activities, iterations and triggers that optimize model design as well as roles and company functions. In this way, we provide practitioners with a blueprint for effectively integrating ML/DL model development into the business to achieve better results than other (algorithmic) approaches. In addition, we show how this framework helps companies solve the challenges we have identified and discuss checkpoints for terminating the business case.
C1 [John, Meenu Mary; Olsson, Helena Holmstrom] Malmo Univ, Dept Comp Sci & Media Technol, Malmo, Sweden.
   [Bosch, Jan] Chalmers Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
C3 Malmo University; Chalmers University of Technology
RP John, MM (corresponding author), Malmo Univ, Dept Comp Sci & Media Technol, Malmo, Sweden.
EM meenu-mary.john@mau.se
RI Olsson, Helena H/H-2193-2014
FU Software Center
FX Software Center
CR Alla S., 2021, BEGINNING MLOPS MLFL, P79, DOI [10.1007/978-1-4842-6549-9_3, DOI 10.1007/978-1-4842-6549-9_3]
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2016, What's your ML Test Score? A rubric for ML production systems
   [Anonymous], 2007, An Approach to Software Testing of Machine Learning Applications', DOI 10.1.1.103.3244
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   Ashmore R., 2019, ARXIV PREPRINT ARXIV
   Bengio Y, 2000, ADV NEUR IN, V12, P400
   Bengio Yoshua, 2012, P ICML WORKSH UNS TR, P17
   Bopp C, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P3608, DOI 10.1145/3025453.3025694
   Bosch J., 2018, SIBW, P177
   BOSCH J, 2019, DIGITAL TRANSFORMATI
   Dahlmeier D, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 2, P92, DOI 10.18653/v1/P17-2015
   Dean Jeffrey, 2012, Large scale distributed deep networks. Proceedings of the 25th International Conference on Neural Information Processing Systems. The Organization. December 38, Stateline
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Efrati Amir, 2017, DEEP LEARNING WORKS
   Erich F, 2014, LECT NOTES COMPUT SC, V8892, P277, DOI 10.1007/978-3-319-13835-0_21
   Fayyad U, 1996, COMMUN ACM, V39, P27, DOI 10.1145/240455.240464
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Hazelwood K, 2018, INT S HIGH PERF COMP, P620, DOI 10.1109/HPCA.2018.00059
   Hill C, 2016, S VIS LANG HUM CEN C, P162, DOI 10.1109/VLHCC.2016.7739680
   Hirt R., 2017, DESIGNING DIGITAL TR, P55
   Holton JA, 2010, GROUNDED THEORY REV, V9, P21
   John MM, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P1, DOI [10.1145/3379177.3388892, 10.1109/IRMMW-THz46771.2020.9370765]
   Johnson KE, 1996, MOD LANG J, V80, P556, DOI 10.2307/329758
   Jones N, 2014, NATURE, V505, P146, DOI 10.1038/505146a
   Jordan MI, 2015, SCIENCE, V349, P255, DOI 10.1126/science.aaa8415
   Kanewala U, 2014, INFORM SOFTWARE TECH, V56, P1219, DOI 10.1016/j.infsof.2014.05.006
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lwakatare LE, 2019, LECT NOTES BUS INF P, V355, P227, DOI 10.1007/978-3-030-19034-7_14
   Lwakatare LE, 2019, INFORM SOFTWARE TECH, V114, P217, DOI 10.1016/j.infsof.2019.06.010
   Lwakatare LE, 2016, P ANN HICSS, P5437, DOI 10.1109/HICSS.2016.671
   Makinen S., 2021, Who needs mlops: What data scientists seek to accomplish and how can mlops help?
   Mitchell TM, 1997, AI MAG, V18, P11
   Muller M, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300356
   Munappy AR, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P165, DOI 10.1145/3379177.3388909
   Olsson HH, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2249
   Patel K, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P667
   Patel Kayur., 2008, AAAI, P1563
   Penners R., 2015, FULL SCALE SOFTW ENG, P49
   Radford A., 2015, ARXIV
   Rana Rakesh, 2014, Proceedings of the 9th International Conference on Software Engineering and Applications ICSOFT-EA 2014, P383
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salvaris M, 2018, DEEP LEARNING AZURE, P79, DOI [10.1007/978-1-4842-3679-6_4, DOI 10.1007/978-1-4842-3679-6]
   Schmidhuber J, 2015, NEURAL NETWORKS, V61, P85, DOI 10.1016/j.neunet.2014.09.003
   Sculley D, 2015, ADV NEUR IN, V28
   Sculley D., 2014, MACHINE LEARNING HIG
   Stahl Daniel, 2017, 2017 43rd Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P440, DOI 10.1109/SEAA.2017.8114695
   Tamburri DA, 2020, INT SYMP SYMB NUMERI, P17, DOI 10.1109/SYNASC51798.2020.00015
   WALSHAM G, 1995, EUR J INFORM SYST, V4, P74, DOI 10.1057/ejis.1995.9
   Wang D, 2019, PHYS REV MATER, V3, DOI 10.1103/PhysRevMaterials.3.083803
   Wilson V, 2014, EVID BASED LIB INF P, V9, P74, DOI 10.18438/B8WW3X
   Wirth R., 2000, Proceedings of the Fourth International Conference on the Practical Application of Knowledge Discovery and Data Mining, P29
   Yang Q, 2018, DIS 2018: PROCEEDINGS OF THE 2018 DESIGNING INTERACTIVE SYSTEMS CONFERENCE, P573, DOI 10.1145/3196709.3196729
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
NR 54
TC 6
Z9 6
U1 3
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2023
VL 35
IS 6
SI SI
AR e2432
DI 10.1002/smr.2432
EA FEB 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H9OB6
UT WOS:000760593100001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Lonetti, F
   Neves, VD
   Bertolino, A
AF Lonetti, Francesca
   Neves, Vania de Oliveira
   Bertolino, Antonia
TI Designing and testing systems of systems: From variability models to
   test cases passing through desirability assessment
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE design; software product line; system of systems; test case generation;
   testing; variability model
ID SOFTWARE PRODUCT LINES; DECISIONS
AB In the early stages of a system of systems (SoS) conception, several constituent systems could be available that provide similar functionalities. An SoS design methodology should provide adequate means to model variability in order to support the opportunistic selection of the most desirable SoS configuration. We propose the VANTESS approach that (i) supports SoS modeling taking into account the variation points implied by the considered constituent systems; (ii) includes a heuristics to weight benefits and costs of potential architectural choices (called as SoS variants) for the selection of the constituent systems; and finally (iii) also helps test planning for the selected SoS variant by deriving a simulation model on which test objectives and scenarios can be devised. We illustrate an application example of VANTESS to the "educational" SoS and discuss its pros and cons within a focus group.
C1 [Lonetti, Francesca; Bertolino, Antonia] CNR, Inst Informat Sci & Technol A Faedo, Pisa, Italy.
   [Neves, Vania de Oliveira] Univ Fed Fluminense, Niteroi, RJ, Brazil.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); Universidade
   Federal Fluminense
RP Lonetti, F (corresponding author), CNR, Inst Informat Sci & Technol A Faedo, Pisa, Italy.
EM francesca.lonetti@isti.cnr.it
RI Bertolino, Antonia/ABD-6837-2020; Neves, Vânia/H-4957-2015
OI Bertolino, Antonia/0000-0001-8749-1356; Neves, Vania/0000-0003-4648-2263
FU Italian MIUR PRIN [201752ENYB]
FX Italian MIUR PRIN 2017 Project, Grant/Award Number: SISMA (Contract
   201752ENYB)
CR Bertolino Antonia, 2020, 2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW), P209, DOI 10.1109/ISSREW51248.2020.00074
   Bertolino A, 2020, 2020 IEEE 15TH INTERNATIONAL CONFERENCE OF SYSTEM OF SYSTEMS ENGINEERING (SOSE 2020), P205, DOI [10.1109/SoSE50414.2020.9130551, 10.1109/sose50414.2020.9130551]
   Bertolino A, 2019, IEEE INT SYMP SOFTW, P144, DOI 10.1109/ISSREW.2019.00064
   Botterweck G, 2013, ELECTRON P THEOR COM, P8, DOI 10.4204/EPTCS.133.2
   Brooks J, 2015, QUAL RES PSYCHOL, V12, P202, DOI 10.1080/14780887.2014.955224
   Cassell C., 2004, Essential Guide to Qualitative Methods in Organizational Research, DOI DOI 10.4135/9781446280119.N21
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Cherfa I, 2019, SYSTEMS ENG, V22, P437, DOI 10.1002/sys.21523
   Dahmann JS, 2008, 2008 2ND ANNUAL IEEE SYSTEMS CONFERENCE, P133
   DeLaurentis DA, 2005, IEEE SYS MAN CYBERN, P86
   Devroey X, 2017, SOFTW SYST MODEL, V16, P153, DOI 10.1007/s10270-015-0479-8
   Edmunds H., 2000, FOCUS GROUP RES HDB
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Galindo JA, 2016, SOFTWARE QUAL J, V24, P365, DOI 10.1007/s11219-014-9258-y
   Guest G., 2011, sage publications
   Hajri I, 2020, EMPIR SOFTW ENG, V25, P3711, DOI 10.1007/s10664-020-09853-4
   Hajri I, 2018, J SYST SOFTWARE, V139, P211, DOI 10.1016/j.jss.2018.02.021
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Hess J. T., 2010, 2010 5 INT C SYST EN, P1
   Jamshidi M, 2009, IEEE INTL CONF IND I, P1, DOI 10.1109/INDIN.2009.5195772
   Kamsties E, 2004, LECT NOTES COMPUT SC, V3014, P6
   Kang Kyo C, 1990, Technical Report
   Karakashian Shant., 2010, Tree-Based Algorithms for Computing k-Combinations and k-Compositions
   Kazman R, 2001, PROC INT CONF SOFTW, P297, DOI 10.1109/ICSE.2001.919103
   King N., 2018, Qualitative methodologies in organization studies, P179, DOI DOI 10.1007/978-3-319-65442-3_8
   Klein J., 2012, Proceedings of the 2012 IEEE Second Workshop on Requirements Engineering for Systems, Services and Systems-of-Systems (RES4), P30, DOI 10.1109/RES4.2012.6347693
   Kontio J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P271
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Lana CA, 2019, IEEE SYST J, V13, P2201, DOI 10.1109/JSYST.2018.2874061
   Lane J., 2009, 7 ANN C SYST ENG RES, P1
   Liang TY, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON MECHATRONICS AND AUTOMATION, VOLS 1-7, CONFERENCE PROCEEDINGS, P3010, DOI 10.1109/ICMA.2009.5245999
   Lock R, 2010, IEEE INT C ENG COMP, P224, DOI [10.1109/ICECCS.2010.31, 10.1109/ICECCS.2010.40]
   Luna S, 2013, PROCEDIA COMPUT SCI, V20, P298, DOI 10.1016/j.procs.2013.09.276
   Manzano W, 2020, COMPUT J, V63, P709, DOI 10.1093/comjnl/bxz028
   Moore M, 2003, PROC INT CONF SOFTW, P557, DOI 10.1109/ICSE.2003.1201237
   Mori M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1878
   Ncube C, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.153
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Nebut C, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85, DOI 10.1109/ISSRE.2003.1251033
   Nebut C., 2002, P INT WORKSH REQ ENG, P51
   Nebut C., 2006, Software Product Lines, P447
   Neves VD, 2018, 2018 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS (SESOS 2018), P29, DOI 10.1145/3194754.3194758
   Nielsen CB, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2794381
   OMG, 2012, SYST MOD LANG SYSML
   Oquendo F, 2016, IEEE INT C ENG COMP, P13, DOI [10.1109/ICECCS.2016.35, 10.1109/ICECCS.2016.012]
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Petry KL, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110608
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Raatikainen M, 2019, J SYST SOFTWARE, V149, P485, DOI 10.1016/j.jss.2018.12.027
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Santos IS, 2014, 2014 EIGHTH BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES AND REUSE (SBCARS), P64, DOI 10.1109/SBCARS.2014.16
   Scanniello G., 2016, 31 ANN ACM S APPL CO, P1422
   Silva E, 2016, IEEE INT C ENG COMP, P201, DOI [10.1109/ICECCS.2016.034, 10.1109/ICECCS.2016.40]
   Silva E, 2015, 2015 10th System of Systems Engineering Conference (SoSE), P346, DOI 10.1109/SYSOSE.2015.7151951
   Temple P, 2021, IEEE T SOFTWARE ENG, V47, P1511, DOI 10.1109/TSE.2019.2926971
   United States Departement of Defence, 2008, SYST ENG GUID SYST S
   Viana T, 2017, INT REQUIR ENG CONF, P436, DOI 10.1109/RE.2017.48
   von der MaSSen T., 2002, Proceedings of the International Workshop on Requirements Engineering for Product Lines, P19
   Zapata F, 2013, PROCEDIA COMPUT SCI, V20, P256, DOI 10.1016/j.procs.2013.09.270
NR 59
TC 4
Z9 4
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2022
VL 34
IS 10
SI SI
AR e2427
DI 10.1002/smr.2427
EA JAN 2022
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5A6PE
UT WOS:000744435600001
DA 2024-07-18
ER

PT J
AU Kulczynski, M
   Manea, F
   Nowotka, D
   Poulsen, DB
AF Kulczynski, Mitja
   Manea, Florin
   Nowotka, Dirk
   Poulsen, Danny Bogsted
TI ZaligVinder: A generic test framework for string solvers
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE analysis of string solvers; string solving benchmarks; test framework
   for string solvers
ID MODULO THEORIES; SMT SOLVER; EQUATIONS
AB The increased interest in string solving in the recent years has made it very hard to identify the right tool to address a particular user's purpose. Firstly, there is a multitude of string solvers, each addressing essentially some subset of the general problem. Generally, the addressed fragments are relevant and well motivated, but the lack of comparisons between the existing tools on an equal set of benchmarks cannot go unnoticed, especially as a common framework to compare solvers seems to be missing. In this paper, we gather a set of relevant benchmarks and introduce our new benchmarking framework to address this purpose.
C1 [Kulczynski, Mitja; Nowotka, Dirk] Univ Kiel, Dept Comp Sci, Kiel, Germany.
   [Manea, Florin] Univ Gottingen, Dept Comp Sci, Gottingen, Germany.
   [Poulsen, Danny Bogsted] Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
C3 University of Kiel; University of Gottingen; Aalborg University
RP Kulczynski, M (corresponding author), Univ Kiel, Dept Comp Sci, Kiel, Germany.
EM mku@informatik.uni-kiel.de
OI Kulczynski, Mitja/0000-0003-4650-1110; Poulsen, Danny
   Bogsted/0000-0001-9623-0748
CR Abdulla PA, 2015, LECT NOTES COMPUT SC, V9206, P462, DOI 10.1007/978-3-319-21690-4_29
   Abdulla PA, 2014, LECT NOTES COMPUT SC, V8559, P150, DOI 10.1007/978-3-319-08867-9_10
   Allen D., ASCIIDOCTOR
   Amadini R., 2020, SURVEY STRING CONSTR
   Aydin A, 2015, LECT NOTES COMPUT SC, V9206, P255, DOI 10.1007/978-3-319-21690-4_15
   Ball T., 2014, P MARKTOBERDORF SUMM
   Ball T, 2015, NATO SCI PEAC SECUR, V40, P26, DOI 10.3233/978-1-61499-495-4-26
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C., 2010, P 8 INT WORKSHOP SAT, V13, P14
   Berzish M, 2021, LECT NOTES COMPUT SC, V12760, P289, DOI 10.1007/978-3-030-81688-9_14
   Berzish M, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P55, DOI 10.23919/FMCAD.2017.8102241
   Berzish Murphy, 2021, Z3STR4 SOLVER THEORI
   Blotsky D, 2018, LECT NOTES COMPUT SC, V10982, P45, DOI 10.1007/978-3-319-96142-2_6
   Brennan T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/3106237.3106303
   Chen T., 2014, CONPY CONCOLIC EXECU, P150
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   Day Joel D., 2019, Reachability Problems. 13th International Conference, RP 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11674), P93, DOI 10.1007/978-3-030-30806-3_8
   Day JD., 2020, P FORM IEEE
   Day JD, 2018, LECT NOTES COMPUT SC, V11123, P15, DOI 10.1007/978-3-030-00250-3_2
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   Diep B.P., 2018, 2018 FORM METH COMP, P1, DOI [DOI 10.23919/FMCAD.2018.8602997, 10.23919/FMCAD, DOI 10.23919/FMCAD]
   Holík L, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158092
   Kausler Scott., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P259
   Kiezun A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P105
   Kordon Fabrice, 2014, 2014 14th International Conference on Application of Concurrency to System Design, P159, DOI 10.1109/ACSD.2014.12
   Kulczynski M, 2020, INT WORKSH AUTOMAT, P85, DOI 10.1145/3387903.3389317
   Liang TY, 2016, FORM METHOD SYST DES, V48, P206, DOI 10.1007/s10703-016-0247-6
   Lin AW, 2016, ACM SIGPLAN NOTICES, V51, P123, DOI 10.1145/2914770.2837641
   Luu L, 2014, ACM SIGPLAN NOTICES, V49, P565, DOI [10.1145/2666356.2594331, 10.1145/2594291.2594331]
   MAKANIN GS, 1977, MATH USSR SB+, V32, P129, DOI 10.1070/SM1977v032n02ABEH002376
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Reynolds A, 2017, LECT NOTES COMPUT SC, V10427, P453, DOI 10.1007/978-3-319-63390-9_24
   Saxena P., KALUZA WEB SITE WEBB
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Scott J., 2020, BANDITFUZZ REI NFORC
   Tateishi T, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522926
   Thom├a┬ J., 2018, INTEGRATED APPROACH
   Tinelli C., SATISFIABILITY MODUL
   Toullalan, 2021, COMMUN ACM
   Yu F, 2010, LECT NOTES COMPUT SC, V6015, P154
   Zheng YH, 2017, FORM METHOD SYST DES, V50, P249, DOI 10.1007/s10703-016-0263-6
   Zheng Yunhui, 2013, P 9 JOINT M FDN SOFT, P114, DOI [10.1145/2491411.2491456, DOI 10.1145/2491411.2491456]
NR 42
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2023
VL 35
IS 4
SI SI
AR e2400
DI 10.1002/smr.2400
EA OCT 2021
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C5JV0
UT WOS:000712093700001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Gujral, H
   Lal, S
   Li, H
AF Gujral, Harshit
   Lal, Sangeeta
   Li, Heng
TI An exploratory semantic analysis of logging questions
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE empirical software engineering; logging; mining software repositories;
   software maintenance; stack overflow; technical Q&A websites
ID REPLICATION
AB Logging is an integral part of software development. Software practitioners often face issues in software logging, and they post these issues on Q&A websites to take suggestions from the experts. In this study, we perform a three-level empirical analysis of logging questions posted on six popular technical Q&A websites, namely, Stack Overflow (SO), Serverfault (SF), Superuser (SU), Database Administrators (DB), Software Engineering (SE), and Android Enthusiasts (AE). The findings show that logging issues are prevalent across various domains, for example, database, networks, and mobile computing, and software practitioners from different domains face different logging issues. The semantic analysis of logging questions using Latent Dirichlet Allocation (LDA) reveals trends of several existing and new logging topics, such as logging conversion pattern, Android device logging, and database logging. In addition, we observe specific logging topics for each website: DB (log shipping and log file growing/shrinking), SU (event log and syslog configuration), SF (log analysis and syslog configuration), AE (app install and usage tracking), SE (client server logging and exception logging), and SO (log file creation/deletion, Android emulator logging, and logger class of Log4j). We obtain an increasing trend of logging topics on the SO, SU, and DB websites whereas a decreasing trend of logging topics on the SF website.
C1 [Gujral, Harshit] Jaypee Inst Informat Technol, Dept Comp Sci Engn & Informat Technol, Noida, India.
   [Lal, Sangeeta] Keele Univ, Sch Comp & Math, Data Sci, Keele, Staffs, England.
   [Li, Heng] Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ, Canada.
C3 Jaypee Institute of Information Technology (JIIT); Keele University;
   Universite de Montreal; Polytechnique Montreal
RP Gujral, H (corresponding author), Jaypee Inst Informat Technol, Dept Comp Sci Engn & Informat Technol, Noida, India.
EM harshitgujral12@gmail.com
RI Gujral, Harshit/AAN-3643-2021
OI Gujral, Harshit/0000-0001-5152-1971
CR [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Beyer S, 2014, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSME.2014.88
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Chowdhury S, 2018, EMPIR SOFTW ENG, V23, P1422, DOI 10.1007/s10664-017-9545-x
   Correa D, 2013, ASIA PAC SOFWR ENG, P25, DOI 10.1109/APSEC.2013.15
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   De Lucia A, 2014, EMPIR SOFTW ENG, V19, P1383, DOI 10.1007/s10664-013-9285-5
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Geeks JC., LOG4J CONVERSION PAT
   Gómez C, 2013, IEEE WORK CONF MIN S, P81, DOI 10.1109/MSR.2013.6624011
   Gujral H, 2019, E-INFORMATICA, V13, P105, DOI 10.5277/e-Inf190104
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P479, DOI 10.1007/s10664-014-9312-1
   Jia ZY, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P61, DOI 10.1109/SANER.2018.8330197
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Kabinna S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P326, DOI 10.1109/SANER.2016.29
   Lal, 2018, 11 INT C CONT COMP I, P1
   Lal Sangeeta, 2016, International Journal of Open Source Software and Processes, V7, P43, DOI 10.4018/IJOSSP.2016040103
   Lal Sangeeta, 2015, International Journal of Open Source Software and Processes, V6, P49, DOI 10.4018/IJOSSP.2015010104
   Lal S, 2017, E-INFORMATICA, V11, P7, DOI 10.5277/e-Inf170101
   Lal S, 2016, PROCEEDINGS OF THE 9TH INDIA SOFTWARE ENGINEERING CONFERENCE, P151, DOI 10.1145/2856636.2856637
   Lal S, 2016, P INT COMP SOFTW APP, P215, DOI 10.1109/COMPSAC.2016.149
   Lawrie D, UNDERSTANDING LDA SO
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Malik H, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P418, DOI 10.1109/MSR.2015.53
   Nagy C, 2015, PROC IEEE INT CONF S, P516, DOI 10.1109/ICSM.2015.7332505
   Pagano D, 2013, EMPIR SOFTW ENG, V18, P1090, DOI 10.1007/s10664-012-9211-2
   Pinto Gustavo., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P22
   Qin D, 2017, PROC VLDB ENDOW, V10, P2025, DOI 10.14778/3151106.3151107
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Stack Exchange Community, SOFTW ENG HOM PAG
   Stack Exchange Community, STACK HOM PAG
   Stack Exchange Community, SERV STACK EXCH HOM
   Stack Exchange Community, DAT ADM STACK EXCH H
   Stack Exchange Community, ANDR ENTH HOM PAG
   Stack Exchange Community, SUP STACK EXCH HOM P
   Thomas SW, 2014, SCI COMPUT PROGRAM, V80, P457, DOI 10.1016/j.scico.2012.08.003
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   TIOBE, TIOBE IND JAN 2018
   Wang TZ, 2017, PROC VLDB ENDOW, V11, P406, DOI 10.1145/3164135.3164137
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Yuan D., 2012, Be conservative: Enhancing failure diagnosis with proactive logging, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110360
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Zeng Y, 2019, EMPIR SOFTW ENG, V24, P3394, DOI 10.1007/s10664-019-09687-9
   Zheng RogerLQ., 2018, LOG SHIPPING DATA RE
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 55
TC 1
Z9 1
U1 2
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2021
VL 33
IS 7
AR e2361
DI 10.1002/smr.2361
EA JUN 2021
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TC5NN
UT WOS:000662056400001
DA 2024-07-18
ER

PT J
AU Paul, TK
   Chowdhury, MJM
   Lau, MF
AF Paul, T. K.
   Chowdhury, M. J. M.
   Lau, M. F.
TI A new disjunctive literal insertion fault detection strategy in boolean
   specifications
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Boolean expressions; disjunctive literal insertion fault; fault&#8208;
   based testing; software testing
AB In fault-based Boolean expression testing, the main challenge is to generate effective test cases that can detect faults within expressions. Previous studies show that it is hard to detect literal insertion faults, more specifically Disjunctive literal insertion fault (LIF[+]) compared with other faults in Boolean expressions. Researchers have been using different strategies such as multiple near false point coverage (MNFP) and modified condition decision coverage (MCDC) to detect LIF[+] faults. However, these strategies have their own limitations. For example, MNFP can only be applied when the expression is in irredundant disjunctive normal form (IDNF), and MCDC detects a low percentage of LIF[+] faults. In this paper, we propose an abstract syntax tree (AST)-based test case generation strategy for LIF[+] fault detection that overcomes these limitations. Furthermore, our experimental results indicate that, on average, the test suites satisfying the proposed strategy can detect approximately 97.3% of LIF[+] faults for general form expressions and 89.7% of LIF[+] faults for IDNF expressions, which are 15.6% and 13.8% improvement, respectively, compared to the MCDC test suites. Moreover, the size of the required test suite is smaller than that of MCDC test suite.
C1 [Paul, T. K.; Lau, M. F.] Swinbume Univ Technol, Sch Software & Elect Engn, Hawthorn, Vic 3122, Australia.
   [Chowdhury, M. J. M.] La Trobe Univ, Sch Engn & Math Sci, Bundoora, Vic 3086, Australia.
C3 Swinburne University of Technology; La Trobe University
RP Paul, TK (corresponding author), Swinbume Univ Technol, Sch Software & Elect Engn, Hawthorn, Vic 3122, Australia.
EM tpaul@swin.edu.au
RI Chowdhury, Jabed/AAD-6940-2019
OI Chowdhury, Jabed/0000-0003-4476-8882; Paul, Tanay/0000-0002-9226-2766
CR Ayav T, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1641
   Chandra P, 2015, INT J COMPUT APPL T, V52, P29, DOI 10.1504/IJCAT.2015.071417
   Chen TY, 1997, P INT COMP SOFTW APP, P608, DOI 10.1109/CMPSAC.1997.625080
   Chen TY, 1998, 1998 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: EDUCATION & PRACTICE, PROCEEDINGS, P338, DOI 10.1109/SEEP.1998.707668
   Chen ZY, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000797
   Chilenski J.J., 2001, INVESTIGATION 3 FORM
   Elmendorf William R, 1973, CAUSE EFFECT GRAPHS
   Lau MF, 2005, ACM T SOFTW ENG METH, V14, P247, DOI 10.1145/1072997.1072998
   Li D, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P297, DOI 10.1109/QRS-C.2017.131
   Montgomery DC, 2009, Engineering statistics
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Okun V., 2004, SPECIFICATION MUTATI
   Paradkar A, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P106, DOI 10.1109/ISSRE.1995.497649
   Paul TK, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2336
   Paul TK, 2012, INT CONF QUAL SOFTW, P144, DOI 10.1109/QSIC.2012.41
   Paul T.K., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing - SAC'14, P1301
   Paul TK, 2014, INT CONF QUAL SOFTW, P266, DOI 10.1109/QSIC.2014.41
   RICHARDSON DJ, 1993, IEEE T SOFTWARE ENG, V19, P533, DOI 10.1109/32.232020
   RTCA Document, 1992, RTCADO178B RTCA INC
   Singh R.K., 2006, ACM SIGSOFT Software Engineering Notes, V31, P1
   Vilkomir S. A., 2002, ZB 2002: Formal Specification and Development in Z and B. 2nd International Conference of B and Z Users. Proceedings (Lecture Notes in Computer Science Vol.2272), P291
   Vilkomir S, 2017, 2017 IEEE 28TH ANNUAL SOFTWARE TECHNOLOGY CONFERENCE (STC)
   WEYUKER E, 1994, IEEE T SOFTWARE ENG, V20, P353, DOI 10.1109/32.286420
   Yu L, 2018, IEEE T SOFTWARE ENG, V44, P70, DOI 10.1109/TSE.2017.2669184
   YU YT, 2006, J SYST SOFTWARE, V79, P577, DOI DOI 10.1016/J.JSS.2005.05.030
   Yu YT, 2006, J SYST SOFTWARE, V79, P820, DOI 10.1016/j.jss.2005.08.016
NR 26
TC 2
Z9 2
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2021
VL 33
IS 5
AR e2336
DI 10.1002/smr.2336
EA FEB 2021
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RS3JM
UT WOS:000618449000001
DA 2024-07-18
ER

PT J
AU Chen, X
   Mu, YZ
   Qu, YB
   Ni, C
   Liu, M
   He, T
   Liu, SQ
AF Chen, Xiang
   Mu, Yanzhou
   Qu, Yubin
   Ni, Chao
   Liu, Meng
   He, Tong
   Liu, Shangqing
TI Do different cross-project defect prediction methods identify the same
   defective modules?
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE cross-project defect prediction; diversity analysis; empirical study;
   software defect prediction
ID FEATURE-SELECTION; REGRESSION-MODELS; CODE
AB Cross-project defect prediction (CPDP) is needed when the target projects are new projects or the projects have less training data, since these projects do not have sufficient historical data to build high-quality prediction models. The researchers have proposed many CPDP methods, and previous studies have conducted extensive comparisons on the performance of different CPDP methods. However, to the best of our knowledge, it remains unclear whether different CPDP methods can identify the same defective modules, and this issue has not been thoroughly explored. In this article, we select 12 state-of-the-art CPDP methods, including eight supervised methods and four unsupervised methods. We first compare the performance of these methods in the same experiment settings on five widely used datasets (ie, NASA, SOFTLAB, PROMISE, AEEEM, and ReLink) and rank these methods via the Scott-Knott test. Final results confirm the competitiveness of unsupervised methods. Then we perform diversity analysis on defective modules for these methods by using the McNemar test. Empirical results verify that different CPDP methods may lead to difference in the modules predicted as defective, especially when the comparison is performed between the supervised methods and unsupervised methods. Finally, we also find there exist a certain number of defective modules, which cannot be correctly identified by any of the CPDP methods or can be correctly identified by only one CPDP method. These findings can be utilized to design more effective methods to further improve the performance of CPDP.
C1 [Chen, Xiang; Mu, Yanzhou; Liu, Meng; He, Tong] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
   [Mu, Yanzhou] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Chen, Xiang; Ni, Chao] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Qu, Yubin] Jiangsu Coll Engn & Technol, Sch Mech & Elect Engn, Nantong, Peoples R China.
   [Chen, Xiang; Liu, Shangqing] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore, Singapore.
C3 Nantong University; Tianjin University; Nanjing University; Nanyang
   Technological University
RP Chen, X (corresponding author), Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
EM xchencs@ntu.edu.cn
RI Chen, Xiang/AAG-3663-2019
OI Chen, Xiang/0000-0002-1180-3891; qu, yubin/0000-0001-5222-4020; Ni,
   Chao/0000-0002-2906-0598
CR Amasaki S., 2017, P 13 INT C PREDICTIV, P93, DOI [10.1145/3127005.3127015, DOI 10.1145/3127005.3127015]
   Amasaki S, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P32, DOI 10.1145/3273934.3273938
   [Anonymous], 2013, P 9 INT C PRED MOD S, DOI DOI 10.1145/2499393.2499395
   [Anonymous], P AS PAC SOFTW ENG C
   [Anonymous], 2016, P 10 INT S EMP SOFTW
   [Anonymous], 2018, IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2017.2724538
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bennin KE, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P214, DOI 10.1109/QRS.2016.33
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Bettenburg N, 2015, EMPIR SOFTW ENG, V20, P294, DOI 10.1007/s10664-013-9292-6
   Bin Y, 2017, INT SYMP EMP SOFTWAR, P354, DOI 10.1109/ESEM.2017.49
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Chen X, 2019, INFORM SOFTWARE TECH, V106, P161, DOI 10.1016/j.infsof.2018.10.003
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dietterich TG, 1998, NEURAL COMPUT, V10, P1895, DOI 10.1162/089976698300017197
   Fan Y, 2017, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2017.57
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S, 2017, EMPIR SOFTW ENG, V22, P1866, DOI 10.1007/s10664-016-9468-y
   Hosseini S., 2016, P THE 12 INT C PREDI, P1, DOI DOI 10.1145/2972958.2972964
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M., 2010, P 6 INT C PREDICTIVE
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Li ZQ, 2017, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2017.19
   Limsettho N, 2018, INFORM SOFTWARE TECH, V100, P87, DOI 10.1016/j.infsof.2018.04.001
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   Liu SL, 2014, P INT COMP SOFTW APP, P426, DOI 10.1109/COMPSAC.2014.66
   Liu WS, 2016, IEEE T RELIAB, V65, P38, DOI 10.1109/TR.2015.2461676
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Nam J., 2017, IEEE Transactions on Software Engineering, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ni C, 2019, J SYST SOFTWARE, V152, P215, DOI 10.1016/j.jss.2019.03.012
   Ni C, 2017, J COMPUT SCI TECH-CH, V32, P1090, DOI 10.1007/s11390-017-1785-0
   Ni C, 2017, P INT COMP SOFTW APP, P51, DOI 10.1109/COMPSAC.2017.127
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Poon WN, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P434, DOI 10.1109/QRS.2017.53
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Ryu D, 2016, APPL SOFT COMPUT, V49, P1062, DOI 10.1016/j.asoc.2016.04.009
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Ryu D, 2015, J COMPUT SCI TECH-CH, V30, P969, DOI 10.1007/s11390-015-1575-5
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang SY, 2019, IEEE T PATTERN ANAL, V41, P2783, DOI [10.1109/INTMAG.2018.8508542, 10.1109/TNNLS.2017.2771290, 10.1109/TPAMI.2018.2861871]
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Wu F, 2018, IEEE T RELIAB, V67, P581, DOI 10.1109/TR.2018.2804922
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xu Z, 2018, INT C PROGRAM COMPRE, P132, DOI 10.1145/3196321.3196331
   Yang XX, 2018, IEEE T RELIAB, V67, P885, DOI 10.1109/TR.2018.2847353
   Yu Q, 2017, J SYST SOFTWARE, V132, P366, DOI 10.1016/j.jss.2017.06.070
   Zhang D, 2018, 2018 IEEE SMARTWORLD, UBIQUITOUS INTELLIGENCE & COMPUTING, ADVANCED & TRUSTED COMPUTING, SCALABLE COMPUTING & COMMUNICATIONS, CLOUD & BIG DATA COMPUTING, INTERNET OF PEOPLE AND SMART CITY INNOVATION (SMARTWORLD/SCALCOM/UIC/ATC/CBDCOM/IOP/SCI), P1547, DOI 10.1109/SmartWorld.2018.00266
   Zhang F, 2017, EMPIR SOFTW ENG, V22, P3186, DOI 10.1007/s10664-017-9516-2
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zhang ZW, 2017, AUTOMAT SOFTW ENG, V24, P47, DOI 10.1007/s10515-016-0194-x
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 94
TC 16
Z9 17
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2020
VL 32
IS 5
AR e2234
DI 10.1002/smr.2234
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LH7EN
UT WOS:000528948500003
DA 2024-07-18
ER

PT J
AU Ouhbi, S
   Fernández-Alemán, JL
   Toval, A
   Pozo, JR
   Idri, A
AF Ouhbi, Sofia
   Luis Fernandez-Aleman, Jose
   Toval, Ambrosio
   Rivera Pozo, Jose
   Idri, Ali
TI Sustainability requirements for connected health applications
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE apps; catalog; connected health; requirements; sustainability
ID MOBILE-HEALTH; BREAST-CANCER; TECHNOLOGIES; HARMONIZATION; EHEALTH;
   SUPPORT; QUALITY; RECORDS; CARE
AB Connected health applications are efficient tools to improve health care services. The aim of this paper is to define a reusable requirements repository (catalog) for sustainable connected health applications based on the main related software engineering standards, e-health technology standards, and literature. The catalog contains requirements which cover the individual, social, environmental, and technical dimensions of sustainability. The requirements presented in this paper can be very useful to connected health application stakeholders and can be adapted to specific m-health applications. Moreover, the requirements catalog can be used to generate a checklist of requirements to evaluate and audit connected health applications. An application example is presented to show that the evaluation of connected health applications using the generated checklist is realistic.
C1 [Ouhbi, Sofia; Luis Fernandez-Aleman, Jose; Toval, Ambrosio] Univ Murcia, Dept Informat & Syst, Software Engn Res, Murcia, Spain.
   [Ouhbi, Sofia] Int Univ Rabat, FIL, TICLab Res Team, Rabat, Morocco.
   [Rivera Pozo, Jose] Ctr Reg Hemodonac Murcia, Murcia, Spain.
   [Idri, Ali] Mohammed V Univ, ENSIAS, Software Project Management Res Team, Rabat, Morocco.
C3 University of Murcia; Universite Internationale de Rabat; Mohammed V
   University in Rabat
RP Ouhbi, S (corresponding author), Int Univ Rabat, Fac Informat & Logist, Campus IUIR,Parc Technopolis, Rabat 11100, Morocco.
EM sofia.ouhbi@uir.ac.ma
RI Ouhbi, Sofia/H-3641-2019; Fernández-Alemán, José Luis/G-1282-2011;
   Toval, Ambrosio/P-1180-2014
OI Ouhbi, Sofia/0000-0001-7614-9731; Toval, Ambrosio/0000-0002-8273-5937
FU Spanish Ministry of Economy and Competitiveness; European FEDER; 
   [TIN2015-70259-C2-2-R]
FX TIN2015-70259-C2-2-R; Spanish Ministry of Economy and Competitiveness;
   European FEDER
CR Ahern DK, 2006, J MED INTERNET RES, V8, DOI 10.2196/jmir.8.1.e4
   García-Mireles GA, 2012, COMM COM INF SC, V301, P133
   [Anonymous], 2011, SYST SOFTW ENG SOFTW
   [Anonymous], 2007, SYST SOFTW ENG PROD
   [Anonymous], 1998, 830 IEEE STAND
   [Anonymous], 2001, 18307 ISOTR
   [Anonymous], 27799 ISO
   [Anonymous], 2016, HORIZON 2020 HLTH DE
   [Anonymous], 2011, 29148 IEEE STAND
   [Anonymous], 1 INT WORKSH REQ SUS
   [Anonymous], 2012, 142920 ISOTR
   [Anonymous], 2013, IMPLEMENTATION RES H
   [Anonymous], 2012, IEEE GLOB ENG ED C E
   [Anonymous], 2011, 21090 ISO
   [Anonymous], 2011, 142965 ISOTR
   [Anonymous], 2009, 727931 ISOHL
   [Anonymous], 2015, CONN HLTH DIG TECH T
   [Anonymous], 2005, 20514 ISOIEC
   [Anonymous], 2008, 9241151 ISO
   Bachiri M, 2016, COMPUT METH PROG BIO, V134, P121, DOI 10.1016/j.cmpb.2016.06.008
   Beghoura MA, 2017, REQUIR ENG, V22, P27, DOI 10.1007/s00766-015-0234-2
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brundtland Commission, 1987, TECHNICAL REPORT
   Cabot J, 2009, PROC INT CONF SOFTW, P207, DOI 10.1109/ICSE-COMPANION.2009.5070983
   Calero Coral, 2015, Green in Software Engineering, P3
   Carrión I, 2011, IEEE ENG MED BIO, P2380, DOI 10.1109/IEMBS.2011.6090664
   Carroll Noel, 2016, Journal of Systems and Information Technology, V18, P186, DOI 10.1108/JSIT-07-2015-0061
   Carroll N, 2016, COMPUTER, V49, P22, DOI 10.1109/MC.2016.340
   Catalani Caricia, 2013, Open AIDS J, V7, P17, DOI 10.2174/1874613620130812003
   Caulfield BM, 2013, QJM-INT J MED, V106, P703, DOI 10.1093/qjmed/hct114
   Centers for Disease Control and Prevention (CDC), 2003, MMWR Suppl, V52, P1
   Chiarini G, 2013, IEEE J SEL AREA COMM, V31, P6, DOI 10.1109/JSAC.2013.SUP.0513001
   Zapata BC, 2015, J MED SYST, V39, DOI 10.1007/s10916-014-0182-2
   Zapata BC, 2014, J MED SYST, V38, DOI 10.1007/s10916-014-0081-6
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   DuBenske LL, 2010, MED DECIS MAKING, V30, P732, DOI 10.1177/0272989X10386382
   Durdik Z, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P517, DOI 10.1109/ICSM.2012.6405316
   Erdelyi Krisztina, 2013, 2013 IEEE 11th International Symposium on Intelligent Systems and Informatics (SISY), P337, DOI 10.1109/SISY.2013.6662597
   Global Association for Software Quality GASQ, 2013, INTR REQ ENG ENG BOD
   Goodland R., 2002, ENCY GLOBAL ENV CHAN, V5, P174
   Idri A, 2016, J MED SYST, V40, DOI 10.1007/s10916-015-0415-z
   Jensen J, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P380, DOI 10.1109/ARES.2009.107
   Jha AK, 2009, NEW ENGL J MED, V360, P1628, DOI 10.1056/NEJMsa0900592
   Jiang Y, 2016, INT J MED INFORM, V94, P164, DOI 10.1016/j.ijmedinf.2016.07.012
   Kim SC, 2013, J COMPUT-MEDIAT COMM, V18, P98, DOI 10.1111/jcc4.12002
   Kuijpers W, 2016, JMIR CANCER, V2, DOI 10.2196/cancer.5456
   Kvedar J, 2014, HEALTH AFFAIR, V33, P194, DOI 10.1377/hlthaff.2013.0992
   Fernández-Alemán JL, 2012, IEEE ENG MED BIO, P1282, DOI 10.1109/EMBC.2012.6346172
   Mahaux M, 2011, LECT NOTES COMPUT SC, V6606, P19, DOI 10.1007/978-3-642-19858-8_3
   Martínez MA, 2010, COMPUT STAND INTER, V32, P166, DOI 10.1016/j.csi.2010.01.001
   Martínez-Pérez B, 2013, J MED INTERNET RES, V15, DOI 10.2196/jmir.2600
   Mirza Farhaan, 2008, Health Informatics J, V14, P309, DOI 10.1177/1460458208096559
   NHS, 2013, LIV CANC TAK ACT IMP
   Norris AC, 2009, HEALTH INFORM J, V15, P244, DOI 10.1177/1460458209337445
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Ormandjieva O., 2007, 4 INT WORKSH SOFTW Q, P39
   Ouhbi Sofia, 2015, 8th International Conference on Health Informatics (HEALTHINF 2015). Proceedings, P405
   Ouhbi S, 2015, THESIS
   Ouhbi S., 2015, Journal of Medical Systems, V39
   Ouhbi S., 2015, P 2015 10 INT C INT, P1
   OUHBI S, 2015, 2015 3 WORLD C COMPL, P1, DOI DOI 10.1109/IC0CS.2015.7483226
   Ouhbi S, 2017, ENASE: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P285, DOI 10.5220/0006360202850292
   Ouhbi S, 2017, COMPUT METH PROG BIO, V144, P49, DOI 10.1016/j.cmpb.2017.03.014
   Ouhbi S, 2015, REQUIR ENG, V20, P119, DOI 10.1007/s00766-013-0192-5
   Ouhbi S, 2013, ASIA PAC SOFWR ENG, P231, DOI 10.1109/APSEC.2013.40
   Pardo C, 2012, COMPUT STAND INTER, V34, P48, DOI 10.1016/j.csi.2011.05.005
   Penzenstadler B., 2014, P 3 INT WORKSH REQ E, V1216, P44
   Penzenstadler B, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P454, DOI 10.1109/CSEET.2011.5876124
   Pifarré M, 2017, COMPUT METH PROG BIO, V142, P81, DOI 10.1016/j.cmpb.2017.02.022
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Sabharwal M, 2013, IT PROF, V15, P19, DOI 10.1109/MITP.2012.104
   Salonen A, 2014, PATIENT EDUC COUNS, V94, P10, DOI 10.1016/j.pec.2013.08.022
   Silva BMC, 2015, J BIOMED INFORM, V56, P265, DOI 10.1016/j.jbi.2015.06.003
   Smith M. J., 2001, TROUBLED IT PROJECTS
   Steinhubl SR, 2013, JAMA-J AM MED ASSOC, V310, P2395, DOI 10.1001/jama.2013.281078
   Swan M, 2009, INT J ENV RES PUB HE, V6, P492, DOI 10.3390/ijerph6020492
   Toval A., 2011, 2011 IEEE Global Engineering Education Conference (EDUCON), P907, DOI 10.1109/EDUCON.2011.5773253
   Toval A., 2001, Requirements Engineering, V6, P205, DOI 10.1007/PL00010360
NR 78
TC 14
Z9 14
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2018
VL 30
IS 7
SI SI
AR e1922
DI 10.1002/smr.1922
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO2NC
UT WOS:000439809500002
DA 2024-07-18
ER

PT J
AU Plaza, AM
   Díaz, J
   Pérez, J
AF Plaza, Andrea M.
   Diaz, Jessica
   Perez, Jennifer
TI Software architectures for health care cyber-physical systems: A
   systematic literature review
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE cyber-physical systems; health care; Internet of Things; software
   architecture; systematic literature review
ID FUTURE; INTEGRATION; PLATFORM; INTERNET; THINGS; CLOUD; WEB
AB Cyber-physical systems (CPS) refer to the next generation of Information and Communication Technology systems that mainly integrate sensing, computing, and communication to monitor, control, and interact with a physical process to provide citizens and businesses with smart applications and services: health care, smart homes, smart cities, and so on. In recent years, health care has become one of the most important services due to the continuous increases in its costs. This has motivated extensive research on health care CPS, and some of that research has focused on describing the software architecture behind these systems. However, there is no secondary study to consolidate the research. This paper aims to identify and compare existing research on software architectures for health care CPS in order to determine successful solutions that could guide other architects and practitioners in their health care projects. We conducted a systematic literature review and compared the selected studies based on a characterization schema. The research synthesis results in a knowledge base of software architectures for health care CPS, describing their stakeholders, functional and non-functional features, quality attributes architectural views and styles, components, and implementation technologies. This systematic literature review also identifies research gaps, such as the lack of open common platforms, as well as directions for future research.
C1 [Plaza, Andrea M.] Univ Politecn Madrid, Madrid, Spain.
   [Plaza, Andrea M.] Univ Politecn Salesiana, Cuenca, Ecuador.
   [Diaz, Jessica; Perez, Jennifer] Univ Politecn Madrid, CITSEM, Madrid, Spain.
C3 Universidad Politecnica de Madrid; Universidad Politecnica Salesiana;
   Universidad Politecnica de Madrid; Centro de Investigacion en
   Tecnologias Software Sistemas Multimedia para la Sostenibilidad (CITSEM)
RP Díaz, J (corresponding author), Univ Politecn Madrid, CITSEM, Madrid, Spain.
EM yesica.diaz@upm.es
RI PEREZ, JENIFER/M-2506-2014; Diaz, Jessica/J-9751-2012
OI PEREZ, JENIFER/0000-0003-3192-7995; Diaz, Jessica/0000-0001-6738-9370
FU Spanish fund MESC [DPI2013-47450-C2-2-R]; CROWDSAVING
   [TIN2016-79726-C2-1-R]; H2020 CPSELabs [644400]; Salesian Polytechnic
   University
FX This work is supported by the Spanish fund MESC (DPI2013-47450-C2-2-R)
   and CROWDSAVING (TIN2016-79726-C2-1-R), H2020 CPSELabs (644400), and in
   part by the Salesian Polytechnic University (http://www.ups.edu.ec/).
CR Al-Taee MA, 2017, IEEE INTERNET THINGS, V4, P437, DOI 10.1109/JIOT.2016.2623767
   [Anonymous], 2012, 6749 RFC
   [Anonymous], 2007, 14712000 IEEE, pc1
   Bazzani M., 2012, 2012 IEEE 11 INT C T, P1954, DOI [10.1109/TrustCom.2012.144, DOI 10.1109/TRUSTCOM.2012.144]
   Blazona B, 2007, INT J MED INFORM, V76, pS425, DOI 10.1016/j.ijmedinf.2007.05.001
   Botta A, 2016, FUTURE GENER COMP SY, V56, P684, DOI 10.1016/j.future.2015.09.021
   BOWERS J, 2002, LECT NOTES COMPUTER, V2418, P269
   Brown AW, 2007, LECT NOTES COMPUT SC, V4758, P237
   Cai HH, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2014), P669, DOI 10.1109/SCC.2014.93
   Caporuscio M, 2015, J SYST SOFTWARE, V106, P9, DOI 10.1016/j.jss.2015.03.102
   Carroll N, 2016, COMPUTER, V49, P22, DOI 10.1109/MC.2016.340
   Chaouchi H., 2013, Introduction to the Internet of Things, P1, DOI DOI 10.1007/978-3-642-40403-0_1
   Corredor I, 2014, INT J ENV RES PUB HE, V11, P4676, DOI 10.3390/ijerph110504676
   Corredor I, 2011, J SYST ARCHITECT, V57, P916, DOI 10.1016/j.sysarc.2011.04.005
   Díaz J, 2016, ACM PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ECSA-W), DOI 10.1145/2993412.3004852
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Eklund U, 2012, P WICSA ECSA COMP VO, V2012, P104, DOI [10. 1145/2361999. 2362022, DOI 10.1145/2361999.2362022]
   Erl T., 2009, SOA DESIGN PATTERNS, VFirst
   Feng XY, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON FUTURE INFORMATION NETWORKS, P7, DOI 10.1109/ICFIN.2009.5339611
   Fortino G, 2014, FUTURE GENER COMP SY, V35, P62, DOI 10.1016/j.future.2013.12.015
   Gachet Paez Diego, 2014, Ubiquitous Computing and Ambient Intelligence. Personalisation and User Adapted Services. 8th International Conference, UCAmI 2014. Proceedings: LNCS 8867, P416, DOI 10.1007/978-3-319-13102-3_68
   Garlan D, 2001, WILEY ENCY COMPUTER
   Gravina R, 2017, FUTURE GENER COMP SY, V75, P158, DOI 10.1016/j.future.2016.09.006
   Guo CJ, 2007, 9TH IEEE INTERNATIONAL CONFERENCE ON E-COMMERCE TECHNOLOGY/4TH IEEE INTERNATIONAL CONFERENCE ON ENTERPRISE COMPUTING, E-COMMERCE AND E-SERVICES, P551, DOI 10.1109/CEC-EEE.2007.4
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Haque SA, 2014, INT J DISTRIB SENS N, DOI 10.1155/2014/217415
   Hu X., 2012, ENG TECHN S CET 2012, P1
   Keele S, 2007, GUIDELINES PERFORMIN
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kruchten P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.59
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Lee EA, 2015, SENSORS-BASEL, V15, P4837, DOI 10.3390/s150304837
   Lewis J., 2014, MICROSERVICES
   Maia P, 2014, PROCEDIA COMPUT SCI, V40, P135, DOI 10.1016/j.procs.2014.10.041
   Mendez E. O., 2012, 2012 IEEE INT C EL T, P1, DOI DOI 10.1109/EIT.2012.6220696
   Miorandi D, 2012, AD HOC NETW, V10, P1497, DOI 10.1016/j.adhoc.2012.02.016
   Mohammed J, 2014, 2014 IEEE International Conference (iThings) - 2014 IEEE International Conference on Green Computing and Communications (GreenCom) - 2014 IEEE International Conference on Cyber-Physical-Social Computing (CPS), P256, DOI 10.1109/iThings.2014.45
   Penagos SP, CONTROL SIGNOS VITAL
   Pepa L, 2015, 2015 IEEE 2ND WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P615, DOI 10.1109/WF-IoT.2015.7389124
   Pérez J, 2014, P ANN HICSS, P2398, DOI 10.1109/HICSS.2014.301
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Ragavan SV, 2014, PROCEDIA COMPUT SCI, V42, P168, DOI 10.1016/j.procs.2014.11.048
   Rao IH, 2012, 2012 INTERNATIONAL SYMPOSIUM ON ELECTRONIC SYSTEM DESIGN (ISED 2012), P177, DOI 10.1109/ISED.2012.66
   Rathore MM, 2016, J MED SYST, V40, DOI 10.1007/s10916-016-0647-6
   Richardson I., 2015, LERO TECHNICAL REPOR
   Rodrigues A, 2013, IEEE T EMERG TOP COM, V1, P207, DOI 10.1109/TETC.2013.2294917
   Russinovich M., 2016, MICROSERVICES APPL R
   Sebestyen G, 2014, IEEE INT CONF AUTO, DOI 10.1109/AQTR.2014.6857876
   Suciu G, 2015, J MED SYST, V39, DOI 10.1007/s10916-015-0327-y
   Tricco AC, 2008, J CLIN EPIDEMIOL, V61, P422, DOI 10.1016/j.jclinepi.2007.10.017
   World Health Organization, 2007, Global age-friendly cities: A guide Internet
   World Health Organization, 2005, Preventing chronic diseases: a vital investment: who global report
   Yick J, 2008, COMPUT NETW, V52, P2292, DOI 10.1016/j.comnet.2008.04.002
   Zhang Y, 2017, IEEE SYST J, V11, P88, DOI 10.1109/JSYST.2015.2460747
NR 56
TC 10
Z9 12
U1 2
U2 41
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2018
VL 30
IS 7
SI SI
AR e1930
DI 10.1002/smr.1930
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO2NC
UT WOS:000439809500004
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Messnarz, R
   Kreiner, C
   Macher, G
   Walker, A
AF Messnarz, Richard
   Kreiner, Christian
   Macher, Georg
   Walker, Alastair
TI Extending Automotive SPICE 3.0 for the use in ADAS and future
   self-driving service architectures
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Automotive SPICE; cybersecurity; functional safety; ISO 26262; SAE
   J3061; service architectures for automotive
AB The SOQRATES () working party has been established in 2003 with the support of the Bavarian SW initiative. Major automotive suppliers joined forces to exchange best practices in topics such as Automotive SPICE, functional safety, and cybersecurity. The research method of SOQRATES is to compare the best practices, and in case that a specific design pattern is accepted by all parties, it is declared and published as a state of the art. Some of the results of the working party have been packaged into training courses. For example, in the EU project SafEUr (518632-LLP-1-2011-1-AT-LEONARDO-LMP, 2011-2012) a European partnership with inputs from SOQRATES developed a skill set, training materials, and best practices for the implementation of ISO 26262. For example, in the EU project AQUA (Knowledge Alliance for Quality in Automotive, EAC-2012-0635, 2013- 2014), a European partnership with inputs from SOQRATES developed a skill set, training materials, and best practices for integrating Automotive SPICE, ISO 26262, and Six Sigma. For example, in the EU project AQU (Automotive Quality Universities, 2015-1-CZ01-KA203-013986, 2015- 2017), a European partnership with inputs from SOQRATES applied the AQUA concept with universities in Austria, Germany, France, and Czech Republic who educate students that will work in the automotive industry. Also, the working party elaborated integrated assessment models where the Automotive SPICE 3.0 has been merged with ISO 26262 (further safety related questions) and SAE J3061 (further cybersecurity questions). This paper will look into the future of self-driving cars and discuss the design patterns that are currently analysed in the working party to support a vehicle in future self-driving infrastructure architectures and processes.
C1 [Messnarz, Richard] ISCN GesmbH, Graz, Austria.
   [Kreiner, Christian] Graz Univ Technol, Graz, Austria.
   [Macher, Georg] AVL List GmbH, Graz, Austria.
   [Walker, Alastair] Lorit Consultancy LTD, Edinburgh, Midlothian, Scotland.
C3 Graz University of Technology; Anstalt fur Verbrennungskraftmaschinen
   List
RP Messnarz, R (corresponding author), ISCN GesmbH, Graz, Austria.
EM rmess@iscn.com
RI Messnarz, Richard/AAH-8716-2020
OI Messnarz, Richard/0000-0002-0555-3160; Macher, Georg/0000-0001-9215-3300
FU European Commission in the Erasmus+ Program [2015-1-CZ01-KA203-013986];
   European Commission in the Erasmus+ Program
FX The European project AQU (Automotive Quality Universities,
   2015-1-CZ01-KA203-013986, 2015-2017) is cofunded by the European
   Commission in the Erasmus+ Program. We are grateful for the support.;
   The European project DRIVES (2018-2021) is cofunded by the European
   Commission in the Erasmus+ Program. We are grateful for the support.
CR Amodei D, 2016, ARXIV J         0621
   [Anonymous], 2016, 2030 GEAR EUR COMM
   [Anonymous], 2006, 60812 ISO IEC
   [Anonymous], 2005, STRIDE THREAT MOD
   [Anonymous], 2006, 61025 ISO IEC
   Bachmann O, 2011, COMM COM INF SC, V172, P290
   Becker D, 2016, KPMG INT HEAD AUTOMO
   Bohner M, 2015, P AUT SAF SEC C EL P
   European Commission, 2017, BLUEPR SECT COOP SKI
   EVITA, 2011, 224275 EVITA
   Hakdra N, 2016, DRIVING SAFETYHOW MA
   ISO, 2011, 26262 ISO 1
   ISOInternational Organization for Standardization, 2018, 262622017 ISO CD
   ISOInternational Organization for Standardization, 2010, 61508 ISO IEC
   Macher G, 2016, SOFTWARE QUALITY PRO
   Macher G, 2016, COMP SAF REL SEC 35
   Macher G., 2017, INTEGRATED SAFETY SE
   Macher G., 2016, SOFTW SERV PROC IMPR
   Macher G, 2015, COMP SAF REL SEC 34
   Macher G, 2015, DES AUT TEST EUROPE, P621
   Messnarz R., 2015, IMPLEMENTING FUNCTIO
   Messnarz R., 2016, INTEGRATING AUTOMOTI
   Much A., 2016, AUTOMOTIVE SECURITY
   Redmill F., 2000, P 8 SAF CRIT SYST S
   SOQRATES, 26262 SOQRATES ISO
   Verhulst E, ANTIFRAGILITY SYSTEM
NR 26
TC 11
Z9 10
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2018
VL 30
IS 5
SI SI
AR e1948
DI 10.1002/smr.1948
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GI1OG
UT WOS:000434139400005
DA 2024-07-18
ER

PT J
AU Walker, A
AF Walker, Alastair
TI Cybersecurity in safety-critical systems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE cybersecurity; risk model; sabotage; threat; trojan circuits
AB 2016 saw cybersecurity standards appear in both automotive and medical device industries. Both standards are understandably based on processes that already exist in the respective industries. The automotive J3061 standard is very much focussed on existing categories for defining the cybersecurity threats, ie, systems, hardware and software. Cybersecurity is very much a multifaceted topic, and by restricting the scope to these 3 subject areas there is the risk that many significant threats could be overlooked, in particular the malicious acts of employees within an organisation. The medical cybersecurity report AAMI TIR 57 takes the approach based on ISO 14971 the medical device risk management standard, which encourages a more open-minded approach to evaluating cybersecurity threats. Both of these documents, which are discussed in this paper, are short of practical examples or techniques for assessing and mitigating threats; the topic is handled in a more theoretical manner. Key issues such as trojan circuits in microcontrollers are not well represented in either document. Generally, software topics such as authentication and encryption are given good coverage in international standards; however, this not the case when reviewing hardware concerns. Both TIR 57 and J3061 are good starting documents for the topic of cybersecurity, but both could benefit from expansion to cover the wider topics affecting cybersecurity.
C1 [Walker, Alastair] Lorit Consultancy, Edinburgh, Midlothian, Scotland.
RP Walker, A (corresponding author), Lorit Consultancy, Edinburgh, Midlothian, Scotland.
EM alastair.walker@lorit-consultancy.com
CR [Anonymous], 2013, P INT MULTICONFERENC, VII
   [Anonymous], 26262 ISO
   [Anonymous], 2016, 572016 AAMI TIR
   [Anonymous], NIST SPEC PUBL
   [Anonymous], TAMPER EVIDENT MICRO
   [Anonymous], 2016, POSTM MAN CYB MED DE
   [Anonymous], 149712007 ISO
   Hemati Saied, MITIGATING HARDWARE
NR 8
TC 3
Z9 4
U1 2
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2018
VL 30
IS 5
SI SI
AR e1956
DI 10.1002/smr.1956
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GI1OG
UT WOS:000434139400008
DA 2024-07-18
ER

PT J
AU Azzeh, M
   Nassif, AB
AF Azzeh, Mohammad
   Nassif, Ali Bou
TI Analyzing the relationship between project productivity and environment
   factors in the use case points method
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE environmental factors; software effort estimation; software
   productivity; use case points
ID SOFTWARE PRODUCTIVITY; LINEAR-REGRESSION; ANALOGY; MODEL; SIZE
AB Project productivity is a key factor for producing effort estimates from use case points (UCP), especially when the historical dataset is absent. The first versions of UCP effort estimation models used a fixed number or very limited numbers of productivity ratios for all new projects. These approaches have not been well examined over a large number of projects, so the validity of these studies was a matter for criticism. The newly available large software datasets allow us to perform further research on the usefulness of productivity for effort estimation of software development. Specifically, we studied the relationship between project productivity and UCP environmental factors, as they have a significant impact on the amount of productivity needed for a software project. Therefore, we designed 4 studies, using various classification and regression methods, to examine the usefulness of that relationship and its impact on UCP effort estimation. The results we obtained are encouraging and show potential improvement in effort estimation. Furthermore, the efficiency of that relationship is better over a dataset that comes from industry because of the quality of data collection. Our comment on the findings is that it is better to exclude environmental factors from calculating UCP and make them available only for computing productivity. The study also encourages project managers to understand how to better assess the environmental factors, as they do have a significant impact on productivity.
C1 [Azzeh, Mohammad] Appl Sci Private Univ, Dept Software Engn, Amman, Jordan.
   [Nassif, Ali Bou] Univ Sharjah, Dept Elect & Comp Engn, Sharjah, U Arab Emirates.
C3 University of Sharjah
RP Azzeh, M (corresponding author), Appl Sci Private Univ, Dept Software Engn, Amman, Jordan.
EM m.y.azzeh@asu.edu.jo
RI Azzeh, Mohammad/G-5472-2017
OI Azzeh, Mohammad/0000-0002-0323-6452; Nassif, Ali Bou/0000-0003-1570-0897
FU Applied Science Private University, Amman, Jordan; University of Sharjah
FX Dr. Mohammad Azzeh is grateful to the Applied Science Private
   University, Amman, Jordan, for the financial support granted to cover
   the publication fee of this research article. Dr. Ali Bou Nassif would
   like to thank the University of Sharjah for supporting this research.
CR Ajitha S., 2010, 2010 5th International Conference on Industrial and Information Systems (ICIIS 2010), P372, DOI 10.1109/ICIINFS.2010.5578675
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   Amasaki S, 2015, J SOFTW-EVOL PROC, V27, P488, DOI 10.1002/smr.1672
   Anda B, 2002, LECT NOTES COMPUT SC, V2559, P383
   Anda B., 2001, P 4 INT C UNIFIED MO, P487
   Anda B., 2002, EMPIRICAL ASSESSMENT, P8
   [Anonymous], 2008, 11 INT C QUAL ENG SO
   Azzeh M., 2011, Proceedings of the 2011 IEEE 11th International Conference on Computer and Information Technology (CIT 2011), P328, DOI 10.1109/CIT.2011.48
   Azzeh M, 2016, APPL SOFT COMPUT, V49, P981, DOI 10.1016/j.asoc.2016.05.008
   Azzeh M, 2015, IET SOFTW, V9, P39, DOI 10.1049/iet-sen.2013.0165
   Azzeh M, 2015, J SYST SOFTWARE, V103, P36, DOI 10.1016/j.jss.2015.01.028
   Braz MR, 2004, PROC INT C TOOLS ART, P196
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Fawagreh K, 2014, SYST SCI CONTROL ENG, V2, P602, DOI 10.1080/21642583.2014.956265
   Gencel C., 2006, SOFTWARE MEASUREMENT, P121
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Heidrich J, 2015, J SOFTW-EVOL PROC, V27, P465, DOI 10.1002/smr.1722
   Issa A, 2006, 2006 2 INT C INF COM, P2766, DOI DOI 10.1109/IMA.2006.1684849
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Karner G., 1993, Objective Systems
   Kitchenham B, 2004, IEEE T SOFTWARE ENG, V30, P1023, DOI 10.1109/TSE.2004.104
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   MacQueen J, 1967, P 5 BERKELEY S MATH, V1
   Nassif A. B., 2012, Proceedings of the 2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel & Distributed Computing (SNPD 2012), P589, DOI 10.1109/SNPD.2012.40
   Nassif A.B., 2010, INT C EMERGING TREND, P5
   Nassif A.B., 2012, Software Size and Effort Estimation from Use Case Diagrams Using Regression and Soft Computing Models
   Nassif AB, 2011, 3 INT C INTELLIGENT, P615
   Nassif AB, 2016, NEURAL COMPUT APPL, V27, P2369, DOI 10.1007/s00521-015-2127-1
   Nassif AB, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P612, DOI 10.1145/2591062.2591141
   Nassif AB, 2012, 2012 11TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2012), VOL 2, P42, DOI 10.1109/ICMLA.2012.138
   Nassif AB, 2012, 2012 11TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2012), VOL 2, P301, DOI 10.1109/ICMLA.2012.155
   Nassif AB, 2013, J SYST SOFTWARE, V86, P144, DOI 10.1016/j.jss.2012.07.050
   Nassif AB, 2011, PROC INT C TOOLS ART, P393, DOI 10.1109/ICTAI.2011.64
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P885, DOI 10.1016/j.infsof.2011.02.004
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P200, DOI 10.1016/j.infsof.2010.10.005
   Robiolo G, 2008, INNOV SYST SOFTW ENG, V4, P31, DOI 10.1007/s11334-007-0043-y
   Robiolo G, 2009, INT SYMP EMP SOFTWAR, P423
   Rodríguez D, 2012, J SYST SOFTWARE, V85, P562, DOI 10.1016/j.jss.2011.09.009
   Schneider G, 2001, A PRACTICAL GUIDE
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Silhavy R, 2017, J SYST SOFTWARE, V125, P1, DOI 10.1016/j.jss.2016.11.029
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   Tannure R, 2009, INT C INF SYST TECHN
NR 46
TC 18
Z9 18
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2017
VL 29
IS 9
AR e1882
DI 10.1002/smr.1882
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FF8YP
UT WOS:000409304100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tran, HN
   Hajmoosaei, M
   Percebois, C
   Front, A
   Roncancio, C
AF Hanh Nhi Tran
   Hajmoosaei, Mojtaba
   Percebois, Christian
   Front, Agnes
   Roncancio, Claudia
TI Integrating run-time changes into system and software process enactment
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT International Conference on Software and Systems Process (ICSSP)
CY AUG 24-26, 2015
CL Tallinn, ESTONIA
DE change impact analysis; Process Management System; process enactment
ID CHANGE MANAGEMENT
AB In System and Software Engineering development, unforeseen changes occurring during process enactment are almost inevitable but often poorly managed due to a lack of efficient mechanisms for spontaneously handling these run-time changes. We proposed a change-aware process management system that allows process actors reporting emergent changes, analyzing possible impacts, and notifying people affected by the changes. To this end, we integrated a Change Management Component with a Process Management System. The Process Management System monitors process enactment and uses the run-time process information to construct a Process dependency graph (PDG) representing the dependencies among the elements of running processes. The Change Management Component captures change requests sent asynchronously, then reasons the PDG to determine impacted elements. Our PDG reflects the information of process instances and therefore can uncover the intra-process or inter-processes dependencies that are invisible on process models. We implemented a prototype named CAPE based on the platform jBPM and the graph database Neo4j. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Hanh Nhi Tran; Hajmoosaei, Mojtaba; Percebois, Christian] Univ Toulouse, IRIT, 118 Route Narbonne, F-31062 Toulouse 9, France.
   [Front, Agnes; Roncancio, Claudia] Univ Grenoble, LIG, Grenoble, France.
C3 Universite Federale Toulouse Midi-Pyrenees (ComUE); Universite de
   Toulouse; Institut National Polytechnique de Toulouse; Universite
   Toulouse III - Paul Sabatier; Communaute Universite Grenoble Alpes;
   Institut National Polytechnique de Grenoble; Universite Grenoble Alpes
   (UGA); Centre National de la Recherche Scientifique (CNRS)
RP Tran, HN (corresponding author), Univ Toulouse, IRIT, 118 Route Narbonne, F-31062 Toulouse 9, France.
EM hanh-nhi.tran@irit.fr
RI TRAN, Hanh Nhi/HJA-9963-2022
OI Roncancio, Claudia/0000-0002-1118-6512
CR [Anonymous], INT J COMPUTER APPL
   [Anonymous], ASME 2006 DES ENG TE
   Barghouti NS, 1996, SOFTWARE PROCESS TRE, P53
   Bendraou R, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P390, DOI 10.1109/ASPEC.2007.60
   Chen YM, 2002, INT J COMP INTEG M, V15, P127, DOI 10.1080/09511920110047181
   Eckert C, 2004, RES ENG DES, V15, P1, DOI 10.1007/s00163-003-0031-7
   Fdhila W, 2015, INFORM SYST, V49, P1, DOI 10.1016/j.is.2014.10.004
   Hajmoosaei M, 2015, P 24 IEEE INT C EN T
   Huang GQ, 1998, J MATER PROCESS TECH, V76, P187, DOI 10.1016/S0924-0136(97)00347-6
   Jarratt T, 2002, DESIGN 2002: PROCEEDINGS OF THE 7TH INTERNATIONAL DESIGN CONFERENCE, VOLS 1 AND 2, P75
   Jarratt TAW, 2011, RES ENG DES, V22, P103, DOI 10.1007/s00163-010-0097-y
   Königs SF, 2012, ADV ENG INFORM, V26, P924, DOI 10.1016/j.aei.2012.08.002
   Lee HJ, 2006, INFORM SYST FRONT, V8, P375, DOI 10.1007/s10796-006-9009-0
   Matinnejad R, 2012, 2012 IEEE 19TH INTERNATIONAL CONFERENCE AND WORKSHOPS ON ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS), P64, DOI 10.1109/ECBS.2012.11
   Minor M, 2010, LECT NOTES ARTIF INT, V6176, P421
   Müller R, 2000, LECT NOTES COMPUT SC, V1901, P210
   Muller R, 2002, DATA KHOWL ENG, P223
   Mutschler B, 2008, IEEE T SYST MAN CY C, V38, P280, DOI 10.1109/TSMCC.2008.919197
   OASIS, 2010, Web Services-Human Task (WS-HumanTask) Version 1.1
   Oh S, 2007, LECT NOTES COMPUT SC, V4553, P1110
   OMG, 2007, SOFTW PROC ENG MET S
   Portela C., 2014, P 9 INT C SOFTW ENG
   Robinson I., 2013, Graph databases
   Roncancio C., 2015, P 2015 INT C SOFTW S, P32
   Weber B., 2012, ENABLING FLEXIBILITY
NR 25
TC 0
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2016
VL 28
IS 9
SI SI
BP 762
EP 782
DI 10.1002/smr.1783
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA EC7FM
UT WOS:000388302000004
OA Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Abushama, HM
AF Abushama, Hisham M.
TI PAM-SMEs: process assessment method for small to medium enterprises
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software process improvement; software process assessment; small to
   medium enterprises; prioritization; CMMI; SCAMPI
ID SOFTWARE PROCESS IMPROVEMENT; PROJECT-MANAGEMENT; BUSINESS SUCCESS;
   ORGANIZATIONS; STANDARD; CMMI
AB Several software process improvement (SPI) standard models have been invented since the last decades, for example, CMMI, SPICE, and CMM. Most of these models had to be tailored by several researchers in order to be applied within Small to Medium Enterprises (SMEs). This is mainly due to their environmental challenges such as resources. In addition to this, the SPI models including the current standard model the CMMI are not considering tailoring their SPI program to business objectives. Achieving business objectives is the main recipe for business success. Therefore, this research (PAM-SMEs) is setup to tailor SPI program to business objectives within SMEs environmental challenges. Key features of the PAM-SMEs are as follows: the use of simplified and tailorable assessment techniques and data collection tool based on the CMMI; and then prioritizing the outcome of the assessment to the SMEs business objectives by the use of prioritization technique. The PAM-SMEs was applied within three partner SMEs, and the overall evaluation shows that the PAM-SMEs help to drive their SPI program toward their business objectives with the available resources. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Abushama, Hisham M.] Univ Khartoum, Fac Math Sci, Dept Comp Sci, POB 321, Khartoum, Sudan.
C3 University of Khartoum
RP Abushama, HM (corresponding author), Univ Khartoum, Fac Math Sci, Dept Comp Sci, POB 321, Khartoum, Sudan.
EM hisham.abushama@uofk.edu
RI Abushama, Hisham Mohamed/N-1803-2019
CR Ahern D., 2008, CMMI DISTILLED PRACT
   Allen P, 2003, PRISMS APPROACH SOFT
   Boehm B., 2002, CrossTalk, V15, P9
   Brodman J., 1997, SOFTWARE PROCESS IMP
   Chetankumar P., 2009, Int. J. Softw. Eng., V2, P01
   Chrissis M.B., 2011, SEI SERIES SOFTWARE
   Clarke P, 2012, COMM COM INF SC, V301, P1
   Clarke P, 2012, J SYST SOFTWARE, V85, P2356, DOI 10.1016/j.jss.2012.05.024
   CORPORATE-CMU, 1995, CAPABILITY MATURITY
   de Oliveira SB, 2010, SOFTWARE QUAL J, V18, P177, DOI 10.1007/s11219-009-9087-6
   Denbo AD, 2003, COMMUNICATIONS IIMA, V3, P1
   Habib M, 2008, BLENDING 6 SIGMA CMM
   Homchuenchom D, 2012, INT J DIGITAT CONTEN, V6, P16
   Ianzen A, 2013, COMPUT STAND INTER, V36, P54, DOI 10.1016/j.csi.2013.07.002
   Kalpana A.M., 2010, INT J COMPUT SCI ENG, V2, P852
   Kankam-Yeboah K, 2005, J FAC ENV SCI TECH O, V10, P75
   Kasurinen J, 2013, APPL ISO IEC 29110 G
   Khurshid N, 2009, LECT NOTES COMPUT SC, V5543, P38, DOI 10.1007/978-3-642-01680-6_6
   Kontio J., 2004, USING FOCUS GROUP ME
   Laporte CY, 2008, COMM COM INF SC, V16, P129
   Lepmets M, 2012, J SYST SOFTWARE, V85, P1440, DOI 10.1016/j.jss.2012.01.038
   MarketLine, 2015, GLOB SOFTW SERV IND
   May T, 2002, QUALITITATIVE RES AC
   Mc Caffery F, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.3
   Mishra D, 2009, COMPUT SCI INF SYST, V6, P111, DOI 10.2298/CSIS0901111M
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   O'Connor RV, 2012, COMM COM INF SC, V301, P330
   O'Connor RV, 2009, AUSTRALAS J INF SYST, V16, P7
   Ortega M, 2003, SOFTWARE QUAL J, V11, P219, DOI 10.1023/A:1025166710988
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Pino FJ, 2010, INFORM SOFTWARE TECH, V52, P1044, DOI 10.1016/j.infsof.2010.04.004
   Rahmani H, 2016, INFORM SOFTWARE TECH, V71, P27, DOI 10.1016/j.infsof.2015.10.009
   Ramasubbu N, 2014, IEEE T SOFTWARE ENG, V40, P235, DOI 10.1109/TSE.2013.58
   Ribaud V, 2010, PROCESS ASSESSMENT I
   Rout TP, 2007, J SYST SOFTWARE, V80, P1483, DOI 10.1016/j.jss.2007.01.045
   Sivashankar M, 2010, FRAMEWORK APPROACH U
   Sommerville I., 2010, SOFTWARE ENG
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   UNITED NATIONS, 2012, INF EC REP 2012 SOFT
   Wilkie F, 2005, EXPRESS PROCESS APPR
   Yucalar Fatih., 2009, Journal of aeronautics and space technologies, V4, P39
NR 43
TC 3
Z9 3
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2016
VL 28
IS 8
BP 689
EP 711
DI 10.1002/smr.1793
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EC7FG
UT WOS:000388301300004
DA 2024-07-18
ER

PT J
AU Huang, FQ
   Liu, B
   Wang, SH
   Li, QY
AF Huang, Fuqun
   Liu, Bin
   Wang, Shihai
   Li, Qiuying
TI The impact of software process consistency on residual defects
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software process improvement; residual defect; defect severity; CMM;
   process consistency; human error
ID MATURITY
AB Residual defects at the time of delivery are an important concern for safety critical software systems. Suppliers and customers are urged to get evidence for what they can do to reduce residual defects. Thus, it is meaningful to learn from historical data concerning the kinds of defects that have escaped from the existing quality assurance approaches and the factors that lead to the residual defects. A total of 3747 defects from 70 software systems developed by 29 Chinese aviation organizations were collected from acceptance tests during the last 5 years. For all these organizations, 38 domain experts from the industry assessed the process consistency to the standard built in the framework of Capability Maturity Model (CMM). Results demonstrate that the process improvement in the range of high consistency is effective in reducing total defects, as well as the minor and severe defects. The high consistency adoption of the practices in CMM Level 1 to Level 3 is more effective in reducing minor defects than severe defects. Causal analysis was performed to investigate the underlying mechanisms. Results reveal that individual cognitive failures cause 87% of severe defects. More approaches to help software developers manage their interior cognitive process are needed for improving software quality in the future. Copyright (C) 2015 John Wiley & Sons, Ltd.
C1 [Huang, Fuqun; Liu, Bin; Wang, Shihai; Li, Qiuying] Beihang Univ, Sch Reliabil & Syst Engn, Beijing 100191, Peoples R China.
   [Huang, Fuqun] Ohio State Univ, Dept Mech & Aerosp Engn, Columbus, OH 43210 USA.
C3 Beihang University; University System of Ohio; Ohio State University
RP Huang, FQ (corresponding author), Ohio State Univ, Dept Mech & Aerosp Engn, Columbus, OH 43210 USA.
EM huang.2315@osu.edu
RI Huang, Fuqun/E-5467-2013
OI Huang, Fuqun/0000-0001-7973-5808
CR Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 1971, The Psychology of Computer Programming
   [Anonymous], 2002, Software Design-Cognitive Aspects
   [Anonymous], 18 INT C REL QUAL DE
   [Anonymous], HDB SOFTWARE RELIABI
   Baker DP, 2007, HUM FACTORS, V49, P185, DOI 10.1518/001872007X312432
   BRODMAN J, 1996, CROSSTALK, V9, P23
   Card D.N., 2006, P24 ANN PAC NW SOFTW, P469
   Chulani S., 1999, Modeling software defect introduction and removal: COQUALMO (Constructive QUALity MOdel)
   CLARK B, 1997, THESIS U SO CALIFORN
   Davis N., 2003, CMUSEI2003TR014
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   Diaz M, 2002, J DEFENSE SOFTWARE E, V15, P9
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Ferreiro Ferreira Analia Irigoyen, 2008, Software Process: Improvement and Practice, V13, P311, DOI 10.1002/spip.392
   Galin D, 2006, ARE CMM PROGRAM INVE
   Grossi L, 2014, J SOFTW-EVOL PROC, V26, P808, DOI 10.1002/smr.1666
   Gwet KL, 2008, BRIT J MATH STAT PSY, V61, P29, DOI 10.1348/000711006X126600
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   Harter DE, 2012, IEEE T SOFTWARE ENG, V38, P810, DOI 10.1109/TSE.2011.63
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   Holzmann G. J., 2002, Software Engineering Notes, V27, P81, DOI 10.1145/605466.605479
   Huang AFQ, 2012, PROCEEDINGS 18TH ISSAT INTERNATIONAL CONFERENCE ON RELIABILITY & QUALITY IN DESIGN, P44
   Huang F, 2013, J SOFTWARE ENG, V7, P114, DOI DOI 10.3923/JSE.2013
   Huang F., 2011, 23 PSYCH PROGR INT G
   Huang F, 2010, P 2010 INT C TEST ME, P490
   Huang FQ, 2014, SCI COMPUT PROGRAM, V89, P350, DOI 10.1016/j.scico.2014.03.004
   [黄抚群 Huang Fuqun], 2013, [计算机科学, Computer Science], V40, P1
   Jones C, 2008, CROSSTALK, V21, P5
   KALINOWSKI M, 2008, 34 EUR IEEE, P199, DOI DOI 10.1109/SEAA.2008.47
   Kitchenham BA, 2001, NRCERB1082
   Krasner H., 1997, SOFTWARE PROCESS IMP, P519
   Krishnan MS, 1999, IEEE T SOFTWARE ENG, V25, P800, DOI 10.1109/32.824401
   Lavallée M, 2012, PROC INT CONF SOFTW, P113, DOI 10.1109/ICSE.2012.6227201
   Lawlis P, 1995, CROSSTALK, V8, P21
   Leszak M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P428, DOI 10.1109/ICSE.2000.870433
   MAYS RG, 1990, IBM SYST J, V29, P4, DOI 10.1147/sj.291.0004
   McGarry F, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P52, DOI 10.1109/METRIC.1998.731226
   Paulk Mark., 1993, Encyclopedia of Software Engineering
   Ply JK, 2012, MIS QUART, V36, P601
   Ramasubbu N, 2009, PROC INT CONF SOFTW, P529, DOI 10.1109/ICSE.2009.5070551
   Reason J., 1991, HUMAN ERROR
   Rothenberger MA, 2010, INFORM MANAGE-AMSTER, V47, P372, DOI 10.1016/j.im.2010.10.001
   Schadler M, 2009, CASUAL ANAL RESOLUTI
   Schroeder M A, 1990, West J Nurs Res, V12, P175, DOI 10.1177/019394599001200204
   TOHMA Y, 1989, IEEE T SOFTWARE ENG, V15, P345, DOI 10.1109/32.21762
   Tosun A, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P203, DOI 10.1109/SEAA.2009.52
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Visser W., 2004, RES REPORT
   Wohlin C., 2012, Experimentation in Software Engineering
NR 52
TC 12
Z9 12
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2015
VL 27
IS 9
BP 625
EP 646
DI 10.1002/smr.1717
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT0QG
UT WOS:000362500800002
DA 2024-07-18
ER

PT J
AU Khurum, M
   Petersen, K
   Gorschek, T
AF Khurum, Mahvish
   Petersen, Kai
   Gorschek, Tony
TI Extending value stream mapping through waste definition beyond customer
   perspective
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE lean software development; software process improvement; value stream
   mapping; software product management; software project management
ID SOFTWARE-DEVELOPMENT; AGILE
AB Value stream mapping (VSM) is one of the several Lean practices, which has recently attracted interest in the software engineering community. In other contexts (such as military, health and production), VSM has achieved considerable improvements in processes and products. The goal is to capitalize on these benefits in the software intensive product development context. The primary contribution is that we are extending the definition of waste to fit in the software intensive product development context. As traditionally in VSM everything that is not considered valuable is waste, we do this practically by looking at value beyond the customer perspective and using the software value map. An evaluation has been conducted through an industrial case study. First, the instantiation and motivations for selecting certain strategies have been provided. Second, the outcome of the VSM is described in detail. The instantiation of VSM via workshops was considered good as workshops allowed active interaction and discussion stakeholders' groups that are distant from each other in the regular work. With respect to waste and improvement identification, the participants were able to identify similar improvement suggestions. In a retrospective, the value stream approach was perceived positively by the practitioners with respect to process and outcome. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Khurum, Mahvish; Petersen, Kai; Gorschek, Tony] Blekinge Inst Technol, Sch Comp, SE-37225 Karlskrona, Sweden.
C3 Blekinge Institute Technology
RP Petersen, K (corresponding author), Blekinge Inst Technol, Sch Comp, Box 520, SE-37225 Karlskrona, Sweden.
EM Kai.Petersen@bth.se
CR [Anonymous], 2005, Product Development Value Stream Mapping (PDVSM) Manual (Issue September)
   Chase J.P., 2001, Value Creation in the Product Development Process
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P343, DOI 10.1109/ESEM.2011.44
   Dalgobind M., 2009, Advances in Production Engineering & Management, V4, P221
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Grewal Chandandeep, 2008, International Journal of Manufacturing Technology and Management, V15, P404, DOI 10.1504/IJMTM.2008.020176
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Hibbs Curt, 2009, The art of lean software development: a practical and incremental approach
   Hines P, 1997, INT J OPER PROD MAN, V17, P46, DOI 10.1108/01443579710157989
   Hines P., 1999, BENCHMARKING, V6, P60
   Kaplan R. S, 2003, BALANCED SCORECARD T
   Kaplan RS, 2005, HARVARD BUS REV, V83, P172
   Khurum M, 2013, J SOFTW-EVOL PROC, V25, P711, DOI 10.1002/smr.1560
   Kitchenham B, 2007, IEEE SOFTWARE, V24, P73, DOI 10.1109/MS.2007.49
   Lane JA, 2007, SYST ENG, V10, P297, DOI 10.1002/sys.20078
   Leffingwell D., 1999, MANAGING SOFTWARE RE, V1
   Mehta Merwan, 2008, Software Process: Improvement and Practice, V13, P101, DOI 10.1002/spip.367
   Mohanraj R., 2011, International Journal of Productivity and Quality Management, V7, P501, DOI 10.1504/IJPQM.2011.040546
   Morgan J., 2020, The Toyota Product Development System: integrating People, Process, and Technology
   Morse Janice M., 1994, HDB QUALITATIVE RES, P220
   Mujtaba Shahid, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P139, DOI 10.1109/ASWEC.2010.37
   Ohno T., 1998, TOYOTA PRODUCTION SY
   Pavnaskar SJ, 2004, APPL VALUE STREAM MA, P833
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
   Petersen K., 2010, MODERN SOFTWARE ENG
   Petersen K, 2013, P JOINT C 23 INT WOR
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Petersen K, 2010, LECT NOTES COMPUT SC, V6195, P345, DOI 10.1007/978-3-642-14347-2_30
   Petersen K, 2010, J SYST SOFTWARE, V83, P1275, DOI 10.1016/j.jss.2010.02.005
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Petersen K, 2009, LECT NOTES BUS INF, V32, P386
   Poppendieck M, 2008, IMPLEMENTING LEAN SO
   Reinertsen D.G., 2009, The Principles of Product Development Flow: Second Generation Lean Product Development
   Robson C., 2002, Real World Research, V2nd
   Rother M., 2003, Learning to See: Value Stream Mapping to Add Value and Eliminate Muda
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   S. a. s. e. DoD, 2008, SYST ENG GUID SYST S
   Singh P, 2012, APPL MECH MATER, V110-116, P2062, DOI 10.4028/www.scientific.net/AMM.110-116.2062
   Srambikal V, 2008, IMPLEMENTATION CELLU, P1
   Tong Aaron, 2007, Hong Kong Engineer, V35, P25
   Vujica HN, 2008, ANN DAAAM, P1515
   Wang XF, 2012, J SYST SOFTWARE, V85, P1287, DOI 10.1016/j.jss.2012.01.061
   Waters M., 2005, Engineering Management, V15, P10, DOI 10.1049/em:20050401
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Womack J., 2003, Lean Thinking: Banish Waste and Create Wealth in Your Corporation
   Yin R.K., 2011, Qualitative research from start to finish
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 49
TC 24
Z9 29
U1 0
U2 51
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2014
VL 26
IS 12
BP 1074
EP 1105
DI 10.1002/smr.1647
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX0NS
UT WOS:000346649500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kuhrmann, M
   Fernández, DM
   Tiessler, M
AF Kuhrmann, Marco
   Fernandez, Daniel Mendez
   Tiessler, Michaela
TI A mapping study on the feasibility of method engineering
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE situational method engineering; method engineering; software process;
   software process adaptation; software process tailoring; mapping study;
   systematic literature review
ID PROJECT; MODEL
AB Software processes have become inherently complex to cope with the various situations we face in project environments. In response, the research area of method engineering arose in the 1990s aiming at the systematization of process construction and application. Although the research area has gained much attention and offered a plethora of contributions so far, we still have little knowledge about which basic concepts are finally established and what their feasibility is. To overcome this shortcoming, we need a systematic investigation of the publication flora in method engineering. To reach this aim, we contribute a systematic mapping study and investigate, inter alia, which contributions were published over time and which research type facet they address to distill a common understanding about available method engineering concepts and their maturity. On the basis of the review of 83 publications, our results show that even if a high number of contributions is available, most of those contributions only repeat and discuss formerly introduced concepts, whereas reports on empirically sound evidence on the feasibility are still missing. Although the research area constitutes a many contributions, yet missing are a common understanding of method engineering and empirically sound investigations that would allow for practical application and experience extraction. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Kuhrmann, Marco; Fernandez, Daniel Mendez; Tiessler, Michaela] Tech Univ Munich, Fac Informat Software & Syst Engn, D-85748 Garching, Germany.
C3 Technical University of Munich
RP Kuhrmann, M (corresponding author), Tech Univ Munich, Fac Informat Software & Syst Engn, Boltzmann Str 3, D-85748 Garching, Germany.
EM kuhrmann@in.tum.de
RI Mendez, Daniel/ABA-4579-2021; Tiessler-Horvat, Michaela/JVZ-9967-2024
OI Mendez, Daniel/0000-0003-0619-6027; 
CR Aharoni A, 2008, LECT NOTES COMPUT SC, V5231, P455, DOI 10.1007/978-3-540-87877-3_33
   Aharonis A, 2007, SITUATIONAL METHOD E
   [Anonymous], 2007, 1 ISOIEC JTC
   Asadi M, 2009, STUD COMPUT INTELL, V253, P277, DOI 10.1007/978-3-642-05441-9_24
   Asadis M, 2009, IND SOFTW ENG C
   Aydin M. N., 2004, Turkish Journal Electrical Engineering and Computer Sciences, Elektrik, V12, P127
   Aydin MN, 2002, LECT NOTES COMPUT SC, V2559, P158
   Bajecs M, 2007, INFORM SOFTWARE TECH, V49, P354
   Basili V. R., 1993, Software Engineering - ESEC '93. 4th European Software Engineering Conference Proceedings, P68
   Basilis VR, 1987, 9 INT C SOFTW ENG IC
   Beckers J, 2007, AMCIS 2007 P
   Borners R, 2010, APPL SITUATIONAL MET, P18
   Brauns C, 2005, ACM S APPL COMP
   Brinkkemper S, 1999, INFORM SYST, V24, P209, DOI 10.1016/S0306-4379(99)00016-2
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Brinkkempers S, 1998, 10 INT C ADV INF SYS
   Brinkkempers S, 1990, THESIS RADBOUD U
   Brinkkempers S, 1996, METHOD ENG PRINCIPLE
   Bucher T, 2012, J DATABASE MANAGE, V23, P31, DOI [10.4018/jdm.2012010102, 10.4018/jdm.20120.0.02]
   Casares SJ, 2010, CEUR WORKSHOP P, V627
   Chella A, 2004, IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON INTELLIGENT AGENT TECHNOLOGY, PROCEEDINGS, P471
   Cossentinos M, 2005, SOFTWARE ENG MULTIAG, V3390
   Coulin C., 2006, Software Process Improvement and Practice, V11, P451, DOI 10.1002/spip.288
   Dais F, 2007, 8 ACIS INT C SOFTW E
   de Cesare Sergio, 2008, Journal of Computing and Information Technology - CIT, V16, P157, DOI 10.2498/cit.1000898
   Dominguez E, 2007, INFORM SYST, V32, P181, DOI 10.1016/j.is.2005.07.001
   Engels G, 2010, LECT NOTES COMPUT SC, V5765, P411, DOI 10.1007/978-3-642-17322-6_18
   Fernández DM, 2010, LECT NOTES COMPUT SC, V6395, P183
   Ferratts TW, 2010, 2010 SPEC INT GROUP
   Firesmiths DG, 2001, OPEN PROCESS FRAMEWO
   Fitzgerald B, 2003, COMMUN ACM, V46, P64, DOI 10.1145/641205.641206
   Fitzgeralds B, 2000, PRACTICE
   Gonzalez-Perezs C, 2007, IFIP INT FEDERATION, P244
   Grahams I, 1997, SITUATIONAL METHOD E
   Harmsens AF, 1997, THESIS U TWENTE
   Harmsens F, 1995, AS PAC SOFTW ENG C
   Henderson-Sellers B, 2003, COMMUN ACM, V46, P73, DOI 10.1145/944217.944242
   Henderson-Sellers B, 2004, J UNIVERS COMPUT SCI, V10, P326
   Henderson-Sellers B, 2008, 19 AUSTR C SOFTW ENG
   Henderson-Sellers B, 2006, INFORM SYSTEMS TECHN
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   Henderson-Sellerss B, 2005, ACM SIGSOFT SOFTWARE
   Henderson-Sellerss B, 2007, CEUR WORKSHOP P, V247
   Henningers S, 2001, INT C CAS BAS REAS C
   Hug C, 2009, J SYST SOFTWARE, V82, P1730, DOI 10.1016/j.jss.2009.05.020
   Janieschs C, 2010, 43 HAW INT C SYST SC
   Kaluss G, 2013, P INT C SOFTW SYST P
   Kangs D, 2008, SOFTW ENG C 2008 APS
   Karlsson F, 2006, EUR J INFORM SYST, V15, P82, DOI 10.1057/palgrave.ejis.3000596
   Karlsson F, 2004, INFORM SOFTWARE TECH, V46, P619, DOI 10.1016/j.infsof.2003.12.004
   Karlssons F, 2008, P CAISE FOR, V344, P1, DOI DOI 10.1145/1479190.1479193
   Karlssons F, 2008, 3 INT C PRAGM WEB
   Keenans F., 2004, P 26 INT C SOFTW ENG
   Kettunen P, 2005, INFORM SOFTWARE TECH, V47, P587, DOI 10.1016/j.infsof.2004.11.001
   Killispergers P, 2010, INT C SOFTW PROC ICS
   Kitchenhams B, 2004, TRSE0401 KEEL U
   Kuhrmanns M, 2012, SCI COMPUT PROGRAM, V79, P172
   Kuhrmanns M, 2013, P INT C SOFTW SYST P
   Kuhrmanns M, 2013, INT C EV ASS SOFTW E
   Leppanen M., 2006, Software Process Improvement and Practice, V11, P539, DOI 10.1002/spip.292
   Lobsitzs RH, 1996, HAW INT C SYST SCI
   Low G, 2010, J OBJECT TECHNOL, V9, P93, DOI 10.5381/jot.2010.9.4.a5
   Mirbel I, 2006, REQUIR ENG, V11, P58, DOI 10.1007/s00766-005-0019-0
   Molesinis A, 2009, ACM S APPL COMP
   Nehans Y-R, 2007, SITUATIONAL METHOD E
   OMG, 2008, TECHNICAL REPORT
   Park S, 2006, EXPERT SYST APPL, V30, P179, DOI 10.1016/j.eswa.2005.06.023
   Parnass DL, 1986, IEEE T SOFTWARE ENG, V12, P1
   Peng Xu, 2008, IT Professional, V10, P39, DOI 10.1109/MITP.2008.81
   Pereiras G, 2012, CIBSE, P230
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Piattini M., 2007, ACM SIGSOFT SOFTWARE, V32, P1
   Plihons V, 1996, AS PAC SOFTW ENG C
   Punter T, 1996, INFORM SOFTWARE TECH, V38, P295, DOI 10.1016/0950-5849(95)01087-4
   Puviani M, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P353, DOI 10.1109/SEAA.2009.36
   Qumer A, 2007, P INT COMP SOFTW APP, P539
   Qumer A, 2010, ICSOFT 2010: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P167
   Ralyté J, 2003, LECT NOTES COMPUT SC, V2681, P95
   Ralytes J, 2001, 20 INT C CONC MOD YO
   Ralytes J, 2001, ADV INFORM SYSTEMS E
   Ralytes J, 2007, SITUATIONAL METHOD E
   Ralytes J., 2002, WORK C ENG INF SYST
   Rolland Colette, 2009, Software Process: Improvement and Practice, V14, P143, DOI 10.1002/spip.416
   Rollands C, 1997, P C INFORSID
   Rollands C, 2009, C NEW TRENDS SOFTW M
   Ruiz-Rube I., 2012, THE J, V1, P999
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saekis M, 2002, INT C ADV INF SYST E
   Seemueller H, 2010, ICEIS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 3: INFORMATION SYSTEMS ANALYSIS AND SPECIFICATION, P399
   SMOLANDER K, 1991, LECT NOTES COMPUT SC, V498, P168
   Steenwegs R, 2012, SOFTWARE ENG PROCESS
   Ter Hofstede AHM, 1997, INFORM SYST, V22, P401, DOI 10.1016/S0306-4379(97)00024-0
   Tolvanens J-P, 1996, P IFIP TC8 WORK C ME
   van de Weerd I., 2006, Software Process Improvement and Practice, V11, P521, DOI 10.1002/spip.294
   van de Weerd I, 2007, LECT NOTES COMPUT SC, V4495, P469
   Vlaanderen K, 2008, ICEIS 2008: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL ISAS-1, P147
   Wand Y, 1996, INFORM SOFTWARE TECH, V38, P281, DOI 10.1016/0950-5849(95)01052-1
   Welzels D, 1995, SOFTW ENG STAND S
   White Baker E, 2011, INFORM SYST J, V21, P155, DOI 10.1111/j.1365-2575.2010.00352.x
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wistrand K, 2004, BIOMED SCI INSTRUM, V3084, P189
   Xus P, 2003, SYST SCI 2003 P 36 A, V7
   Yoon IC, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P202, DOI 10.1109/APSEC.2001.991478
   Yoons I-C, 2001, 8 AS PAC SOFTW ENG C
   Zohrevand Z, 2011, ASIA PAC SOFWR ENG, P122, DOI 10.1109/APSEC.2011.55
   Zvanut B, 2010, INFORM SOFTWARE TECH, V52, P397, DOI 10.1016/j.infsof.2009.10.011
NR 106
TC 10
Z9 11
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2014
VL 26
IS 12
BP 1053
EP 1073
DI 10.1002/smr.1642
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX0NS
UT WOS:000346649500001
DA 2024-07-18
ER

PT J
AU McHugh, M
   McCaffery, F
   Casey, V
AF McHugh, Martin
   McCaffery, Fergal
   Casey, Valentine
TI Adopting agile practices when developing software for use in the medical
   domain
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Agile methods; medical mevice; V-model; plan driven; XP; medical device
   software
AB Non-safety critical software developers have been reaping the benefits of adopting agile practices for a number of years. However, developers of safety critical software often have concerns about adopting agile practices. Through performing a literature review, this research has identified the perceived barriers to following agile practices when developing medical device software. A questionnaire-based survey was also conducted with medical device software developers in Ireland to determine the barriers to adopting agile practices. The survey revealed that half of the respondents develop software in accordance with a plan-driven software development lifecycle and that they believe that there are a number of perceived barriers to adopting agile practices when developing regulatory compliant software such as being contradictory to regulatory requirements, insufficient coverage of risk management activities and the lack of up-front planning. In addition, a comparison is performed between the perceived and actual barriers. Based upon the findings of the literature review and survey, it emerged that no external barriers exist to adopting agile practices when developing medical device software and the barriers that do exists are internal barriers such as getting stakeholder buy in. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [McHugh, Martin; McCaffery, Fergal; Casey, Valentine] Dundalk Inst Technol, Dept Comp & Math, Dundalk, Louth, Ireland.
C3 Dundalk Institute of Technology
RP McHugh, M (corresponding author), Dundalk Inst Technol, Dept Comp & Math, Dundalk, Louth, Ireland.
EM martin.mchugh@dkit.ie
RI casey, val/AAQ-1523-2021
OI Mc Caffery, Fergal/0000-0002-0839-8362
FU Science Foundation Ireland (SFI) Stokes Lectureship Programme
   [07/SK/I1299]; SFI Principal Investigator Programme [08/IN.1/I2030];
   Irish Government; Lero - the Irish Software Engineering Research Centre
   [10/CE/I1855]; European Regional Development Fund; Science Foundation
   Ireland; Science Foundation Ireland (SFI) [08/IN.1/I2030] Funding
   Source: Science Foundation Ireland (SFI)
FX This research is supported by the Science Foundation Ireland (SFI)
   Stokes Lectureship Programme, grant number 07/SK/I1299, the SFI
   Principal Investigator Programme, grant number 08/IN.1/I2030 (the
   funding of this project was awarded by Science Foundation Ireland under
   a co-funding initiative by the Irish Government and European Regional
   Development Fund), and supported in part by Lero - the Irish Software
   Engineering Research Centre (http://www.lero.ie) grant 10/CE/I1855.
CR AAMI,, 2012, AAMI TIR45:2012 Guidance on the use of AGILE practices in the development of medical device software'
   AAMI, 2006, 62304 ANSIAAMIIEC
   Abrahamsson P, 2002, ESPOO 2002
   Ambler S., 2008, AGILE ADOPTION RATE
   [Anonymous], 2003, ALAN APT SERIES
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Boehm B., 2003, BALANCING AGILITY DI
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Bulska K, 2011, ICT YOUNG 2011 SCI B
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   FDA, 2002, GEN PRINC SOFTW VAL
   FDA, 2007, TITL 21 FOOD DRUGS C
   Fowler Martin., 2001, Software development - The lifecycle starts here
   Frink A, 2003, SURVEY HDB
   Ge X, 2010, AG 2010 ORL FLOR 201
   McCaffery F., 2012, SOFTWARE SYSTEMS TRA
   McCaffery F, 2010, ENCY SOFTWARE ENG, P528
   McHugh M, 2013, SOFTW ENG HEALTHC WO
   McHugh M., 2010, MED DEVICE SECTOR IR
   Mishra S, 2008, SO ASS INF SYST SAIS
   Moe NB, 2008, C SOFTW ENG 2008 ASW
   Munassar NMA, 2010, International Journal of Computer Science Issues (IJCSI), V7, P94
   Rasmussen R., 2009, AG C 2009 AGILE 09 C
   Rottier PA, 2008, P 11 AGILE C AGILE 0
   Salo O, INT S EMP SOFTW ENG
   Sapsford Roger., 2007, Survey Research
   VersionOne, 2010, STAT AG SURV STAG AG
   Vogel D., 2006, DesignFax Online, P1
   Weiguo L, 2009, INT JOINT C COMP SCI
   Weyrauch K, 2006, P C AGILE 2006
NR 30
TC 12
Z9 14
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2014
VL 26
IS 5
SI SI
BP 504
EP 512
DI 10.1002/smr.1608
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH2SF
UT WOS:000335970700006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Unterkalmsteiner, M
   Gorschek, T
   Islam, AKMM
   Cheng, CK
   Permadi, RB
   Feldt, R
AF Unterkalmsteiner, Michael
   Gorschek, Tony
   Islam, A. K. M. Moinul
   Cheng, Chow Kian
   Permadi, Rahadian Bayu
   Feldt, Robert
TI A conceptual framework for SPI evaluation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Software Process Improvement; software measurement; software process
   evaluation
ID SOFTWARE-PROCESS-IMPROVEMENT; EXPERIENCES; SCALES; MODEL
AB Software Process Improvement (SPI) encompasses the analysis and modification of the processes within software development, aimed at improving key areas that contribute to the organizations' goals. The task of evaluating whether the selected improvement path meets these goals is challenging. On the basis of the results of a systematic literature review on SPI measurement and evaluation practices, we developed a framework (SPI Measurement and Evaluation Framework (SPI-MEF)) that supports the planning and implementation of SPI evaluations. SPI-MEF guides the practitioner in scoping the evaluation, determining measures, and performing the assessment. SPI-MEF does not assume a specific approach to process improvement and can be integrated in existing measurement programs, refocusing the assessment on evaluating the improvement initiative's outcome. Sixteen industry and academic experts evaluated the framework's usability and capability to support practitioners, providing additional insights that were integrated in the application guidelines of the framework. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Unterkalmsteiner, Michael; Gorschek, Tony; Islam, A. K. M. Moinul; Feldt, Robert] Blekinge Inst Technol, Sch Comp, Software Engn Res Lab, SE-37179 Karlskrona, Sweden.
   [Cheng, Chow Kian] Healthcare IT, General Elect Healthcare, D-79111 Freiburg, Germany.
   [Permadi, Rahadian Bayu] Amadeus SAS, Product Mkt & Dev, F-06902 Sophia Antipolis, France.
C3 Blekinge Institute Technology; General Electric; Amadeus
RP Unterkalmsteiner, M (corresponding author), Blekinge Inst Technol, Sch Comp, Software Engn Res Lab, SE-37179 Karlskrona, Sweden.
EM mun@bth.se
OI Unterkalmsteiner, Michael/0000-0003-4118-0952
CR Achatz R, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P321, DOI 10.1109/QSIC.2003.1319117
   [Anonymous], 2005, Technical report CMU/SEI-2005-HB- 004
   [Anonymous], 1993, CMUSEI93TR024
   [Anonymous], 1994, How to conduct your own survey
   [Anonymous], P EUR SOFTW PROC IMP
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 1998, Software process improvement
   [Anonymous], 1998, TR215504 ISOIEC
   [Anonymous], 2011, CMUSEI2011HB001
   [Anonymous], MACWORLD AUG
   [Anonymous], 2009, Project Management: A Systems Approach to Planning, Scheduling and Controlling-10th Edition
   Ares J., 2000, Software Process Improvement and Practice, V5, P3, DOI 10.1002/(SICI)1099-1670(200003)5:1<3::AID-SPIP113>3.0.CO;2-T
   Bailey E, 2003, PSM GUIDE 4 0B 1
   Basili Victor, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P488
   BASILI V, 1995, IEEE SOFTWARE, V12, P83, DOI 10.1109/52.469763
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Basili VR, 2010, COMPUTER, V43, P57, DOI 10.1109/MC.2010.108
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Berry M., 2000, Empirical Software Engineering, V5, P183, DOI 10.1023/A:1026534430984
   Briand L., 1996, Softw. Process, Improve-ment Pract., V2, P253
   Canfora G, 2006, SOFTWARE PRACT EXPER, V36, P283, DOI 10.1002/spe.697
   Card D. N., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, DOI 10.1109/CMPSAC.2004.1342834
   Card DN, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P315, DOI 10.1109/QSIC.2003.1319116
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   COMER P, 1993, SOFTWARE QUAL J, V2, P277, DOI 10.1007/BF00403770
   DASKALANTONAKIS MK, 1992, IEEE T SOFTWARE ENG, V18, P998, DOI 10.1109/32.177369
   DASKALANTONAKIS MK, 1990, QUAL ENG, V3, P27
   Debou C., 2000, Software Process Improvement and Practice, V5, P55, DOI 10.1002/(SICI)1099-1670(200003)5:1<55::AID-SPIP111>3.0.CO;2-X
   Díaz-Ley M, 2008, LECT NOTES COMPUT SC, V5089, P19, DOI 10.1007/978-3-540-69566-0_5
   Dror S, 2007, J MODEL MANAG, V2, P40, DOI 10.1108/17465660710733040
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   Ebert C, 1999, J SYST SOFTWARE, V46, P25, DOI 10.1016/S0164-1212(98)10086-9
   Ekdahl F, 2006, EUROMICRO CONF PROC, P216, DOI 10.1109/EUROMICRO.2006.37
   Fenton N., 2001, SOFTWARE BEST PRACTI, V4
   Ferreiro Ferreira Analia Irigoyen, 2008, Software Process: Improvement and Practice, V13, P311, DOI 10.1002/spip.392
   FLORAC WA, 1999, SEI S SOFTW, P1
   Freeman M., 1992, PROJECT MANAGEMENT J, V23, P8, DOI DOI 10.1057/9781137356260.0014
   Goethert W., 2004, CMUSEI2004TN024
   GOLDENSON D., 2003, DEMONSTRATING IMPACT
   Gorschek T, 2004, SOFTWARE PRACT EXPER, V34, P1311, DOI 10.1002/spe.615
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   HERBSLEB J, 1994, CMUSEI94TR013
   Herbsleb JD, 1998, PROC INT CONF SOFTW, P271, DOI 10.1109/ICSE.1998.671136
   Hyde K., 2004, Software Process Improvement and Practice, V9, P217, DOI 10.1002/spip.205
   International Organization for Standardization, 2002, 15939 ISOIEC
   Ivarsson M, 2012, SOFTWARE QUAL J, V20, P173, DOI 10.1007/s11219-011-9139-6
   Iversen J, 2006, INT J INFORM MANAGE, V26, P30, DOI 10.1016/j.ijinfomgt.2005.10.006
   Iversen J, 2003, INFORM SYST J, V13, P3, DOI 10.1046/j.1365-2575.2003.00136.x
   Jarvinen J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P22, DOI 10.1109/METRIC.1999.809722
   Järvinen J, 1999, VTT SYMP, V195, P49
   Järvinen J, 2000, LECT NOTES COMPUT SC, V1840, P257
   Jenkins CR, 1997, J SOCIOL, V89, P373
   Jones C, 1996, COMPUTER, V29, P95, DOI 10.1109/2.481498
   Kasunic M, 2008, CMUSEI2008TN028
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   KNAPP TR, 1990, NURS RES, V39, P121
   Kuntzmann-Combelles A., 1995, LECT NOTES COMPUTER, V926, P16
   Kvale S., 1996, INTERVIEW VIEWS INTR
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   Lowy A, 2004, POWER 2X2 MATRIX
   McGarry J., 2001, PRACTICAL SOFTWARE M
   Mohagheghi P, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363104
   Moreau B., 2003, Software Process Improvement and Practice, V8, P135, DOI 10.1002/spip.176
   Murugappan M, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1184165
   Murugappan M, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P248, DOI 10.1109/APAQ.2000.883798
   Niessink F, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P82, DOI 10.1109/CSMR.1998.665755
   Norreklit H., 2000, MANAGE ACCOUNT RES, V11, P65, DOI DOI 10.1006/MARE.1999.0121
   Park R.E., 1996, GOAL DRIVEN SOFTWARE
   Parkinson ST, 2010, COMMUN ACM, V53, P142, DOI 10.1145/1666420.1666456
   PAULISH DJ, 1994, COMPUTER, V27, P50, DOI 10.1109/2.312039
   Pearl J., 1998, WHY THERE IS NO STAT
   Preston CC, 2000, ACTA PSYCHOL, V104, P1, DOI 10.1016/S0001-6918(99)00050-5
   PULFORD K, 1995, QUANTITATIVE APPROAC
   Ramil JF, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P199, DOI 10.1109/METRIC.2001.915529
   Redzic C, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P396, DOI 10.1109/SERA.2006.61
   Salo O, 2005, 2005 International Symposium on Empirical Software Engineering (ISESE), Proceedings, P187, DOI 10.1109/ISESE.2005.1541828
   Savioja Erkki, 2007, Software Process: Improvement and Practice, V12, P585, DOI 10.1002/spip.345
   Scacchi W., 2001, ENCY SOFTWARE ENG, P993
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Software Engineering Institute, 2010, CMUSEI2010TR033
   Sommerville I, 2005, ACM T SOFTW ENG METH, V14, P85, DOI 10.1145/1044834.1044837
   Stålhane T, 2004, LECT NOTES COMPUT SC, V3281, P150
   STEVENS SS, 1946, SCIENCE, V103, P677, DOI 10.1126/science.103.2684.677
   Trienekens J, 2001, SOFTWARE QUAL J, V9, P269, DOI 10.1023/A:1013715203889
   Umarji M, 2009, INT SYMP EMP SOFTWAR, P237
   Unterkalmsteiner M, 2011, EXTENDED MAT CONCEPT
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   van Solingen R, 2004, IEEE SOFTWARE, V21, P32, DOI 10.1109/MS.2004.1293070
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   Weiss DM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P221, DOI 10.1109/ICSE.2002.1007970
   Wirth N, 2008, IEEE ANN HIST COMPUT, V30, P32, DOI 10.1109/MAHC.2008.33
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 94
TC 8
Z9 9
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2014
VL 26
IS 2
BP 251
EP 279
DI 10.1002/smr.1637
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA5IJ
UT WOS:000331129000004
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Korsaa, M
   Johansen, J
   Schweigert, T
   Vohwinkel, D
   Messnarz, R
   Nevalainen, R
   Biro, M
AF Korsaa, Morten
   Johansen, Joern
   Schweigert, Tomas
   Vohwinkel, Detlef
   Messnarz, Richard
   Nevalainen, Risto
   Biro, Miklos
TI The people aspects in modern process improvement management approaches
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE SPI; Software Process Improvement; SPICE
C1 [Korsaa, Morten; Johansen, Joern] DELTA, DK-2970 Horsholm, Denmark.
   [Schweigert, Tomas; Vohwinkel, Detlef] SQS Software Qual Syst AG, D-51149 Cologne, Germany.
   [Messnarz, Richard] ISCN GesmbH, A-8010 Graz, Austria.
   [Nevalainen, Risto] Spinet Oy, Espoo 02330, Finland.
   [Biro, Miklos] Dennis Gabor Coll, H-1119 Budapest, Hungary.
RP Korsaa, M (corresponding author), DELTA, Venlighedsvej 4, DK-2970 Horsholm, Denmark.
EM MKO@delta.dk
RI Biro, Miklos/K-8741-2014; Messnarz, Richard/AAH-8716-2020
OI Biro, Miklos/0000-0001-8627-1159; Messnarz, Richard/0000-0002-0555-3160
CR Baddoo N, 2008, EUROSPI 2008 P
   Hammer H., 2007, HARVARD BUSINESS REV
   Hammer M., 2011, PROCESS ENTERPRISE M
   Jacobson I, 2007, J OBJECT TECHNOL, V6, P41, DOI 10.5381/jot.2007.6.6.c5
   Kasse T., 2004, Practical Insight Into CMMI
   Mathiassen L., 2002, IMPROVING SOFTWARE O
   Messnarz R, 2009, P INT CIRP DES C CRA
   Messnarz R, 1999, P EUROSPI 1999 C 25
   Messnarz R, 2008, SOFTWARE PROCESS IMP, V4, P297
   MESSNARZ R, 2006, WILEY SPIP J SOFTWAR, V11, P213
   Pries-Heje J, 2007, BOOK IMPROVING SOFTW
   Pries-Heje J., 2010, SPI Manifesto'
   Risto N, 2009, SOFTWARE PROCESS IMP, DOI [10.1002/spip.438, DOI 10.1002/SPIP.438]
NR 13
TC 57
Z9 56
U1 0
U2 6
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2013
VL 25
IS 4
SI SI
BP 381
EP 391
DI 10.1002/smr.570
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 131XD
UT WOS:000318030600007
DA 2024-07-18
ER

PT J
AU Kruchten, P
AF Kruchten, Philippe
TI Contextualizing agile software development
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile software development; software development process; process
   adaptation
ID ARCHITECTURE
AB This paper presents a contextual model for software-intensive systems development to guide the adoption and adaptation of agile software development practices. This model was found especially useful when the project context departs significantly from the agile sweet spot, that is, the ideal conditions in which agile software development practices originated from, and where they are most likely to succeed, out of the box. This is the case for large systems, distributed development environment, safety-critical systems, system requiring a novel architecture, or systems with an unorthodox business model or governance model. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 Univ British Columbia, Dept Elect & Comp Engn, Vancouver, BC V5Z 1M9, Canada.
C3 University of British Columbia
RP Kruchten, P (corresponding author), Univ British Columbia, Dept Elect & Comp Engn, Vancouver, BC V5Z 1M9, Canada.
EM pbk@ece.ubc.ca
RI Kruchten, Philippe/B-2484-2012
OI Kruchten, Philippe/0000-0003-1359-4867
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Abrahamsson P, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.36
   Ambler S.W., 2009, Agility at scale: Become as Agile as you can be
   [Anonymous], 2004, BAS 2 REV INT CAP FR
   [Anonymous], IMPLEMENTING LEAN SO
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], COBIT 4 0 CONTR OBJ
   [Anonymous], 2009, ACM SIGSOFT SOFTWARE
   [Anonymous], P AG 2008 C TOR 4 8
   [Anonymous], J DEFENSE SOFTWARE
   [Anonymous], AG 2006 C MINN MN US
   [Anonymous], IT GOVERNANCE SERVIC
   [Anonymous], EUROSPI 2010 GREN 3
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], RTCADO178B
   [Anonymous], 25 EUR C EUROMICRO 9
   [Anonymous], CSI COMMUNICATIONS
   [Anonymous], DSDM DYNAMIC SYSTEMS
   [Anonymous], COMMUNICATIONS ACM
   [Anonymous], P AG 2009 C CHIC AUG
   [Anonymous], 18 ANN CAN C EL COMP
   [Anonymous], RATIONAL EDGE AUG
   [Anonymous], P ACM S APPL COMP
   Beck K., 2000, EXTREME PROGRAMMING
   Beck K., 2001, P 39 INT C EXHIBITIO
   Blair S, 2010, IEEE SOFTWARE, V27, P26, DOI 10.1109/MS.2010.52
   Boehm B., 2003, BALANCING AGILITY DI
   Borchers G, 2003, PROC INT CONF SOFTW, P540, DOI 10.1109/ICSE.2003.1201234
   Cockburn A., 2004, Crystal clear: A human-powered methodology for small teams: A human-powered methodology for small teams
   Cohn Mike, 2009, Succeeding with Agile: Software Development Using Scrum, V1st
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Highsmith J., 2002, Agile software development ecosystems
   Hoda R, 2010, ACM SIGPLAN NOTICES, V45, P74, DOI 10.1145/1932682.1869467
   Kruchten P., 2004, "Third International Workshop on Global Software Development (GSD 2004)" W12S Workshop - 26th International Conference on Software Engineering, P59, DOI 10.1049/ic:20040315
   Kruchten Philippe, 2007, ACM Queue, V5, DOI 10.1145/1281881.1281893
   Larman C., 2008, Scaling Lean and Agile Development: Thinking and Organizational Tools for Large-Scale Scrum
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Lings B., 2006, The transfer and diffusion of information technology for organizational resilience: IFIP TC8 WG 8.6 International Working Conference, June 7-10, 2006, Galway, P94
   Madison J, 2010, IEEE SOFTWARE, V27, P41, DOI 10.1109/MS.2010.35
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   Poppendieck M., 2002, Cutter IT Journal, V15, P12
   Poppendieck M., 2009, LEADING LEAN SOFTWAR
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Schwaber K., 2007, The enterprise and Scrum
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Sharp H, 2000, IEEE SOFTWARE, V17, P40, DOI 10.1109/52.819967
   Smite D, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P1
   Stapleton Jennifer., 2003, DSDM: Business focused development
   Stephens Matt, 2003, Extreme Programming Refactored: The XP
NR 49
TC 62
Z9 68
U1 4
U2 60
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2013
VL 25
IS 4
SI SI
BP 351
EP 361
DI 10.1002/smr.572
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 131XD
UT WOS:000318030600004
DA 2024-07-18
ER

PT J
AU Vanya, A
   Klusener, S
   Premraj, R
   van Vliet, H
AF Vanya, Adam
   Klusener, Steven
   Premraj, Rahul
   van Vliet, Hans
TI Supporting software architects to improve their software system's
   decomposition - lessons learned
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software evolution; lessons learned; software architecture; mining
   software repositories
AB The architect of a large, evolving system may wish to revise its decomposition from time to time; for instance, because the structure has deteriorated over time, certain components need to be outsourced to another site. One way to assess the current decomposition is to consider the past evolution, searching for components that often changed together. We iteratively devised and implemented a process for doing so at Philips Healthcare MRI. In this paper, we describe the lessons learned on how to effectively support architects to improve their system decomposition. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Vanya, Adam; Klusener, Steven; Premraj, Rahul; van Vliet, Hans] Vrije Univ Amsterdam, Dept Comp Sci, Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam
RP van Vliet, H (corresponding author), Vrije Univ Amsterdam, Dept Comp Sci, Amsterdam, Netherlands.
EM hans@cs.vu.nl
RI Vanya, Ádám/ABB-6283-2021
OI Vanya, Adam/0000-0002-8969-8489
FU Dutch Ministry of Economic Affairs under the BSIK program
FX This work has been carried out as part of the Darwin project at Philips
   Healthcare under the responsibility of the Embedded Systems Institute.
   This project is partially supported by the Dutch Ministry of Economic
   Affairs under the BSIK program. More information on the Darwin project
   can be found at: http://www.esi.nl/.
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Antoniol G, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P23, DOI 10.1109/IWPSE.2005.11
   Babar MA, 2010, IEEE SOFTWARE, V27, P89, DOI 10.1109/MS.2010.77
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Brcina R, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P196, DOI 10.1109/ECBS.2009.20
   Bullen C.e., 1981, Sloan School Management
   Caralli RA., 2004, The critical success factor method: Establishing a foundation for enterprise security management
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   D'Ambros M, 2009, IEEE T SOFTWARE ENG, V35, P720, DOI 10.1109/TSE.2009.17
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Girba T, 2004, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2004.1357788
   Hall T, 1997, IEEE SOFTWARE, V14, P55, DOI 10.1109/52.582975
   Hoffman K, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P91
   Kuhn A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P133
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Pinzger M, 2008, INT C PROGRAM COMPRE, P252, DOI 10.1109/ICPC.2008.23
   Punter T, 2010, VIEWS EVOLVABILITY E
   Ratzinger J., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI DOI 10.1145/1082983.1083155
   Rochimah S.W. K., 2007, SOFTWARE ENG ADV, P19, DOI [10.1109/ICSEA.2007.17, DOI 10.1109/ICSEA.2007.17]
   Suh Steve D., 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P3, DOI 10.1109/ASWEC.2010.26
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   van de Laar P, 2007, THIRD INTERNATIONAL IEEE WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P48, DOI 10.1109/SE.2007.7
   VANDERLINDEN FJ, 1995, IEEE SOFTWARE, V12, P51, DOI 10.1109/52.469760
   Vanya A., 2010, P 14 EUR C SOFTW MAI, P269
   Vanya A, 2011, P C SOFTW MAINT REEN
   Vanya A, 2008, INT C PROGRAM COMPRE, P192, DOI 10.1109/ICPC.2008.34
   Vanya A, 2009, WORK CONF REVERSE EN, P227, DOI 10.1109/WCRE.2009.30
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Yourdon E., 1978, STRUCTURED DESIGN
   Zimmermann T., 2004, Proc. of the 1st Int'lWorkshop onMining Software Repositories (MSR), P2, DOI [DOI 10.1049/IC:20040466, 10.1049/ic:20040466]
NR 34
TC 4
Z9 4
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2013
VL 25
IS 3
BP 219
EP 232
DI 10.1002/smr.574
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 112UN
UT WOS:000316619400002
DA 2024-07-18
ER

PT J
AU Vacca, A
   Fredella, M
   Di Sorbo, A
   Visaggio, CA
   Piattini, M
AF Vacca, Anna
   Fredella, Michele
   Di Sorbo, Andrea
   Visaggio, Corrado A.
   Piattini, Mario
TI Functional suitability assessment of smart contracts: A survey and first
   proposal
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE functional suitability; ISO/IEC 25000; quality evaluation; smart
   contract
ID SOFTWARE QUALITY
AB Blockchain is a cross-cutting technology allowing interactions among untrusted entities in a distributed manner without the need for involving a trusted third party. Smart contracts (i.e., programs running on the blockchain) enabled organizations to envision and implement solutions to real-world problems in less cost and time. Given the immutability of blockchain and the lack of best practices for properly designing and developing smart contracts, it is crucial to assure smart contract quality before deployment. With the help of an exploratory survey involving developers and researchers, this paper identifies the practices and tools used to develop, implement, and evaluate smart contracts. The survey received 55 valid responses. Such responses indicate that (i) inefficiencies may occur during the development cycle of a smart contract, especially regarding requirements specification, design, and testing phases, and (ii) the lack of a shared standard to evaluate the functional quality of implemented smart contracts. To start coping with these issues, the adoption of functional suitability assessment measures recommended by the ISO/IEC 25000 standard, widely used in software engineering, is proposed by adapting them to the context of smart contracts. Through some examples, the manuscript also illustrates how to measure the functional completeness and correctness of smart contracts. The proposed procedure to measure smart contract functional suitability brings advantages to both developers and users of decentralized finance or non-fungible tokens platforms, data marketplaces, or shipping and real estate services, just to mention a few. In particular, it helps (i) better outline the responsibilities of smart contracts, (ii) uncover errors and deficiencies of smart contracts in the early stages, and (iii) ensure that the established requirements are met.
   In this paper, we present the results of a survey on the practices, processes, standards, approaches, and tools adopted by real-world blockchain developers during the various phases of smart contract development. Moreover, we propose procedures to properly measure the functional completeness and correctness sub-characteristics of the ISO/IEC 25010 standard in the case of smart contracts. image
C1 [Vacca, Anna; Fredella, Michele; Di Sorbo, Andrea; Visaggio, Corrado A.] Univ Sannio, Dept Engn, Benevento, Italy.
   [Piattini, Mario] Univ Castilla La Mancha UCLM, Inst Technol & Informat Syst, AQCLab, Ciudad Real, Spain.
   [Vacca, Anna] Univ Sannio, Dept Engn, Via Traiano 3, I-82100 Benevento, Italy.
C3 University of Sannio; Universidad de Castilla-La Mancha; University of
   Sannio
RP Vacca, A (corresponding author), Univ Sannio, Dept Engn, Via Traiano 3, I-82100 Benevento, Italy.
EM avacca@unisannio.it
RI Piattini, Mario/F-6271-2013
OI Piattini, Mario/0000-0002-7212-8279; Di Sorbo,
   Andrea/0000-0002-3192-739X
CR Abdellatif T, 2018, INT CONF NEW TECHNOL
   Akbar MA, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2500
   Akca S., 2021, Testing smart contracts: which technique performs best?, P1
   Al Omar A., 2021, A transparent and privacy-preserving healthcare platform with novel smart contract for smart cities
   Almakhour M, 2020, PERVASIVE MOB COMPUT, V67, DOI 10.1016/j.pmcj.2020.101227
   Alqahtani S., 2020, Formal verification of functional requirements for smart contract compositions in supply chain management systems
   Angraal S, 2017, CIRC-CARDIOVASC QUAL, V10, DOI 10.1161/CIRCOUTCOMES.117.003800
   Bahga A., 2016, J Softw Eng Appl, V9, P533, DOI [DOI 10.4236/JSEA.2016.910036, 10.4236/jsea.2016.910036]
   Baralla G, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P40, DOI 10.1109/WETSEB.2019.00012
   Barboni M, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2021), P50, DOI 10.1109/AST52587.2021.00014
   Bertoa MF, 2006, J SYST SOFTWARE, V79, P427, DOI 10.1016/j.jss.2005.06.026
   Cagigas D, 2021, IEEE ACCESS, V9, P13904, DOI 10.1109/ACCESS.2021.3052019
   Calero C., 2013, arXiv
   Canfora Gerardo, 2021, 2021 IEEE International Conference on Software Maintenance and Evolution (ICSME), P579, DOI 10.1109/ICSME52107.2021.00060
   Chan WK, 2018, ASIA PAC SOFWR ENG, P707, DOI 10.1109/APSEC.2018.00099
   Chapman P, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2019), P319, DOI 10.1109/Blockchain.2019.00050
   Christidis K, 2016, IEEE ACCESS, V4, P2292, DOI 10.1109/ACCESS.2016.2566339
   Dahmane WM., 2021, Guaranteeing information integrity through blockchains for smart cities, P199
   Destefanis G, 2018, 2018 IEEE 1ST INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE), P19, DOI 10.1109/IWBOSE.2018.8327567
   Di Sorbo A, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111193
   Di Sorbo A, 2021, IEEE T SOFTWARE ENG, V47, P1587, DOI 10.1109/TSE.2019.2930519
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Di Sorbo A, 2015, IEEE INT CONF AUTOM, P12, DOI 10.1109/ASE.2015.12
   Driessen S., 2021, arXiv
   DuPont Q, 2018, RIPE SER GLOB POLIT, P157
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Frank J, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2757
   Franke D, 2012, INT CONF QUAL SOFTW, P154, DOI 10.1109/QSIC.2012.49
   Fu Y, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1110, DOI 10.1145/3338906.3341175
   Garcés L, 2017, INFORM SOFTWARE TECH, V82, P121, DOI 10.1016/j.infsof.2016.10.005
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   Grover P., 2019, Diffusion of blockchain technology
   Gu Z., 2020, Investigation on the quality assurance procedure and evaluation methodology of machine learning building energy model systems, P96
   Gualo F, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110938
   Hajdu A., 2020, 2 WORKSH FORM METH B
   Hajdu A, 2020, LECT NOTES COMPUT SC, V12031, P161, DOI 10.1007/978-3-030-41600-3_11
   Hamdaqa M, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106762
   Hegedus P, 2019, TECHNOLOGIES, V7, DOI 10.3390/technologies7010006
   Hewa T, 2021, J NETW COMPUT APPL, V177, DOI 10.1016/j.jnca.2020.102857
   Hjálmarsson FT, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P983, DOI 10.1109/CLOUD.2018.00151
   HORGAN TR, 1994, COMPUTER, V27, P60, DOI 10.1109/2.312032
   ISO, 2011, ISO/IEC 25040. Systems and Software Engineering Systems and software Quality Requirements and Evaluation (SQuaRE) Evaluation Process
   ISO, 2016, ISO/IEC 25023. Systems and software engineering-Systems and software Quality Requirements and Evaluation (SQuaRE)-Measurement of system and software product quality
   ISO, 2009, ISO/IEC 25012-Software engineering
   ISO/IEC, 2010, Technical report
   Ivanova Y, 2020, PROCEDIA COMPUT SCI, V178, P75, DOI 10.1016/j.procs.2020.11.009
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kamal Gulati D., 2021, Design Eng, V2021, P2122
   Kim KB, 2020, IEEE ACCESS, V8, P209377, DOI 10.1109/ACCESS.2020.3039990
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B., 2002, ACM SIGSOFT Softw. Eng. Notes, V27, P17
   Kitchenharn B., 2003, Software Engineering Notes, V28, P24, DOI 10.1145/638750.638758
   Kochhar PS, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P560, DOI 10.1109/SANER.2015.7081877
   Koulu Riikka., 2016, Blockchains and Online Dispute Resolution: Smart Contracts as an Alternative to Enforcement, V13, P40
   Kuhrmann M., 2016, On the Use of Hybrid Development Approaches in Software and Systems Development: Construction and Test of the Helena Survey
   Lee W.M., 2019, Beginning Ethereum Smart Contracts Programming, P147
   Li ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1198, DOI 10.1109/ASE.2019.00136
   Liao JW, 2019, 2019 SIXTH INTERNATIONAL CONFERENCE ON INTERNET OF THINGS: SYSTEMS, MANAGEMENT AND SECURITY (IOTSMS), P458, DOI 10.1109/iotsms48152.2019.8939256
   Liu ZT, 2019, P INT COMP SOFTW APP, P555, DOI 10.1109/COMPSAC.2019.10265
   Losavio Francisca., 2003, J OBJECT TECHNOL, V2, P133
   Manjunath KN, 2013, 2013 IEEE INTERNATIONAL MULTI CONFERENCE ON AUTOMATION, COMPUTING, COMMUNICATION, CONTROL AND COMPRESSED SENSING (IMAC4S), P26, DOI 10.1109/iMac4s.2013.6526379
   Marchesi M, 2018, CEE-SECR'18: PROCEEDINGS OF THE 14TH CENTRAL AND EASTERN EUROPEAN SOFTWARE ENGINEERING CONFERENCE RUSSIA, DOI 10.1145/3290621.3290627
   Mavridou A, 2019, LECT NOTES COMPUT SC, V11598, P446, DOI 10.1007/978-3-030-32101-7_27
   Medeiros H., 2019, SolUnit: A framework for reducing execution time of smart contract unit tests, P264
   Mohanta BK, 2018, INT CONF COMPUT
   Moraga MA., 2005, A reusability model for portlets, P21
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Navas R., 2016, Modelos de Calidad para Servicios Cloud
   Ong AD, 2000, J APPL SOC PSYCHOL, V30, P1691, DOI 10.1111/j.1559-1816.2000.tb02462.x
   Osterland T, 2020, PERVASIVE MOB COMPUT, V63, DOI 10.1016/j.pmcj.2020.101129
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pawlak M, 2019, LECT NOTE DATA ENG, V23, P233, DOI 10.1007/978-3-319-98557-2_21
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Praveen P., 2021, Blockchain Applications in IoT Ecosystem, P225
   Radulovic F, 2015, COMPUT STAND INTER, V38, P101, DOI 10.1016/j.csi.2014.09.001
   Rodriguez M., 2016, Softw Qual Profes, V18
   Rodriguez M., 2015, Quality Progress, V48, P30
   Santhi AR, 2022, LOGISTICS-BASEL, V6, DOI 10.3390/logistics6010015
   Schneidewind, 2018, Tech. Rep
   Sharma G., 2017, INT J APPL RES, V3, P749, DOI DOI 10.22271/ALLRESEARCH.2017.V3.I3I
   Sillaber C., 2017, Datenschutz Und Datensicherheit-DuD, V41, P497, DOI DOI 10.1007/S11623-017-0819-7
   Singh Surabhi, 2020, Journal for Global Business Advancement, V13, P643, DOI 10.1504/JGBA.2020.112821
   Singh S., 2023, The Int J Entrepreneur Innov, V2023
   Spencer D., 2009, CARD SORTING DESIGNI
   Sujeetha R., 2021, 2021 2nd International Conference on Smart Electronics and Communication (ICOSEC), P378, DOI 10.1109/ICOSEC51865.2021.9591750
   Suryn W., 2014, Software Quality Engineering: A Practitioner's Approach, P35
   Tang X., 2021, The vulnerabilities in smart contracts: a survey, P177
   Tolmach P, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3464421
   Tonelli R, 2018, Arxiv, DOI arXiv:1802.01517
   Vacca A, 2022, INT C PROGRAM COMPRE, P214, DOI 10.1145/3524610.3529157
   Vacca A, 2021, J SYST SOFTWARE, V174, DOI 10.1016/j.jss.2020.110891
   Wahyuningrum T., 2017, International Journal of Computer Science Issues, V14, P17, DOI [10.20943/01201702, DOI 10.20943/01201702]
   Wang XY, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P549, DOI 10.1109/saner.2019.8668020
   Wang YP, 2020, LECT NOTES COMPUT SC, V12031, P87, DOI 10.1007/978-3-030-41600-3_7
   Wöhrer M, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (IEEE ICBC), DOI 10.1109/icbc48266.2020.9169399
   Worley CR, 2019, LECT NOTES BUS INF P, V339, P264, DOI 10.1007/978-3-030-04849-5_24
   Wu ZH, 2020, PROC IEEE INT CONF S, P826, DOI 10.1109/ICSME46990.2020.00103
   Yaga D.J., 2018, NIST Pubs, V8202, P1, DOI [10.6028/NIST.IR.8202, DOI 10.6028/NIST.IR.8202]
   Yang Z., 2018, COMPUT RES REPOSITOR, V14, P1, DOI [10.23940/ijpe.18.08.p9.17261734, DOI 10.23940/IJPE.18.08.P9.17261734]
   Yulianty A., 2021, Int Res J Adv Eng Sci, V6, P11
   Zhang P., 2020, ADF-GA: data flow criterion based test case generation for ethereum smart contracts, P754
   Zhou MC, 2023, BRIT J NEUROSURG, V37, P1182, DOI 10.1080/02688697.2020.1821173
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 103
TC 0
Z9 0
U1 3
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 NOV 28
PY 2023
DI 10.1002/smr.2636
EA NOV 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Z1AW6
UT WOS:001109487300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Li, S
   Chen, C
   Huang, Z
   Ding, ZJ
AF Li, Shuo
   Chen, Cheng
   Huang, Zheng
   Ding, Zhijun
TI Change-aware model checking for evolving concurrent programs based on
   Program Dependence Net
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE change-aware model checking; concurrent software; incremental modeling;
   reuse checking
ID PETRI; VERIFICATION
AB Concurrent software needs to be maintained over time, and the differences between continuous versions tend to be localized. The expense that simply reapplying standard model checking techniques to the new version as they evolve may be infeasible. The existing methods reuse partial state-space to reduce the scope. However, it is obviously costly to analyze on the explosive interleaving space of the evolving concurrent programs. The conservative change-impact analysis methods without considering the specific property and leveraging the verified result from the prior version often results in exploring redundant state-space irrelevant to this property. Moreover, the impact of the deleted elements needs to be analyzed on old version, and their impact needs to be mapped to new version, bringing some dispensable costs. In this paper, we propose a change-aware model checking method based on program dependence net (PDNet) for linear temporal logic (LTL). We first propose an incremental modeling method to construct a PDNet of new version by modification rules. Then, we propose a reuse checking algorithm to judge whether the verified result can be reused based on the PDNet slice. Finally, we implement change-aware model checking tool (DAMER) and validate the advantages of our methods.
   We propose the incremental modeling methods by the modification rules to construct the PDNet of the modified version. The dependencies of change elements, particularly deleted elements, can be represented. We propose the reuse checking algorithm based on PDNet slicing to judge whether the verified results can be reused. In the best case, the verified result of the previous version does not change and the checking cost could be significantly compressed. We implement the change-aware model checking methods on a prototype tool DAMER. image
C1 [Li, Shuo; Chen, Cheng; Huang, Zheng; Ding, Zhijun] Tongji Univ, Dept Comp Sci & Technol, Shanghai, Peoples R China.
   [Ding, Zhijun] Tongji Univ, 4800 Caoan Highway, Shanghai 201804, Peoples R China.
C3 Tongji University; Tongji University
RP Ding, ZJ (corresponding author), Tongji Univ, 4800 Caoan Highway, Shanghai 201804, Peoples R China.
EM dingzj@tongji.edu.cn
OI Li, Shuo/0000-0002-1984-6271
FU Thanks to the editor, associate editor, and two reviewers for insightful
   and valuable comments on the improvement of this paper.
FX Thanks to the editor, associate editor, and two reviewers for insightful
   and valuable comments on the improvement of this paper.
CR [Anonymous], 2017, IEEE draft standard for information technology-portable operating system interface (posix(r))
   Backes John, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P99, DOI 10.1007/978-3-642-39176-7_7
   Barney B., 2019, Posix threads programming
   Beyer D., 2012, P FSE ACM, P57, DOI DOI 10.1145/2393596.2393664
   Blocking data structures N., Non-blocking data structures
   Chaki S, 2012, LECT NOTES COMPUT SC, V7148, P119, DOI 10.1007/978-3-642-27940-9_9
   Chen C., 2021, Automatic modeling method for pthread programs based on program dependence net, P9, DOI [10.1145/3507473.3507475, DOI 10.1145/3507473.3507475]
   Courcoubetis C., 1991, Memory-Efficient Algorithms for the Verification of Temporal Properties
   Degener J., 1995, ANSI C Yacc grammar
   Dietsch D, 2021, LECT NOTES COMPUT SC, V12597, P174, DOI 10.1007/978-3-030-67067-2_9
   Ding Z., 2023, arXiv
   Ding ZJ, 2008, IEEE T SYST MAN CY A, V38, P791, DOI 10.1109/TSMCA.2008.923064
   Ding ZJ, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2406336.2406340
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gastin P, 2001, LECT NOTES COMPUT SC, V2102, P53
   Günther H, 2017, LECT NOTES COMPUT SC, V10145, P246, DOI 10.1007/978-3-319-52234-0_14
   Guo SJ, 2016, IEEE INT CONF AUTOM, P531, DOI 10.1145/2970276.2970332
   Hatcliff J, 1999, LECT NOTES COMPUT SC, V1694, P1
   He C, 2021, COMPUT INFORM, V40, P195, DOI 10.31577/cai_2021_1_195
   Henzinger TA, 2003, LECT NOTES COMPUT SC, V2772, P332
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Jensen K., 2009, Coloured Petri Nets, P79, DOI DOI 10.1007/B95112_4
   Lauterburg S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1145/1368088.1368128
   Maruyama K, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P537, DOI 10.1109/SANER.2018.8330255
   Masud A, 2021, ACM T PROGR LANG SYS, V42, DOI 10.1145/3434489
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Murthy DRK, 2018, PROC IEEE INT CONF S, P127, DOI 10.1109/ICSME.2018.00023
   Person S., 2011, SIGPLAN Not, V46, P504, DOI 10.1145/1993316.1993558
   Rothenberg BC, 2018, LECT NOTES COMPUT SC, V11002, P364, DOI 10.1007/978-3-319-99725-4_22
   Rungta N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P109, DOI 10.1109/ICSM.2012.6405261
   SV-COMP, 2022, Software verification competition
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Westergaard M, 2012, LECT NOTES COMPUT SC, V7400, P146, DOI 10.1007/978-3-642-35179-2_7
   Wilkerson JW, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P625, DOI 10.1109/ICSM.2012.6405338
   Wolf Karsten, 2019, Transactions on Petri Nets and Other Models of Concurrency XIV. Lecture Notes in Computer Science (LNCS 11790), P36, DOI 10.1007/978-3-662-60651-3_2
   Wolf K, 2015, SOFTW SYST MODEL, V14, P711, DOI 10.1007/s10270-014-0422-4
   Yang GW, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1059, DOI 10.1145/2568225.2568319
   Yang GW, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2629536
   Yang GW, 2009, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSM.2009.5306334
   Yu WY, 2018, IEEE T SYST MAN CY-S, V48, P130, DOI 10.1109/TSMC.2016.2598287
NR 41
TC 0
Z9 0
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 NOV 9
PY 2023
DI 10.1002/smr.2626
EA NOV 2023
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X3KD5
UT WOS:001097466500001
DA 2024-07-18
ER

PT J
AU Wang, B
   Liu, GZ
   Lin, YF
   Ren, S
   Li, HH
   Zhang, DL
AF Wang, Bo
   Liu, Guizhuang
   Lin, Youfang
   Ren, Shuang
   Li, Honghui
   Zhang, Dalin
TI Enhanced evolutionary automated program repair by finer-granularity
   ingredients and better search algorithms
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE automated program repair; evolutionary program repair; genetic
   improvement; genetic programming
AB Bug repair is time consuming and tedious, which hampers software maintenance. To alleviate the burden, automated program repair (APR) is proposed and has been fruitful in the last decade. Evolutionary repair is the seminal work of this field and proliferated a family of approaches. The performance of evolutionary repair approaches is affected by two main factors: (1) search space, which defines all possible patches, and (2) search algorithms, which navigate the space. Although recent approaches have achieved remarkable progress, the main challenges of the two factors still remain. On one hand, the different kinds of search space are very coarse for containing correct patches. On the other hand, the search process guided by genetic algorithms is inefficient in finding the correct patches in an appropriate time budget. In this paper, we propose MicroRepair, a new evolutionary repair approach to address the two challenges. Rather than finding statement-level patches like existing genetic repair approaches, MicroRepair enlarges the search space by breaking the statements into finer-granularity ingredients that consist of AST leaves. As the search space grows exponentially, the former search algorithms may become inefficient in navigating the larger space. We utilize the best multiobjective search algorithm selected from our empirical comparison of a set of search algorithms. At last, we find redundancies search in the existing genetic process, and we further design a history-aware search strategy to accelerate the process.We evaluated MicroRepair on 224 bugs of real-world from the benchmark Defects4J and compared it with several state-of-the-art repair approaches. The evaluation results show that MicroRepair correctly repaired 26 bugs with a precision of 62%, which significantly outperforms the state-of-the-art evolutionary APR approaches in terms of precision. Moreover, the history-aware search boosts the repair execution speed by 4% on average.
   MicroRepair is a new automated program repair approach that enlarges the search space by breaking statements into finer-granularity ingredients. It outperforms state-of-the-art evolutionary APR approaches in terms of precision, correctly repairing 26 bugs with a 62% precision rate. image
C1 [Wang, Bo; Liu, Guizhuang; Lin, Youfang; Ren, Shuang; Li, Honghui] Beijing Jiaotong Univ, Sch Comp & Informat Technol, Beijing, Peoples R China.
   [Wang, Bo; Lin, Youfang] Beijing Key Lab Traff Data Anal & Min, Beijing, Peoples R China.
   [Zhang, Dalin] Beijing Jiaotong Univ, Sch Software Engn, Beijing, Peoples R China.
   [Wang, Bo] Beijing Jiaotong Univ, Bldg 9,3 Shangyuancun, Beijing 100044, Peoples R China.
C3 Beijing Jiaotong University; Beijing Jiaotong University; Beijing
   Jiaotong University
RP Wang, B (corresponding author), Beijing Jiaotong Univ, Bldg 9,3 Shangyuancun, Beijing 100044, Peoples R China.
EM wangbo_cs@bjtu.edu.cn
RI Wang, Bo/ADN-8547-2022
OI Wang, Bo/0000-0001-7944-9182
FU This paper is supported by the National Natural Science Foundation of
   China (62202040). [62202040]; National Natural Science Foundation of
   China
FX This paper is supported by the National Natural Science Foundation of
   China (62202040).
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Bian ZQ, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR (APR 2021), P1, DOI 10.1109/APR52552.2021.00008
   Britton T, 2013, Reversible Debugging Software "Quantify the Time and Cost Saved Using Reversible Debuggers
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Corne DW., 2002, P GEN EV COMP C GECC, P283, DOI [DOI 10.5555/2955239.2955289, 10.5555/2955239.2955289]
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gao X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3418461
   Gao X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P8, DOI 10.1145/3293882.3330558
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Ghanbari A, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1118, DOI 10.1109/ASE.2019.00116
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Justesen PD., 2009, Multi-objective optimization using evolutionary algorithms, V33
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Liang JJ, 2021, PROC IEEE INT CONF S, P239, DOI 10.1109/ICSME52107.2021.00028
   Lin B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3505247
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Motwani M, 2022, IEEE T SOFTWARE ENG, V48, P637, DOI 10.1109/TSE.2020.2998785
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Z., 2015, P 2015 INT S SOFTW T, P24
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   Shariffdeen R, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P390, DOI 10.1145/3453483.3454051
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Tian HY, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3511096
   Tian HY, 2020, IEEE INT CONF AUTOM, P981, DOI 10.1145/3324884.3416532
   Tian Haoye, 2022, ACM T SOFTW ENG METH, V1, P1
   Wang B., 2022, Enhanced evolutionary automated program repair by finer-granularity ingredients and better search algorithms, P107
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487570
   Xiong YF, 2018, 2018 ACM/IEEE 4TH INTERNATIONAL GENETIC IMPROVEMENT WORKSHOP (GI@ICSE 2018), P37, DOI 10.1145/3194810.3194816
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Ye H., 2022, SelfAPR: self-supervised program repair with test execution diagnostics, P1
   Ye H, 2022, PROC INT CONF SOFTW, P1506, DOI 10.1145/3510003.3510222
   Ye H, 2022, IEEE T SOFTWARE ENG, V48, P2920, DOI 10.1109/TSE.2021.3071750
   Yuan Y, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3360004
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
   Zhu QH, 2023, PROC INT CONF SOFTW, P1443, DOI 10.1109/ICSE48619.2023.00126
   Zhu QH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P341, DOI 10.1145/3468264.3468544
   Zitzler E., 2001, TIK-Report, V103, P1
NR 70
TC 0
Z9 0
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 OCT 9
PY 2023
DI 10.1002/smr.2624
EA OCT 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T4FA8
UT WOS:001077550400001
OA Bronze
DA 2024-07-18
ER

PT J
AU Goerer, B
   Aydemir, FB
AF Goerer, Binnur
   Aydemir, Fatma Basak
TI RoboREIT: An interactive robotic tutor with instructive feedback
   component for requirements elicitation interview training
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE interactive robotic tutor; requirements elicitation interview training;
   requirements engineering education; social robots in education
ID GAME; ACCEPTANCE; ENGAGEMENT
AB Interviewing stakeholders is the most popular technique for eliciting requirements. The success of an interview depends on the interviewer's theoretical knowledge, preparedness, and communication skills. Practice interviews allow students to apply their knowledge and improve their skills through experience. This practical training is resource-intensive, requiring the time and effort of a stakeholder for each student, which may not be feasible for a large number of students. This paper introduces RoboREIT, an interactive Robotic tutor for Requirements Elicitation Interview Training. RoboREIT addresses the scalability problem of practice sessions with a robotic tutor acting as a stakeholder during the interview and providing feedback after the interview. We performed an exploratory user study to evaluate RoboREIT and demonstrate its applicability in requirements elicitation interview training. The quantitative and qualitative analyses of the users' responses reveal the appreciation of RoboREIT. Our study is the first in the literature that utilizes a social robot in requirements elicitation interview education. RoboREIT's design incorporates replaying faulty interview stages and allows the student to learn from mistakes by a second time practicing. All participants praised the feedback component, which is not present in the state of the art, for being helpful in identifying the mistakes. A favorable response rate of 81% for the system's usefulness indicates the positive perception of the participants.
   This paper introduces RoboREIT, an interactive Robotic tutor for Requirements Elicitation Interview Training to address the scalability problem of practice sessions with a robotic tutor acting as a stakeholder during the interview and providing feedback after the interview. We empirically evaluated RoboREIT with the students of a graduate level requirements engineering course and demonstrated its applicability. The participants favored the system's usefulness and praised the feedback component, which is not present in the state-of-the-art, for being helpful in identifying the mistakes. image
C1 [Goerer, Binnur; Aydemir, Fatma Basak] Bogazici Univ, Istanbul, Turkiye.
C3 Bogazici University
RP Goerer, B (corresponding author), Bogazici Univ, Istanbul, Turkiye.
EM binnur.gorer@boun.edu.tr
RI Aydemir, Fatma Başak/AAF-3242-2020
OI Aydemir, Fatma Başak/0000-0003-3833-3997; GORER,
   BINNUR/0000-0001-9153-9244
FU Turkiye Bilimsel ve Teknolojik Aras timath;rmaKurumu;  [118C255]
FX Turkiye Bilimsel ve Teknolojik Aras t & imath;rmaKurumu, Grant/Award
   Number: 118C255
CR Ahmad M. I., 2017, Multimodal Technol. Interact., V1, P14, DOI [10.3390/mti1030014, DOI 10.3390/MTI1030014]
   Andrews B, 2006, J AFFECT DISORDERS, V95, P29, DOI 10.1016/j.jad.2006.05.003
   Appleton JJ, 2006, J SCHOOL PSYCHOL, V44, P427, DOI 10.1016/j.jsp.2006.04.002
   Ascalon ME, 2007, APPL MEAS EDUC, V20, P153, DOI 10.1080/08957340701301272
   Baka E, 2022, LECT NOTES COMPUT SC, V13303, P455, DOI 10.1007/978-3-031-05409-9_34
   Bano M, 2019, REQUIR ENG, V24, P259, DOI 10.1007/s00766-019-00313-0
   Barros Pablo, 2020, SN Comput Sci, V1, P321, DOI 10.1007/s42979-020-00325-6
   Belpaeme T., 2021, OECD digital education outlook 2021: Pushing the frontiers with artificial intelligence, blockchain and robots, P143, DOI DOI 10.1787/589B283F-EN
   Belpaeme T, 2018, SCI ROBOT, V3, DOI 10.1126/scirobotics.aat5954
   Blaikie N., 2003, ANAL QUANTITATIVE DA
   Boyatzis R.E., 1998, TRANSFORMING QUALITA
   Broadbent E, 2017, ANNU REV PSYCHOL, V68, P627, DOI 10.1146/annurev-psych-010416-043958
   Cer D, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P169
   Chen F, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1592, DOI 10.1145/3297280.3297435
   Cramer H., 1946, Mathematical methods of statistics.
   Daun M, 2021, INT REQUIR ENG CONF, P257, DOI 10.1109/RE51729.2021.00030
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   de Winter J. F. C., 2010, PRACT ASSESS RES EVA, V15, P11, DOI DOI 10.7275/BJ1P-TS64
   Debnath S, 2020, LECT NOTES COMPUT SC, V12045, P160, DOI 10.1007/978-3-030-44429-7_12
   Deublein A, 2018, COMPUT EDUC, V125, P182, DOI 10.1016/j.compedu.2018.06.015
   Donnermann M, 2022, FRONT ROBOT AI, V9, DOI 10.3389/frobt.2022.831633
   Ekman P., 1994, The nature of emotion: Fundamental questions
   Ende T, 2011, IEEE INT C INT ROBOT, P3367, DOI 10.1109/IROS.2011.6048257
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Ferrari A, 2020, REQUIR ENG, V25, P417, DOI 10.1007/s00766-020-00334-0
   Garbers B., 2006, 2006 ANN C EXP, P11
   García I, 2020, COMPUT STAND INTER, V67, DOI 10.1016/j.csi.2019.103377
   Garcia I, 2019, COMPUT APPL ENG EDUC, V27, P249, DOI 10.1002/cae.22072
   Gebhard P., 2018, IEEE T GAMES, V11, P340
   Girardi D, 2020, INT REQUIR ENG CONF, P32, DOI 10.1109/RE48521.2020.00016
   Goetz J, 2003, RO-MAN 2003: 12TH IEEE INTERNATIONAL WORKSHOP ON ROBOT AND HUMAN INTERACTIVE COMMUNICATION, PROCEEDINGS, P55
   Gorer B., 2022, ROBOREIT INTERACTIVE, DOI DOI 10.5281/ZENODO.7263541
   Gouaillier D., 2008, ARXIV PREPRINT ARXIV, DOI DOI 10.48550/ARXIV.0807.3223
   Guggemos J., 2022, ORCHESTRATION LEARNI, P173, DOI DOI 10.1007/978-3-030-90944-4_10
   Hadar I, 2014, REQUIR ENG, V19, P143, DOI 10.1007/s00766-012-0163-2
   Hainey T, 2011, COMPUT EDUC, V56, P21, DOI 10.1016/j.compedu.2010.09.008
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hoffman G, 2020, ACM T HUM-ROBOT INTE, V10, DOI 10.1145/3412374
   Johal W., 2020, CURRENT ROBOTICS REP, V1, P75, DOI [10.1007/s43154-020-00008-3, DOI 10.1007/S43154-020-00008-3]
   Kakeshita T, 2015, 3RD INTERNATIONAL CONFERENCE ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY (ACIT 2015) 2ND INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND INTELLIGENCE (CSI 2015), P40, DOI 10.1109/ACIT-CSI.2015.16
   King MF, 2000, PSYCHOL MARKET, V17, P79, DOI 10.1002/(SICI)1520-6793(200002)17:2<79::AID-MAR2>3.0.CO;2-0
   Konijn EA, 2020, ROBOTICS, V9, DOI 10.3390/robotics9040092
   Laiq M, 2020, INT WORKS RE ENG E T, P1, DOI 10.1109/REET51203.2020.00007
   Lei X, 2021, INT J SOC ROBOT, V13, P1579, DOI 10.1007/s12369-020-00741-x
   Mahalil I, 2019, 2019 IEEE CONFERENCE ON GRAPHICS AND MEDIA (GAME), P1, DOI [10.1109/GAME47560.2019.8980987, 10.1109/game47560.2019.8980987]
   MOUSSA MAA, 1991, COMPUT METH PROG BIO, V34, P283, DOI 10.1016/0169-2607(91)90113-8
   Mubin O., 2018, INT C SOC ROB, P213
   Mystakidis S., 2022, ENCYCLOPEDIA, V2, P486, DOI [10.3390/encyclopedia2010031, DOI 10.3390/ENCYCLOPEDIA2010031]
   Nachar N, 2008, TUTOR QUANT METHODS, V4, P13, DOI 10.20982/tqmp.04.1.p013
   Nakamura T, 2014, 2014 INTERNATIONAL CONFERENCE ON TEACHING, ASSESSMENT AND LEARNING (TALE), P375, DOI 10.1109/TALE.2014.7062566
   OCHOA O, 2019, 2019 IEEE FRONT ED C, P1
   Ogata S., 2012, P 5 IND SOFTW ENG C, P105
   Othlinghaus-Wulhorst J, 2020, FRONT COMP SCI-SWITZ, V2, DOI 10.3389/fcomp.2020.00028
   Paschoal LN, 2018, 2018 XLIV LATIN AMERICAN COMPUTER CONFERENCE (CLEI 2018), P839, DOI 10.1109/CLEI.2018.00105
   Peng Liang, 2010, 2010 5th International Workshop on Requirements Engineering Education and Training (REET 2010), P1, DOI 10.1109/REET.2010.5633115
   Pfeifer A, 2018, LECT NOTES ARTIF INT, V10948, P276, DOI 10.1007/978-3-319-93846-2_51
   Powell DM, 2021, J BUS PSYCHOL, V36, P829, DOI 10.1007/s10869-020-09708-1
   Radford A., 2022, ROBUST SPEECH RECOGN, P28492
   Rosenberg-Kima RB, 2020, FRONT ROBOT AI, V6, DOI 10.3389/frobt.2019.00148
   Salthouse TA, 1996, PSYCHOL REV, V103, P403, DOI 10.1037/0033-295X.103.3.403
   Shafiq M, 2018, IEEE ACCESS, V6, P25747, DOI 10.1109/ACCESS.2018.2834473
   Shin J, 2019, FRONT PSYCHOL, V10, DOI 10.3389/fpsyg.2019.00825
   Slater M, 2016, FRONT ROBOT AI, V3, DOI 10.3389/frobt.2016.00074
   Sonderegger S, 2022, LECT NOTE NETW SYST, V515, P99, DOI 10.1007/978-3-031-12848-6_10
   Suresh Kp, 2011, J Hum Reprod Sci, V4, P8, DOI 10.4103/0974-1208.82352
   Syrdal DS, 2009, Adaptive and emergent behaviour and complex system
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Vega K., 2009, 2009 S BRAS SIST COL, P116
   Velentza AM, 2021, FRONT ROBOT AI, V8, DOI 10.3389/frobt.2021.700005
   Velentza AM, 2021, COMPUT EDUC, V173, DOI 10.1016/j.compedu.2021.104272
   Yang HD, 2004, DECIS SUPPORT SYST, V38, P19, DOI 10.1016/S0167-9236(03)00062-9
   Yasin A, 2018, INFORM SOFTWARE TECH, V95, P179, DOI 10.1016/j.infsof.2017.12.002
   Zhang M., 2022, OCCUPATIONAL THERAPY, V2:1-11
   Zheng LR, 2021, SIMULAT GAMING, V52, P686, DOI 10.1177/10468781211031283
   Zimmerman M., 2011, Encyclopedia of Clinical Neuropsychology, P2469
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 77
TC 1
Z9 1
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2024
VL 36
IS 5
DI 10.1002/smr.2608
EA AUG 2023
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PW3G9
UT WOS:001152097500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yan, M
   Chen, JJ
   Cao, XJ
   Wu, Z
   Kang, YN
   Wang, Z
AF Yan, Ming
   Chen, Junjie
   Cao, Xuejie
   Wu, Zhuo
   Kang, Yuning
   Wang, Zan
TI Revisiting deep neural network test coverage from the test effectiveness
   perspective
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE deep neural network; empirical study; testing criterion
AB Many test coverage metrics have been proposed to measure the deep neural network (DNN) testing effectiveness, including structural coverage and nonstructural coverage. These test coverage metrics are proposed based on the fundamental assumption: They are correlated with test effectiveness. However, the fundamental assumption is still not validated sufficiently and reasonably, which brings question on the usefulness of DNN test coverage. This paper conducted a revisiting study on the existing DNN test coverage from the test effectiveness perspective, to effectively validate the fundamental assumption. Here, we carefully considered the diversity of subjects, three test effectiveness criteria, and both typical and state-of-the-art test coverage metrics. Different from all the existing studies that deliver negative conclusions on the usefulness of existing DNN test coverage, we identified some positive conclusions on their usefulness from the test effectiveness perspective. In particular, we found the complementary relationship between structural and nonstructural coverage and identified the practical usage scenarios and promising research directions for these existing test coverage metrics.
C1 [Yan, Ming; Chen, Junjie; Cao, Xuejie; Kang, Yuning; Wang, Zan] Tianjin Univ, Coll Intelligence & Comp, Tianjin 300350, Peoples R China.
   [Wu, Zhuo; Wang, Zan] Tianjin Univ, Sch New Media & Commun, Tianjin 300072, Peoples R China.
C3 Tianjin University; Tianjin University
RP Chen, JJ (corresponding author), Tianjin Univ, Coll Intelligence & Comp, Tianjin 300350, Peoples R China.
EM junjiechen@tju.edu.cn
RI Chen, Junjie/ABE-8685-2020
OI Chen, Junjie/0000-0003-4509-2271; Yan, Ming/0000-0001-9757-7794
FU National Natural Science Foundation of China [62232001, 62002256]
FX National Natural Science Foundation of China, Grant/Award Number:
   62232001 and 62002256.
CR [Anonymous], 2022, 20 NEWSGROUPS
   [Anonymous], 2022, SPEECH COMMANDS
   [Anonymous], 2022, DRIVING
   [Anonymous], 2022, Homepage
   [Anonymous], 2022, UN NEWS
   [Anonymous], 2022, MNIST
   [Anonymous], 2022, CIFAR 10
   Bach S, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0130140
   Bastani O, 2016, ADV NEUR IN, V29
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Carlini N, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P1, DOI 10.1109/SPW.2018.00009
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Chen CY, 2015, IEEE I CONF COMP VIS, P2722, DOI 10.1109/ICCV.2015.312
   Chen JJ, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3394112
   Chen JJ, 2017, IEEE INT CONF SOFTW, P418, DOI 10.1109/ICST.2017.45
   Cheng Y., 2019, Joint Training for Neural Machine Translation, P25
   Dong YZ, 2020, IEEE INT C ENG COMP, P73, DOI 10.1109/ICECCS51672.2020.00016
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Gay G, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2934672
   Gerasimou S, 2020, PROC INT CONF SOFTW, P702, DOI 10.1145/3377811.3380391
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   Gligoric M, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2660767
   Goodfellow I. J., 2015, 3 INT C LEARNING REP
   Gopinath D, 2018, LECT NOTES COMPUT SC, V11138, P3, DOI 10.1007/978-3-030-01090-4_1
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Hilton M, 2018, IEEE INT CONF AUTOM, P53, DOI 10.1145/3238147.3238183
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jha Susmit, 2019, Advances in Neural Information Processing Systems, P11826
   Kang YN, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P3425
   Katz G, 2017, ELECTRON P THEOR COM, P19, DOI 10.4204/EPTCS.257.3
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kurakin Alexey, 2017, INT C LEARN REPR
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   Li ZN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P89, DOI 10.1109/ICSE-NIER.2019.00031
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma SQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P175, DOI 10.1145/3236024.3236082
   Ma W., 2019, CORR
   Morrison GC, 2012, PROCEEDINGS OF THE SOUTH AFRICAN INSTITUTE FOR COMPUTER SCIENTISTS AND INFORMATION TECHNOLOGISTS CONFERENCE, P84
   Myers L., 2004, Spearman Correlation Coefficients, Differences between, Encyclopedia of Statistical Sciences
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Obermeyer Z, 2016, NEW ENGL J MED, V375, P1216, DOI 10.1056/NEJMp1606181
   Odena A, 2019, PR MACH LEARN RES, V97
   Papernot N, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P372, DOI 10.1109/EuroSP.2016.36
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Ren SH, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P1085
   Seokhyun Lee, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P165, DOI 10.1145/3395363.3397346
   Shen Q., 2022, ASE
   Sun Y., 2018, Testing deep neural networks
   Sun Y, 2014, PROC CVPR IEEE, P1891, DOI 10.1109/CVPR.2014.244
   Sun YC, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P111, DOI 10.1109/ICSE-Companion.2019.00051
   Sun YC, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3358233
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tian Z., 2022, ASE
   Wand M.P., 1994, KERNEL SMOOTHING
   Wang Z, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P788, DOI 10.1145/3368089.3409761
   Wei XY, 2019, ASME JSME KSME JOINT
   Xiao H., 2017, ARXIV170807747
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yan M, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P627, DOI 10.1145/3468264.3468612
   Yan SA, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P775, DOI 10.1145/3368089.3409671
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Yang Z., 2022, REVISITING NEURON CO
   You H., 2023, 45 INT C SOFTWARE EN
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang YC, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P214, DOI 10.1145/2786805.2786858
   Zhang YH, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P826, DOI 10.1145/3368089.3409720
   Zhou ZY, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P189, DOI 10.1109/SANER50967.2021.00026
NR 73
TC 0
Z9 0
U1 2
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2024
VL 36
IS 4
DI 10.1002/smr.2561
EA MAR 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MU0E5
UT WOS:000950143500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dzhusupova, R
   Banotra, R
   Bosch, J
   Olsson, HH
AF Dzhusupova, Rimma
   Banotra, Richa
   Bosch, Jan
   Olsson, Helena Holmstrom
TI Using artificial intelligence to find design errors in the engineering
   drawings
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE artificial intelligence; deep learning; engineering drawings;
   engineering; procurement; and construction (EPC) industry; object
   recognition; piping and instrumentation diagrams (P&IDs)
AB Artificial intelligence is increasingly becoming important to businesses because many companies have realized the benefits of applying machine learning (ML) and deep learning (DL) in their operations. ML and DL have become attractive technologies for organizations looking to automate repetitive tasks to reduce manual work and free up resources for innovation. Unlike rule-based automation, typically used for standardized and predictable processes, machine learning, especially deep learning, can handle more complex tasks and learn over time, leading to greater accuracy and efficiency improvements. One of such promising applications is to use AI to reduce manual engineering work. This paper discusses a particular case within McDermott where the research team developed a DL model to do a quality check of complex blueprints. We describe the development and the final product of this case-AI-based software for the engineering, procurement, and construction (EPC) industry that helps to find the design mistakes buried inside very complex engineering drawings called piping and instrumentation diagrams (P&IDs). We also present a cost-benefit analysis and potential scale-up of the developed software. Our goal is to share the successful experience of AI-based product development that can substantially reduce the engineering hours and, therefore, reduce the project's overall costs. The developed solution can also be potentially applied to other EPC companies doing a similar design for complex installations with high safety standards like oil and gas or petrochemical plants because the design errors it captures are common within this industry. It also could motivate practitioners and researchers to create similar products for the various fields within engineering industry.
C1 [Dzhusupova, Rimma] McDermott, Elect Instrumentat Control & Safety Syst, The Hague, Netherlands.
   [Banotra, Richa] McDermott, Instrumentat Control & Safety Syst, The Hague, Netherlands.
   [Bosch, Jan] Chalmers Univ Technol, Comp Sci & Engn, Gothenburg, Sweden.
   [Olsson, Helena Holmstrom] Malmo Univ Malmo, Comp Sci & Media Technol, Malmo, Sweden.
C3 Chalmers University of Technology
RP Dzhusupova, R (corresponding author), McDermott, Elect Instrumentat Control & Safety Syst, The Hague, Netherlands.
EM rdzhusupova@mcdermott.com
RI Olsson, Helena H/H-2193-2014
OI Dzhusupova, Rimma/0000-0003-3411-4084
CR Abioye SO., 2021, J BUILD ENG, P44
   Ahmad M, 2020, 2020 INTERNATIONAL CONFERENCE ON ELECTRONICS, INFORMATION, AND COMMUNICATION (ICEIC)
   [Anonymous], 2022, WHAT IS EPC CONTR HE
   [Anonymous], EPC CONTR FIN ENG CO
   [Anonymous], 2016, CoRR, DOI DOI 10.1109/QOMEX.2016.7498955
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   Balmer Roberto E., 2020, TELECOMMUN POLICY, V44
   Baron H., 2018, OIL GAS ENG GUIDE, P300
   Benjumea A, 2021, ARXIV
   Berends T C., 2007, Contracting economics of large engineering and construction projects
   Blanco Jose Luis., 2018, ARTIF INTELL
   Bochkovskiy A, 2020, ARXIV PREPRINT ARXIV, DOI DOI 10.48550/ARXIV.2004.10934
   Buda M, 2018, NEURAL NETWORKS, V106, P249, DOI 10.1016/j.neunet.2018.07.011
   Carneiro T, 2018, IEEE ACCESS, V6, P61677, DOI 10.1109/ACCESS.2018.2874767
   Coughlan P, 2002, INT J OPER PROD MAN, V22, P220, DOI 10.1108/01443570210417515
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Erik M., 2019, INT J CONSTR MANAG
   Fagan A., 2021, SCOTTISH INFORMATICS, P48
   Fahle Simon, 2020, Procedia CIRP, P413, DOI 10.1016/j.procir.2020.04.109
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Ghadekar P., 2021, J Comput Sci, V17, P833, DOI [10.3844/jcssp.2021.833.838, DOI 10.3844/JCSSP.2021.833.838]
   Hansen S., 2015, INT J CIVIL STRUCT E, V5, P11
   Haun Eric., 2019, MARINE NEWS
   International standard, 2010, 615081 IEC
   Kang SO, 2019, ENERGIES, V12, DOI 10.3390/en12132593
   Koroteev D, 2021, ENERGY AI, V3, DOI 10.1016/j.egyai.2020.100041
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Liu W, 2016, LECT NOTES COMPUT SC, V9905, P21, DOI 10.1007/978-3-319-46448-0_2
   Lu HF, 2019, COMPUT IND, V111, P68, DOI 10.1016/j.compind.2019.06.007
   Mani S., 2020, IEEECVF C COMPUTER V
   Mani S, 2020, IEEE COMPUT SOC CONF, P673, DOI 10.1109/CVPRW50498.2020.00096
   Massimo B., 2021, EXPERT SYST APPL, V175
   Moh SN., 2018, MATEC WEB CONF, V195
   Moon Y, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app112110054
   Moreno-García CF, 2019, NEURAL COMPUT APPL, V31, P1695, DOI 10.1007/s00521-018-3583-1
   Moreno-García CF, 2017, COMM COM INF SC, V744, P87, DOI 10.1007/978-3-319-65172-9_8
   Northcutt Curtis G, 2021, PROC 35 C NEURAL INF
   Nurminen JK., 2019, PROGR COMPUTER RECOG, P977
   Panikkar Rohit., 2021, OPERATIONALIZING MAC
   Putra GAS, 2015, PROCEDIA MANUF, V4, P98, DOI 10.1016/j.promfg.2015.11.019
   Rahul R, 2019, ICPRAM: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON PATTERN RECOGNITION APPLICATIONS AND METHODS, P163, DOI 10.5220/0007376401630172
   Redmon J., 2016, PROC CVPR IEEE, DOI [10.1109/CVPR.2016.91, DOI 10.1109/CVPR.2016.91]
   Rimma D., 2022, 2022 IEEE 46 ANN COM
   Sanders H., 2017, P BLACKHAT
   Sculley D, 2015, ADV NEUR IN, V28
   Shahinfar S, 2020, ECOL INFORM, V57, DOI 10.1016/j.ecoinf.2020.101085
   So-Won C., 2021, SUSTAINABILITY-BASEL, V13, P1
   Soiferman Lisa Karen., 2010, COMP CONTRAST INDUCT
   Srivastava S, 2021, J BIG DATA-GER, V8, DOI 10.1186/s40537-021-00434-w
   WALSHAM G, 1995, EUR J INFORM SYST, V4, P74, DOI 10.1057/ejis.1995.9
   Wuest T, 2016, PROD MANUF RES, V4, P23, DOI 10.1080/21693277.2016.1192517
   Yun DY, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10114005
NR 52
TC 0
Z9 0
U1 7
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2023
VL 35
IS 12
DI 10.1002/smr.2543
EA FEB 2023
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ4E7
UT WOS:000930985800001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Ahmad, MO
   Gustavsson, T
AF Ahmad, Muhammad Ovais
   Gustavsson, Tomas
TI The Pandora's box of social, process, and people debts in software
   engineering
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE agile; people debt; process debt; social debt; software development;
   systematic mapping review
ID TECHNICAL DEBT
AB In software engineering, technical debt (TD) has been widely investigated, but debt regarding social issues, people, and processes has not been explored as much. It should be noted here that we use nontechnical debt (NTD) as an umbrella term to cover social, process, and people debts. Although the number of studies on NTD in software is increasing, the majority of them are descriptive rather than rigorous, and there is no systematic development of cumulative knowledge. As a result, identifying the fundamental causes of NTD and the associated mitigation techniques in software engineering is challenging. Therefore, this study investigates the scientific evidence regarding NTD till date by conducting a systematic mapping review of software engineering research between January 2000 and October 2021. The search strategy resulted in 175 studies, 17 of which were identified as unique and relevant primary papers. The primary studies show that NTD and TD are inextricably linked. In addition, this study also captured a plethora of causes and mitigation strategies for managing NTD and thus makes four important contributions: (i) highlighting state-of-the-art NTD research; (ii) identification of the reported causes and mitigation strategies in the primary papers; and (iii) determination of opportunities for future NTD research.
C1 [Ahmad, Muhammad Ovais] Karlstad Univ, Dept Comp Sci, Karlstad, Sweden.
   [Gustavsson, Tomas] Karlstad Univ, Karlstad Business Sch, Karlstad, Sweden.
C3 Karlstad University; Karlstad University
RP Ahmad, MO (corresponding author), Karlstad Univ, Dept Comp Sci, Karlstad, Sweden.
EM ovais.ahmad@kau.se
RI Mwansa, Gardner/HGV-3045-2022; Ahmad, Muhamamd Ovais/F-7679-2012;
   Gustavsson, Tomas/P-2831-2014
OI Mwansa, Gardner/0000-0003-3827-9783; Ahmad, Muhamamd
   Ovais/0000-0002-7885-0369; Gustavsson, Tomas/0000-0002-1512-6592
FU Knowledge Foundation Sweden Grant; Karlstad University, Sweden
FX This publication was made possible by the Knowledge Foundation Sweden
   Grant and Karlstad University, Sweden.
CR Ahmad MO, 2018, J SYST SOFTWARE, V137, P96, DOI 10.1016/j.jss.2017.11.045
   Alfayez R, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P1, DOI 10.1145/3387906.3388630
   Allman E, 2012, COMMUN ACM, V55, P50, DOI 10.1145/2160718.2160733
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Avgeriou P., 2016, SIGSOFT SOFTW ENG NO, V41, P38, DOI [10.1145/2894784.2894800, DOI 10.1145/2894784.2894800]
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Behutiye WN, 2017, INFORM SOFTWARE TECH, V82, P139, DOI 10.1016/j.infsof.2016.10.004
   Besker T, 2018, J SYST SOFTWARE, V135, P1, DOI 10.1016/j.jss.2017.09.025
   Betz S., 2015, SUSTAINABILITY DEBT
   Caballero Espinosa EduardoAnel., 2021, PHD THESIS
   Calero C.Piattini., 2015, Green in Software Engineering, DOI 10.1007/978-3-319-08581-4
   Codabux Z, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1894
   Cunningham W., 1993, OOPS MESSENGER, V4, P29, DOI DOI 10.1145/157710.157715
   Denmark, 2017, DANISH MINISTRY FINA
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Edmondson AC, 2007, ACAD MANAGE REV, V32, P1155, DOI 10.5465/AMR.2007.26586086
   Fernández-Sánchez C, 2017, J SYST SOFTWARE, V124, P22, DOI 10.1016/j.jss.2016.10.018
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Kalenda M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1954
   Khomyakov I, 2019, PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS 2019), VOL 2, P95, DOI 10.5220/0007675900950106
   Kitchenham B., TECH REP EBSE 2007 0
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Klinger T, 2011, P 2 WORKSHOP MANAGIN, P35
   Krasner H., The Cost of Poor Software Quality in the US: A 2020 Report
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110827
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Sweden, 2019, SWEDISH NATL AUDIT F
   Tamburri DA, 2019, IEEE T COMPUT SOC SY, V6, P20, DOI 10.1109/TCSS.2018.2886433
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Wilson C, 2022, GOV INFORM Q, V39, DOI 10.1016/j.giq.2022.101681
   Yli-Huumo J., 2016, MANAGING SOFTWARE PR, P305, DOI [10.1007/978-3-319-31545-4_15, DOI 10.1007/978]
NR 34
TC 0
Z9 0
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2024
VL 36
IS 2
SI SI
DI 10.1002/smr.2516
EA OCT 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HT8V5
UT WOS:000865285100001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Kucuk, B
   Hanhan, I
   Tuzun, E
AF Kucuk, Berfin
   Hanhan, Idil
   Tuzun, Eray
TI Characterizing duplicate bugs: Perceptions of practitioners and an
   empirical analysis
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE bug management; bug reopen; characterization study; duplicate bug
   reports; reopened bugs
AB Bug handling is an essential part of the software development process. Ideally, in a bug-tracking system, bugs are reported, fixed, verified, and closed. In some cases, bugs have to be reopened mostly due to an incorrect fix. However, instead of reopening the existing bug report, users may submit a new report for a previously reported bug, which results in duplicate bug reports. Users might report duplicate bugs if they miss the previous bug report or if the previous bug is unresolved (i.e., in progress) and therefore cannot be reopened. These duplicate bug reports may cost extra maintenance efforts in triaging and bug fixing. There have been several studies on characterizing reopened bugs and duplicate bug reports; however, to the best of our knowledge, there has been no prior work on understanding the dynamics of their interaction, which is missed reopen bugs. Our study is based on analyzing the difference between duplicate and nonduplicate bugs and further categorizing the duplicate bugs. In this regard, we categorize duplicate bugs according to the original bug's resolution status at the duplicate's creation time as Master-Unresolved bugs and Master-Resolved (Missed Reopen) bugs to distinguish their properties. We compare these two types of bugs in terms of their relationship to their master bug, bug surface time, bug fix time, bug's severity, and the number of users involved. We perform case studies using the Eclipse and Mozilla projects' bug repositories that include more than 165,500 and 394,000 bug reports, respectively. Additionally, we investigate the perceived importance, impact, and causes of duplicate bugs, as well as the difference between nonduplicate and duplicate bugs and its categories for practitioners in the software industry by conducting a survey.
C1 [Kucuk, Berfin] Udemy, Istanbul, Turkey.
   [Hanhan, Idil; Tuzun, Eray] Bilkent Univ, Dept Comp Engn, Ankara, Turkey.
C3 Ihsan Dogramaci Bilkent University
RP Hanhan, I; Tuzun, E (corresponding author), Bilkent Univ, Dept Comp Engn, Ankara, Turkey.
EM idilhanhan@gmail.com; eraytuzun@cs.bilkent.edu.tr
RI Tuzun, Eray/AAD-7282-2021
OI Tuzun, Eray/0000-0002-5550-7816
CR Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Caglayan B., 2012, Proceedings of the 8th International Conference on Predictive Models in Software Engineering', PROMISE'12, ACM, P1
   Cavalcanti YC, 2013, SOFTWARE QUAL J, V21, P39, DOI 10.1007/s11219-011-9164-5
   Chambers J., 1983, Graphical Methods for Data Analysis
   Chen SH, 2011, IEEE C EVOL COMPUTAT, P45, DOI 10.1145/1806799.1806811
   Cotroneo D, 2016, J SYST SOFTWARE, V113, P27, DOI 10.1016/j.jss.2015.11.021
   Davidson JL, 2011, S VIS LANG HUM CEN C, P101, DOI 10.1109/VLHCC.2011.6070386
   Destefanis G, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.73
   He JJ, 2020, INT C PROGRAM COMPRE, P117, DOI 10.1145/3387904.3389263
   Hindle A, 2019, EMPIR SOFTW ENG, V24, P902, DOI 10.1007/s10664-018-9643-4
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Kasunic, 2018, DESIGNING EFFECTIVE
   Khattar M., 2015, Proc. 8th India Softw. Eng. Conf. XXX-ISEC '15, P50
   Kucuk B., 2021, IMPLEMENTATION CHARA, DOI [10.5281/zenodo.4114096, DOI 10.5281/ZENODO.4114096]
   Kucuk B, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P661, DOI 10.1109/SANER50967.2021.00084
   Lamkanfi A, 2013, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2013.6624028
   Li MY, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P272, DOI 10.1109/QRS.2019.00043
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mi Q, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915986
   Reliex, 2014, FIND DUPL APP JIR
   Rocha H, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P43, DOI 10.1145/2973839.2973844
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Souza R, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P31, DOI 10.1109/SBES.2014.10
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tian Y, 2016, EMPIR SOFTW ENG, V21, P2298, DOI 10.1007/s10664-015-9409-1
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Xia X, 2013, EUR CON SFTWR MTNCE, P331, DOI 10.1109/CSMR.2013.43
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
NR 31
TC 2
Z9 2
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2023
VL 35
IS 11
SI SI
AR e2446
DI 10.1002/smr.2446
EA MAR 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X1KC8
UT WOS:000762583300001
DA 2024-07-18
ER

PT J
AU Sochor, H
   Ferrarotti, F
   Ramler, R
AF Sochor, Hannes
   Ferrarotti, Flavio
   Ramler, Rudolf
TI An automated evaluation of broker compatibility for the Message Queuing
   Telemetry Transport protocol
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE backward compatibility; cross compatibility; interoperability; security;
   testing
ID INTERNET; INTEROPERABILITY; MQTT; THINGS
AB Message Queuing Telemetry Transport (MQTT) is the most widely used protocol within the communication layer of the Internet of Things (IoT). Message brokers are a key component of the MQTT protocol and a single point of failure. Incompatibilities between different MQTT brokers or broker versions with their clients can cause critical failures and become a source of security risks. Thus, every MQTT broker change or update needs to be accompanied by an evaluation of the compatibility between the new and the previous broker. In this work, we develop an automated framework for compatibility evaluation of MQTT brokers, which can be easily generalized to other similar IoT components. We apply this framework to perform a comprehensive experiment conducted with 16 different versions of 6 popular MQTT brokers. We report inconsistencies in the behavior of different MQTT brokers and broker versions. Based on the experiment results, we calculate and provide a visualization of compatibility among the evaluated brokers in terms of their distance, which indicates the risk of incompatibilities when replacing a broker with another one. The calculation of distance measures can be adjusted by giving higher weights to important features. We use this method to show security-related differences between the brokers.
C1 [Sochor, Hannes; Ferrarotti, Flavio; Ramler, Rudolf] Software Competence Ctr Hagenberg, Softwarepk 32a, A-4232 Hagenberg, Austria.
C3 Softwarepark Hagenberg
RP Sochor, H (corresponding author), Software Competence Ctr Hagenberg, Softwarepk 32a, A-4232 Hagenberg, Austria.
EM hannes.sochor@scch.at
FU Federal Ministry for Climate Action, Environment, Energy, Mobility,
   Innovation and Technology (BMK); Federal Ministry for Digital and
   Economic Affairs (BMDW); Osterreichische
   Forschungsforderungsgesellschaft FFG [865891]
FX Federal Ministry for Climate Action, Environment, Energy, Mobility,
   Innovation and Technology (BMK); Federal Ministry for Digital and
   Economic Affairs (BMDW); Osterreichische
   Forschungsforderungsgesellschaft FFG, Grant/Award Number: 865891
CR AG OL, VERNEMQ HIGH PERF DI
   Aichernig BK, 2018, LECT NOTES COMPUT SC, V11024, P36, DOI 10.1007/978-3-319-99154-2_3
   Andy S, 2017, 2017 4TH INTERNATIONAL CONFERENCE ON ELECTRICAL ENGINEERING, COMPUTER SCIENCE AND INFORMATICS (EECSI), P571
   [Anonymous], 2015, 2382 ISO IEC
   [Anonymous], MQTT V3.1 Protocol Specification
   Apache Foundation, ACTIVEMQ OP SOURC MU
   Banks A., MQTT Version 5.0. OASIS Standard
   Banks A., MQTT VERSION 311 OAS
   Barker O, 2020, COMPUTER, V53, P76, DOI 10.1109/MC.2019.2952419
   Bertrand-Martinez E, 2021, INT J NETW MANAG, V31, DOI 10.1002/nem.2115
   Besse C., 2002, Testing of Communicating Systems XIV. Application to Internet Technologies and Services. IFIP TC6/WG6.1 Fourteenth International Conference on Testing of Communicating Systems (TestCom 2002), P169
   Bures M, 2020, LECT NOTES COMPUT SC, V12310, P93, DOI 10.1007/978-3-030-58768-0_6
   Chen WK, 2018, ASIA PAC SOFWR ENG, P668, DOI 10.1109/APSEC.2018.00087
   Co. ET. EMQX, EMQX OP SOURC MQTT B
   Desmoulin A, 2008, LECT NOTES COMPUT SC, V4916, P234
   Dinculeana D, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9050848
   ETSI, 2021, METH TEST SPEC MTS T
   Firdous SN, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON INTERNET OF THINGS (ITHINGS) AND IEEE GREEN COMPUTING AND COMMUNICATIONS (GREENCOM) AND IEEE CYBER, PHYSICAL AND SOCIAL COMPUTING (CPSCOM) AND IEEE SMART DATA (SMARTDATA), P748, DOI 10.1109/iThings-GreenCom-CPSCom-SmartData.2017.115
   Foundation, ECL MOSQ AN OP SOURC
   Hassan Q.F., 2017, Internet of Things: Challenges, Advances, and Applications
   Hatzivasilis G, 2018, IEEE INT WORKSH COMP, P140
   Hintaw AJ, 2023, IETE J RES, V69, P3368, DOI 10.1080/03772063.2021.1912651
   HiveMQ, MQTT BROK COMM ED
   Houimli M, 2017, PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON MATHEMATICS AND INFORMATION TECHNOLOGY (ICMIT), P214, DOI 10.1109/MATHIT.2017.8259720
   Ismail AA, 2018, 2018 IEEE GLOBAL CONFERENCE ON INTERNET OF THINGS (GCIOT), P27
   Jalali MS, 2019, IEEE SECUR PRIV, V17, P39, DOI 10.1109/MSEC.2018.2888780
   Kaiser A, 2019, 2019 COMPANION OF THE 19TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS-C 2019), P435, DOI 10.1109/QRS-C.2019.00085
   Kiljander J, 2014, IEEE ACCESS, V2, P856, DOI 10.1109/ACCESS.2014.2347992
   Kotak J., 2019, P 2 SMART CIT S SCS, DOI [10.1049/CP.2019.0180, DOI 10.1049/CP.2019.0180]
   Koziolek H, 2020, LECT NOTES COMPUT SC, V12292, P352, DOI 10.1007/978-3-030-58923-3_23
   Lee E, 2021, IEEE COMMUN SURV TUT, V23, P1020, DOI 10.1109/COMST.2021.3067354
   Manyika James, 2015, Unlocking the potential of the Internet of Things
   Mesbah A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P561, DOI 10.1145/1985793.1985870
   Mishra B, 2020, IEEE ACCESS, V8, P201071, DOI 10.1109/ACCESS.2020.3035849
   Mishra B, 2018, LECT NOTES COMPUT SC, V10963, P599, DOI 10.1007/978-3-319-95171-3_47
   Noura M, 2019, MOBILE NETW APPL, V24, P796, DOI 10.1007/s11036-018-1089-9
   Pedrosa L., 2015, P 12 USENIX C NETW S, P485
   Pianca, KMQTT A KOTL MULT MQ
   Ramler R, 2018, INFORM SOFTWARE TECH, V93, P248, DOI 10.1016/j.infsof.2017.07.005
   Rezaei R, 2014, COMPUT IND, V65, P1, DOI 10.1016/j.compind.2013.09.001
   Rings T, 2014, INT J SOFTW TOOLS TE, V16, P295, DOI 10.1007/s10009-013-0281-2
   Rodriguez Alejandro, 2019, Transactions on Petri Nets and Other Models of Concurrency XIV. Lecture Notes in Computer Science (LNCS 11790), P126, DOI 10.1007/978-3-662-60651-3_5
   Schieferdecker I, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P1, DOI 10.1109/QRS.2017.59
   Sochor Hannes, 2020, ARES 2020: Proceedings of the 15th International Conference on Availability, Reliability and Security, DOI 10.1145/3407023.3407078
   Sochor H., 2020, 4 INT WORKSH CYB SEC, P48
   Taivalsaari A, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.26
   Tappler M, 2017, IEEE INT CONF SOFTW, P276, DOI 10.1109/ICST.2017.32
   Viho C, 2001, INT FED INFO PROC, V69, P53
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Yoon I.-C., 2008, P INT S SOFTWARE TES, P63, DOI DOI 10.1145/1390630.1390640
NR 50
TC 0
Z9 0
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2023
VL 35
IS 7
SI SI
AR e2410
DI 10.1002/smr.2410
EA DEC 2021
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L0RH3
UT WOS:000726948600001
DA 2024-07-18
ER

PT J
AU dos Santos, RA
   Vieira, D
   Bravo, A
   Suzuki, L
   Qudah, F
AF dos Santos, Rodrigo Augusto
   Vieira, Darli
   Bravo, Alencar
   Suzuki, Larissa
   Qudah, Fadiah
TI A systematic mapping study on the employment of neural networks on
   software engineering projects: Where to go next?
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE deep learning; machine learning; neural networks; project management;
   software engineering
ID MODEL
AB Deep learning has recently experienced explosive growth in use, largely due to advances in neural networks and the availability of large corpora of domain data. Project management activities generate and handle large volumes of data. Software engineering closely relates to project management, so software engineering projects must be prone to the use of neural networks. We seek to obtain an accurate vision of how neural networks are being used in software engineering projects through a systematic mapping study. We confirm that neural networks have already made their way into these projects; however, we show that their current uses are limited to certain repetitive and legacy tasks. Given uncovered ample room for expansion, we point out a few directions the industry and academy can lean toward to in the next years for taking better advantage of neural networks in software engineering projects and immediately advancing the field. We investigate if, how, and to what extent have neural networks been employed to the advancement of software engineering projects. As such, a systematic mapping study was conducted, which led to the conclusion that even though these algorithms have indeed been employed on several software engineering tasks, this employment so far has been shy, mostly relying on legacy types of neural networks. More modern variants, namely, deep learning algorithms, are slowly gaining momentum and should be the trend going forward.
C1 [dos Santos, Rodrigo Augusto; Qudah, Fadiah] Univ Texas Arlington UTA, Arlington, TX USA.
   [Vieira, Darli; Bravo, Alencar] Univ Quebec Trois Rivieres UQTR, 3351 Boul Forges,CP 500, Trois Rivieres, PQ, Canada.
   [Suzuki, Larissa] Univ Coll London UCL, London, England.
C3 University of Quebec; University of London; University College London
RP Bravo, A (corresponding author), Univ Quebec Trois Rivieres UQTR, 3351 Boul Forges,CP 500, Trois Rivieres, PQ, Canada.
EM rodrigoaugusto.silvadossantos@uta.edu; alencar.soares.bravo@uqtr.ca
OI Bravo, Alencar/0000-0001-7931-0500; Augusto dos Santos,
   Rodrigo/0000-0003-0277-6315
CR Abbinaya S, 2015, 2015 INTERNATIONAL CONFERENCE ON COMMUNICATIONS AND SIGNAL PROCESSING (ICCSP), P1389, DOI 10.1109/ICCSP.2015.7322738
   Abdellatif T.M., 2018, 2018 IEEE CAN C EL C, P1
   Ajitha S., 2010, 2010 5th International Conference on Industrial and Information Systems (ICIIS 2010), P372, DOI 10.1109/ICIINFS.2010.5578675
   Nguyen AT, 2017, PROC IEEE ACM INT C, P164, DOI 10.1109/ICSE-C.2017.118
   Attarzadeh I., 2010, 2010 2nd International Conference on Computer Engineering and Technology (ICCET), P487, DOI 10.1109/ICCET.2010.5485840
   Balich IK, 2010, 2010 8 ACIS INT C SO, P269, DOI DOI 10.1109/SERA.2010.41
   Barenkamp Marco, 2020, AI Perspectives, V2, DOI 10.1186/s42467-020-00005-4
   Ben-Ari M., 2018, Elements of Robotics Internet, P1, DOI [10.1007/978-3-319-62533-1_1, DOI 10.1007/978-3-319-62533-1_1, DOI 10.1007/978-3-319-62533-11]
   Cao QH, 2015, IEEE GLOB COMM CONF, DOI 10.1109/GLOCOM.2015.7417270
   Chen JY, 2020, PROC INT CONF SOFTW, P578, DOI 10.1145/3377811.3380389
   Deng JH, 2020, IET SOFTW, V14, P443, DOI 10.1049/iet-sen.2019.0149
   DESAI VS, 2018, 2018 C INFORM COMMUN, P1, DOI DOI 10.1109/INFOCOMTECH.2018.8722380
   Gharehchopogh F. S., 2011, 2011 International Symposium on Innovations in Intelligent Systems and Applications (INISTA 2011), P69, DOI 10.1109/INISTA.2011.5946160
   Ghose M.K., 2011, 2011 2 NAT C EM TREN, P1, DOI DOI 10.1109/NCETACS.2011.5751391
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Goyal MV, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION & AUTOMATION (ICCCA), P823, DOI 10.1109/CCAA.2015.7148487
   Hovorushchenko T, 2015, INT WORKSH INT DATA, P348, DOI 10.1109/IDAACS.2015.7340756
   Jahan M, 2019, IEEE ACM INT WORKS M, P8, DOI 10.1109/MiSE.2019.00009
   Jordan MI, 2015, SCIENCE, V349, P255, DOI 10.1126/science.aaa8415
   Joseph HR, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P833, DOI 10.1109/ICSE.2015.271
   Karna Hrvoje, 2014, 2014 22nd International Conference on Software, Telecommunications and Computer Networks (SoftCOM), P356, DOI 10.1109/SOFTCOM.2014.7039106
   Karna Hrvoje, 2014, Proceedings of the 9th International Conference on Software Engineering and Applications ICSOFT-EA 2014, P26
   Kitchenham B., 2007, KEELE U DURHAM U JOI, P9
   Li HC, 2012, IEEE IFIP NETW OPER, P1374, DOI 10.1109/NOMS.2012.6212078
   Li X., 2018, ABS180504825 ARXIV
   Liu YX, 2017, INT CONF SOFTW ENG, P220, DOI 10.1109/ICSESS.2017.8342900
   Madala K, 2018, 2018 5TH INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE 2018), P54, DOI 10.1109/AIRE.2018.00014
   Mani D, 2014, AMCIS 2014 PROCEEDINGS
   Mitchell T. M., 1997, MACH LEARN
   Mukherjee S, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION CONTROL AND COMPUTING TECHNOLOGIES (ICACCCT), P406, DOI 10.1109/ICACCCT.2014.7019474
   Nassif A. B., 2012, Proceedings of the 2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel & Distributed Computing (SNPD 2012), P589, DOI 10.1109/SNPD.2012.40
   Navarro-Almanza R, 2017, 2017 5TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2017), P116, DOI 10.1109/CONISOFT.2017.00021
   Omri S, 2020, P IEEE ACM 42 INT C, P209
   Ota K, 2017, ACM T MULTIM COMPUT, V13, DOI 10.1145/3092831
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petticrew R., 2008, SYSTEMATIC REV SOCIA
   Pouyanfar S, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3234150
   Purawinata WM, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON CYBERNETICS AND COMPUTATIONAL INTELLIGENCE (CYBERNETICSCOM), P73, DOI 10.1109/CYBERNETICSCOM.2017.8311687
   Qiu Y, 2019, IEEE ACCESS, V7, P112097, DOI 10.1109/ACCESS.2019.2934530
   Rahman MA, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P25, DOI 10.1145/3340482.3342745
   Reddy RR, 2018, 2018 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P2389, DOI 10.1109/ICACCI.2018.8554800
   Rigou Yves, 2020, 2020 1st International Conference on Innovative Research in Applied Science, Engineering and Technology (IRASET), DOI 10.1109/IRASET48871.2020.9092144
   Saeed A, 2018, PROCEEDINGS OF 2018 7TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2018), P82, DOI 10.1145/3185089.3185140
   Septian W, 2017, INT CONF INFORM COMM, P259, DOI 10.1109/ICTS.2017.8265680
   Sethi T, 2016, INT CONF RELI INFO, P480, DOI 10.1109/ICRITO.2016.7785003
   Shailaja K., 2018, 2018 Second International Conference on Electronics, Communication and Aerospace Technology (ICECA), P910, DOI 10.1109/ICECA.2018.8474918
   Singh Y, 2009, COMM COM INF SC, V31, P128
   Sommerville I., 2010, SOFTWARE ENG
   Somvanshi M, 2016, 2016 INTERNATIONAL CONFERENCE ON COMPUTING COMMUNICATION CONTROL AND AUTOMATION (ICCUBEA)
   Ting Dong, 2019, 2019 IEEE 14th International Conference on Intelligent Systems and Knowledge Engineering (ISKE). Proceedings, P725, DOI 10.1109/ISKE47853.2019.9170437
   Ungan E, 2014, EUROMICRO CONF PROC, P77, DOI 10.1109/SEAA.2014.83
   Vashisht V., 2020, 2020 INT C COMP SCI, P1, DOI DOI 10.1109/ICCSEA49143.2020.9132944
   Viet AP, 2019, INT CONF KNOWL SYS, P281, DOI 10.1109/kse.2019.8919351
   Wells K, 2009, RES SOCIAL WORK PRAC, V19, P52, DOI 10.1177/1049731508317278
   Wen M, 2020, IEEE T SOFTWARE ENG, V46, P1155, DOI 10.1109/TSE.2018.2876256
   Winkler J, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P39, DOI [10.1109/REW.2016.16, 10.1109/REW.2016.021]
   Xue DS, 2012, PROCEEDINGS OF THE 2012 WORLD CONGRESS ON INFORMATION AND COMMUNICATION TECHNOLOGIES, P1177, DOI 10.1109/WICT.2012.6409253
   Yang H., 2010, 2010 International Conference on Biomedical Engineering and Computer Science, P1
   Yuan Huang, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P279, DOI 10.1109/APSEC.2014.50
NR 59
TC 3
Z9 3
U1 5
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2022
VL 34
IS 3
AR e2402
DI 10.1002/smr.2402
EA NOV 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZJ7HP
UT WOS:000713655700001
DA 2024-07-18
ER

PT J
AU Scott, E
   Milani, F
   Kilu, E
   Pfahl, D
AF Scott, Ezequiel
   Milani, Fredrik
   Kilu, Erki
   Pfahl, Dietmar
TI Enhancing agile software development in the banking sector-A
   comprehensive case study at LHV
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile software development; case study; financial institutions; FinTech;
   software process improvement
ID SUCCESS FACTORS; PROCESS IMPROVEMENT
AB FinTech companies are challenging established financial institutions' dominance by offering the same products with a superior customer experience and delivering new features faster. The adoption of agile software development partially enables this competitive advantage. In response to this challenge, banks explore how they can improve their agile processes. LHV, a mid-sized bank, uses agile practices but faces the challenge of further improvement to stay competitive with FinTech companies. In this article, we explore how LHV can improve its agile software development process. We conduct a case study at LHV where we first derive eight change proposals based on a literature review and interviews. Then, we report on how LHV implemented the change proposals and their perceived impact. Our results stress the importance of taking a coherent approach to improving agile processes by considering both business units and operations involved in the product life-cycle. It is also necessary to align organizational structures to enable team autonomy by, for instance, decentralizing decision authority. Finally, it is beneficial to adapt agile practices to their context and have an IT architecture and technology supporting the agile approach.
C1 [Scott, Ezequiel; Milani, Fredrik; Pfahl, Dietmar] Univ Tartu, Inst Comp Sci, Tartu, Estonia.
   [Kilu, Erki] AS LHV Grp, LHV UK, Tallinn, Estonia.
C3 University of Tartu
RP Scott, E (corresponding author), Univ Tartu, Inst Comp Sci, Tartu, Estonia.
EM ezequiel.scott@ut.ee
RI Scott, Ezequiel/J-1816-2019; Pfahl, Dietmar Alfred Paul Kurt/H-3084-2015
OI Scott, Ezequiel/0000-0001-5760-8226; Pfahl, Dietmar Alfred Paul
   Kurt/0000-0003-2400-501X; Milani, Fredrik/0000-0002-1322-915X
FU Estonian Research Council; Estonian Centre of Excellence in ICT Research
   (EXCITE)
FX Estonian Research Council; Estonian Centre of Excellence in ICT Research
   (EXCITE)
CR Al-Baik O, 2015, EMPIR SOFTW ENG, V20, P1861, DOI 10.1007/s10664-014-9340-x
   Aldahmash A, 2017, COMM COM INF SC, V748, P504, DOI 10.1007/978-3-319-64218-5_41
   [Anonymous], 2021, AGILES NEXT LEVEL AB
   Berkani A, 2019, PROCEDIA COMPUT SCI, V164, P449, DOI 10.1016/j.procs.2019.12.205
   Birkinshaw J, 2018, MIT SLOAN MANAGE REV, V59, P39
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Couzens, 2009, IMPLEMENTING ENTERPR
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Gai KK, 2018, J NETW COMPUT APPL, V103, P262, DOI 10.1016/j.jnca.2017.10.011
   Hajrizi Edmond, 2015, IFAC - Papers Online, V48, P153, DOI 10.1016/j.ifacol.2015.12.074
   Ivar Jacobson International , 2015, NORD UN HEARTB HELP
   Jureczko Marian, 2008, 3rd IFIP TC2 Central and East European Conference on Software Engineering Techniques, CEE-SET 2008, P139
   Keenan F, 2004, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2004.1317417
   Kilu E, 2019, LECT NOTES BUS INF P, V338, P57, DOI 10.1007/978-3-030-05767-1_5
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kniberg Henrik., 2010, Kanban and Scrum - Making the Most of Both
   Laanti M, 2019, LECT NOTES BUS INF P, V364, P81, DOI 10.1007/978-3-030-30126-2_10
   Ladas C., 2008, SCRUMBAN OTHER ESSAY
   Lee I, 2018, BUS HORIZONS, V61, P35, DOI 10.1016/j.bushor.2017.09.003
   Livermore Jeffrey A., 2008, Journal of Software, V3, P31, DOI 10.4304/jsw.3.4.31-36
   lLindvall M., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P197
   Mahadevan D., 2017, MCKIN Q
   Marques R, 2018, CONF BUS INFORM, P109, DOI 10.1109/CBI.2018.00021
   Mikalsen M, 2020, LECT NOTES BUS INF P, V396, P173, DOI 10.1007/978-3-030-58858-8_18
   Miler J, 2019, FED CONF COMPUT SCI, P841, DOI 10.15439/2019F198
   Misra SC, 2009, J SYST SOFTWARE, V82, P1869, DOI 10.1016/j.jss.2009.05.052
   Moe NB, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P76, DOI 10.1109/ASWEC.2008.28
   Moe NB, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P6997
   Myrbakken H, 2017, COMM COM INF SC, V770, P17, DOI 10.1007/978-3-319-67383-7_2
   Niazi M, 2018, ARAB J SCI ENG, V43, P7719, DOI 10.1007/s13369-018-3140-3
   Niven P.R. y., 2016, Objectives and key results: Driving focus, alignment, and engagement with OKRs
   Paasivaara M, 2012, INT SYMP EMP SOFTWAR, P235, DOI 10.1145/2372251.2372294
   Petersen, 2018, PRELIMINARY CHECKLIS, P25
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Putta A, 2018, PROCEEDINGS 2018 ACM/IEEE 13TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING ICGSE 2018, P141, DOI 10.1145/3196369.3196386
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Razavi Abbas Moshref, 2014, 2014 8th Malaysian Software Engineering Conference (MySEC), P216, DOI 10.1109/MySec.2014.6986017
   Reddy A, 2015, The Scrumban Revolution: Getting the Most Out of Agile,Scrum, and Lean Kanban
   Rolland K., 2016, P 37 ICIS INT C INF, P1
   Romanova I, 2017, CONTEMP STUD ECON FI, V98, P21, DOI 10.1108/S1569-375920160000098002
   Roses Luís Kalb, 2016, JISTEM J.Inf.Syst. Technol. Manag., V13, P439
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salameh A, 2020, LECT NOTES BUS INF P, V396, P236, DOI 10.1007/978-3-030-58858-8_24
   Salameh A, 2018, LECT NOTES COMPUT SC, V11271, P199, DOI 10.1007/978-3-030-03673-7_15
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Scott E., 2020, CONT EMPIRICAL METHO, P217
   Seffernick TR, 2007, AGILE 2007, Proceedings, P200, DOI 10.1109/AGILE.2007.23
   STRAY V, 2018, 19 INT C AGILE SOFTW
   Suryaatmaja K, 2020, PALGR COMMUN, V6, DOI 10.1057/s41599-019-0384-9
   Sutherland Jeff, 2013, The Definitive Guide to Scrum: The Rules of the Game, V268
   Svejvig P, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P171, DOI 10.1007/978-3-642-12442-6_12
   Vasiljeva T., 2016, Journal of Business Management, V11, P25
   Vom Brocke J., 2014, HDB BUSINESS PROCESS
   Wilson, 2014, 10 THINGS CIO NEEDS
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
NR 58
TC 3
Z9 4
U1 4
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2021
VL 33
IS 7
AR e2363
DI 10.1002/smr.2363
EA JUN 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TC5NN
UT WOS:000656432600001
DA 2024-07-18
ER

PT J
AU Shafagatova, A
   Van Looy, A
AF Shafagatova, Aygun
   Van Looy, Amy
TI Developing a tool for process-oriented appraisals and rewards: Design
   science research
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE business process management; design-science research; human resource
   management; process-oriented appraisals and rewards; qualitative
   decision support; tool development
ID BUSINESS PROCESS; PERFORMANCE MANAGEMENT; MOTIVATION
AB While business process management (BPM) has become a recognized discipline, managers are still challenged to achieve an appropriate alignment between BPM their BPM needs and other management practices in the organization. Specifically, the aligned behavior and performance of employees and teams are crucial to reap the full benefits of BPM. To help managers face such alignment challenges, we have developed a qualitative decision support tool, called "process-oriented appraisals and rewards" (POAR), by combining design-science research with a strong qualitative approach. Our study contributes to the BPM and human resource management (HRM) disciplines by extending multifaceted knowledge, while also offering a practical tool for managers to support their decision making regarding a BPM-HRM alignment.
C1 [Shafagatova, Aygun; Van Looy, Amy] Univ Ghent, Fac Econ & Business Adm, Dept Business Informat & Operat Management, Tweekerkenstr 2, B-9000 Ghent, Belgium.
C3 Ghent University
RP Shafagatova, A (corresponding author), Univ Ghent, Fac Econ & Business Adm, Dept Business Informat & Operat Management, Tweekerkenstr 2, B-9000 Ghent, Belgium.
EM aygun.shafagatova@ugent.be
RI ; Van Looy, Amy/G-1072-2019
OI Shafagatova, Aygun/0000-0001-9837-4585; Van Looy,
   Amy/0000-0002-7992-1528
CR Aguinis H, 2013, BUS HORIZONS, V56, P503, DOI 10.1016/j.bushor.2013.02.004
   Aguinis Herman, 2013, Performance management, VThird
   Akoka J, 2017, LECT NOTES COMPUT SC, V10243, P201, DOI 10.1007/978-3-319-59144-5_12
   García-García JA, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1982
   [Anonymous], 2013, SCHMALENBACHS BUSINE
   [Anonymous], 2019, GARTNER MAGIC QUADRA
   Armstrong M., 2014, Handbook of Human resource management practice, V13th
   Bandara W, 2005, EUR J INFORM SYST, V14, P347, DOI 10.1057/palgrave.ejis.3000546
   Baskerville RL, 2015, MIS QUART, V39, P541, DOI 10.25300/MISQ/2015/39.3.02
   Becker BE, 2006, J MANAGE, V32, P898, DOI 10.1177/0149206306293668
   Bernardin John H., 2013, HUMAN RESOURCE MANAG, V6th ed.
   Beverungen D, 2014, BUS INFORM SYST ENG+, V6, P191, DOI 10.1007/s12599-014-0335-3
   Bredin K, 2011, HUMAN RESOURCE MANAGEMENT IN PROJECT-BASED ORGANIZATIONS: THE HR QUADRIAD FRAMEWORK, P1, DOI 10.1057/9780230297517
   Buckingham M, 2015, HARVARD BUS REV, V93, P40
   Collings GD., 2009, HUMAN RESOURCE MANAG, DOI [10.4324/9780203876336, DOI 10.4324/9780203876336]
   Delery JE, 1996, ACAD MANAGE J, V39, P802, DOI 10.5465/256713
   Denner MS, 2018, BUS INFORM SYST ENG+, V60, P331, DOI 10.1007/s12599-017-0509-x
   Dumas M., 2018, FUNDAMENTALS BUSINES
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P57, DOI 10.2307/258191
   Feldman MS, 2000, ORGAN SCI, V11, P611, DOI 10.1287/orsc.11.6.611.12529
   Fletcher C, 2001, J OCCUP ORGAN PSYCH, V74, P473, DOI 10.1348/096317901167488
   Geist V, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1952
   Gilbert C, 2015, HUM RESOUR MANAG J, V25, P600, DOI 10.1111/1748-8583.12088
   Gioia DA, 2013, ORGAN RES METHODS, V16, P15, DOI 10.1177/1094428112452151
   Gregor S, 2013, MIS QUART, V37, P337, DOI 10.25300/MISQ/2013/37.2.01
   Hammer M, 1999, HARVARD BUS REV, V77, P108
   Harmon P, 2020, HARMON BPM
   Harmon P., 2007, BUSINESS PROCESS CHA
   Harmon P, 2013, HUMAN CAPITAL MANAGE, P11
   Hernaus T., 2008, FEB - Working Paper Series, P1
   Herzberg F., 1974, J APPL PSYCHOL, V55, P73
   Hevner A, 2010, INTEGR SER INFORM SY, V22, P9, DOI 10.1007/978-1-4419-5653-8_2
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hevner R., 2007, Scandinavian Journal of Information Systems, V19, P4
   Jones MR, 2008, MIS QUART, V32, P127
   Klun M, 2018, BUS PROCESS MANAG J, V24, P786, DOI 10.1108/BPMJ-11-2016-0226
   Kohlbacher M, 2011, BUS PROCESS MANAG J, V17, P267, DOI 10.1108/14637151111122347
   Lawler EE, 2003, ORGAN DYN, V32, P396, DOI 10.1016/j.orgdyn.2003.08.007
   Leist S., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1546, DOI 10.1145/1141277.1141635
   Lewis S, 2015, HEALTH PROMOT PRACT, V16, P473, DOI 10.1177/1524839915580941
   Locke EA, 2002, AM PSYCHOL, V57, P705, DOI 10.1037//0003-066X.57.9.705
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   McCormack K, 2001, QUAL PROG, V34, P51
   MINTZBERG H, 1971, MANAGE SCI B-APPL, V18, pB97
   Moody D.L., 2003, P 11 EUR C INF SYST, P1327
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Prat N., 2014, PACIS 2014 P, P1
   Prat N, 2015, J MANAGE INFORM SYST, V32, P229, DOI 10.1080/07421222.2015.1099390
   Rummler G.A., 2013, Improving performance: How to manage the white space on the organization chart, V3rd
   Ryan RM, 2000, AM PSYCHOL, V55, P68, DOI 10.1037/0003-066X.55.1.68
   Simon H. A., 2000, Mind & Society, V1, P25, DOI [10.1007/BF02512227, DOI 10.1007/BF02512227]
   Sinclair D., 1995, BUSINESS PROCESS REE, V1, P58
   Sonnenberg C, 2012, LECT NOTES COMPUT SC, V7286, DOI 10.1007/978-3-642-29863-9
   Tafti A, 2007, INFORM TECHNOL MANAG, V8, P147, DOI 10.1007/s10799-007-0014-x
   Taggart W., 1980, Proceedings of the Seventeenth Annual Computer Personnel Research Conference, P63, DOI 10.1145/800085.802732
   van der Aalst WMP, 2016, BUS INFORM SYST ENG+, V58, P1, DOI 10.1007/s12599-015-0409-x
   Van Looy A, DECISION TOOL CHOOSI, P78
   Van Looy A, 2014, ENTERP INF SYST-UK, V8, P188, DOI 10.1080/17517575.2012.688222
   Van Looy A, 2013, INFORM MANAGE-AMSTER, V50, P466, DOI 10.1016/j.im.2013.06.002
   Venable J, 2016, EUR J INFORM SYST, V25, P77, DOI 10.1057/ejis.2014.36
   Vom Brocke J., 2017, SSRN, DOI DOI 10.2139/SSRN.2972803
   vom Brocke J, 2015, HDB BUSINESS PROCESS, P1
   vom Brocke J, 2019, ELECTRON MARK, V29, P379, DOI 10.1007/s12525-019-00358-7
   Walls JG, 1992, INFORM SYST RES, V3, P36, DOI 10.1287/isre.3.1.36
   Whittington R., 2015, CAMBRIDGE HDB STRATE, P145, DOI DOI 10.1017/CBO9781139681032.009
   Willaert P., 2009, DATA KNOWL ENG, V64, P1, DOI [10.1016/j.datak.2007.06.004, DOI 10.1016/J.DATAK.2007.06.004]
   Winter R, 2008, EUR J INFORM SYST, V17, P470, DOI 10.1057/ejis.2008.44
   Yin R. K., 2017, CASE STUDY RES DESIG
   2012, AMERICAN DIPLOMACY, P1
NR 69
TC 2
Z9 2
U1 1
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2021
VL 33
IS 3
AR e2321
DI 10.1002/smr.2321
EA OCT 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA QT0GD
UT WOS:000574767900001
DA 2024-07-18
ER

PT J
AU Banach, R
   Zhu, HB
AF Banach, Richard
   Zhu, Huibiao
TI Language evolution and healthiness for critical cyber-physical systems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE cyber-physical systems; healthiness criteria; language features
ID HYBRID SYSTEMS; EVENT-B; VERIFICATION; MODEL
AB In the effort to develop critical cyber-physical systems, it is tempting to extend existing computing formalisms to include continuous behaviour. This may happen in a way that neglects elements necessary for correctly expressing continuous properties of the mathematics and correct physical properties of the real-world physical system. A simple language is taken to illustrate these possibilities. Issues and risks latent in this kind of approach are identified and discussed under the umbrella of 'healthiness conditions'. Modifications to the language in the light of the conditions discussed are elaborated, resulting in the language Combined Discrete and Physical Programmes in Parallel (CDPPP). An example air conditioning system is used to illustrate the concepts presented, and it is developed both in the original 'unhealthy' language and in the modified 'healthier' CDPPP. The formal semantics of the improved language is explored.
C1 [Banach, Richard] Univ Manchester, Dept Comp Sci, Manchester, Lancs, England.
   [Zhu, Huibiao] East China Normal Univ, Shanghai Key Lab Trustworthy Comp, Shanghai, Peoples R China.
C3 University of Manchester; East China Normal University
RP Banach, R (corresponding author), Univ Manchester, Dept Comp Sci, Manchester, Lancs, England.
EM richard.banach@manchester.ac.uk
OI Banach, Richard/0000-0002-0243-9434
FU National Natural Science Foundation of China [61872145]; National Key
   Research and Development Program of China [2018YFB2101300]; Shanghai
   Collaborative Innovation Center of Trustworthy Software for Internet of
   Things [ZF1213]
FX National Natural Science Foundation of China, Grant/Award Number:
   61872145; National Key Research and Development Program of China,
   Grant/Award Number: 2018YFB2101300; Shanghai Collaborative Innovation
   Center of Trustworthy Software for Internet of Things, Grant/Award
   Number: ZF1213
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R, 2015, PRINCIPLES OF CYBER-PHYSICAL SYSTEMS, P1
   [Anonymous], 1996, Springer Series in Computational Mathematics
   [Anonymous], 1993, Hybrid Systems, DOI [DOI 10.1007/3-540-57318-6_30, DOI 10.1007/3-540, DOI 10.1007/3-540-57318-6, 10.1007/3-540-57318-6_30]
   [Anonymous], 2014, SYSTEM DESIGN MODELI
   [Anonymous], 2011, TRUSTW CYB STRAT PLA
   [Anonymous], 2002, LNCS
   [Anonymous], 2016, From Action Systems to Distributed Systems-the Refinement Approach, DOI DOI 10.1201/B20053-5
   [Anonymous], 1996, HYBRID I O AUTOMATA
   APT KR, 1981, ACM T PROGR LANG SYS, V3, P431, DOI 10.1145/357146.357150
   Asarin E., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P365
   Audemard G, 2005, ELECTRON NOTES THEOR, V119, P17, DOI 10.1016/j.entcs.2004.12.022
   Back R.-J., 2001, Nordic Journal of Computing, V8, P2
   Back R.-J., 1998, Refinement Calculus
   Back RJ, 2000, LECT NOTES COMPUT SC, V1926, P202
   Banach R, 2015, ENASE 2015 - PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P238
   Banach R, 2017, COMM COM INF SC, V694, P109, DOI 10.1007/978-3-319-53946-1_7
   Banach R, 2017, SCI COMPUT PROGRAM, V139, P1, DOI 10.1016/j.scico.2016.12.003
   Banach R, 2015, SCI COMPUT PROGRAM, V105, P92, DOI 10.1016/j.scico.2015.02.003
   Banach R, 2014, 2014 THEORETICAL ASPECTS OF SOFTWARE ENGINEERING CONFERENCE (TASE), P42, DOI 10.1109/TASE.2014.7
   Bender K, 2002, LNCS, V279
   Carloni LP, 2006, FOUND TRENDS ELECTRO, V1, P1, DOI 10.1561/1000000001
   CHAOCHEN Z, 1991, INFORM PROCESS LETT, V40, P269, DOI 10.1016/0020-0190(91)90122-X
   Chaochen Z., 1995, International Hybrid Systems Workshop, P511
   Cimatti A, 2009, LECT NOTES COMPUT SC, V5643, P188, DOI 10.1007/978-3-642-02658-4_17
   Clarke E, 2003, LECT NOTES COMPUT SC, V2619, P192
   Dai LY, 2017, J SYMB COMPUT, V80, P62, DOI 10.1016/j.jsc.2016.07.010
   Deshpande A., 1997, Hybrid Systems IV, P113, DOI 10.1007/BFb0031558
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Egyed A, 2018, COMM COM INF SC, V929, P113, DOI 10.1007/978-3-030-02852-7_10
   Frehse G, 2005, LECT NOTES COMPUT SC, V3414, P258
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Friesen V, 1998, LECT NOTES COMPUT SC, V1493, P328, DOI 10.1007/BFb0056042
   Friesen V, 1999, OBJECT ORIENTED TECH, P1
   Geisberger E., 2015, Living in a networked world: Integrated research agenda Cyber-Physical Systems (agendaCPS)
   Grosu R, 1998, LECT NOTES COMPUT SC, V1486, P75, DOI 10.1007/BFb0055338
   Haddad W. M., 2008, Nonlinear Dynamical Systems and Control: A Lyapunov-Based Approach
   Hairer E., 2008, Solving ordinary differential equations. I: Nonstiff problems, V2nd
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   Henzinger TA, 1997, LECT NOTES COMPUT SC, V1254, P460, DOI 10.1007/s100090050008
   Hinrichsen D, 2005, MATH SYSTEMS THEORY
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Hoare T., 1998, UNIFYING THEORIES PR
   Horn R., 1985, Matrix Analysis, DOI [10.1017/CBO9780511810817, 10.1017/CBO9781139020411]
   Horn R. A., 2013, Topics in Matrix Analysis, V2nd
   Jifeng H., 1994, A Classical Mind, Essays in Honour of C.A.R. Hoare, P171
   Kesten Y, 2000, ACTA INFORM, V36, P837, DOI 10.1007/s002360050177
   Lee EdwardA., 2015, INTRO EMBEDDED SYSTE, VSecond
   Liu J, 2010, LECT NOTES COMPUT SC, V6461, P1, DOI [10.1109/PCSPA.2010.9, 10.1007/978-3-642-17164-2_1]
   Louden K C., 2011, Programming languages: principles and practices, V3rd
   Lynch N, 2003, INFORM COMPUT, V185, P105, DOI 10.1016/S0890-5401(03)00067-1
   Manna Z., 1993, Hybrid Systems, P4
   Peng Y, 2015, LECT NOTES COMPUT SC, V9409, P87, DOI 10.1007/978-3-319-25942-0_6
   Platzer A, 2018, LOGICAL FDN HYBRID S
   Platzer A, 2010, LOGICAL ANALYSIS OF HYBRID SYSTEMS: PROVING THEOREMS FOR COMPLEX DYNAMICS, P335, DOI 10.1007/978-3-642-14509-4_9
   Polyanin A.D, 2002, HDB LINEAR PARTIAL D
   Prajna S, 2004, LECT NOTES COMPUT SC, V2993, P477
   Scott Michael L., 2016, Programming Language Pragmatics, V4th
   Sontag E. D, 1998, Mathematical Control Theory: Deterministic Finite Dimensional Systems, V6
   Stauner T, 1999, HYBRID SYSTEM MODEL
   Su W, 2017, INT J SOFTW TOOLS TE, V19, P141, DOI 10.1007/s10009-015-0400-3
   Su W, 2014, SCI COMPUT PROGRAM, V94, P164, DOI 10.1016/j.scico.2014.04.015
   Sztipanovits Janos, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, DOI 10.1007/978-3-642-21437-0_1
   Sztipanovits J, 2007, ECBS 2007: 14th Annual IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, Proceedings, P3
   Thacker R.A., 2010, Proceedings of the 1st ACM/IEEE International Conference on Cyber-Physical Systems, ICCPS '10, P12, DOI [10.1145/1795194.1795197, DOI 10.1145/1795194.1795197]
   Walter W., 1998, Ordinary Differential Equations
   Willems J., 2007, OPEN DYNAMICAL SYSTE
   Wolf W, 2009, COMPUTER, V42, P88, DOI 10.1109/MC.2009.81
   Wu J, 2010, INT CONF COMP SCI, P50, DOI 10.1109/ICCSIT.2010.5563537
   Zhan N., 2017, FORMAL VERIFICATION, P71
   Zhu HB, 2009, INNOV SYST SOFTW ENG, V5, P271, DOI 10.1007/s11334-009-0100-9
   Zhu HB, 2012, J LOGIC ALGEBR PROGR, V81, P2, DOI 10.1016/j.jlap.2011.06.003
NR 75
TC 4
Z9 4
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2021
VL 33
IS 9
SI SI
AR e2301
DI 10.1002/smr.2301
EA SEP 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UP0XV
UT WOS:000569395300001
OA hybrid
DA 2024-07-18
ER

PT J
AU AlGhamdi, HM
   Bezemer, CP
   Shang, WY
   Hassan, AE
   Flora, P
AF AlGhamdi, Hammam M.
   Bezemer, Cor-Paul
   Shang, Weiyi
   Hassan, Ahmed E.
   Flora, Parminder
TI Towards reducing the time needed for load testing
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE load testing; performance analysis; performance testing
AB The performance of large-scale systems must be thoroughly tested under various levels of workload, as load-related issues can have a disastrous impact on the system. However, load testing often requires a large amount of time, running from hours to even days. In our prior work, we reduced the execution time of a load test by detecting repetitiveness in individual performance metric values, such as CPU utilization, that are observed during the test. However, as we explain in this paper, disregarding combinations of performance metrics may miss important information about the load-related behavior of a system. In this paper we revisit our prior approach, by proposing an approach that reduces the execution time of a load test by detecting whether a test no longer exercises new combinations of the observed performance metrics. We study three open source systems, in which we use our new and prior approaches to reduce the execution time of a 24-hour load test. We show that our new approach is capable of reducing the execution time of the test to less than 8.5 hours, while preserving a coverage of at least 95% of the combinations that are observed between the performance metrics during the 24-hour tests.
C1 [AlGhamdi, Hammam M.; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Bezemer, Cor-Paul] Univ Alberta, Analyt Software Games & Repository Data ASGAARD L, Edmonton, AB, Canada.
   [Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
   [Flora, Parminder] BlackBerry Ltd, Waterloo, ON, Canada.
C3 Queens University - Canada; University of Alberta; Concordia University
   - Canada
RP Bezemer, CP (corresponding author), Univ Alberta, Analyt Software Games & Repository Data ASGAARD L, Edmonton, AB, Canada.
EM bezemer@ualberta.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718
CR Alghamdi HA, 2016, C ELECT INSUL DIEL P, P27, DOI 10.1109/CEIDP.2016.7785678
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Apache Software Foundation, 2017, AP TOMC
   Apache Software Foundation, 2017, AP JMETER
   Apte Varsha., 2017, Proceedings of the 8th ACM/SPEC on International Conference on Performance Engineering, P115, DOI DOI 10.1145/3030207.3030222
   Ayala-Rivera V, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P211, DOI 10.1145/3184407.3184418
   Binder R.V., 2000, AW OBJ TECHNOL S
   Busany N, 2016, PROC INT CONF SOFTW, P877, DOI 10.1145/2884781.2884805
   Casale G, 2009, P 10 ACM IFIP USENIX, P20
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   CodeWizards GmbH, 2017, CLOUDST
   Cohen I, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P231
   Dell, 2010, DELL DVD STORE
   Foo King Chun, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P32, DOI 10.1109/QSIC.2010.35
   Foo KC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P159, DOI 10.1109/ICSE.2015.144
   Gauthier TD, 2001, ENVIRON FORENSICS, V2, P359, DOI 10.1006/enfo.2001.0061
   Grano G, 2021, IEEE T SOFTWARE ENG, V47, P2332, DOI 10.1109/TSE.2019.2946773
   He S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P188, DOI 10.1145/3338906.3338912
   Izrailev S, 2016, BINNING ALGORITHM
   Jiang ZM, 2009, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSM.2009.5306331
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   Malik H, 2010, EUR CON SFTWR MTNCE, P222, DOI 10.1109/CSMR.2010.39
   Mi NF, 2008, LECT NOTES COMPUT SC, V5346, P265
   Microsoft, 2017, PERFMON
   Nguyen LTH, 2012, BIOMATERIALS AND STEM CELLS IN REGENERATIVE MEDICINE, P299
   Oracle Corporation, 2017, MYSQL
   Shang Weiyi., 2015, P 6 ACMSPEC INT C PE, P15
   Shariff SM, 2019, INT WORKSH AUTOMAT, P14, DOI 10.1109/AST.2019.00008
   Shivam Piyush, 2008, USENIX 2008 Annual Technical Conference on Annual Technical Conference, P241
   Spring Framework, 2007, SPRING FRAMEWORK
   Tchana A, 2013, SELF SCALABLE BENCHM, P389
   Williams A, 2012, AMAZON WEB SERVICES
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhen Ming Jiang, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P131, DOI 10.1109/SSIRI.2010.15
NR 36
TC 7
Z9 7
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2023
VL 35
IS 3
SI SI
AR e2276
DI 10.1002/smr.2276
EA JUL 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9M0KI
UT WOS:000548576100001
DA 2024-07-18
ER

PT J
AU Tariq, S
   Usman, M
   Fong, ACM
AF Tariq, Sidra
   Usman, Muhammad
   Fong, Alvis C. M.
TI Selecting best predictors from large software repositories for highly
   accurate software effort estimation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE effort estimation; machine learning; features; predictors
AB Accurate prediction of software effort is important for planning, scheduling, and allocating resources. However, software effort estimation has been a challenging task. Although numerous estimation models have been proposed, few achieve anything close to accurate prediction of software development effort. To achieve optimal results, machine learning techniques have recently been employed for predicting software development effort using relatively large software repositories. However, some issues remain unresolved, and this paper aims to address the following issues. First, feature selection methods often neglected the information rich variables present in the dataset. Second, selection of important features was done through statistical methods, which lack domain knowledge. Third, missing values in the data that significantly influence the prediction outcome was not efficiently handled. Fourth, majority of the literature neglected advanced evaluation measures, which thoroughly evaluate the ability of learning models to produce accurate results. To address the above issues, a machine learning-based model has been proposed in this paper, which not only allows effective preprocessing of data but also provides highly accurate prediction results with minimum error rate. The purpose is to best identify attributes (predictors) from large software repositories that are most influential in the estimation of effort. In addition, we apply MMRE for better performance analysis.
C1 [Tariq, Sidra; Usman, Muhammad] Shaheed Zulfikar Ali Bhutto Inst Sci & Technol, Dept Comp Sci, Karachi, Pakistan.
   [Fong, Alvis C. M.] Western Michigan Univ, Dept Comp Sci, 1903 W Michigan Ave, Kalamazoo, MI 49008 USA.
C3 Shaheed Zulfikar Ali Bhutto Institute of Science & Technology; Western
   Michigan University
RP Fong, ACM (corresponding author), Western Michigan Univ, Dept Comp Sci, 1903 W Michigan Ave, Kalamazoo, MI 49008 USA.
EM acmfong@gmail.com
RI Usman, Muhammad/JEP-1477-2023
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Amazal Fatima Azzahra, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P247, DOI 10.1109/APSEC.2014.46
   Amazal Fatima-Azzahra, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P252, DOI 10.1109/IWSM.Mensura.2014.31
   Azzeh M., 2008, P 4 INT WORKSH PRED, P71, DOI DOI 10.1145/1370788.1370805
   Azzeh M, 2015, IET SOFTW, V9, P39, DOI 10.1049/iet-sen.2013.0165
   Bardsiri VK, 2014, EMPIR SOFTW ENG, V19, P857, DOI 10.1007/s10664-013-9241-4
   Bhargava Neeraj, 2013, P INT J ADV RES COMP
   Boehm B.W., 1981, Software engineering economics, V197
   Chatzipetrou P, 2015, INFORM SOFTWARE TECH, V59, P149, DOI 10.1016/j.infsof.2014.11.004
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Fernández-Diego M, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P132, DOI 10.1109/IWSM-MENSURA.2012.28
   Huang JL, 2015, INFORM SOFTWARE TECH, V67, P108, DOI 10.1016/j.infsof.2015.07.004
   Idri A, 2016, APPL SOFT COMPUT, V49, P990, DOI 10.1016/j.asoc.2016.08.012
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   López-Martín C, 2015, J SYST SOFTWARE, V101, P127, DOI 10.1016/j.jss.2014.12.002
   López-Martín C, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P156, DOI 10.1109/ICMLA.2013.182
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Nassif AB, 2016, NEURAL COMPUT APPL, V27, P2369, DOI 10.1007/s00521-015-2127-1
   Nassif AB, 2013, J SYST SOFTWARE, V86, P144, DOI 10.1016/j.jss.2012.07.050
   Onyari E.K., 2013, International Journal of Innovation, Management and Technology, P11, DOI DOI 10.7763/IJIMT.2013.V4.347
   Papatheocharous E, 2012, ARXIV12101161
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Robnik-Sikonja M, 2013, MACH LEARN, V53, P23
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Tsunoda M, 2012, INT SYMP EMP SOFTWAR, P99, DOI 10.1145/2372251.2372267
   Vicinanza SS, 1999, INFORM SYST RES, V2, P243
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Wen JF, 2009, ASIA PAC SOFWR ENG, P179, DOI 10.1109/APSEC.2009.40
NR 29
TC 0
Z9 0
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2020
VL 32
IS 10
AR e2271
DI 10.1002/smr.2271
EA JUN 2020
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ4PK
UT WOS:000539007200001
DA 2024-07-18
ER

PT J
AU Larrucea, X
   Santamaria, I
   Fernandez-Gauna, B
AF Larrucea, Xabier
   Santamaria, Izaskun
   Fernandez-Gauna, Borja
TI Managing security debt across PLC phases in a VSE context
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE assurance case; ISO; IEC 29110; safety; security; technical debt
ID SOFTWARE PROCESS IMPROVEMENT; PRODUCT LIFE-CYCLE; TECHNICAL DEBT; SMALL
   ENTITIES; PROJECT-MANAGEMENT; ISO/IEC 29110; REQUIREMENTS; STANDARDS
AB Nowadays, security and safety aspects are two of the major concerns for any software system development, especially while developing safety critical systems. This is especially relevant for very small entities because they have a limited amount of resources for dealing with all these aspects at the same time. In addition, these systems are highly regulated domains, and they involve a huge set of standards focused on safety and security-related issues. Therefore, these small entities are not only facing hurdles related to technical aspects but also from the so-called technical debt when overarching a critical development. This paper extends the assurance cases approach by integrating security aspects within the life cycle, and it proposes a framework for managing the associated security technical debt for very small entities. A tool chain is outlined, and the approach is illustrated with an industrial use case.
C1 [Larrucea, Xabier; Santamaria, Izaskun] TECNALIA, Bizkaia, Spain.
   [Fernandez-Gauna, Borja] Univ Basque Country, Lenguajes & Sistemas Informat, Vitoria, Spain.
C3 University of Basque Country
RP Larrucea, X (corresponding author), TECNALIA, Bizkaia, Spain.
EM xlarrucea@yahoo.com
RI Larrucea, Xabier/Y-9017-2019; Romay, Manuel M. Graña/L-1341-2014;
   Fernandez-Gauna, Borja/AAI-9493-2020
OI Larrucea, Xabier/0000-0002-6402-922X; Fernandez-Gauna,
   Borja/0000-0001-9233-2333; Kudai, Bortx/0000-0002-6213-5096; Santamaria,
   Izaskun/0000-0003-2135-4644
CR Adelard, CLAIMS ARG EV
   Ampatzoglou A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P115, DOI 10.1145/3194164.3194175
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], 0056 MIN DEF 1
   [Anonymous], 2014, NASA SYSTEM SAFETY H, V2
   [Anonymous], 2016, POSTMARKET MANAGEMEN
   [Anonymous], 2014, NELS, DOI DOI 10.1007/978-3-662-43896-1_1
   [Anonymous], 2017, FRAM IMPR CRIT INFR
   [Anonymous], 265312015E ISOIECIEE
   [Anonymous], 61508 IEC
   Basri S, 2010, COMM COM INF SC, V99, P153
   Bukata E, 2000, IEEE AERO EL SYS MAG, V15, P39, DOI 10.1109/62.825670
   Cao L, 2010, 2010 IEEE 21ST INTERNATIONAL SYMPOSIUM ON PERSONAL INDOOR AND MOBILE RADIO COMMUNICATIONS (PIMRC), P373, DOI 10.1109/PIMRC.2010.5671868
   Clermont P, 2018, COMPUT IND, V95, P1, DOI 10.1016/j.compind.2017.11.002
   Cunningham W., 1992, WYCASHPORTFOLIO MANA
   Nguyen DS, 2014, IN C IND ENG ENG MAN, P754, DOI 10.1109/IEEM.2014.7058739
   Ebert C, 2006, IEEE SOFTWARE, V23, P19, DOI 10.1109/MS.2006.88
   Finkelstein L, 1991, ENG MANAG J, V1, P115, DOI [10.1049/em:19910031, DOI 10.1049/EM:19910031]
   Fowler M., 2003, TECHNICALDEBT
   Fowler M., 2009, TECHNICALDEBTQUADRAN
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herranz E, 2016, J UNIVERS COMPUT SCI, V22, P1509
   Holvitie J, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P54, DOI 10.1109/SEAA.2016.53
   Holvitie J, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P20, DOI 10.1109/MTD.2013.6608674
   IEC, 2011, 615083 IEC
   International Standard Organisation, 152882015 ISOIECIEEE
   International Standard Organisation, 749821989 ISO
   International Standard Organisation, 2009, 1540812009 ISOIEC
   ISO/IEC, 2011, 291101 ISOIEC TR
   Jun HB, 2007, IEEE T KNOWL DATA EN, V19, P1680, DOI 10.1109/TKDE.2007.190661
   Korsaa M, 2013, J SOFTW-EVOL PROC, V25, P381, DOI 10.1002/smr.570
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Kruchten Philippe, 2013, ACM SIGSOFT Software Engineering Notes, V38, P51
   Kumari S., 2011, METHOD SAFETY CRITIC
   Laporte CY, 2018, IEEE SOFTWARE, V35, P99, DOI 10.1109/MS.2017.4541041
   Larrucea X, 2018, COMM COM INF SC, V896, P354, DOI 10.1007/978-3-319-97925-0_29
   Larrucea X, 2018, IEEE SOFTWARE, V35, P96, DOI 10.1109/MS.2018.2141030
   Larrucea X, 2017, IEEE SOFTWARE, V34, P40, DOI 10.1109/MS.2017.68
   Larrucea X, 2016, COMM COM INF SC, V633, P269, DOI 10.1007/978-3-319-44817-6_23
   Larrucea X, 2016, COMPUT STAND INTER, V48, P71, DOI 10.1016/j.csi.2016.04.004
   Larrucea X, 2016, IEEE SOFTWARE, V33, P85, DOI 10.1109/MS.2016.42
   Larrucea X, 2013, IEEE SOFTWARE, V30, P26
   Linling S., 2011, PROCEDIA ENG, V17, P358
   Madenas N, 2014, CIRP J MANUF SCI TEC, V7, P335, DOI 10.1016/j.cirpj.2014.07.002
   Martini A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P55, DOI 10.1145/3194164.3194185
   McConnell S., MANAGING TECHNICAL D
   Merchant S, 2012, PROCEDIA COMPUT SCI, V8, P443, DOI 10.1016/j.procs.2012.01.084
   Mesquida AL, 2014, J SOFTW-EVOL PROC, V26, P846, DOI 10.1002/smr.1665
   Messnarz R, 2014, J SOFTW-EVOL PROC, V26, P284, DOI [10.1002/smr.1583, 10.1002/smr.1591, 10.1002/smr.1586, 10.1002/smr.1582]
   Munch Jurgen, 2012, Software Process Definition and Management
   Nagorny K, 2014, IEEE INTL CONF IND I, P582, DOI 10.1109/INDIN.2014.6945578
   O'Connor R.V., 2013, SPICE 2013, V349, P243, DOI DOI 10.1007/978-3-642-38833-0_
   O'Connor RV, 2012, COMM COM INF SC, V301, P330
   O'Connor RV, 2014, EARLY STAGE ADOPTION, P226, DOI [10.1007/978-3-319-13036-1_20, DOI 10.1007/978-3-319-13036-1_20]
   Pries-Heje J., 2010, SPI Manifesto'
   Reimanis D, 2016, INT WORKSH MANAG TEC, P24, DOI 10.1109/MTD.2016.13
   Ribaud V, 2010, COMM COM INF SC, V108, P119
   Ross R., 2018, Systems security engineering: Considerations for a multidisciplinary approach in the engineering of trustworthy secure systems, V1, DOI DOI 10.6028/NIST.SP.800-160V1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Rupp T.M., 2006, PRODUCT LIFE CYCLE M, P1, DOI DOI 10.1109/ICE.2006.7477089
   Sakita K, 2005, Fourth International Symposium on Environmentally Conscious Design and Inverse Manufacturing, Proceedings, P527
   Saldaña-Ramos J, 2014, J SOFTW-EVOL PROC, V26, P329, DOI [10.1002/smr.1589, 10.1002/smr.1590]
   Sanchez-Gordon ML, 2015, COMM COM INF SC, V526, P114, DOI 10.1007/978-3-319-19860-6_10
   Sanchez-Gordon S, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.1987
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Spriggs J., 2012, GSN - The Goal Structuring Notation, V1
   Stallard B., 2010, USING ELECT DESIGN A, P1, DOI DOI 10.1109/RAMS.2010.5447999
   Stochel MG, VALUE BASED TECHNICA, P205
   Sutton B, 1999, IEEE DES TEST COMPUT, V16, P28, DOI 10.1109/54.785826
   The White House  Office of the Press Secretary, 2013, OFF PRESS SECR PRES
   Verdecchia R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P11, DOI 10.1145/3194164.3194176
   Wen L, 2012, COMM COM INF SC, V290, P38
   Zemrowski KM, 2016, COMPUTER, V49, P86, DOI 10.1109/MC.2016.373
NR 73
TC 3
Z9 3
U1 2
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2020
VL 32
IS 3
SI SI
AR e2214
DI 10.1002/smr.2214
EA JUL 2019
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0FY
UT WOS:000478307900001
DA 2024-07-18
ER

PT J
AU Abdellatif, A
   Alshayeb, M
   Zahran, S
   Niazi, M
AF Abdellatif, Ahmad
   Alshayeb, Mohammad
   Zahran, Sami
   Niazi, Mahmood
TI A measurement framework for software product maturity assessment
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE product capability; product maturity assessment; product quality;
   software product
ID PROCESS IMPROVEMENT; QUALITY; MODEL
AB The need to ensure the quality of software is growing in importance on a daily basis due to the growing role of software in critical products and application areas, such as defense, aerospace, aviation, and medicine. To meet this need, many organizations use the Capability Maturity Model Integration process model to assess and improve software development processes. This paper proposes a framework for measuring software product maturity as an indicator of product quality. The proposed framework consists of two parts: a reference model and an assessment method. The reference model provides a platform for gathering product quality indicators as evidence of product capability, which reflects the product's maturity. The quality indicators are then used to assess the product maturity level. The assessment method utilizes standard steps for assessing product maturity that are reflected in the degree of the product's conformance with the relevant quality attributes defined and agreed upon by the product's stakeholders. The proposed framework enables measuring the quality of the product from the developers' and the users' perspective. The proposed maturity model and the assessment method can help software organizations and software clients ensure that software products meet the appropriate quality levels.
C1 [Abdellatif, Ahmad] Concordia Univ, Montreal, PQ, Canada.
   [Alshayeb, Mohammad; Niazi, Mahmood] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
   [Zahran, Sami] Intelligent Consultancy & Training ICT Ltd, Iver, Bucks, England.
C3 Concordia University - Canada; King Fahd University of Petroleum &
   Minerals
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
EM alshayeb@kfupm.edu.sa
RI Niazi, Mahmood/C-8873-2015; Alshayeb, Mohammad/B-5941-2015
OI Niazi, Mahmood/0000-0001-7318-7644; Alshayeb,
   Mohammad/0000-0001-7950-0099
FU King Abdul-Aziz City for Science and Technology [12-INF3012-04]
FX King Abdul-Aziz City for Science and Technology, Grant/Award Number:
   12-INF3012-04
CR Al-Qutaish RE, 2011, J RES PRACT INF TECH, V43, P307
   Alshayeb M., 2015, 10 INT C SOFTW ENG A
   Alvaro A, 2005, 10 WCOP 19 ECCOP
   Alvaro A, 2007, EUROMICRO CONF PROC, P83
   [Anonymous], 2011, STAND CMMI APPR METH
   [Anonymous], 1998, Software process improvement
   [Anonymous], 2018, CMMI DEV VERSION 2 0
   [Anonymous], 2011, 2000012011 ISOIEC
   [Anonymous], 2008, 12207 2008 SYSTEMS S
   [Anonymous], 2000, 6 SIGMA WAY GE MOTOR
   Babu C., 2008, ACM SIGSOFT Software Engineering Notes, V33, P4
   Bakota T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P243, DOI 10.1109/ICSM.2011.6080791
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Bureau C, 2017, N AM PROD CLASS SYST
   C Institute, 2014, CMMI OV
   Chemweno PK, 2012, 3 C MAINT PERF MEAS, P58
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Díaz-Ley M, 2010, ADV ENG SOFTW, V41, P1223, DOI 10.1016/j.advengsoft.2010.06.007
   DORLING A, 1993, SOFTWARE QUAL J, V2, P209, DOI 10.1007/BF00403764
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21, P146, DOI 10.1109/32.345830
   Esteves R, 1995, 5 INT C SOFTW QUAL A, P44, DOI [10.5281/zenodo.1217073, DOI 10.5281/ZENODO.1217073]
   Exchange Office, 2017, EXP IMP MED PLANT MO
   Franke D, 2012, INT CONF QUAL SOFTW, P154, DOI 10.1109/QSIC.2012.49
   GARVIN DA, 1984, SLOAN MANAGE REV, V26, P25
   GARZAS J, 1935, STAND, V35, P616, DOI DOI 10.1016/J.CSI.2013.04.002
   Genero M, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P195, DOI 10.1109/ISESE.2002.1166940
   Golden B., 2005, SUCCEEDING OPEN SOUR
   GS1, 2018, GLOB PROD CLASS
   Heitlager I, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P30, DOI 10.1109/QUATIC.2007.8
   Honda N., 2012, Ameri Jour Op Research, DOI [10.4236/ajor.2012.21004, DOI 10.4236/AJOR.2012.21004, DOI 10.4236/ajor.2012.21004]
   ISO, 1991, ISO 9126
   ISO, 1998, 15504 ISO IEC
   ISO/IEC, 2003, 15504 2 INF TECHN 2
   ISO/IEC, 2004, 15504 3 INF TECHN 3
   Jakobsen A.B., 1999, P 10 EUR C SOFTW COS
   Kula RG, 2012, ASIA PAC SOFWR ENG, P50, DOI 10.1109/APSEC.2012.105
   Letouzey Jean-Louis, 2010, Proceedings 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), P43, DOI 10.1109/VALID.2010.31
   Liu Xiao, 2013, 2013 Fifth International Conference on Computational and Information Sciences (ICCIS 2013), P1991, DOI 10.1109/ICCIS.2013.520
   Maibaum T, 2008, COMPUTER, V41, P91, DOI 10.1109/MC.2008.37
   McCall J., FACTORS SOFTWARE QUA, V1-3
   MORDALMANET K, 2009, C SOFTW MAINT 2009 I, P531
   Olsina L, 2009, P 8 INT WORKSH WEB O, V493, P3
   Panchenko O, 2009, IN C IND ENG ENG MAN, P1108, DOI 10.1109/ICIEEM.2009.5344433
   PAULK MC, 1995, SEI SERIES SOFTWARE
   Pitterman B, 2000, IEEE SOFTWARE, V17, P89, DOI 10.1109/52.854074
   Renault A, 2015, 15 INT C SOFTW PROC
   Rodriguez M., 2016, Software Quality Professionals, V18, P18
   Sarala S, 2010, INT CONF COMP SCI, P575, DOI 10.1109/ICCSIT.2010.5563667
   SEI CMU, 2015, CMMI PROC AR
   Sommerville I., 2010, SOFTWARE ENG
   STAPLES M, 2007, INFORM, V50, P605, DOI DOI 10.1016/J.INFSOF.2007.07.003
   Van Horenbeek A, 2014, OMEGA-INT J MANAGE S, V42, P33, DOI 10.1016/j.omega.2013.02.006
   van Steenbergen M, 2010, LECT NOTES COMPUT SC, V6105, P317, DOI 10.1007/978-3-642-13335-0_22
   van Steenbergen M, 2008, LECT NOTES BUS INF P, V12, P240
   Veenendaal E.V., 2012, Test Maturity Model Integration TMMi: Guidelines for Test Process Improvement
   Wagner S, 2012, PROC INT CONF SOFTW, P1133, DOI 10.1109/ICSE.2012.6227106
   WIPO, 2001, INT CLASS GOODS SERV
   Yamamura G, 1999, IEEE SOFTWARE, V16, P83, DOI 10.1109/52.795105
   Zahra Sobia, 2013, International Journal of Modern Education and Computer Science, V5, P36, DOI 10.5815/ijmecs.2013.04.05
NR 60
TC 7
Z9 7
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2019
VL 31
IS 4
AR e2151
DI 10.1002/smr.2151
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY2MS
UT WOS:000467957000004
DA 2024-07-18
ER

PT J
AU Idri, A
   Abnane, I
   Abran, A
AF Idri, Ali
   Abnane, Ibtissam
   Abran, Alain
TI Support vector regression-based imputation in analogy-based software
   development effort estimation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE analogy-based software development effort estimation; imputation;
   k-nearest neighbors; missing data; support vector machine
ID COST ESTIMATION; GENETIC ALGORITHM; FEATURE-SELECTION; PROJECT EFFORT;
   FUZZY ANALOGY; OPTIMIZATION; SYSTEMS; MODELS
AB Missing data (MD) is a widespread problem that can affect the ability to use data to construct effective software development effort estimation (SDEE) techniques. To deal with this challenge, several imputation techniques have been investigated in SDEE and k-nearest neighbors (KNN)-based imputation is still the most frequently used. To the best of our knowledge, no study has used support vector regression (SVR)-based imputation to construct accurate estimation techniques, in particular those based on analogy. This paper introduces a new imputation technique based on SVR for handling MD in two analogy-based SDEE techniques: classical analogy and fuzzy analogy. More specifically, we investigate whether the use of SVR instead of KNN in imputing MD improves the predictive performance of these two analogy-based techniques. A total of 1134 experiments were conducted involving seven datasets, SVR/KNN MD imputation techniques (KNN with Euclidean and Manhattan distances), three missingness mechanisms (missing completely at random, missing at random, non-ignorable missing), and MD percentages from 10% to 90%. The results suggest that the use of SVR imputation, rather than KNN imputation, may improve the prediction performance of both analogy-based techniques. Furthermore, we found that the impact of MD percentage upon effort prediction performance is reduced when using SVR rather than KNN. Moreover, fuzzy analogy generates better estimates in terms of the standardized accuracy measure than classical analogy regardless of the MD technique, the dataset used, the missingness mechanism, or the MD percentage.
C1 [Idri, Ali; Abnane, Ibtissam] Univ Mohammed 5, Software Project Management Res Team, ENSIAS, Rabat, Morocco.
   [Abran, Alain] Ecole Technol Super, Dept Software Engn, Montreal, PQ, Canada.
C3 Mohammed V University in Rabat; University of Quebec; Ecole de
   Technologie Superieure - Canada
RP Idri, A (corresponding author), Univ Mohammed 5, Software Project Management Res Team, ENSIAS, Rabat, Morocco.
EM ali.idri@um5.ac.ma
RI Abnane, Ibtissam/L-8837-2019; Abran, Alain/I-2493-2016
OI Abnane, Ibtissam/0000-0001-5248-5757; Abran, Alain/0000-0003-2670-9061;
   Idri, Ali/0000-0002-4586-4158
CR Abdi H., 2010, ENCY RES DESIGN, V169, P1
   Abnane, 2017, P S APPL COMP SAC 17, P1302, DOI [10.1145/3019612.3019905., DOI 10.1145/3019612.3019905]
   Amazal Fatima-Azzahra, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P252, DOI 10.1109/IWSM.Mensura.2014.31
   Amazal FA., 2014, 21 AS PAC SOFTW ENG, P1
   Amazal FA, 2014, INT J COMPUT INTELL, V13, DOI 10.1142/S1469026814500138
   [Anonymous], 2011, INT J BUS ADM
   [Anonymous], 2000, P 7 INT C FUZZ THEOR
   [Anonymous], 2010, INT REV COMPUT SOFTW
   Azzeh M, 2015, J SYST SOFTWARE, V103, P36, DOI 10.1016/j.jss.2015.01.028
   Azzeh M, 2010, EMPIR SOFTW ENG, V15, P60, DOI 10.1007/s10664-009-9113-0
   Bakir A, 2010, SOFTWARE QUAL J, V18, P57, DOI 10.1007/s11219-009-9081-z
   BEZDEK JC, 1980, IEEE T PATTERN ANAL, V2, P1, DOI 10.1109/TPAMI.1980.4766964
   Chen WG, 2012, PRZ ELEKTROTECHNICZN, V88, P172
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   El Emam K, 2000, IEEE T SOFTWARE ENG, V26, P541, DOI 10.1109/32.852742
   El Emam K, 2000, J SYST SOFTWARE, V51, P119, DOI 10.1016/S0164-1212(99)00117-X
   Guosheng Hu, 2010, Proceedings of the Third International Joint Conference on Computational Sciences and Optimization (CSO 2010), P417, DOI 10.1109/CSO.2010.40
   Herrera F, 2003, INT J INTELL SYST, V18, P309, DOI 10.1002/int.10091
   Hsu C.-W., 2003, PRACTICAL GUIDE SUPP
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   Idri A, 2002, ENG INTELL SYST ELEC, V10, P147
   Idri A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P21, DOI 10.1109/METRIC.2002.1011322
   Idri A., 2016, INT J INTELL SYST, V0, P1, DOI [10.1142/S1469026814500138, DOI 10.1142/S1469026814500138]
   Idri A., 2015, INT C SOFTW ENG ART, P1, DOI [DOI 10.1109/ICTA.2015, DOI 10.1109/SNPD.2015.7176280, 10.1109/SNPD.2015.7176280]
   Idri A., 2001, P 7 INT SOFTW METR S
   Idri A, 2008, LNCS, V4895
   Idri A, 2006, INFORM COMMUNICATION, V2, P1612, DOI DOI 10.1109/ICTTA.2006A.1684625
   Idri A, 2016, APPL SOFT COMPUT, V49, P990, DOI 10.1016/j.asoc.2016.08.012
   Idri A, 2016, J SYST SOFTWARE, V117, P595, DOI 10.1016/j.jss.2016.04.058
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   Idri A, 2012, WD SCI P COMP ENG, V7, P863
   Jingzhou Li, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P126
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Keerthi S.S., 1999, Improvements to Platt's SMO algorithm for svm classifier design
   Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968
   Keung J., 2009, 2009 AUST SOFTW ENG
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Li YF, 2009, EXPERT SYST APPL, V36, P5921, DOI 10.1016/j.eswa.2008.07.062
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Lin SW, 2008, EXPERT SYST APPL, V35, P1817, DOI 10.1016/j.eswa.2007.08.088
   Little RJ, 1987, STAT ANAL MISSING DA
   LITTLE RJA, 1989, SOCIOL METHOD RES, V18, P292, DOI 10.1177/0049124189018002004
   Liu Q, 2011, 2011 INTERNATIONAL CONFERENCE ON ELECTRONICS, COMMUNICATIONS AND CONTROL (ICECC), P4187, DOI 10.1109/ICECC.2011.6066775
   Lokan C, 2001, IEEE SOFTWARE, V18, P26, DOI 10.1109/52.951491
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Molenberghs G., 2007, Missing Data in Clinical Studies, DOI DOI 10.1002/9780470510445
   Mühlenbein H, 1993, EVOL COMPUT, V1, P25, DOI 10.1162/evco.1993.1.1.25
   Oliveira ALI, 2006, NEUROCOMPUTING, V69, P1749, DOI 10.1016/j.neucom.2005.12.119
   Osuna E, 1997, PROC CVPR IEEE, P130, DOI 10.1109/CVPR.1997.609310
   Platt John C, 1998, TECH REP
   RUBIN DB, 1976, BIOMETRIKA, V63, P581, DOI 10.2307/2335739
   Rubin DonaldB., 1987, MULTIPLE IMPUTATIONS
   Scholkopf B., 2002, Encyclopedia of Biostatistics
   Sentas P, 2006, J SYST SOFTWARE, V79, P404, DOI 10.1016/j.jss.2005.02.026
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sheskin D.J., 1997, HDB PARAMETRIC NONPA
   Shevade SK, 2000, IEEE T NEURAL NETWOR, V11, P1188, DOI 10.1109/72.870050
   Shi YH, 1998, IEEE C EVOL COMPUTAT, P69, DOI 10.1109/ICEC.1998.699146
   Sicilia MA, 2005, KYBERNETIKA, V41, P249
   Smola AJ, 2004, STAT COMPUT, V14, P199, DOI 10.1023/B:STCO.0000035301.49549.88
   Song QB, 2008, J SYST SOFTWARE, V81, P2361, DOI 10.1016/j.jss.2008.05.008
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   Vapnik V., 1999, NATURE STAT LEARNING
   Vapnik VN, 1999, IEEE T NEURAL NETWOR, V10, P988, DOI 10.1109/72.788640
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   XIE XLL, 1991, IEEE T PATTERN ANAL, V13, P841, DOI 10.1109/34.85677
   Yenduri S., 2005, EMPIRICAL STUDY IMPU
   Zong Q, 2006, WCICA 2006: SIXTH WORLD CONGRESS ON INTELLIGENT CONTROL AND AUTOMATION, VOLS 1-12, CONFERENCE PROCEEDINGS, P2811
NR 73
TC 12
Z9 12
U1 1
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2018
VL 30
IS 12
AR e2114
DI 10.1002/smr.2114
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE1JU
UT WOS:000453027700003
DA 2024-07-18
ER

PT J
AU Pandita, R
   Jetley, R
   Sudarsan, S
   Menzies, T
   Williams, L
AF Pandita, Rahul
   Jetley, Raoul
   Sudarsan, Sithu
   Menzies, Timothy
   Williams, Laurie
TI TMAP: Discovering relevant API methods through text mining of API
   documentation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT 15th IEEE International Working Conference on Source Code Analysis and
   Manipulation (SCAM)
CY SEP 27-28, 2015
CL Bremen, GERMANY
SP IEEE, IEEE Comp Soc, Tech Council Software Engn, Gramma Tech Inc, Microsoft Res
DE API documents; API mappings; text mining
AB Developers often migrate their applications to support various platform/programming-language application programming interfaces (APIs) to retain existing users and to attract new users. To migrate an application written using 1 API (source) to another API (target), a developer must know how the methods in the source API map to the methods in the target API. Given that a typical platform or language exposes a large number of API methods, manually discovering API mappings is prohibitively resource-intensive and may be error prone. The goal of this research is to support software developers in migrating an application from a source API to a target API by automatically discovering relevant method mappings across APIs using text mining on the natural language API method descriptions. This paper proposes text mining based approach (TMAP) to discover relevant API mappings. To evaluate our approach, we used TMAP to discover API mappings for 15 classes across (1) Java and C# API; and (2) Java ME and Android API. We compared the discovered mappings with state-of-the-art source code analysis-based approaches: Rosetta and StaMiner. Our results indicate that TMAP on average found relevant mappings for 56% and 57% more methods compared to the Rosetta and the StaMiner approaches, respectively.
C1 [Pandita, Rahul; Menzies, Timothy; Williams, Laurie] North Carolina State Univ, 890 Oval Dr Campus Box 8206,3228 EB 2, Raleigh, NC 27695 USA.
   [Jetley, Raoul; Sudarsan, Sithu] ABB Corp Res, Bangalore, Karnataka, India.
C3 North Carolina State University; ABB
RP Pandita, R (corresponding author), North Carolina State Univ, 890 Oval Dr Campus Box 8206,3228 EB 2, Raleigh, NC 27695 USA.
EM rpandit@ncsu.edu
OI Menzies, Tim/0000-0002-5040-3196
FU USA National Security Agency Science of Security Lablet
FX USA National Security Agency Science of Security Lablet
CR [Anonymous], 2007, P IEEEACM INT C AUTO, DOI DOI 10.1145/1321631.1321646
   [Anonymous], 2010, P 32 ACMIEEE INT C S
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   [Anonymous], Mallet: A machine learning for language toolkit
   [Anonymous], 2010, P 32 ACMIEEE INT C S, DOI DOI 10.1145/1806799.1806831
   Arun R, 2010, LECT NOTES ARTIF INT, V6118, P391
   Binkley D., 2014, 22nd International Conference on Program Comprehension (Hyderabad, India, 2014), P26, DOI [DOI 10.1145/2597008.2597150, 10.1145/2597008.2597150]
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bloch J., 2006, 21 ACM SIGPLAN S OBJ, P506, DOI DOI 10.1145/1176617.1176622
   Brown P. F., 1993, Computational Linguistics, V19, P263
   Chatterjee S, 2009, LECT NOTES COMPUT SC, V5503, P385
   DEKEL U, 2009, ICSE 09, P320
   El-Ramly M., 2006, P AICCSA, P1037
   Frakes WB., 1992, Space, V14, P10
   GOKHALE A, 2013, ICSE, P82
   Hassan AE, 2005, INFORM SOFTWARE TECH, V47, P521, DOI 10.1016/j.infsof.2004.10.002
   Kim J, 2010, AAAI CONF ARTIF INTE, P1358
   Mossienko M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P40, DOI 10.1109/CSMR.2003.1192409
   Nguyen A.T., 2014, P 29 ACM IEEE INT C, P457, DOI [10.1145/2642937.2643010, DOI 10.1145/2642937.2643010]
   NGUYEN AT, 2014, MIGRATING CODE WITH, P544, DOI DOI 10.1145/2591062.2591072
   Pandita R, 2016, P 32 IEEE I IN PRESS
   PANDITA R, 2015, DISCOVERING LIKELY M, P231
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   PANICHELLA A, 2013, HOW TO EFFECTIVELY U, P522
   REISS SP, 2009, SOFTW ENG 2009 ICSE, P243
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Singhal A., 2001, IEEE DATA ENG B, V24, P35
   SRIDHARA G, 2011, GENERATING PARAMETER, P71, DOI DOI 10.1109/ICPC.2011.28
   Treude C, 2015, IEEE T SOFTWARE ENG, V41, P565, DOI 10.1109/TSE.2014.2387172
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   WATERS RC, 1988, IEEE T SOFTWARE ENG, V14, P1207, DOI 10.1109/32.7629
   Yang JQ, 2014, EMPIR SOFTW ENG, V19, P1856, DOI 10.1007/s10664-013-9264-x
   Zheng W., 2011, P 19 ACM SIGSOFT S 1, P480
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
   ZHOU H, 2008, DEVELOPING APPLICATI, P225, DOI DOI 10.1109/QSIC.2008.31
NR 35
TC 6
Z9 8
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2017
VL 29
IS 12
SI SI
AR e1845
DI 10.1002/smr.1845
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA FQ1BL
UT WOS:000418091000002
DA 2024-07-18
ER

PT J
AU Hebig, R
   Derehag, J
AF Hebig, Regina
   Derehag, Jesper
TI The changing balance of technology and process: A case study on a
   combined setting of model-driven development and classical C coding
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT IEEE/ACM International Conference on Software and System Processes
   (ICSSP)
CY MAY 14-15, 2016
CL Austin, TX
SP Assoc Comp Machinery, IEEE Comp Soc, IEEE, Univ Texas Austin, Ctr Adv Res Software Engn, Special Interest Grp Software Engn, ISCAS, ISPA
DE case study; development technologies; empirical investigation; software
   process
AB The increasing flexibility in industry leads to an ecosystem of change, affecting the balance of processes and technology as well as the developers who have to cope with the change. Furthermore, the change itself might impact the ability to use quantitative methods to learn from previous experience. The goal of this study is to better understand the ecosystem of mutual impacts and changes of process and technologies as well as how developers perceive a technology setting and deal with its change. Therefore, we conducted a case study at Ericsson, performing a series of interviews among 6 employees (senior developers and architects). We identified a time line of changes that happened over 7years. A set of observations about the relation between processes and tooling, and observations about developer's perceptions of the technology settings, and their strategy to deal with these changing technology settings. We discuss how the observed change impacts the ability to perform quantitative evaluations of technology and processes. The findings show that a bad choice of technologies can lead to unexpected impact on team dynamics. Furthermore, change happens so regular that it needs to be considered when collecting data for a quantitative evaluation of, eg, productivity.
C1 [Hebig, Regina] Chalmers Univ Technol, Gothenburg, Sweden.
   [Hebig, Regina] Univ Gothenburg, Gothenburg, Sweden.
   [Derehag, Jesper] Ericsson AB, Gothenburg, Sweden.
C3 Chalmers University of Technology; University of Gothenburg; Ericsson
RP Hebig, R (corresponding author), Chalmers Univ Technol, Comp Sci & Engn Dept, Gothenburg, Sweden.
EM hebig@chalmers.se
RI Hebig, Regina/B-5284-2015
OI Hebig, Regina/0000-0002-1459-2081
CR [Anonymous], 2014, P 8 ACMIEEE INT S EM
   Aranda Jorge, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P692, DOI 10.1007/978-3-642-33666-9_44
   Asadi M, 2008, LECT NOTES COMPUT SC, V5095, P419, DOI 10.1007/978-3-540-69100-6_30
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   Durisic D, 2014, EUROMICRO CONF PROC, P141, DOI 10.1109/SEAA.2014.21
   Forward A., 2008, Proc. 2008 Int. Work. onModels Softw. Eng, P27, DOI DOI 10.1145/1370731.1370738
   Hebig R., 2014, P 2014 INT C SOFTWAR, P164, DOI [10.1145/2600821.2600846, DOI 10.1145/2600821.2600846]
   Hebig R, 2015, SOFTWARE SYSTEMS MOD, P1
   Hebig R, 2016, MANAGING SO IN PRESS, P255
   Heijstek W, 2010, EUROMICRO CONF PROC, P333, DOI 10.1109/SEAA.2010.63
   Herrmannsdoerfer M, 2008, LECT NOTES COMPUT SC, V5301, P645, DOI 10.1007/978-3-540-87875-9_45
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Kalus G., 2013, Proceedings of the 2013 International Conference on Software and System Process, P171
   Karakaya M., 2009, Distributed Smart Cameras, P1, DOI DOI 10.1061/41036(342)342
   Kuhn Adrian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P352, DOI 10.1007/978-3-642-33666-9_23
   Kuhrmann M., 2014, INT C SOFTW SYST PRO, P99
   Kuhrmann M., 2016, PEERJ COMPUT SCI, V2, P1
   Kulkarni V, 2011, LECT NOTES COMPUT SC, V6981, P578, DOI 10.1007/978-3-642-24485-8_42
   Loniewski G, 2011, 6 INT C SOFTW ENG AD, P570
   Martínez-Ruiz T, 2012, SOFTWARE QUAL J, V20, P229, DOI 10.1007/s11219-011-9147-6
   MOHAGHEGHI P, 2008, EUR C MOD DRIV ARCH, V5095, P432
   Nikitina N., 2011, International Conference on Software Engineering, P159
   Ocampo Alexis, 2009, Software Process: Improvement and Practice, V14, P85, DOI 10.1002/spip.387
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
NR 30
TC 2
Z9 2
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2017
VL 29
IS 11
AR e1863
DI 10.1002/smr.1863
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA FM2UV
UT WOS:000414857100004
DA 2024-07-18
ER

PT J
AU Martini, A
   Bosch, J
AF Martini, Antonio
   Bosch, Jan
TI On the interest of architectural technical debt: Uncovering the
   contagious debt phenomenon
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile software development; architectural technical debt; effort;
   multiple case study; qualitative model; sociotechnical phenomena
AB A known problem in large software companies is to balance the prioritization of short-term and long-term business goals. As an example, architecture suboptimality (Architectural Technical Debt), incurred to deliver fast, might hinder future feature development. However, some technical debt generates more interest to be paid than other. We conducted a multi-phase, multiple-case embedded case study comprehending 9 sites at 6 large international software companies. We have investigated which architectural technical debt items generate more interest , how the interest occurs during software development and which costly extra-activities are triggered as a result. We presented a taxonomy of the most dangerous items identified during the qualitative investigation and a model of their effects that can be used for prioritization, for further investigation and as a quality model for extracting more precise and context-specific metrics. We found that some architectural technical debt items are contagious, causing the interest to be not only fixed, but potentially compound, which leads to the hidden growth of interest (possibly exponential). We found important factors to be monitored to refactor the debt before it becomes too costly. Instances of these phenomena need to be identified and stopped before the development reaches a crises.
C1 [Martini, Antonio; Bosch, Jan] Chalmers Univ Technol, Gothenburg, Sweden.
C3 Chalmers University of Technology
RP Martini, A (corresponding author), Chalmers Univ Technol, Gothenburg, Sweden.
EM jan.bosch@chalmers.se
RI Yalvaç, Dilara/D-4093-2018; Martini, Antonio/AAA-2683-2019
OI Martini, Antonio/0000-0002-0669-8687
CR Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], SIGPLAN OOPS MESS, DOI [10.1145/157710.157715, DOI 10.1145/157710.157715]
   Arcelli FF, 2015, RA515 POZ U
   Arvanitou E.-M., 2015, Empirical Software Engineering and Measurement (ESEM), 2015 ACM/IEEE International Symposium on, P1
   Avgeriou P, 2016, IEEE SOFTWARE, V33, P66, DOI 10.1109/MS.2016.13
   Besker T, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P189, DOI 10.1109/SEAA.2016.42
   Dubois A, 2002, J BUS RES, V55, P553, DOI 10.1016/S0148-2963(00)00195-8
   Falessi D, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P41, DOI 10.1109/MTD.2015.7332623
   Fowler Martin, 2009, Technical debt quadrant, 2009
   Guo Y., 2011, 2 WORKSH MAN TECHN D, P31, DOI [10.1145/1985362.1985370, DOI 10.1145/1985362.1985370]
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Mamun MAA, 2014, P 6 INT WORKSH MAN T
   Martini A., 2016, SEAA EUR 2016
   Martini A, 2015, WICSA IN PRESS
   Martini A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P31, DOI 10.1145/2889160.2889224
   Martini A, 2015, INFORM SOFTWARE TECH, V67, P237, DOI 10.1016/j.infsof.2015.07.005
   Martini A, 2014, EUROMICRO CONF PROC, P85, DOI 10.1109/SEAA.2014.65
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schmid Klaus, 2013, QOSA 13 P 9 INT ACMS, P153, DOI [DOI 10.1145/2465478.2465492, 10.1145/2465478.2465492]
   Seaman C., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P45, DOI 10.1109/MTD.2012.6225999
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Strauss A. L., 1997, Grounded Theory in Practice
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Yin R.K., 2014, Applications of case study research, V2nd
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
   Zazworka N., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, DOI DOI 10.1145/2460999.2461005.ASSOCIATIONFORCOMPUTINGMACHINERY
NR 30
TC 24
Z9 26
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2017
VL 29
IS 10
AR e1877
DI 10.1002/smr.1877
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ5RT
UT WOS:000412810900001
DA 2024-07-18
ER

PT J
AU Tufano, M
   Palomba, F
   Bavota, G
   Di Penta, M
   Oliveto, R
   De Lucia, A
   Poshyvanyk, D
AF Tufano, Michele
   Palomba, Fabio
   Bavota, Gabriele
   Di Penta, Massimiliano
   Oliveto, Rocco
   De Lucia, Andrea
   Poshyvanyk, Denys
TI There and back again: Can you compile that snapshot?
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE broken snapshots; empirical studies; mining software repositories;
   software quality
ID APACHE
AB A broken snapshot represents a snapshot from a project's change history that cannot be compiled. Broken snapshots can have significant implications for researchers, as they could hinder any analysis of the past project history that requires code to be compiled. Noticeably, while some broken snapshots may be observable in change history repositories (e.g., no longer available dependencies), some of them may not necessarily happen during the actual development. In this paper, we systematically study the compilability of broken snapshots in 219395 snapshots belonging to 100 Java projects from the Apache Software Foundation, all relying on Maven as an automated build tool. We investigated broken snapshots from 2 different perspectives: (1) how frequently they happen and (2) likely causes behind them. The empirical results indicate that broken snapshots occur in most (96%) of the projects we studied and that they are mainly due to problems related to the resolution of dependencies. On average, only 38% of the change history of the analyzed systems is currently successfully compilable.
C1 [Tufano, Michele; Poshyvanyk, Denys] Coll William & Mary, Williamsburg, VA 23185 USA.
   [Palomba, Fabio; De Lucia, Andrea] Univ Salerno, Fisciano, Italy.
   [Bavota, Gabriele] USI, Lugano, Switzerland.
   [Di Penta, Massimiliano] Univ Sannio, Benevento, Italy.
   [Oliveto, Rocco] Univ Molise, Campobasso, Italy.
C3 William & Mary; University of Salerno; University of Sannio; University
   of Molise
RP Tufano, M (corresponding author), Coll William & Mary, Williamsburg, VA 23185 USA.
EM mtufano@email.wm.edu
RI Di Penta, Massimiliano/AAF-9656-2021; De Lucia, Andrea/AAG-6781-2020
OI Palomba, Fabio/0000-0001-9337-5116; Poshyvanyk,
   Denys/0000-0002-5626-7586; BAVOTA, Gabriele/0000-0002-2216-3148; De
   Lucia, Andrea/0000-0002-4238-1425
CR [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   Bakota T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P931
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota G, 2014, EMPIR SOFTW ENG, V20, P1
   Bettenburg N, 2012, SCI COMPUT PROGRAM, V77, P760, DOI 10.1016/j.scico.2010.11.010
   Buse RPL, 2012, PROC INT CONF SOFTW, P987, DOI 10.1109/ICSE.2012.6227122
   Cataldo M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P161, DOI 10.1145/1985793.1985816
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Ferenc R, 2004, PROC IEEE INT CONF S, P513, DOI 10.1109/ICSM.2004.1357858
   Ferenc R, 2014, IEEE INT WORK C SO, P77, DOI 10.1109/SCAM.2014.31
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Franke N, 2003, RES POLICY, V32, P1199, DOI 10.1016/S0048-7333(03)00049-0
   Hassan AE, 2006, IEEE INT CONF AUTOM, P189
   Kerzazi N, 2014, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2014.26
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kim S., 2006, Proceedings of the 2006 International Workshop on Mining Software Repositories, P40
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   McIntosh S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P145, DOI 10.1145/2591062.2591181
   McIntosh S, 2015, EMPIR SOFTW ENG, V20, P1587, DOI 10.1007/s10664-014-9324-x
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Phillips S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P735, DOI 10.1145/2568225.2568274
   Phillips Shaun, 2012, P ACM 2012 C COMPUTE, P1371, DOI DOI 10.1145/2145204.2145408
   Qiu D., 2013, P 2013 9 JOINT M FDN, P125
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Saha RK, 2010, IEEE INT WORK C SO, P87, DOI 10.1109/SCAM.2010.32
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Sheoran Jyoti, 2014, P 11 WORK C MIN SOFT, P336, DOI DOI 10.1145/2597073.2597114
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Spinellis D, 2005, IEEE SOFTWARE, V22, P9, DOI 10.1109/MS.2005.111
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zimmermann T, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P73, DOI 10.1109/IWPSE.2003.1231213
   Zimmermann T., 2006, P 2006 INT WORKSHOP, P72, DOI DOI 10.1145/1137983.1138001
NR 43
TC 47
Z9 56
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2017
VL 29
IS 4
DI 10.1002/smr.1838
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ER3FC
UT WOS:000398680400004
DA 2024-07-18
ER

PT J
AU Lema, L
   Calvo-Manzano, JA
   Colomo-Palacios, R
   Arcilla, M
AF Lema, Lohana
   Calvo-Manzano, Jose-Antonio
   Colomo-Palacios, Ricardo
   Arcilla, Magdalena
TI ITIL in small to medium-sized enterprises software companies: towards an
   implementation sequence
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE ITIL; SMEs; implementation sequence; systematic review; questionnaire;
   survey; incident management process; ITSM
ID SERVICE MANAGEMENT; SUCCESS FACTORS; DECISION
AB Information technology infrastructure library (ITIL) framework is a set of comprehensive publications providing descriptive guidance on the management of IT processes, functions, roles, and responsibilities related to IT service management. However, and in spite of its repercussion and popularity, the ITIL framework does not suggest an implementation order for their processes. This decision constitutes the first challenge that an organization must overcome when starting an ITIL implementation, the enterprise size being one of the leading factors to be considered in the decision-making process. In the scenario of small and medium enterprises dedicated to producing software, this paper is devoted to investigating which processes are the most selected to start the implementation of ITIL in these organizations. This is performed by means of two different instruments, first, a systematic literature review on the topic and second, a survey conducted among experts and practitioners. Results show in both cases that incident management process should be the first process when implementing ITIL framework. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Lema, Lohana; Calvo-Manzano, Jose-Antonio] Univ Politecn Madrid, Madrid, Spain.
   [Colomo-Palacios, Ricardo] Ostfold Univ Coll, Halden, Norway.
   [Arcilla, Magdalena] Univ Nacl Educ Distancia, E-28040 Madrid, Spain.
C3 Universidad Politecnica de Madrid; Ostfold University College;
   Universidad Nacional de Educacion a Distancia (UNED)
RP Colomo-Palacios, R (corresponding author), Ostfold Univ Coll, Halden, Norway.
EM ricardo.colomo-palacios@hiof.no
RI Calvo-Manzano, Jose A./K-9426-2013; Colomo-Palacios, Ricardo/E-5139-2010
OI Calvo-Manzano, Jose A./0000-0002-2864-2203; Colomo-Palacios,
   Ricardo/0000-0002-1555-9726; Lema, Lohana/0000-0003-4199-2942
CR [Anonymous], 2011, AM J EC BUS ADM, V3, P636, DOI [10.3844/ajebasp.2011.636.644, DOI 10.3844/AJEBASP.2011.636.644]
   [Anonymous], ITSM PROCESS ASSESSM
   Cater-Steel A., 2009, ACIS 2009 P
   Clarke P, 2012, J SYST SOFTWARE, V85, P2356, DOI 10.1016/j.jss.2012.05.024
   Colomo-Palacios R, 2012, J UNIVERS COMPUT SCI, V18, P1544
   Colomo-Palacios R, 2012, J GLOB INF TECH MAN, V15, P30, DOI 10.1080/1097198X.2012.10845617
   Cortina S, 2014, J SOFTW-EVOL PROC, V26, P799, DOI 10.1002/smr.1667
   Galup SD, 2009, COMMUN ACM, V52, P124, DOI 10.1145/1506409.1506439
   Hochstein A., 2005, ECIS 2005 P, P98
   Iden J, 2015, INF SYST E-BUS MANAG, V13, P527, DOI 10.1007/s10257-014-0253-4
   Iden J, 2013, INT J INFORM MANAGE, V33, P512, DOI 10.1016/j.ijinfomgt.2013.01.004
   Ihme T, 2014, EMPIR SOFTW ENG, V19, P1144, DOI 10.1007/s10664-013-9253-0
   Kitchenham B., 2004, Procedures for performing systematic literature reviews, P33
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Mesquida AL, 2012, INFORM SOFTWARE TECH, V54, P239, DOI 10.1016/j.infsof.2011.11.002
   Lucio-Nieto T, 2012, INT J INFORM MANAGE, V32, P589, DOI 10.1016/j.ijinfomgt.2012.08.004
   Marrone M, 2014, COMMUN ASSOC INF SYS, V34, P865
   Marrone M, 2011, INF SYST E-BUS MANAG, V9, P363, DOI 10.1007/s10257-010-0131-7
   Marrone M, 2011, BUS INFORM SYST ENG+, V3, P5, DOI 10.1007/s12599-010-0141-5
   McNaughton B, 2010, INFORM MANAGE-AMSTER, V47, P219, DOI 10.1016/j.im.2010.02.003
   Mora M, 2014, INT J INF TECHNOL SY, V7, P83, DOI 10.4018/ijitsa.2014070105
   Orta E, 2014, DECIS SUPPORT SYST, V66, P36, DOI 10.1016/j.dss.2014.06.002
   Pollard C, 2009, INFORM SYST MANAGE, V26, P164, DOI 10.1080/10580530902797540
   Ravasan AZ, 2014, INT J INF TECHNOL SY, V7, P41, DOI 10.4018/ijitsa.2014070103
   Richardson I, 2007, IEEE SOFTWARE, V24, P18, DOI 10.1109/MS.2007.12
   Schmidt RC, 1997, DECISION SCI, V28, P763, DOI 10.1111/j.1540-5915.1997.tb01330.x
   Schmidtbauer P, 2013, LECT NOTES BUS INF P, V160, P124
   Soto-Acosta P, 2014, KNOWL MAN RES PRACT, V12, P103, DOI 10.1057/kmrp.2013.31
   Soto-Acosta P, 2010, INFORM SYST MANAGE, V27, P274, DOI 10.1080/10580530.2010.493847
   Stantcheva L, 2014, INT J HUM CAP INF TE, V5, P79, DOI 10.4018/ijhcitp.2014100105
   Sulayman M, 2012, INFORM SOFTWARE TECH, V54, P479, DOI 10.1016/j.infsof.2011.12.007
   Suominen M, 2014, SOFTWARE QUAL J, V22, P579, DOI 10.1007/s11219-013-9201-7
   Trusson CR, 2014, INFORM SYST J, V24, P347, DOI 10.1111/isj.12025
   Valiente MC, 2012, IEEE T SYST MAN CY C, V42, P61, DOI 10.1109/TSMCC.2011.2132717
   Vlietland J, 2015, J SOFTW-EVOL PROC, V27, P73, DOI 10.1002/smr.1697
   Vlietland J, 2014, J SOFTW-EVOL PROC, V26, P1106, DOI 10.1002/smr.1649
   Wang P, 2010, MIS QUART, V34, P63
NR 37
TC 22
Z9 25
U1 0
U2 66
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2015
VL 27
IS 8
SI SI
BP 528
EP 538
DI 10.1002/smr.1727
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CP8UU
UT WOS:000360170900003
DA 2024-07-18
ER

PT J
AU Eveleens, L
   Kampstra, P
   Verhoef, C
AF Eveleens, Laurenz
   Kampstra, Peter
   Verhoef, Chris
TI Quantifying fair payment after outsourcing - a case study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE outsourcing; time to market; simulation; software development process;
   development process redesign; information technology metrics
ID SOFTWARE PROCESS SIMULATION
AB After outsourcing, issues can arise between the outsourcing organization and their third parties about fair payment. In a ceteris paribus situation, fair payment can be determined based on the differences made by the third parties. However, when information technology development is (partly) outsourced to third parties, often, not only does the supplier change, but the development process is also changed. This change of development process alone influences important software metrics, such as time to market, productivity, costs, size, and quality, exactly the metrics that are often used to establish payments. Quantifying the influence of the development process redesign is therefore vital to make a fair assessment of the changes truly caused by the supplier, and thus realistic payment. In this paper, the influence of the change in the development process on important key performance indicators is quantified using simulation techniques. We use discrete event simulation to analyze the effect on time to market. The techniques we use are illustrated and validated by applying them in a real-world situation. The techniques can be used to estimate the influence of the business process change both before outsourcing and after the outsourcing has been decided. Our case study helped the organization in their outsourcing by adapting its proposed development process so that the balance between a more formal process and time to market became more in line with their demands. Although the specific numbers will be different per company, other organizations can apply the general principle. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Eveleens, Laurenz; Kampstra, Peter; Verhoef, Chris] Vrije Univ Amsterdam, Dept Comp Sci, NL-1081 HV Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam
RP Kampstra, P (corresponding author), Vrije Univ Amsterdam, Dept Comp Sci, De Boelelaan 1081a, NL-1081 HV Amsterdam, Netherlands.
EM pkampst@few.vu.nl
FU Dutch Joint Academic and Commercial Quality Research & Development
   (Jacquard) program on Software Engineering Research [638.004.405,
   638.003.611]
FX This research received partial support from the Dutch Joint Academic and
   Commercial Quality Research & Development (Jacquard) program on Software
   Engineering Research via contract 638.004.405 Equity: Exploring
   Quantifiable Information Technology Yields and contract 638.003.611
   Symbiosis: Synergy of managing business-IT-alignment, IT-sourcing and
   offshoring success in society. We are also grateful to the organizations
   that provided us with their data.
CR Ali N, 2012, 38 EUROMICRO C SOFTW, P327
   [Anonymous], 2008, R LANG ENV STAT COMP
   Beanplot Kampstra P., 2008, J STAT SOFTWARE CODE, V28, P1, DOI 10.18637/jss.v028.c01
   Birkholzer T, 2012, 2012 INT C SOFTW SYS, P223
   Boehm B.W., 1981, SOFTWARE ENG EC
   Box GE, 1976, J AM STAT ASSOC, V71, P791
   Budzier A., 2013, P IRNOP INT RES NETW, P11
   Chambers J, 1983, GRAPHICAL METHODS DA
   Conover W, 1980, PROBABILITY MATH STA
   Csikszentmihalyi M, 1996, CREATIVITY FLOW PSYC
   Decisioneering Inc. Denver CO, 1993, CRYSTAL BALL COMPUTE
   DeMarco T, 1987, PEOPLEWARE PRODUCTIV
   Gantt H, 1919, ORG FOR WORK
   Gopal A., 2002, Communications of the ACM, V45, P193
   Ibanez F, 2009, PASTECS PACKAGE ANAL, P3
   Jacobson I, 1998, UNIFIED SOFTWARE DEV
   Kampstra P, 2009, RELIABILITY FUNCTION
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Kelton D, 2003, MCGRAW HILL SERIES I
   Malhotra Y, 1998, IEEE ENG MANAGEMENT, V3, P27
   METROPOLIS N, 1949, J AM STAT ASSOC, V44, P335, DOI 10.2307/2280232
   Moe NB, 2008, SOFTWARE PROCESS IMP, V13, P217
   Plunkett Research, 2014, OUTS OFFSH IND MARK
   Raffo DM, 1999, J SYST SOFTWARE, V46, P163, DOI 10.1016/S0164-1212(99)00009-6
   Rathe A, 1961, GANTT MANAGEMENT GUI
   Rivera J, 2013, GARTNER SAYS WORLDWI
   Sims O, 1994, BUSINESS OBJECTS DEL
   Stapleton J, 2003, DSDM BUSINESS FOCUSE
   Stapleton J, 1997, DSDM DYNAMIC SYSTEM
   Stapleton J, 1997, DSDM DYNAMIC SYSTEMS
   *STATSOFT INC, 2003, EL STAT TXB
   Sutton S, 2012, SOFTW SYST PROC ICSS, P221
   Venabless WN, 2002, MODERN APPL STAT S
   Verhoef C, 2007, SCI COMPUT PROGRAM, V67, P247, DOI 10.1016/j.scico.2007.01.010
   Verhoef C, 2002, SCI COMPUT PROGRAM, V45, P1, DOI 10.1016/S0167-6423(02)00106-5
   Verhoef C, 2004, QUANTIFYING SOFTWARE
   Zhang H, 2008, LECT NOTES COMPUT SC, V5007, P345, DOI 10.1007/978-3-540-79588-9_30
   Zhang H, 2008, ASIA PAC SOFWR ENG, P59, DOI 10.1109/APSEC.2008.50
NR 38
TC 1
Z9 2
U1 0
U2 13
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2015
VL 27
IS 3
BP 147
EP 165
DI 10.1002/smr.1700
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CE8LH
UT WOS:000352093300001
DA 2024-07-18
ER

PT J
AU Kaynak, O
   Karagöz, NA
AF Kaynak, Onur
   Karagoz, N. Alpay
TI Experience report: implementation of a multi-standard compliant process
   improvement program
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE process improvement; process management system; ISO; IEC 15504; SPICE;
   integrated process improvement program; experience report
AB This paper explains the experience of an information technology (IT) solutions provider company about the integrated management of the (ISO)/International Electrotechnical Commission (IEC) 15504 based process assets library with other related IT standards, which are ISO/IEC 27001, ISO/IEC 20000, and ISO 9001:2008. In order to establish and execute an efficient and effective infrastructure, a companywide process improvement program has been conducted. The lessons that are learned from the execution of this process improvement program, key implementation, practices and major challenges are shared in this paper. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Kaynak, Onur; Karagoz, N. Alpay] INNOVA Informat Technol, Ankara, Turkey.
C3 Innova
RP Kaynak, O (corresponding author), INNOVA Informat Technol, Ankara, Turkey.
EM okaynak@innova.com.tr
OI KARAGOZ, NURI ALPAY/0000-0003-0705-3765; Kaynak,
   Onur/0000-0003-3977-0427
CR [Anonymous], 270012006 ISOIEC
   [Anonymous], 90012008 ISO
   August-Wilhelm S, 2000, ARIS BUSINESS PROCES
   James R., 1998, UNIFIED MODELING LAN
   Jan Pries-Heje, 2010, SPI MANIFESTO
   TS, 200002010 ISOIEC
   TS, 155042007 ISOIEC
   Watts H. S., 1989, MANAGING SOFTWARE PR
NR 8
TC 0
Z9 1
U1 0
U2 13
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2014
VL 26
IS 5
SI SI
BP 488
EP 495
DI 10.1002/smr.1610
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH2SF
UT WOS:000335970700004
DA 2024-07-18
ER

PT J
AU Alegría, JAH
   Bastarrica, MC
   Bergel, A
AF Hurtado Alegria, Julio A.
   Cecilia Bastarrica, Maria
   Bergel, Alexandre
TI AVISPA: a tool for analyzing software process models
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software visualization; software process verification; software process
   analysis
AB Defining and formalizing the software development process is a common means for improving it. Software process modeling is often a challenging and expensive endeavor, because a well specified process may still include inefficiencies that are hardly detected before enacting it. Thus, assessing process quality is a relevant concern to improve several aspects such as conceptual integrity, correctness, usability, maintainability, and performance, among others. This paper describes Avispa, a graphical tool that allows analyzing the quality of SPEM 2.0 software processes models. Avispa identifies a series of error patterns and highlights them in different blueprints. A detailed description of the internals of Avispa is provided to show both its structure and its extensibility mechanisms. We also present an interactive mechanism to define new analysis scripts and to implement new patterns and blueprints. This paper illustrates the application of Avispa in an industrial case study where process engineers are assisted to analyze the quality of their process. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Hurtado Alegria, Julio A.; Cecilia Bastarrica, Maria; Bergel, Alexandre] Univ Chile, Dept Comp Sci DCC, Santiago, Chile.
   [Hurtado Alegria, Julio A.] Univ Cauca, IDIS Res Grp, Popayan, Colombia.
C3 Universidad de Chile; Universidad del Cauca
RP Alegría, JAH (corresponding author), Univ Cauca, IDIS Res Grp, Popayan, Colombia.
EM ahurtado@unicauca.edu.co
RI Bastarrica, Maria Cecilia/AGN-6617-2022; Bergel, Alexandre/I-1397-2013
OI Bergel, Alexandre/0000-0001-8087-1903; Hurtado Alegria, Julio
   Ariel/0000-0002-2508-0962
FU Conicyt, Chile [Fondef D09I1171]; NIC Chile; University of Chile
   [U-INICIA 11/06]; FONDECYT [1120094]
FX This work was partly funded by project Fondef D09I1171 of Conicyt,
   Chile. The work of Julio A. Hurtado was also partially funded by NIC
   Chile. This work was partly funded by Program U-INICIA 11/06 VID 2011,
   grant U-INICIA 11/06, University of Chile, and FONDECYT 1120094.
CR Acuña ST, 2001, WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL 1, PROCEEDINGS, P237
   Bruehlmann A, 2008, LECT NOTES COMPUT SC, V5301, P660, DOI 10.1007/978-3-540-87875-9_46
   Canfora G, 2005, J SYST SOFTWARE, V77, P113, DOI 10.1016/j.jss.2004.11.007
   Cook JE, 1999, ACM T SOFTW ENG METH, V8, P147, DOI 10.1145/304399.304401
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Demeyer Serge., 2008, OBJECT ORIENTED REEN
   Duraes JA, 2006, IEEE T SOFTWARE ENG, V32, P849, DOI 10.1109/TSE.2006.113
   Ge J., 2006, P INT C SOFTW ENG AD, P41
   Gruhn V., 1991, Software Development Environments and CASE Technology. European Symposium Proceedings, P271
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Hurtado Alegria J. A., 2011, P 2011 INT C SOFTW S, P23, DOI 10.1145/1987875.1987882
   Alegria JAH, 2010, LECT NOTES COMPUT SC, V6195, P273, DOI 10.1007/978-3-642-14347-2_24
   Hurtado JA, 2010, P SCCC 2010 ANT CHIL
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Lieberman H, 1998, SOFTWARE VISUALIZATION, P277
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Lonchamp J., 1993, Second International Conference on the Software Process. Continuous Software Process Improvement (Cat. No.93TH0509-0), P41, DOI 10.1109/SPCON.1993.236823
   Lungu M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P349
   OMG, 2008, PTC071101 OMG
   Osterweil L., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P2
   Osterweil LJ, 2010, LECT NOTES COMPUT SC, V6195, P2, DOI 10.1007/978-3-642-14347-2_2
   Perin F, 2010, P INT C SOFTW MAINT
   Pino FJ, 2009, LECT NOTES COMPUT SC, V5543, P342, DOI 10.1007/978-3-642-01680-6_31
   Soto M, 2009, LECT NOTES COMPUT SC, V5543, P377, DOI 10.1007/978-3-642-01680-6_34
   Valdes G, 2010, P 17 EUR SYST SOFTW
   Van Rijsbergen C. J., 1979, Information Retrieval, V2nd
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Yoon IC, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P202, DOI 10.1109/APSEC.2001.991478
NR 28
TC 11
Z9 13
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2014
VL 26
IS 4
SI SI
BP 434
EP 450
DI 10.1002/smr.1578
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF1WF
UT WOS:000334503900006
DA 2024-07-18
ER

PT J
AU Jaafar, F
   Guéhéneuc, YG
   Hamel, S
   Antoniol, G
AF Jaafar, Fehmi
   Gueheneuc, Yann-Gael
   Hamel, Sylvie
   Antoniol, Giuliano
TI Detecting asynchrony and dephase change patterns by mining software
   repositories
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE change pattern; co-changes; stability; change period; bit vectors
ID VERSION HISTORIES
AB Software maintenance accounts for the largest part of the costs of any program. During maintenance activities, developers implement changes (sometimes simultaneously) on artifacts in order to fix bugs and to implement new requirements. To reduce this part of the costs, previous work proposed approaches to identify the artifacts of programs that change together. These approaches analyze historical data, mined from version control systems, and report change patterns, which lead at the causes, consequences, and actors of the changes to source code files. They also introduce so-called change patterns that describe some typical change dependencies among files. In this paper, we introduce two novel change patterns: the asynchrony change pattern, corresponding to macro co-changes (MC), that is, of files that co-change within a large time interval (change periods) and the dephase change pattern, corresponding to dephase macro co-changes (DC), that is, MC that always happens with the same shifts in time. We present our approach, that we named Macocha, to identify these two change patterns in large programs. We use the k-nearest neighbor algorithm to group changes into change periods. We also use the Hamming distance to detect approximate occurrences of MC and DC. We apply Macocha and compare its performance in terms of precision and recall with UMLDiff (file stability) and association rules (co-changing files) on seven systems: ArgoUML, FreeBSD, JFreeChart, Openser, SIP, XalanC, and XercesC developed with three different languages (C, C++, and Java). These systems have a size ranging from 532 to 1693 files, and during the study period, they have undergone 1555 to 23,944 change commits. We use external information and static analysis to validate (approximate) MC and DC found by Macocha. Through our case study, we show the existence and usefulness of these novel change patterns to ease software maintenance and, potentially, reduce related costs. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Jaafar, Fehmi; Gueheneuc, Yann-Gael] Ecole Polytech Montreal, DGIGL, Ptidej Team, Quebec City, PQ, Canada.
   [Jaafar, Fehmi; Hamel, Sylvie] Univ Montreal, DIRO, LBIT Lab, Quebec City, PQ, Canada.
   [Antoniol, Giuliano] Ecole Polytech Montreal, DGIGL, SOCCER Lab, Quebec City, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal; Universite de Montreal;
   Universite de Montreal; Polytechnique Montreal
RP Jaafar, F (corresponding author), Univ Montreal, DIRO, LBIT Lab, Quebec City, PQ, Canada.
EM Jaafarfe@iro.umontreal.ca
RI Guéhéneuc, Yann-Gaël/K-9371-2019
OI Hamel, Sylvie/0000-0002-8941-2284
FU FQRNT team grant, the Canada Research Chair in Software Patterns and
   Patterns of Software
FX This work has been partly funded by a FQRNT team grant, the Canada
   Research Chair in Software Patterns and Patterns of Software. We
   gratefully thank Massimiliano Di Penta and Daniel M. German for their
   generous comments.
CR Agrawal R., P 20 INT C VERY LARG
   Ali N, 2011, CONF PROC INT SYMP C, P111, DOI 10.1109/ICPC.2011.42
   Antoniol G., 2005, Proceedings of the 2005 international workshop on Mining software repositories, volume 30 of MSR '05, V30, P1, DOI [DOI 10.1145/1083142.1083156, DOI 10.1145/1082983.1083156]
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Beyer D, 2006, WORK CONF REVERSE EN, P199
   Bouktif S, 2006, WORK CONF REVERSE EN, P221
   Canfora G., 2005, P 11 IEEE INT SOFTWA, P29, DOI [DOI 10.1109/METRICS2005.18, DOI 10.1109/METRICS.2005.28]
   Canfora Gerardo., 2010, P IEEE INT C SOFTWAR, P1
   Ceccarelli M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P163, DOI 10.1145/1810295.1810320
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   D'Ambros M, 2009, IEEE T SOFTWARE ENG, V35, P720, DOI 10.1109/TSE.2009.17
   Dasarathy B. V., 1991, Nearest neighbor (NN) norms, V317
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   German DM, 2006, EMPIR SOFTW ENG, V11, P369, DOI 10.1007/s10664-006-9004-6
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Guéhéneuc YG, 2004, ACM SIGPLAN NOTICES, V39, P301, DOI 10.1145/1035292.1029002
   HAMMING RW, 1950, BELL SYST TECH J, V29, P147, DOI 10.1002/j.1538-7305.1950.tb00463.x
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Hatton L, 2007, COMPUTER, V40, P64, DOI 10.1109/MC.2007.58
   Jaafar F., 2011, 2011 18th Working Conference on Reverse Engineering, P325, DOI 10.1109/WCRE.2011.47
   Kagdi H, 2007, INT C PROGRAM COMPRE, P145
   Kagdi Huzefa., 2007, P 4 ACM INT WORKSHOP, P22
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kotsiantis SB, 2007, FRONT ARTIF INTEL AP, V160, P3
   Kpodjedo S, 2013, J SOFTW-EVOL PROC, V25, P139, DOI 10.1002/smr.519
   Kpodjedo S, 2009, EUR CON SFTWR MTNCE, P179, DOI 10.1109/CSMR.2009.24
   Lanza Michele., 2002, P LMO 2002 LANGUAGES, P135
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Lehman M.M., 1985, PROGRAM EVOLUTION PR, P1
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Vanya A, 2011, EUR CON SFTWR MTNCE, P121, DOI 10.1109/CSMR.2011.18
   Vanya A, 2009, WORK CONF REVERSE EN, P227, DOI 10.1109/WCRE.2009.30
   WIRFSBROCK B, 1990, DESIGNING OBJECT ORI
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Xing Z, 2007, TECHNICAL REPORT
   Xing ZC, 2005, IEEE T SOFTWARE ENG, V31, P850, DOI 10.1109/TSE.2005.106
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zhou Y, 2008, WORK CONF REVERSE EN, P27, DOI 10.1109/WCRE.2008.39
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zimmermann Thomas., 2006, P INT WORKSHOP MININ, P169
NR 43
TC 11
Z9 13
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2014
VL 26
IS 1
SI SI
BP 77
EP 106
DI 10.1002/smr.1635
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA0PV
UT WOS:000330799000005
DA 2024-07-18
ER

PT J
AU Lagerström, R
   Sporrong, U
   Wall, A
AF Lagerstrom, Robert
   Sporrong, Ulf
   Wall, Anders
TI Increasing software development efficiency and maintainability for
   complex industrial systems - A case study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software development efficiency; software maintainability; architectural
   change; process change; method support
ID PROJECTS
AB It is difficult to manage complex software systems. Thus, many research initiatives focus on how to improve software development efficiency and maintainability. However, the trend in the industry is still alarming, software development projects fail, and maintenance is becoming more and more expensive. One problem could be that research has been focusing on the wrong things. Most research publications address either process improvements or architectural improvements. There are few known approaches that consider how architectural changes affect processes and vice versa. One method proposed, called the BusinessArchitectureProcess method, takes these aspects into consideration. In 2007 the method was tested in one case study. Findings in the 2007 case study show that the method is useful, but in need of improvements and further validation. The present paper employs the method in a second case study. The contribution in this paper is thus a second test and validation of the proposed method, and useful method improvements for future use of the method. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Lagerstrom, Robert; Sporrong, Ulf; Wall, Anders] ABB Corp Res, S-72226 Vasteras, Sweden.
C3 ABB
RP Lagerström, R (corresponding author), Royal Inst Technol, S-10405 Stockholm, Sweden.
EM robertl@ics.kth.se
OI Lagerstrom, Robert/0000-0003-3089-3885
CR [Anonymous], 2000, ATAM: Method for Architecture Evaluation
   [Anonymous], 2003, 61850 IEC
   [Anonymous], 9 INT WORKSH PRINC S
   Axelsson J, 2007, 4 INT WORKSH SOFTW E, P5
   Bass Len, 2003, Practice
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Bosch J, 1999, 21 INT C SOFTW ENG I
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Bosch Jan., 2002, Proc. of the International Software Product Line Conference (SPLC'02), P247
   Brocke H., 2009, 20 AUSTR C INF SYST
   Cabrera R, 1998, P 1998 PATT LANG PRO, V98, P98
   Del Rosso C, 2006, J SOFTW MAINT EVOL-R, V18, P351, DOI 10.1002/smr.337
   El Emam K, 2000, J SYST SOFTWARE, V51, P119, DOI 10.1016/S0164-1212(99)00117-X
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Harrison W, 1990, C SOFTW MAINT, P3745
   Jarzabek S, 2007, Effective software maintenance and evolution: A reuse-based approach
   Jeffery R, 2006, LECT NOTES COMPUTER, V46, P43
   Johnsson S, 2008, PORTL INT CONF MANAG, P1224, DOI 10.1109/PICMET.2008.4599732
   Krishnan M. S., 1999, Information Systems Frontiers, V1, P267, DOI 10.1023/A:1010054412650
   Lagerström R, 2010, SOFTWARE QUAL J, V18, P437, DOI 10.1007/s11219-010-9100-0
   Macala RR, 1996, IEEE SOFTWARE, V13, P57, DOI 10.1109/52.493021
   Morgan J., 2020, The Toyota Product Development System: integrating People, Process, and Technology
   Nord Robert L, 2003, TECHNICAL REPORT
   North American Electric Reliability Corporation (NERC), 2007, NERC CIP D CRIT INFR
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Northrop LM, 2002, IEEE SOFTWARE, V19, P32, DOI 10.1109/MS.2002.1020285
   Oman P., 1992, TECHNICAL REPORT
   Ovaska P., 2003, Software Process Improvement and Practice, V8, P233, DOI 10.1002/spip.186
   Pigoski ThomasM., 1997, PRACTICAL SOFTWARE M
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Reel JS, 1999, IEEE SOFTWARE, V16, P18, DOI 10.1109/52.765782
   ROPERLOWE GC, 1990, J OPER RES SOC, V41, P49, DOI 10.1038/sj/jors/0410106
   Standish Group, 2009, TECHNICAL REPORT
   Subramanian GH, 2007, J SYST SOFTWARE, V80, P616, DOI 10.1016/j.jss.2006.06.014
   Tekinerdogan B, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P5, DOI 10.1109/WICSA.2004.1310685
   Xia WD, 2004, COMMUN ACM, V47, P68, DOI 10.1145/986213.986215
   Yeo K. T., 2002, International Journal of Project Management, V20, P241, DOI 10.1016/S0263-7863(01)00075-8
   [No title captured]
   [No title captured]
NR 39
TC 0
Z9 0
U1 0
U2 6
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2013
VL 25
IS 3
BP 285
EP 301
DI 10.1002/smr.581
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 112UN
UT WOS:000316619400005
DA 2024-07-18
ER

PT J
AU Niinimäki, T
   Piri, A
   Lassenius, C
   Paasivaara, M
AF Niinimaki, Tuomas
   Piri, Arttu
   Lassenius, Casper
   Paasivaara, Maria
TI Reflecting the choice and usage of communication tools in global
   software development projects with media synchronicity theory
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE global software engineering; communication tools; media choice
ID INFORMATION; RICHNESS
AB Global software development (GSD) projects use a variety of communication tools, such as teleconferences, email, and instant messaging to overcome the challenges caused by distribution. The use of different tools implies different communication needs and practices within the project. Media synchronicity theory (MST) breaks communication down into two processes conveyance of information and convergence of understanding and communication media capabilities into five: immediacy of feedback, parallelism, symbol variety, rehearsability, and reprocessability. According to MST, media capabilities differ in support for conveyance and convergence, and for good performance, there should be match between media capabilities and communication process needed in a given task. In this paper, we present our qualitative study on communication in GSD. We interviewed 79 individuals from 12 GSD projects. We discuss which communication tools were used and how. We analyze the tool use and articulated rationale for choosing the tools for various tasks in distributed software development based on the two communicative processes and five media properties suggested by MST. We found evidence supporting the applicability of MST as an aid in selecting communication tools for GSD projects. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Niinimaki, Tuomas; Piri, Arttu; Lassenius, Casper; Paasivaara, Maria] Aalto Univ, Software Business & Engn Inst, Sch Sci, Fin Alto, Finland.
   [Niinimaki, Tuomas; Piri, Arttu; Paasivaara, Maria] Aalto Univ, Sch Sci & Technol, FIN-00076 Aalto, Finland.
C3 Aalto University; Aalto University
RP Niinimäki, T (corresponding author), Aalto Univ, Software Business & Engn Inst, Sch Sci, POB 19210, FIN-00076 Aalto, Finland.
EM tuomas.niinimaki@aalto.fi
RI Lassenius, Casper/A-4339-2013
OI Lassenius, Casper/0000-0003-4192-7024
CR Allen T. J., 1977, Managing the flow of technology: technology transfer and the dissemination of technical information within RD organizations
   [Anonymous], HUMAN REACTIONS TECH
   DAFT RL, 1984, RES ORGAN BEHAV, V6, P191
   DeLuca D, 2005, 38 HAW INT C SYST SC
   Dennis A. R., 1999, P 32 HAW INT C SYST, P1
   Dennis AR, 1998, P ANN HICSS, P48, DOI 10.1109/HICSS.1998.653082
   GRINTER RE, 1999, P INT ACM SIGGROUP C
   Handel M., 2002, P 2002 ACM C COMP SU, P1, DOI [10.1145/587078.587080, DOI 10.1145/587078.587080]
   Herbsleb J.D., 2000, CSCW, P319, DOI DOI 10.1145/358916.359003
   Herbsleb J.D., 2002, Proceedings of the Conference on Human Factors in Computing Systems, CHI '02, P171
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, ICSE 2001 P 23 INT C, P81
   Hung Y.-T.C., 2006, 39 ANN HAW INT C SYS
   Isaacs E, CSCW 2002 P 2002 ACM, P11
   Komi-Sirvio S, 2005, KNOWL PROCESS MANAG, V12, P108, DOI 10.1002/kpm.225
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Lee T., 1998, Using qualitative methods in organizational research
   MULLER MJ, 2003, P 2003 INT ACM SIGGR
   Nardi BA, CSCW 2000 P 2000 ACM, P79
   Niinimäki T, 2009, INT CONF GLOBAL SOFT, P153, DOI 10.1109/ICGSE.2009.23
   Patton M. Q., 2002, QUALITATIVE RES EVAL, V3rd
   Ramesh V, 2002, P ANN HAW INT C SYST, P18
   Rennecker J, HICSS 2006 P 39 ANN
   Schiller SZ, 2007, SMALL GR RES, V38, P12, DOI 10.1177/1046496406297035
   SCHOLL J, 2006, P 2006 20 ANN C COMP
   Shachaf P, 2008, INFORM MANAGE-AMSTER, V45, P131, DOI 10.1016/j.im.2007.12.003
   Shoemaker P., 2003, BUILD SOCIAL SCI THE
   Short J., 1976, The social psychology of telecommunications
   SPROULL L, 1986, MANAGE SCI, V32, P1492, DOI 10.1287/mnsc.32.11.1492
   Voida A, CHI 2002 P ACM C HUM, P187
NR 30
TC 27
Z9 32
U1 1
U2 28
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2012
VL 24
IS 6
SI SI
BP 677
EP 692
DI 10.1002/smr.566
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 004ZK
UT WOS:000308719900006
DA 2024-07-18
ER

PT J
AU Bagheri, E
   Di Noia, T
   Gasevic, D
   Ragone, A
AF Bagheri, Ebrahim
   Di Noia, Tommaso
   Gasevic, Dragan
   Ragone, Azzurra
TI Formalizing interactive staged feature model configuration
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE feature models; variability; software product lines; soft constraints;
   logic languages
AB Feature modeling an attractive technique for capturing commonality as well as variability within an application domain for generative programming and software product line engineering. Feature models symbolize an overarching representation of the possible application configuration space, and can hence be customized based on specific domain requirements and stakeholder goals. Most interactive or semi-automated feature model customization processes neglect the need to have a holistic approach towards the integration and satisfaction of the stakeholder's soft and hard constraints, and the application-domain integrity constraints. In this paper, we will show how the structure and constraints of a feature model can be modeled uniformly through Propositional Logic extended with concrete domains, called P(N). Furthermore, we formalize the representation of soft constraints in fuzzy P(N) and explain how semi-automated feature model customization is performed in this setting. The model configuration derivation process that we propose respects the soundness and completeness properties. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Bagheri, Ebrahim; Gasevic, Dragan] Athabasca Univ, SCIS, Athabasca, AB, Canada.
   [Di Noia, Tommaso] Politecn Bari, SisInf Lab, I-70125 Bari, Italy.
   [Ragone, Azzurra] Univ Trento, Dipartimento Ingn & Sci Informaz, I-38100 Trento, Italy.
C3 Athabasca University; Politecnico di Bari; University of Trento
RP Bagheri, E (corresponding author), Athabasca Univ, SCIS, 1 Univ Dr, Athabasca, AB, Canada.
EM ebagheri@athabascau.ca
RI Gasevic, Dragan/AAT-3909-2020; Ragone, Azzurra/GRE-9449-2022
OI Gasevic, Dragan/0000-0001-9265-1908; Ragone,
   Azzurra/0000-0002-3537-7663; Bagheri, Ebrahim/0000-0002-5148-6237; Di
   Noia, Tommaso/0000-0002-0939-5462
CR [Anonymous], 1982, COMBINATORIAL OPTIMI
   [Anonymous], 1994, Essentials of fuzzy modeling and control
   [Anonymous], P 16 INT WORKSH DESC
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 2005, INT WORKSH SOFTW FAC
   Ausiello G., 2003, Complexity and approximation: Cominatorial optimization problems and their approximality properties
   Bagheri E, 2010, 14 INT SOFTW PROD LI
   Bagheri E, 2008, KNOWLEDGE INFORM SYS
   Bagheri E, 2010, LECT NOTES COMPUT SC, V6287, P300, DOI 10.1007/978-3-642-15579-6_21
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2006, 1 STEP FRAMEWORK AUT
   Benavides D., 2007, PROCEEDING 1 INT WOR, P129
   Clements P, 2003, SOFTW PROD LIN
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P22, DOI 10.1109/SPLC.2008.49
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Donini F. M., 2002, ACM Transactions on Computational Logic, V3, P177, DOI 10.1145/505372.505373
   Gheyi Rohit., 2006, 1st Alloy workshop, P71
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Haarslev V., 2001, Automated Reasoning. First International Joint Conference, IJCAR 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2083), P701
   HESS J, 1990, SEI90SR3 CARN MELL U
   Horridge M, 2008, LECT NOTES COMPUT SC, V5318, P323, DOI 10.1007/978-3-540-88564-1_21
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Janota M, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P13
   Kang K. C., 1990, Technical Report
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Lopez-Herrejon R. E., 2001, Generative and Component-Based Software Engineering. Third International Conference, GCSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2186), P10
   Mamdani E. H., 1976, 6th International Symposium on Multi-Valued Logic, P196
   Mannion M., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P176
   MCCARTHY J, 1980, CIRCUMSCRIPTION FORM
   Mendonca M, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Motik B, 2006, LECT NOTES COMPUT SC, V4273, P501
   Parsia B, 2004, P INT WORKSH DESCR L, P104
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Ragone A, 2008, AUTON AGENT MULTI-AG, V16, P249, DOI 10.1007/s10458-008-9033-1
   Robak S, 2003, ECBS 2003: 10TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P305
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Simos M. A., 1995, SIGSOFT Software Engineering Notes, P196, DOI 10.1145/223427.211845
   Sommerville I, 1997, ANN SOFTW ENG, V3, P101, DOI 10.1023/A:1018946223345
   Tsarkov D, 2006, LECT NOTES ARTIF INT, V4130, P292
   Wang HH, 2007, J WEB SEMANT, V5, P117, DOI 10.1016/j.websem.2006.11.006
NR 45
TC 18
Z9 20
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2012
VL 24
IS 4
BP 375
EP 400
DI 10.1002/smr.534
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 962WZ
UT WOS:000305580700001
DA 2024-07-18
ER

PT J
AU Piri, A
   Niinimäki, T
   Lassenius, C
AF Piri, Arttu
   Niinimaki, Tuomas
   Lassenius, Casper
TI Fear and distrust in global software engineering projects
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE fear; distrust; trust; global software engineering; organizational
   change
ID TRUST; MANAGEMENT; KNOWLEDGE; ISSUES
AB When global software engineering (GSE) is understood as knowledge intensive collaborative work, many of the reasons for the problems encountered in GSE projects can be traced back to the social conditions framing the collaboration between people at different physical sites. A total of 59 interviews were conducted in eight GSE projects of two large software companies with sites in Finland and other countries. As a result of categorization of problems related to group relations, the lack of trust between the main site and the other sites, and the fear of negative personal consequences among the project employees at the main site due to introduction of GSE were found to be the major problems in the projects. Our analysis suggests that poorly communicated reasoning for GSE can lay the ground for fear and for distrust between employees at remote sites. Unfulfilled cognitive expectations and fear related to one's professional future were found to be the sources of distrust toward employees at off-site locations. The main contribution of this study is a novel empirical description of the linkages between fear and distrust in GSE. In addition, practical implications to effectively implement an organizational change from collocated development to distributed development are suggested. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Piri, Arttu; Niinimaki, Tuomas; Lassenius, Casper] Aalto Univ, Sch Sci & Technol, FI-00076 Aalto, Finland.
C3 Aalto University
RP Piri, A (corresponding author), Aalto Univ, Sch Sci & Technol, POB 11000, FI-00076 Aalto, Finland.
EM arttu.piri@tkk.fi
RI Lassenius, Casper/A-4339-2013
OI Lassenius, Casper/0000-0003-4192-7024
CR [Anonymous], 2008, Software Process: Improvement and Practice, DOI DOI 10.1002/SPIP.378
   [Anonymous], QUALITATIVE RESEARCH
   [Anonymous], 1987, Peopleware: Productive Projects and Teams
   [Anonymous], 2005, CAN C ELECT COMP ENG
   Aurum A, 2008, INFORM SOFTWARE TECH, V50, P511, DOI 10.1016/j.infsof.2007.05.005
   Axtell C.M., 2004, INT REV IND ORG PSYC, V19, P205
   Babar MA, 2007, J SYST SOFTWARE, V80, P1438, DOI [10.1016/j.jss.2006.10.038, 10.1016/j.jss.2006.12.038]
   Bhat JM, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.137
   Brooks Frederick P., 1995, The mythical man-month
   Casey Valentine, 2008, Software Process: Improvement and Practice, V13, P511, DOI 10.1002/spip.404
   Casey V, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P163, DOI 10.1109/ICGSE.2008.28
   CURTIS B, 1986, P IEEE, V74, P1092, DOI 10.1109/PROC.1986.13596
   Cusick J, 2006, IEEE SOFTWARE, V23, P20, DOI 10.1109/MS.2006.118
   Desouza KC, 2006, IEEE SOFTWARE, V23, P30, DOI 10.1109/MS.2006.135
   Dirks KT, 2001, ORGAN SCI, V12, P450, DOI 10.1287/orsc.12.4.450.10640
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Gotel O, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P244, DOI 10.1109/ICGSE.2008.10
   Grinter RE, 1999, P 1999 ACM INT C SUP, P306, DOI DOI 10.1145/320297.320333
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Jarvenpaa SL, 1999, ORGAN SCI, V10, P791, DOI 10.1287/orsc.10.6.791
   Jarvenpaa SL, 2004, INFORM SYST RES, V15, P250, DOI 10.1287/isre.1040.0028
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   LEWIS JD, 1985, SOC FORCES, V63, P967, DOI 10.2307/2578601
   MAYER RC, 1995, ACAD MANAGE REV, V20, P709, DOI 10.2307/258792
   MCALLISTER DJ, 1995, ACAD MANAGE J, V38, P24, DOI 10.5465/256727
   Meyerson D., 1996, Trust in organizations: Frontiers of theory and research, P166, DOI DOI 10.4135/9781452243610.N9
   Niinimaki T, 2009, P INT C GLOB SOFTW E
   Niinimäki T, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P55, DOI 10.1109/ICGSE.2008.27
   Paasivaara M., 2003, Software Process Improvement and Practice, V8, P183, DOI 10.1002/spip.187
   Patane J. R., 1994, Journal of Systems Management, V45, P6
   Pyysiainen J, 2003, P INT WORKSH GLOB SO, P67
   Rönkkö K, 2007, INFORM SOFTWARE TECH, V49, P682, DOI 10.1016/j.infsof.2007.02.014
   Sabherwal R, 1999, COMMUN ACM, V42, P80, DOI 10.1145/293411.293485
   Sawyer S, 2004, COMMUN ACM, V47, P95, DOI 10.1145/1035134.1035140
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Weinberg GM, 1971, PSYCHOL PROGRAMMING
   Zhuge H, 2003, INFORM MANAGE-AMSTER, V40, P419, DOI 10.1016/S0378-7206(02)00061-7
NR 39
TC 7
Z9 8
U1 0
U2 23
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2012
VL 24
IS 2
SI SI
BP 185
EP 205
DI 10.1002/smr.476
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 910NE
UT WOS:000301645500006
DA 2024-07-18
ER

PT J
AU Hajnal, A
   Forgács, I
AF Hajnal, Akos
   Forgacs, Istvan
TI A demand-driven approach to slicing legacy COBOL systems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE program slicing; data flow analysis; software maintenance
ID PROGRAM DEPENDENCE GRAPH; CONTEXT
AB Maintenance of aging legacy COBOL systems is labor-intensive and is becoming a more and more difficult problem. Program slicing is a potentially useful analysis for aiding different maintenance activities, including program comprehension, reverse engineering, debugging, and testing. Numerous techniques have been proposed in the past decades; however, in interactive contexts, we found none of them suitable for slicing industrial-scale COBOL systems due to their large space or preprocessing requirements. This paper proposes a novel static program slicing approach, which is based on context-sensitive token propagation over control flow graphs (CFGs). CFGs require less space compared with program dependence graphs (PDGs) used by other techniques, and the token propagation method computes the necessary information only, on demand. Algorithms are presented for data flow and full slicing to calculate precise program slices. Preliminary application experiences on industrial-scale COBOL systems are also summarized. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Hajnal, Akos] Hungarian Acad Sci, Comp & Automat Res Inst, Budapest, Hungary.
   [Forgacs, Istvan] 4D Soft Kft, Budapest, Hungary.
C3 Hungarian Academy of Sciences; Hungarian Research Network; HUN-REN
   Institute for Computer Science & Control
RP Hajnal, A (corresponding author), Hungarian Acad Sci, Comp & Automat Res Inst, Budapest, Hungary.
EM ahajnal@sztaki.hu
OI Hajnal, Akos/0000-0001-6410-8895
CR Agrawal G, 2001, ACM SIGPLAN NOTICES, P6
   [Anonymous], 2009, PANORAMA ANAL
   Atkinson DC, 1996, PROC INT CONF SOFTW, P16, DOI 10.1109/ICSE.1996.493398
   Binkley D, 2005, PROC IEEE INT CONF S, P177
   Binkley D, 2005, FIFTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P15, DOI 10.1109/SCAM.2005.28
   Binkley D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P3, DOI 10.1145/201055.201056
   Binkley D, 2003, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2003.1235405
   Binkley D, 1998, INFORM SOFTWARE TECH, V40, P583, DOI 10.1016/S0950-5849(98)00085-8
   Binkley D, 1997, IEEE T SOFTWARE ENG, V23, P498, DOI 10.1109/32.624306
   Brown GD, 2000, COBOL FAILURE THAT W
   CANFORA G, 1994, J SOFTW MAINT-RES PR, V6, P53, DOI 10.1002/smr.4360060202
   CANFORA G, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P424, DOI 10.1109/ICSM.1994.336752
   Canfora G, 1996, SEKE '96: THE 8TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, PROCEEDINGS, P277
   Cimitile A, 1996, J SOFTW MAINT-RES PR, V8, P145, DOI 10.1002/(SICI)1096-908X(199605)8:3<145::AID-SMR127>3.0.CO;2-9
   DeLucia A, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P9, DOI 10.1109/WPC.1996.501116
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Field J., 1999, Software Engineering Notes, V24, P1, DOI 10.1145/381788.316163
   Gallagher K. B., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P236, DOI 10.1109/ICSM.1992.242538
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Gupta R., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P299, DOI 10.1109/ICSM.1992.242531
   Hajnal A, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P77
   Harman M., 1995, Software Testing, Verification and Reliability, V5, P143, DOI 10.1002/stvr.4370050303
   Harman M, 2001, PROC IEEE INT CONF S, P138, DOI 10.1109/ICSM.2001.972724
   Harrold M. J., 1998, Software Engineering Notes, V23, P11, DOI 10.1145/271775.271780
   HECHT MS, 1997, FLOW ANAL COMPUTER P
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   Horvath E, 2005, P 9 S PROGR LANG SOF, P49
   HORWITZ S, 1989, ACM T PROGR LANG SYS, V11, P345, DOI 10.1145/65979.65980
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Komondoor R, 2005, LECT NOTES COMPUT SC, V3440, P157
   Krinke J, 2002, PROC IEEE INT CONF S, P22, DOI 10.1109/ICSM.2002.1167744
   Krinke J, 2006, J SYST SOFTWARE, V79, P1249, DOI 10.1016/j.jss.2006.02.040
   Lanubile F, 1997, IEEE T SOFTWARE ENG, V23, P246, DOI 10.1109/32.588543
   Lanubile F., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P396, DOI 10.1109/ICSM.1993.366923
   Liang D., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P421, DOI 10.1109/ICSM.1999.792640
   Loyall J. P., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P282, DOI 10.1109/ICSM.1993.366934
   Mock M., 2002, Software Engineering Notes, V27, P71, DOI 10.1145/605466.605477
   NING JQ, 1994, COMMUN ACM, V37, P50, DOI 10.1145/175290.175295
   Orso A, 2001, PROC IEEE INT CONF S, P158, DOI 10.1109/ICSM.2001.972726
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Ramalingam G., 2006, 28th International Conference on Software Engineering Proceedings, P192, DOI 10.1145/1134285.1134313
   Ranganath VP, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275502
   Reps T., 1994, SIGSOFT Software Engineering Notes, V19, P11, DOI 10.1145/195274.195287
   Reps Thomas W., 1993, ILPS, P163
   Sellink A, 2002, SCI COMPUT PROGRAM, V45, P193, DOI 10.1016/S0167-6423(02)00061-8
   van Deursen A, 1999, PROG COMPREHEN, P74, DOI 10.1109/WPC.1999.777746
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
NR 48
TC 23
Z9 24
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2012
VL 24
IS 1
BP 67
EP 82
DI 10.1002/smr.533
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 910ND
UT WOS:000301645300005
DA 2024-07-18
ER

PT J
AU Yang, Z
   Huang, S
   Zheng, CY
   Wang, XY
   Wang, Y
   Xia, CY
AF Yang, Zhen
   Huang, Song
   Zheng, Changyou
   Wang, Xingya
   Wang, Yang
   Xia, Chunyan
TI MetaLiDAR: Automated metamorphic testing of LiDAR-based autonomous
   driving systems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE autonomous driving systems; metamorphic testing; object detection
   systems; test data generation
ID PERCEPTION; VISION
AB Recent advances in artificial intelligence technology and perception components have promoted the rapid development of autonomous vehicles. However, as safety-critical software, autonomous driving systems often make wrong judgments, seriously threatening human and property safety. LiDAR is one of the most critical sensors in autonomous vehicles, capable of accurately perceiving the three-dimensional information of the environment. Nevertheless, the high cost of manually collecting and labeling point cloud data leads to a dearth of testing methods for LiDAR-based perception modules. To bridge the critical gap, we introduce MetaLiDAR, a novel automated metamorphic testing methodology for LiDAR-based autonomous driving systems. First, we propose three object-level metamorphic relations for the domain characteristics of autonomous driving systems. Next, we design three transformation modules so that MetaLiDAR can generate natural-looking follow-up point clouds. Finally, we define corresponding evaluation metrics based on metamorphic relations. MetaLiDAR automatically determines whether source and follow-up test cases meet the metamorphic relations based on the evaluation metrics. Our empirical research on five state-of-the-art LiDAR-based object detection models shows that MetaLiDAR can not only generate natural-looking test point clouds to detect 181,547 inconsistent behaviors of different models but also significantly enhance the robustness of models by retraining with synthetic point clouds.
   We introduce MetaLiDAR, to alleviate the test oracle and test case generation problems of LiDAR-based autonomous driving systems. MetaLiDAR utilizes carefully designed metamorphic relations and object-level operation methods to automatically generate natural-looking point clouds that satisfy the physical characteristics of LiDAR and reveal inconsistent behaviors of models without test oracle.image
C1 [Yang, Zhen; Huang, Song; Zheng, Changyou; Wang, Xingya; Wang, Yang; Xia, Chunyan] Army Engn Univ PLA, Coll Command & Control Engn, Nanjing, Jiangsu, Peoples R China.
   [Wang, Xingya] Nanjing Tech Univ, Coll Comp Sci & Technol, Nanjing, Jiangsu, Peoples R China.
   [Xia, Chunyan] Mudanjiang Normal Univ, Coll Comp & Informat Technol, Mudanjiang, Heilongjiang, Peoples R China.
   [Huang, Song; Zheng, Changyou] Army Engn Univ PLA, Nanjing, Jiangsu, Peoples R China.
C3 Army Engineering University of PLA; Nanjing Tech University; Mudanjiang
   Normal University; Army Engineering University of PLA
RP Huang, S; Zheng, CY (corresponding author), Army Engn Univ PLA, Nanjing, Jiangsu, Peoples R China.
EM huangsong@aeu.edu.cn; zhengchy@aeu.edu.cn
RI Wang, Yang/JCE-6204-2023; yang, zhen/JCO-7759-2023
OI Wang, Yang/0000-0002-4514-2534; yang, zhen/0009-0002-5594-4546; Wang,
   Xingya/0000-0002-7331-4831
FU National Key Research and Development Program of China; National Natural
   Science Foundation of China [61702544]; General Project of Basic Natural
   Science in Colleges and Universities of Jiangsu Province [21KJB520027];
   Heilongjiang Provincial Department of Education project [1453ZD018]; 
   [2018YFB1403400]
FX This work was supported by the National Key Research and Development
   Program of China (2018YFB1403400), the National Natural Science
   Foundation of China (61702544), the General Project of Basic Natural
   Science in Colleges and Universities of Jiangsu Province (21KJB520027),
   and the Heilongjiang Provincial Department of Education project
   (1453ZD018).
CR Altamimi E, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2509
   [Anonymous], When a tesla on autopilot kills someone, who is responsible?
   [Anonymous], NHTSA finalizes first occupant protection safety standards for vehicles without driving controls
   [Anonymous], Tesla driver using autopilot feature killed by tractor trailer
   [Anonymous], Standing General Order on Crash Reporting
   [Anonymous], Bundestag nimmt Gesetz zum autonomen Fahren an
   Ca S., 2022, J Syst Softw, V183, DOI [10.1016/j.jss.2021.111091, DOI 10.1016/J.JSS.2021.111091]
   Chen SQ, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P104, DOI 10.1109/ASE51524.2021.9678670
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, J SYST SOFTWARE, V116, P177, DOI 10.1016/j.jss.2015.07.037
   Dai A, 2017, PROC CVPR IEEE, P6545, DOI 10.1109/CVPR.2017.693
   Deng JJ, 2021, AAAI CONF ARTIF INTE, V35, P1201
   Fang J, 2020, IEEE ROBOT AUTOM LET, V5, P1931, DOI 10.1109/LRA.2020.2969927
   Garcia J, 2020, PROC INT CONF SOFTW, P385, DOI 10.1145/3377811.3380397
   Geiger A, 2013, INT J ROBOT RES, V32, P1231, DOI 10.1177/0278364913491297
   Geiger A, 2012, PROC CVPR IEEE, P3354, DOI 10.1109/CVPR.2012.6248074
   Gruyer D, 2017, ANNU REV CONTROL, V44, P323, DOI 10.1016/j.arcontrol.2017.09.012
   Guo A, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P480, DOI 10.1145/3533767.3534397
   Guo YL, 2021, IEEE T PATTERN ANAL, V43, P4338, DOI 10.1109/TPAMI.2020.3005434
   Han JC., 2020, Metamorphic fuzz testing of autonomous vehicles
   He C., 2020, 2020 IEEE Proceedings on Computer Vision and Pattern Recognition (CVPR), P11873
   Hu JSK, 2021, IEEE INT C INTELL TR, P2703, DOI 10.1109/ITSC48978.2021.9564842
   Hui ZW, 2021, IEEE T RELIAB, V70, P1397, DOI 10.1109/TR.2021.3106389
   Hui ZW, 2020, IEEE T RELIAB, V69, P657, DOI 10.1109/TR.2019.2931561
   Iqbal M, 2023, INFORM SOFTWARE TECH, V155, DOI 10.1016/j.infsof.2022.107104
   Ji P, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P189, DOI 10.1145/3533767.3534391
   Kang Y, 2019, IEEE T INTELL VEHICL, V4, P171, DOI 10.1109/TIV.2018.2886678
   Lang AH, 2019, PROC CVPR IEEE, P12689, DOI 10.1109/CVPR.2019.01298
   Li W, 2019, SCI ROBOT, V4, DOI 10.1126/scirobotics.aaw0863
   Li Y, 2021, IEEE T NEUR NET LEAR, V32, P3412, DOI 10.1109/TNNLS.2020.3015992
   Li Y, 2020, IEEE SIGNAL PROC MAG, V37, P50, DOI 10.1109/MSP.2020.2973615
   Lin TY, 2014, LECT NOTES COMPUT SC, V8693, P740, DOI 10.1007/978-3-319-10602-1_48
   Manivasagam Sivabalan, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P11164, DOI 10.1109/CVPR42600.2020.01118
   Mao JG, 2022, Arxiv, DOI arXiv:2206.09474
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Ramanagopal MS, 2018, IEEE ROBOT AUTOM LET, V3, P3860, DOI 10.1109/LRA.2018.2857402
   Sato T., 2021, Dirty road can attack: security of deep learning based automated lane centering under physical-world attack
   Shi S., 2020, P IEEECVF C COMPUTER, P10529
   Shi SS, 2019, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2019.00086
   Shi SS, 2021, IEEE T PATTERN ANAL, V43, P2647, DOI 10.1109/TPAMI.2020.2977026
   Shreyas V., 2020, Advances in Data and Information Sciences. Proceedings of ICDIS 2019. Lecture Notes in Networks and Systems (LNNS 94), P361, DOI 10.1007/978-981-15-0694-9_34
   Sun ZY, 2020, PROC INT CONF SOFTW, P974, DOI 10.1145/3377811.3380420
   Team OD, 2020, OpenPCDet: an open-source toolbox for 3D object detection from point clouds
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Wang JG, 2022, IEEE T INTELL VEHICL, V7, P286, DOI 10.1109/TIV.2022.3145035
   Wang S, 2020, IEEE INT CONF AUTOM, P1053, DOI 10.1145/3324884.3416584
   Xiao Aoran, 2022, ADV NEURAL INFORM PR
   Yan Y, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18103337
   Yang ZT, 2019, IEEE I CONF COMP VIS, P1951, DOI 10.1109/ICCV.2019.00204
   Yu BX, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P467, DOI 10.1145/3533767.3534389
   Zetong Yang, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P11037, DOI 10.1109/CVPR42600.2020.01105
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang ZY, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106701
   Zhou HS, 2020, PROC INT CONF SOFTW, P347, DOI 10.1145/3377811.3380422
   Zhou Y, 2018, PROC CVPR IEEE, P4490, DOI 10.1109/CVPR.2018.00472
NR 56
TC 0
Z9 0
U1 12
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 DEC 20
PY 2023
DI 10.1002/smr.2644
EA DEC 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CU6Y8
UT WOS:001127802400001
DA 2024-07-18
ER

PT J
AU Ozkan, N
   Erdogan, TG
   Bal, S
   Gök, MS
AF Ozkan, Necmettin
   Erdogan, Tugba Gurgen
   Bal, Sevval
   Gok, Mehmet Sahin
TI A bibliometric analysis of Agile software development publications
   originating from Turkey
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE Agile software development (ASD); agility; bibliometrics; extreme
   programming (XP); Kanban; Scrum; Turkey
ID ENGINEERING PRACTICES; PROJECT-MANAGEMENT; COMMUNICATION; COLLABORATION;
   METHODOLOGIES; COORDINATION; REVIEWS; QUALITY; IMPACT
AB Agile software development has reached wide adoption in various countries including Turkey, even though from which its original cultural backgrounds differ. In Turkey, many organizations have started to adopt Agile approaches more and more in their software development processes. This interest in the country's software development is parallel to what the academic literature on Agile in the country exhibits. However, despite the prevalence of Agile in Turkey, there is a lack of sufficient secondary research and comprehensive review on Agile in Turkey, which poses a significant necessity for further investigation. Considering this gap, we performed a quantitative bibliometric analysis of Agile software development publications produced by Turkish organizations in a holistic and broad approach both for scholars and practitioners. We provide a summary of relevant academic studies that emerged in Agile research in Turkey by focusing on many aspects including bibliometric properties of papers, researchers, affiliations, venues, and thematic contents that are separated into 15 sub-research questions. After delivering results based on the questions, we discuss the results and findings of our study and present implications regarding the findings. The main contributions of our work are twofold. First, the paper may help the readers to have a quick idea, understand the subject, and gain insight from a large volume of scientific data. Second, the paper can help readers to use these analyses to form future research.
C1 [Ozkan, Necmettin] Architecht Informat Syst, R&D & Coordinat Dept, Istanbul, Turkiye.
   [Ozkan, Necmettin; Gok, Mehmet Sahin] Gebze Tech Univ, Dept Business, Kocaeli, Turkiye.
   [Erdogan, Tugba Gurgen] Hacettepe Univ, Comp Engn Dept, Ankara, Turkiye.
   [Bal, Sevval] Sakarya Univ, Informat Syst Engn Dept, Serdivan, Turkiye.
C3 Gebze Technical University; Hacettepe University; Sakarya University
RP Ozkan, N (corresponding author), Architecht Informat Syst, R&D & Coordinat Dept, Istanbul, Turkiye.
EM necmettin.ozkan@architecht.com
RI Gürgen Erdoğan, Tuğba/KGL-6294-2024; Gök, Mehmet Şahin/ACU-7562-2022
OI Gök, Mehmet Şahin/0000-0003-4072-2641
CR Abdalhamid S., 2019, 2019 INT C COMP SCI, P1
   Age, 2022, About us
   Agile Turkey, 2020, US
   ?aliskan D., 2021, BITLIS EREN NIVERSIT, V10, P149, DOI [10.17798/bitlisfen.688978, DOI 10.17798/BITLISFEN.688978]
   Almeida F., 2020, ARXIV
   Altunel H., 2015, PMI T, V4, P16
   Arksey H., 2005, INT J SOC RES METHOD, V8, P19, DOI [10.1080/1364557032000119616, DOI 10.1080/1364557032000119616]
   Ashraf Sara, 2017, International Journal of Modern Education and Computer Science, V9, P16, DOI 10.5815/ijmecs.2017.08.03
   Barud NA, 2021, SCIENTOMETRICS, V126, P2437, DOI 10.1007/s11192-020-03662-8
   Bayram E, 2020, SIG PROCESS COMMUN, DOI 10.1109/siu49456.2020.9302320
   Brien SE, 2010, IMPLEMENT SCI, V5, DOI 10.1186/1748-5908-5-2
   Conn SS., 2004, Inform Syst Educ J, V2, P3
   de Souza DC, 2022, RESTOR ECOL, V30, DOI 10.1111/rec.13631
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Donthu N, 2021, J BUS RES, V133, P285, DOI 10.1016/j.jbusres.2021.04.070
   Erdogan TG, 2018, IEEE ACCESS, V6, P24543, DOI 10.1109/ACCESS.2018.2831244
   ?etin E., 2014, TURKIYEDE CEVIK YAZI
   Fernández-Diego M, 2020, IEEE ACCESS, V8, P166768, DOI 10.1109/ACCESS.2020.3021664
   Garousi V, 2016, J SYST SOFTWARE, V111, P49, DOI 10.1016/j.jss.2015.09.013
   Garousi V, 2015, SCIENTOMETRICS, V105, P23, DOI 10.1007/s11192-015-1663-x
   Garousi V, 2015, J SYST SOFTWARE, V108, P148, DOI 10.1016/j.jss.2015.06.036
   Gelmis A, 2022, LECT NOTES BUS INF P, V438, P78, DOI 10.1007/978-3-030-94238-0_5
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hofstede G., 2021, Hofstede Insights
   Hohl Philipp, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0059-z
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Ito JY, 2023, SMART INNOV SYST TEC, V207, P378, DOI 10.1007/978-3-031-04435-9_38
   Kalenda M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1954
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kokol P., 2020, LIB PHILOS PRACT
   Lechler TG, 2017, PROJ MANAG J, V48, P3, DOI 10.1177/875697281704800101
   MacCoun RJ, 1998, ANNU REV PSYCHOL, V49, P259, DOI 10.1146/annurev.psych.49.1.259
   Madsen DO, 2020, SOC SCI-BASEL, V9, DOI 10.3390/socsci9050069
   Mishra A., 2017, J SOFTWARE EVOLUTION, V29, P1, DOI DOI 10.12948/ISSN14531305/21.4.2017.07
   Mishra D, 2012, INFORM SOFTWARE TECH, V54, P1067, DOI 10.1016/j.infsof.2012.04.002
   Mishra D, 2012, TECH TECHNOL EDUC MA, V7, P122
   Mishra D, 2011, J SOFTW MAINT EVOL-R, V23, P549, DOI 10.1002/smr.528
   Mishra D, 2009, HUM FACTORS ERGONOM, V19, P438, DOI 10.1002/hfm.20164
   Nugroho ASE., 2022, INT J EC BUS ACCOUNT, V6, P65, DOI [10.29040/ijebar.v6i1.2976, DOI 10.29040/IJEBAR.V6I1.2976]
   Okubo Y., 1997, BIBLIOMETRIC INDICAT
   Özkan D, 2019, CYBERN INF TECHNOL, V19, P17, DOI 10.2478/cait-2019-0033
   Ozkan N., 2022, 2022 3 INT INF SOFTW, P1
   Ozkan N, 2022, FED CONF COMPUT SCI, P883, DOI 10.15439/2022F143
   Ozkan N, 2020, 2020 TURKISH NATIONAL SOFTWARE ENGINEERING SYMPOSIUM (UYMS), P120, DOI 10.1109/uyms50627.2020.9247073
   Palokangas J., 2013, THESIS
   Petersen K, 2008, Systematic Mapping Studies in Software Engineering
   Pham MT, 2014, RES SYNTH METHODS, V5, P371, DOI 10.1002/jrsm.1123
   Rolland K., 2016, Thirty Seventh International Conference on Information Systems, Thirty Seventh International Conference on Information Systems, P1
   Sarrami-Foroushani P, 2015, CTS-CLIN TRANSL SCI, V8, P77, DOI 10.1111/cts.12188
   Schwaber K., 2017, SCRUM GUIDE 2017 NO
   SEBoK, 2022, OV SWEBOK GUID
   Siakas Kerstin V., 2007, Software Process: Improvement and Practice, V12, P597, DOI 10.1002/spip.344
   Smite D, 2020, LECT NOTES BUS INF P, V383, P145, DOI 10.1007/978-3-030-49392-9_10
   Snyder H, 2019, J BUS RES, V104, P333, DOI 10.1016/j.jbusres.2019.07.039
   Tarhan A, 2014, INFORM SOFTWARE TECH, V56, P477, DOI 10.1016/j.infsof.2013.12.002
   Tarwani S, 2016, INFORM-J COMPUT INFO, V40, P415
   Tavares B.G., 2017, J COMMUN SOFTW SYS, V13, P1, DOI [DOI 10.24138/jcomss.v13i1.241, 10.24138/jcomss.v13i1.241, DOI 10.24138/JCOMSS.V13I1.241]
   van Eck NJ, 2010, SCIENTOMETRICS, V84, P523, DOI 10.1007/s11192-009-0146-3
   VersionOne, 2022, ANN STATE AGILE REPO
   Wallin JA, 2005, BASIC CLIN PHARMACOL, V97, P261, DOI 10.1111/j.1742-7843.2005.pto_139.x
   Yildiz M., 2003, INT C EXTR PROGR AG, P357
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
NR 63
TC 0
Z9 0
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2024
VL 36
IS 5
DI 10.1002/smr.2601
EA AUG 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PW3G9
UT WOS:001040351500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Yin, Y
   Shi, YC
   Zhao, YH
   Wahab, F
AF Yin, Ying
   Shi, Yucen
   Zhao, Yuhai
   Wahab, Fazal
TI Multi-graph learning-based software defect location
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE deep learning; multi-graph learning; program dependency graph; software
   defect location
ID BUG LOCALIZATION; INFORMATION
AB Software quality is key to the success of software systems. Modern software systems are growing in their worth based on industry needs and becoming more complex, which inevitably increases the possibility of more defects in software systems. Software repairing is time-consuming, especially locating the source files related to specific software defect reports. To locate defective source files more quickly and accurately, automated software defect location technology is generated and has a huge application value. The existing deep learning-based software defect location method focuses on extracting the semantic correlation between the source file and the corresponding defect reports. However, the extensive code structure information contained in the source files is ignored. To this end, we propose a software defect location method, namely, multi-graph learning-based software defect location (MGSDL). By extracting the program dependency graphs for functions, each source file is converted into a graph bag containing multiple graphs (i.e., multi-graph). Further, a multi-graph learning method is proposed, which learns code structure information from multi-graph to establish the semantic association between source files and software defect reports. Experiments' results on four publicly available datasets, AspectJ, Tomcat, Eclipse UI, and SWT, show that MGSDL improves on average 3.88%, 5.66%, 13.23%, 9.47%, and 3.26% over the competitive methods in five evaluation metrics, rank@10, rank@5, MRR, MAP, and AUC, respectively.
C1 [Yin, Ying; Shi, Yucen; Zhao, Yuhai; Wahab, Fazal] Northeastern Univ, Sch Comp Sci & Technol, Shenyang 110819, Peoples R China.
   [Yin, Ying; Shi, Yucen; Zhao, Yuhai; Wahab, Fazal] Northeastern Univ, Key Lab Intelligent Comp Med Image, Minist Educ, Shenyang 110819, Peoples R China.
C3 Northeastern University - China; Northeastern University - China
RP Zhao, YH (corresponding author), Northeastern Univ, Sch Comp Sci & Technol, Shenyang 110819, Peoples R China.
EM zhaoyuhai@mail.neu.edu.cn
RI Wahab, Fazal/IAL-9462-2023
OI Wahab, Fazal/0000-0001-9684-3392
FU National Natural Science Foundation of China [62032013]; Fundamental
   Research Funds for the Central Universities [N2116017]
FX ACKNOWLEDGMENTS This project was supported by the National Natural
   Science Foundation of China (62032013) and the Fundamental Research
   Funds for the Central Universities (N2116017).
CR Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   Arcega L, 2019, SOFTW SYST MODEL, V18, P3551, DOI 10.1007/s10270-019-00727-y
   Gao XY, 2022, PROC INT CONF SOFTW, P73, DOI 10.1145/3510003.3510232
   Grohe M, 2020, PODS'20: PROCEEDINGS OF THE 39TH ACM SIGMOD-SIGACT-SIGAI SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P1, DOI 10.1145/3375395.3387641
   Huo X., 2016, IJCAI, P1606
   Jiayu W., 2019, LEVERAGING LABEL INF
   Kim Y, 2014, ARXIV PREPRINT ARXIV, DOI 10.3115/v1/D14-1181
   Lei Y, 2022, IEEE T RELIAB, V71, P264, DOI 10.1109/TR.2022.3140453
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Rath M, 2019, SOFTWARE QUAL J, V27, P1315, DOI 10.1007/s11219-019-09445-6
   Shao YX, 2020, KNOWL-BASED SYST, V196, DOI 10.1016/j.knosys.2020.105742
   Shi YC, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P722, DOI 10.1145/3540250.3549087
   Weng W, 2019, IEEE ACCESS, V7, P127427, DOI 10.1109/ACCESS.2019.2931451
   Wenjie Liu, 2019, Journal of Software, V14, P457, DOI 10.17706/jsw.14.10.457-478
   Wu J, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3953
   Wu J, 2017, IEEE T CYBERNETICS, V47, P818, DOI 10.1109/TCYB.2016.2527239
   Wu J, 2014, IEEE T KNOWL DATA EN, V26, P2382, DOI 10.1109/TKDE.2013.2297923
   Xiao Y., 2018, AS PAC SOFTW ENG C
   Xiao Y., 2022, ABS221109810 CORR
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Yin Y, 2016, APPL SCI-BASEL, V6, DOI 10.3390/app6060160
   Zhang T, 2022, FRONT INFORM TECH EL, V23, P661, DOI 10.1631/FITEE.2230000
   Zhang T, 2021, IEEE T SOFTWARE ENG, V47, P2590, DOI 10.1109/TSE.2019.2956941
   Zhang T, 2019, INT J SOFTW ENG KNOW, V29, P457, DOI 10.1142/S0218194019500207
   Zhao YH, 2021, KDD '21: PROCEEDINGS OF THE 27TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2327, DOI 10.1145/3447548.3467339
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 27
TC 0
Z9 0
U1 2
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2024
VL 36
IS 4
DI 10.1002/smr.2552
EA MAR 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MU0E5
UT WOS:000959075400001
DA 2024-07-18
ER

PT J
AU Taskeen, A
   Khan, SUR
   Felix, EA
AF Taskeen, Anam
   Khan, Saif Ur Rehman
   Felix, Ebubeogu Amarachukwu
TI A research landscape on software defect prediction
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE software defect prediction; tertiary study; systematic literature
   review; systematic mapping study
ID MACHINE LEARNING TECHNIQUES; FAULT PREDICTION; METRICS; VALIDATION;
   GUIDELINES; REVIEWS
AB Software defect prediction is the process of identifying defective files and modules that need rigorous testing. In the literature, several secondary studies including systematic reviews, mapping studies, and review studies have been reported. However, no research work such as a tertiary study that combines secondary studies has focused on providing a landscape of software defect prediction useful to understand the body of knowledge. Motivated by this, we intend to perform a tertiary study by following a systematic literature review protocol to provide a research landscape of the targeted domain. We synthesize the quality of the secondary studies and investigate the employed techniques and the performance evaluation measures for evaluating the software defect prediction model. Furthermore, this study aims at exploring different datasets employed in the reported experimentation. Moreover, the current study intends at highlighting the research trends, gaps, and opportunities in the targeted research domain. The results indicate that none of the reported defect prediction techniques can be regarded as the best; however, the reported techniques performed better in different testing situations. In addition, machine learning (ML)-based techniques perform better than traditional statistical techniques mainly due to the potential of discovering the defects and generating generalized results. Moreover, the obtained results highlight the need for further work in the domain of ML-based techniques. Furthermore, publicly available datasets should be considered for experimentation or replication purposes. The potential future work can focus on data quality, ethical ML, cross-project defect prediction, early defect prediction process, class imbalance problem, and model overfitting.
C1 [Taskeen, Anam; Khan, Saif Ur Rehman] COMSATS Univ Islamabad CUI, Dept Comp Sci, Pk Rd, Islamabad 45550, Pakistan.
   [Felix, Ebubeogu Amarachukwu] Univ Malaya, Dept Software Engn, Kuala Lumpur, Malaysia.
C3 COMSATS University Islamabad (CUI); Universiti Malaya
RP Khan, SUR (corresponding author), COMSATS Univ Islamabad CUI, Dept Comp Sci, Pk Rd, Islamabad 45550, Pakistan.
EM saif_rehman@comsats.edu.pk
RI Khan, Saif Ur Rehman/A-6299-2013
OI Khan, Saif Ur Rehman/0000-0002-9643-6858
CR Aftab S, 2018, INT J ADV COMPUT SC, V9, P143
   Akimova EN, 2021, MATHEMATICS-BASEL, V9, DOI 10.3390/math9111180
   Akiyama F., 1972, Information Processing 71 Proceedings of the IFIP Congress 1971 Volume 1, P353
   Ali A. R., 2020, Pharm Formul Des Pract, P1, DOI DOI 10.5772/INTECHOPEN.90738
   Anwer Faiza, 2017, International Journal of Modern Education and Computer Science, V9, P26, DOI 10.5815/ijmecs.2017.12.04
   Ashraf Sara, 2017, International Journal of Modern Education and Computer Science, V9, P12, DOI 10.5815/ijmecs.2017.07.02
   Ashraf Sara, 2017, International Journal of Modern Education and Computer Science, V9, P58, DOI 10.5815/ijmecs.2017.11.07
   Atif F., 2021, INT C ADV INFORM NE, P298
   Aziz SR, 2020, IEEE ACCESS, V8, P170548, DOI 10.1109/ACCESS.2020.3022087
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bezerra RMM, 2015, INT SYMP EMP SOFTWAR, P132, DOI 10.1109/ESEM.2015.7321213
   Bhandari Kirti, 2021, 2021 2nd International Conference on Secure Cyber Computing and Communications (ICSCCC), P6, DOI 10.1109/ICSCCC51823.2021.9478119
   Bicacro E, 2012, 2012 9TH IEEE INTERNATIONAL SYMPOSIUM ON BIOMEDICAL IMAGING (ISBI), P134, DOI 10.1109/ISBI.2012.6235502
   Bisht B, 2019, PROCEEDINGS OF THE 2019 6TH INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P815
   Booth AM, 2010, INT J TECHNOL ASSESS, V26, P470, DOI 10.1017/S0266462310000978
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Catal C, 2012, ACTA POLYTECH HUNG, V9, P193
   Catal C, 2011, EXPERT SYST APPL, V38, P4626, DOI 10.1016/j.eswa.2010.10.024
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Caulo M, 2020, EUROMICRO CONF PROC, P429, DOI 10.1109/SEAA51224.2020.00075
   Challagulla VUB, 2008, INT J ARTIF INTELL T, V17, P389, DOI 10.1142/S0218213008003947
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Das Dipta, 2020, RACS '20: Proceedings of the International Conference on Research in Adaptive and Convergent Systems, P188, DOI 10.1145/3400286.3418263
   Felix EA, 2017, IEEE ACCESS, V5, P21524, DOI 10.1109/ACCESS.2017.2759180
   Fenton N., 2007, 3 INT WORKSH PRED MO, P2
   Fenton N., 2001, IEEE T SOFTWARE ENG, V44, P1
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Goel L, 2017, 2017 4TH IEEE UTTAR PRADESH SECTION INTERNATIONAL CONFERENCE ON ELECTRICAL, COMPUTER AND ELECTRONICS (UPCON), P680, DOI 10.1109/UPCON.2017.8251131
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   GOODMAN LA, 1961, ANN MATH STAT, V32, DOI [DOI 10.1214/AOMS/1177705148, 10.1214/aoms/1177705148]
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hassan F., 2018, TECHNICAL J, V23, P63
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Jadhav R, 2019, PROCEEDINGS OF THE 2019 6TH INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P1014
   Jiarpakdee J, 2021, IEEE WORK CONF MIN S, P432, DOI 10.1109/MSR52588.2021.00055
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Jureczko M., 2011, Software Engineering: An International Journal, V1, P86
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Khan MU, 2019, J SYST SOFTWARE, V149, P396, DOI 10.1016/j.jss.2018.12.018
   Khatri Y, 2022, INNOV SYST SOFTW ENG, V18, P263, DOI 10.1007/s11334-020-00380-5
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kumar S, 2017, INDIAN J ECON DEV, V13, P65, DOI 10.5958/2322-0430.2017.00009.9
   Li LJ, 2019, IEEE I CONF COMP VIS, P10312, DOI 10.1109/ICCV.2019.01041
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Mahmood Z, 2018, INFORM SOFTWARE TECH, V99, P148, DOI 10.1016/j.infsof.2018.02.003
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Matloob F, 2021, INTELL AUTOM SOFT CO, V29, P403, DOI 10.32604/iasc.2021.017562
   Matloob F, 2021, IEEE ACCESS, V9, P98754, DOI 10.1109/ACCESS.2021.3095559
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meiliana, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON CYBERNETICS AND COMPUTATIONAL INTELLIGENCE (CYBERNETICSCOM), P19, DOI 10.1109/CYBERNETICSCOM.2017.8311708
   Memon MA, 2018, INT J ADV COMPUT SC, V9, P451
   Merugula S., 2016, INT J COMPUTER SCI E, V7, P437
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Murillo-Morera J., 2015, CIBSE 2015 18 IBERO, P446
   Omri S, 2020, P IEEE ACM 42 INT C, P209
   Özakinci R, 2018, J SYST SOFTWARE, V144, P216, DOI 10.1016/j.jss.2018.06.025
   Palatse V.G., 2020, Perspect. Commun. Embed.-Syst. Signal-Process.-PiCES, V4, P56
   Pandey SK, 2021, EXPERT SYST APPL, V172, DOI 10.1016/j.eswa.2021.114595
   Pandit MBR, 2019, TENCON IEEE REGION, P284, DOI [10.1109/TENCON.2019.8929661, 10.1109/tencon.2019.8929661]
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Ponnala R., 2021, SOLID STATE TECHNOL, V64, P6541
   Prasad M.C. M., 2015, International Journal of Database Theory and Application, V8, P179, DOI [DOI 10.14257/IJDTA.2015.8.3.15, 10.14257/ijdta.2015.8.3, DOI 10.14257/IJDTA.2015.8.3]
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Raghava YV., 2019, INT J INNOVATIVE TEC, V8, P3431
   Rathore S.S., 2012, 2012 CSI 6 INT C SOF, P1
   Rathore SS, 2019, ARTIF INTELL REV, V51, P255, DOI 10.1007/s10462-017-9563-5
   Roscher R, 2020, IEEE ACCESS, V8, P42200, DOI 10.1109/ACCESS.2020.2976199
   Saha S., 2017, INDIAN J SCI TECHNOL, V10, P1, DOI [DOI 10.17485/ijst/2017/v10i25/114443, 10.17485/ijst/2017/v10i25/114443]
   Sandhu PS, 2010, INT CONF COMPUT AUTO, P281, DOI 10.1109/ICCAE.2010.5451695
   Santos G, 2020, PROCEEDINGS OF THE 19TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, SBOS 2020, DOI 10.1145/3439961.3439979
   SHEN VY, 1985, IEEE T SOFTWARE ENG, V11, P317, DOI 10.1109/TSE.1985.232222
   SHERER SA, 1995, J SYST SOFTWARE, V29, P97, DOI 10.1016/0164-1212(94)00051-N
   Shin J., 2021, ARXIV PREPRINT ARXIV
   Shrikanth NC, 2021, PROC INT CONF SOFTW, P448, DOI 10.1109/ICSE43902.2021.00050
   Shrikanth NC, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P182, DOI 10.1145/3377813.3381367
   Singh Ajmer, 2018, Procedia Computer Science, V132, P993, DOI 10.1016/j.procs.2018.05.115
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Thota M. K., 2020, Int. J. ApplSci Eng., V17, P331, DOI [DOI 10.6703/IJASE.20201217(4).331, DOI 10.6703/IJASE.202012_17(4).331]
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Verma R., 2012, Proceedings of the 2012 International Conference on Recent Advances in Computing and Software Systems (RACSS), P311, DOI 10.1109/RACSS.2012.6212686
   Wahono R. S., 2015, Journal of Software Engineering, V1, P1
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wohlin C, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106366
   Yang Yuzhe, 2020, NEURIPS, V33, P19290
   Yao JX, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106664
   Yaqoob R., 2021, IET Conference Proceedings, V2021, P131, DOI 10.1049/icp.2021.2421
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 99
TC 0
Z9 0
U1 8
U2 31
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2023
VL 35
IS 12
DI 10.1002/smr.2549
EA MAR 2023
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ4E7
UT WOS:000950482500001
DA 2024-07-18
ER

PT J
AU Akbar, MA
   Khan, AA
   Mehmood, S
   Smolander, K
AF Akbar, Muhammad Azeem
   Khan, Arif Ali
   Mehmood, Sajjad
   Smolander, Kari
TI Successful management of cloud-based global software development
   projects: A multivocal study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE cloud-based global software development; multivocal review; project
   management; success factors
ID REQUIREMENTS CHANGE MANAGEMENT; SYSTEMATIC LITERATURE; PROCESS
   IMPROVEMENT; GUIDELINES; DECISION; REVIEWS; MODEL
AB Software industry is continuously exploring better ways to develop applications. A new phenomenon to achieve this is cloud-based global software development (CGSD), which refers to the adoption of cloud computing services by organizations to support global software development projects. The CGSD approach affects the strategic and operational aspects of the way projects are managed. The objective of the study is to identify the success factors which contribute to management of CGSD projects. We carried out a multivocal literature review (MLR) to identify the success factors from the state-of-the-art and the state-of-the-practice in project management of CGSD projects. We identified 32 success factors that contribute to the management of CGSD projects. The findings of MLR indicate that time to market, continuous development, financial restructuring, and scalability are the most critical success factors for CGSD. Moreover, the findings of the study show that there is a positive correlation between the success factors reported in both formal literature and industry based gray literature. The findings of this study can assist the practitioners to develop the strategies needed for effective project management of CGSD projects.
C1 [Akbar, Muhammad Azeem; Smolander, Kari] LUT Univ, Dept Software Engn, Lappeenranta 53851, Finland.
   [Khan, Arif Ali] Univ Oulu, M3S Empir Software Engn Res Unit, Oulu, Finland.
   [Mehmood, Sajjad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
C3 Lappeenranta-Lahti University of Technology LUT; University of Oulu;
   King Fahd University of Petroleum & Minerals
RP Akbar, MA (corresponding author), LUT Univ, Dept Software Engn, Lappeenranta 53851, Finland.
EM azeem.akbar@lut.fi
RI khan, Arif/HMV-3165-2023; Smolander, Kari/B-4581-2015
CR Adams J, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0337-y
   Adams RJ, 2017, INT J MANAG REV, V19, P432, DOI 10.1111/ijmr.12102
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Akbar, 2022, SRCMIMM SOFTWARE REQ, P1
   Akbar MA., 2020, PRIORITIZATION BASED, V95
   Akbar MA, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106894
   Akbar MA, 2020, IEEE ACCESS, V8, P191242, DOI 10.1109/ACCESS.2020.3031365
   Akbar MA, 2020, IEEE ACCESS, V8, P185290, DOI 10.1109/ACCESS.2020.3030124
   Akbar MA, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2275
   Akbar MA, 2019, J COMPUT LANG, V51, P112, DOI 10.1016/j.cola.2018.12.005
   Akbar MA, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2207
   Akbar MA, 2019, IEEE ACCESS, V7, P76985, DOI 10.1109/ACCESS.2019.2918552
   Al-Rousan T, 2015, INT J CLOUD APPL COM, V5, P58, DOI 10.4018/ijcac.2015010105
   Alajrami S., 2016, PRESENTED INT C PROD
   Alajrami S., 2017, International Conference on Software Engineering Research, Management and Applications, P179, DOI DOI 10.2991/IJNDC.2017.5.4.4
   Ali S, 2016, J SYST SOFTWARE, V117, P402, DOI 10.1016/j.jss.2016.03.069
   [Anonymous], 2010, The SAGE handbook of grounded theory
   [Anonymous], 2011, Application Management, DOI DOI 10.1007/978-3-8349-6492-2_2
   Azeem Akbar M., 2021, BARRIERS MANAGING CL, P1
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Chang YB, 2012, MIS QUART, V36, P1043
   Cocco L, 2012, EUROMICRO CONF PROC, P446, DOI 10.1109/SEAA.2012.67
   Dhar S, 2012, MANAG RES REV, V35, P664, DOI 10.1108/01409171211247677
   Dubal MM., STUDY GREY LIT, P265
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Goles T, 2008, INFORM SYST FRONT, V10, P179, DOI 10.1007/s10796-008-9072-9
   Guide A., 2001, The project management body of knowledge (pmbok guide)
   Haig-Smith T., 2013, ISSUES INFORM SCI IN, V13, P909
   Hao L., 2019, IOP C SERIES MAT SCI, V569, DOI [10.1088/1757-899X/569/5/052077, DOI 10.1088/1757]
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Keshta I, 2017, IEEE ACCESS, V5, P24162, DOI 10.1109/ACCESS.2017.2764490
   Khan AA, 2018, IET SOFTW, V12, P333, DOI 10.1049/iet-sen.2018.0010
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Khan SU, 2011, J SYST SOFTWARE, V84, P686, DOI 10.1016/j.jss.2010.12.010
   Khan SU., 2011, SOFTWARE OUTSOURCING
   Lacity MC, 2009, J STRATEGIC INF SYST, V18, P130, DOI 10.1016/j.jsis.2009.06.002
   Leimeister S., 2010, BUSINESS PERSPECTIVE, P56
   Lian JW, 2014, INT J INFORM MANAGE, V34, P28, DOI 10.1016/j.ijinfomgt.2013.09.004
   Liu S, 2014, INT J PROJ MANAG, V32, P1494, DOI 10.1016/j.ijproman.2014.01.012
   McGrath, 2006, REV GREY LIT DRUG PR
   Mell P., 2011, US DEP COMMERCE SPEC, V800, DOI [DOI 10.6028/NIST.SP.800-145, 10.6028/NIST.SP.800-145]
   Mell P, 2010, COMMUN ACM, V53, P50
   Niazi M, 2016, INT J PROJ MANAG, V34, P1553, DOI 10.1016/j.ijproman.2016.08.008
   Niazi M, 2016, INFORM SOFTWARE TECH, V80, P1, DOI 10.1016/j.infsof.2016.08.002
   Oza N, 2013, LECT NOTES COMPUT SC, V7983, P229, DOI 10.1007/978-3-642-39259-7_19
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Ramasubbu N, 2014, IEEE T SOFTWARE ENG, V40, P235, DOI 10.1109/TSE.2013.58
   Rieger P., 2013, CLOUD COMPUTING BANK
   Sch?pfel J., 2010, ACCESS EUROPEAN GREY
   Schneider S, 2016, J INF TECHNOL-UK, V31, P1, DOI 10.1057/jit.2014.25
   Shameem M, 2017, 2017 24TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE WORKSHOPS (APSECW), P17, DOI 10.1109/APSECW.2017.22
   White VJ, 2001, J INFORM SCI, V27, P357, DOI 10.1177/016555150102700601
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Yara P, 2009, LECT NOTES BUS INF P, V35, P81
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 57
TC 0
Z9 0
U1 3
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2024
VL 36
IS 4
DI 10.1002/smr.2527
EA DEC 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MU0E5
UT WOS:000904018600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Minhas, NM
   Koppula, TR
   Petersen, K
   Börstler, J
AF Minhas, Nasir Mehmood
   Koppula, Thejendar Reddy
   Petersen, Kai
   Borstler, Jurgen
TI Using goal-question-metric to compare research and practice perspectives
   on regression testing
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE goals; GQM; measures; metrics; objectives; regression testing
ID TEST-CASE PRIORITIZATION; SELECTION; FAULTS; TIME
AB Regression testing is challenging because of its complexity and the amount of effort and time it requires, especially in large-scale environments with continuous integration and delivery. Regression test selection and prioritization techniques have been proposed in the literature to address the regression testing challenges, but adoption rates of these techniques in industry are not encouraging. One of the possible reasons could be the disparity in the regression testing goals in industry and literature. This work compares the research perspective to industry practice on regression testing goals, corresponding information needs, and metrics required to evaluate these goals. We have conducted a literature review of 44 research papers and a survey with 56 testing practitioners. The survey comprises 11 interviews and 45 responses to an online questionnaire. We identified that industry and research accentuate different regression testing goals. For instance, the literature emphasizes increasing the fault detection rates of test suites and early identification of critical faults. In contrast, the practitioners' focus is on test suite maintenance, controlled fault slippage, and awareness of changes. Similarly, the literature suggests maintaining information needs from test case execution histories to evaluate regression testing techniques based on various metrics, whereas, at large, the practitioners do not use the metrics suggested in the literature. To bridge the research and practice gap, based on the literature and survey findings, we have created a goal-question-metric (GQM) model that maps the regression testing goals, associated information needs, and metrics from both perspectives. The GQM model can guide researchers in proposing new techniques closer to industry contexts. Practitioners can benefit from information needs and metrics presented in the literature and can use GQM as a tool to follow their regression testing goals.
C1 [Minhas, Nasir Mehmood; Koppula, Thejendar Reddy; Petersen, Kai; Borstler, Jurgen] Blekinge Inst Technol, Dept Software Engn, S-37179 Karlskrona, Blekinge, Sweden.
   [Petersen, Kai] Univ Appl Sci Flensburg, Flensburg, Germany.
C3 Blekinge Institute Technology
RP Minhas, NM (corresponding author), Blekinge Inst Technol, Dept Software Engn, S-37179 Karlskrona, Blekinge, Sweden.
EM nasir.mehmood.minhas@bth.se
RI Minhas, Nasir Mehmood/AAP-4624-2021; Börstler, Jürgen/IWE-4001-2023
OI Minhas, Nasir Mehmood/0000-0001-8177-4355; Börstler,
   Jürgen/0000-0003-0639-4234
FU ELLIIT: the Swedish Strategic Research Area in IT and Mobile
   Communications
FX This work has in parts been supported by ELLIIT: the Swedish Strategic
   Research Area in IT and Mobile Communications.
CR Acharya AS, 2013, INDIAN J MED SPEC, V4, P330, DOI 10.7713/ijms.2013.0032
   Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Askarunisa MA, 2010, INFOCOMP, V9, P43
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Bertolino A, 2020, PROC INT CONF SOFTW, P1, DOI 10.1145/3377811.3380369
   bin Ali N, 2019, EMPIR SOFTW ENG, V24, P2020, DOI 10.1007/s10664-018-9670-1
   Brahneborg D, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P618, DOI 10.1109/QRS-C.2017.117
   Campos HD, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P34, DOI 10.1145/3131151.3131170
   Chaurasia G., 2015, 2015 IEEE STUD C ENG, P1, DOI DOI 10.1109/SCES.2015.7506447
   Chen LC, 2018, IEEE INT CONF SOFTW, P58, DOI 10.1109/ICST.2018.00016
   Chi JL, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110539
   Dalal S., 2018, International Journal of Advanced Research in Computer Science, V9, P499, DOI [10.26483/ijarcs.v9i1.5424, DOI 10.26483/IJARCS.V9I1.5424]
   DALAL SR, 1994, IEEE T SOFTWARE ENG, V20, P318, DOI 10.1109/32.277579
   Damm L.-O., 2006, Software Process Improvement and Practice, V11, P47, DOI 10.1002/spip.253
   de Castro-Cabrera MD, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P2005, DOI 10.1145/3341105.3374036
   Do H, 2006, EMPIR SOFTW ENG, V11, P33, DOI 10.1007/s10664-006-5965-8
   Do H., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering (SIGSOFT '08/FSE-16), P71
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P169, DOI 10.1109/METRIC.2001.915525
   Elbaum S., 2006, TRUNLCSE20060004 U N
   Engstrom Emelie, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P75, DOI 10.1109/ICST.2010.40
   Engström E, 2010, LECT NOTES COMPUT SC, V6156, P3, DOI 10.1007/978-3-642-13792-1_3
   Eusgeld I., 2008, ADV LECT
   Gencel C, 2013, J SYST SOFTWARE, V86, P3091, DOI 10.1016/j.jss.2013.07.022
   Harrold MJ, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P99, DOI 10.1109/FOSM.2008.4659253
   Hasnain M, 2020, KSII T INTERNET INF, V14, P1861, DOI 10.3837/tiis.2020.05.001
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Jafrin Samia, 2016, International Journal of Modern Education and Computer Science, V8, P33, DOI 10.5815/ijmecs.2016.04.05
   Jangra A, 2011, COMM COM INF SC, V169, P626
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jung-Hyun Kwon, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P19, DOI 10.1109/APSEC.2014.12
   Kapur PK., 2017, J Indian Soc Prob Stat, V18, P19, DOI DOI 10.1007/S41096
   Kavitha R., 2010, INT J COMPUT SCI ENG, V2, P1462, DOI 10.24297/ijct.v9i3.6814
   Kayes I, 2015, INNOV SYST SOFTW ENG, V11, P261, DOI 10.1007/s11334-015-0255-5
   Kayes M. I., 2011, 2011 3rd International Conference on Electronics Computer Technology (ICECT 2011), P48, DOI 10.1109/ICECTECH.2011.5941954
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B., 2002, ACM SIGSOFT Softw. Eng. Notes, V27, P17
   Kumar Harish, 2015, International Journal of Modern Education and Computer Science, V7, P8, DOI 10.5815/ijmecs.2015.07.02
   Lacey A., 2001, Qualitative data analysis, Leicester: Trent Focus for Research and Development in Primary Health Care
   Linaker J., 2015, Guidelines for Conducting Surveys in Software Engineering
   Lu YF, 2016, PROC INT CONF SOFTW, P535, DOI 10.1145/2884781.2884874
   Manan MSA, 2021, 5TH INTERNATIONAL CONFERENCE ON ALGORITHMS, COMPUTING AND SYSTEMS, ICACS 2021, P55, DOI 10.1145/3490700.3490710
   Minhas NM, 2020, INFORM SOFTWARE TECH, V120, DOI 10.1016/j.infsof.2019.106254
   Minhas NM, 2017, 2017 24TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE WORKSHOPS (APSECW), P25, DOI 10.1109/APSECW.2017.23
   Muthusamy T., 2014, International Journal of Applied Information Systems (IJAIS), V6, P21, DOI [10.5120/ijais14-451081, DOI 10.5120/IJAIS14-451081]
   Nayak S, 2016, 2016 3RD INTERNATIONAL CONFERENCE ON RECENT ADVANCES IN INFORMATION TECHNOLOGY (RAIT), P657, DOI 10.1109/RAIT.2016.7507977
   Pan RQ, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10066-6
   Lima JAP, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106268
   Pravin Albert, 2013, Journal of Computer Science, V9, P654, DOI 10.3844/jcssp.2013.654.659
   Rahmani A, 2021, INT J ADV COMPUT SC, V12, P253
   Rehan M, 2021, SECUR COMMUN NETW, V2021, DOI 10.1155/2021/5834807
   Rosero RH, 2016, INT J SOFTW ENG KNOW, V26, P675, DOI 10.1142/S0218194016300013
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Samad A, 2021, INT J ADV COMPUT SC, V12, P655
   Shrivastava AK, 2020, INT J QUAL RELIAB MA, V37, P1087, DOI 10.1108/IJQRM-07-2019-0227
   Skoglund M, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P72, DOI 10.1109/ISESE.2005.1541816
   Srikanth H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P62, DOI 10.1109/ISESE.2005.1541815
   Srivastava A., 2002, ACM SIGSOFT INT S SO, P97
   Usman M, 2018, J SYST SOFTWARE, V146, P286, DOI 10.1016/j.jss.2018.09.054
   Wang RC, 2016, MATH PROBL ENG, V2016, DOI 10.1155/2016/8343910
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   White L, 2004, PROC IEEE INT CONF S, P18, DOI 10.1109/ICSM.2004.1357786
   Wikstrand G, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P299, DOI 10.1109/ICST.2009.42
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Xinye Tang, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321218
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   Zachariah B, 2015, ANN OPER RES, V235, P771, DOI 10.1007/s10479-015-1959-5
   Zhao XB, 2015, P INT COMP SOFTW APP, P542, DOI 10.1109/COMPSAC.2015.154
NR 80
TC 0
Z9 0
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2023
VL 35
IS 2
AR e2506
DI 10.1002/smr.2506
EA SEP 2022
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8F6FF
UT WOS:000852963100001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Ali, A
   Maghawry, HA
   Badr, N
AF Ali, Amira
   Maghawry, Huda Amin
   Badr, Nagwa
TI Performance testing as a service using cloud computing environment: A
   survey
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE cloud testing; performance testing; performance testing as a service;
   resource utilization; software testing; testing-as-a-service
ID SOFTWARE
AB Cloud testing is gaining much attention in both academia and industry as an emerging concept in the field of software testing. Cloud testing implies leveraging the resources of the cloud computing environment to overcome deficiencies of the traditional testing approaches. As a result, testing-as-a-service (TaaS) is introduced as a service model that conducts all testing activities in a fully automated manner using cloud-based resources. Performance testing is a type of software testing that validates the performance characteristics of the application under test (AUT) when subjected to different workloads during its operation. Performance characteristics include throughput, response time, and resource utilization of the AUT under a certain workload. This paper focuses on reviewing the literature related to the provision of performance testing as a service (P-TaaS). In this study, we survey the previous work related to cloud-based performance testing. We show the strengths and weaknesses of the current research. Besides, we compare the P-TaaS with the traditional performance testing methodologies. A detailed discussion of the benefits and challenges of P-TaaS is introduced along with identifying the research gaps and the future directions that can be adopted.
C1 [Ali, Amira; Maghawry, Huda Amin; Badr, Nagwa] Ain Shams Univ, Fac Comp & Informat Sci, Cairo, Egypt.
C3 Egyptian Knowledge Bank (EKB); Ain Shams University
RP Ali, A (corresponding author), Ain Shams Univ, Fac Comp & Informat Sci, Cairo, Egypt.
EM amiraaly@cis.asu.edu.eg
RI Amin, Huda/ABI-1996-2020
OI Amin, Huda/0000-0001-5550-5717
CR Ahmad AA, 2019, J CLOUD COMPUT-ADV S, V8, DOI 10.1186/s13677-019-0134-y
   Ahmad AA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P555, DOI 10.1109/QRS-C.2017.94
   Ajienka N, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2267
   akebia, About us
   Amazon Web Services, About us
   [Anonymous], About Us
   AppPerfect, US
   Arslan M, 2015, INT CONF SOFTW ENG, P140, DOI 10.1109/ICSESS.2015.7339023
   AWS Elastic Beanstalk, US
   Azure Load Testing, US
   Bertolino A, 2020, IET SOFTW, V14, P553, DOI 10.1049/iet-sen.2019.0140
   Bertolino A, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3331447
   Bipinchandra GKA., 2014, ARXIV
   BlazeMeter, US
   Chawla P, 2019, SOFTWARE PRACT EXPER, V49, P1307, DOI 10.1002/spe.2708
   Chinenyeze SJ, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1848
   Coombs N, 2020, BRIT J SOCIOL, V71, P520, DOI 10.1111/1468-4446.12739
   Dehlinger J., 2011, Proceedings of the Workshop on Mobile Software Engineering, P29
   Dhillon S, 2015, SOFTWARE PRACT EXPER, V45, P1331, DOI 10.1002/spe.2286
   Duarte A., 2006, P 2006 WORKSHOP PARA, P61
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Farooq SU, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1883
   Ferreira CHG, 2016, IEEE WORLD CONGR SER, P118, DOI 10.1109/SERVICES.2016.25
   Floss B, 2013, 2013 IEEE SEVENTH INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2013), P421, DOI 10.1109/SOSE.2013.97
   Gallego RA, 2000, IEEE T POWER SYST, V15, P490, DOI 10.1109/59.867130
   Gao J., 2012, 2012 IEEE 4th International Conference on Cloud Computing Technology and Science (CloudCom). Proceedings, P464, DOI 10.1109/CloudCom.2012.6427555
   Gao J, 2013, 2013 IEEE SEVENTH INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2013), P212, DOI 10.1109/SOSE.2013.66
   Garousi V, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2251
   Garousi V, 2013, J SYST SOFTWARE, V86, P1354, DOI 10.1016/j.jss.2012.12.051
   Ghaith S, 2016, SOFTW TEST VERIF REL, V26, P4, DOI 10.1002/stvr.1573
   Girardon G, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1989, DOI 10.1145/3341105.3374004
   Gmail, US
   Google App Engine, US
   Guo CN, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P21, DOI 10.1109/QRS-C.2018.00018
   HP, LOADRUNNER
   Ibrahim A., 2014, INT J INTELL COMPUT, V14, P1, DOI [10.21608/ijicis.2014.15770, DOI 10.21608/IJICIS.2014.15770]
   Incki Koray, 2012, 2012 International Conference on Software Security and Reliability Companion, P18, DOI 10.1109/SERE-C.2012.32
   Iyer GN, 2013, INT CONF QUAL SOFTW, P135, DOI 10.1109/QSIC.2013.65
   JMeter, About us
   Kaner C., 2004, KEYNOTE INT C SOFTWA
   Kaur M, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND AUTOMATION (ICCCA), P742, DOI 10.1109/CCAA.2016.7813826
   Laarhoven P. J. M., 1987, Simulated Annealing, DOI [10.1007/978-94-015-7744-1, DOI 10.1007/978-94-015-7744-1_2]
   Lampe Pawel, 2017, SMART INNOVATIONS EN, P25
   Lanui A, 2019, ASIA PAC SOFWR ENG, P158, DOI 10.1109/APSEC48747.2019.00030
   Lee SJ, 2018, J INF SCI ENG, V34, P631, DOI [10.6688/JISE.2018.34.3.4, 10.6688/JISE.201805_34(3).0004]
   Li DG, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1855
   Li HH, 2019, IEEE HI ASS SYS ENGR, P179, DOI 10.1109/HASE.2019.00035
   Li L, 2016, IEEE T NETW SERV MAN, V13, P154, DOI 10.1109/TNSM.2016.2516946
   Lian Yu, 2010, 2010 Fifth International Symposium on Service Oriented System Engineering (SOSE 2010), P181, DOI 10.1109/SOSE.2010.36
   Liu XL, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.5161
   Liu X, 2017, 2017 INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS, ELECTRONICS AND CONTROL (ICCSEC), P619, DOI 10.1109/ICCSEC.2017.8446744
   LoadStorm, US
   Madan M., 2016, INT J ADV RES COMPUT, V5, P28
   Malini A., 2014, International Conference on Computing and Communication Technologies (ICCCT). Proceedings, P1, DOI 10.1109/ICCCT2.2014.7066751
   Mell P, 2010, COMMUN ACM, V53, P50
   Microsoft azure, About us
   Mirjalili S, 2019, STUD COMPUT INTELL, V780, P43, DOI 10.1007/978-3-319-93025-1_4
   Mittal V, 2017, 2017 INTERNATIONAL CONFERENCE ON NEXT GENERATION COMPUTING AND INFORMATION SYSTEMS (ICNGCIS), P131, DOI [10.1109/ICNGCIS.2017.11, 10.1109/ICNOCIS.2017.11]
   MonkeyRunner, US
   Ngharamike ET., 2018, FUOYE J ENG TECHNOL, V3, DOI [10.46792/fuoyejet.v3i1.100, DOI 10.46792/FUOYEJET.V3I1.100]
   Norberto M, 2019, SBQS: PROCEEDINGS OF THE 18TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, P99, DOI 10.1145/3364641.3364653
   Nunez A, 2021, IEEE T RELIAB, V70, P261, DOI 10.1109/TR.2020.3011512
   Pahl C, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1849
   Parveen Tauhida, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P424, DOI 10.1109/ICSTW.2010.77
   Peng Zhenlong, 2012, 2012 International Conference on Computer Science and Service System (CSSS), P450, DOI 10.1109/CSSS.2012.119
   Pokahr A, 2016, CONCURR COMP-PRACT E, V28, P1368, DOI 10.1002/cpe.3641
   Prathibhan CM, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION CONTROL AND COMPUTING TECHNOLOGIES (ICACCCT), P1216, DOI 10.1109/ICACCCT.2014.7019292
   Rojas I.K.V., 2016, P 1 BRAZ S SYST AUT, P1
   Rudy Jaroslaw, 2017, SMART INNOVATIONS EN, P34
   Scalzo B., 2018, Database benchmarking and stress testing: An evidence-based approach to decisions on architecture and technology, DOI DOI 10.1007/978
   Sen A, 2020, SOFTWARE PRACT EXPER, V50, P998, DOI 10.1002/spe.2809
   Service4All, US
   Shojaee A, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON KNOWLEDGE-BASED ENGINEERING AND INNOVATION (KBEI), P170, DOI 10.1109/KBEI.2015.7436040
   Software Testing Help, TOP 12 BEST CLOUD TE
   Surbiryala J, 2019, 2019 3RD IEEE INTERNATIONAL CONFERENCE ON CLOUD AND FOG COMPUTING TECHNOLOGIES AND APPLICATIONS (IEEE CLOUD SUMMIT 2019), P1, DOI 10.1109/CloudSummit47114.2019.00007
   Tilley S., 2012, SOFTWARE TESTING CLO, P19, DOI [10.1007/978-3-642-32122-1_2, DOI 10.1007/978]
   Vijayaraghavan V, 2020, COMPUT COMMUN NETW S, P255, DOI 10.1007/978-3-030-33624-0_10
   Vishwanathan S, 2002, IEEE IJCNN, P2393, DOI 10.1109/IJCNN.2002.1007516
   Wiklund K, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1639
   Wu, 2012, ADV COMPUTER COMMUNI, DOI [10.1007/978-3-642-25541-0, DOI 10.1007/978]
   Xamarin Test Cloud, US
   Ya'u BI, 2019, J INF COMMUN TECHNOL, V18, P485
   Yan MZ, 2015, CONCURR COMP-PRACT E, V27, P526, DOI 10.1002/cpe.3246
   Zhang L, 2011, 2011 6TH INTERNATIONAL ICST CONFERENCE ON COMMUNICATIONS AND NETWORKING IN CHINA (CHINACOM), P875, DOI 10.1109/ChinaCom.2011.6158278
   Zhou JZ, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P644, DOI 10.1109/COMPSACW.2014.108
NR 85
TC 2
Z9 2
U1 2
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2022
VL 34
IS 12
AR e2492
DI 10.1002/smr.2492
EA JUL 2022
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7X5KE
UT WOS:000829454100001
DA 2024-07-18
ER

PT J
AU Rouhi, A
   Rahimi, SK
   Lano, K
AF Rouhi, Alireza
   Kolahdouz Rahimi, Shekoufeh
   Lano, Kevin
TI Formalizing model transformation patterns
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE model-driven development (MDD); model transformation; design pattern;
   formal model
ID DESIGN PATTERNS; SPECIFICATION; VERIFICATION; LANGUAGE; FLAWS
AB Model transformation has become an established field, and it is important to improve the quality of specifications written in transformation languages. Different transformation patterns have been introduced in the model-driven engineering (MDE) community to improve the quality of transformation specifications. However, due to the different definitions of pattern concepts by different authors, it is difficult for practitioners to understand how to apply patterns in practice. Therefore, there is a need to unify transformation pattern concepts by presenting a generic metamodel and formalizing patterns in terms of this metamodel, to define the meaning of pattern application. In this research a general metamodel for definition of different design patterns in model transformation is provided. The metamodel presents clear description of common aspects of transformation patterns, which facilitates the application of patterns on model transformations by validating the application against the underlying formalism. Additionally, a unified and precise terminology for the application and verificationof model transformation patterns by using a formal model of model transformation patterns in the Z notation is presented. To show the applicability of the proposed formalism, four well-known model transformation patterns are specified.
C1 [Rouhi, Alireza] Azarbaijan Shahid Madani Univ, Fac Informat Technol & Comp Engn, Tabriz, Iran.
   [Kolahdouz Rahimi, Shekoufeh] Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
   [Lano, Kevin] Kings Coll London, Dept Informat, London, England.
C3 Azarbaijan Shahid Madani University; University of Isfahan; University
   of London; King's College London
RP Rouhi, A (corresponding author), Azarbaijan Shahid Madani Univ, Fac Informat Technol & Comp Engn, Tabriz, Iran.
EM rouhi@azaruniv.ac.ir
RI Rouhi, Alireza/L-2209-2018
OI Rouhi, Alireza/0000-0003-1494-3467; Lano, Kevin
   Charles/0000-0002-9706-1410
CR Agrawal A, 2005, ELECTRON NOTES THEOR, V127, P181, DOI 10.1016/j.entcs.2004.12.035
   Alagar VangalurS., 1998, GRAD TEXT COMP SCI
   Amrani M, 2015, J OBJECT TECHNOL, V14, DOI 10.5381/jot.2015.14.1.a3
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Bagheri H, 2018, FORM ASP COMPUT, V30, P525, DOI 10.1007/s00165-017-0445-z
   Bezivin J, 2005, P 1 EUR WORKSH MOD T
   Castro PF, 2015, FORM ASP COMPUT, V27, P831, DOI 10.1007/s00165-015-0336-0
   Ergin H, 2014, LECT NOTES COMPUT SC, V8568, P91
   Ergin H, 2016, COMPUT LANG SYST STR, V46, P106, DOI 10.1016/j.cl.2016.07.004
   Garcia-Dominguez A., 2018, SOFTWARE ABSTRACTION
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Hamid Brahim, 2014, Engineering Secure Software and Systems. 6th International Symposium, ESSoS 2014. Proceedings: LNCS 8364, P95, DOI 10.1007/978-3-319-04897-0_7
   Hussain S, 2017, APPL SOFT COMPUT, V58, P225, DOI 10.1016/j.asoc.2017.04.043
   Iacob Maria-Eugenia., 2008, ENTERPRISE DISTRIBUT, P1
   Jackson D, 2019, COMMUN ACM, V62, P66, DOI 10.1145/3338843
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Kim DK, 2017, J SYST SOFTWARE, V125, P289, DOI 10.1016/j.jss.2016.12.019
   Kim DK, 2015, SOFTWARE PRACT EXPER, V45, P473, DOI 10.1002/spe.2238
   Kolahdouz-Rahimi S, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110684
   Lamo Y, 2014, ELECT COMMUN EASST, V67, P84
   Lano K, 2021, SOFTW SYST MODEL, V20, P725, DOI 10.1007/s10270-020-00824-3
   Lano K, 2018, LECT NOTES COMPUT SC, V10888, P127, DOI 10.1007/978-3-319-93317-7_6
   Lano K, 2018, J SYST SOFTWARE, V140, P48, DOI 10.1016/j.jss.2018.03.001
   Lano K, 2014, IEEE T SOFTWARE ENG, V40, P1224, DOI 10.1109/TSE.2014.2354344
   Levendovszky T, 2009, SOFTW SYST MODEL, V8, P501, DOI 10.1007/s10270-009-0118-3
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Mantz F, 2011, ELECT COMMUN EASST, V31, P3
   Marinov D., 2002, POPL 02 P 29 ACM S P
   Moghadam IH, 2012, EUR CON SFTWR MTNCE, P43, DOI 10.1109/CSMR.2012.15
   Orejas F, 2009, LECT NOTES COMPUT SC, V5700, P140
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   R?veill?re, 2008, DOMAIN SPECIFIC PROG, P5
   Rouhi A, 2016, INFORM SOFTWARE TECH, V79, P1, DOI 10.1016/j.infsof.2016.06.002
   Rouland Q, 2020, FUTURE GENER COMP SY, V108, P178, DOI 10.1016/j.future.2020.02.033
   Syriani E., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P929, DOI 10.1109/ICST.2012.198
   Vallecillo Antonio, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P399, DOI 10.1007/978-3-642-30982-3_11
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   Wu N, 2014, FORM ASP COMPUT, V26, P1231, DOI 10.1007/s00165-014-0299-6
   Zhi Zhu, 2019, Simulation Tools and Techniques. 11th International Conference, SIMUtools 2019. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 295), P25, DOI 10.1007/978-3-030-32216-8_3
   Zhu H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491517
NR 41
TC 1
Z9 1
U1 1
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2022
VL 34
IS 2
AR e2406
DI 10.1002/smr.2406
EA JAN 2022
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YW3RG
UT WOS:000738704000001
DA 2024-07-18
ER

PT J
AU Dobaj, J
   Macher, G
   Ekert, D
   Riel, A
   Messnarz, R
AF Dobaj, Juergen
   Macher, Georg
   Ekert, Damjan
   Riel, Andreas
   Messnarz, Richard
TI Towards a security-driven automotive development lifecycle
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE automotive SPICE; cybersecurity; development lifecycle model; ISO; SAE
   21434; risk assessment; threat modeling
ID RISK-ASSESSMENT; SYSTEMS; THREAT; SAFETY
AB Cybersecurity has become one of the most crucial challenges in the automotive development lifecycle. The upcoming ISO/SAE 21434 standard provides only a generic framework that is insufficient to derive concrete design methods. This article proposes an actionable cybersecurity development lifecycle model that provides concrete action and work product guidance aligned with the ISO/SAE 21434 and Automotive SPICE (R) extension for cybersecurity. The model has been inspired by action research in "next" industry practice pilot projects, which ensures that it is actionable. It has been augmented by insights gained from literature research in cybersecurity development for embedded systems. The proposed lifecycle model complements the ISO/SAE 21434 standard and provides the basis for the company-specific process and practice specifications. It has been validated through the integration of cybersecurity-related aspects in an electric power steering system. A core characteristic of the model is the central role of threat modeling, vulnerability analyses, and cybersecurity requirements derivation on both system and subsystem levels. Without concrete practice guidelines, the ISO/SAE 21434 is very difficult to understand and apply at this stage. This contribution aims to fill this gap through a model inspired by cutting-edge embedded cybersecurity practices interpreted for the current and near-future automotive electronic architectures.
C1 [Dobaj, Juergen; Macher, Georg] Graz Univ Technol, Inst Tech Informat, Graz, Austria.
   [Dobaj, Juergen; Macher, Georg; Ekert, Damjan; Riel, Andreas; Messnarz, Richard] ISCN GesmbH, Dev Dept, Graz, Austria.
   [Riel, Andreas] Grenoble Alps Univ, CNRS, G SCOP, Grenoble INP, Grenoble, France.
C3 Graz University of Technology; Communaute Universite Grenoble Alpes;
   Institut National Polytechnique de Grenoble; Universite Grenoble Alpes
   (UGA); Centre National de la Recherche Scientifique (CNRS)
RP Dobaj, J (corresponding author), Graz Univ Technol, Inst Tech Informat, Graz, Austria.
EM juergen.dobaj@tugraz.at
OI Riel, Andreas/0000-0001-9859-019X; Macher, Georg/0000-0001-9215-3300
FU BLUEPRINT Project DRIVES [591988-EPP-1-2017-1-CZ-EPPK A2-SSA-B]; H2020
   Project TEACHING [871385]
FX BLUEPRINT Project DRIVES, Grant/Award Number:
   591988-EPP-1-2017-1-CZ-EPPK A2-SSA-B; H2020 Project TEACHING,
   Grant/Award Number: 871385
CR Almgren, ADAPTING THREAT MODE
   Amorim T, 2017, LECT NOTES COMPUT SC, V10488, P329, DOI 10.1007/978-3-319-66266-4_22
   Automotive I.H.S, 2016, AUTOMOTIVE CYBERSECU
   Baidu B. M. W, 2019, SAFETY 1 AUTOMATED D
   Braun Lisa, 2016, ABSCHLUSSBERICHT EXP, DOI [10.5445/IR/1000054216, DOI 10.5445/IR/1000054216]
   Chockalingam S, 2018, LECT NOTES COMPUT SC, V10242, P50, DOI 10.1007/978-3-319-71368-7_5
   Corallo A, 2020, COMPUT IND, V114, DOI 10.1016/j.compind.2019.103165
   Dobaj J, 2021, J UNIVERS COMPUT SCI, V27, P830, DOI 10.3897/jucs.72367
   Dobaj J, 2019, LECT NOTES COMPUT SC, V11699, P102, DOI 10.1007/978-3-030-26250-1_8
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   ETSI: Intelligent Transport Systems (ITS), 2010, COMM ARCH V1 1 1
   ETSI: Intelligent Transport Systems (ITS), 2017, SEC THREAT VULN RISK
   European Commission, 2016, EUR STRAT COOP INT T
   F Deborah J Bodeau D B., 2018, Cyber threat modeling: Survey, assessment, and representative framework
   GRVA, 2018, WP29 GRVA UNECE SECR
   Hao JJ, 2020, FUTURE INTERNET, V12, DOI 10.3390/fi12110198
   Hussain S., 2014, Sci. Int. (Lahore), V26, P1607
   International Electrotechnical Commission: IEC 62443, 2009, IND COMM NETW SYST S
   Islam M.M., 2016, Proceedings of the 2nd ACM International Workshop on Cyber-Physical System Security-CPSS'16, P3, DOI DOI 10.1145/2899015.2899018
   Islam Mafijul, 2014, DELIVERABLE D2 SECUI
   ISO-International Standardization Organisation, 2020, 21434 ISO SAE
   ISO-International Standardization Organisation, 27000 ISO
   ISO-International Standardization Organisation, 2018, 26262 ISO
   Kondeva A, 2019, IEEE INT SYMP SOFTW, P346, DOI 10.1109/ISSREW.2019.00095
   Kornecki AJ., 2013, THREAT MODELING SECU
   Macher Georg, 2016, Computer Safety, Reliability and Security. 35th International Conference, SAFECOMP 2016. Proceedings: LNCS 9922, P130, DOI 10.1007/978-3-319-45477-1_11
   Macher G, 2017, PROCEDIA COMPUT SCI, V109, P490, DOI 10.1016/j.procs.2017.05.317
   Macher G, 2016, PROCEDIA COMPUT SCI, V83, P1288, DOI 10.1016/j.procs.2016.04.268
   Martin H, 2020, RELIAB ENG SYST SAFE, V198, DOI 10.1016/j.ress.2019.106773
   Messnarz R, 2020, SAE TECH PAP, DOI [10.4271/2020-01-0145, DOI 10.4271/2020-01-0145]
   Miller C., 2015, REMOTE EXPLOITATION, V2015, P1
   NIST, 2016, COMP SEC DIV CSD GUI
   Potteiger B, 2016, SYMPOSIUM AND BOOTCAMP ON THE SCIENCE OF SECURITY, P99, DOI 10.1145/2898375.2898390
   Riel A, 2018, CIRP ANN-MANUF TECHN, V67, P173, DOI 10.1016/j.cirp.2018.04.022
   Ring M, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON VEHICULAR ELECTRONICS AND SAFETY (ICVES), P208, DOI 10.1109/ICVES.2015.7396919
   Scandariato Riccardo, 2008, Technical Report
   Schmittner C, 2016, SCI ENG RES SUPPORT, P333, DOI [10.14257/astl.2016.139.68, DOI 10.14257/ASTL.2016.139.68]
   Schmittner C, 2020, DES AUT TEST EUROPE, P1634, DOI 10.23919/DATE48585.2020.9116406
   Schmittner C, 2019, LECT NOTES COMPUT SC, V11699, P153, DOI 10.1007/978-3-030-26250-1_12
   Sezer S, 2017, STRIDE BASED THREAT
   Shevchenko N., 2018, Tech. rep.
   Shostack A., 2008, MODSEC@ MoDELS, V2008, P35
   Shostack A., 2014, Threat Modeling: Designing for Security
   Strobl Stefanie, 2018, 2018 IEEE Industrial Cyber-Physical Systems (ICPS). Proceedings, P375, DOI 10.1109/ICPHYS.2018.8387687
   The SPICE User Group, 2015, AUT SPIC PROC ASS RE
   Valani LB, 2021, THREAT MODELING CYBE
   Vehicle Electrical System Security Committee, 2016, J3061 SAE
   Wiedemann, 2019, 19 INT STUT S, P1190, DOI [10.1007/978-3-658-25939-6_95, DOI 10.1007/978-3-658-25939-6_95]
   Zografopoulos I, 2021, IEEE ACCESS, V9, P29775, DOI 10.1109/ACCESS.2021.3058403
NR 49
TC 8
Z9 8
U1 3
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2023
VL 35
IS 8
SI SI
AR e2407
DI 10.1002/smr.2407
EA NOV 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA O5DX6
UT WOS:000721851700001
OA hybrid
DA 2024-07-18
ER

PT J
AU AbuHassan, A
   Alshayeb, M
   Ghouti, L
AF AbuHassan, Amjad
   Alshayeb, Mohammad
   Ghouti, Lahouari
TI Software refactoring side effects
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE MO-CMA-ES algorithm; multi-objective optimization; refactoring side
   effects; smell prioritization; software refactoring
ID CODE-SMELLS; QUALITY; IMPACT; PATTERNS
AB Software refactoring solutions aim at mitigating the negative effects of code and design smells on the overall software quality. Many efforts have been exerted to improve the software refactoring process. However, most of these efforts, despite their contributions, overlooked the side effects of the identified refactoring opportunities that may lead to new smells that will go unnoticed. This paper addresses the side effects of software refactoring and proposes sound solutions for handling them. Unlike current practices in software maintenance, we recommend three different approaches to handle the refactoring side effects. In the first approach, called the baseline, we opt to ignore the smells, caused by refactoring, while executing the identified refactoring decisions. In the second one, refactoring decisions are continually updated to fix all smells caused by side effects. In the last approach, only a subset of these smells is appended to the original smell sequence during the execution of the refactoring decisions. Thanks to the proposed approaches, optimal refactoring decisions are identified using a multi-objective (MO) optimization algorithm commonly known as the MO covariance matrix adaptation evolution strategy (MO-CMA-ES). Experiment results corroborate our assumptions and show the superiority of the second approach over the other ones.
C1 [AbuHassan, Amjad] Najah Natl Univ, Comp Engn Dept, Nablus, Palestine.
   [Alshayeb, Mohammad] Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
   [Alshayeb, Mohammad] King Fand Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran 31261, Saudi Arabia.
   [Ghouti, Lahouari] Prince Sultan Univ, Dept Comp Sci, Riyadh, Saudi Arabia.
C3 An Najah National University; King Fahd University of Petroleum &
   Minerals; Prince Sultan University
RP Alshayeb, M (corresponding author), King Fand Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran 31261, Saudi Arabia.
EM alshayeb@kfupm.edu.sa
RI Alshayeb, Mohammad/B-5941-2015
OI Alshayeb, Mohammad/0000-0001-7950-0099
FU King Fahd University of Petroleum and Minerals; Prince Sultan University
FX A. AbuHassan and M. Alshayeb would like to acknowledge the support
   provided by the Deanship of Scientific Research at King Fahd University
   of Petroleum and Minerals. L. Ghouti acknowledges the support of Prince
   Sultan University.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   AbuHassan A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2320
   Alshammari T, 2021, ARAB J SCI ENG, V46, P9157, DOI 10.1007/s13369-021-05766-6
   Alshayeb M, 2011, ARAB J SCI ENG, V36, P1241, DOI 10.1007/s13369-011-0111-3
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   Békefi BF, 2019, 2019 IEEE 15TH INTERNATIONAL SCIENTIFIC CONFERENCE ON INFORMATICS (INFORMATICS 2019), P213, DOI [10.1109/Informatics47936.2019.9119321, 10.1109/informatics47936.2019.9119321]
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Capra E, 2011, J SYST SOFTWARE, V84, P144, DOI 10.1016/j.jss.2010.09.004
   Das I, 1999, STRUCT OPTIMIZATION, V18, P107, DOI 10.1007/s001580050111
   Deb K., 2010, MULTI OBJECTIVE OPTI
   Elish KO, 2011, ARAB J SCI ENG, V36, P1253, DOI 10.1007/s13369-011-0117-x
   Genero M, 2005, J OBJECT TECHNOL, V4, P59, DOI 10.5381/jot.2005.4.9.a1
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Ghannem A, 2014, J SOFTW-EVOL PROC, V26, P692, DOI 10.1002/smr.1644
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Huda M., 2015, J SOFTW ENG APPL, V8, P175, DOI DOI 10.4236/jsea.2015.84018
   Igel C, 2007, EVOL COMPUT, V15, P1, DOI 10.1162/evco.2007.15.1.1
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khrishe Y, 2016, INT CONF COMP SCI
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Liu H, 2008, IET SOFTW, V2, P446, DOI 10.1049/iet-sen:20070033
   Liu H, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P265, DOI 10.1145/1595696.1595738
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Mens T, 2005, ELECTRON NOTES THEOR, V127, P113, DOI 10.1016/j.entcs.2004.08.038
   Miettinen K, 2008, LECT NOTES COMPUT SC, V5252, P27, DOI 10.1007/978-3-540-88908-3_2
   Min Zhang, 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P458, DOI 10.1109/ICSTW.2011.69
   Mkaouer MW, 2017, EMPIR SOFTW ENG, V22, P894, DOI 10.1007/s10664-016-9426-8
   Mkaouer MW, 2014, LECT NOTES COMPUT SC, V8636, P168
   Mkaouer MW., 2014, P C COMP GEN EV COMP, DOI [10.1145/2598394.2598499, DOI 10.1145/2598394.2598499]
   Morales R, 2018, IEEE T SOFTWARE ENG, V44, P1176, DOI 10.1109/TSE.2017.2757486
   Morales R, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P24, DOI 10.1109/SANER.2016.23
   Ouni A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1843
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2013, EUR CON SFTWR MTNCE, P221, DOI 10.1109/CSMR.2013.31
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Rizvi S., 2010, ARXIV PREPRINT ARXIV
   Sae-Lim N, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1886
   Satopaa V., 2011, Proceedings of the 2011 31st International Conference on Distributed Computing Systems Workshops (ICDCS Workshops), P166, DOI 10.1109/ICDCSW.2011.20
   Steidl D., 2014, P 22 INT C PROGR COM
   Szoke G, 2017, J SYST SOFTWARE, V129, P107, DOI 10.1016/j.jss.2016.08.071
   Vassallo C, 2019, SCI COMPUT PROGRAM, V180, P1, DOI 10.1016/j.scico.2019.05.002
   Vidal S, 2016, P BRAZ SYMP SOFTW, P41, DOI 10.1109/SBCARS.2016.11
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   Wilking D., 2007, E-INFORMATICA, V1, P27
   Yadav MV., QUANTIFY OBJECT ORIE
NR 51
TC 1
Z9 1
U1 2
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2024
VL 36
IS 1
AR e2401
DI 10.1002/smr.2401
EA OCT 2021
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH0R6
UT WOS:000712021700001
DA 2024-07-18
ER

PT J
AU Banach, R
   Razavi, J
   Debicki, O
   Lesecq, S
AF Banach, Richard
   Razavi, Joseph
   Debicki, Oivier
   Lesecq, Suzanne
TI Formal methods by stealth: The INSPEX experience
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE dependability; event-B; formal methods; INSPEX; obstacle detection
   systems; PRISM; ProB; Rodin; visually impaired or blind
ID DESIGN; MYTHS
AB INSPEX is an INtegrated Smart sPatial EXploration system. It relies on a family of sensors, like automated vehicles do, to provide enough information to a digital system for it to make reliable inferences about the location of obstacles and other impediments in its environment. Unlike the automated vehicle case, INSPEX is minaturised, because it is intended for lightweight applications and for portable use by humans, for example, visually impaired persons navigating outdoors (among many similar use cases). The complexity of this hardware-focused system merited the introduction of formal methods during its (essentially conventionally structured) development. The aim was to improve the dependability of parts of the implemented system and to estimate system characteristics via modelling and calculation that could not be obtained experimentally within the scope of the project. The paper overviews the experience of the very much human-in-the-loop use of formal techniques in the INSPEX Project and focuses particularly on the human issues that impacted the cooperation between the conventional techniques and formal methods.
C1 [Banach, Richard; Razavi, Joseph] Univ Manchester, Dept Comp Sci, Oxford Rd, Manchester, Lancs, England.
   [Debicki, Oivier; Lesecq, Suzanne] Commissariat Energie Atom & Energies Alternat, MINATEC, Grenoble, France.
C3 University of Manchester; CEA; Communaute Universite Grenoble Alpes;
   Institut National Polytechnique de Grenoble
RP Banach, R (corresponding author), Univ Manchester, Dept Comp Sci, Oxford Rd, Manchester, Lancs, England.
EM richard.banach@manchester.ac.uk
OI Banach, Richard/0000-0002-0243-9434
FU European Union [730953]; Swiss Secretariat for Education, Research and
   Innovation (SERI) [16.0136 730953]; H2020 - Industrial Leadership
   [730953] Funding Source: H2020 - Industrial Leadership
FX European Union's Horizon 2020, Grant/Award Number: 730953; Swiss
   Secretariat for Education, Research and Innovation (SERI), Grant/Award
   Number: 16.0136 730953
CR Abrial J. -R., 2006, 28th International Conference on Software Engineering Proceedings, P761, DOI 10.1145/1134285.1134406
   Agerholm S, 1999, LECT NOTES COMPUT SC, V1641, P168
   Ahmad W, 2016, LECT NOTES COMPUT SC, V9952, P94, DOI 10.1007/978-3-319-47166-2_7
   Andronick J, 2012, PROC INT CONF SOFTW, P1002, DOI 10.1109/ICSE.2012.6227120
   [Anonymous], 2013, VIS IMP BLINDN
   [Anonymous], 1999, IND STRENGTH FORMAL
   [Anonymous], 2004, Mathematical techniques in multisensor data fusion
   Banach R, 2007, J UNIVERS COMPUT SCI, V13, P593
   BOWEN JP, 1995, IEEE SOFTWARE, V12, P34, DOI 10.1109/52.391826
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Connoly D., 2012, GRADE 9 SCI FAIR WUN
   Correvon M, 2017, P SSI 17
   Deharbe David, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P194, DOI 10.1007/978-3-642-30885-7_14
   Déharbe D, 2014, SCI COMPUT PROGRAM, V94, P130, DOI 10.1016/j.scico.2014.04.012
   Dia R, 2017, IFAC PAPERSONLINE, V50, P13841, DOI 10.1016/j.ifacol.2017.08.2225
   Divakaran Sumesh, 2015, Formal Methods and Software Engineering. 17th International Conference on Formal Engineering Methods (ICFEM 2015). Proceedings: LNCS 9407, P170, DOI 10.1007/978-3-319-25423-4_11
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Foucault J, 2018, INSTICC P ICSOFT 18, P664
   Foucault J, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19194350
   Gadelha MR, 2018, IEEE INT CONF AUTOM, P888, DOI 10.1145/3238147.3240481
   Gleirscher M, 2020, EMPIR SOFTW ENG, V25, P4473, DOI 10.1007/s10664-020-09836-5
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   Hall A, 2007, J UNIVERS COMPUT SCI, V13, P669
   Jones, 1996, IEEE COMPUT, V29, P20
   Jongerden MR, 2009, IET SOFTW, V3, P445, DOI 10.1049/iet-sen.2009.0001
   Kedem B., 2017, Statistical data fusion
   Kossak F, 2016, LECT NOTES COMPUT SC, V9675, P213, DOI 10.1007/978-3-319-33600-8_13
   Kurniavan, 2011, INSIGHT RES PRACT VI
   Lesecq S, 2017, DES AUT TEST EUROPE, P746, DOI 10.23919/DATE.2017.7927089
   Lesecq S, 2019, LECT NOTES COMPUT SC, V12232, P77
   Lesecq S, 2018, SPRINGER P CSDM 18, P3
   Mashkoor A, 2018, SOFTWARE PRACT EXPER, V48, P2350, DOI 10.1002/spe.2634
   Moravec H., 1985, P 1985 IEEE INT C RO, P116, DOI DOI 10.1109/ROBOT.1985.1087316
   Ouvry L, 2018, P FEDCSIS COMM BEDA, P73
   Rakhmatov DN, 2001, ICCAD 2001: IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, DIGEST OF TECHNICAL PAPERS, P488, DOI 10.1109/ICCAD.2001.968687
   Razavi J, 2018, LECT NOTES COMPUT SC, V11176, P205, DOI 10.1007/978-3-030-04771-9_16
   Rödel C, 2014, AUTOMOTIVEUI'14: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON AUTOMOTIVE USER INTERFACES AND INTERACTIVE VEHICULAR APPLICATIONS, P83, DOI 10.1145/2667317.2667330
   Scalise L, 2012, IEEE T INSTRUM MEAS, V61, P3047, DOI 10.1109/TIM.2012.2202169
   Theisz, 2015, MED DEVICE REGULATOR
   Thrun S., 2005, PROBABILISTIC ROBOTI
   Wing, 1996, IEEE COMPUT, V29, P22
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
   Yunqing Wang, 2012, 2012 IEEE Haptics Symposium (HAPTICS), P527, DOI 10.1109/HAPTIC.2012.6183842
   Zamansky A, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P305, DOI 10.5220/0006770803050313
NR 45
TC 0
Z9 0
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2021
VL 33
IS 12
AR e2383
DI 10.1002/smr.2383
EA OCT 2021
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XH1BP
UT WOS:000706836300001
DA 2024-07-18
ER

PT J
AU Tian, FC
   Wang, TL
   Liang, P
   Wang, C
   Khan, AA
   Babar, MA
AF Tian, Fangchao
   Wang, Tianlu
   Liang, Peng
   Wang, Chong
   Khan, Arif Ali
   Babar, Muhammad Ali
TI The impact of traceability on software maintenance and evolution: A
   mapping study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE software maintenance and evolution; systematic mapping study;
   traceability
ID REQUIREMENTS TRACEABILITY; PRODUCT
AB Software traceability plays a critical role in software maintenance and evolution. We conducted a systematic mapping study with six research questions to understand the benefits, costs, and challenges of using traceability in maintenance and evolution. We systematically selected, analyzed, and synthesized 63 studies published between January 2000 and May 2020, and the results show that traceability supports 11 maintenance and evolution activities, among which change management is the most frequently supported activity; strong empirical evidence from industry is needed to validate the impact of traceability on maintenance and evolution; easing the process of change management is the main benefit of deploying traceability practices; establishing and maintaining traceability links is the main cost of deploying traceability practices; 13 approaches and 32 tools that support traceability in maintenance and evolution were identified; improving the quality of traceability links, the performance of using traceability approaches, and tools are the main traceability challenges in maintenance and evolution. The findings of this study provide a comprehensive understanding of deploying traceability practices in software maintenance and evolution phase and can be used by researchers for future directions and practitioners for making informed decisions while using traceability in maintenance and evolution.
C1 [Tian, Fangchao; Wang, Tianlu; Liang, Peng; Wang, Chong] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Tian, Fangchao; Babar, Muhammad Ali] Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
   [Khan, Arif Ali] Univ Jyvaskyla, Fac Informat Technol, Jyvaskyla, Finland.
C3 Wuhan University; University of Adelaide; University of Jyvaskyla
RP Liang, P (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
EM liangp@whu.edu.cn
RI khan, Arif/HMV-3165-2023; Wang, Chong/IAN-4220-2023
OI Liang, Peng/0000-0002-2056-5346; WANG, Chong/0000-0003-4576-5392
FU National Key R&D Program of China [2018YFB1402800]; National Natural
   Science Foundation of China (NSFC) [61972292]
FX This work is partially sponsored by the National Key R&D Program of
   China with Grant No. 2018YFB1402800 and the National Natural Science
   Foundation of China (NSFC) under Grant No. 61972292.
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   [Anonymous], 1998, 12191998 IEEE
   [Anonymous], 2012, Software and Systems Traceability
   Austin MA, 2005, 18TH INTERNATIONAL CONFERENCE ON SYSTEMS ENGINEERING, PROCEEDINGS, P414, DOI 10.1109/ICSENG.2005.77
   Basili V., 1994, The Goal Question Metric Approach, P528
   Ben Charrada E., 2011, P 12 INT WORKSH PRIN, P21
   Bennett Keith H, 2000, Software maintenance and evolution, P73, DOI DOI 10.1145/336512.336534
   Berlin L. M., 1993, Empirical Studies of Programmers: Fifth Workshop, P6
   Bohner SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P42, DOI 10.1109/ICSM.1996.564987
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Charalampidou S, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2294
   Chen L., 2010, P 14 INT C EV ASS SO, P135
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   Duarte AMD, 2016, INT REQUIR ENG CONF, P236, DOI 10.1109/RE.2016.32
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Fockel M., 2012, Proceedings 2012 2nd International Workshop on Software Engineering for Embedded Systems (SEES), P37, DOI 10.1109/SEES.2012.6225489
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Glaser B, 1967, Discovery of grounded theory strategies for qualitative research, DOI [10.4324/9780203793206, DOI 10.4324/9780203793206]
   Gotel O., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P71, DOI 10.1109/RE.2012.6345841
   Heck P, 2014, J SOFTW-EVOL PROC, V26, P1280, DOI 10.1002/smr.1678
   IEEE, 1998, IEEE STAND SOFTW MAI
   IEEE, 1990, IEEE Std 610.1990, P12
   Jaber K, 2013, IEEE ACCESS, V1, P726, DOI 10.1109/ACCESS.2013.2286822
   Javed M.A., 2014, Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering, page, P1
   Jayatilleke S, 2018, INFORM SOFTWARE TECH, V93, P163, DOI 10.1016/j.infsof.2017.09.004
   Kitchenham B., 2007, 2007001 EBSE
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Mäder P, 2015, EMPIR SOFTW ENG, V20, P413, DOI 10.1007/s10664-014-9314-z
   Mäder P, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P171, DOI 10.1109/ICSM.2012.6405269
   Nair S, 2013, S VIS LANG HUM CEN C, P222, DOI 10.1109/RE.2013.6636722
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rahimi M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P871, DOI 10.1145/2889160.2889261
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Schwarz H, 2009, EUR CON SFTWR MTNCE, P339, DOI 10.1109/CSMR.2009.8
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   Tripathy P., 2014, Software Evolution and Maintenance
   Vale T, 2017, INFORM SOFTWARE TECH, V84, P1, DOI 10.1016/j.infsof.2016.12.004
   van Gurp J, 2005, J SOFTW MAINT EVOL-R, V17, P277, DOI 10.1002/smr.313
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 46
TC 8
Z9 8
U1 5
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2021
VL 33
IS 10
AR e2374
DI 10.1002/smr.2374
EA AUG 2021
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA5EF
UT WOS:000688996000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Akarsu, Z
   Yilmaz, M
AF Akarsu, Zulal
   Yilmaz, Murat
TI Managing the social aspects of software development ecosystems: An
   industrial case study on personality
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE case study; large-scale agile development; personality; software team
   visualization
ID TEAM PROCESSES; TRAITS; GAMIFICATION; PERFORMANCE; CONSTRUCT; BEHAVIOR;
   IMPACT
AB The social aspects of software development encompass concerns such as motivating practitioners, building effective teams, and developing personal relations. Not surprisingly, perhaps, many software projects fail due to personality conflicts within team members. This study investigates the personality traits of 132 software practitioners by employing a tailored interactive assessment that was specifically developed for software development organizations. To assess the personality characteristics of the software teams as a whole, the results of 20 project teams were visualized by using personality-team radar charts. The validity part of the study was performed through validation interviews with experts from the field, discussing their experiences using the interactive assessment. The findings of this investigation complement those of earlier studies that suggest that productive team members who were working on social isolation showed higher introversion. In particular, this study strengthens the idea that agreeableness was observed in agile teams. Ultimately, the present data also highlight the existence of conscientiousness personalities in agile software development.
C1 [Akarsu, Zulal] Huawei, Turkey Res & Dev Ctr, Istanbul, Turkey.
   [Yilmaz, Murat] Dublin City Univ, Sch Comp, Lero, Dublin, Ireland.
C3 Huawei Technologies; Dublin City University
RP Akarsu, Z (corresponding author), Huawei, Turkey Res & Dev Ctr, Istanbul, Turkey.
EM zulal.akarsu@huawei.com
RI Yilmaz, Murat/O-8060-2018
OI Yilmaz, Murat/0000-0002-2446-3224; Akarsu, Zulal/0000-0003-2126-5545
CR Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Akarsu Z, 2020, SEMISTRUCTURED VALID, DOI [10.5281/zenodo.3776753, DOI 10.5281/ZENODO.3776753]
   Akarsu Z, 2019, COMM COM INF SC, V1060, P192, DOI 10.1007/978-3-030-28005-5_15
   [Anonymous], MIN 17 STAT SOFTW
   [Anonymous], 1996, 5 FACTOR MODEL PERSO
   [Anonymous], 2010, SIGSOFT SOFTW ENG NO, DOI DOI 10.1145/1734103.1734111
   [Anonymous], 2009, Personality traits, DOI [10.1017/CBO9780511812743, DOI 10.1017/CBO9780511812743]
   Balijepally V., 2006, Communications of AIS, V18, P2
   Barrick MR, 1998, J APPL PSYCHOL, V83, P377, DOI 10.1037/0021-9010.83.3.377
   Barroso AS, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 3, P53, DOI 10.5220/0006292000530062
   Baumgart Ruth, 2015, ECIS 2015 COMPLETED
   Beck K., 2009, Manifesto for Agile Software Development
   Belbin R.M., 2004, Management teams: Why they succeed or fail, V2nd
   Benbasat I, 1980, MIS QUART, V4, P31, DOI 10.2307/249335
   Bernstein L., 2010, ACM SIGSOFT SOFTWARE, V35, P33, DOI [10.1145/1811226.1811241, DOI 10.1145/1811226.1811241]
   Borman W.C., 1993, PERSONNEL SELECTION, P71, DOI DOI 10.1007/SPRINGERREFERENCE_7472
   Bradley J.H., 1997, J MANAG DEV, V16, P337, DOI DOI 10.1108/02621719710174525
   Capretz L.F., 2008, Journal of Psychological Type, V68, P37
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Capretz LF., 2012, ACM SIGSOFT SOFTWARE, V37, P1, DOI DOI 10.1145/2088883.2088901
   Capretz LF, 2015, COMPUT HUM BEHAV, V52, P373, DOI 10.1016/j.chb.2015.05.050
   Capretz LF, 2010, IT PROF, V12, P6, DOI 10.1109/MITP.2010.33
   CHRYSLER E, 1978, COMMUN ACM, V21, P472, DOI 10.1145/359511.359523
   Clarke P, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P142, DOI 10.1145/3202710.3203162
   Clarke P, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP), P86, DOI [10.1145/2904354.2904369, 10.1109/ICSSP.2016.019]
   Cruz Shirley S. J. O., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P1, DOI 10.1049/ic.2011.0001
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   GIST ME, 1987, J MANAGE, V13, P237, DOI 10.1177/014920638701300204
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Hogan RobertT., 1991, Handbook of Industrial and Organizational Psychology, P873, DOI DOI 10.1016/j.sbspro.2015.06.172
   Kam J., 2006, P ISESE 06, P232, DOI DOI 10.1145/1159733.1159769
   Kichuk SL, 1997, J ENG TECHNOL MANAGE, V14, P195, DOI 10.1016/S0923-4748(97)00010-6
   Kline P., 2000, HDB PSYCHOL TESTING
   Lewis Tracy L., 2008, FRONT ED C 2008 FIE, DOI 10.1109/FIE.2008.4720498
   Licorish S, 2009, SUPPORTING AGILE TEA, DOI [10.1109/CHASE.2009.5071413, DOI 10.1109/CHASE.2009.5071413]
   Mazni O, 2010 INT C SCI SOC R, DOI [10.1109/cssr.2010.5773856, DOI 10.1109/CSSR.2010.5773856]
   MCCRAE RR, 1992, J PERS, V60, P175, DOI 10.1111/j.1467-6494.1992.tb00970.x
   Messnarz R, SPI MANIFESTO ISCN
   Mills A., 2010, ENCY CASE STUDY RES, DOI [10.4135/9781412957397, DOI 10.4135/9781412957397]
   Myers I.B., 1999, MBTI manual: a guide to the development and use of the Myers-Briggs Type Indicator, V3rd
   Neuman GA, 1999, J APPL PSYCHOL, V84, P376, DOI 10.1037/0021-9010.84.3.376
   Organ DW, 1997, HUM PERFORM, V10, P85, DOI 10.1207/s15327043hup1002_2
   RASCH RH, 1992, MIS QUART, V16, P395, DOI 10.2307/249535
   Rodrigues Nuno, 2013, Rev. psicol. trab. organ., V29, P21
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ryan S, 2009, J SYST SOFTWARE, V82, P229, DOI 10.1016/j.jss.2008.05.037
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Sfetsos P, 2009, EMPIR SOFTW ENG, V14, P187, DOI 10.1007/s10664-008-9093-5
   Soomro AB, 2016, INFORM SOFTWARE TECH, V73, P52, DOI 10.1016/j.infsof.2016.01.006
   Van Dyne L, 1998, ACAD MANAGE J, V41, P108, DOI 10.5465/256902
   Van Vianen A.E. M., 2001, EUR J WORK ORGAN PSY, V10, P97, DOI [10.1080/13594320143000573, DOI 10.1080/13594320143000573]
   VanScotter JR, 1996, J APPL PSYCHOL, V81, P525, DOI 10.1037/0021-9010.81.5.525
   Volkema RJ, 1998, J MANAGE STUD, V35, P105, DOI 10.1111/1467-6486.00086
   Wang AI, 2020, COMPUT EDUC, V149, DOI 10.1016/j.compedu.2020.103818
   Wyrich M, 2019, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.173
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
   Yilmaz M, 2016, J UNIVERS COMPUT SCI, V22, P1487
   Yilmaz M, 2016, COMM COM INF SC, V633, P203, DOI 10.1007/978-3-319-44817-6_16
   Yilmaz M, 2016, INT J SOFTW ENG KNOW, V26, P457, DOI 10.1142/S0218194016500194
   Yilmaz M, 2016, TEH VJESN, V23, P237, DOI 10.17559/TV-20140922220409
   Yilmaz M, 2012, EUROMICRO CONF PROC, P400, DOI 10.1109/SEAA.2012.62
   Zhu SL, 2010, INT C MANAGE SCI ENG, P937, DOI 10.1109/ICMSE.2010.5719911
NR 63
TC 3
Z9 3
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2020
VL 32
IS 11
SI SI
AR e2277
DI 10.1002/smr.2277
EA JUN 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA OV2ST
UT WOS:000538734500001
DA 2024-07-18
ER

PT J
AU Özdagoglu, G
   Kavuncubasi, E
AF Ozdagoglu, Guzin
   Kavuncubasi, Ece
TI Monitoring the software bug-fixing process through the process mining
   approach
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE bug fixing; business process management; process mining; software
   quality
ID QUALITY
AB In the era of information technology, businesses have changed the way they work. Operations, which have become digitalized and managed via software systems, have increased in competitiveness. Software developers have been forced to design and implement their quality standards products by focusing on process-oriented management. Software quality aims to gain a high-performance level in the both development and managerial processes to maintain continuous improvements. Continuous improvements require more efficient process monitoring methods. Process mining, which provides recent techniques related to process monitoring, can be utilized with event log files to track the process performance. This research will extract the process mapping and performance statistics of the bug-fixing process from event logs to develop an efficient process monitoring system. This process will uncover bottlenecks causing inefficiencies and risks. The benefits of process mining techniques will also be discussed to highlight the implications. In this context, this article will present a case study on monitoring the bug-fixing process of a software product via process mining. It will reveal significant knowledge about subsequent steps and roles.
C1 [Ozdagoglu, Guzin] Dokuz Eylul Univ, Fac Business, Tinaztepe Campus, Izmir, Turkey.
   [Kavuncubasi, Ece] Dokuz Eylul Univ, Bimar IT Serv, Depark, Izmir, Turkey.
C3 Dokuz Eylul University; Dokuz Eylul University
RP Özdagoglu, G (corresponding author), Dokuz Eylul Univ, Fac Business, Tinaztepe Campus, Izmir, Turkey.
EM guzin.kavrukkoca@deu.edu.tr
RI özdağoğlu, güzin/E-1828-2017
OI özdağoğlu, güzin/0000-0003-3055-3055; Kavuncubasi,
   Ece/0000-0002-1110-4601
CR Accorsi R, 2014, DAGSTUHL REPORTS, V3
   Akturk AG, 2009, 4 UL YAZLM MUH S UYM
   [Anonymous], 2013, SOFTWARE REQUIREMENT
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   Barry EJ, 2007, J SOFTW MAINT EVOL-R, V19, P1, DOI 10.1002/smr.342
   Claes J, 2012, PROCESS MINING PROM
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Flowers S., 1996, SOFTWARE FAILURE MAN
   Fluxicon Disco, DISC US GUID 2016
   G?rgen T., 2018, COMPUTER SYSTEMS SOF, P1503
   Gnther CW., 2012, BPM, V940, P40
   Gunther Christian W., 2007, Business Process Management. Proceedings 5th International Conference, BPM 2007. (Lecture Notes in Computer Science vol. 4714), P328
   Jabangwe R, 2016, J SOFTW-EVOL PROC, V28, P622, DOI 10.1002/smr.1788
   Jeston J., 2014, Business process management: Practical guidelines to successful implementations
   Keith B, 2016, INT C SOFTW PROC IMP, P47
   KITCHENHAM BA, 1989, SOFTWARE ENG J, V4, P2, DOI 10.1049/sej.1989.0001
   Kurtel K, 2011, TURKIYE BILIIM VAKF, V4, P1
   Lemos AM, 2011, IEEE SYS MAN CYBERN, P1181, DOI 10.1109/ICSMC.2011.6083858
   Mordal K, 2013, J SOFTW-EVOL PROC, V25, P1117, DOI 10.1002/smr.1558
   Nikolik B, 2012, INFORM SOFTWARE TECH, V54, P1229, DOI 10.1016/j.infsof.2012.06.003
   Rozinat A., PROCESS MINING COMPA
   Rubin V., 2014, P 2014 ICSSP, P70
   Rubin V.A., 2014, INT S EMPIRICAL SOFT, DOI [10.1145/2652524.2652583, DOI 10.1145/2652524.2652583]
   Samalikova J., 2012, PROCESS MINING APPL
   Saylam R., 2014, P WCE, V1
   Tiwari A, 2008, BUS PROCESS MANAG J, V14, P5, DOI 10.1108/14637150810849373
   Trkman P, 2010, INT J INFORM MANAGE, V30, P125, DOI 10.1016/j.ijinfomgt.2009.07.003
   Tunkelo T, 2013, J SOFTW-EVOL PROC, V25, P1305, DOI 10.1002/smr.1604
   Van Der Aalst W., 2011, Discovery, conformance and enhancement of business processes
   Van Der Aalst W., 2012, PROCESS MINING MANIF
   van der Aalst W, 2011, COMPUTER, V44, P77, DOI 10.1109/MC.2011.384
   van der Aalst WMP, 2016, PROCESS MINING DATA, V2nd, DOI DOI 10.1007/978-3-662-49851-4
   Verstraete D., 2014, PROCESS MINING PRACT
   Wolski M., 2018, J SOFTWARE EVOLUTION, V30, P5
   Zayed MA, 2016, INT J ADV COMPUT SC, V7, P279
NR 35
TC 5
Z9 5
U1 1
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2019
VL 31
IS 7
AR e2162
DI 10.1002/smr.2162
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IK8EW
UT WOS:000476827600001
DA 2024-07-18
ER

PT J
AU Weber, P
   Filho, JBF
   Bordbar, B
   Lee, M
   Litchfield, I
   Backman, R
AF Weber, Philip
   Filho, Joao Bosco Ferreira
   Bordbar, Behzad
   Lee, Mark
   Litchfield, Ian
   Backman, Ruth
TI Automated conflict detection between medical care pathways
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE BPMN; Coloured Petri Nets; clinical guidelines; care pathways; conflict
   detection; multimorbidity; model transformation; workflow models
ID BUSINESS PROCESS MODELS; CLINICAL GUIDELINES; PETRI NETS; BPMN;
   CHALLENGES; SEMANTICS; WORKFLOWS; DISEASES; SYNTAX; FORMAT
AB Clinical guidelines specify sequences of steps (care pathways) to treat patients with single conditions. Increasingly, many patients exhibit multimorbidity, several chronic conditions needing concurrent treatment. However, applying multiple guidelines in parallel can lead to conflicts, eg, between prescribed drugs, lifestyle intervention recommendations, or treatment schedules. In computer science, process languages used to design and reason about software development and business process management are similar to clinical pathways. Using formal model transformation, composition and analysis methods, models can be combined and conflicts detected and resolved. We propose BPMN+V, a data-driven formal model for clinical care pathways, as an extension of Business Process Model and Notation. We describe a method for conflict detection using a transformation of BPMN+V to Coloured Petri Nets and a state-space method for detection of conflict in composed models. We present results from a case study, showing that common conflicts are successfully detected, and propose extension to a complete framework for efficiently recommending resolutions to medical conflicts in composed care pathway models.
C1 [Weber, Philip; Filho, Joao Bosco Ferreira; Bordbar, Behzad; Lee, Mark] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
   [Litchfield, Ian; Backman, Ruth] Univ Birmingham, Inst Appl Hlth Res, Birmingham B15 2TT, W Midlands, England.
C3 University of Birmingham; University of Birmingham
RP Weber, P (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
EM dr.philip.weber@ieee.org
RI Litchfield, Ian/AFO-0944-2022; Lee, Mark/JWP-5985-2024; Weber,
   Philip/I-4181-2019
OI Litchfield, Ian/0000-0002-1169-5392; Lee, Mark/0000-0003-1262-2045;
   Weber, Philip/0000-0002-3121-9625
FU UK Engineering and Physical Sciences Research Council (EPSRC)
   [EP/M014401/1]; EPSRC [EP/M014401/1] Funding Source: UKRI
FX UK Engineering and Physical Sciences Research Council (EPSRC),
   Grant/Award Number: EP/M014401/1
CR Alreshidi E, 2016, J COMPUT CIVIL ENG, V30, DOI 10.1061/(ASCE)CP.1943-5487.0000539
   Alwanain M, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P384
   [Anonymous], IMPLEMENTATION SCI
   [Anonymous], 2012, LONG TERM CONDITIONS, V3rd
   [Anonymous], 2011, BRIT J GEN PRACT
   [Anonymous], GUID ADV LIST
   [Anonymous], 2007, J SOFTW TOOLS TECHNO
   [Anonymous], MAN STABL COPD
   [Anonymous], SAGE OPEN MED ECOLLE
   [Anonymous], BRIT NAT FORM BNF
   [Anonymous], INT C INF SYST ICIS
   [Anonymous], TECHNICAL REPORT
   [Anonymous], BPMN 2 0 BUSINESS MO
   [Anonymous], IMPLEMENTATION
   [Anonymous], MULT CLIN ASS MAN
   [Anonymous], 2011, 20110103 OMG
   [Anonymous], P 11 IB C INF SYST T
   [Anonymous], 2013, 195102013 ISOIEC
   [Anonymous], DIAGN PATHOL S1
   [Anonymous], 2014, MAN OST
   [Anonymous], TR50 U POTSD HASS PL
   [Anonymous], TECHNICAL REPORT
   [Anonymous], P INF SYST DEV SERV
   Awad A, 2010, LECT NOTES BUS INF P, V43, P5
   Barnett K, 2012, LANCET, V380, P37, DOI 10.1016/S0140-6736(12)60240-2
   Börger E, 2012, SOFTW SYST MODEL, V11, P305, DOI 10.1007/s10270-011-0214-z
   Bowles J, 2010, ASIA PAC SOFWR ENG, P216, DOI 10.1109/APSEC.2010.33
   Boxwala AA, 2004, J BIOMED INFORM, V37, P147, DOI 10.1016/j.jbi.2004.04.002
   Boyd CM, 2005, JAMA-J AM MED ASSOC, V294, P716, DOI 10.1001/jama.294.6.716
   Braun Richard, 2014, 2014 IEEE International Conference on Bioinformatics and Biomedicine (BIBM), P9, DOI 10.1109/BIBM.2014.6999261
   Braun R., 2015, P 12 INT C WIRTSCHAF, P468
   Burattin A., 2016, BPM (Demos), P1
   Carrell DS, 2015, INT J MED INFORM, V84, P1057, DOI 10.1016/j.ijmedinf.2015.09.002
   Casati F., 1995, OOER '95: Object-Oriented and Entity-Relationship Modeling. 14th International Conference. Proceedings, P341, DOI 10.1007/BFb0020545
   Davies S, 2016, VALUE HEALTH, V19, pA625, DOI 10.1016/j.jval.2016.09.1603
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Decker G, 2008, LECT NOTES COMPUT SC, V5240, P386, DOI 10.1007/978-3-540-85758-7_30
   Demner-Fushman D, 2009, J BIOMED INFORM, V42, P760, DOI 10.1016/j.jbi.2009.08.007
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Duerden M, 2011, The quality of GP prescribing
   Dumbreck S, 2015, BMJ-BRIT MED J, V350, DOI 10.1136/bmj.h949
   Eccles MP, 2012, IMPLEMENTATION SCI, V7
   Eklund P, 2009, ICCIT: 2009 FOURTH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCES AND CONVERGENCE INFORMATION TECHNOLOGY, VOLS 1 AND 2, P273, DOI 10.1109/ICCIT.2009.27
   Favre C, 2012, LECT NOTES COMPUT SC, V7481, P156, DOI 10.1007/978-3-642-32885-5_12
   Geist, 2014, RIGOROUS SEMANTICS B
   Gooch P, 2011, J AM MED INFORM ASSN, V18, P738, DOI 10.1136/amiajnl-2010-000033
   Green Jacqueline L, 2007, Am J Geriatr Pharmacother, V5, P31, DOI 10.1016/j.amjopharm.2007.03.004
   Guthrie B, 2012, BMJ-BRIT MED J, V345, DOI 10.1136/bmj.e6341
   Harmon Paul., 2016, The State of Business Process Management
   Havey Michael., 2005, ESSENTIAL BUSINESS P
   Hawley ST, 2008, PATIENT EDUC COUNS, V73, P448, DOI 10.1016/j.pec.2008.07.023
   Herden A, 2016, ADV INTELL SYST, V465, P413, DOI 10.1007/978-3-319-33622-0_37
   Hughes LD, 2013, AGE AGEING, V42, P62, DOI 10.1093/ageing/afs100
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   JianHong Ye, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P354, DOI 10.1109/CSSE.2008.980
   Juric M., 2004, Business process execution language for web services
   Meyer Andreas, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P171, DOI 10.1007/978-3-642-40176-3_14
   Meystre S, 2006, J BIOMED INFORM, V39, P589, DOI 10.1016/j.jbi.2005.11.004
   Muehlen M.zur., 2008, P 41 ANN HAWAII INT, P372, DOI DOI 10.1109/HICSS.2008.388
   Muller R., 2011, Proceedings of the 3rd Central-European Workshop on Services and their Composition, ZEUS 2011, P65
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Nazar H, 2016, BMJ OPEN, V6, DOI 10.1136/bmjopen-2016-011269
   Peleg M, 2013, J BIOMED INFORM, V46, P744, DOI 10.1016/j.jbi.2013.06.009
   PRYOR TA, 1993, INT J CLIN MONIT COM, V10, P215, DOI 10.1007/BF01133012
   Stroppi LJR, 2011, LECT NOTES BUS INF P, V95, P59
   Ratzer AV, 2003, LECT NOTES COMPUT SC, V2679, P450
   Recker J, 2010, BUS PROCESS MANAG J, V16, P181, DOI 10.1108/14637151011018001
   Reisig W., 2012, Petri nets: an introduction, V4
   Rolón E, 2008, HEALTHINF 2008: PROCEEDINGS OF THE FIRST INTERNATIONAL CONFERENCE ON HEALTH INFORMATICS, VOL 2, P173
   Ruiz Francisco, 2012, Stud Health Technol Inform, V179, P75
   Sadiq W., 1999, Advanced Information Systems Engineering. 11th International Conference, CAiSE'99. Proceedings (Lecture Notes in Computer Science Vol. 1626), P195
   Scheuerlein H, 2012, LANGENBECK ARCH SURG, V397, P755, DOI 10.1007/s00423-012-0914-z
   Stewart BA, 2010, J AM MED INFORM ASSN, V17, P341, DOI 10.1136/jamia.2009.001750
   Sun YT, 2014, PROC INT CONF DATA, P1048, DOI 10.1109/ICDE.2014.6816722
   Sutton DR, 2003, J AM MED INFORM ASSN, V10, P433, DOI 10.1197/jamia.M1264
   Taboada M, 2013, EXPERT SYST, V30, P3, DOI 10.1111/j.1468-0394.2010.00575.x
   van der Aalst W. M. P., 2002, Advanced Information Systems Engineering. 14th International Conference, CAiSE 2002. Proceedings (Lecture Notes in Computer Science Vol.2348), P535
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Van Gorp P, 2013, INFORM SOFTWARE TECH, V55, P365, DOI 10.1016/j.infsof.2012.08.014
   Vanhatalo J, 2007, LECT NOTES COMPUT SC, V4749, P43
   Wang ZX, 2014, INFORM SYST, V42, P195, DOI 10.1016/j.is.2014.01.006
   Westergaard M, 2009, LECT NOTES COMPUT SC, V5606, P303, DOI 10.1007/978-3-642-02424-5_18
   Williams Richard, 2014, AMIA Annu Symp Proc, V2014, P1208
   Ye JH, 2008, 2008 INTERNATIONAL SYMPOSIUM ON INTELLIGENT INFORMATION TECHNOLOGY APPLICATION, VOL II, PROCEEDINGS, P70, DOI 10.1109/IITA.2008.68
   Zerbato F, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON HEALTHCARE INFORMATICS (ICHI 2015), P346, DOI 10.1109/ICHI.2015.49
NR 88
TC 7
Z9 7
U1 0
U2 20
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2018
VL 30
IS 7
SI SI
AR e1898
DI 10.1002/smr.1898
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GO2NC
UT WOS:000439809500001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Bersani, MM
   García-Valls, M
AF Bersani, Marcello M.
   Garcia-Valls, Marisol
TI Online verification in cyber-physical systems: Practical bounds for
   meaningful temporal costs
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Cyber-physical systems; linear temporal logic; real-time; resource
   management; verification; virtualization
ID AUTOMATA
AB Cyber-physical systems (CPS) are highly dynamic and large scale systems integrated with the physical environment that they monitor and actuate on. CPS have to adapt online to the changing nature of the physical environment; this may require the online modification of their system model, but any change should preserve correct operation. Correctness by construction relies on using formal tools, which suffer from a considerable computational overhead. As the current system model of a CPS may adapt to the environment, the new system model must be verified before its execution to ensure that the properties are preserved. However, CPS development has mainly concentrated on the design-time aspects, existing only few contributions that address their online adaptation. We research on the pros and cons of formal tools to support dynamic changes at runtime. We formalize the semantics of the adaptation logic of an autonomic manager (OLIVE) that performs online verification for a specific application, a dynamic virtualized server system. We explore the use of formal tools based on CLTLoc to express functional and nonfunctional properties of the system. We provide empirical results showing the temporal costs of our approach.
C1 [Bersani, Marcello M.] Politecn Milan, Dipartamento Elettron Informaz & Bioingn, Milan, Italy.
   [Garcia-Valls, Marisol] Univ Carlos III Madrid, Dept Ingn Telemat, Leganes, Madrid, Spain.
C3 Polytechnic University of Milan; Universidad Carlos III de Madrid
RP García-Valls, M (corresponding author), Univ Carlos III Madrid, Dept Ingn Telemat, Leganes, Madrid, Spain.
EM mvalls@it.uc3m.es
RI Garcia-Valls, Marisol/D-6064-2013
OI Garcia-Valls, Marisol/0000-0003-2383-5310; BERSANI, MARCELLO
   M./0000-0001-5137-940X
FU Salvador de Madariaga Programme for International Research Stays from
   the Spanish Ministry of Education [PRX12/00252]; REM4VSS [TIN
   2011-28339]; M2C2 [TIN2014-56158-C4-3-P]; Spanish Ministry of Economy
   and Competitiveness; Italian project PRIN [CUP D41J12000450001]; Horizon
   [644869]
FX Salvador de Madariaga Programme for International Research Stays from
   the Spanish Ministry of Education, Grant/Award Number: PRX12/00252;
   REM4VSS, Grant/Award Number: TIN 2011-28339; M2C2, Grant/Award Number:
   TIN2014-56158-C4-3-P; Spanish Ministry of Economy and Competitiveness
   and Italian project PRIN 2010/11, Grant/Award Number: CUP
   D41J12000450001; Horizon 2020, Grant/Award Number: 644869
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], 2017, P S APPL COMP MARR M
   [Anonymous], P 5 INT WORKSH POL D
   [Anonymous], 2015, P ARM
   [Anonymous], RTCADO297EUROCAEED12
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Bersani MM, 2016, IEEE HI ASS SYS ENGR, P39, DOI 10.1109/HASE.2016.46
   Bersani MM, 2011, LNCS, V6945
   Bersani MM, 2015, ACTA INF
   Bersani MM, 2014, LOGICAL CHARACTERIZA
   Cano J., 2013, SOFTWARE PRACTICE EX, V44, P889
   Deepse, 2015, AE2ZOT TOOL
   Demri S, 2007, INFORM COMPUT, V205, P380, DOI 10.1016/j.ic.2006.09.006
   Valls MG, 2013, IEEE T IND INFORM, V9, P228, DOI 10.1109/TII.2012.2198662
   Garcia-Valls M., 2003, LNCS, V2596, P36
   García-Valls M, 2017, COMPUT STAND INTER, V51, P95, DOI 10.1016/j.csi.2016.11.003
   García-Valls M, 2014, J SYST ARCHITECT, V60, P726, DOI 10.1016/j.sysarc.2014.07.004
   García-Valls M, 2014, P INT COMP SOFTW APP, P332, DOI 10.1109/COMPSAC.2014.55
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   IBM Corporation, 2006, ARCH BLUE PRINT AUT
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kim KD, 2012, P IEEE, V100, P1287, DOI 10.1109/JPROC.2012.2189792
   MIT CSAIL, 2014, APPL HEARTBR PROJ
   Panerati J, 2013, 2013 NASA/ESA CONFERENCE ON ADAPTIVE HARDWARE AND SYSTEMS (AHS), P23, DOI 10.1109/AHS.2013.6604222
   Pradella M, 2013, TACM, V22
   Schantz R. E., 2002, Encyclopedia of Software Engineering
   Tesauro G, 2007, IEEE INTERNET COMPUT, V11, P22, DOI 10.1109/MIC.2007.21
   Tindell KW, 1992, P IEEE REAL TIM SYST
   Toerngren M., 2012, UCBEECS2012191
   Ye K, 2010, IEEE ACM INT C GREEN
NR 30
TC 13
Z9 13
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2018
VL 30
IS 3
SI SI
AR e1880
DI 10.1002/smr.1880
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FZ0JU
UT WOS:000427255900005
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Diebold, P
   Scherr, SA
AF Diebold, P.
   Scherr, S. A.
TI Software process models vs descriptions: What do practitioners use and
   need?
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT IEEE/ACM International Conference on Software and System Processes
   (ICSSP)
CY MAY 14-15, 2016
CL Austin, TX
SP Assoc Comp Machinery, IEEE Comp Soc, IEEE, Univ Texas Austin, Ctr Adv Res Software Engn, Special Interest Grp Software Engn, ISCAS, ISPA
DE development processes; process models; process descriptions; empirical
   study; interview; practitioners; state of the practice; process modeling
   languages; process documentation; process management
AB It is commonly known that software or system development processes are very important for getting a high-quality product. Such processes can be described in many different ways, from textual documents to existing modeling notations. Before dealing with the overall goal of improving the description of development processes, this paper evaluates the current state of practice regarding process descriptions and reasons for that. A major focus is on the degree of formality. Based on an interview guideline, a series of 12 interviews was conducted in German companies of different sizes. The results were analyzed to come up with the current usage of and need for software process models or descriptions. In general, our results confirm the literature statement that in industrial practice the majority of processes descriptions are detailed but rather focus on informal descriptions than formal notations or models. Nevertheless, they use semiformal process descriptions containing different graphical, table-based, or structured-text elements for representation. It is interesting that even if companies do not want to use formal models; they would like to have their advantages and even often have the detailed informationnecessary for formal models. Overall, our findings provide evidence on the state of practice regarding usage of process descriptions and models and show the need for future work in this area.
C1 [Diebold, P.; Scherr, S. A.] Fraunhofer Inst Expt Software Engn IESE, Fraunhofer Pl 1, Kaiserslautern, Germany.
C3 Fraunhofer Gesellschaft
RP Diebold, P (corresponding author), Fraunhofer Inst Expt Software Engn IESE, Fraunhofer Pl 1, Kaiserslautern, Germany.
EM philipp.diebold@iese.fraunhofer.de
RI Scherr, Simon André/AAT-9170-2021
OI Diebold, Philipp/0000-0002-3910-7898
FU German Ministry of Education and Research [BMBF 01IS12053]
FX German Ministry of Education and Research, Grant/Award Number: BMBF
   01IS12053
CR [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2015, P INT C SOFTW SYST P, DOI [10.1145/2785592.2785600, DOI 10.1145/2785592.2785600]
   Di Nitto E, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P155, DOI 10.1109/ICSE.2002.1007964
   Diebold P, 2014, P 18 INT C EV ASS SO, P10
   Diebold P, 2015, SOFTWARE DEV PROCESS
   García-Borgoñón L, 2014, INFORM SOFTWARE TECH, V56, P103, DOI 10.1016/j.infsof.2013.10.001
   Jaccheri ML, 2000, LECT NOTES COMPUT SC, V1780, P96
   Johansson P, 2007, THESIS
   Kitchenham B., 2004, Procedures for performing systematic literature reviews, P33
   Mnch J., 2012, SOFTWARE PROCESS DEF
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Rodrigues RD, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P41, DOI 10.1109/SBES.2015.12
   Schenker F, 2009, STRATEGIES PROCESS D
   Sommerville I., 2012, Software Engineering
   Van Solingen Rini, 2002, ENCY SOFTWARE ENG, V2002, P528
NR 15
TC 8
Z9 8
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2017
VL 29
IS 11
AR e1879
DI 10.1002/smr.1879
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA FM2UV
UT WOS:000414857100008
DA 2024-07-18
ER

PT J
AU De Man, J
AF De Man, Jozef
TI Objective-driven process appraisals: an educational experiment
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT Conference on European System and Software Process Improvement and
   Innovation Initiative (EuroSPI2)
CY SEP 30-OCT 02, 2015
CL Ankara Univ, Ankara, TURKEY
HO Ankara Univ
DE appraisals; CMMI; SCAMPI; software process improvement
AB Software improvement frameworks are often perceived to be expensive and oriented toward larger companies. It is also difficult to teach these frameworks to students who lack any experience with software development in a commercial setting. In this paper, we report experience with teaching software process improvement by using a series of small exercises that together establish a quick objective-driven appraisal of a software organization. We show how the focus on practical results reinforces the educational value of the exercise by making it more engaging for students.
C1 [De Man, Jozef] Univ Ghent, Nokia, Ghent, Belgium.
C3 Ghent University
RP De Man, J (corresponding author), Univ Ghent, Nokia, Ghent, Belgium.
EM jozef.de_man@nokia.com
CR CMMI product team, 2010, CMUSEI2010TR33 CMMI
   De Man J, 2012, P IMPR SYST SOFTW EN, P31
   De Man J, 2014, 21 EUROSPI C LUX
   Heredia A., 2015, P INT WORKSH SOFTW P
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   SCAMPI Upgrade Team, 2011, CMUSEI2011HB001 SCAM
   Storey M-A, 2012, IEEE SOFTWARE
NR 7
TC 0
Z9 0
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2016
VL 28
IS 11
BP 955
EP 959
DI 10.1002/smr.1825
PG 5
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA ED0WX
UT WOS:000388564700003
DA 2024-07-18
ER

PT J
AU Rodeghero, P
   Huo, D
   Ding, T
   McMillan, C
   Gethers, M
AF Rodeghero, Paige
   Huo, Da
   Ding, Tao
   McMillan, Collin
   Gethers, Malcom
TI An empirical study on how expert knowledge affects bug reports
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE bugs; experts; empirical; recommendation; features; textual
ID SOFTWARE-DEVELOPMENT; IMPACT; DATABASE; CODE
AB Bug reports are crucial software artifacts for both software maintenance researchers and practitioners. A typical use of bug reports by researchers is to evaluate automated software maintenance tools: a large repository of reports is used as input for a tool, and metrics are calculated from the tool's output. But this process is quite different from practitioners, who distinguish between reports written by experts, such as programmers, and reports written by non-experts, such as users. Practitioners recognize that the content of a bug report depends on its author's expert knowledge. In this paper, we present an empirical study of the textual difference between bug reports written by experts and non-experts. We find that a significant difference exists and that this difference has a significant impact on the results from a state-of-the-art feature location tool. Through an additional study, we also found no evidence that these encountered differences were caused by the increased usage of terms from the source code in the expert bug reports. Our recommendation is that researchers evaluate maintenance tools using different sets of bug reports for experts and non-experts. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Rodeghero, Paige; Huo, Da; McMillan, Collin] Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46545 USA.
   [Ding, Tao; Gethers, Malcom] Univ Maryland Baltimore Cty, Informat Syst Dept, Baltimore, MD 21201 USA.
C3 University of Notre Dame; University System of Maryland; University of
   Maryland Baltimore County
RP Rodeghero, P (corresponding author), Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46545 USA.
EM prodeghe@nd.edu
CR [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   [Anonymous], 2005, WORKSH EMP STUD REV
   [Anonymous], 2007, P CIKM 2007 ACM
   [Anonymous], 2006, THESIS
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Begel A, 2008, SIGCSE'08: PROCEEDINGS OF THE 39TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P226, DOI 10.1145/1352322.1352218
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bugde S, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P182, DOI 10.1109/ICGSE.2008.18
   Canfora G., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1767, DOI 10.1145/1141277.1141693
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Croft D, 2013, 2013 13TH UK WORKSHOP ON COMPUTATIONAL INTELLIGENCE (UKCI), P221, DOI 10.1109/UKCI.2013.6651309
   Dit B, 2008, P 1 STSM
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   German D., 2006, MSR: Proceedings of the Third International Workshop on Mining Software Repositories, P163
   German DM, 2006, EMPIR SOFTW ENG, V11, P369, DOI 10.1007/s10664-006-9004-6
   Gethers M., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P540, DOI 10.1109/ASE.2011.6100120
   Hofman R, 2011, EMPIR SOFTW ENG, V16, P278, DOI 10.1007/s10664-010-9140-x
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jarzabek S, 2007, Effective software maintenance and evolution: A reuse-based approach
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Kagdi H, 2011, J SOFTWARE EVOLUTION, V24, P3
   Kagdi H, 2009, INT C PROGRAM COMPRE, P273, DOI 10.1109/ICPC.2009.5090056
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Ko A., 2012, CHI EA 12, P191, DOI DOI 10.1145/2212776.2212797
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   KROVETZ R, 1992, ACM T INFORM SYST, V10, P115, DOI 10.1145/146802.146810
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Levesque LL, 2001, J ORGAN BEHAV, V22, P135, DOI 10.1002/job.87
   Li YH, 2003, IEEE T KNOWL DATA EN, V15, P871, DOI 10.1109/TKDE.2003.1209005
   Linares-Vasquez M, 2012, 28 IEEE INT C SOFTW
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Ma D, 2009, PROC IEEE INT CONF S, P535, DOI 10.1109/ICSM.2009.5306386
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marks L, 2011, 7 INT C PRED MOD SOF
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   McDonald D. W., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P231, DOI 10.1145/358916.358994
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Minto Shawn, 2007, 4 INT WORKSH MIN SOF, P5
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nosek J. T., 1990, Journal of Software Maintenance: Research and Practice, V2, P157, DOI 10.1002/smr.4360020303
   Orso A, 2004, PROC INT CONF SOFTW, P491, DOI 10.1109/ICSE.2004.1317471
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Ren XX, 2005, PROC INT CONF SOFTW, P664, DOI 10.1145/1062455.1062598
   Revelle M, 2009, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2009.5090045
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sanderson M, 1999, ACM T INFORM SYST, V17, P440, DOI 10.1145/326440.326447
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Song XD, 2005, LECT NOTES ARTIF INT, V3538, P99
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Tamrawi A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P884, DOI 10.1145/1985793.1985934
   Torchiano M, 2010, P 2010 ACM IEEE INT
   Tsunoda Masateru, 2006, P 2006 INT WORKSH MI, P181
   ubrani D, 2004, SEKE 2004
   Voorhees E. M., 1993, SIGIR Forum, P171
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   WeiSSgerber Peter., 2007, MINING SOFTWARE REPO, P9
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 82
TC 3
Z9 4
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2016
VL 28
IS 7
SI SI
BP 542
EP 564
DI 10.1002/smr.1773
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR5LY
UT WOS:000379945700003
DA 2024-07-18
ER

PT J
AU Sahin, C
   Wan, M
   Tornquist, P
   McKenna, R
   Pearson, Z
   Halfond, WGJ
   Clause, J
AF Sahin, Cagri
   Wan, Mian
   Tornquist, Philip
   McKenna, Ryan
   Pearson, Zachary
   Halfond, William G. J.
   Clause, James
TI How does code obfuscation impact energy usage?
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE mobile applications; energy usage; code obfuscation; empirical study
ID POWER
AB Software piracy is an important concern for application developers. Such concerns are especially relevant in mobile application development, where piracy rates can be greater than 90%. The most common approach used by mobile developers to prevent piracy is code obfuscation. However, the decision to apply such transformations is currently made without regard to the impacts of obfuscations on another area of increasing concern for mobile application developers, energy usage. Because both software piracy and battery life are important concerns, mobile application developers must strike a balance between protecting their applications and preserving the battery lives of their users' devices. To help them make such choices, we conducted an empirical study of the effects of 18 code obfuscations on the amount of energy consumed by executing a total of 21 usage scenarios spread across 11 Android applications on four different mobile phone platforms. The results of the study indicate that, while obfuscations can have a statistically significant impact on energy usage and are more likely to increase energy usage than to decrease energy usage, the magnitudes of such impacts are unlikely to be meaningful to mobile application users. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Sahin, Cagri; Tornquist, Philip; McKenna, Ryan; Pearson, Zachary; Clause, James] Univ Delaware, Dept Comp Sci, Newark, DE 19716 USA.
   [Wan, Mian; Halfond, William G. J.] Univ So Calif, Dept Comp Sci, Los Angeles, CA 90089 USA.
C3 University of Delaware; University of Southern California
RP Clause, J (corresponding author), Univ Delaware, Dept Comp Sci, Newark, DE 19716 USA.
EM clause@udel.edu
RI Halfond, William GJ/AAT-2382-2021; Sahin, Cagri/AAA-1719-2019
OI Halfond, William GJ/0000-0003-4951-9367; Sahin,
   Cagri/0000-0001-5800-6243; Clause, James/0000-0003-2728-3840
FU National Science Foundation [1216488, 1321141]; Direct For Computer &
   Info Scie & Enginr; Division of Computing and Communication Foundations
   [1216488] Funding Source: National Science Foundation; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1321141] Funding Source: National Science Foundation
FX This work is supported in part by National Science Foundation grant no.
   1216488 and no. 1321141. We would also like to thank Smardec, PreEmptive
   Solutions, and Zelix Pty. Ltd. for providing full-featured copies of
   their obfuscation tools. Finally, we would like to thank Abram Hindle
   for his initial guidance on building the Nexus 4-based EMP.
CR Amsel Nadine., 2010, Proceedings, CHI EA, P3337, DOI DOI 10.1145/1753846.1753981
   [Anonymous], P INT C ARCH SUPP PR
   [Anonymous], P 2 INT WORKSH GREEN
   [Anonymous], EMPIRICAL SOFTWARE E
   [Anonymous], P LIN S
   [Anonymous], 2014, P 8 ACM IEEE INT S E
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arunagiri S, STEREO MATCHING PERF, V80, DOI 211Z-80211Z-17
   Baek W, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P198, DOI 10.1145/1806596.1806620
   Bartenstein TW, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P532, DOI 10.1109/ICSE.2013.6606599
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Brooks D, 2000, PROCEEDING OF THE 27TH INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE, P83, DOI [10.1145/342001.339657, 10.1109/ISCA.2000.854380]
   Bunse C, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P199
   Bunse Christian., 2013, EASED@ BUIS, P7
   Cao T, 2012, CONF PROC INT SYMP C, P225
   Ceccato M, 2009, INT C PROGRAM COMPRE, P178, DOI 10.1109/ICPC.2009.5090041
   Ching-Long Su, 1994, Digest of Papers. Spring COMPCON 94 (Cat. No.94CH3414-0), P489, DOI 10.1109/CMPCON.1994.282878
   Chun B.-G., 2009, HOTOS, P8
   Cohen M, 2012, ACM SIGPLAN NOTICES, V47, P831, DOI 10.1145/2398857.2384676
   da Silva W. G., 2010, 1.Workshop de Sistemas Embarcados, P145
   David Howard, 2010, Proceedings of the 16th ACM/IEEE International Symposium on Low Power Electronics and Design (ISLPED 2010), P189, DOI 10.1145/1840845.1840883
   DAVIDSON JW, 1994, SIGPLAN NOTICES, V29, P186, DOI 10.1145/773473.178259
   Dong M, 2011, P ACM USENIX INT C M
   DOUGLIS F, 1995, PROCEEDINGS OF THE SECOND USENIX SYMPOSIUM ON MOBILE AND LOCATION-INDEPENDENT COMPUTING, P121
   Esmaeilzadeh H, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P301
   Flautner Krisztian., 2001, MOBILE COMPUTING NET, P260
   Fraser C. W., 1992, ACM Letters on Programming Languages and Systems, V1, P213, DOI 10.1145/151640.151642
   Gomez L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P72, DOI 10.1109/ICSE.2013.6606553
   Gui J, 2015, P 37 INT C IN PRESS
   Gurumurthi S, 2002, EIGHTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTER ARCHITECTURE, PROCEEDINGS, P141
   Hao S, 2013, P 35 INT C SOFTW ENG
   Heo S, 2003, ISLPED'03: PROCEEDINGS OF THE 2003 INTERNATIONAL SYMPOSIUM ON LOW POWER ELECTRONICS AND DESIGN, P217
   Hindle A., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P78, DOI 10.1109/MSR.2012.6224303
   Hsing-Yu Chen, 2012, Proceedings of the 2012 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2012), P466, DOI 10.1109/CCGrid.2012.98
   Hsu CH, 2003, ACM SIGPLAN NOTICES, V38, P38, DOI 10.1145/780822.781137
   Hu CL, 2007, LECT NOTES COMPUT SC, V4367, P183
   Huang PK, 2007, ACM T DES AUTOMAT EL, V12, DOI 10.1145/1255456.1255464
   Hunt N., 2011, 2011 INTERACT-15: Proceedings of the 15th Workshop on Interaction between Compilers and Computer Architectures (INTERACT 2011), P63, DOI 10.1109/INTERACT.2011.13
   Iyer A, 2001, DESIGN, AUTOMATION AND TEST IN EUROPE, CONFERENCE AND EXHIBITION 2001, PROCEEDINGS, P190, DOI 10.1109/DATE.2001.915023
   Kadayif I., 2005, ACM Transactions in Embedded Computing Systems, V4, P819
   Kansal A, 2013, ACM SIGPLAN NOTICES, V48, P661, DOI [10.1145/2544173.2509541, 10.1145/2509136.2509541]
   Kemp R, 2012, 2 INT C PERS TECHN, DOI [10.1007/978-3-642-29336-8_4, DOI 10.1007/978-3-642-29336-8_4]
   Kravets R., 1998, MobiCom'98. Proceedings of Fourth Annual ACM/IEEE International Conference on Mobile Computing and Networking, P157, DOI 10.1145/288235.288276
   Kremer U., 2005, Low-Power Electronics Design, P2
   Kumar Karthik., 2012, A Survey of Computation Offloading for Mobile Systems
   Li D, 2013, P INT S SOFTW TEST A
   Li D., 2014, P INT C SOFTW MAINT
   Li D, 2014, P INT S SOFTW TEST A
   Li D, 2014, PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE ON NUCLEAR ENGINEERING - 2013, VOL 5
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Litke A., 2005, Proceedings of the International Conference on Machine Learning and Software Engineering, P86
   Liu Y. D., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P35, DOI 10.1109/GREENS.2012.6224253
   Liu YP, 2013, INT CONF PERVAS COMP, P2, DOI 10.1109/PerCom.2013.6526708
   Lu YH, 2000, PROC INT SYMP SYST, P18, DOI 10.1109/ISSS.2000.874024
   Ma Xiao., 2013, Proceedings of the 10th USENIX Conference on Networked Systems Design and Implementation, nsdi'13, P57
   Mainland G, 2008, ICFP'08: PROCEEDINGS OF THE 2008 SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P335
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Mehta H, 1997, 1997 INTERNATIONAL SYMPOSIUM ON LOW POWER ELECTRONICS AND DESIGN, PROCEEDINGS, P72, DOI 10.1109/LPE.1997.621242
   Monchiero Matteo., 2006, PROC 20 INT C SUPERC, P177
   Mudge T., REFERENCE MANUAL SIM
   Musoll E, 2008, ISQED 2008: PROCEEDINGS OF THE NINTH INTERNATIONAL SYMPOSIUM ON QUALITY ELECTRONIC DESIGN, P549
   Noureddine A., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P21, DOI 10.1109/GREENS.2012.6224251
   Pathak A., 2012, Mobisys, DOI DOI 10.1145/2307636.2307661
   Pering T, 2000, ISLPED '00: PROCEEDINGS OF THE 2000 INTERNATIONAL SYMPOSIUM ON LOW POWER ELECTRONICS AND DESIGN, P96, DOI 10.1109/LPE.2000.876764
   Pettis N, 2006, DES AUT TEST EUROPE, P506
   Pinto G., 2014, P 11 WORK C MIN SOFT, P22
   Pouwelse J., 2001, P ACM MOBICOM, P251, DOI DOI 10.1145/381677.381701
   Priyantha B, 2011, IEEE PERVAS COMPUT, V10, P12, DOI 10.1109/MPRV.2011.28
   Rangasamy A., 2008, CF 08, P209
   Sahin C., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P55, DOI 10.1109/GREENS.2012.6224257
   Sahin C, 2014, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSME.2014.35
   Sampson A, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P164
   Saputra H, 2002, ACM SIGPLAN NOTICES, V37, P2, DOI 10.1145/566225.513832
   Seo C, 2008, LECT NOTES COMPUT SC, V5282, P97
   Seo Chiyoung., 2007, Proceedings of the twentysecond IEEE/ACM international conference on Automated software engineering, ASE '07, P421
   Shuai Hao, 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P1, DOI 10.1109/GREENS.2012.6224263
   Singh D., 2010, The Atom LEAP platform for energy-efficient embedded computing: architecture, operation, and system implementation
   Sorber J, 2007, SENSYS'07: PROCEEDINGS OF THE 5TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS, P161
   TIWARI V, 1994, IEEE IC CAD, P384
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wan M, 2015, P 8 IEEE IN IN PRESS
   Zeng H, 2002, ACM SIGPLAN NOTICES, V37, P123, DOI 10.1145/605432.605411
NR 82
TC 20
Z9 20
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2016
VL 28
IS 7
SI SI
BP 565
EP 588
DI 10.1002/smr.1762
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR5LY
UT WOS:000379945700004
DA 2024-07-18
ER

PT J
AU Espinosa-Curiel, IE
   Rodríguez-Jacobo, J
   Fernández-Zepeda, JA
AF Edrein Espinosa-Curiel, Ismael
   Rodriguez-Jacobo, Josefina
   Alberto Fernandez-Zepeda, Jose
TI Understanding SPI in small organizations: a study of Mexican software
   enterprises
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software process improvement; small organizations; grounded action
   research; theoretical framework
ID PROCESS IMPROVEMENT; GROUNDED THEORY; EXPERIENCES
AB Software process improvement (SPI) has become one of the main strategies employed by small software enterprises to reduce their development costs or to increase the quality of their products and their development speed. Recent studies show that many small organizations still struggle to implement SPI initiatives successfully. One of the main problems with small organizations is that they usually lack the knowledge and practical experience about the human, social, and organizational phenomena associated with SPI initiatives and their effects. The objective of this paper is to present a grounded action research study that investigated SPI initiatives conducted by 10 Mexican small enterprises. The main product of this study is an initial theoretical framework that attempts to explain the effects of SPI initiatives in small organizations. We concluded that SPI initiatives affect organizational elements (i.e., structure, culture, organizational climate, projects) and human resources (i.e., employees and managers), and vice versa, and these elements are highly interrelated. Therefore, small enterprises need comprehensive SPI strategies that consider, in an integrated way, changes in processes, organizational elements, and human resources. SPI practitioners can use the results of this study to define more efficient and effective strategies to implement SPI initiatives in small organizations. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Edrein Espinosa-Curiel, Ismael; Rodriguez-Jacobo, Josefina] CICESE UT3, Andador 10 109, Tepic 63173, Nayarit, Mexico.
   [Rodriguez-Jacobo, Josefina; Alberto Fernandez-Zepeda, Jose] CICESE, Dept Comp Sci, Carretera Ensenada Tijuana 3918, Ensenada 22860, Baja California, Mexico.
C3 CICESE - Centro de Investigacion Cientifica y de Educacion Superior de
   Ensenada
RP Espinosa-Curiel, IE (corresponding author), CICESE UT3, Andador 10 109, Tepic 63173, Nayarit, Mexico.
EM ecuriel@cicese.mx
RI Espinosa-curiel, Ismael/D-1292-2019
OI Espinosa-curiel, Ismael/0000-0002-3136-3256
CR Alexandre S, 2006, EUROMICRO CONF PROC, P328, DOI 10.1109/EUROMICRO.2006.48
   Allen P, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P211, DOI 10.1109/QSIC.2003.1319105
   Allison I, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P418, DOI 10.1109/QUATIC.2010.81
   Montoni MA, 2014, INNOV SYST SOFTW ENG, V10, P33, DOI 10.1007/s11334-013-0209-8
   [Anonymous], 2013, EUR C SOFTW PROC IMP
   [Anonymous], AUSTR SOFTW ENG C, DOI DOI 10.1109/ASWEC.2001.948512
   [Anonymous], 2007, Basics of qualitative research: techniques and procedures for developing grounded theory
   [Anonymous], PROC MAT PROF CMMI D
   [Anonymous], 1993, Educational Researcher, DOI DOI 10.3102/0013189X022004016
   Aysolmaz B, 2011, COMM COM INF SC, V172, P97
   Baskerville R., 1999, Communications of the Association for Information Systems, V19
   Baskerville R., 1999, ACCOUNTING MANAGEMEN, V9, P1, DOI 10.1016/S0959-8022(98)00017-4
   Batista J., 2000, Software Process Improvement and Practice, V5, P243, DOI 10.1002/1099-1670(200012)5:4<243::AID-SPIP126>3.0.CO;2-0
   Beijun Shen, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P609, DOI 10.1109/CSSE.2008.701
   Cao GM, 2003, SYST RES BEHAV SCI, V20, P231, DOI 10.1002/sres.530
   Clark BK, 2000, IEEE SOFTWARE, V17, P65, DOI 10.1109/52.895170
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Dangle KC, 2005, IEEE SOFTWARE, V22, P68, DOI 10.1109/MS.2005.162
   Demirors O, 1998, LECT NOTES COMPUT SC, V1487, P1
   Dyba T., 2003, Software Engineering Notes, V28, P148, DOI 10.1145/949952.940092
   Espinosa-Curiel IE, 2013, J SOFTW-EVOL PROC, V25, P393, DOI 10.1002/smr.569
   Falessi D, 2014, IEEE SOFTWARE, V31, P80, DOI 10.1109/MS.2014.17
   Fayad ME, 2000, COMMUN ACM, V43, P115, DOI 10.1145/330534.330555
   Guerrero F, 2004, IEEE SOFTWARE, V21, P29, DOI 10.1109/MS.2004.3
   Henfridsson O., 2005, Information and Organization, V15, P95, DOI 10.1016/j.infoandorg.2005.02.009
   Horvat R. V., 2000, Software Process Improvement and Practice, V5, P45, DOI 10.1002/(SICI)1099-1670(200003)5:1<45::AID-SPIP110>3.0.CO;2-2
   Humphrey WS, 2002, ANN SOFTW ENG, V14, P39, DOI 10.1023/A:1020593305601
   Kautz K., 1998, Software Process Improvement and Practice, V4, P209, DOI 10.1002/(SICI)1099-1670(199812)4:4<209::AID-SPIP105>3.0.CO;2-8
   Kelly DP, 1999, COMPUTER, V32, P41, DOI 10.1109/2.796108
   Khokhar Muhammad Nawazish, 2010, 2010 4th International Conference on New Trends in Information Science and Service Science (NISS 2010), P592
   Kuvaja P, 1999, SOFTWARE QUAL J, V8, P149, DOI 10.1023/A:1008909011736
   Laporte CY, 2008, COMM COM INF SC, V16, P129
   Niazi M, 2006, LECT NOTES COMPUT SC, V4034, P395
   Oktaba H, 2007, COMPUTER, V40, P21, DOI 10.1109/MC.2007.361
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Pino FJ, 2010, J SYST SOFTWARE, V83, P1662, DOI 10.1016/j.jss.2010.03.077
   Pino FJ, 2009, LECT NOTES COMPUT SC, V5543, P342, DOI 10.1007/978-3-642-01680-6_31
   Polit DF, 2010, INT J NURS STUD, V47, P1451, DOI 10.1016/j.ijnurstu.2010.06.004
   Richardson I, 2002, SOFTWARE QUAL J, V10, P101, DOI 10.1023/A:1020519822806
   Richardson I, 2007, IEEE SOFTWARE, V24, P18, DOI 10.1109/MS.2007.12
   Robson C., 2011, REAL WORLD RES RESOU
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   Valtanen A, 2008, LECT NOTES COMPUT SC, V5089, P258, DOI 10.1007/978-3-540-69566-0_22
   Villalón JACM, 2002, SOFTWARE QUAL J, V10, P261, DOI 10.1023/A:1021638523413
   von Wangenheim CG, 2006, INFORM SOFTWARE TECH, V48, P890, DOI 10.1016/j.infsof.2005.12.010
   Yin R.K., 2011, Quarterly research from start to finish
   Zeineddine R, 2003, LECT NOTES COMPUT SC, V2869, P1027
NR 49
TC 3
Z9 5
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2016
VL 28
IS 5
BP 372
EP 390
DI 10.1002/smr.1775
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DL6YP
UT WOS:000375786300003
DA 2024-07-18
ER

PT J
AU Lepmets, M
   Clarke, P
   McCaffery, F
   Finnegan, A
   Dorling, A
AF Lepmets, Marion
   Clarke, Paul
   McCaffery, Fergal
   Finnegan, Anita
   Dorling, Alec
TI Development of MDevSPICE® - the medical device software process
   assessment framework
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE MDevSPICE (R); process assessment model; process reference model;
   medical device software; medical device regulations; process assessment
   framework
AB Software that is incorporated into a medical device, or which is a standalone medical device in its own right, is of a safety critical nature and subject to regulation from various jurisdictions. In order to satisfy jurisdictional regulations, developers of medical device software adopt standards and guidance provided by international standards bodies and regulators. However, the various standards and guidance documents are often not developed as a single cohesive set resulting in a complex and costly challenge for medical device software developers when complying with regulation. The aim of this paper is to describe the integration of medical device guidance documents and software engineering standards into a unified framework for medical device software process assessment called MDevSPICE (R). The paper illustrates the development of both the process reference model and the process assessment model (PAM) of MDevSPICE (R). The MDevSPICE (R) PAM can help software developers to prepare for the regulatory audits, which they must satisfy as a prerequisite to placing their products on the market. The MDevSPICE (R) PAM can also assist medical device manufacturers to select competent software suppliers. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Lepmets, Marion; Clarke, Paul; McCaffery, Fergal; Finnegan, Anita; Dorling, Alec] Dundalk Inst Technol, Regulated Software Res Ctr, Dundalk, Ireland.
C3 Dundalk Institute of Technology
RP Lepmets, M (corresponding author), Dundalk Inst Technol, Regulated Software Res Ctr, Dundalk, Ireland.
EM Marion.Lepmets@dkit.ie
RI Clarke, Paul/JAX-9606-2023
OI Clarke, Paul/0000-0002-4487-627X; Mc Caffery, Fergal/0000-0002-0839-8362
FU Enterprise Ireland; European Regional Development Fund (ERDF)
   [CF/2012/2631]; Science Foundation Ireland (SFI) [08/IN.1/I2030];
   Science Foundation Ireland (Irish Government); Science Foundation
   Ireland (European Regional Development Fund); Lero [10/CE/I1855];
   Science Foundation Ireland (SFI) [08/IN.1/I2030] Funding Source: Science
   Foundation Ireland (SFI)
FX This research is supported by the Enterprise Ireland and the European
   Regional Development Fund (ERDF) under the National Strategic Reference
   Framework (NSRF) 2007-2013, grant number CF/2012/2631, and in part by
   the Science Foundation Ireland (SFI) Principal Investigator Programme,
   grant number 08/IN.1/I2030 (the funding of this project was awarded by
   Science Foundation Ireland under a co-funding initiative by the Irish
   Government and European Regional Development Fund) and also through Lero
   (grant number 10/CE/I1855).
CR [Anonymous], 2009, 8000212009 IEC
   [Anonymous], 823041 IEC
   [Anonymous], 800023 IEC TR
   [Anonymous], 13485 ISO
   [Anonymous], 2006, 623042006 IEC
   [Anonymous], 14971 ISO
   [Anonymous], 2004, 155042 ISO IEC
   [Anonymous], 2000, ISO 9001:2000
   [Anonymous], 60601 IEC
   [Anonymous], 62366 IEC
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   FDA, 1999, GUID IND FDA REV COM, P26
   FDA, 2005, GUID CONT PREM SUBM, P20
   FDA, FOOD DRUG ADM DEP HL
   FDA, 2002, GEN PRINC SOFTW VAL, P43
   ISO/IEC, 2010, 24774 ISOIEC
   ISO/IEC, 1995, 122071995 ISO IEC
   ISO/IEC, 2008, 122072008 ISO IEC
   ISO/IEC, 2012, 155045 IEOIEC
   Regan G, 2014, EUROSPI 2014, P206
NR 21
TC 5
Z9 6
U1 1
U2 11
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2015
VL 27
IS 8
SI SI
BP 565
EP 572
DI 10.1002/smr.1731
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CP8UU
UT WOS:000360170900007
DA 2024-07-18
ER

PT J
AU Amasaki, S
   Lokan, C
AF Amasaki, S.
   Lokan, C.
TI On the effectiveness of weighted moving windows: Experiment on linear
   regression based software effort estimation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE effort estimation; moving window; gradual weighting
AB In construction of an effort estimation model, it seems effective to use a window of training data so that the model is trained with only recent projects. Considering the chronological order of projects within the window, and weighting projects according to their order within the window, may also affect estimation accuracy. In this study, we examined the effects of weighted moving windows on effort estimation accuracy. We compared weighted and non-weighted moving windows under the same experimental settings. We confirmed that weighting methods significantly improved estimation accuracy in larger windows, although the methods also significantly worsened accuracy in smaller windows. This result contributes to understanding properties of moving windows. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Amasaki, S.] Okayama Prefectural Univ, Dept Syst Engn, Okayama 7191197, Japan.
   [Lokan, C.] UNSW Canberra, Sch Engn & Informat Technol, Canberra, ACT 2600, Australia.
C3 Okayama Prefectural University; University of New South Wales Sydney
RP Amasaki, S (corresponding author), Okayama Prefectural Univ, Dept Syst Engn, 111 Kuboki, Okayama 7191197, Japan.
EM amasaki@cse.oka-pu.ac.jp
FU Japan Society for the Promotion of Science [25330083]; Wesco Scientific
   Promotion Foundation; Grants-in-Aid for Scientific Research [25330083]
   Funding Source: KAKEN
FX A part of this work is supported by Grant-in-Aid for Scientific Research
   (C) 25330083, Japan Society for the Promotion of Science, and Wesco
   Scientific Promotion Foundation.
CR Amasaki S, 2013, LECT NOTES COMPUT SC, V7983, P214, DOI 10.1007/978-3-642-39259-7_18
   Amasaki S, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P23, DOI 10.1109/IWSM-MENSURA.2012.13
   [Anonymous], USING MULTIVARIATE S
   Auer M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P147
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Loaders C., 1999, LOCAL REGRESSION LIK
   Lokan C, 2012, ASIA PAC SOFWR ENG, P818, DOI 10.1109/APSEC.2012.74
   Lokan C, 2009, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2009.5316019
   MacDonells SG, 2010, P 2010 ACM IEEE INT
   Maxwells KD., 2002, APPL STAT SOFTWARE M
   Mendes E, 2008, EMPIR SOFTW ENG, V13, P3, DOI 10.1007/s10664-007-9045-5
   Mendess E, 2009, P 13 C EV ASS SOFTW
   Ports D, 2008, P 2 ACM IEEE INT S E
   Tibshirani R, 1996, J ROY STAT SOC B, V58, P267, DOI 10.1111/j.2517-6161.1996.tb02080.x
NR 17
TC 22
Z9 23
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2015
VL 27
IS 7
SI SI
BP 488
EP 507
DI 10.1002/smr.1672
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM8UG
UT WOS:000357977000003
OA Green Published
DA 2024-07-18
ER

PT J
AU Ben Charrada, E
   Koziolek, A
   Glinz, M
AF Ben Charrada, Eya
   Koziolek, Anne
   Glinz, Martin
TI Supporting requirements update during software evolution
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE requirements evolution; requirements update; impact analysis;
   traceability; artifact synchronization
ID RECOVERING TRACEABILITY LINKS; INFORMATION-RETRIEVAL; CODE; TOOL;
   DOCUMENTATION; DESIGN
AB Updating the requirements specification when software systems evolve is a manual task that is expensive and time consuming. Therefore, maintainers usually apply the changes to the code directly and leave the requirements unchanged. This results in the requirements rapidly becoming obsolete and useless. In this paper, we propose an approach that supports the maintainer in keeping the requirements specification consistent with the implementation, by identifying the requirements that are impacted whenever the code is changed. Our approach works as follows. First, we analyze the changes that have been applied to the source code and detect if they are likely to impact the requirements or not. Second, we trace the requirements-impacting changes back to the requirements specification to identify the parts that might need to be modified. The output of the tracing is a list of requirements that are sorted according to their likelihood of being impacted. Automatically identifying the parts of the requirements specification that are likely to need maintenance reduces the effort needed for keeping the requirements up-to-date and thus makes the task of the maintainer easier. When applying our approach in three cases studies, 70% to 100% of the impacted requirements were identified within a list that includes less than 20% of the total number of requirements in the specification. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Ben Charrada, Eya; Glinz, Martin] Univ Zurich, Dept Informat, Zurich, Switzerland.
   [Koziolek, Anne] Karlsruhe Inst Technol, Dept Informat, D-76021 Karlsruhe, Germany.
C3 University of Zurich; Helmholtz Association; Karlsruhe Institute of
   Technology
RP Ben Charrada, E (corresponding author), Univ Zurich, Dept Informat, Zurich, Switzerland.
EM charrada@ifi.uzh.ch
RI Koziolek, Anne/T-2305-2019; Koziolek, Anne/AAG-5242-2020
OI Koziolek, Anne/0000-0002-1593-3394
FU Swiss National Science Foundation [PDFMP2-122969]; Swiss National
   Science Foundation (SNF) [PDFMP2-122969] Funding Source: Swiss National
   Science Foundation (SNF)
FX This work was partially funded by the Swiss National Science Foundation
   under grant PDFMP2-122969.
CR Ali N, 2013, WORK CONF REVERSE EN, P361, DOI 10.1109/WCRE.2013.6671311
   Andy Meneely, 2012, SOFTWARE SYSETMS TRA
   Duc AN, 2011, IFIP ADV INF COMM TE, V365, P1
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Apache, 2014, SUBV BEST PRACT
   Apiwattanapong T, 2007, AUTOMAT SOFTW ENG, V14, P3, DOI 10.1007/s10515-006-0002-0
   Assawamekin N, 2010, KNOWL INF SYST, V25, P493, DOI 10.1007/s10115-009-0259-2
   Ben Charrada Eya, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P61, DOI 10.1109/RE.2012.6345840
   Ben Charrada E., 2011, P 12 INT WORKSH PRIN, P21
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Cazzola W, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1275, DOI 10.1145/1244002.1244278
   Christopher Fox, 2006, INTRO SOFTWARE ENG D
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   D'Hondt T, 2002, SPRING INT SER ENG C, V648, P207
   Dasgupta T, 2013, PROC IEEE INT CONF S, P320, DOI 10.1109/ICSM.2013.43
   David L., 2008, ADV DATA MINING TECH
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2010, SOFTWARE PRACT EXPER, V40, P1007, DOI 10.1002/spe.986
   Delater Alexander, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P25, DOI 10.1109/ESEM.2013.16
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Ernst Michael, 2014, VERSION CONTROL CONC
   Ernst Neil A, 2011, P 12 INT WORKSH PRIN, P16
   Eya Ben Charrada, 2010, JOINT ERCIM WORKSH S, P58
   Glinz M., 2005, Pro- ceedings of the Third World Congress for Software Quality 3WCSQ'05, P55
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Gorschek T, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P405, DOI 10.1007/3-540-28244-0_18
   Hammad M, 2011, SOFTWARE QUAL J, V19, P35, DOI 10.1007/s11219-010-9103-x
   Hayes JH, 2007, INNOV SYST SOFTW ENG, V3, P193, DOI 10.1007/s11334-007-0024-1
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.156
   Herrmann A, 2009, LECT NOTES COMPUT SC, V5512, P45, DOI 10.1007/978-3-642-02050-6_5
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   Lahiri Shuvendu K., 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P712, DOI 10.1007/978-3-642-31424-7_54
   Laurie Williams, 2010, ITRUST MED CARE REQU
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Li YH, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P30, DOI 10.1109/TEFSE.2013.6620151
   Lin J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P363
   Lormans M, 2008, EMPIR SOFTW ENG, V13, P727, DOI 10.1007/s10664-008-9078-4
   Mäder P, 2012, J SYST SOFTWARE, V85, P2205, DOI 10.1016/j.jss.2011.10.023
   Mahmoud A, 2013, S VIS LANG HUM CEN C, P32, DOI 10.1109/RE.2013.6636703
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Matthew Doar, 2002, JAVA DEV J
   Mens K, 2006, COMPUT LANG SYST STR, V32, P140, DOI 10.1016/j.cl.2005.09.002
   Raghavan S, 2004, PROC IEEE INT CONF S, P188, DOI 10.1109/ICSM.2004.1357803
   Reiss SP, 2006, IEEE T SOFTWARE ENG, V32, P682, DOI 10.1109/TSE.2006.91
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Sandor Dominich, 2008, MODERN ALGEBRA INFOR
   VICTOR R, 1992, CSTR2956 U MAR
   Wayne Hunt James, 1976, ALGORITHM DIFFERENTI
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   Zowghi D, 2003, INFORM SOFTWARE TECH, V45, P993, DOI 10.1016/S0950-5849(03)00100-9
NR 55
TC 9
Z9 12
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2015
VL 27
IS 3
BP 166
EP 194
DI 10.1002/smr.1705
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CE8LH
UT WOS:000352093300002
OA Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Vlietland, J
   van Vliet, H
AF Vlietland, Jan
   van Vliet, Hans
TI Improving IT incident handling performance with information visibility
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE incident handling performance; information visibility; service teams
ID MANAGEMENT
AB In large internal information technology (IT) organizations, multiple teams are often involved in handling incidents, so these teams come to depend on one another. We hypothesize that the knowledge these teams have of the agreed upon and realized incident handling performance of themselves and other teams will impact their performance. We tested this hypothesis at a large financial institute, using log data from the IT service management application and a survey to measure the knowledge of teams. We found (1) a significant positive correlation between incident handling performance of a team and the knowledge a team has of its own performance; (2) no correlation between the knowledge of agreed upon performance and realized performance within a team; (3) that teams have very little knowledge of agreed upon or realized performance of other teams; and (4) that improving the knowledge a team has of the agreed upon and realized performance of that team and dependent teams results in higher incident handling performance. The results show that increasing information visibility within and across teams in large IT providers is one way to improve incident handling performance. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Vlietland, Jan] Search4Solut BV, Profess Serv, Utrecht, Netherlands.
   [van Vliet, Hans] Vrije Univ Amsterdam, Dept Comp Sci, Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam
RP Vlietland, J (corresponding author), Search4Solut Profess Serv, BV, Utrecht, Netherlands.
EM j.vlietland@Search4Solutions.nl
CR Andrei N., 2006, Studies in Informatics and Control, V15, P51
   Bardhan IR, 2010, J MANAGE INFORM SYST, V26, P13, DOI 10.2753/MIS0742-1222260402
   Barlett PA., 2007, INT J LOGIST MANAG, V18, P294, DOI [DOI 10.1108/09574090710816986, 10.1108/09574090710816986]
   Bartolinis C, 2006, IEEE IFIP NETW OP MA
   Caridi M, 2010, BENCHMARKING, V17, P593, DOI 10.1108/14635771011060602
   Caridis M, 2010, J PRODUCTION EC, V127, P372
   Disney SM, 2003, INT J PROD ECON, V85, P199, DOI 10.1016/S0925-5273(03)00110-5
   Ellrarn LM, 2007, CALIF MANAGE REV, V49, P44, DOI 10.2307/41166405
   Francis V, 2008, SUPPLY CHAIN MANAG, V13, P180, DOI 10.1108/13598540810871226
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   Hiless A., 2002, COMPLETE GUIDE IT SE
   Janttis M, 2012, 7 INT C SYST ICONS
   Janttis M., 2011, 22 INT WORKSH DAT EX
   Janttis M, 2011, INT J ADV SYSTEM MEA, V3, P125
   Lees HL, 1997, SLOAN MANAGE REV, V38, P93
   Niessinks F., 2001, THESIS VU U AMST
   Office of Government Commerce (OGC), 2007, ITIL SERV OP
   Peppard J., 2003, European Management Journal, V21, P467, DOI [DOI 10.1016/S0263-2373(03)00074-4, 10.1016/S0263-2373, DOI 10.1016/S0263-2373]
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salles M, 2004, NOMS
   Software Engineering Institute, 2010, CMMI SERV VERS 1 3
   vans Bons J, 2007, FDN IT SERV MANAGEME, V3
   Vlietlands J, 2013, INFORM SHARING UNPUB
   Vlietlands J, 2013, P MENS
   Wieners N, 1965, CYBERNETICS CONTROL, V25
NR 25
TC 7
Z9 7
U1 0
U2 5
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2014
VL 26
IS 12
BP 1106
EP 1127
DI 10.1002/smr.1649
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX0NS
UT WOS:000346649500003
DA 2024-07-18
ER

PT J
AU Grossi, L
   Calvo-Manzano, JA
   Feliu, TS
AF Grossi, Lucas
   Calvo-Manzano, Jose A.
   San Feliu, Tomas
TI High-maturity levels: achieving CMMI ML-5 in a consultancy company
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE CMMI-DEV; CMMI-SVC; high maturity; consultancy
AB Most organizations that use the Capability Maturity Model Integration (CMMI) stop their process improvement journey at Maturity Level 3 or less. The discussion about CMMI high-maturity levels has always been controversial, going most of the times through the consideration of return of investment, provider selection, and interpretation issues. Achieving Level 5 is not an easy task; it derives a lot of steps during the way. This article will show an example of the implementation of Level 5 in a consultancy company in two constellations: development and service. It depicts the example in steps, to help the understanding of the whole process. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Grossi, Lucas] AXPE Consulting, Madrid, Spain.
   [Calvo-Manzano, Jose A.; San Feliu, Tomas] Univ Politecn Madrid, Madrid, Spain.
C3 Universidad Politecnica de Madrid
RP Grossi, L (corresponding author), AXPE Consulting, Madrid, Spain.
EM lgcgrossi@gmail.com
RI San Feliu, Tomas/B-4515-2011; Calvo-Manzano, Jose A./K-9426-2013
OI Calvo-Manzano, Jose A./0000-0002-2864-2203; San Feliu,
   Tomas/0000-0002-6104-7430
CR Bang S, 2011, SEPG 201 N AM C
   Campo M, 2012, CROSSTALK MAGAZINE, V25
   CMMI Product Team, 2012, CMMI SCAMPI CLASS AP
   Goldenson DR, 2004, SEPG 2004 N AM C
   Kumar S, 2007, SEPG 2007 N AM C
   Paulk MC, 2000, CMUSEI2000SR002 SEIC
NR 6
TC 7
Z9 11
U1 0
U2 9
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2014
VL 26
IS 9
SI SI
BP 808
EP 817
DI 10.1002/smr.1666
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ5EP
UT WOS:000342829400006
DA 2024-07-18
ER

PT J
AU Hegarty, P
   O'Leary, E
   Dineen, D
   Bustard, D
   Moore, A
AF Hegarty, Paraic
   O'Leary, Eoghan
   Dineen, Danny
   Bustard, David
   Moore, Adrian
TI Transition to a product line infrastructure: experience at Akari
   Software
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE process transition; software product line; agile software development;
   localisation
ID VARIABILITY
AB Akari Software offers a family of software products supporting curriculum management in higher education. The work started with one specific commission, but within 4years, a small product suite had been developed, with ten organisations using customised variants of those products. In effect, a product family had been created but without the underlying structure and processes needed to ensure the efficient creation and maintenance of variants. This is a common issue faced by software companies as their product range expands. In 2010, Akari began making internal changes to develop a product range infrastructure that was suitable both for its existing products and its plans for future growth. The purpose of this paper is to describe the product line transition that occurred, both to share the experience involved and to identify a number of general lessons learned. The work was supported by a FUSION project, funded by InterTradeIreland, undertaken in collaboration with the University of Ulster. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Hegarty, Paraic; O'Leary, Eoghan; Dineen, Danny] Akari Software, Cork, Ireland.
   [Bustard, David; Moore, Adrian] Univ Ulster, Coleraine BT52 1SA, Londonderry, North Ireland.
C3 Ulster University
RP Hegarty, P (corresponding author), Akari Software, Cork, Ireland.
EM phegarty@akarisoftware.com
OI Hegarty, Paraic/0000-0001-7725-4648
FU Akari Software; University of Ulster
FX The work described in this paper was initiated and partly supported by
   an IntertradeIreland FUSION project between Akari Software and the
   University of Ulster.
CR [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Babar MA, 2010, IEEE SOFTWARE, V27, P89, DOI 10.1109/MS.2010.77
   Boehm B, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P156
   Bustard D, 2013, INNOV SYST SOFTW ENG, V9, P191, DOI 10.1007/s11334-013-0216-9
   Clements P., 2002, Software product lines
   Gang Zhang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P418, DOI 10.1109/ICSM.2011.6080809
   Hanssen GK, 2011, SOFTWARE PRACT EXPER, V41, P883, DOI 10.1002/spe.1064
   ISO/IEC, 2013, 26550 ISOIEC FDIS
   Kircher M, 2006, 10 IEEE INT SOFTW PR, V9-20
   Ladas C., 2009, Scrumban - Essays on Kanban Systems for Lean Software Development
   McGregor J., 2001, 630 SOFTW ENG I
   Metzger A, 2007, PROC INT CONF SOFTW, P186, DOI 10.1109/ICSECOMPANION.2007.83
   Lamancha BP, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P23
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Pohl K, 2006, COMMUN ACM, V49, P78, DOI 10.1145/1183236.1183271
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Schwaber K., 2009, AGILE PROJECT MANAGE
   West D., 2010, Agile development: Mainstream adoption has changed agility
NR 18
TC 0
Z9 0
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2014
VL 26
IS 9
SI SI
BP 784
EP 790
DI 10.1002/smr.1663
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ5EP
UT WOS:000342829400003
DA 2024-07-18
ER

PT J
AU Larrucea, X
   Santamaria, I
AF Larrucea, Xabier
   Santamaria, Izaskun
TI An industrial assessment for a multimodel framework
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE multimodel framework; quality models; process improvement
AB Software process improvement (SPI) initiatives are facing complex environments where stakeholders need to integrate different reference models in their organizations. There are several approaches to multimodel environments defining some steps or activities that should be carried out for implementing it efficiently inside organizations. This paper presents a report on the use of a multimodel framework integrating three quality reference models in 47 SPI initiatives. Basically, this report is based on statistical data extracted from industrial assessments. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Larrucea, Xabier; Santamaria, Izaskun] TECNALIA, Bizkaia 48170, Spain.
RP Larrucea, X (corresponding author), TECNALIA, Parque Tecnol Zamudio 202, Bizkaia 48170, Spain.
EM Xabier.larrucea@tecnalia.com
RI Larrucea, Xabier/Y-9017-2019
OI Larrucea, Xabier/0000-0002-6402-922X; Santamaria,
   Izaskun/0000-0003-2135-4644
FU Basque Country government (programa de perfeccionamiento y movilidad del
   personal investigador - resolucion) [MV-2011-2-42]; SERPLAGO project
   subprograma INNPACTO (Plan Nacional del Ministerio de Economia y
   Competitividad)
FX The research leading to these results has received funding from the
   Basque Country government (programa de perfeccionamiento y movilidad del
   personal investigador - resolucion MV-2011-2-42) and SERPLAGO project
   subprograma INNPACTO (Plan Nacional 2008-2011 del Ministerio de Economia
   y Competitividad).
CR [Anonymous], 2 INT C COMP ENG APP
   [Anonymous], 2005, 17799200527002 ISOIE
   Baldassarre MT, 2012, SOFTWARE QUAL J, V20, P309, DOI 10.1007/s11219-011-9154-7
   Cater-Steel A.P, 2006, EUR C INF SYST GOT S
   Chrissis M., 2006, CMMI: Guidelines for Process Integration and Product Improvement
   Johansson F, MED EFFECT
   Kao J., 2007, Innovation nation: How America is losing its innovation edge, why it matters, and what we can do to get it back
   Kirwan P., MAXIMIZING YOUR PROC
   Kirwan P., IMPROVEMENT TECHNOLO
   Kirwan P., IMPLEMENTATION CHALL
   Kirwan P., PROCESS ARCHITECTURE
   Larrucea X, 2012, P 19 EUR C EUROSPI 2, DOI [10.1007/978-3-642-31199-4_11, DOI 10.1007/978-3-642-31199-4_11]
   Lukacs E., 2005, EUR INTEGR STUD, V1, P3
   Pearson K. X., 2009, PHILOS MAGAZINE SERI, V50, P157, DOI DOI 10.1080/14786440009463897
   Rozman I, 1997, SOFTWARE QUAL J, V6, P37, DOI 10.1023/A:1018539413913
   Siviy J., 2008, VALUE HARMONIZING MU
   Siviy J., STRATEGIC TECHNOLOGY
   [No title captured]
NR 18
TC 4
Z9 5
U1 0
U2 4
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2014
VL 26
IS 9
SI SI
BP 837
EP 845
DI 10.1002/smr.1669
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ5EP
UT WOS:000342829400009
DA 2024-07-18
ER

PT J
AU Mesquida, AL
   Mas, A
AF Mesquida, Antoni-Lluis
   Mas, Antonia
TI A project management improvement program according to ISO/IEC 29110 and
   PMBOK®
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software process improvement (SPI); project management; very small
   entities (VSEs); process asset; ISO; IEC 29110; PMBOK (R)
AB This paper describes the results obtained and the lessons learned from the implementation of the ISO/IEC 29110 standard in four small software development companies, clustered in a joint process improvement program. The main results of this initiative have been, on the one hand, the definition of a standardized set of processes and procedures and, on the other, the development of a Process Asset Library to support project management good practices within the participant organizations. The PMBOK (R) Guide was used to complement the ISO/IEC 29110-5-1-2 standard, in order to provide detailed knowledge about project management inputs, outputs, and best techniques. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Mesquida, Antoni-Lluis; Mas, Antonia] Univ Balearic Isl, Palma De Mallorca, Spain.
C3 Universitat de les Illes Balears
RP Mesquida, AL (corresponding author), Univ Balearic Isl, Dept Math & Comp Sci, Palma De Mallorca, Spain.
EM antoni.mesquida@uib.es
RI Mesquida, Antoni Lluis/F-6864-2016; Mas, Antonia/G-2596-2016
OI Mesquida, Antoni Lluis/0000-0002-1191-6220; Mas,
   Antonia/0000-0003-4188-8088
FU Spanish Ministry of Science and Technology; ERDF [TIN2013-46928-C3-2-R,
   TIN2010-20057-C03-03]
FX This work has been partially supported by the Spanish Ministry of
   Science and Technology with ERDF funds under grants TIN2013-46928-C3-2-R
   and TIN2010-20057-C03-03.
CR Amenguals E, 2007, EUROSPI 2007 IND P
   [Anonymous], 2017, 122072017 ISOIECIEEE
   [Anonymous], 2008, GUIDE PROJECT MANAGE, V4th
   [Anonymous], 2011, 291105122011 ISOIEC
   Bouchers Q., 2012, COMMUN COMPUT PHYS, V301, P330
   Lepmets M, 2012, COMM COM INF SC, V301, P310
   Mass A, 2012, EUROSPI 2012 IND P
   Mass A, 2012, J SOFTWARE MAINTENAN, V24, P493
   O'Connor RV, 2012, COMM COM INF SC, V301, P330
NR 9
TC 21
Z9 25
U1 2
U2 47
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2014
VL 26
IS 9
SI SI
BP 846
EP 854
DI 10.1002/smr.1665
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AQ5EP
UT WOS:000342829400010
DA 2024-07-18
ER

PT J
AU Kotejoshyer, B
   Singh, B
   Tittibha, S
AF Kotejoshyer, Badari
   Singh, Birendra
   Tittibha, Suhas
TI Process communication in medical software development
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE process modeling; Eclipse Process Framework; medical software
   development
AB This paper describes a case study on using the Eclipse Process Framework in a medical software development organization to consolidate existing process descriptions. Although on nonmedical fields the Eclipse Process Framework was successfully used for process modeling and aiding process improvement efforts, the complex nature of the regulatory and process standard requirements on the medical software field needs special attention. In this environment, compliance to the regulatory is more important than improvement, so the process modeling has to implement these requirements in a very strict way, while supporting the business goals of the organization and enabling the improvement of the processes. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Kotejoshyer, Badari; Singh, Birendra; Tittibha, Suhas] Honeywell Technol Solut, Bangalore 560076, Karnataka, India.
C3 Honeywell
RP Kotejoshyer, B (corresponding author), Honeywell Technol Solut, 151-1 Doraisanipalya, Bangalore 560076, Karnataka, India.
EM badari.kotejoshyer@honeywell.com
OI GARCIA GUZMAN, JAVIER/0000-0001-6039-795X
CR IBM&REG, USING DOORS RELEASE
   IBM&REG, DXL REFERENCE MANUAL
NR 2
TC 7
Z9 7
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2014
VL 26
IS 3
SI SI
BP 321
EP 328
DI 10.1002/smr.1590
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD1VP
UT WOS:000333022100006
DA 2024-07-18
ER

PT J
AU Garzás, J
   Paulk, MC
AF Garzas, Javier
   Paulk, Mark C.
TI A case study of software process improvement with CMMI-DEV and Scrum in
   Spanish companies
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE CMMI-DEV; Scrum; case study; Agile; software process improvement
ID EXPERIMENTAL-MODELS
AB One of the most commonly used agile methods is Scrum. Capability Maturity Model Integration for Development (CMMI-DEV) is currently the de facto framework for process improvement and for determining the organizational maturity of software development companies. CMMI-DEV and Scrum share certain characteristics, and even though they were developed for different purposes, they can be complementary to each other; and as such, they are not in competition. This paper presents a case study of the relationship between level 2 of CMMI-DEV 1.3 and Scrum. This research has focused on the relationships between Scrum and level 2 of CMMI-DEV 1.3. The objective of this research paper is to evaluate how Scrum helps implement a process model such as CMMI-DEV. A detailed case study was conducted among Spanish IT companies. The case study was designed according to established guidelines for cases studies. There were eight principal activities: case study design, case selection, case study procedures and roles, data collection, analysis, plan validity, study limitations, and reporting. The results obtained show that most of the process areas of CMMI-DEV level 2 had been improved by using Scrum. Other issues detected arose during the formal appraisals and illustrated how it is possible to verify with Scrum that the specific goals of CMMI-DEV have been implemented. In addition, it highlights how the use of open-source tools was useful in improving the process in the companies involved. Based on the case study carried out, the addition of Scrum methodologies may improve the increase in quality of software processes. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Garzas, Javier] Rey Juan Carlos Univ, Kybele Res & Kybele Consulting, Madrid, Spain.
   [Paulk, Mark C.] Carnegie Mellon Univ, Inst Software Res, Pittsburgh, PA 15213 USA.
C3 Universidad Rey Juan Carlos; Carnegie Mellon University
RP Garzás, J (corresponding author), Rey Juan Carlos Univ, Kybele Res & Kybele Consulting, Tulipan S-N, Madrid, Spain.
EM javier.garzas@urjc.es
FU Spanish Ministry of Education and Science [TIN2008-03582/TIN]
FX This research has been partially developed within the framework of the
   following projects: MODEL-CAOS (TIN2008-03582/TIN) financed by the
   Spanish Ministry of Education and Science.
CR [Anonymous], 2002, Agile software development
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Brereton Pearl., 2008, Proceedings of the 12th International Conference on Evaluation and Assessment in Software Engineering, P41
   Chrissis M.B., 2011, SEI SERIES SOFTWARE
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glazer H., 2008, CMMI AGILE WHY NOT E, P48, DOI [10.1109/AGILE.2006.30, DOI 10.1109/AGILE.2006.30]
   Hayes W., 2005, Handbook for conducting Standard CMMI Appraisal Method for Process Improvement (SCAMPI) B and C appraisals
   Host Martin, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P479
   ISO, 2004, 1550422004 ISOIEC
   Jakobsen CR, 2008, AGILE 2008, PROCEEDINGS, P212, DOI 10.1109/Agile.2008.10
   Jakobsen CR, 2009, AGILE 2009 CONFERENCE, P333, DOI 10.1109/AGILE.2009.31
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Li J, 2008, IMPROVEMENT SUCCESS
   Mahnic V, 2007, PRESENTED INT J MATH
   Mann C, 2005, AG C 2005 P, DOI 10.1109/ADC.2005.1
   Marcal ASC, 2007, P 31 IEEE SOFTW ENG, DOI 10.1109/SEW.2007.102
   Maurer F, 2003, 3 XP 2 AG UN C NEW O
   MAURER F, 2001, PRODUCTIVITY AGILE S
   McMahon P.E., 2010, Integrating CMMI and Agile Development.Case Studies and Proven Techniques for Faster Performance Improvement
   Moody Daniel L., 2000, P 21 INT C INF SYST
   Mulder M., 2008, CASE STUDY DISTRIBUT
   Nawrocki J, 2001, EUR C 2001 P 27
   Paulk MC, 2001, IEEE SOFTWARE, V18, P19, DOI 10.1109/52.965798
   Pikkarainen M, 2006, 6 INT SPICE C LUX, P1
   Pino FJ, 2010, INFORM SOFTWARE TECH, V52, P1044, DOI 10.1016/j.infsof.2010.04.004
   Potter N, 2011, IMPLEMENTING SCRUM A
   Ramachandran M., 2005, XP
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber C., 2007, The Truth about Agile Processes: Frank Answers to Frequently Asked Questions, Forrester Report
   Schwaber K, 2004, PRIMAVERA GETS AGILE
   Scotland A, 2006, SCRUM BOOSTS EFFECTI
   Sutherland J, 2010, USING SCRUM AVOID BA
   Sutherland J., 2008, P 41 ANN HAWAII INT, P466, DOI [10.1109/HICSS.2008.384, DOI 10.1109/HICSS.2008.384]
   Theunissen WHM, 2003, P 2003 ANN RES C S A
   Turner R., 2002, P C EXTR PROGR AG ME
   Van Schooenderwoert N, 2006, EMBEDDED AGILE CASE
   Yin R.K., 2009, CASE STUDIES DESIGN, V4th
   Zelkowitz MV, 2009, J SYST SOFTWARE, V82, P373, DOI 10.1016/j.jss.2008.06.040
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 39
TC 19
Z9 22
U1 2
U2 50
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2013
VL 25
IS 12
BP 1325
EP 1333
DI 10.1002/smr.1605
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 271BG
UT WOS:000328364600006
DA 2024-07-18
ER

PT J
AU Barbour, L
   Khomh, F
   Zou, Y
AF Barbour, Liliane
   Khomh, Foutse
   Zou, Ying
TI An empirical study of faults in late propagation clone genealogies
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE clone genealogies; late propagation; fault proneness
ID CODE CLONES
AB Two similar code segments, or clones, form a clone pair within a software system. The changes to the clones over time create a clone evolution history. In this work, we study late propagation, a specific pattern of clone evolution. In late propagation, one clone in a clone pair is modified, causing the clone pair to diverge. The code segments are then reconciled in a later commit. Existing work has established late propagation as a clone evolution pattern and suggested that the pattern is related to a high number of faults. In this study, we examine the characteristics of late propagation in three long-lived software systems using the Simian ( Simon Harris, Victoria, Australia, http://www.harukizaemon.com/simian), CCFinder, and NiCad (Software Technology Laboratory, Queen's University, Kingston, ON, Canada) clone detection tools. We define eight types of late propagation and compare them to other forms of clone evolution. Our results not only verify that late propagation is more harmful to software systems but also establish that some specific types of late propagations are more harmful than others. Specifically, two types are most risky: (1) when a clone experiences diverging changes and then a reconciling change without any modification to the other clone in a clone pair; and (2) when two clones undergo a diverging modification followed by a reconciling change that modifies both the clones in a clone pair. We also observe that the reconciliation in the former case is more prone to faults than in the latter case. We determine that the size of the clones experiencing late propagation has an effect on the fault proneness of specific types of late propagation genealogies. Lastly, we cannot report a correlation between the delay of the propagation of changes and its faults, as the fault proneness of each delay period is system dependent. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Barbour, Liliane; Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
   [Khomh, Foutse] Ecole Polytech Montreal, SWAT, Quebec City, PQ, Canada.
C3 Queens University - Canada; Universite de Montreal; Polytechnique
   Montreal
RP Khomh, F (corresponding author), Ecole Polytech Montreal, SWAT, Quebec City, PQ, Canada.
EM foutse.khomh@polymtl.ca
RI Zou, Ying/KLC-9380-2024
CR [Anonymous], 2000, HDB PARAMETRIC NONPA
   [Anonymous], 2004, OSDI 04
   Aversano L, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P81
   Bakota T, 2007, PROC IEEE INT CONF S, P234
   Barbour L., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P273, DOI 10.1109/ICSM.2011.6080794
   Bettenburg N, 2009, WORK CONF REVERSE EN, P85, DOI 10.1109/WCRE.2009.51
   Gode N., 2011, PROC 5 INT WORKSHOP, P14
   Gode N, 2011, 15 EUR C SOFTW MAINT
   Gode Nils, 2011, P 33 INT C SOFTW ENG
   Göde N, 2009, IEEE INT WORK C SO, P77, DOI 10.1109/SCAM.2009.17
   Hassan AE, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P76, DOI 10.1109/IWPSE.2004.1334771
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   MOCKUS A, 2000, P INT C SOFTW MAINT
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Saha RK, 2010, IEEE INT WORK C SO, P87, DOI 10.1109/SCAM.2010.32
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Shang WY, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P21, DOI 10.1109/MSR.2009.5069477
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Yin RK, 2002, Applied Social Research Methods Series, V34
NR 26
TC 35
Z9 41
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2013
VL 25
IS 11
SI SI
BP 1139
EP 1165
DI 10.1002/smr.1597
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 272IG
UT WOS:000328453100002
DA 2024-07-18
ER

PT J
AU Wang, JS
   Peng, X
   Xing, ZC
   Zhao, WY
AF Wang, Jinshui
   Peng, Xin
   Xing, Zhenchang
   Zhao, Wenyun
TI How developers perform feature location tasks: a human-centric and
   process-oriented exploratory study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE feature location; human study; cognitive process; conceptual framework
ID SOURCE-CODE; INFORMATION
AB Developers often have to locate the parts of source code that contribute to a specific feature during software maintenance tasks. This activity, referred to as feature location in software engineering, is a human-intensive and knowledge-intensive process. Researchers have investigated (semi-)automatic analysis-based techniques to assist developers in such feature location activities. However, little work has been carried out on better understanding how developers perform feature location tasks. In this paper, we report an exploratory study of feature location process, consisting of three experiments in which developers were given unfamiliar systems and asked to complete six feature location tasks. Our study suggests that feature location process can be understood hierarchically at three levels of granularity: phase, pattern, and action. Furthermore, our statistical analysis shows that these feature location phases, patterns, and actions can be effectively imparted to junior developers and consequently improve their performance on feature location tasks. Our qualitative observations and interviews also suggest that external factors, for example, human factors, task properties, and in-process feedbacks, affect the choices and usage of different feature location patterns and actions. Our results open up new opportunities to feature location research, which could lead to better tool support and more rigorous feature location process. Copyright (C) 2013 John Wiley & Sons, Ltd.
C1 Fudan Univ, Sch Comp Sci, Shanghai, Peoples R China.
   Natl Univ Singapore, Sch Comp, Singapore 0511, Singapore.
C3 Fudan University; National University of Singapore
RP Peng, X (corresponding author), Fudan Univ, Sch Comp Sci, Shanghai, Peoples R China.
EM pengxin@fudan.edu.cn
OI Wang, Jinshui/0000-0003-1733-8481
FU National High Technology Development 863 Program of China
   [2012AA011202]; National Research Foundation for the Doctoral Program of
   Higher Education of China [20100071110031]
FX We would like to thank the anonymous reviewers for their valuable
   comments and suggestions that allowed us to improve our paper. This work
   is supported by the National High Technology Development 863 Program of
   China under grant no. 2012AA011202 and the National Research Foundation
   for the Doctoral Program of Higher Education of China under grant no.
   20100071110031.
CR Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   ADAIR JG, 1984, J APPL PSYCHOL, V69, P334, DOI 10.1037/0021-9010.69.2.334
   [Anonymous], 2005, Proc. of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE'05)
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Coman ID, 2009, PROC INT CONF SOFTW, P89, DOI 10.1109/ICSE.2009.5070511
   Cuddeback D., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P231, DOI 10.1109/RE.2010.35
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   Demeyer Serge., 2008, OBJECT ORIENTED REEN
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Egyed A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P221, DOI 10.1109/RE.2010.34
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Hayes J., 2005, P 3 INT WORKSHOP TRA, P20
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   MARTIN PY, 1986, J APPL BEHAV SCI, V22, P141, DOI 10.1177/002188638602200207
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   RAJLICH V, 2009, P IEEE 17 INT C PROG, P1
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Robillard MP, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P406, DOI 10.1109/ICSE.2002.1007986
   Robillard MP, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P225, DOI 10.1109/ASE.2003.1240310
   SAVAGE T, 2010, 32 ACM IEEE INT C SO, V2, P255
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Wang J, 2011, PROCEEDINGS OF 2011 INTERNATIONAL CONFERENCE ON ELECTRICAL INSULATING MATERIALS (ISEIM), P213
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
NR 30
TC 20
Z9 22
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2013
VL 25
IS 11
SI SI
BP 1193
EP 1224
DI 10.1002/smr.1593
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 272IG
UT WOS:000328453100004
DA 2024-07-18
ER

PT J
AU Frey, S
   Hasselbring, W
   Schnoor, B
AF Frey, Soeren
   Hasselbring, Wilhelm
   Schnoor, Benjamin
TI Automatic conformance checking for migrating software systems to cloud
   infrastructures and platforms
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
C1 [Frey, Soeren; Hasselbring, Wilhelm; Schnoor, Benjamin] Univ Kiel, Software Engn Grp, D-24118 Kiel, Germany.
C3 University of Kiel
RP Frey, S (corresponding author), Univ Kiel, Software Engn Grp, D-24118 Kiel, Germany.
EM sfr@informatik.uni-kiel.de
RI Hasselbring, Wilhelm/G-4794-2011
OI Hasselbring, Wilhelm/0000-0001-6625-4335
NR 0
TC 18
Z9 19
U1 0
U2 1
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2013
VL 25
IS 10
SI SI
DI 10.1002/smr.582
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF4XV
UT WOS:000334718800002
DA 2024-07-18
ER

PT J
AU Mohammad, M
   Alagar, V
AF Mohammad, Mubarak
   Alagar, Vangalur
TI A component-based development process for trustworthy systems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE component-based software engineering; trustworthiness; development
   process
ID ONTOLOGIES
AB This paper introduces a new process for a rigorous component-centered development of trustworthy systems. The rationale for our perspective of the process is two-fold. The activities prescribed in a conventional software engineering development process are neither suitable nor sufficient for developing component-based systems. Component-based development methods that are currently practised do not support the explicit specification of trustworthiness properties, and are not based on rigorous principles. Hence they are not suitable for developing trustworthy systems. Trustworthiness is regarded as a composite nonfunctional property comprising the four attributes safety, security, availability, and reliability. They must be rigorously defined for components and systems composed from them. It is essential that the process enforces a direct evidence of trustworthiness in the systems that are developed following the process. Consequently, the development process, in addition to being reuse-oriented, component-oriented, and rigorous in all phases of the system lifecycle, should maintain the chain of evidence that the trustworthiness properties are preserved in every activity of every phase of system development. The proposed process includes several parallel interrelated tracks including component development, component assessment, component reuse, and component-based system development and prescribes specific activities and tools for ensuring trustworthiness in all activities. Copyright (C) 2010 John Wiley & Sons, Ltd.
C1 [Mohammad, Mubarak; Alagar, Vangalur] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
   [Alagar, Vangalur] Xian Jiaotang Liverpool Univ, Dept Comp Sci & Software Engn, Suzhou, Peoples R China.
C3 Concordia University - Canada; Xi'an Jiaotong-Liverpool University
RP Mohammad, M (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM ms_moham@cse.concordia.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   NSERC
FX Contract/grant sponsor: Natural Sciences and Engineering Research
   Council of Canada (NSERC); The research reported in this paper is
   supported by a grant from the Natural Sciences and Engineering Research
   Council (NSERC), Canada. We thank NSERC for their support, and the
   reviewers for their useful comments and criticisms that helped us to
   revise the manuscript to the current form.
CR Alvaro A, 2005, EUROMICRO-SEAA 2005: 31ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P106
   Amnell T, 2003, LECT NOTES COMPUT SC, V2791, P60
   [Anonymous], PROT
   [Anonymous], XSLT
   [Anonymous], THESIS CONCORDIA U M
   [Anonymous], THESIS CONCORDIA U M
   [Anonymous], THESIS CONCORDIA U M
   [Anonymous], EL COMP CERT BOARD
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Chandrasekaran B, 1999, IEEE INTELL SYST APP, V14, P20, DOI 10.1109/5254.747902
   Christensen StevenR., 1995, CROSSTALK, V8, P26
   Corcho O, 2003, DATA KNOWL ENG, V46, P41, DOI 10.1016/S0169-023X(02)00195-7
   Crnkovic I., 2005, Journal of Computing and Information Technology - CIT, V13, P321, DOI 10.2498/cit.2005.04.10
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Dogru AH, 2003, IEEE SOFTWARE, V20, P34, DOI 10.1109/MS.2003.1184164
   Grau BC, 2008, J WEB SEMANT, V6, P309, DOI 10.1016/j.websem.2008.05.001
   Jackson D, 2009, COMMUN ACM, V52, P78, DOI 10.1145/1498765.1498787
   Mohammad M, 2008, LECT NOTES COMPUT SC, V5292, P290, DOI 10.1007/978-3-540-88030-1_23
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Schneider FB, 1999, IEEE INTERNET COMPUT, V3, P64, DOI 10.1109/4236.807013
   Sommerville Ian, 2016, Software engineering 8
   Tripathi A. K., 2008, Software Process: Improvement and Practice, V13, P411, DOI 10.1002/spip.356
   Yao HN, 2008, J AM SOC INF SCI TEC, V59, P613, DOI 10.1002/asi.20775
NR 24
TC 2
Z9 4
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2012
VL 24
IS 7
SI SI
BP 815
EP 835
DI 10.1002/smr.472
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 021TS
UT WOS:000309908900007
DA 2024-07-18
ER

PT J
AU Cataldo, M
   Nambiar, S
AF Cataldo, Marcelo
   Nambiar, Sangeeth
TI The impact of geographic distribution and the nature of technical
   coupling on the quality of global software development projects
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE global software development; geographical dispersion; technical
   coupling; architectural dependencies; software quality
ID COORDINATION; INNOVATION
AB Geographically dispersed work is a fundamental trend that has shaped software development in the past few decades. Although researchers have shown that such a trend has its costs in terms of product quality, the past empirical work has neglected to consider the multidimensional nature of geographic dispersion and limited attention has been given to the nature of technical coupling in the context of distributed development. The work reported in this paper seeks to achieve a better understanding of how the quality of systems produced by distributed development projects is impacted by the various dimensions of geographic dispersion and by the forms of technical coupling. We examined 189 software projects from a multinational development organization and our results revealed the various dimensions of distribution that had an independent and complementary impact on the software quality. In particular, we found that projects with uneven distributions of developers across locations were more likely to exhibit higher levels of defects than projects with balanced distributions. Our results also showed that logical dependencies among architectural components are significantly more important for projects than syntactic dependencies. Moreover, considering technical coupling as conditional on project boundaries revealed that internal and external dependencies have a significant and independent impact on the software quality. Copyright (C) (C) 2010 John Wiley & Sons, Ltd.
C1 [Cataldo, Marcelo] Carnegie Mellon Univ, Inst Software Res, Pittsburgh, PA 15213 USA.
   [Nambiar, Sangeeth] Robert Bosch Engn & Business Solut Ltd, Bangalore, Karnataka, India.
C3 Carnegie Mellon University; Bosch
RP Cataldo, M (corresponding author), Carnegie Mellon Univ, Inst Software Res, 5000 Forbes Ave, Pittsburgh, PA 15213 USA.
EM mcataldo@cs.cmu.edu
CR Ågerfalk PJ, 2006, COMMUN ACM, V49, P26, DOI 10.1145/1164394.1164416
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   Baldwin C. Y., 2000, Design rules: The power of modularity, DOI DOI 10.7551/MITPRESS/2366.001.0001
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P71
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Cummings JN, 2009, INFORM SYST RES, V20, P420, DOI 10.1287/isre.1090.0239
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   de Souza C. R. B., 2004, Software Engineering Notes, V29, P221, DOI 10.1145/1041685.1029925
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Espinosa JA, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P12
   Espinosa JA, 2007, ORGAN SCI, V18, P613, DOI 10.1287/orsc.1070.0297
   Espinosa JA, 2007, J MANAGE INFORM SYST, V24, P135, DOI 10.2753/MIS0742-1222240104
   Evaristo JR, 2000, P 33 HAW INT C SYST, P1
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Ghoshal S, 2000, TRANSNATIONAL MANAGE
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Grinter RE, 1999, P 1999 ACM INT C SUP, P306, DOI DOI 10.1145/320297.320333
   Gumm DC, 2006, IEEE SOFTWARE, V23, P45, DOI 10.1109/MS.2006.122
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   HENDERSON RM, 1990, ADMIN SCI QUART, V35, P9, DOI 10.2307/2393549
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hinds P., 2002, Distributed Work
   Hinds PJ, 2003, ORGAN SCI, V14, P615, DOI 10.1287/orsc.14.6.615.24872
   KABANOFF B, 1991, ACAD MANAGE REV, V16, P416, DOI 10.2307/258869
   KAROLAK DW, 1988, GLOBAL SOFTWARE DEV
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   Kutner M., 2004, HLTH ENV RES ONLINE, Vfourth
   McGrath JosephE., 1994, GROUPS INTERACTING T
   Mockus A, 2001, IEEE SOFTWARE, V18, P30, DOI 10.1109/52.914737
   Nagappan N., 2007, P 1 INT S EMP SOFTW, P363
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   O'Leary MB, 2007, MIS QUART, V31, P433
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Prikladnicki R., 2003, P 3 INT C ENTERPRISE, P417
   Ramasubbu Narayan., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P125
   Sangwan R., 2006, Global software development handbook
   SELBY RW, 1991, IEEE T SOFTWARE ENG, V17, P141, DOI 10.1109/32.67595
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   VONHIPPEL E, 1990, RES POLICY, V19, P407, DOI 10.1016/0048-7333(90)90049-C
   Weisband SuzanneP., 2008, LEADERSHIP DISTANCE
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 50
TC 16
Z9 16
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2012
VL 24
IS 2
SI SI
BP 153
EP 168
DI 10.1002/smr.477
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 910NE
UT WOS:000301645500004
DA 2024-07-18
ER

PT J
AU Namdar, M
   Noorossana, R
AF Namdar, Mohammadreza
   Noorossana, Rassoul
TI A robust optimization model for software development costs considering
   time value of money
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE robust optimization; software development costs; software release rime;
   software reliability growth models; time value of money
ID RELEASE POLICIES; SYSTEMS
AB Determining "software release time" and "testing stop time" is a significant challenge in software projects, as both greatly affect the software cost and reliability. To overcome the drawbacks of past research, this study presents a novel robust optimization approach considering the interval estimation of input parameters for a software reliability growth model. It aims to detect the optimal "software release time" and "testing stop time" to minimize software development costs in an uncertain environment. Additionally, it considers the time value of money for calculating model costs by considering the interest rate and inflation. Generally, this research is the first attempt to use a robust approach for optimizing the software development cost considering the time value of money. The paper investigates the model efficiency in practical situations through a case study and analyzes the effect of the discounted rate and parameters uncertainty on the development cost using a software reliability growth model. The results confirm the prominent role of uncertain parameters and the discounted rate value on software development cost. They also indicate that the proposed mathematical model is more consistent with the actual situation and flexible than the past models with deterministic parameters.
   image
C1 [Namdar, Mohammadreza; Noorossana, Rassoul] Iran Univ Sci & Technol, Ind Engn Dept, Tehran, Iran.
   [Noorossana, Rassoul] Univ Cent Oklahoma, Coll Business, Informat Syst & Operat Management Dept, Edmond, OK USA.
C3 Iran University Science & Technology; University of Central Oklahoma
RP Noorossana, R (corresponding author), Iran Univ Sci & Technol, Ind Engn Dept, Tehran, Iran.
EM rnoorossana@uco.edu
OI noorossana, rassoul/0000-0001-5140-5794
CR Arora A, 2006, MANAGE SCI, V52, P465, DOI 10.1287/mnsc.1050.0440
   Ben-Tal A, 2009, PRINC SER APPL MATH, P3
   Bertsimas D, 2004, OPER RES, V52, P35, DOI 10.1287/opre.1030.0065
   Bertsimas D., 2006, Models, Methods, and Applications for Innovative Decision Making, P95, DOI [10.1287/educ.1063.0022, DOI 10.1287/EDUC.1063.0022]
   Chang TC, 2022, SYMMETRY-BASEL, V14, DOI 10.3390/sym14030593
   Chiu KC, 2009, SOFTWARE QUAL J, V17, P99, DOI 10.1007/s11219-008-9060-9
   DALAL SR, 1988, J AM STAT ASSOC, V83, P872, DOI 10.2307/2289319
   Das S, 2020, INT J RELIAB QUAL SA, V27, DOI 10.1142/S0218539320400045
   Dhaka R., 2021, IOP Conference Series: Materials Science and Engineering
   Febrero F, 2016, INFORM SOFTWARE TECH, V70, P18, DOI 10.1016/j.infsof.2015.09.006
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Ibrahimoglu Z., 2020, The Palgrave handbook of citizenship and education, P465, DOI [10.1007/978-3-319-67828-3_65, DOI 10.1007/978]
   Jha P. C., 2011, International Journal of Mathematics in Operational Research, V3, P680, DOI 10.1504/IJMOR.2011.043016
   Jiang ZR, 2012, INFORM SYST RES, V23, P635, DOI 10.1287/isre.1110.0379
   Kapur P, 2019, RISK BASED TECHNOLOG, P209, DOI DOI 10.1007/978-981-13-5796-1_12
   KAPUR PK, 1991, INT J SYST SCI, V22, P1563, DOI 10.1080/00207729108910731
   Kapur PK., 2017, J Indian Soc Prob Stat, V18, P19, DOI DOI 10.1007/S41096
   Kapur PK., 2022, Annals Oper Res, V312, P1, DOI [10.1007/s10479-019-03483-w, DOI 10.1007/S10479]
   Majumdar R., 2017, Life Cycle Reliab Safety Eng, V6, P47, DOI [10.1007/s41872-017-0005-9, DOI 10.1007/S41872]
   Musilek P., 2000, Applied Computing Review, V8, P24, DOI 10.1145/373975.373984
   Myers G., 1976, SOFTWARE RELIABILITY
   Pachauri B, 2013, INFORM SOFTWARE TECH, V55, P1974, DOI 10.1016/j.infsof.2013.06.001
   Pham H, 1999, ANN SOFTW ENG, V8, P147, DOI 10.1023/A:1018958810083
   Rani Sulekha, 2021, International Journal of Mathematics in Operational Research, V18, P145, DOI 10.1504/IJMOR.2021.112944
   Rani S., 2020, Solid State Technol, V63, P5989
   Safaei AS, 2015, INT J PROD RES, V53, P4446, DOI 10.1080/00207543.2015.1018449
   Salmasnia A, 2018, COMPUT IND ENG, V124, P220, DOI 10.1016/j.cie.2018.06.026
   Shrivastava AK, 2020, INT J SYST ASSUR ENG, V11, P196, DOI 10.1007/s13198-020-00988-7
   Singh O, 2015, INT J SYST ASSUR ENG, V6, P83, DOI 10.1007/s13198-014-0246-1
   Tandon A., 2020, Life CycleReliabil. Safety Eng., V9, P425, DOI DOI 10.1007/S41872-020-00148-7
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   YAMADA S, 1987, EUR J OPER RES, V31, P46, DOI 10.1016/0377-2217(87)90135-4
   Yamada S., 2014, Software reliability modeling: fundamentals and applications, V5, DOI [10.1007/978-4-431-54565-1, DOI 10.1007/978]
   Yamada S, 2016, INT J RELIAB QUAL SA, V23, DOI 10.1142/S0218539316500182
   Yousif JH., 2021, Appl Comput J, V1, P10, DOI [10.52098/acj.20216, DOI 10.52098/ACJ.20216]
NR 35
TC 0
Z9 0
U1 2
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 NOV 14
PY 2023
DI 10.1002/smr.2632
EA NOV 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X9UG0
UT WOS:001101818600001
DA 2024-07-18
ER

PT J
AU Yaseen, M
AF Yaseen, Muhammad
TI Exploratory study of existing research on software requirements
   prioritization: A systematic literature review
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review; Early Access
DE functional requirements; non-functional requirements; requirement
   engineering; requirement Prioritization; systematic literature review
AB Requirements prioritization is giving priority to software requirements on the basis of its importance. The current research paper addresses the importance and limitations of existing research on requirements prioritization. A lot of requirements prioritization techniques are presented by authors, but these techniques have certain limitations. Not all techniques are either applied or suitable to prioritize all types of requirements. Similarly, in these techniques, only few are scalable for large size requirements. The objective of the current research is to identify all possible software requirements prioritization techniques and to show the suitability of these techniques to prioritize different types and sizes of requirements. To achieve research objectives, a systematic literature review (SLR) is carried out. In conducting SLR, planned protocol is designed, which include all the necessary steps necessary for SLR process. As a result of SLR, 60 primary studies were selected for data extraction as a result of SLR. Outcome of SLR shows that not all techniques are scalable to prioritize any size requirements. Also, there are few techniques found that are either applied on all types of requirements or not suitable to prioritize all types of requirements as these techniques are specifically designed for particular types of requirements.
   Systematic literature review is conducted to identify all prioritization techniques in domain of requirement engineering. Brief discussion and detail literature is provided on all the techniques. Further, the identified literature are analyzed based on types and size of requirements in light of requirements prioritization.image
C1 [Yaseen, Muhammad] Riphah Int Univ, Fac Comp, Lahore, Pakistan.
RP Yaseen, M (corresponding author), Riphah Int Univ, Fac Comp, Lahore, Pakistan.
EM muhammad.yaseen@riphah.edu.pk
RI Yaseen, Muhammad/AAD-2457-2021
CR Aasem M., 2010, ANAL OPTIMIZATION SO
   Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Ali Z., 2019, CRITICAL CHALLENGES, V182, P17, DOI DOI 10.5120/IJCA2019918728
   Alzacjebah A, 2018, INT CONF INFORM COMM, P84, DOI 10.1109/IACS.2018.8355446
   Atukorala NL., 2016, SITUATION ORIENTED E, V1, P18, DOI [10.1007/978-981-10-3256-1_2, DOI 10.1007/978]
   Awais MA., 2016, ADV COMPUT SCI INT J, V5, P14
   Babar MI, 2015, KNOWL-BASED SYST, V84, P179, DOI 10.1016/j.knosys.2015.04.010
   Bebensee T, 2010, LECT NOTES COMPUT SC, V6182, P67, DOI 10.1007/978-3-642-14192-8_8
   Beg Rizwan, 2008, 2008 1st International Conference on Emerging Trends in Engineering and Technology (ICETET), P1216, DOI 10.1109/ICETET.2008.158
   Chatzipetrou P, 2010, EUROMICRO CONF PROC, P361, DOI 10.1109/SEAA.2010.35
   Daneva M, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P240, DOI 10.1109/SEAA.2008.46
   Duan C, 2009, REQUIR ENG, V14, P73, DOI 10.1007/s00766-009-0079-7
   Elsood Mukhtar A. Abo., 2014, GOAL BASED TECHNIQUE
   Fehlmann TM, 2008, 2008 SECOND INTERNATIONAL WORKSHOP ON SOFTWARE PRODUCT MANAGEMENT, P37
   Felfernig A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P59, DOI 10.1109/RSSE.2012.6233412
   Khan Javed Ali, 2015, International Journal of Modern Education and Computer Science, V7, P53, DOI 10.5815/ijmecs.2015.11.06
   Khan SUR, 2016, FRONT INFORM TECH EL, V17, P750, DOI 10.1631/FITEE.1500162
   Kukreja N, 2013, PROCEDIA COMPUT SCI, V16, P806, DOI 10.1016/j.procs.2013.01.084
   Liu XQ, 2006, J SYST SOFTWARE, V79, P1649, DOI 10.1016/j.jss.2006.03.012
   Massey AK., 2010, PRIORITIZING LEGAL R
   McZara J, 2015, EMPIR SOFTW ENG, V20, P1721, DOI 10.1007/s10664-014-9334-8
   Misaghian N, 2018, REQUIR ENG, V23, P169, DOI 10.1007/s00766-016-0262-6
   Payyavula SS, 2012, 2012 THIRD INTERNATIONAL CONFERENCE ON SERVICES IN EMERGING MARKETS (ICSEM), P157, DOI 10.1109/ICSEM.2012.30
   Perini A, 2009, INFORM SOFTWARE TECH, V51, P1021, DOI 10.1016/j.infsof.2008.12.001
   Pitangueira AM, 2015, J SYST SOFTWARE, V103, P267, DOI 10.1016/j.jss.2014.09.038
   Prioritization R., 2018, REQUIREMENTS PRIORIT, P459
   Sachdeva S., 2019, FUTURISTIC TRENDS NE, V958, DOI [10.1007/978-981-13-3804-5_1, DOI 10.1007/978]
   Setiani N., 2016, CLUSTERING TECHNIQUE
   Shao F, 2017, J SYST SOFTWARE, V126, P141, DOI 10.1016/j.jss.2016.09.043
   Thakurta R, 2017, REQUIR ENG, V22, P491, DOI 10.1007/s00766-016-0253-7
   Tonella P, 2013, INFORM SOFTWARE TECH, V55, P173, DOI 10.1016/j.infsof.2012.07.003
   Veer Singh Y., 2019, Int. J. Intell. Syst. Appl, V11, P13, DOI [10.5815/ijisa.2019.01.02, DOI 10.5815/IJISA.2019.01.02]
   Vestola M., 2010, A Comparison of Nine Basic Techniques for Requirements Prioritization
   Voola P, 2017, EUR J OPER RES, V259, P1191, DOI 10.1016/j.ejor.2016.11.040
   Yaseen M., 2016, International Journal of Database Theory and Application, V9, P161, DOI [DOI 10.14257/IJDTA.2016.9.6, 10.14257/ijdta.2016.9.6.16, DOI 10.14257/IJDTA.2016.9.6.16]
   Yaseen M., 2019, J SOFTW ENG INTELL S, V4, P23
   Yaseen M., 2018, GLOB J COMPUT SCI TE, V1, P1
   Yaseen M., 2019, COMPUT SYST SCI ENG, V8, P56
   Yaseen M, 2018, IEEE CONF OPEN SYST, P98, DOI 10.1109/ICOS.2018.8632806
   Yaseen M, 2019, INT J ADV COMPUT SC, V10, P121
   Yaseen M, 2015, 2015 INTERNATIONAL CONFERENCE ON OPEN SOURCE SYSTEMS & TECHNOLOGIES (ICOSST), P120, DOI 10.1109/ICOSST.2015.7396413
   Yousuf M, 2016, PROCEEDINGS OF THE 10TH INDIACOM - 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT, P3966
NR 42
TC 0
Z9 0
U1 5
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 SEP 8
PY 2023
DI 10.1002/smr.2613
EA SEP 2023
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R0QR6
UT WOS:001061479900001
DA 2024-07-18
ER

PT J
AU Agnihotri, M
   Chug, A
AF Agnihotri, Mansi
   Chug, Anuradha
TI Severity Factor (<i>SF</i>): An aid to developers for application of
   refactoring operations to improve software quality
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE bad smells; object-oriented software metrics; refactoring; software
   maintenance; software quality
ID OBJECT-ORIENTED METRICS
AB Bad smells are certain flaws in the structure of the code that might not disturb the normal functioning of a program but negatively affects the software quality. Developers use refactoring as a corrective measure for the treatment of bad smells. The current study aids the developers in the application of refactoring by identifying the critical classes, that is, classes that are challenging to maintain and are of degraded quality. In this study, 10 quality metrics and 10 bad smells have been selected to conduct an investigation on different releases of five open-source systems. A new metric, severity factor (SF) has been introduced that categorizes the classes of the selected systems into four criticality levels-severe, major, mid, and low. Also, the relationship between SF, criticality levels, and the refactoring operations has been analyzed. The findings show that 60% of the total classes have been affected by bad smells, and long statement is the most dominant smell present in 27.6% of the classes. The results show 84% of the refactoring operations have been performed on highly critical classes. Thus, the SF metric plays a crucial role in driving the developer's attention to the critical classes that need to be treated urgently.
C1 [Agnihotri, Mansi; Chug, Anuradha] Guru Gobind Singh Indraprastha Univ, USICT, Dwarka, India.
   [Agnihotri, Mansi] Guru Gobind SinghIndraprastha Univ, USICT, New Delhi, India.
C3 GGS Indraprastha University
RP Agnihotri, M (corresponding author), Guru Gobind SinghIndraprastha Univ, USICT, New Delhi, India.
EM mansi.15816490019@ipu.ac.in
FU Guru Gobind Singh Indraprastha University (GGSIPU)
   [GGSIPU/DRC/FRGS/2022/1223/51]
FX O/o Director (Research & Consultancy), Guru Gobind Singh Indraprastha
   University (GGSIPU), Grant/Award Number: F.No.
   GGSIPU/DRC/FRGS/2022/1223/51
CR Agnihotri Mansi, 2021, IC3 '21: 2021 Thirteenth International Conference on Contemporary Computing (IC3-2021), P450, DOI 10.1145/3474124.3474193
   Agnihotri M, 2020, J INF PROCESS SYST, V16, P915
   Agnihotri M, 2020, J STAT MANAG SYST, V23, P1159, DOI 10.1080/09720510.2020.1799576
   AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   AlOmar EA, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P51, DOI 10.1109/IWoR.2019.00017
   Alshayeb M, 2009, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON COMPUTING, ENGINEERING AND INFORMATION, P3, DOI 10.1109/ICC.2009.12
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   ALTMAN DG, 1994, BRIT MED J, V309, P996, DOI 10.1136/bmj.309.6960.996
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Chaparro O, 2014, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSME.2014.73
   Charalampidou S, 2018, EUROMICRO CONF PROC, P234, DOI 10.1109/SEAA.2018.00046
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Chávez A, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P74, DOI 10.1145/3131151.3131171
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Chug, 2022 12 INT C CLOUD, V2022, P41, DOI [10.1109/Confluence52989.2022.9734141, DOI 10.1109/CONFLUENCE52989.2022.9734141]
   Chug A, 2017, 2017 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P1624, DOI 10.1109/ICACCI.2017.8126075
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Cotroneo D., 2010 IEEE 2 INT WORK, V2010, P1
   Danphitsanuphan P., 2012, 2012 SPRING C ENG TE, P1, DOI 10.1109/SCET.2012.6342082
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Elish KO, 2011, ARAB J SCI ENG, V36, P1253, DOI 10.1007/s13369-011-0117-x
   Fenton N., 2000, INT C SOFTWARE ENG, P357, DOI DOI 10.1145/336512.336588
   Fernandes E, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106347
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hammad M., 2007, AUTOMATIC DETECTION
   Harrison R, 1997, EIGHTH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE INCORPORATING COMPUTER AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P230, DOI 10.1109/STEP.1997.615494
   Hegedus P, 2018, INFORM SOFTWARE TECH, V95, P313, DOI 10.1016/j.infsof.2017.11.012
   Henderson-Sellers B., 1995, Object-oriented metrics: measures of complexity
   Heriko M, 2013, 2 WORKSH SOFTW QUAL, P17
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kerzner H., 2017, Project management, matrices, KPIs and dashboards: A guide to measuring and monitoring project performance, V2nd
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Ludwig J, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P53, DOI 10.1145/3194164.3194184
   Majumder S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10068-4
   Malhotra R., 2012, INT J S SOFTWARE ENG, V2, P19
   Malhotra R, 2020, INT J SYST ASSUR ENG, V11, P133, DOI 10.1007/s13198-020-01001-x
   Malhotra R, 2015, PROCEEDING OF THE THIRD INTERNATIONAL SYMPOSIUM ON WOMEN IN COMPUTING AND INFORMATICS (WCI-2015), P228, DOI 10.1145/2791405.2791463
   Malhotra R, 2016, 2016 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P110, DOI 10.1109/ICACCI.2016.7732033
   Mansoor U., 2013, CODE SMELLS DETECTIO
   Meananeatra P, 2012, IEEE INT CONF AUTOM, P406, DOI 10.1145/2351676.2351760
   Min Zhang, 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P458, DOI 10.1109/ICSTW.2011.69
   Mishra A, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app112311377
   Murgia A., 2011, 2011 18th Working Conference on Reverse Engineering, P372, DOI 10.1109/WCRE.2011.52
   Oliveto R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P820, DOI 10.1145/1985793.1985913
   Palomba F., 2016, TEXTUAL BASED TECHNI, Vii, P1
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Ramasinghe S., 2021, PROC INT C LEARN REP, P1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sharma T., 2017, 10 SEM ADV TECHN TOO
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Sultana KZ, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2303
   Tarwani S., 2017, 2016 1 INDIA INT C I, P5, DOI [10.1109/IICIP.2016.7975322, DOI 10.1109/IICIP.2016.7975322]
   Tarwani S, 2016, 2016 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P1397, DOI 10.1109/ICACCI.2016.7732243
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2010, J SYST SOFTWARE, V83, P391, DOI 10.1016/j.jss.2009.09.017
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Vassallo C, 2019, SCI COMPUT PROGRAM, V180, P1, DOI 10.1016/j.scico.2019.05.002
   Wu X., 2020, EMPIRICAL ASSESSMENT
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Yun SM, 2016, INT J PROJ MANAG, V34, P389, DOI 10.1016/j.ijproman.2015.12.004
NR 70
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2024
VL 36
IS 5
DI 10.1002/smr.2590
EA JUN 2023
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PW3G9
UT WOS:001000554600001
DA 2024-07-18
ER

PT J
AU Jiang, ZX
   Li, HH
   Wang, R
AF Jiang, Zhouxian
   Li, Honghui
   Wang, Rui
TI Efficient generation of valid test inputs for deep neural networks via
   gradient search
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE data augmentation; diversity; DNN testing; gradient ascent; valid test
   input
AB The safety and robustness of deep neural networks (DNNs) are currently of great concern. Adequate testing is commonly an effective technique to ensure the software's trustworthiness. However, existing DNN testing methods generate many invalid test inputs, which inevitably brings increased computational overhead and reduces the efficiency of DNN testing. In this paper, we focus on testing task-specific DNN and investigating diverse, valid and natural test input generation based on data augmentation techniques. Specifically, we propose AugTest, a DNN testing method based on stochastic optimization with momentum, searching for optimal compositions of data augmentation parameters to efficiently generate diverse and valid test inputs. Experimental results show that our proposed method can effectively explore the data manifold space and find valid test inputs with high diversity and naturalness. Compared with the best-performing baseline, AugTest can generate more test inputs with more average diversity and less average time. Furthermore, the generated test inputs have competitive generalizability to DNNs with different structures. The test error rates exceed 70% when testing other DNN models performing similar tasks using the test inputs generated by AugTest. This implies that our method can produce more valid and generalized data to unveil DNNs' errors.
C1 [Jiang, Zhouxian; Li, Honghui; Wang, Rui] Beijing Jiaotong Univ, Sch Comp & Informat Technol, Beijing, Peoples R China.
C3 Beijing Jiaotong University
RP Wang, R (corresponding author), Beijing Jiaotong Univ, Sch Comp & Informat Technol, Beijing, Peoples R China.
EM zhouxianjiang@bjtu.edu.cn; hhli@bjtu.edu.cn; rui.wang@bjtu.edu.cn
OI Wang, Rui/0000-0002-7121-9574; Jiang, Zhouxian/0000-0003-2388-4147
FU Fundamental Research Funds for the Central Universities [2022JBZY027];
   Beijing Natural Science Foundation [L211021]
FX Fundamental Research Funds for the Central Universities, Grant/Award
   Number:2022JBZY027; Beijing Natural Science Foundation, Grant/Award
   Number: L211021
CR [Anonymous], 2022, NEARLY 400 CAR CRASH
   Bojarski M., 2016, ARXIV PREPRINT ARXIV
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Cubuk ED, 2020, IEEE COMPUT SOC CONF, P3008, DOI 10.1109/CVPRW50498.2020.00359
   Cubuk Ekin D, 2018, ARXIV180509501
   Dalal N, 2005, PROC CVPR IEEE, P886, DOI 10.1109/cvpr.2005.177
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Dola S, 2021, PROC INT CONF SOFTW, P226, DOI 10.1109/ICSE43902.2021.00032
   Dong YP, 2018, PROC CVPR IEEE, P9185, DOI 10.1109/CVPR.2018.00957
   Engstrom L, 2019, PR MACH LEARN RES, V97
   Gao X, 2020, PROC INT CONF SOFTW, P1147, DOI 10.1145/3377811.3380415
   github, 2019, GTSRB
   Goodfellow I. J., 2015, 3 INT C LEARNING REP
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Hataya Ryuichiro, 2020, Computer Vision - ECCV 2020. 16th European Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12370), P1, DOI 10.1007/978-3-030-58595-2_1
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hendrycks D., 2019, ARXIV PREPRINT ARXIV
   Hwang S-H., 2021, REGMIX DATA MIXING A
   Iandola Forrest N, 2016, SQUEEZENET ALEXNET L
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Krizhevsky G., 2009, Learning multiple layers of features fromtiny images
   Kulesza A, 2012, FOUND TRENDS MACH LE, V5, P123, DOI 10.1561/2200000044
   Li ZN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P89, DOI 10.1109/ICSE-NIER.2019.00031
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   MACCHI O, 1975, ADV APPL PROBAB, V7, P83, DOI 10.2307/1425855
   Madry A., 2018, ARXIV
   mathworks, 2015, Affine transformation
   Pak M, 2017, INT CONF COMP APPL I, P367
   Papernot N, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P372, DOI 10.1109/EuroSP.2016.36
   Paulsen B, 2020, PROC INT CONF SOFTW, P714, DOI 10.1145/3377811.3380337
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Singh SP, 2017, 2017 INTERNATIONAL CONFERENCE ON COMPUTER, COMMUNICATIONS AND ELECTRONICS (COMPTELIX), P162, DOI 10.1109/COMPTELIX.2017.8003957
   Sun YC, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P111, DOI 10.1109/ICSE-Companion.2019.00051
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Vinayakumar R, 2019, IEEE ACCESS, V7, P46717, DOI 10.1109/ACCESS.2019.2906934
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Y Netzer ACABBW., 2011, ARXIV PREPRINT ARXIV
   Yan SA, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P775, DOI 10.1145/3368089.3409671
   Yun S, 2019, IEEE I CONF COMP VIS, P6022, DOI 10.1109/ICCV.2019.00612
   Zagoruyko S., 2016, ARXIV160507146, DOI DOI 10.5244/C.30.87
   Zhang Hongyi, 2018, MIXUP EMPIRICAL RISK, DOI DOI 10.48550/ARXIV.1710.09412
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang ZY, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P394, DOI 10.1109/QRS.2019.00056
NR 49
TC 0
Z9 0
U1 1
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2024
VL 36
IS 4
DI 10.1002/smr.2550
EA MAR 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MU0E5
UT WOS:000956915200001
DA 2024-07-18
ER

PT J
AU Mohamed, A
   Salah, M
   Eldefrawi, M
AF Mohamed, Amany
   Salah, Marwa
   Eldefrawi, Mai
TI Code quality improvement using Aquila Optimizer
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Aquila Optimizer algorithm; code quality; code smell; ISO 9126 model;
   refactoring; re-refactoring
ID ALGORITHM; SMELLS; IMPACT; BAD
AB The software industry always requires high-quality software. Code quality has been improved via refactoring and re-refactoring and removing code smells. Refactoring is a technique to improve existing code by modifying inner structure, while code smells are indication that might have a wrong in code that causes a negative impact on the code quality. According to previous studies, the accuracy of code smell detection was not stable and could be improved by advanced algorithms. Additionally, the impact of refactoring on each of the quality attributes is unclear. This research proposes the use of Aquila Optimizer to detect code smells in addition to investigate the refactoring and re-refactoring impact through ISO 9126 model. The experiment is conducted on five open-sources Java projects to detect nine code smell types and measure the values of the ISO 9126 before and after the refactoring and re-refactoring techniques to show the impact on code quality. The results showed that the average of detection accuracy is 95.18% and 95.68% for precision and recall, respectively. Moreover, the results in large projects are better than in the medium projects. The findings also show improvement in the values of the ISO 9126 model after applying refactoring and re-refactoring.
C1 [Mohamed, Amany] Kafrelsheikh Univ, Fac Comp & Informat, Dept Software Engn, Kafrelsheikh, Egypt.
   [Mohamed, Amany; Salah, Marwa; Eldefrawi, Mai] Helwan Univ, Fac Comp & Artificial Intelligence, Dept Informat Syst, Cairo, Egypt.
   [Salah, Marwa] British Univ Egypt, Fac Informat & Comp Sci, Cairo, Egypt.
C3 Egyptian Knowledge Bank (EKB); Kafrelsheikh University; Egyptian
   Knowledge Bank (EKB); Helwan University; Egyptian Knowledge Bank (EKB);
   British University in Egypt
RP Mohamed, A (corresponding author), Kafrelsheikh Univ, Fac Comp & Informat, Dept Software Engn, Kafrelsheikh, Egypt.
EM eng.amani.fcih@gmail.com
CR Abualigah L, 2021, COMPUT IND ENG, V157, DOI 10.1016/j.cie.2021.107250
   Agnihotri M, 2020, J INF PROCESS SYST, V16, P915
   Alawairdhi M, 2019, INT J COMPUT SCI NET, V19, P12
   Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   Alomar EA, 2022, INNOV SYST SOFTW ENG, V18, P105, DOI 10.1007/s11334-021-00422-6
   AlOmar EA, 2020, LECT NOTES COMPUT SC, V12541, P261, DOI 10.1007/978-3-030-64694-3_16
   AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   [Anonymous], 2020, RAPIDMINER STUD
   [Anonymous], 2020, JAV EXC API JAR
   Apache Poi, 2020, US
   ArgoUML, 2020, ARGOUML TIGR
   Azure, 2020, VUZ BITT CLIENT
   Bashir RS, 2017, INT CONF FRONT INFO, P183, DOI 10.1109/FIT.2017.00040
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Cedrim D, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P73, DOI 10.1145/2973839.2973848
   Chávez A, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P74, DOI 10.1145/3131151.3131171
   Draz A., 2021, INFORM B FACULTY COM
   Draz MM, 2021, CMC-COMPUT MATER CON, V68, P1919, DOI 10.32604/cmc.2021.015586
   Elsayed SM, 2014, ENG APPL ARTIF INTEL, V27, P57, DOI 10.1016/j.engappai.2013.09.013
   Fakhoury S, 2019, INT C PROGRAM COMPRE, P2, DOI 10.1109/ICPC.2019.00014
   Fernandes E, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106347
   Fernandes FE Jr, 2019, SWARM EVOL COMPUT, V49, P62, DOI 10.1016/j.swevo.2019.05.010
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gandomi AH, 2013, ENG COMPUT-GERMANY, V29, P17, DOI 10.1007/s00366-011-0241-y
   Gantt, 2020, ABOUT US
   Hamdi O, 2021, 2021 IEEE/ACM 8TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2021), P28, DOI 10.1109/MobileSoft52590.2021.00010
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2009, Proceedings of Genetic and Evolutionary Computation Conference, P1681
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Java Development Kit, 2020, JAV DEV KIT
   Kaur A, 2020, ARCH COMPUT METHOD E, V27, P1267, DOI 10.1007/s11831-019-09348-6
   Kaur G., 2017, INT C INTELLIGENT CO
   Kaur P., 2017, INT J ADV RES COMPUT, V8, P90, DOI [10.32628/CSEIT183833, DOI 10.32628/CSEIT183833]
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   Log4j, 2020, ABOUT US
   Mansoor U., 2013, CODE SMELLS DETECTIO
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P529, DOI 10.1007/s11219-016-9309-7
   Mayvan BB, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2255
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mirjalili S, 2017, ADV ENG SOFTW, V114, P163, DOI 10.1016/j.advengsoft.2017.07.002
   Mirjalili S, 2016, ADV ENG SOFTW, V95, P51, DOI 10.1016/j.advengsoft.2016.01.008
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   NetBeans IDE, 2020, US
   Ouni A., 2015, THESIS U MONTREAL
   Ouni A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1843
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2015, SOFTWARE QUAL J, V23, P323, DOI 10.1007/s11219-014-9233-7
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Palomba F, 2019, EMPIR SOFTW ENG, V24, P2907, DOI 10.1007/s10664-019-09683-z
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Pantiuchina J, 2018, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2018.00017
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Sandner P, 2021, EXPERT OPIN THER PAT, V31, P203, DOI 10.1080/13543776.2021.1866538
   Singh Randeep, 2020, International Journal of System of Systems Engineering, V10, P324, DOI 10.1504/IJSSE.2020.112301
   Szoke G, 2014, IEEE INT WORK C SO, P95, DOI 10.1109/SCAM.2014.18
   Vashisht H., 2018, IJ SCI RES ENG TREND, V4, P1127
   Xerces-J, 2020, XERC JAV PARS
NR 60
TC 0
Z9 0
U1 3
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2024
VL 36
IS 4
DI 10.1002/smr.2559
EA MAR 2023
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MU0E5
UT WOS:000950476300001
DA 2024-07-18
ER

PT J
AU Azzeh, M
   Alqasrawi, Y
   Elsheikh, Y
AF Azzeh, Mohammad
   Alqasrawi, Yousef
   Elsheikh, Yousef
TI A soft computing approach for software defect density prediction
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE data sparsity; fuzzy logic; gray theory; software defect density
   prediction
ID CROSS
AB Defect density is an essential software testing and maintenance aspect that determines the quality of software products. It is used as a management factor to distribute limited human resources successfully. The availability of public defect datasets facilitates building defect density prediction models using established static code metrics. Since the data gathered for software modules are often subject to uncertainty, it becomes difficult to deliver accurate and reliable predictions. To alleviate this issue, we propose a new prediction model that integrates gray system theory and fuzzy logic to handle the imprecision in software measurement. We propose a new similarity measure that combines the benefits of fuzzy logic and gray relational analysis. The proposed model was validated against defect density prediction models using public defect datasets. The defect density variable is frequently sparse because of the vast number of none-defected modules in the datasets. Therefore, we also check our proposed model's performance against the sparsity level. The findings reveal that the developed model surpasses other defect density prediction models over the datasets with high and very high sparsity ratios. The ensemble learning techniques are competitive choices to the proposed model when the sparsity ratio is relatively small. On the other hand, the statistical regression models were the most inadequate methods for such problems and datasets. Finally, the proposed model was evaluated against different degrees of uncertainty using a sensitivity analysis procedure. The results showed that our model behaves stably under different degrees of uncertainty.
C1 [Azzeh, Mohammad] Princess Sumaya Univ Technol, Dept Data Sci, Amman, Jordan.
   [Alqasrawi, Yousef; Elsheikh, Yousef] Appl Sci Private Univ, Fac Informat Technol, Amman, Jordan.
C3 Princess Sumaya University for Technology
RP Azzeh, M (corresponding author), Princess Sumaya Univ Technol, Dept Data Sci, Amman, Jordan.
EM m.azzeh@psut.edu.jo
RI Azzeh, Mohammad/G-5472-2017
OI Azzeh, Mohammad/0000-0002-0323-6452
CR Alghanim F, 2022, IEEE ACCESS, V10, P114629, DOI 10.1109/ACCESS.2022.3217480
   Azzeh M., 2016, An application of classification and class decomposition to use case point estimation method, DOI [10.1109 /ICMLA.2015.105, DOI 10.1109/ICMLA.2015.105]
   Azzeh M., 2009, SOFTWARE EFFORT ESTI, P1, DOI [10.1145/1540438.1540450, DOI 10.1145/1540438.1540450]
   Azzeh M, 2011, J SYST SOFTWARE, V84, P270, DOI 10.1016/j.jss.2010.09.028
   Azzeh M, 2010, EMPIR SOFTW ENG, V15, P60, DOI 10.1007/s10664-009-9113-0
   Calikli G., 2013, ALGORITHMIC APPROACH, P1, DOI [10.1145/2499393.2499394, DOI 10.1145/2499393.2499394]
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Deng Julong, 1989, Journal of Grey Systems, V1, P1
   Hsu CJ, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P534, DOI 10.1109/ASPEC.2007.62
   Khalsa SK., 2009, FUZZIFIED APPROACH P
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Knab P., 2006, P 2006 INT WORKSHOP, P119
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kumar V, 2013, COMPUT INFORM, V32, P203
   Kutlubay O, 2007, EUROMICRO CONF PROC, P322
   Li ZY, 2017, PROC IEEE ACM INT C, P308, DOI 10.1109/ICSE-C.2017.132
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   López-Martín C, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110592
   López-Martín C, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P1377, DOI 10.1109/ICMLA.2018.00224
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mandhan N, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION & AUTOMATION (ICCCA), P880, DOI 10.1109/CCAA.2015.7148499
   Marchenko A, 2007, LECT NOTES COMPUT SC, V4536, P137
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Minku LL, 2019, EMPIR SOFTW ENG, V24, P3153, DOI 10.1007/s10664-019-09686-w
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Padmaja M, 2018, ADV INTELL SYST, V672, P924, DOI 10.1007/978-981-10-7512-4_92
   Peng Y, 2011, INT J INF TECH DECIS, V10, P187, DOI 10.1142/S0219622011004282
   Peng Y, 2009, INT J INF TECH DECIS, V8, P749, DOI 10.1142/S0219622009003715
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Rahmani C., 2010, 2010 IEEE/ACIS 9th International Conference on Computer and Information Science (ICIS 2010), P679, DOI 10.1109/ICIS.2010.11
   Rathaur Suraj, 2020, Proceedings of Second International Conference on Inventive Research in Computing Applications (ICIRCA 2020), P434, DOI 10.1109/ICIRCA48905.2020.9183110
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sherriff M., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI 10.1145/1082983.1083285
   Song Q., 2005, 11 IEEE INT SOFTW ME, V2005, P321, DOI [10.1109/METRICS.2005.51, DOI 10.1109/METRICS.2005.51]
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tong HN, 2018, INFORM SOFTWARE TECH, V96, P94, DOI 10.1016/j.infsof.2017.11.008
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Ulumi D. I., 2019, Journal of Physics: Conference Series, V1230, DOI 10.1088/1742-6596/1230/1/012062
   Verma D., 2014, ADV SOFTW ENG, V2014, P1, DOI 10.1155/2014/803530
   Verma D., 2017, J WEB ENG
   Wang HJ, 2011, INT J SOFTW ENG KNOW, V21, P237, DOI 10.1142/S0218194011005256
   XIE XLL, 1991, IEEE T PATTERN ANAL, V13, P841, DOI 10.1109/34.85677
   Yadav HB, 2015, INFORM SOFTWARE TECH, V63, P44, DOI 10.1016/j.infsof.2015.03.001
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Zadeh LA, 1997, FUZZY SET SYST, V90, P111, DOI 10.1016/S0165-0114(97)00077-8
   Zheng J, 2010, EXPERT SYST APPL, V37, P4537, DOI 10.1016/j.eswa.2009.12.056
NR 51
TC 0
Z9 0
U1 2
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2024
VL 36
IS 4
DI 10.1002/smr.2553
EA MAR 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MU0E5
UT WOS:000948456600001
DA 2024-07-18
ER

PT J
AU Laval, J
   Amokrane, N
   Niang, BT
   Derras, M
   Moalla, N
AF Laval, Jannik
   Amokrane, Nawel
   Thiam Niang, Boubou
   Derras, Mustapha
   Moalla, Nejib
TI Data interoperability assessment, case of messaging-based data exchanges
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE data monitoring; event-driven architecture; interoperability assessment;
   message broker
ID MODEL; SPECIFICATION; INTEGRATION; INTERNET; THINGS
AB Data interoperability implies data exchanges among intra and inter enterprises collaborating with information systems (IS). The multiplicity of these exchanges and the increasing number of data exchanged generates complexity and brings out the needs for control to avoid dysfunctions with a negative impact on the overall performance of the systems. Indeed, actually, interoperability has become a necessary performance lever that thus requires particular attention. Being at a low level in the enterprise interoperability concerns, data interoperability is mainly automated, which leads us to question: Is it possible to evaluate data interoperability performance and security based on inspection and analysis of ongoing data exchanges? We therefore endeavored to answer this question by establishing monitoring and analysis systems. In this paper, we present a research work which addresses services provided by a messaging-based communication system. In order to collect information on Information System interactions allowing one to assess their level of data interoperability, we propose a messaging metamodel that aggregates the collected information. It provides a single point of control and enables one to determine indicators of potential interoperability problems. The approach is validated on two case studies. An industrial case study of interactions among existing systems is presented to showcase the feasibility and interest of the approach. It is proposed on top of RabbitMQ and allows our partner to identify some issues in the studied information system. The second case study shows that the approach can integrate other protocols, by reading MQTT messages. The approach is implemented using Moose, a software analysis platform.
C1 [Laval, Jannik; Thiam Niang, Boubou; Moalla, Nejib] Univ Lyon, Univ Lumiere Lyon 2, Univ Claude Bernard Lyon 1, INSA Lyon,DISP UR4570, Bron, France.
   [Amokrane, Nawel; Thiam Niang, Boubou; Derras, Mustapha] Berger Levrault, DRIT, Lyon, France.
C3 Institut National des Sciences Appliquees de Lyon - INSA Lyon;
   Universite Lyon 2; Universite Claude Bernard Lyon 1
RP Laval, J (corresponding author), Univ Lyon, Univ Lumiere Lyon 2, Univ Claude Bernard Lyon 1, INSA Lyon,DISP UR4570, Bron, France.
EM jannik.laval@univ-lyon2.fr
OI Laval, Jannik/0000-0002-7155-5762; NIANG, Boubou
   Thiam/0000-0002-8618-1740
CR Abelev BI, 2009, PHYS REV C, V79, DOI 10.1103/PhysRevC.79.034909
   Al-Dhuraibi Y, 2018, IEEE T SERV COMPUT, V11, P430, DOI 10.1109/TSC.2017.2711009
   Al-Mamary Y H., 2014, International Journal of Research, V1, P333
   Amokrane N, 2018, 2018 9TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS (IS), P199, DOI 10.1109/IS.2018.8710485
   Avritzer A, 2018, LECT NOTES COMPUT SC, V11048, P159, DOI 10.1007/978-3-030-00761-4_11
   Brand T, 2019, INT CONF SELF SELF, P17, DOI 10.1109/SASO.2019.00012
   Buyya R., 2016, Internet of Things: Principles and Paradigms
   C4ISR Architecture Working Group, 1998, LEV INF SYST INT LIS
   Ceccarelli Andrea, 2016, Cyber-Physical Systems of Systems. Foundations - a Conceptual Model and Some Derivations: the AMADEOS Legacy. LNCS 10099, P1, DOI 10.1007/978-3-319-47590-5_1
   Chen D., 2006, INTEROPERABILITY ENT
   Chen D, 2008, COMPUT IND, V59, P647, DOI 10.1016/j.compind.2007.12.016
   Clark T., 1999, P 1999 COMM CONTR RE, V29
   Daclin N., 2008, Proceedings of the 17th World Congress: The International Federation of Automatic Control, P12873, DOI DOI 10.3182/20080706-5-KR-1001.02177
   David Istvan, 2018, Software & Systems Modeling, V17, P135, DOI 10.1007/s10270-016-0533-1
   Demeyer S., 2001, FAMIX 2 1 FAMOOS INF
   Dossot D., 2014, RabbitMQ essentials
   Ducasse S, 2009, SOFTW SYST MODEL, V8, P5, DOI 10.1007/s10270-008-0081-4
   Ford T., 2007, INTEROPERABIIITY SCO
   G?rgen T., 2018, COMPUTER SYSTEMS SOF, P1503
   Garg N, 2013, Apache kafka
   Gascon-Samson J, 2015, INT CON DISTR COMP S, P486, DOI 10.1109/ICDCS.2015.56
   Geraci A., 1991, IEEE STANDARD COMPUT
   Gomez A., 2020, P 23 ACM IEEE INT C, P121, DOI [DOI 10.1145/3365438.3410948, 10.1145/3365438, DOI 10.1145/3365438]
   Guédria W, 2009, LECT NOTES COMPUT SC, V5872, P216, DOI 10.1007/978-3-642-05290-3_32
   Gürdür D, 2018, J IND INF INTEGR, V9, P14, DOI 10.1016/j.jii.2017.12.001
   Iacob ME, 2009, ENTERP INF SYST-UK, V3, P279, DOI 10.1080/17517570903042762
   Johanssen JO, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2169
   Kamble SS, 2019, J RETAIL CONSUM SERV, V48, P154, DOI 10.1016/j.jretconser.2019.02.020
   Keith B, 2016, INT C SOFTW PROC IMP, P47
   Kingston G., 2005, An Organisational Interoperability Agility Model
   Kitchenham BA, 2005, INFORM SOFTWARE TECH, V47, P747, DOI 10.1016/j.infsof.2004.05.005
   Laval J., 2020, 10 INT C INTEROPERAB
   Laval J, 2011, SCI COMPUT PROGRAM, V76, P1177, DOI 10.1016/j.scico.2010.11.014
   Leal B, 2010, INTERNET OF THINGS-BOOK, P3, DOI 10.1007/978-1-4419-1674-7_1
   Mallek S, 2012, COMPUT IND, V63, P643, DOI 10.1016/j.compind.2012.03.002
   Mallek S, 2010, ENTERPRISE INTEROPERABILITY IV: MAKING THE INTERNET OF THE FUTURE FOR THE FUTURE OF ENTERPRISE, P439, DOI 10.1007/978-1-84996-257-5_41
   Marechaux J.-L., 2006, COMBINING SERVICE OR
   Michelson Brenda M, 2006, Patricia Seybold Group, V2, P10
   Mohsin A., 2019, ARCHITECTURE, V13, P15
   O'Brien J.A., 2006, MANAGEMENT INFORM SY, V7th
   O'Connor RV, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1866
   OASIS Standard, 2014, MQTT VERS 3 1 1
   Özdagoglu G, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2162
   Panetto H, 2016, COMPUT IND, V79, P47, DOI 10.1016/j.compind.2015.08.001
   Rasouli M., 2017, 13 INT C IND ENG IIE
   Retaill? J-P., 2011, REFACTORING APPL JAV
   Riahi K, 2022, LECT NOTE NETW SYST, V470, P87, DOI 10.1007/978-3-031-04829-6_9
   Rubin V.A., 2014, INT S EMPIRICAL SOFT, DOI [10.1145/2652524.2652583, DOI 10.1145/2652524.2652583]
   Shackelford R., 2006, SIGCSE Bulletin, V38, P456, DOI 10.1145/1124706.1121482
   Shelby Z., 2014, The Constrained Application Protocol (CoAP), DOI [DOI 10.17487/RFC7252, 10.17487/RFC7252, 10.17487/rfc7252]
   Standish Group Int'l, 2015, CHAOS REP STAND GROU
   Tarafdar M, 2017, INT J PROD RES, V55, P925, DOI 10.1080/00207543.2016.1203079
   Theorin A, 2017, INT J PROD RES, V55, P1297, DOI 10.1080/00207543.2016.1201604
   Tolk A., 2003, 2003 FALL SIM INT WO, P1
   van der Aalst WMP, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1244
   Verdecho M-J., 2018, P 9 INT C INTEROPERA
   Verenich I, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2170
   Vinoski S, 2006, IEEE INTERNET COMPUT, V10, P87, DOI 10.1109/MIC.2006.116
   Vora O., 2003, J PROF ISS ENG ED PR, P502
   Xu LD, 2011, IEEE T IND INFORM, V7, P630, DOI 10.1109/TII.2011.2167156
NR 60
TC 1
Z9 1
U1 4
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2023
VL 35
IS 12
DI 10.1002/smr.2538
EA FEB 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ4E7
UT WOS:000928576100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Akbar, MA
   Leiva, V
   Rafi, S
   Qadri, SF
   Mahmood, S
   Alsanad, A
AF Akbar, Muhammad Azeem
   Leiva, Victor
   Rafi, Saima
   Qadri, Syed Furqan
   Mahmood, Sajjad
   Alsanad, Ahmed
TI Towards roadmap to implement blockchain in healthcare systems based on a
   maturity model
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE blockchain technology; critical barriers and success factors; drug
   supply chain; systematic and multivocal literature reviews; traceability
ID DECISION-MAKING; FUZZY TOPSIS; CHALLENGES; TECHNOLOGY; READINESS
AB Healthcare systems face various issues related to complex networks of intermediaries and a lack of transaction traceability. The most critical issues are the fragmentation of healthcare data, obstacles in providing efficient research and services, lack of clinical trial reporting, high cost and mismanagement of the drug supply chain, patient data security, and fake drugs. Blockchain technology has the potential to address these criticalities as it has in build traceability mechanisms and promises new business models by enabling incentive structures. This potential of blockchain gathers a high interest in the health industry. However, the implementation of blockchain in healthcare faces various issues as well. Currently, there are no practice-oriented maturity models to improve such an implementation. In this paper, we present a roadmap to develop a maturity model for blockchain in healthcare (MMBH) based on critical barriers (CBs), critical success factors (CSFs), and the best practices for blockchain implementation in healthcare systems. As a first step to develop the MMBH, in this paper, we present the initial results of a systematic literature review (SLR) to identify critical success factors for implementing blockchain in healthcare systems. We also applied fuzzy technique order preference by similarity to ideal solution (TOPSIS) to prioritize the identified CSFs.
C1 [Akbar, Muhammad Azeem] LUT Univ, Dept Software Engn, Lappeenranta, Finland.
   [Leiva, Victor] Pontificia Univ Catolica Valparaiso, Sch Ind Engn, Valparaiso, Chile.
   [Rafi, Saima] Univ Murcia, Dept Informat & Syst, Murcia, Spain.
   [Qadri, Syed Furqan] Shenzhen Univ, Coll Comp Sci & Software Engn, Shenzhen, Peoples R China.
   [Mahmood, Sajjad] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
   [Mahmood, Sajjad] King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran, Saudi Arabia.
   [Alsanad, Ahmed] King Saud Univ, Coll Comp & Informat Sci, Dept Informat Syst, STCs Artificial Intelligence Chair, Riyadh, Saudi Arabia.
C3 Lappeenranta-Lahti University of Technology LUT; Pontificia Universidad
   Catolica de Valparaiso; University of Murcia; Shenzhen University; King
   Fahd University of Petroleum & Minerals; King Fahd University of
   Petroleum & Minerals; King Saud University
RP Akbar, MA (corresponding author), LUT Univ, Dept Software Engn, Lappeenranta, Finland.; Alsanad, A (corresponding author), King Saud Univ, Coll Comp & Informat Sci, Dept Informat Syst, STCs Artificial Intelligence Chair, Riyadh, Saudi Arabia.
EM azeemakbar@lut.fi; aasanad@ksu.edu.sa
RI Q, SYED/Q-9567-2019; Leiva, Victor/AAM-7834-2021
OI Leiva, Victor/0000-0003-4755-3270; QADRI, SYED
   FURQAN/0000-0001-9067-054X
CR Agbo CC, 2019, HEALTHCARE-BASEL, V7, DOI 10.3390/healthcare7020056
   Akbar MA, 2020, APPL SOFT COMPUT, V95, DOI 10.1016/j.asoc.2020.106557
   Akbar MA, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2264
   Akbar MA, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1633, DOI 10.1145/3297280.3297656
   Akbar MA, 2019, IEEE ACCESS, V7, P76985, DOI 10.1109/ACCESS.2019.2918552
   Akbar MA, 2018, IEEE ACCESS, V6, P8066, DOI 10.1109/ACCESS.2018.2805702
   Ali O, 2021, IEEE ACCESS, V9, P12730, DOI 10.1109/ACCESS.2021.3050241
   Ali S, 2016, J SYST SOFTWARE, V117, P402, DOI 10.1016/j.jss.2016.03.069
   Amir Latif RM., 2020, REMIX IDE SMART CONT, P1
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   Aykroyd RG, 2019, TECHNOL FORECAST SOC, V144, P221, DOI 10.1016/j.techfore.2019.01.005
   Bell Elizabeth A, 2014, AMIA Annu Symp Proc, V2014, P1699
   Bell L., 2018, Blockchain in Healthcare Today, DOI DOI 10.30953/BHTY.V1.8
   Bozbura FT, 2007, EXPERT SYST APPL, V32, P1100, DOI 10.1016/j.eswa.2006.02.006
   Chen HS, 2019, BIOMED J SCI TECHNOL, V20, P15017, DOI DOI 10.26717/BJSTR.2019.20.003448
   Chen TY, 2008, FUZZY SET SYST, V159, P1410, DOI 10.1016/j.fss.2007.11.004
   Chen Y, 2019, J MED SYST, V43, DOI 10.1007/s10916-018-1121-4
   Cyran M.A., 2018, Blockchain in Healthcare Today, V1, P1, DOI [DOI 10.30953/BHTY.V1.13, 10.30953/bhty.v1.13]
   DASKALANTONAKIS MK, 1994, IEEE SOFTWARE, V11, P17, DOI 10.1109/52.300079
   Dhandapani PB, 2022, ELECTRONICS-SWITZ, V11, DOI 10.3390/electronics11091478
   Epiphaniou G., 2019, BLOCKCHAIN CLIN TRIA, V2019, P1, DOI [10.1007/978-3-030-11289-9_1, DOI 10.1007/978-3-030-11289-9_1]
   Esmaeilzadeh PJBMI., 2022, PERSPECTIVES, V22, P1, DOI [10.1186/s12911-022-01815-8, DOI 10.1186/S12911]
   Griggs KN, 2018, J MED SYST, V42, DOI 10.1007/s10916-018-0982-x
   Haleem A, 2021, Int. J. Intell. Netw.., V2, P130, DOI [DOI 10.1016/J.IJIN.2021.09.005, 10.1016/j.ijin.2021.09.005,9, 10.1016/j.ijin.2021.09.005]
   Hasan MR., 2021, APPLICABILITY BLOCKC
   Hasselgren A, 2020, INT J MED INFORM, V134, DOI 10.1016/j.ijmedinf.2019.104040
   Ismail L, 2019, IEEE ACCESS, V7, P149935, DOI 10.1109/ACCESS.2019.2947613
   Jiang S, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SMART COMPUTING (SMARTCOMP 2018), P49, DOI 10.1109/SMARTCOMP.2018.00073
   Kannan D, 2014, EUR J OPER RES, V233, P432, DOI 10.1016/j.ejor.2013.07.023
   Kassab M, 2021, IEEE T EMERG TOP COM, V9, P1835, DOI 10.1109/TETC.2019.2936881
   Katuwal G. J., 2018, ARXIV PREPRINT ARXIV, P1
   Khan AA, 2017, IEEE ACCESS, V5, P13720, DOI 10.1109/ACCESS.2017.2728603
   Khan SU., 2011, SOFTWARE OUTSOURCING
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Krohling RA, 2011, EXPERT SYST APPL, V38, P4190, DOI 10.1016/j.eswa.2010.09.081
   McGhin T, 2019, J NETW COMPUT APPL, V135, P62, DOI 10.1016/j.jnca.2019.02.027
   Mufti Y, 2018, IEEE ACCESS, V6, P28611, DOI 10.1109/ACCESS.2018.2840322
   Ng WY, 2021, ASIA-PAC J OPHTHALMO, V10, P343, DOI 10.1097/APO.0000000000000399
   Niazi M., 2004, A framework for assisting the design of effective software process improvement implementation strategies
   Niazi M, 2007, LECT NOTES COMPUT SC, V4589, P96
   Nor AKM, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21238020
   OECD, 2019, HLTH SPEND
   Onik M.M.H., 2019, Big Data Analytics for Intelligent Healthcare Management, P197, DOI 10.1016/B978-0-12- 818146-1.00008-8
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Peng Zhang, 2017, 2017 IEEE 19th International Conference on e-Health Networking, Applications and Services (Healthcom), P1, DOI 10.1109/HealthCom.2017.8210842
   Pirtle C., 2018, BLOCKCHAIN HEALTHCAR, V42, DOI [10.1007/s10916-018-1025-3, DOI 10.1007/S10916]
   Prokofieva M, 2019, AUSTRALAS J INF SYST, V23
   Rafi S, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2323
   Rafi S, 2020, IEEE ACCESS, V8, P46958, DOI 10.1109/ACCESS.2020.2976803
   Rojas F, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21155198
   Shubbar S., 2017, THESIS KENT STATE U
   Splett JW, 2017, J APPL SCH PSYCHOL, V33, P347, DOI 10.1080/15377903.2017.1328625
   Tandon A, 2020, COMPUT IND, V122, DOI 10.1016/j.compind.2020.103290
   Team CP, 2002, CMUSEI2002TR012, P2
   Teddlie C., 2009, FDN MIXED METHODS RE, DOI [10.4135/9781483348858.n9, DOI 10.4135/9781483348858.N9]
   Wang S, 2018, IEEE T COMPUT SOC SY, V5, P942, DOI 10.1109/TCSS.2018.2865526
   Winerman M, 2003, ANTITRUST LAW J, V71, P1
   Yaqoob I, 2022, NEURAL COMPUT APPL, V34, P11475, DOI 10.1007/s00521-020-05519-w
   YOON KS, 1985, INT J PROD RES, V23, P345, DOI 10.1080/00207548508904712
   Yue X, 2016, J MED SYST, V40, DOI 10.1007/s10916-016-0574-6
   Zhang P., 2017, ARXIV
NR 61
TC 15
Z9 15
U1 6
U2 24
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2022
VL 34
IS 12
AR e2500
DI 10.1002/smr.2500
EA AUG 2022
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7X5KE
UT WOS:000837463200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Chakroborti, D
   Nath, SS
   Schneider, KA
   Roy, CK
AF Chakroborti, Debasish
   Nath, Sristy Sumana
   Schneider, Kevin A.
   Roy, Chanchal K.
TI Release conventions of open-source software: An exploratory study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE GitHub; methodologies; open-source software; project management;
   release; software engineering
ID DEVELOPMENT METHODOLOGIES; PROJECT; GITHUB
AB Software engineering (SE) methodologies are widely used in both academia and industry to manage the software development life cycle. A number of studies of SE methodologies involve interviewing stakeholders to explore the real-world practice. Although these interview-based studies provide us with a user's perspective of an organization's practice, they do not describe the concrete summary of releases in open-source social coding platforms. In particular, no existing studies investigated how releases are evolved in open-source coding platforms, which assist release planners to a large extent. This study explores software development patterns followed in open-source projects to see the overall management's reflection on software release decisions rather than concentrating on a particular methodology. Our experiments on 51 software origins (with 1777k revisions and 12k releases) from the Software Heritage Graph Dataset (SWHGD) and their GitHub project boards (with 23k cards) reveal reasonably active project management with phase simplicity can release software versions more frequently and can follow the small release conventions of Extreme Programming. Additionally, the study also reveals that a combination of development and management activities can be applied to predict the possible number of software releases in a month (rho< 0:05).
C1 [Chakroborti, Debasish; Nath, Sristy Sumana; Schneider, Kevin A.; Roy, Chanchal K.] Univ Saskatchewan, Dept Comp Sci, 176 Thorvaldson Bldg,110 Sci Pl, Saskatoon, SK S7N 5C9, Canada.
C3 University of Saskatchewan
RP Chakroborti, D (corresponding author), Univ Saskatchewan, Dept Comp Sci, 176 Thorvaldson Bldg,110 Sci Pl, Saskatoon, SK S7N 5C9, Canada.
EM debasish.chakroborti@usask.ca
RI Chakroborti, Debasish Chakroborti/HZI-3031-2023; Schneider,
   Kevin/KQV-5113-2024
OI Schneider, Kevin/0000-0003-1113-1754; Chakroborti,
   Debasish/0000-0002-1597-8162
FU NSERC Collaborative Research and Training Experience; Canada First
   Research Excellence Fund; Natural Sciences and Engineering Research
   Council of Canada (NSERC) Discovery
FX NSERC Collaborative Research and Training Experience; Canada First
   Research Excellence Fund; Natural Sciences and Engineering Research
   Council of Canada (NSERC) Discovery
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Abrahamsson P, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P31, DOI 10.1007/978-3-642-12575-1_3
   Al-Zewairi M., 2017, Journal of Computer and Communications, V5, P74, DOI [10.4236/jcc.2017.55007, DOI 10.4236/JCC.2017.55007]
   Alshomali Mohammad Azeez, 2017, P 17 INT C ELECT BUS, P295
   Ameller D, 2016, LECT NOTES COMPUT SC, V10027, P48, DOI 10.1007/978-3-319-49094-6_4
   Begel Andrew, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P255
   Benesty J., 2009, NOISE REDUCTION SPEE, P1, DOI [10.1007/978-3-642-00296-0_5, DOI 10.1007/978-3-642-00296-05]
   Bhattacharjee A, 2020, IEEE WORK CONF MIN S, P11, DOI 10.1145/3379597.3387512
   Castelluccio M, 2019, EMPIR SOFTW ENG, V24, P3008, DOI 10.1007/s10664-018-9665-y
   Chakroborti Debasish, 2022, 30 IEEEACM INT C PRO
   Coelho J, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106274
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Despa M.L., 2014, Database Systems Journal, V5, P37
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Franch X, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P894, DOI 10.1145/2889160.2891051
   Gonzalez-Perez C, 2007, J SYST SOFTWARE, V80, P1778, DOI 10.1016/j.jss.2007.02.048
   Ho Jason, 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P31, DOI 10.1109/MTD.2014.10
   Jarczyk O, 2018, INFORM SOFTWARE TECH, V100, P32, DOI 10.1016/j.infsof.2018.03.010
   Joshi Saket Dattatray, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P587, DOI 10.1109/MSR.2019.00088
   Kalliamvakou E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P574, DOI 10.1109/ICSE.2015.74
   Li LB, 2017, COMPUT NETW, V114, P114, DOI 10.1016/j.comnet.2016.08.024
   Lindstrom L, 2004, INFORM SYST MANAGE, V21, P41, DOI 10.1201/1078/44432.21.3.20040601/82476.7
   Mc Elroy J, 2010, REQUIR ENG, V15, P337, DOI 10.1007/s00766-010-0097-5
   Nayebi M., 2016, P 4 INT WORKSHOP REL, P1, DOI DOI 10.1145/2993274.2993281
   Nayebi M, 2021, IEEE T SOFTWARE ENG, V47, P393, DOI 10.1109/TSE.2019.2892956
   Nayebi M, 2017, INT SYMP EMP SOFTWAR, P324, DOI 10.1109/ESEM.2017.46
   Nijhawan N, 2018, INT J INNOV TECHNOL, V15, DOI 10.1142/S0219877018500116
   Perez-Riverol Yasset, 2016, PLoS Comput Biol, V12, pe1004947, DOI 10.1371/journal.pcbi.1004947
   Pietri Antoine, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P138, DOI 10.1109/MSR.2019.00030
   Pietri Antoine, 2020, MSR 2020 17 INT C MI
   Pradhan V, 2022, P I MECH ENG O-J RIS, V236, P18, DOI 10.1177/1748006X211033713
   PyGithub, 2019, US
   Rashid N, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P247, DOI 10.5220/0005913802470253
   Richardson Leonard, 2007, BEAUTIFUL SOUP DOCUM
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Saliu O, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P14, DOI 10.1109/SEW.2005.42
   Saraf I, 2022, QUAL RELIAB ENG INT, V38, P1814, DOI 10.1002/qre.3048
   Shukla SK, 2020, INT J INFORM MANAGE, V50, P71, DOI 10.1016/j.ijinfomgt.2019.05.005
   Tandon A., 2020, Life CycleReliabil. Safety Eng., V9, P425, DOI DOI 10.1007/S41872-020-00148-7
   van Valkenhoef G, 2011, INFORM SOFTWARE TECH, V53, P1227, DOI 10.1016/j.infsof.2011.05.007
   Vijayasarathy LR, 2016, IEEE SOFTWARE, V33, P86, DOI 10.1109/MS.2015.26
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Yang JF, 2021, IEEE ACCESS, V9, P18890, DOI 10.1109/ACCESS.2021.3054760
   Yang JF, 2016, J SYST SOFTWARE, V115, P102, DOI 10.1016/j.jss.2016.01.025
   Yang WC, 2013, ASIA PAC SOFWR ENG, P165, DOI 10.1109/APSEC.2013.133
   Yu Y., 2014, P 1 INT WORKSH CROWD, P31
   Zhang Y, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2229
   Zhou SR, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P350, DOI 10.1145/3338906.3338918
   Zhu MM, 2018, ANN OPER RES, V269, P773, DOI 10.1007/s10479-017-2556-6
NR 49
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2023
VL 35
IS 1
AR e2499
DI 10.1002/smr.2499
EA AUG 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7M9LK
UT WOS:000835551100001
DA 2024-07-18
ER

PT J
AU Klunder, J
   Trommer, F
   Prenner, N
AF Klunder, Jil
   Trommer, Felix
   Prenner, Nils
TI How agile coaches create an agile mindset in development teams: Insights
   from an interview study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile mindset; agile software development; interview study; social
   factors
AB Since the publication of the agile manifesto in 2001, many companies implement an agile-or at least more agile-software development process. However, only including agile methods or practices in the overall process does not guarantee being agile. The mindset of the people involved in the process, including the development team, the customers, and the management, is of particular importance. As such an agile mindset cannot be enforced, the process of creating a suitable mindset needs to be handled with care. In an interview study with nine agile coaches, we analyzed which aspects they perceive being of particular importance during an agile transformation. One of these aspects is the agile mindset. We figure out how they support the creation of such a mindset. We identify 12 categories related to the process of creating an agile mindset. These categories include the collaboration between the coach and the management as well as the necessity to internalize the agile values. The main factor for succeeding with the creation of an agile mindset, however, can be hardly influenced: The success strongly depends on the personal prerequisites and attitudes of the individuals involved in the process, mainly the development team. We synthesize the results of our study into a timeline describing the process of how an agile coach can support the development team creating an agile mindset as part of the transformation towards an agile development process.
C1 [Klunder, Jil; Trommer, Felix; Prenner, Nils] Leibniz Univ Hannover, Software Engn Grp, Welfengarten 1, D-30167 Hannover, Germany.
C3 Leibniz University Hannover
RP Klunder, J (corresponding author), Leibniz Univ Hannover, Software Engn Grp, Welfengarten 1, D-30167 Hannover, Germany.
EM jil.kluender@inf.uni-hannover.de
OI Klunder, Jil Ann-Christin/0000-0001-7674-2930; Prenner,
   Nils/0000-0002-2955-0394
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR [Anonymous], 2017, PROJEKTMANAGEMENT VO
   Ashmore Sondra, 2018, International Journal of Agile Systems and Management, V11, P67
   Asnawi AL, 2011, LECT NOTES BUS INF P, V77, P192
   Bang TJ, 2007, LECT NOTES COMPUT SC, V4536, P203
   Begel Andrew, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P255
   Bider I., 2017, MOVING AGILITY ORDER, P175
   Calefato Fabio, 2018, 2018 IEEE/ACM 13th International Conference on Global Software Engineering (ICGSE), P87, DOI 10.1145/3196369.3196372
   Campanelli AS, 2017, LECT NOTES COMPUT SC, V10253, P364, DOI 10.1007/978-3-319-59536-8_23
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Fowler M., 2001, Software Development, V9, P28
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Graziotin D, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3469888
   Gren L., 2020, P EVALUATION ASSESSM, P348
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heidenberg J, 2010, LECT NOTES COMPUT SC, V6156, P47, DOI 10.1007/978-3-642-13792-1_6
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Hohl Philipp, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0059-z
   Hummel M., 2015, Communications of the Association for Information Systems, V36, P273, DOI [DOI 10.17705/1CAIS.03615, 10.17705/1cais.03615]
   Klünder J, 2021, 2021 IEEE/ACM JOINT 15TH INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES AND 16TH ACM/IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICSSP/ICGSE 2021), P1, DOI 10.1109/ICSSP-ICGSE52873.2021.00010
   Klünder J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P255, DOI 10.1109/ICSE-SEIP.2019.00036
   Klünder J, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P1, DOI 10.1145/3202710.3203146
   Klünder JAC, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2168
   Klunder Jil, 2020, Human-Centered Software Engineering. 8th IFIP WG 13.2 International Working Conference, HCSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12481), P133, DOI 10.1007/978-3-030-64266-2_8
   Kuhrmann M, 2022, IEEE T SOFTWARE ENG, V48, P3523, DOI 10.1109/TSE.2021.3099532
   Kupper S., 2017, Conference: Projektmanagement und Vorgehenmodelle, Darmstadt, Germany, 5-6 October 2017, P111
   Madi T., 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P423, DOI 10.1109/MySEC.2011.6140710
   Miler J, 2019, FED CONF COMPUT SCI, P841, DOI 10.15439/2019F198
   O'Connor R.V., 2014, Communications in Computer and Information Science Systems, Software and Services Process Improvement, V425, P135, DOI DOI 10.1007/978-3-662-43896-1_12
   Paasivaara M, 2014, LECT NOTES BUS INF P, V199, P73
   Parizi Reza Meimandi, 2014, 2014 8th Malaysian Software Engineering Conference (MySEC), P246, DOI 10.1109/MySec.2014.6986022
   Schneider K, 2018, J SYST SOFTWARE, V143, P59, DOI 10.1016/j.jss.2018.05.001
   Soares LP., 2018, SOME PLACES MORE OTH, P121
   Stray V, 2020, LECT NOTES COMPUT SC, V12562, P3, DOI 10.1007/978-3-030-64148-1_1
   Sureshchandra K, 2008, AGILE 2008, PROCEEDINGS, P97, DOI 10.1109/Agile.2008.49
   Tell P, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2315
   Tell P, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P105, DOI 10.1109/ICSSP.2019.00022
   van Manen H, 2014, LECT NOTES COMPUT SC, V8892, P48, DOI 10.1007/978-3-319-13835-0_4
NR 39
TC 3
Z9 4
U1 6
U2 33
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2022
VL 34
IS 12
AR e2491
DI 10.1002/smr.2491
EA JUL 2022
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7X5KE
UT WOS:000827307500001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Du, JW
   Ren, XS
   Li, HJ
   Jiang, F
   Yu, X
AF Du, Junwei
   Ren, Xinshuang
   Li, Haojie
   Jiang, Feng
   Yu, Xu
TI Prediction of bug-fixing time based on distinguishable sequences fusion
   in open source software
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE attention mechanism; bug-fixing time prediction; inconsistent samples;
   LSTM; open source software; temporal sequence
AB Generally, open source software (OSS) has a longer bug-fixing time. If the bug-fixing time can be predicted accurately as early as possible, it will be beneficial to the efficiency of bug fixing. Traditional bug-fixing time prediction models are usually based on static features of bug report. It is difficult to go into service due to inappropriate feature extraction of data and low prediction accuracy of models. The HMM prediction model can predict the bug-fixing time accurately according to earlier fixing activities. However, this method of temporal sequence feature selection results in a large number of inconsistent samples, and the HMM prediction model can only capture the adjacent activity behavior information of one sequence, and hence, it will reduce the performance of bug-fixing time prediction. By incorporating the activity information and time information of bug activity transfer, the proportion of inconsistent samples is reduced significantly. In this paper, a double-sequence input LSTM model (LSTM-DA) is designed to capture both sequences interaction features and long-distance-dependent features. The results of the experiments show that the proposed model can improve the F-measure and accuracy indicators by about 10% compared with the HMM model in all dimensions, which demonstrates the effectiveness of our method.
C1 [Du, Junwei; Ren, Xinshuang; Li, Haojie; Jiang, Feng; Yu, Xu] Qingdao Univ Sci & Technol, Sch Informat Sci & Technol, Qingdao, Peoples R China.
C3 Qingdao University of Science & Technology
RP Li, HJ (corresponding author), Qingdao Univ Sci & Technol, Sch Informat Sci & Technol, Qingdao, Peoples R China.
EM 1010803363@qq.com
RI Feng, Jiashi/AGX-6209-2022; Li, Hao/GPS-9834-2022; Li, Li/IAQ-0885-2023
OI Jiang, Feng/0009-0001-6271-9526
FU Key R&D project of Shandong Province [2018GGX101052]; National Natural
   Science Foundation of China [61273180, 61973180, 6217072142]; National
   Key R&D Program of China [2018YFC0809300]; Natural Science Foundation of
   Shandong Province [ZR2018MF007, ZR2019MF014, ZR2019MF033, ZR2021MF092]
FX Key R&D project of Shandong Province, Grant/Award Number: 2018GGX101052;
   National Natural Science Foundation of China, Grant/Award Numbers:
   61273180, 61973180, 6217072142; National Key R&D Program of China,
   Grant/Award Number: 2018YFC0809300; Natural Science Foundation of
   Shandong Province, Grant/Award Numbers: ZR2018MF007, ZR2019MF014,
   ZR2019MF033, ZR2021MF092
CR Akbarinasaji S, 2018, J SYST SOFTWARE, V136, P173, DOI 10.1016/j.jss.2017.02.021
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Ardimento P, 2020, IEEE CONF EVOL ADAPT, DOI 10.1109/eais48028.2020.9122781
   Ardimento P, 2020, STUD COMPUT INTELL, V880, P63, DOI 10.1007/978-3-030-36617-9_5
   Ardimento P, 2016, LECT NOTES ARTIF INT, V9956, P167, DOI 10.1007/978-3-319-46307-0_11
   Bhattacharya P, 2010, PROC IEEE INT CONF S
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   da Costa DA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P374, DOI [10.1109/MSR.2016.045, 10.1145/2901739.2901764]
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Ge H, 2017, INT J APPROX REASON, V82, P56, DOI 10.1016/j.ijar.2016.11.016
   Giger E., 2010, P INT C SOFTW ENG
   Guo D, 2018, AAAI CONF ARTIF INTE, P6845
   Habayeb M, 2018, IEEE T SOFTWARE ENG, V44, P1224, DOI 10.1109/TSE.2017.2757480
   Hooimeijer P., 2007, IEEE ACM INT C AUT S
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Marks L., 2011, INT C PRED MOD SOFTW
   Panjer LD., 2007, INT WORKSH MIN SOFTW
   SACHAN DS, 2019, REVISITING LSTM NETW, P6940
   Saha RK, 2015, INFORM SOFTWARE TECH, V65, P114, DOI 10.1016/j.infsof.2015.03.002
   Saha RK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P144, DOI 10.1109/CSMR-WCRE.2014.6747164
   Sepahvand R, 2020, IET SOFTW, V14, P203, DOI 10.1049/iet-sen.2019.0260
   Sharma M, 2019, INT J SYST ASSUR ENG, V10, P1328, DOI 10.1007/s13198-019-00888-5
   Sutskever I, 2014, ADV NEUR IN, V27
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tantithamthavorn C., IEEE ACM INT C SOFTW
   Vaswani A, 2017, ADV NEUR IN, V30
   Wahono R. S., 2015, Journal of Software Engineering, V1, P1
   Wang He-Peng, 2017, Journal of Software, V28, P2814, DOI 10.13328/j.cnki.jos.005344
   Wang Y., 2016, P 2016 C EMPIRICAL M, P606, DOI 10.18653/v1/D16-1058
   WeiSS C., 2007, How Long will it Take to Fix This Bug ?
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
NR 31
TC 2
Z9 2
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2023
VL 35
IS 11
SI SI
AR e2443
DI 10.1002/smr.2443
EA FEB 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X1KC8
UT WOS:000759241200001
DA 2024-07-18
ER

PT J
AU Sas, D
   Avgeriou, P
   Pigazzini, I
   Fontana, FA
AF Sas, Darius
   Avgeriou, Paris
   Pigazzini, Ilaria
   Fontana, Francesca Arcelli
TI On the relation between architectural smells and source code changes
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE architectural smells; architectural technical debt; empirical study;
   software repository mining; technical debt; technical debt interest
AB Although architectural smells are one of the most studied type of architectural technical debt, their impact on maintenance effort has not been thoroughly investigated. Studying this impact would help to understand how much technical debt interest is being paid due to the existence of architecture smells and how this interest can be calculated. This work is a first attempt to address this issue by investigating the relation between architecture smells and source code changes. Specifically, we study whether the frequency and size of changes are correlated with the presence of a selected set of architectural smells. We detect architectural smells using the Arcan tool, which detects architectural smells by building a dependency graph of the system analyzed and then looking for the typical structures of the architectural smells. The findings, based on a case study of 31 open-source Java systems, show that 87% of the analyzed commits present more changes in artifacts with at least one smell, and the likelihood of changing increases with the number of smells. Moreover, there is also evidence to confirm that change frequency increases after the introduction of a smell and that the size of changes is also larger in smelly artifacts. These findings hold true especially in Medium-Large and Large artifacts.
C1 [Sas, Darius; Avgeriou, Paris] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Groningen, Netherlands.
   [Pigazzini, Ilaria; Fontana, Francesca Arcelli] Univ Milano Bicocca, Dept Informat Syst & Commun, Milan, Italy.
C3 University of Groningen; University of Milano-Bicocca
RP Sas, D (corresponding author), Univ Groningen, Fac Sci & Engn FSE, Nijenborgh 9, NL-9747 AG Groningen, Netherlands.
EM d.d.sas@rug.nl
OI Avgeriou, Paris/0000-0002-7101-0754; Sas, Darius/0000-0003-3383-3298
FU Horizon 2020 Framework Programme [780572]; Rijksdienst voor Ondernemend
   Nederland [17038]
FX Horizon 2020 Framework Programme, Grant/Award Number: 780572;
   Rijksdienst voor Ondernemend Nederland, Grant/Award Number: 17038
CR Ampatzoglou A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P115, DOI 10.1145/3194164.3194175
   Aniche M, 2018, EMPIR SOFTW ENG, V23, P2121, DOI 10.1007/s10664-017-9540-2
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Arvanitou EM., 2017, P 21 INT C EV ASS SO, P186, DOI [10.1145/3084226.3084239, DOI 10.1145/3084226.3084239]
   Avgeriou P., 2016, DAGSTUHL SEMINAR 161, V6
   Le DM, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P176, DOI 10.1109/ICSA.2018.00027
   El-Emam K., 2000, 44142 NRC
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fontana FA., 2020, An architectural smell evaluation in an industrial context, P68
   Fontana FA, 2019, EUROMICRO CONF PROC, P333, DOI 10.1109/SEAA.2019.00057
   Fontana FA, 2019, J SYST SOFTWARE, V154, P139, DOI 10.1016/j.jss.2019.04.066
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Jaafar F, 2016, EMPIR SOFTW ENG, V21, P896, DOI 10.1007/s10664-015-9361-0
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kouroshfar E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P246, DOI 10.1109/MSR.2015.30
   Le DM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P235, DOI 10.1109/MSR.2015.29
   Lippert M., 2006, Refactoring in large software projects: performing complex restructurings successfully
   Martin R., 1994, ANAL DEPENDENCIES, V12, P151
   Martin R. C., 2018, Clean Architecture: A Craftsman's Guide to Software Structure and Design
   Martini A, 2018, LECT NOTES COMPUT SC, V11048, P320, DOI 10.1007/978-3-030-00761-4_21
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Neri D, 2020, SICS SOFTWARE, V35, P3, DOI 10.1007/s00450-019-00407-8
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Oyetoyan TD, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P241, DOI 10.1109/SANER.2015.7081834
   Sas D, 2019, PROC IEEE INT CONF S, P557, DOI 10.1109/ICSME.2019.00090
   Sharma T, 2020, EMPIR SOFTW ENG, V25, P4020, DOI 10.1007/s10664-020-09847-2
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Shihab E., 2013, P 2013 INT WORKSHOP, P1, DOI [10.1145/2501553.2501554, DOI 10.1145/2501553.2501554]
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Van Solingen R., 2002, ENCY SOFTWARE ENG
   Verdecchia R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P11, DOI 10.1145/3194164.3194176
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
NR 38
TC 3
Z9 4
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2022
VL 34
IS 1
AR e2398
DI 10.1002/smr.2398
EA OCT 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YI2EU
UT WOS:000711612400001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Daun, M
   Brings, J
   Weyer, T
AF Daun, Marian
   Brings, Jennifer
   Weyer, Thorsten
TI Model inspections in the engineering of collaborative cyber-physical
   systems with instance-level review diagrams
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE controlled experiment; cyber-physical systems; message sequence charts;
   review model; validation
ID COMPREHENSION; PERFORMANCE; EXPERIENCE
AB Model inspections are important to ensure high-quality software and to satisfy legal obligations in model-based engineering processes. As model-based specifications are typically documented on type-level, errors concerning the interactions between multiple system instances can go unnoticed. For collaborative cyber-physical systems (CPS), a plethora of possible instance-level configurations need to be taken into account. Therefore, we propose the definition of instance-level review diagrams that show representative interactions of instance-level configurations that help detect defects in the system specification. To evaluate the approach, we conducted a controlled experiment whose results indicate that instance-level review diagrams have-compared with type-level diagrams-important positive effects on reviewing processes for behavioral specifications of CPS. Specifically, the experiment provides empirical evidence that instance-level review diagrams are significantly more expressive and effective than type-level diagrams.
C1 [Daun, Marian; Brings, Jennifer; Weyer, Thorsten] Univ Duisburg Essen, Paluno Ruhr Inst Software Technol, D-45127 Essen, Germany.
C3 University of Duisburg Essen
RP Daun, M (corresponding author), Univ Duisburg Essen, Paluno Ruhr Inst Software Technol, D-45127 Essen, Germany.
EM marian.daun@paluno.uni-due.de
OI Daun, Marian/0000-0002-9156-9731
FU Bundesministerium fur Bildung und Forschung [01IS12005C, 01IS16043V]
FX Bundesministerium fur Bildung und Forschung, Grant/Award Numbers:
   01IS12005C, 01IS16043V
CR Ahluwalia J., 2005, EMSOFT, P100
   Alda S., 2003, Scientific Engineering for Distributed Java Applications. International Workshop, FIDJI 2002. Revised Papers (Lecture Notes in Computer Science Vol.2604), P143
   Alur R, 2003, IEEE T SOFTWARE ENG, V29, P623, DOI 10.1109/TSE.2003.1214326
   [Anonymous], 2011, 26262 ISO INT
   [Anonymous], 2016, Recommendation ITU-T G.652: Characteristics of a single-mode optical fibre and cable
   [Anonymous], 2010, 61508 IEC INT
   [Anonymous], 1996, 4761 SAE INT
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Bauer B., 2001, International Journal of Software Engineering and Knowledge Engineering, V11, P207, DOI 10.1142/S0218194001000517
   Becker Basil., 2006, Proceeding of the 28th international conference on Software engineering - ICSE '06, P72
   Berling T., 2003, IEE Proceedings-Software, V150, P177, DOI 10.1049/ip-sen:20030483
   Blay-Fornarino M., 2004, J OBJECT TECHNOLOGY, V3, P161
   Bowen T. F., 1989, Seventh International Conference on Software Engineering for Telecommunication Switching Systems: SETSS 89 (Conf. Publ. No.306), P59
   Brings J, 2019, J SYST ARCHITECT, V97, P153, DOI 10.1016/j.sysarc.2019.02.012
   Bures Tomas., 2014, Proceedings of the 17th international ACM Sigsoft symposium on Component-based software engineering, P91
   Caramihai SI., 2013, ADV INTELLIGENT SYST, V187
   Chen CA, 2005, LECT NOTES COMPUT SC, V3780, P195
   Daun M., 2020, P INT C SOFTW SYST P, P11
   Daun M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09972-6
   Daun M, 2019, SOFTW SYST MODEL, V18, P3421, DOI 10.1007/s10270-019-00723-2
   Daun M, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P44, DOI 10.1109/ICSSP.2019.00016
   Daun M, 2018, 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P6, DOI 10.1145/3196478.3196483
   Daun M, 2017, LECT NOTES COMPUT SC, V10650, P466, DOI 10.1007/978-3-319-69904-2_35
   Daun M, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P48, DOI 10.1109/SEsCPS.2015.17
   Daun M, 2015, LECT NOTES COMPUT SC, V9013, P65, DOI 10.1007/978-3-319-16101-3_5
   Daun Marian., 2015, Proceedings of the 19th International Conference on Evaluation and Assessment in Software Engineering. EASE'15, p29:1, DOI DOI 10.1145/2745802.2745829
   Fard FH, 2012, 2012 IEEE 13TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P185, DOI 10.1109/IRI.2012.6303009
   Felty AP, 2003, ACM T SOFTW ENG METH, V12, P3, DOI 10.1145/839268.839270
   Ferber J., 1999, MULTIAGENT SYSTEMS
   Floch J, 2006, IEEE SOFTWARE, V23, P62, DOI 10.1109/MS.2006.61
   Giese H., 2004, Software Engineering Notes, V29, P179, DOI 10.1145/1041685.1029920
   Giese H., 2003, Software Engineering Notes, V28, P38, DOI 10.1145/949952.940078
   He Lulu, 2006, 2006 INT S EMP SOFTW, P95
   Helouet Loic, 2000, SAM 2000 2NDWORKSHOP, P47
   Houdek Frank, 2017, JOINT P REFSQ 2017 W
   J1239_200901 SIS, 2009, J1239200901 SIS
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jianhui Mao, 2012, Proceedings of the 2012 Second International Conference on Intelligent System Design and Engineering Application (ISDEA), P509, DOI 10.1109/ISdea.2012.592
   Kimbler K., 1998, FEATURE INTERACTIONS
   KLEIN F., 2005, SELMAS'05 at ICSE'05, P1
   Kochenderfer Mykel J., 2012, Lincoln Laboratory Journal, V19, P17
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   LEITE JCSD, 1991, IEEE T SOFTWARE ENG, V17, P1253, DOI 10.1109/32.106986
   Lempia D.L., 2009, Requirements engineering management handbook
   Letier E, 2005, PROC INT CONF SOFTW, P382
   Leveson NG, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P204, DOI 10.1109/ICRE.1998.667827
   Malakuti S., 2014, P 2014 EUR C SOFTW A, p24:1
   Maldonado JC, 2006, EMPIR SOFTW ENG, V11, P119, DOI 10.1007/s10664-006-5967-6
   Mauw S., 2002, HDB SOFTWARE ENG KNO, P437
   Miller J., 1998, Empirical Software Engineering, V3, P37, DOI 10.1023/A:1009735805377
   Mitchell B, 2005, LECT NOTES COMPUT SC, V3407, P113
   Moshirpour M, 2012, INT J SOFTW ENG KNOW, V22, P729, DOI 10.1142/S0218194012400104
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Rolland C., 1998, Requirements Engineering, V3, P23, DOI 10.1007/BF02802919
   Sabaliauskaite G, 2004, INFORM SOFTWARE TECH, V46, P875, DOI 10.1016/j.infsof.2004.03.004
   Shiri MS., 2007, P 22 IEEE ACM INT C, P437
   Shull F, 2000, COMPUTER, V33, P73, DOI 10.1109/2.869376
   Sikora E, 2012, REQUIR ENG, V17, P57, DOI 10.1007/s00766-011-0144-x
   Stenkova V, 2019, LECT NOTES COMPUT SC, V11788, P412, DOI 10.1007/978-3-030-33223-5_34
   Uchitel S., 2001, Software Engineering Notes, V26, P74, DOI 10.1145/503271.503220
   van der Hoek W, 2008, FOUND ARTIF INTELL, P887, DOI 10.1016/S1574-6526(07)03024-6
   Vareková P, 2008, IET SOFTW, V2, P532, DOI 10.1049/iet-sen:20080009
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Venkatesh V, 2008, DECISION SCI, V39, P273, DOI 10.1111/j.1540-5915.2008.00192.x
   Weber M, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P331, DOI 10.1109/ICRE.2002.1048546
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 69
TC 1
Z9 1
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2023
VL 35
IS 5
SI SI
AR e2392
DI 10.1002/smr.2392
EA OCT 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA E6KV9
UT WOS:000707733100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Stocco, A
   Tonella, P
AF Stocco, Andrea
   Tonella, Paolo
TI Confidence-driven weighted retraining for predicting safety-critical
   failures in autonomous driving systems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE AI testing; autonomous driving systems; continual learning; misbehavior
   prediction
AB Safe handling of hazardous driving situations is a task of high practical relevance for building reliable and trustworthy cyber-physical systems such as autonomous driving systems. This task necessitates an accurate prediction system of the vehicle's confidence to prevent potentially harmful system failures on the occurrence of unpredictable conditions that make it less safe to drive. In this paper, we discuss the challenges of adapting a misbehavior predictor with knowledge mined during the execution of the main system. Then, we present a framework for the continual learning of misbehavior predictors, which records in-field behavioral data to determine what data are appropriate for adaptation. Our framework guides adaptive retraining using a novel combination of in-field confidence metric selection and reconstruction error-based weighing. We evaluate our framework to improve a misbehavior predictor from the literature on the Udacity simulator for self-driving cars. Our results show that our framework can reduce the false positive rate by a large margin and can adapt to nominal behavior drifts while maintaining the original capability to predict failures up to several seconds in advance.
C1 [Stocco, Andrea; Tonella, Paolo] USI, Software Inst, Lugano, Switzerland.
C3 Universita della Svizzera Italiana
RP Stocco, A (corresponding author), Univ Svizzera Italiana, Via Giuseppe Buffi 13, Lugano, Switzerland.
EM andrea.stocco@usi.ch
RI Stocco, Andrea/I-7081-2019; Stocco, Andrea/GVT-6917-2022; Tonella,
   Paolo/C-1702-2015
OI Stocco, Andrea/0000-0001-8956-3894; Stocco, Andrea/0000-0001-8956-3894;
   Tonella, Paolo/0000-0003-3088-0339
FU ERC [787703]; European Research Council (ERC) [787703] Funding Source:
   European Research Council (ERC)
FX This work was partially supported by the H2020 project PRECRIME, funded
   under the ERC Advanced Grant 2017 Program (ERC Grant Agreement n.
   787703).
CR Abdessalem RB., 2018, ASE 2018ACM
   An J., 2015, Special Lecture on IE, V2, P1
   [Anonymous], 2021, TESLA VEHICLE SAFETY
   [Anonymous], 2021, DRIVERLESS CAR ACCID
   [Anonymous], 2021, Replication Package
   [Anonymous], 2020, WAYMO DRIVERLESS CAR
   Arrieta A, 2017, IEEE C EVOL COMPUTAT, P688, DOI 10.1109/CEC.2017.7969377
   Ayerdi J, 2020, INT REQUIR ENG CONF, P280, DOI 10.1109/RE48521.2020.00038
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Biggio B, 2018, PATTERN RECOGN, V84, P317, DOI 10.1016/j.patcog.2018.07.023
   Bojarski Mariusz, 2016, arXiv
   Bolte JA, 2019, IEEE INT VEH SYM, P438, DOI 10.1109/IVS.2019.8813817
   Chalapathy Raghavendra, 2019, ARXIV190103407
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Codevilla F., 2018, ABS180904843 CORR
   Cohen J., 1988, STAT POWER ANAL BEHA
   Evans AN., 2020, LANGUAGE AUTONOMOUS
   Gal Y, 2016, PR MACH LEARN RES, V48
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Haq FU., 2020, ICST 20IEEE
   Henriksson J, 2019, STRUCTURED EVALUATIO
   Humbatova N., 2021, ISSTA 21
   Jahangirova G., 2021, ICST 21IEEE
   Julian KD, 2019, J GUID CONTROL DYNAM, V42, P598, DOI 10.2514/1.G003724
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kiran BR, 2022, IEEE T INTELL TRANSP, V23, P4909, DOI 10.1109/TITS.2021.3054625
   LANGFORD MA, 2019, ENHANCING LEARNING E, P115, DOI DOI 10.1109/ICAC.2019.00023
   Langford MA., 2021, KNOW WHAT YOU KNOW P, P78
   Laves M-H., 2019, WELL CALIBRATED MODE
   Lee K, 2018, ADV NEUR IN, V31
   Makhzani A., 2016, ADVERSARIAL AUTOENCO
   Michelmore R., 2018, ABS181106817 CORR
   Michelmore R, 2020, IEEE INT CONF ROBOT, P7344, DOI [10.1109/icra40945.2020.9196844, 10.1109/ICRA40945.2020.9196844]
   Mualler S., 2015, ROBUSTNESS EVALUATIO
   Mullins GE, 2018, J SYST SOFTWARE, V137, P197, DOI 10.1016/j.jss.2017.10.031
   Nargiz H., 2020, ICSE 2012
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pertuz S, 2013, PATTERN RECOGN, V46, P1415, DOI 10.1016/j.patcog.2012.11.011
   Prasad NR, 2009, CMC-COMPUT MATER CON, V14, P1, DOI 10.1145/1541880.1541882
   Riccio V., 2020, P 28 ACM JOINT M EUR, P876
   Riccio V, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P355, DOI 10.1109/ASE51524.2021.9678764
   Riccio V, 2020, EMPIR SOFTW ENG, V25, P5193, DOI 10.1007/s10664-020-09881-0
   Schroff F, 2015, PROC CVPR IEEE, P815, DOI 10.1109/CVPR.2015.7298682
   Staudinger TC., 2018, MLOSS 18
   Stocco A., 2020, ISSREW 2020 IEEE
   Stocco A, 2020, PROC INT CONF SOFTW, P359, DOI 10.1145/3377811.3380353
   STRICKLAND M, 2018, P IEEE INT C ROBOTIC
   Tian Y., 2018, ICSE 18ACM
   Transportation National Highway Traffic Safety Administration, 2007, PRECR SCEN TYP CRASH
   Weiss M, 2021, IEEE INT CONF SOFTW, P24, DOI 10.1109/ICST49551.2021.00015
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   Wiewel F., 2019, CONTINUAL LEARNING A
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu WB, 2019, I C DEPEND SYS NETWO, P125, DOI 10.1109/DSN.2019.00026
   Yandrapally R., 2020, ICSE 20ACM
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang Q., 2018, MED IMAGE SYNTHESIS
   Zhao J, 2019, SCI REP-UK, V9, DOI 10.1038/s41598-018-36745-x
   Zliobaite I, 2016, STUD BIG DATA, V16, P91, DOI 10.1007/978-3-319-26989-4_4
   Zohdinasab T., 2021, ISSTA 21ASSOCIATION
NR 61
TC 17
Z9 17
U1 2
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2022
VL 34
IS 10
SI SI
AR e2386
DI 10.1002/smr.2386
EA OCT 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5A6PE
UT WOS:000703740800001
PM 36582194
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Eilertsen, AM
   Murphy, GC
AF Eilertsen, Anna M.
   Murphy, Gail C.
TI A study of refactorings during software change tasks
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE human factors; refactoring; refactoring tool design; software change
   tasks
AB Developers frequently undertake software change tasks that could be partially or fully automated by refactoring tools. As has been reported by others, all too often, these refactoring steps are instead performed manually by developers. These missed opportunities are referred to as occasions of disuse of refactoring tools. We perform an observational study in which 17 developers with professional experience attempt to solve three change tasks with steps amenable to the use of refactoring tools. We found that the strategies developers use to approach these tasks shape their workflow, which, in turn, shape the opportunities for refactoring tool use. We report on a number of findings about developer strategies, demonstrating the difficulty of aligning the kind of refactoring steps that emerge during a change task based on the strategy with the tools available. We also report on findings about refactoring tools, such as the difficulties developers face in controlling the scope of application of the tools. Our findings can help inform the designers of refactoring tools.
C1 [Eilertsen, Anna M.] Univ Bergen, Inst Informat, Bergen, Norway.
   [Murphy, Gail C.] Univ British Columbia, Dept Comp Sci, Vancouver, BC, Canada.
C3 University of Bergen; University of British Columbia
RP Eilertsen, AM (corresponding author), Univ Bergen, Inst Informat, Bergen, Norway.
EM anna.eilertsen@uib.no
FU Norges Forskningsrad [250683]
FX Norges Forskningsrad, Grant/Award Number: 250683
CR Abid C., 2020, 30 YEARS SOFTWARE RE
   [Anonymous], ECLIPSE REFACTORING
   [Anonymous], INTELLIJ REFACTORING
   [Anonymous], MAVEN
   [Anonymous], QUASAR COMMIT 56D4B9
   [Anonymous], Apache Commons Lang
   [Anonymous], 2020, APACHE COMMONS LANG
   [Anonymous], VISUAL STUDIO REFACT
   [Anonymous], ERGONOMICS HUMAN 11
   Bannwart F, 2006, LECT NOTES COMPUT SC, V4085, P492
   Bibiano AC, 2020, 17 MSR
   Brant J, 2015, IEEE SOFTWARE, V32, P80, DOI 10.1109/MS.2015.145
   Campbell D., 2008, Proceedings of the 2nd Workshop on Refactoring Tools, P9, DOI 10.1145/1636642.1636651
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Eilertsen AM., 2020, ICSE 20, P330, DOI [10.1145/3387940.3392185, DOI 10.1145/3387940.3392185]
   Eilertsen AM, 2016, LECT NOTES COMPUT SC, V9952, P517, DOI 10.1007/978-3-319-47166-2_36
   Fleming SD, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430545.2430551
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Kaiser G, 2015, SOFTWARE ENG MANAGEM, P65
   Kim J, 2016, PROC INT CONF SOFTW, P1145, DOI 10.1145/2884781.2884802
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Lee YY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P23, DOI 10.1109/ICSE.2013.6606548
   Leppänen M, 2015, IEEE SOFTWARE, V32, P62, DOI 10.1109/MS.2015.132
   Liu WM, 2016, FRONT COMPUT SCI-CHI, V10, P644, DOI 10.1007/s11704-016-5131-4
   Mongiovi M, 2018, IEEE T SOFTWARE ENG, V44, P429, DOI 10.1109/TSE.2017.2693982
   Mongiovi M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P674, DOI 10.1145/2889160.2891038
   Murphy, 2021, 2021 IEEE 28 INT C S
   Murphy GC, DATA PACKAGE, DOI [10.18710/VTTNXM, DOI 10.18710/VTTNXM]
   Murphy-Hill E, 2011, S VIS LANG HUM CEN C, P165, DOI 10.1109/VLHCC.2011.6070394
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   Murphy-Hill E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P421, DOI 10.1145/1368088.1368146
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Reichenbach C, 2009, LECT NOTES COMPUT SC, V5653, P394, DOI 10.1007/978-3-642-03013-0_18
   Schäfer M, 2010, ACM SIGPLAN NOTICES, V45, P286, DOI 10.1145/1932682.1869485
   Sharma T, 2015, IEEE SOFTWARE, V32, P44, DOI 10.1109/MS.2015.105
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Steimann F, 2018, ACM T PROGR LANG SYS, V40, DOI 10.1145/3156016
   Steimann F, 2012, IEEE INT CONF AUTOM, P290, DOI 10.1145/2351676.2351726
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1797
   Vakilian M, 2013, LECT NOTES COMPUT SC, V7920, P527, DOI 10.1007/978-3-642-39038-8_22
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
NR 48
TC 1
Z9 1
U1 0
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2024
VL 36
IS 1
AR e2378
DI 10.1002/smr.2378
EA SEP 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH0R6
UT WOS:000692041000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zahid, M
   Inayat, I
   Daneva, M
   Mehmood, Z
AF Zahid, Maryam
   Inayat, Irum
   Daneva, Maya
   Mehmood, Zahid
TI Security risks in cyber physical systems-A systematic mapping study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
ID VULNERABILITY; INTERNET; SAFETY; SCADA; PROTECTION; MANAGEMENT;
   OPERATION; FRAMEWORK; ATTACKS; THINGS
AB The increased need for constant connectivity and complete automation of existing systems fuels the popularity of Cyber Physical Systems (CPS) worldwide. Increasingly more, these systems are subjected to cyber attacks. In recent years, many major cyber-attack incidents on CPS have been recorded and, in turn, have been raising concerns in their users' minds. Unlike in traditional IT systems, the complex architecture of CPS consisting of embedded systems integrated with the Internet of Things (IoT) requires rather extensive planning, implementation, and monitoring of security requirements. One crucial step to planning, implementing, and monitoring of these requirements in CPS is the integration of the risk management process in the CPS development life cycle. Existing studies do not clearly portray the extent of damage that the unattended security issues in CPS can cause or have caused, in the incidents recorded. An overview of the possible risk management techniques that could be integrated into the development and maintenance of CPS contributing to improving its security level in its actual environment is missing. In this paper, we are set out to highlight the security requirements and issues specific to CPS that are discussed in scientific literature and to identify the state-of-the-art risk management processes adopted to identify, monitor, and control those security issues in CPS. For that, we conducted a systematic mapping study on the data collected from 312 papers published between 2000 and 2020, focused on the security requirements, challenges, and the risk management processes of CPS. Our work aims to form an overview of the security requirements and risks in CPS today and of those published contributions that have been made until now, towards improving the reliability of CPS. The results of this mapping study reveal (i) integrity authentication and confidentiality as the most targeted security attributes in CPS, (ii) model-based techniques as the most used risk identification and assessment and management techniques in CPS, (iii) cyber-security as the most common security risk in CPS, (iv) the notion of "mitigation measures" based on the type of system and the underline internationally recognized standard being the most used risk mitigation technique in CPS, (v) smart grids being the most targeted systems by cyber-attacks and thus being the most explored domain in CPS literature, and (vi) one of the major limitations, according to the selected literature, concerns the use of the fault trees for fault representation, where there is a possibility of runtime system faults not being accounted for. Finally, the mapping study draws implications for practitioners and researchers based on the findings.
C1 [Zahid, Maryam] Malardalen Univ, IDT, Prod Realisat Div, Vasteras, Sweden.
   [Inayat, Irum] Natl Univ Comp & Emerging Sci, Dept Software Engn, Software Engn & Automat Lab, Islamabad, Pakistan.
   [Daneva, Maya] Univ Twente, Sch Comp Sci, Serv & Cyber Secur Grp, Enschede, Netherlands.
C3 Malardalen University; University of Twente
RP Inayat, I (corresponding author), Natl Univ Comp & Emerging Sci, Sch Comp, Dept Software Engn, Islamabad, Pakistan.
EM irum.inayat@nu.edu.pk
RI Inayat, Irum/ABI-4226-2020
OI Daneva, Maya/0000-0001-7359-8013; Inayat, Irum/0000-0001-5576-6212
CR Abie Habtamu, 2012, P 7 INT C BOD AR NET, P269
   Aissani N., 2015, CENTRALIZED MODELLIN
   Ali S, 2018, STUD COMPUT INTELL, V768, P115, DOI 10.1007/978-3-319-75880-0_6
   [Anonymous], 2016, IEEE NEWSL
   [Anonymous], 2015, 10 INT C SYST SAF CY
   [Anonymous], 2009, WORKSH FUT DIR CYB P
   [Anonymous], 2013, 2013 IEEE EL POW EN
   Anwar A., 2014, The State of the Art in Intrusion Prevention and Detection, P449, DOI DOI 10.1201/B16390-9
   Ashok A., 2015, 2015 IEEE POW EN SOC
   Ashok A, 2017, P IEEE, V105, P1389, DOI 10.1109/JPROC.2017.2686394
   Ashok A, 2014, J ADV RES, V5, P481, DOI 10.1016/j.jare.2013.12.005
   Aven T, 2007, RELIAB ENG SYST SAFE, V92, P745, DOI 10.1016/j.ress.2006.03.008
   Axelrod CW, 2014, 2014 IEEE LONG ISLAND SYSTEMS, APPLICATIONS AND TECHNOLOGY CONFERENCE (LISAT)
   Axelrod CW., 2013, 2013 IEEE LONG ISL S, P1
   Badri A, 2018, SAFETY SCI, V109, P403, DOI 10.1016/j.ssci.2018.06.012
   Banerjee A, 2012, P IEEE, V100, P283, DOI 10.1109/JPROC.2011.2165689
   Beckers K, 2017, RELIAB ENG SYST SAFE, V158, P185, DOI 10.1016/j.ress.2016.09.004
   Best J., 2014, MIRROR APR
   Biro M, 2018, IEEE SOFTWARE, V35, P24, DOI 10.1109/MS.2017.4541050
   Boddy A, 2016, I C DEV ESYST ENG, P111, DOI 10.1109/DeSE.2016.20
   Bouij-Pasquier I., 2016, P IEEE ACS INT C COM, V2016
   Byres E.J., 2004, USE ATTACK TREES ASS
   Carelli A, 2019, IEEE T DEVICE MAT RE, V19, P73, DOI 10.1109/TDMR.2019.2898882
   Chan ACF, 2013, IEEE COMMUN MAG, V51, P57
   Cheminod M, 2013, IEEE T IND INFORM, V9, P277, DOI 10.1109/TII.2012.2198666
   Chen D., 2016, 7 IEEE INT C INTELLI, P13
   Chen JT, 2017, IEEE T INF FOREN SEC, V12, P2736, DOI 10.1109/TIFS.2017.2718489
   Cherdantseva Y, 2016, COMPUT SECUR, V56, P1, DOI 10.1016/j.cose.2015.09.009
   Chiprianov V, 2015, 2015 10TH SYSTEM OF SYSTEMS ENGINEERING CONFERENCE (SOSE), P77, DOI 10.1109/SYSOSE.2015.7151950
   Chittester C., 2004, J HOMEL SECUR EMERG, V1
   Cong SUN., 2016, J COMMUNICATIONS INF, V1, P1
   CrowdStrike, 2018, SEC SUPPL CHAIN
   Daine K, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0077555
   Damenu TK, 2015, 2015 9TH INTERNATIONAL CONFERENCE ON NEXT GENERATION MOBILE APPLICATIONS, SERVICES AND TECHNOLOGIES (NGMAST 2015), P370, DOI 10.1109/NGMAST.2015.25
   DeSmit Z, 2016, PROCEDIA MANUF, V5, P1060, DOI 10.1016/j.promfg.2016.08.075
   Di Marco D, 2016, PROCEEDINGS OF 2016 11TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, (ARES 2016), P526, DOI 10.1109/ARES.2016.104
   Dobaj J, 2019, LECT NOTES COMPUT SC, V11699, P102, DOI 10.1007/978-3-030-26250-1_8
   Dondossola G, 2011, IEEE POW ENER SOC GE, DOI 10.1109/PES.2011.6039589
   Dondossola G, 2015, POWER SYST, P169, DOI 10.1007/978-3-662-45928-7_7
   Ericsson GN, 2009, IEEE T POWER DELIVER, V24, P1174, DOI 10.1109/TPWRD.2008.2008470
   Ericsson GN, 2010, IEEE T POWER DELIVER, V25, P1501, DOI 10.1109/TPWRD.2010.2046654
   Fan XH, 2015, 2015 INTERNATIONAL CONFERENCE ON CYBER SECURITY OF SMART CITIES, INDUSTRIAL CONTROL AND COMMUNICATIONS (SSIC)
   Fan Y., 2019, SUSTAINABILITY-BASEL, V11, P1
   Faughnan MS, 2013, 2013 IEEE SYSTEMS AND INFORMATION ENGINEERING DESIGN SYMPOSIUM (SIEDS), P145, DOI 10.1109/SIEDS.2013.6549509
   Fletcher K. K., 2011, 2011 5th International Conference on Secure Software Integration & Reliability Improvement Companion, P106, DOI 10.1109/SSIRI-C.2011.25
   Fovino IN, 2006, IEEE SYS MAN CYBERN, P590, DOI 10.1109/ICSMC.2006.384449
   Friedberg I., 2016, J INF SECUR APPL, P1
   Garcia HE, 2020, ANN NUCL ENERGY, V140, DOI 10.1016/j.anucene.2019.107261
   Gawand HL, 2017, NUCL ENG TECHNOL, V49, P484, DOI 10.1016/j.net.2016.10.009
   GRECHANIK M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P95
   Green B., 2016, ACHIEVING ICS RESILI
   Gu A, 2020, IEEE ACCESS, V8, P15241, DOI 10.1109/ACCESS.2020.2967453
   Guangyu Wu, 2016, Control Theory and Technology, V14, P2, DOI 10.1007/s11768-016-5123-9
   Haimes YY, 2002, RISK ANAL, V22, P383, DOI 10.1111/0272-4332.00020
   Hall JG, 2017, INFORM SOFTWARE TECH, V87, P46, DOI 10.1016/j.infsof.2017.01.010
   Hartmann K, 2013, INT CONF CYBER CONFL
   Hashemi-Dezaki H, 2016, ENERG CONVERS MANAGE, V108, P377, DOI 10.1016/j.enconman.2015.10.082
   Havens TC, 2016, STUD COMPUT INTELL, V621, P13, DOI 10.1007/978-3-319-26450-9_2
   He X., 2016, 16 IEEE INT C ENV EL, P0
   Hird J., 2013, INT COMM NAV SURV C, P1
   Hird J, 2016, PROCEEDINGS OF 2016 11TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, (ARES 2016), P486, DOI 10.1109/ARES.2016.105
   Hong JB, 2019, COMPUT NETW, V150, P46, DOI 10.1016/j.comnet.2018.12.009
   Humayed A, 2017, IEEE INTERNET THINGS, V4, P1802, DOI 10.1109/JIOT.2017.2703172
   Humayun M, 2020, ARAB J SCI ENG, V45, P3171, DOI 10.1007/s13369-019-04319-2
   Hunter D., 2017, ACM P AUSTR COMP SCI, P19
   I. S. T. Institute, 2018, WHAT IS SOFTWARE RIS
   Ikimi O., ALL CIRCUITS
   Jaiswal S, 2017, ADV INTELL SYST, V508, P419, DOI 10.1007/978-981-10-2750-5_44
   Jauhar S, 2015, IEEE PAC RIM INT SYM, P319, DOI 10.1109/PRDC.2015.37
   Ji X, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P693, DOI 10.1109/SNPD.2016.7515980
   Jillepalli AA, 2018, PROCEEDINGS OF THE 2018 13TH INTERNATIONAL CONFERENCE ON MALICIOUS AND UNWANTED SOFTWARE (MALWARE 2018), P95, DOI 10.1109/MALWARE.2018.8659367
   Jillepalli AA, 2017, INT WIREL COMMUN, P1864, DOI 10.1109/IWCMC.2017.7986568
   Kaster P., 2015 IEEE RUR EL POW, P49
   Knowles W, 2015, INT J CRIT INFR PROT, V9, P52, DOI 10.1016/j.ijcip.2015.02.002
   Kong HK, 2016, 2016 10TH INTERNATIONAL CONFERENCE ON INNOVATIVE MOBILE AND INTERNET SERVICES IN UBIQUITOUS COMPUTING (IMIS), P102, DOI 10.1109/IMIS.2016.42
   Langer L, 2015, 2015 International Symposium on Smart Electric Distribution Systems and Technologies (EDST), P475, DOI 10.1109/SEDST.2015.7315255
   Law YW, 2012, ANN ALLERTON CONF, P212, DOI 10.1109/Allerton.2012.6483220
   Law YeeWei., 2012, Decision and Game Theory for Security, P281
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Lee S., 2005, P 13 IEEE INT REQ EN, P2
   Li SC, 2015, INFORM SYST FRONT, V17, P243, DOI 10.1007/s10796-014-9492-7
   Li ZY, 2016, IET CYBER PHYS SYST, V1, P60, DOI 10.1049/iet-cps.2016.0017
   Lin K, 2005, NORTH AMER POW SYMP, P43, DOI 10.1109/NAPS.2005.1560500
   Liu NA, 2011, IEEE T POWER DELIVER, V26, P869, DOI 10.1109/TPWRD.2010.2090950
   Liu XD, 2017, IEEE T SMART GRID, V8, P1330, DOI 10.1109/TSG.2016.2622289
   Liu XD, 2017, IEEE T SMART GRID, V8, P572, DOI 10.1109/TSG.2016.2545683
   Lopez A., 2017, J HARDWARE SYSTEMS S, V1, P188
   Manshaei MH, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480742
   Markantonakis K., 2013, SECURE SMART EMBEDDE, P451
   Mashkoor A, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2239
   Mashkoor A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1955
   Mcdonald J, 2013, 2013 IEEE GRENOBLE POWERTECH (POWERTECH)
   Min BH, 2014, IEEE INT C ENG COMP, P59, DOI 10.1109/ICECCS.2014.16
   Mitchell R, 2014, COMPUT COMMUN, V42, P1, DOI 10.1016/j.comcom.2014.01.012
   Motii A, 2015, PROCEEDINGS OF THE 20TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2015), DOI 10.1145/2855321.2855332
   Nagaraju V., 2017, International Symposium on Technologies for Homeland Security, P1, DOI [10.1109 /THS.2017.7943455, DOI 10.1109/THS.2017.7943455]
   Nazir S, 2017, COMPUT SECUR, V70, P436, DOI 10.1016/j.cose.2017.06.010
   Nicholson A, 2012, COMPUT SECUR, V31, P418, DOI 10.1016/j.cose.2012.02.009
   Oh SR, 2017, 2017 INTERNATIONAL CONFERENCE ON PLATFORM TECHNOLOGY AND SERVICE (PLATCON), P305
   Omerovic A, 2019, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON COMPLEXITY, FUTURE INFORMATION SYSTEMS AND RISK (COMPLEXIS), P39, DOI 10.5220/0007697800390051
   Orojloo H, 2017, FUTURE GENER COMP SY, V67, P57, DOI 10.1016/j.future.2016.07.016
   Oveisi S., 2019, J COMPUT ROBOT, V12, P77
   Patapanchala PS., 2017, 2016 IEEE C TECHN SU, P89
   Patel SC, 2008, INT J INFORM MANAGE, V28, P483, DOI 10.1016/j.ijinfomgt.2008.01.009
   Peng Y, 2013, 2013 NINTH INTERNATIONAL CONFERENCE ON INTELLIGENT INFORMATION HIDING AND MULTIMEDIA SIGNAL PROCESSING (IIH-MSP 2013), P442, DOI 10.1109/IIH-MSP.2013.116
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Polemi N, 2015, INT CONF INTERNET, P349, DOI 10.1109/ICITST.2015.7412119
   Rahman Mohammad Ashiqur, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P263, DOI 10.1109/DSN.2016.32
   Ralston PAS, 2007, ISA T, V46, P583, DOI 10.1016/j.isatra.2007.04.003
   Ramasamy RP., 2013, INT J INF COMPUT TEC, V3, P583
   Rasmussen TB, 2017, 2017 IEEE MANCHESTER POWERTECH
   Ray PD, 2010, INT CARN CONF SECU, P276
   Rierson Leanna, 2013, Developing Safety-Critical Software: A Practical Guide for Aviation Software and DO-178C Compliance
   Saripalli P., 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P280, DOI 10.1109/CLOUD.2010.22
   Settanni G, 2017, IEEE INT C CYBERNET, P415
   Shafi Q., 2012, Proceedings of the 12th International Conference on Computational Science and Its Applications (ICCSA 2012), P146, DOI 10.1109/ICCSA.2012.36
   Sicari S, 2015, COMPUT NETW, V76, P146, DOI 10.1016/j.comnet.2014.11.008
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Speer J., 2016, MANAGEMENT MED DEVIC
   Stol KJ, 2015, SCI COMPUT PROGRAM, V101, P79, DOI 10.1016/j.scico.2014.11.010
   Sun CC, 2018, INT J ELEC POWER, V99, P45, DOI 10.1016/j.ijepes.2017.12.020
   Tondel Inger Anne, 2018, Applied Computing and Informatics, V14, P17, DOI 10.1016/j.aci.2017.01.001
   Trippel T., 2017, IEEE SEC PRIV S
   Tsigkanos C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P729, DOI 10.1109/ICSE.2015.234
   van Solingen R., 2002, Encyclopedia of Software Engineering, DOI [DOI 10.1002/0471028959.SOF142, 10.1002/0471028959.sof142]
   Wadhwa N, 2013, LECT NOTES ENG COMP, P1254
   Waedt K., 2016, 2016 IEEE INT SMART, DOI [10.1109/ISC2.2016.7580812, DOI 10.1109/ISC2.2016.7580812]
   Waidner M, 2016, DES AUT TEST EUROPE, P1303
   Walker-Roberts S, 2020, J SUPERCOMPUT, V76, P2643, DOI 10.1007/s11227-019-03028-9
   Wang P, 2015, AEBMR ADV ECON, V8, P1, DOI 10.1109/PESGM.2015.7285672
   Wang WY, 2013, COMPUT NETW, V57, P1344, DOI 10.1016/j.comnet.2012.12.017
   Wang Y, 2014, LECT NOTES COMPUT SC, V8713, P401, DOI 10.1007/978-3-319-11212-1_23
   Weber RH, 2010, INTERNET OF THINGS: LEGAL PERSPECTIVES, P1, DOI 10.1007/978-3-642-11710-7
   Wei LF, 2015, 2015 10TH SYSTEM OF SYSTEMS ENGINEERING CONFERENCE (SOSE), P12, DOI 10.1109/SYSOSE.2015.7151941
   Weinmann O., 2018, INTERNET THINGS BOSC
   Wieringa R.J., 2014, Design Science Methodology: For Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
   Wu WB, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL ENGINEERING AND ENGINEERING MANAGEMENT (IEEM), P1618, DOI 10.1109/IEEM.2015.7385921
   Xiang Y., 2017, IEEE T SMART GRID, V3053, P1
   Xiang Y., 2016, INT C PROB METH APPL, P3
   Xiang YM, 2017, ELECTR POW SYST RES, V149, P156, DOI 10.1016/j.epsr.2017.04.023
   Xu Z., 2011, PROC IEEE CONF DECIS, V2016-Febru, p5156
   Yan Z, 2014, J NETW COMPUT APPL, V42, P120, DOI 10.1016/j.jnca.2014.01.014
   You B., 2017, 30 ANN C INT CHIN TR, P18
   Zahid M., 2018, EUR C SOFTW ENG APPL, P6
   Zahid M, 2019, COMM COM INF SC, V1062, P129, DOI 10.1007/978-3-030-27684-3_17
   Zahid M, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2219
   Zhang Q, 2016, IEEE T SYST MAN CY-S, V46, P1429, DOI 10.1109/TSMC.2015.2503399
   Zhao Tingjie, 2015, P 20 NAT AC C REACT, P5
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
   Zonouz S, 2013, COMPUT SECUR, V39, P190, DOI 10.1016/j.cose.2013.07.003
NR 151
TC 10
Z9 11
U1 2
U2 38
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2021
VL 33
IS 9
SI SI
AR e2346
DI 10.1002/smr.2346
EA APR 2021
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UP0XV
UT WOS:000639112700001
DA 2024-07-18
ER

PT J
AU Muñoz, M
   Rodríguez, MN
AF Munoz, Mirna
   Rodriguez, Mario Negrete
TI A guidance to implement or reinforce a DevOps approach in organizations:
   A case study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE case study; DevOps; guidance; ISO; IEC 29110; process; state of the art
ID SOFTWARE PROCESS
AB In recent years, stakeholders expect the delivery of new features almost every day to give fast feedback about changes or issues in software projects. To achieve this, they have opted to try new practices such as those from DevOps to improve their processes. Organizations such as IBM, Facebook, Amazon, and so on are implementing a DevOps culture. However, for small organizations, which are a large majority in the software development market, it is complicated to adopt DevOps because there is no guide to follow. Organizations have experienced issues trying to implement a DevOps approach, mainly for reasons such as a lack of process, guidance, or uncoordinated activities among organizations. Moreover, some organizations have a wrong understanding of DevOps: as just a set of automation tools to achieve a continuous release. This paper presents a guide to implement or reinforce a DevOps approach. Besides, the results of a case study of implementing the guide in a small organization are included. These results have shown that the guide helped the team: to identify its gaps toward the implementation of a DevOps approach; to have a better understanding of DevOps; and to facilitate the DevOps implementation providing a set of tasks, roles, and metrics.
C1 [Munoz, Mirna; Rodriguez, Mario Negrete] CIMAT Ctr Invest Matemat, Zacatecas Branch, Zacatecas, Zacatecas, Mexico.
   [Munoz, Mirna] Parque Quantum, Zacatecas 98160, Zacatecas, Mexico.
RP Muñoz, M (corresponding author), CIMAT Ctr Invest Matemat, Zacatecas, Zacatecas, Mexico.
EM mirna.munoz@cimat.mx
RI Muñoz, Mirna/I-9193-2017; Negrete Rodríguez, Mario Alberto/HMV-7198-2023
OI Muñoz, Mirna/0000-0001-8537-2695; Negrete Rodríguez, Mario
   Alberto/0000-0003-4507-2887
CR Bass Len, 2015, DevOps: A Software Architect's Perspective
   Bruggmann J., 2015, SOFTW QUAL PROF J AS, V17, P16
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   Colavita F, 2016, ADV INTELL SYST, V422, P203, DOI 10.1007/978-3-319-27896-4_17
   DASA, 2018, DEVOPS AGILE SKILLS
   DORA, 2018, ACCELERATE STATE DEV
   Forsgren N., 2018, IT Revolution
   Gupta V, 2017, INFORM SOFTWARE TECH, V92, P75, DOI 10.1016/j.infsof.2017.07.010
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   IBM C, 2014, DEVOPS IBM APPROACH, P112
   John, 2016, IT REVOLUTION
   Kaiser A, 2018, REINVENTING ITIL AGE, DOI [10.1007/978-1-4842-3976-6_1, DOI 10.1007/978-1-4842-3976-6_1]
   Kim G., 2014, The phoenix project: A novel about it, devops, and helping your business win
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Laporte CY, 2016, COMM COM INF SC, V633, P30, DOI 10.1007/978-3-319-44817-6_3
   Laporte CY, 2016, COMM COM INF SC, V633, P15, DOI 10.1007/978-3-319-44817-6_2
   Miramontes J, 2016, ADV INTELL SYST, V405, P71, DOI 10.1007/978-3-319-26285-7_7
   Munoz Mirna, 2019, New Knowledge in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 930), P666, DOI 10.1007/978-3-030-16181-1_63
   Muñoz M, 2020, ADV INTELL SYST, V1071, P65, DOI 10.1007/978-3-030-33547-2_6
   Nelson-Smith S., 2011, Test-Driven Infrastructure with Chef
   O'Connor, 2017, ENG MANAGEMENT DATA, DOI [10.1007/978-3-319-65082-1_10, DOI 10.1007/978-3-319-65082-1_10]
   Puppet, 2018, 2018 STATE DEVOPS RE
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Simo, 2016, TRENDS APPL SOFTW EN, P590
   Virmani M, 2015, FIFTH INTERNATIONAL CONFERENCE ON THE INNOVATIVE COMPUTING TECHNOLOGY (INTECH 2015), P78, DOI 10.1109/INTECH.2015.7173368
   Wettinger J, 2016, FUTURE GENER COMP SY, V56, P317, DOI 10.1016/j.future.2015.07.017
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 28
TC 10
Z9 10
U1 9
U2 44
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2024
VL 36
IS 3
AR e2342
DI 10.1002/smr.2342
EA APR 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KR8C4
UT WOS:000635523200001
DA 2024-07-18
ER

PT J
AU Tan, J
   Feitosa, D
   Avgeriou, P
   Lungu, M
AF Tan, Jie
   Feitosa, Daniel
   Avgeriou, Paris
   Lungu, Mircea
TI Evolution of technical debt remediation in Python: A case study on the
   Apache Software Ecosystem
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Apache Software Foundation; software ecosystems; software evolution;
   technical debt repayment
ID CODE SMELLS; IMPACT
AB In recent years, the evolution of software ecosystems and the detection of technical debt received significant attention by researchers from both industry and academia. While a few studies that analyze various aspects of technical debt evolution already exist, to the best of our knowledge, there is no large-scale study that focuses on the remediation of technical debt over time in Python projects-that is, one of the most popular programming languages at the moment. In this paper, we analyze the evolution of technical debt in 44 Python open-source software projects belonging to the Apache Software Foundation. We focus on the type and amount of technical debt that is paid back. The study required the mining of over 60K commits, detailed code analysis on 3.7K system versions, and the analysis of almost 43K fixed issues. The findings show that most of the repayment effort goes into testing, documentation, complexity, and duplication removal. Moreover, more than half of the Python technical debt is short term being repaid in less than 2 months. In particular, the observations that a minority of rules account for the majority of issues fixed and spent effort suggest that addressing those kinds of debt in the future is important for research and practice.
C1 [Tan, Jie; Feitosa, Daniel; Avgeriou, Paris] Univ Groningen, Fac Sci & Engn, Groningen, Netherlands.
   [Feitosa, Daniel] Univ Groningen, Data Res Ctr, Groningen, Netherlands.
   [Lungu, Mircea] IT Univ Copenhagen, Dept Comp Sci, Copenhagen, Denmark.
C3 University of Groningen; University of Groningen; IT University
   Copenhagen
RP Tan, J (corresponding author), Univ Groningen, Fac Sci & Engn, Groningen, Netherlands.
EM jessie_tanjie@hotmail.com
RI Feitosa, Daniel/M-8700-2014
OI Feitosa, Daniel/0000-0001-9371-232X; Tan, Jie/0000-0003-1868-0123;
   Avgeriou, Paris/0000-0002-7101-0754
FU ITEA3; RVO [17038 VISDOM]
FX ITEA3; RVO, Grant/Award Number: 17038 VISDOM
CR Alexandru CV, 2018, ONWARD!'18: PROCEEDINGS OF THE 2018 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE, P1, DOI 10.1145/3276954.3276960
   Alexandru CV, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P148, DOI 10.1109/SANER.2017.7884617
   Alves OL, 2014, NANOMED NANOTOXICOL, P1, DOI 10.1007/978-1-4614-8993-1_1
   [Anonymous], 2012, 2012 3rd International Workshop on Managing Technical Debt, MTD 2012-Proceedings, DOI [10.1109/MTD.2012.6225997, DOI 10.1109/MTD.2012.6225997]
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Besker T, 2017, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSME.2017.42
   Biaggi A, 2018, EUROMICRO CONF PROC, P417, DOI 10.1109/SEAA.2018.00074
   Campbell G., 2013, SONARQUBE IN ACTION
   Cannon B, 2017, PORTING PYTHON 2 COD
   Chen ZF, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9153-3
   Cochran W.G., 1977, Sampling techniques, V3rd ed.
   Cohen J., 1988, STAT POWER ANAL BEHA
   Dale MR, 2014, P ACM IEEE 8 INT S E, p37:1
   Digkas G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P153, DOI 10.1109/SANER.2018.8330205
   Digkas G, 2017, LECT NOTES COMPUT SC, V10475, P51, DOI 10.1007/978-3-319-65831-5_4
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Field A., 2013, DISCOVERING STAT USI
   Fontana F.A., 2016, Proceedings of the 31st Annual ACM Symposium on Applied Computing, Pisa, Italy, P1347
   GASTWIRT.JL, 1972, REV ECON STAT, V54, P306, DOI 10.2307/1937992
   Ghezzi G., 2012, Proceedings 2012 2nd International Workshop on Developing Tools as Plug-ins (TOPI 2012), P13, DOI 10.1109/TOPI.2012.6229803
   Griffith I, 2017, INT SYMP EMP SOFTWAR, P287, DOI 10.1109/ESEM.2017.42
   Hongyu Zhai, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P116, DOI 10.1109/MSR.2019.00027
   HORGAN TR, 1994, COMPUTER, V27, P60, DOI 10.1109/2.312032
   Krippendorff K, 2011, COMPUTING KRIPPENDOR
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Letouzey Jean-Louis, 2010, Proceedings 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), P43, DOI 10.1109/VALID.2010.31
   Letouzey JL, 2012, IEEE SOFTWARE, V29, P44, DOI 10.1109/MS.2012.129
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Marcilio D, 2019, INT C PROGRAM COMPRE, P209, DOI 10.1109/ICPC.2019.00040
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Saarimäki N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P98, DOI 10.1109/TechDebt.2019.00028
   Shamshiri S, 2018, IEEE INT CONF SOFTW, P250, DOI 10.1109/ICST.2018.00033
   Sharma T, 2017, INT SYMP EMP SOFTWAR, P424, DOI 10.1109/ESEM.2017.57
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Tratt L, 2009, ADV COMPUT, V77, P149, DOI 10.1016/S0065-2458(09)01205-4
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   van Solingen R., 2002, Encyclopedia of Software Engineering, DOI [DOI 10.1002/0471028959.SOF142, 10.1002/0471028959.sof142]
   Wang C, 2015, INT J SURG, V15, P134, DOI 10.1016/j.ijsu.2014.12.023
   Wanwangying Ma, 2017, 2017 IEEE/ACM 39th International Conference on Software Engineering (ICSE). Proceedings, P381, DOI 10.1109/ICSE.2017.42
   ZAR JH, 1972, J AM STAT ASSOC, V67, P578, DOI 10.2307/2284441
NR 53
TC 11
Z9 12
U1 1
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2021
VL 33
IS 4
AR e2319
DI 10.1002/smr.2319
EA NOV 2020
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RH8PR
UT WOS:000590149800001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Khan, AW
   Hussain, I
   Zamir, M
AF Khan, Abdul Wahid
   Hussain, Imtiaz
   Zamir, Muhammad
TI Analytic hierarchy process-based prioritization framework for vendor's
   reliability challenges in global software development
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE analytic hierarchy process (AHP); challenging factors; global software
   development (GSD); SLR; vendor reliability
ID DECISION-MAKING; FUZZY-AHP; TRUST; DESIGN
AB The concept of global software development was adopted by software organizations for the purpose of delivering quality software products at a reduced cost. Software reliability became one of the eminent challenges in the global software development. The main objective of this research paper is to develop a classification of the challenging factors in the global software development process faced by vendor organizations. The classification of the challenges depends on the data gathered through systematic literature review and implementation of the analytic hierarchy process (AHP). A total of 18 challenges were explored through systematic literature review and mapped into five categories, that is, capability, reliance, delivery, management, and distinction. The explored issues played a major role for assisting the researcher and designer for mitigating the challenges during "AHP based prioritization framework for Vendor's Reliability challenges in Global Software Development". Taking the AHP approach, we tried to fill this research gap by exploring and prioritizing the challenges that could negatively impact the vendor reliability of a specific organization. The classification of the explored challenges provided a framework that was used to deal with the issues associated with software reliability in the global software environment, which provided the vital role for the success of software organizations.
C1 [Khan, Abdul Wahid] Univ Sci & Technol, Dept Comp Sci, Bannu, KP, Pakistan.
   [Hussain, Imtiaz] Qurtuba Univ Sci & Informat Technol, Dept Comp Sci, Dera Ismail Khan, KP, Pakistan.
   [Zamir, Muhammad] Univ Sci & Technol, Dept Math, Bannu, KP, Pakistan.
C3 University of Science & Technology Bannu; University of Science &
   Technology Bannu
RP Khan, AW (corresponding author), Univ Sci & Technol, Dept Comp Sci, Bannu, KP, Pakistan.
EM wahidkn@gmail.com
RI Hussain, Imtiaz/GZA-6905-2022
OI Khan, Abdul Wahid/0000-0003-0415-099X
CR Alam A. U., 2012, International Journal of Digital Content Technology and its Applications, V6, P27
   [Anonymous], 2015, 10 INT C SOFTW ENG A
   Babar MA, 2007, J SYST SOFTWARE, V80, P1438, DOI [10.1016/j.jss.2006.10.038, 10.1016/j.jss.2006.12.038]
   Bapna R, 2010, INFORM SYST RES, V21, P785, DOI 10.1287/isre.1100.0328
   Bellman R. E., 1971, Decision-making in a fuzzy environment, DOI 10.1287/mnsc.17.4.B141
   Besikçi EB, 2016, OCEAN ENG, V121, P392, DOI 10.1016/j.oceaneng.2016.05.031
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Bradstreet D, 2000, DUN BRADSTREETS BARO, P20
   Brigden J, 2011, OUTSOURC YB, P103
   Casey V., 2011, ACM Inroads, V1, P51
   Chan FTS, 2007, OMEGA-INT J MANAGE S, V35, P417, DOI 10.1016/j.omega.2005.08.004
   Chen CT, 2006, INT J PROD ECON, V102, P289, DOI 10.1016/j.ijpe.2005.03.009
   Chittenden J, 2006, IT OUTSOURCING 2
   Cho J., 2007, ISSUES INF SYST, V8, P287
   Cohen Linda., 2006, Multisourcing: Moving Beyond Outsourcing to Achieve Growth and Agility
   Gonzalez R, 2005, IND MANAGE DATA SYST, V105, P45, DOI 10.1108/02635570510575180
   Gotel O, 2008, 2008 IEEE INT C GLOB
   Heeks R, 2001, IEEE SOFTWARE, V18, P54, DOI 10.1109/52.914744
   Helén M, 2011, 2011 PROCEEDINGS OF PICMET 11: TECHNOLOGY MANAGEMENT IN THE ENERGY-SMART WORLD (PICMET)
   HERBSLEB JD, 2000, P 2000 ACM C COMP SU
   Kanawattanachai P, 2002, J STRATEGIC INF SYST, V11, P187, DOI 10.1016/S0963-8687(02)00019-7
   Khan AA, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2263
   Khan AA, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2242
   Khan AA, 2019, APPL SOFT COMPUT, V83, DOI 10.1016/j.asoc.2019.105648
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Khandelwal V. K., 1999, Proceedings of the 32nd Annual Hawaii International Conference on Systems Sciences. 1999. HICSS-32. Abstracts and CD-ROM of Full Papers, DOI 10.1109/HICSS.1999.772760
   Kumar RR, 2017, J SUPERCOMPUT, V73, P4652, DOI 10.1007/s11227-017-2039-1
   Kumar RR, 2016, 2016 11 INT C IND IN
   Kumar S., 2013, P PERVASIVE TECHNOLO
   Land R, 2007, INFORM SOFTWARE TECH, V49, P419, DOI 10.1016/j.infsof.2006.07.002
   Lee AHI, 2008, EXPERT SYST APPL, V34, P96, DOI 10.1016/j.eswa.2006.08.022
   Lee C, 2015, J PROD INNOVAT MANAG, V32, P747, DOI 10.1111/jpim.12176
   Li F, 2012, P 2012 IEEE INT C SE
   Li R, 2019, SUSTAINABILITY-BASEL, V11, DOI 10.3390/su11051388
   Mao JY, 2008, INFORM MANAGE-AMSTER, V45, P482, DOI 10.1016/j.im.2008.07.003
   Martens B, 2009, WHY RISK MANAGEMENT
   Musio I, 2009, INT C SOFTW ENG APPR
   Niazi M, 2005, J SYST SOFTWARE, V78, P204, DOI 10.1016/j.jss.2004.09.001
   Niazi M, 2013, 2013 SCI INF C
   Nicholson B., 2001, INFORM ORGAN-UK, V11, P25, DOI DOI 10.1016/S0959-8022(00)00008-4
   Prikladnicki R., 2007, INT C GLOB SOFTW ENG
   Quyoum A., 2010, INT J COMPUTER APPL, V10, P41, DOI [10.5120/1474-1990, DOI 10.5120/1474-1990]
   Saaty T.L., 2013, GROUP DECISION MAKIN
   SAATY TL, 1977, J MATH PSYCHOL, V15, P234, DOI 10.1016/0022-2496(77)90033-5
   Shah H., 2012, P 4 INT C INT COLL
   Stol KJ, 2011, INFORM SOFTWARE TECH, V53, P1319, DOI 10.1016/j.infsof.2011.06.007
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Winkler JK, 2008, INFORM SYST FRONT, V10, P243, DOI 10.1007/s10796-008-9068-5
   Yang TH, 2007, ROBOT CIM-INT MANUF, V23, P126, DOI 10.1016/j.rcim.2005.12.002
   Zadeh L.A., 1996, Fuzzy Sets, Fuzzy Logic, and Fuzzy Systems: Selected Papers, V6
   Zakour A.B., 2004, P 7 ANN C SO ASS INF
   Zwikael O, 2007, J OPER MANAG, V25, P755, DOI 10.1016/j.jom.2006.12.001
NR 52
TC 6
Z9 6
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2021
VL 33
IS 3
AR e2310
DI 10.1002/smr.2310
EA AUG 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QT0GD
UT WOS:000560374200001
DA 2024-07-18
ER

PT J
AU Nguyen, V
   Huynh, T
   Boehm, B
   Huang, LG
   Truong, T
AF Vu Nguyen
   Thuy Huynh
   Boehm, Barry
   Huang, LiGuo
   Thong Truong
TI Investigating the use of duration-based windows and estimation by
   analogy for COCOMO
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE COCOMO; duration-based windows; estimation by analogy; k-nearest
   neighbors; moving windows; software estimation
ID SOFTWARE EFFORT PREDICTION; MOVING WINDOWS; COST ESTIMATION; SUCCESS
   FACTORS; STATISTICS; RELEVANT
AB In model-based software estimation, using the right training data is a key contributor for making accurate predictions, which is crucial for the success of software projects. This study investigates the use of duration-based windows and estimation by analogy to calibrate COCOMO and assess their estimation performance. We compare these approaches as well as the use of all available historical data using the COCOMO data set of 341 projects and NASA data set of 93 projects. The results show that timing information exists in the data sets affecting estimation accuracy. Given sufficient data for calibration, using recently completed projects within short durations generates more accurate estimates than retaining all historical data or using k-nearest neighbors based on estimation by analogy. More training data spanning a long period of time may not lead to improved estimation accuracy. This study offers evidence to support the use of projects completed within recent years for training estimation models.
C1 [Vu Nguyen; Thong Truong] Vietnam Natl Univ, Univ Sci, Fac Informat Technol, Ho Chi Minh City, Vietnam.
   [Thuy Huynh] Vietnam Natl Univ, Univ Informat Technol, Fac Informat Technol, Ho Chi Minh City, Vietnam.
   [Boehm, Barry] Univ Southern Calif, Comp Sci Dept, Los Angeles, CA 90089 USA.
   [Huang, LiGuo] Southern Methodist Univ, Comp Sci & Engn Dept, Dallas, TX 75275 USA.
C3 Vietnam National University Hochiminh City; Vietnam National University
   Hochiminh City; University of Southern California; Southern Methodist
   University
RP Nguyen, V (corresponding author), Vietnam Natl Univ, Univ Sci, Fac Informat Technol, Ho Chi Minh City, Vietnam.
EM nvu@fit.hcmus.edu.vn
RI Nguyen, Vu/F-9490-2015
OI Huang, LiGuo/0000-0001-7790-0195; Nguyen, Vu/0000-0002-0594-4372
CR Amasaki S, 2015, J SOFTW-EVOL PROC, V27, P488, DOI 10.1002/smr.1672
   Amasaki S., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P188, DOI 10.1109/IWSM-MENSURA.2011.29
   Amasaki S, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P23, DOI 10.1109/IWSM-MENSURA.2012.13
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2005, P 11 IEEE INT SOFTW
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Azzeh M., 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P249, DOI 10.1109/CIT.2010.76
   Boehm B., 2006, 28th International Conference on Software Engineering Proceedings, P12, DOI 10.1145/1134285.1134288
   Boehm BW., 1981, Software Engineering Economics
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Caivano D, 2001, PROC IEEE INT CONF S, P209, DOI 10.1109/ICSM.2001.972734
   Chen ZH, 2005, IEEE SOFTWARE, V22, P38, DOI 10.1109/MS.2005.151
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Clark B, 1998, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1998.671610
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Gingnell L, 2014, INFORM SYST MANAGE, V31, P21, DOI 10.1080/10580530.2014.854033
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kawata K, 2015, 3RD INTERNATIONAL CONFERENCE ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY (ACIT 2015) 2ND INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND INTELLIGENCE (CSI 2015), P2, DOI 10.1109/ACIT-CSI.2015.104
   Keung J, 2013, AUTOMAT SOFTW ENG, V20, P543, DOI 10.1007/s10515-012-0108-5
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Lefley M, 2003, LECT NOTES COMPUT SC, V2724, P2477
   Lokan C., 2008, P 12 INT C EV ASS SO, P136
   Lokan C, 2017, EMPIR SOFTW ENG, V22, P716, DOI 10.1007/s10664-016-9446-4
   Lokan C, 2014, INFORM SOFTWARE TECH, V56, P1063, DOI 10.1016/j.infsof.2014.02.008
   Lokan C, 2012, ASIA PAC SOFWR ENG, P818, DOI 10.1109/APSEC.2012.74
   Lokan C, 2009, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2009.5316019
   Lopez-Martin C, 2012, EMPIR SOFTW ENG, V17, P738, DOI 10.1007/s10664-011-9192-6
   MacDonell SG, 2010, P 2010 ACM IEEE INT, P31
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P2658, DOI 10.1007/s10664-016-9472-2
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Minku LL, 2017, AUTOMAT SOFTW ENG, V24, P499, DOI 10.1007/s10515-016-0209-7
   MINKU LL, 2012, IEEE IJCNN
   Nguyen V., 2011, P 7 INT C PRED MOD S, P3
   Nguyen V, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P213
   Sehra SK, 2017, INFORM SOFTWARE TECH, V91, P1, DOI 10.1016/j.infsof.2017.06.002
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Song K, 2013, INT CONF QUALITY REL, P9, DOI 10.1109/QR2MSE.2013.6625525
   Tanveer B, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1862
   Trendowicz A, 2008, IFIP CENTR E EUR C S, P232
   Trendowicz A, 2009, ADV COMPUT, V77, P185, DOI 10.1016/S0065-2458(09)01206-6
   Tsunoda T, 2013, INT CONF PERVAS COMP, P103
   Nguyen V, 2019, J SYST SOFTWARE, V147, P124, DOI 10.1016/j.jss.2018.10.019
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Xia WD, 2004, COMMUN ACM, V47, P68, DOI 10.1145/986213.986215
   Yang Y, 2013, INFORM SOFTWARE TECH, V55, P1496, DOI 10.1016/j.infsof.2013.03.002
NR 49
TC 2
Z9 2
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2019
VL 31
IS 10
AR e2176
DI 10.1002/smr.2176
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JH7OM
UT WOS:000492957500005
DA 2024-07-18
ER

PT J
AU Amalfitano, D
   De Simone, V
   Maietta, RR
   Scala, S
   Fasolino, AR
AF Amalfitano, Domenico
   De Simone, Vincenzo
   Maietta, Raffaele Rodolfo
   Scala, Stefano
   Fasolino, Anna Rita
TI Using tool integration for improving traceability management testing
   processes: An automotive industrial experience
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE automotive; industrial case study; software process improvement; tool
   integration; traceability management
ID LIFE-CYCLE MANAGEMENT; CHALLENGES; DEPLOYMENT; DELIVERY; LINKS
AB Despite the high relevance of traceability in software processes, the activities of traceability creation and management are not always adequately supported in practice. The lack of integration between the tools adopted in the development processes is one of the main causes of such an ineffective management, where traceability relationships are still manually generated and maintained. In this paper we present an industrial experience we performed for improving the traceability management in a testing process performed in the Fiat Chrysler Automobiles company. In this context, we carried out a process for analyzing and identifying the main issues due to the ineffective traceability management and proposed a solution for addressing them. We designed and implemented a software architecture for integrating the existing application lifecycle management platform with the tools used in the process with the aim of automating the process execution and the traceability links management. The new architecture was validated by a case study that showed how the integration solution produced beneficial effects on quality attributes of the testing process.
C1 [Amalfitano, Domenico; De Simone, Vincenzo; Fasolino, Anna Rita] Univ Naples Federico II, Dept Elect Engn & Informat Technol, Via Claudio 21, Naples, Italy.
   [Maietta, Raffaele Rodolfo; Scala, Stefano] Pomigliano Tech Ctr, Elect Elect Software Factory, Fiat Chrysler Automobiles, Pomigliano Darco, Italy.
C3 University of Naples Federico II; Stellantis N.V.; Stellantis Italy
RP Fasolino, AR (corresponding author), Univ Naples Federico II, Dept Elect Engn & Informat Technol, Via Claudio 21, Naples, Italy.
EM fasolino@unina.it
RI Fasolino, Anna Rita/V-4582-2019; Amalfitano, Domenico/HJH-4638-2023
OI Fasolino, Anna Rita/0000-0001-7116-019X; Amalfitano,
   Domenico/0000-0002-4761-4443; De Simone, Vincenzo/0000-0003-0997-4306
FU Italian Ministry for University and Research [PON03PE_00159_3]
FX This work was carried out in the context of the research project
   APPS4SAFETY (Active Preventive Passive Solutions for Safety -
   PON03PE_00159_3), partially funded by the Italian Ministry for
   University and Research.
CR Amalfitano D, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P5, DOI 10.1145/3084100.3084101
   Amalfitano D, 2016, J SOFTW-EVOL PROC, V28, P483, DOI 10.1002/smr.1787
   Amalfitano D, 2015, COMM COM INF SC, V178, P136, DOI 10.1007/978-3-319-25936-9_9
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Armengaud E, 2012, P 2012 EMB REALT IM, P1
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bianchi A, 2000, PROG COMPREHEN, P149, DOI 10.1109/WPC.2000.852489
   Biehl M, 2014, SOFTW SYST MODEL, V13, P461, DOI 10.1007/s10270-012-0275-7
   Bornstein MH, 2013, DEV REV, V33, P357, DOI 10.1016/j.dr.2013.08.003
   Bovenzi D, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P73, DOI 10.1109/CSMR.2003.1192412
   Bringmann Eckard, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P485, DOI 10.1109/ICST.2008.45
   Canfora G, 2008, J SYST SOFTWARE, V81, P463, DOI 10.1016/j.jss.2007.06.006
   Chappell D., 2014, What Is Application Lifecycle Management
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   Di Lorenzo G, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P199
   Di Lucca GA, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P12, DOI 10.1109/WSE.2003.1234004
   Falessi D, 2017, EMPIR SOFTW ENG, V22, P996, DOI 10.1007/s10664-016-9460-6
   Franco F, 2014, MODEL BASED FUNCTION, P1, DOI DOI 10.1109/INDUSCON.2014.7059430
   Garlan David, 2010, DOCUMENTING SOFTWARE
   Gatrell M, 2016, IEEE SOFTWARE, V33, P103, DOI 10.1109/MS.2016.109
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Jwo JS, 2013, J INF SCI ENG, V29, P475
   Lacheiner H, 2011, EUROMICRO CONF PROC, P286, DOI 10.1109/SEAA.2011.51
   Maro S, 2018, J SYST SOFTWARE, V141, P85, DOI 10.1016/j.jss.2018.03.060
   Maro S, 2017, LECT NOTES BUS INF P, V269, P153, DOI 10.1007/978-3-319-49421-0_11
   Maro S, 2016, IEEE INT CONF AUTOM, P414, DOI 10.1145/2970276.2970314
   Murugesan A, 2016, INT REQUIR ENG CONF, P359, DOI 10.1109/RE.2016.35
   Nejati S, 2012, INFORM SOFTWARE TECH, V54, P569, DOI 10.1016/j.infsof.2012.01.005
   Picha P, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P1, DOI 10.1109/SEAA.2016.37
   Polgár B, 2011, FORMS/FORMAT 2010: FORMAL METHODS FOR AUTOMATION AND SAFETY IN RAILWAY AND AUTOMOTIVE SYSTEMS, P227, DOI 10.1007/978-3-642-14261-1_23
   Regan G, 2015, J SOFTW-EVOL PROC, V27, P591, DOI 10.1002/smr.1728
   Rossberg J., 2014, Beginning Application Lifecycle Management
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Shokry H, 2009, COMPUTER, V42, P53, DOI 10.1109/MC.2009.125
   Sommerville I., 2010, SOFTWARE ENG
   Ståhl D, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P61, DOI 10.1109/SEAA.2017.19
   Ståhl D, 2017, EMPIR SOFTW ENG, V22, P967, DOI 10.1007/s10664-016-9457-1
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   THOMAS I, 1992, IEEE SOFTWARE, V9, P29, DOI 10.1109/52.120599
   Tüzün E, 2019, J SYST SOFTWARE, V149, P63, DOI 10.1016/j.jss.2018.11.021
   Vidanapathirana A, 2013, INT CONF IND INF SYS, P30, DOI 10.1109/ICIInfS.2013.6731950
   WASSERMAN AI, 1990, LECT NOTES COMPUT SC, V467, P137
   Westfall Linda., 2006, Bidirectional Requirements Traceability
   Wieringa R.J., 1995, INTRO REQUIREMENTS T
   Wohlrab R, 2016, INT REQUIR ENG CONF, P216, DOI 10.1109/RE.2016.17
   Wolff C, 2015, INT WORKSH INT DATA, P515, DOI 10.1109/IDAACS.2015.7341359
NR 48
TC 6
Z9 7
U1 0
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2019
VL 31
IS 6
SI SI
AR e2171
DI 10.1002/smr.2171
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE9GT
UT WOS:000472683600001
DA 2024-07-18
ER

PT J
AU Lu, Y
   Mao, XJ
   Li, ZD
   Zhang, Y
   Wang, T
   Yin, G
AF Lu, Yao
   Mao, Xinjun
   Li, Zude
   Zhang, Yang
   Wang, Tao
   Yin, Gang
TI Internal quality assurance for external contributions in GitHub: An
   empirical investigation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE casual contributor; GitHub; internal quality
ID STATIC ANALYSIS
AB For popular open-source software projects, there are always a large number of worldwide developers who have been glued to making code contributions, while most of these developers play the role of casual contributors because of their very limited code commits. The frequent turnover of such a group of developers and the wide variations in their coding experiences challenge the project management on code and quality. This paper aims to investigate the status quo of internal quality assurance for external contributions in social coding sites. We first conducted a case study of 21 popular GitHub projects to estimate the code quality of the casual contributors. The quantitative results show that the casual contributors introduced greater quantity and severity of code quality issues than the main contributors; the developers who contribute to different projects as main and casual contributors did not perform significantly differently in terms of their code quality. On the basis of these findings, we further conducted a survey of 81 developers on GitHub to understand their practices on internal quality assurance. The qualitative results expose some limitations of present internal quality control for external contributions in GitHub. Finally, we discuss an alternative quality management paradigm: Continuous Inspection for industrial practices.
C1 [Lu, Yao; Mao, Xinjun; Zhang, Yang; Wang, Tao; Yin, Gang] Natl Univ Def Technol, Coll Comp, Sanyi Rd, Changsha, Hunan, Peoples R China.
   [Li, Zude] Cent S Univ, Sch Informat Sci & Engn, Changsha, Hunan, Peoples R China.
C3 National University of Defense Technology - China; Central South
   University
RP Lu, Y (corresponding author), Natl Univ Def Technol, Coll Comp, Sanyi Rd, Changsha, Hunan, Peoples R China.
EM 839377654@qq.com
FU National Natural Science Foundation of China [61472430, 61502512,
   61532004, 61379051]
FX National Natural Science Foundation of China, Grant/Award Number:
   61472430, 61502512, 61532004 and 61379051
CR [Anonymous], INT C SOFTWARE ENG
   [Anonymous], 2010, IEEE INT C SOFTW MAI
   [Anonymous], 2012, 2012 3rd International Workshop on Managing Technical Debt, MTD 2012-Proceedings, DOI [10.1109/MTD.2012.6225997, DOI 10.1109/MTD.2012.6225997]
   [Anonymous], PROC INT CONF SOFTW
   Avgustinov P, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P437, DOI 10.1109/ICSE.2015.62
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Baca D, 2013, SOFTWARE PRACT EXPER, V43, P259, DOI 10.1002/spe.2109
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Bollinger T, 1999, IEEE SOFTWARE, V16, P8
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cavalcanti YC, 2014, J SOFTW-EVOL PROC, V26, P620, DOI 10.1002/smr.1639
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Dixon M., 2008, TECHNICAL REPORT
   FURNHAM A, 1986, PERS INDIV DIFFER, V7, P385, DOI 10.1016/0191-8869(86)90014-0
   Gaudin Olivier, 2013, CONTINUOUS INSPECTIO, V4
   Gousios G, 2014, P 37 INT C SOFTW ENG, V1, P358
   Gousios G., 2008, P 2008 INT WORKING C, P129, DOI [DOI 10.1145/1370750.1370781, 10.1145/1370750.1370781]
   Gousios G., 2016, P 38 INT C SOFTW ENG, P358
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   ISO and IEC, 2011, ISO/IEC 25010:2011, P34
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kupsch JA, 2017, SOFTWARE PRACT EXPER, V47, P143, DOI 10.1002/spe.2401
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P175, DOI 10.1109/TSE.2011.5
   Letouzey Jean-Louis, 2010, Proceedings 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), P43, DOI 10.1109/VALID.2010.31
   Midha V, 2010, J COMPUT INFORM SYST, V50, P81
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P429, DOI 10.1109/ISSRE.2004.30
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Rocha H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P46, DOI 10.1109/SANER.2016.87
   SIGELMAN L, 1981, PUBLIC OPIN QUART, V45, P199, DOI 10.1086/268650
   SonarSource, 2017, SON 9
   SonarSource, 2017, SON AB 9
   Sözer H, 2015, SOFTWARE PRACT EXPER, V45, P1359, DOI 10.1002/spe.2287
   Stamelos I, 2002, INFORM SYST J, V12, P43, DOI 10.1046/j.1365-2575.2002.00117.x
   Tonella P, 2008, POS, V001, P2
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong J., 2015, Program : Turning good law into effective education, P1
   Yamashita K, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P191, DOI 10.1109/QRS.2016.31
   Yao Lu, 2016, Lecture Notes on Software Engineering, V4, P53, DOI 10.7763/LNSE.2016.V4.223
   Yu Y, 2016, INITIAL EVENTUAL SOF
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zhang H, 2013, INFORM SOFTWARE TECH, V55, P1341, DOI 10.1016/j.infsof.2012.09.008
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 50
TC 11
Z9 11
U1 2
U2 16
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2018
VL 30
IS 4
AR e1918
DI 10.1002/smr.1918
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GD1ZI
UT WOS:000430299400003
DA 2024-07-18
ER

PT J
AU Fei, Y
   Zhu, HB
   Wu, X
   Fang, HX
   Qin, SC
AF Fei, Yuan
   Zhu, Huibiao
   Wu, Xi
   Fang, Huixing
   Qin, Shengchao
TI Comparative modelling and verification of Pthreads and Dthreads
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE CSP; Dthreads; modelling; Pthreads; verification
ID FRAMEWORK; CSP
AB The POSIX threads (Pthreads) library is a thread API for C/C++ to control parallel threads and spawn concurrent process flows. Programming in Pthreads usually suffers from undesirable deadlock, data race, and race condition problems due to the potential nondeterministic execution behaviors between parallel threads. Dthreads, as another multithreading model that re-implements Pthreads, was proposed by Liu et al for efficient deterministic multithreading. They found out that, under specific test cases, Dthreads can effectively prevent data races. However, no comparison test has been made with Pthreads. To perform a formal comparison between Pthreads and Dthreads over deadlocks, data races, and race conditions, in this paper, we adopt CSP (communicating sequential processes) as a formal model for specifying part of API functions in Pthreads and Dthreads and illustrate the model construction using 4 classical example programs. By feeding the models into the model checker PAT (process analysis toolkit), we have verified that deadlocks and data races exist in Pthreads, but do not exist in Dthreads, for the considered programs. We have also found that neither of them can prevent race conditions. Our comparative modelling and verification of Pthreads and Dthreads show that though Dthreads cannot prevent all the deadlock situations, shown by verification results of another 2 example programs, Dthreads is better than Pthreads on eliminating data races and preventing deadlocks. Considering limited scalability of Dthreads, we have introduced a new programming model to support coarse granularity in bank transfer. Our modelling is also extended by covering the synchronization operations in Liu et al work.
C1 [Fei, Yuan; Zhu, Huibiao; Wu, Xi] East China Normal Univ, Shanghai Key Lab Trustworthy Comp, Int Res Ctr Trustworthy Software, MOE Int Joint Lab Trustworthy Software, Shanghai, Peoples R China.
   [Qin, Shengchao] Univ Teesside, Sch Comp, Middlesbrough, Cleveland, England.
   [Qin, Shengchao] Shenzhen Univ, Sch Comp Sci & Software Engn, Shenzhen, Peoples R China.
   [Wu, Xi] Univ Queensland, Sch Informat Technol & Elect Engn, Brisbane, Qld, Australia.
   [Fang, Huixing] Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.
C3 East China Normal University; University of Teesside; Shenzhen
   University; University of Queensland; Yangzhou University
RP Zhu, HB (corresponding author), East China Normal Univ, Shanghai Key Lab Trustworthy Comp, Shanghai, Peoples R China.
EM hbzhu@sei.ecnu.edu.cn
RI Qin, Shengchao/F-4823-2012
OI Qin, Shengchao/0000-0003-3028-8191; Fang, Huixing/0000-0003-4980-9452
FU Danish National Research Foundation; National Natural Science Foundation
   of China [61361136002, 61321064]; Danish-Chinese Center for Cyber
   Physical Systems; Shanghai Collaborative Innovation Center of
   Trustworthy Software for Internet of Things [ZF1213]
FX Danish National Research Foundation and the National Natural Science
   Foundation of China, Grant/Award Number: 61361136002; Danish-Chinese
   Center for Cyber Physical Systems; National Natural Science Foundation
   of China, Grant/Award Number: 61321064; Shanghai Collaborative
   Innovation Center of Trustworthy Software for Internet of Things,
   Grant/Award Number: ZF1213
CR Agarwal R., HARDWARE SOFTWARE VE, P191
   [Anonymous], 2007, P THE 6 JOINT M EUR
   Bensalem S, HARDWARE SOFTWARE VE, P208
   Berger ED, 2009, ACM SIGPLAN NOTICES, V44, P81, DOI 10.1145/1639949.1640096
   Bishop M, 1996, COMPUT SYST, V9, P131
   BROOKES SD, 1984, J ACM, V31, P560, DOI 10.1145/828.833
   Deshmukh JV, 2011, AUTOMAT SOFTW ENG, V18, P325, DOI 10.1007/s10515-011-0085-0
   Edwards SA, 2008, P DES AUT TEST EUR D, P1498
   Erickson John., 2010, OSDI, P151
   FEI Y, 2016, 17 IEEE INT S HIGH A, P132, DOI DOI 10.1109/HASE.2016.15
   Ferreira JF, 2014, INT J SOFTW TOOLS TE, V16, P381, DOI 10.1007/s10009-014-0307-4
   Flanagan C, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P121, DOI 10.1145/1542476.1542490
   Gradara S., 2004, ENTCS, V110, P55
   Hoare CAR., 1985, Communicating Sequential Processes
   Huang YH, 2015, FRONT COMPUT SCI-CHI, V9, P331, DOI 10.1007/s11704-015-3251-x
   IEEE, IEEE POSIX 1003 1C S
   Ilgun K., 1993, Proceedings 1993 IEEE Computer Society Symposium on Research in Security and Privacy (Cat. No.93CH3290-4), P16, DOI 10.1109/RISP.1993.287646
   Johnson R, PTHREAD WIN 32 LEVEL
   Kapoor HK, 2009, IEEE T COMPUT, V58, P931, DOI 10.1109/TC.2008.214
   Lafortune Stephane, 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P21, DOI 10.1007/978-3-642-38697-8_2
   Li JJ, 2009, FOURTH CHINAGRID ANNUAL CONFERENCE, PROCEEDINGS, P210, DOI 10.1109/ChinaGrid.2009.12
   Liu TP, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P327
   Liu Y, 2010, LECT NOTES COMPUT SC, V6252, P371
   Lowe G, 1997, IEEE T SOFTWARE ENG, V23, P659, DOI 10.1109/32.637148
   Lu K, 2015, J COMPUT SCI TECH-CH, V30, P42, DOI 10.1007/s11390-015-1503-8
   Lucia Brandon, 2009, Proceedings of the 2009 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 2009), P553, DOI 10.1145/1669112.1669181
   Qin SC, 2014, SCI COMPUT PROGRAM, V82, P56, DOI 10.1016/j.scico.2013.03.004
   Regehr J, RACE CONDITION VS DA
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Roscoe A.W., 1998, THEORY PRACTICE CONC
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Si YJ, 2014, FRONT COMPUT SCI-CHI, V8, P1, DOI 10.1007/s11704-013-3091-5
   Sun J, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430537
   Sun J, 2008, COMM COM INF SC, V17, P307
   TSYRKLEVICH E, 2003, P 12 USENIX SEC S AU
   Uppuluri P, P 2005 ACM S APPL CO, P346
   Xu J, 2013, INFORM SOFTWARE TECH, V55, P880, DOI 10.1016/j.infsof.2012.08.006
   Yang Y, 2008, TECHNICAL REPORT
   Zhang D, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P578
   Zhi Da Luo, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P309, DOI 10.1109/ICST.2011.22
NR 40
TC 10
Z9 11
U1 0
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2018
VL 30
IS 3
SI SI
AR e1919
DI 10.1002/smr.1919
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FZ0JU
UT WOS:000427255900009
OA Green Published
DA 2024-07-18
ER

PT J
AU Hyden, P
   McGrath, RG
   Moskowitz, IS
   Russell, S
AF Hyden, Paul
   McGrath, Richard G.
   Moskowitz, Ira S.
   Russell, Stephen
TI Managing risk in high assurance systems by optimizing topological
   resources
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE dynamic network topology; risk management; stochastic networks
AB We explore strategies for manipulating the topology of a network to promote increased and pragmatic high assurance systems. Topology matters to network threats and security, and the relative distance between nodes can impact the rate of dispersion of viruses, as well as access times in denial of service, probing, and insider threat attacks. We suggest methods to separate threatening and threatened nodes with enough hops to reduce and degrade risks. This work provides network analysts with an option to include other measures such as risk assessments to the construction and management of high assurance systems. We consider a scaled down model to demonstrate the proof of concept using artificial data. Specifically, we explore the efficacy of ring networks and the structure that occurs on k-hop networks when there are a prime number of nodes. We introduce techniques for the randomization of network topologies to manage real-time risk and provide a dynamic means to improve network security by increasing technical debt to a potential attacker.
C1 [Hyden, Paul; Moskowitz, Ira S.] US Naval Res Lab, Informat Management & Decis Architectures Branch, Code 5580, Washington, DC 20375 USA.
   [McGrath, Richard G.] US Naval Acad, Dept Math, Annapolis, MD 21402 USA.
   [Russell, Stephen] US Army Res Lab, Battlefield Informat Proc Branch, Adelphi, MD 20783 USA.
C3 United States Department of Defense; United States Navy; Naval Research
   Laboratory; United States Department of Defense; United States Navy;
   United States Naval Academy; United States Department of Defense; United
   States Army; US Army Research, Development & Engineering Command
   (RDECOM); US Army Research Laboratory (ARL)
RP Hyden, P (corresponding author), US Naval Res Lab, Informat Management & Decis Architectures Branch, Code 5580, Washington, DC 20375 USA.
EM paul.hyden@nrl.navy.mil
OI McGrath, Richard/0000-0003-2165-9579
CR Baldini G, 2012, IEEE COMMUN SURV TUT, V14, P355, DOI 10.1109/SURV.2011.032511.00097
   Cheng TH, 2012, IEEE COMMUN SURV TUT, V14, P1011, DOI 10.1109/SURV.2011.092311.00082
   Cook W.J., 2011, PURSUIT TRAVELING SA
   Durbin J.R., 1985, Modern algebra: An introduction, V2nd
   Geva M, 2014, IEEE SECUR PRIV, V12, P54, DOI 10.1109/MSP.2013.55
   Truong HTT, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P39, DOI 10.1145/2566486.2568046
   Hyden P, 2016, 30 AAAI C ART INT
   Hyden P., 2016, P 2016 IND SYST ENG
   Jain C, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON INDUSTRIAL AND INFORMATION SYSTEMS (ICIIS), P1
   Karsai M, 2011, PHYS REV E, V83, DOI 10.1103/PhysRevE.83.025102
   Kumar M. N., 2012, 2012 4th International Conference on Computational Intelligence and Communication Networks (CICN 2012), P535, DOI 10.1109/CICN.2012.149
   McGrath R, 2016, INT J OPER IN PRESS
   McGrath R, 2016, P 2016 IND SYST ENG
   McGrath R, 2015, P 2015 IND SYST ENG
   Obert J, 2014, IEEE MILIT COMMUN C, P88, DOI 10.1109/MILCOM.2014.22
   Silva TOE, 2014, MATH COMPUT, V83, P2033
   Qazi ZA, 2013, ACM SIGCOMM COMP COM, V43, P27, DOI 10.1145/2534169.2486022
   Reggiani A, 2013, TRANSPORT POLICY, V28, P63, DOI 10.1016/j.tranpol.2012.09.007
   Rui-ping Lua, 2014, 2014 IEEE 11th Consumer Communications and Networking Conference (CCNC), P537, DOI 10.1109/CCNC.2014.6994426
   Wei ZX, 2014, IEEE MILIT COMMUN C, P171, DOI 10.1109/MILCOM.2014.34
NR 20
TC 1
Z9 1
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2018
VL 30
IS 3
SI SI
AR e1887
DI 10.1002/smr.1887
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FZ0JU
UT WOS:000427255900006
DA 2024-07-18
ER

PT J
AU Nicolay, J
   Stiévenart, Q
   De Meuter, W
   De Roover, C
AF Nicolay, Jens
   Stievenart, Quentin
   De Meuter, Wolfgang
   De Roover, Coen
TI Purity analysis for JavaScript through abstract interpretation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT 15th IEEE International Working Conference on Source Code Analysis and
   Manipulation (SCAM)
CY SEP 27-28, 2015
CL Bremen, GERMANY
SP IEEE, IEEE Comp Soc, Tech Council Software Engn, Gramma Tech Inc, Microsoft Res
DE abstract interpretation; freshness analysis; JavaScript; purity
   analysis; side effect analysis
AB We present a static analysis for determining whether and to what extent functions in JavaScript programs are pure. To this end, the analysis classifies functions as pure functions, observers, or procedures. A function is pure if none of its executions generate or depend upon externally observable side effects. A function is an observer as soon as one of its executions depends on an external side effect, but none of its executions generate observable side effects. Otherwise, the function is classified as a procedure. Function executions and associated callers are found by traversing all reachable function execution contexts on the call stack at the point where an effect occurs. Our approach is based on a flow analysis that, in addition to computing traditional control and value flow, keeps track of read and write effects. To increase the precision of our purity analysis, we combine it with an intraprocedural analysis that determines freshness of variables and objects. We formalize the core aspects of our technique and discuss its implementation and results on common JavaScript benchmarks. Results show that our approach is capable of determining function purity in the presence of higher-order functions, dynamic property expressions, and prototypal inheritance. When compared with existing purity analyses, we find that our approach is as precise or more precise than the existing analyses.
C1 [Nicolay, Jens; Stievenart, Quentin; De Meuter, Wolfgang; De Roover, Coen] Vrije Univ Brussel, Software Languages Lab, Pl Laan 2, B-1050 Brussels, Belgium.
C3 Vrije Universiteit Brussel
RP Nicolay, J (corresponding author), Vrije Univ Brussel, Software Languages Lab, Pl Laan 2, B-1050 Brussels, Belgium.
EM jnicolay@vub.ac.be
OI Nicolay, Jens/0000-0003-4653-5820; DE MEUTER,
   WOLFGANG/0000-0002-5229-5627; De Roover, Coen/0000-0002-1710-1268;
   Stievenart, Quentin/0000-0001-9985-9808
FU Innoviris; IWT Vlaanderen; Fonds Wetenschappelijk Onderzoek
FX Innoviris; IWT Vlaanderen; Fonds Wetenschappelijk Onderzoek
CR Acar UmutA., 2003, Selective Memoization, V38
   Andreasen E. S., 2017, P 6 ACM SIGPLAN INT, P31, DOI [10.1145/3088515.3088521, DOI 10.1145/3088515.3088521]
   [Anonymous], 1991, Ph.D. dissertation
   Artzi Shay., 2007, Proc. ASE, P104
   Barnett M, 2006, LECT NOTES COMPUT SC, V3995, P321
   Barnett Mike., 2004, ECOOP WORKSHOP FORMA, P11
   Bozga M, 2003, ACM SIGPLAN NOT, V38
   Clausen LR, 1997, CONCURRENCY-PRACT EX, V9, P1031, DOI 10.1002/(SICI)1096-9128(199711)9:11<1031::AID-CPE354>3.0.CO;2-O
   Cousot P, 1977, P 4 ACM SIGACT SIGPL
   Dai SF, 2012, P IEEE S SECUR PRIV, P3, DOI 10.1109/SP.2012.10
   Earl C, 2010, P 2010 WORKSH SCHEM
   ECMA, 2017, ECMASCRIPT LANG SPEC
   Felleisen M., 1987, P 14 ACM SIGACT SIGP
   Finifter M, 2008, P 15 ACM C COMP COMM
   Gifford DK, 1986, P ACM C LISP FUNCT P
   Gilray T, 2016, ACM SIGPLAN NOTICES, V51, P691, DOI 10.1145/2914770.2837631
   Harrison W. L.  III, 1989, LISP and Symbolic Computation, V2, P179, DOI 10.1007/BF01808954
   Huang W, 2012, ACM SIGPLAN NOT, V47
   Jacobs B, 2011, LECT NOTES COMPUT SC, V6617, P41, DOI 10.1007/978-3-642-20398-5_4
   Jensen Simon Holm, 2009, LNCS, V5673
   Johnson JI, 2014, P 10 ACM S DYN LANG
   Kashyap V, 2014, P 22 ACM SIGSOFT INT
   Lerch J, 2015, 2015 30 IEEE ACM INT
   Madhavan R, 2011, LECT NOTES COMPUT SC, V6887, P7, DOI 10.1007/978-3-642-23702-7_6
   Might M, 2009, P 10 INT C VER MOD C
   Might M, 2006, ACM SIGPLAN NOT, V41
   Might M, 2009, P 2009 WORKSH SCHEM, P10
   Nicolay J, 2015, P 15 IEEE INT WORK C
   Nicolay J, 2011, P 11 IEEE INT WORK C
   Pearce DJ, 2011, LECT NOTES COMPUT SC, V6601, P104, DOI 10.1007/978-3-642-19861-8_7
   Pitidis Mihalis, 2011, Implementation and Application of Functional Languages. 22nd International Symposium, IFL 2010. Revised Selected Papers, P137, DOI 10.1007/978-3-642-24276-2_9
   Prountzos D, 2011, ACM SIGPLAN NOT, V46.
   Rytz L, 2013, 15 WORKSH FORM TECHN
   Salcianu A, 2005, LECT NOTES COMPUT SC, V3385, P199
   SONDERGAARD H, 1990, ACTA INFORM, V27, P505, DOI 10.1007/BF00277387
   VanHorn D, 2010, ACM SIGPLAN NOT, V45
   Vardoulakis D, 2010, LECT NOTES COMPUT SC, V6012, P570, DOI 10.1007/978-3-642-11957-6_30
NR 37
TC 5
Z9 5
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2017
VL 29
IS 12
SI SI
AR e1889
DI 10.1002/smr.1889
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA FQ1BL
UT WOS:000418091000003
DA 2024-07-18
ER

PT J
AU Ghezzi, C
AF Ghezzi, C.
TI Of software and change
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE agile processes; change; development; DevOps; formal model;
   incrementality; software; operation; verification
ID QUANTITATIVE VERIFICATION; MODEL
AB Change has been recognized as the distinguishing feature that makes software different from any other human-produced artifacts. Initial reflections on the urgent and unavoidable need to master change date back to the 1970s. However, despite the continuous progress that characterized software technology since, in practice, software change is still often handled as an afterthought, in an ad hoc and unprincipled manner. Agile development methods have been proposed and are now widely adopted to accommodate change during development. Recent extensions to also include operation-known as DevOps-are increasingly and successfully adopted by industry. Still, principled and rigorous foundations that can be taught, practiced, and replicated systematically are lacking.
   This paper argues that change has to become a first-class concept and that the development tools used by engineers and the runtime environment supporting software execution should be structured in a way that naturally accommodates change. It also provides a perspective along which several research approaches that were investigated by the community in the past decade might be integrated and extended to make this vision become true.
   Two main change categories are identified-evolution and adaptation-along with the forces that drive them. The paper discusses when and how the developed software can be designed in a way that it can self-adapt. It also discusses how the software itself can cooperate with humans in-the-loop to help them in their design and development efforts. Finally, it outlines a roadmap of future work needed to progress in the direction of supporting and automating software change that would lead to dependable adaptation and evolution.
C1 [Ghezzi, C.] Politecn Milan, DEIB, DeepSE Grp, Milan, Italy.
   [Ghezzi, C.] Politecn Milan, DEIB, Piazza L da Vinci 32, Milan, Italy.
C3 Polytechnic University of Milan; Polytechnic University of Milan
RP Ghezzi, C (corresponding author), Politecn Milan, DEIB, Piazza L da Vinci 32, Milan, Italy.
EM carlo.ghezzi@polimi.it
FU European Commission through an Advanced Research; Programme IDEAS ERC
   [227977-SMScom]
FX European Commission through an Advanced Research; Programme IDEAS ERC,
   Project, Grant/Award Number: 227977-SMScom
CR Alur R, 2001, ACM T PROGR LANG SYS, V23, P273, DOI 10.1145/503502.503503
   [Anonymous], 2014, AGILE GOOD HYPE UGLY, DOI DOI 10.1007/978-3-319-05155-0_11
   Baresi L, 2017, IEEE T SOFT IN PRESS
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Bianculli D, 2015, P FME WORKSH FORM ME
   Bianculli D, 2015, SCI COMPUT PROGRAM, V97, P47, DOI 10.1016/j.scico.2013.11.026
   Bianculli D, 2014, LECT NOTES COMPUT SC, V8802, P41, DOI 10.1007/978-3-662-45234-9_4
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Bruns G., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P274
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Chaki S., 2004, VERIFICATION EVOLVIN
   Chechik M, 2003, ACM T SOFTW ENG METH, V12, P371, DOI 10.1145/990010.990011
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cobleigh JM, 2003, LECT NOTES COMPUT SC, V2619, P331
   Colin S, 2005, LECT NOTES COMPUT SC, V3472, P525
   Combemale B, 2016, Engineering modeling languages: Turning domain knowledge into tools
   Conway CL, 2005, LECT NOTES COMPUT SC, V3576, P449
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Epifani I, 2009, PROC INT CONF SOFTW, P111, DOI 10.1109/ICSE.2009.5070513
   Filieri A., 2011, P 33 INT C SOFTW ENG
   Filieri A, 2016, IEEE T SOFTWARE ENG, V42, P75, DOI 10.1109/TSE.2015.2421318
   Filieri A, 2012, FORM ASP COMPUT, V24, P163, DOI 10.1007/s00165-011-0207-2
   GHEZZI C, 2009, 17 IEEE INT REQ ENG, P69, DOI DOI 10.1109/RE.2009.34
   Ghezzi C, 2013, AGILE VERIFICATION, P31
   Ghezzi C., 2016, DEPENDABILITY ADAPTA, P36
   Ghezzi C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P33, DOI 10.1109/ICSE.2013.6606549
   Ghezzi C, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P69, DOI 10.1109/RE.2009.34
   Ghezzi C, 2009, LECT NOTES COMPUT SC, V5581, P70, DOI 10.1007/978-3-642-02351-4_5
   Giannakopoulou D, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P3, DOI 10.1109/ASE.2002.1114984
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Henzinger TA, 2004, VERIFICATION THEORY, P180
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   JACKSON M, 1995, PROC INT CONF SOFTW, P15, DOI 10.1145/225014.225016
   Jones CB, 1983, ACM T PROGRAM LANG S
   Katoen JP, 2005, INT CONF QUANT EVAL, P243, DOI 10.1109/QEST.2005.2
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Kwiatkowska M, 2010, LECT NOTES COMPUT SC, V6015, P23, DOI 10.1007/978-3-642-12002-2_3
   Larsen U, 1988, Eur J Popul, V3, P203, DOI 10.1109/LICS.1988.5119
   Lauterburg S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1145/1368088.1368128
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   MENGHI C, 2014, COMP P 36 INT C SOFT, P670
   Menghi C, 2016, LECT NOTES COMPUT SC, V9995, P531, DOI 10.1007/978-3-319-48989-6_32
   Person S, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P504
   Sharygina N, 2005, LECT NOTES COMPUT SC, V3582, P512
   Uchitel S, 2013, COMPUT SCI-RES DEV, V28, P279, DOI 10.1007/s00450-012-0233-1
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
   Yang GW, 2009, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSM.2009.5306334
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 51
TC 6
Z9 6
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2017
VL 29
IS 9
AR e1888
DI 10.1002/smr.1888
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FF8YP
UT WOS:000409304100004
DA 2024-07-18
ER

PT J
AU Majchrowski, A
   Ponsard, C
   Saadaoui, S
   Flamand, J
   Deprez, JC
AF Majchrowski, Annick
   Ponsard, Christophe
   Saadaoui, Sanae
   Flamand, Jacques
   Deprez, Jean-Christophe
TI Software development practices in small entities: an ISO29110-based
   survey
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT Conference on European System and Software Process Improvement and
   Innovation Initiative (EuroSPI2)
CY SEP 30-OCT 02, 2015
CL Ankara Univ, Ankara, TURKEY
HO Ankara Univ
DE ISO29110; project management; SME; software process improvement; survey;
   VSE
ID PROCESS IMPROVEMENT
AB Small and medium-sized enterprises (SMEs) involved in software development often experience problems in mastering their development processes. This can lead to time and cost overruns or failure to address functional and nonfunctional requirements. In general, this can significantly affect customer satisfaction and hamper business growth potential. This paper reports on a survey conducted in Belgium to assess more precisely which and how SMEs are affected by problems related to development processes. The survey was driven by the ISO29110 lightweight standard focusing on very small entities developing software, ie, whose internal IT department is less than 25 people. Worldwide, and in particular in Belgium, this represents a very large portion of SMEs in business. Survey results highlight the most frequent issues and how they may be linked to organization and project characteristics. The survey is based on a free online self-assessment tool. Therefore, results go 1 step further than identifying issues encountered in companies: the tool also infers a set of quick-win high-level recommendations to solve these issues. Our results are also compared with those reported by other surveys targeting both large and small companies.
C1 [Majchrowski, Annick; Ponsard, Christophe; Saadaoui, Sanae; Flamand, Jacques; Deprez, Jean-Christophe] CETIC Res Ctr, Ave Jean Mermoz 28, B-6041 Charleroi, Belgium.
RP Ponsard, C (corresponding author), CETIC Res Ctr, Software & Syst Engn Dept, Ave Jean Mermoz 28, B-6041 Charleroi, Belgium.
EM christophe.ponsard@cetic.be
RI Ponsard, Christophe/JXL-5569-2024
OI Ponsard, Christophe/0000-0002-5027-2114; Deprez,
   Jean-Christophe/0000-0003-4334-7816
CR [Anonymous], 2014, NELS, DOI DOI 10.1007/978-3-662-43896-1_1
   [Anonymous], 2011, 291102011 ISOIEC, V29110
   Deprez JC, 2014, ERCIM NEWS, P38
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Gartner, 2012, SURV SHOWS WHY PROJ
   Habra N, 2008, INFORM SOFTWARE TECH, V50, P763, DOI 10.1016/j.infsof.2007.08.004
   Hughes DL, 2015, SPRINGER BRIEFS INFO
   Laporte C Y., 2013, Cross Talk, P28
   Laporte CY, 2008, COMM COM INF SC, V16, P129
   Laporte CY, ISO29110
   Larrucea X, 2016, IEEE SOFTWARE, V33, P85, DOI 10.1109/MS.2016.42
   Messnarz R, 2014, J SOFTW-EVOL PROC, V26, P284, DOI [10.1002/smr.1583, 10.1002/smr.1591, 10.1002/smr.1586, 10.1002/smr.1582]
   O'Connor RV, 2011, USING ISO IEC 29110, P225
   Sanchez-Gordon ML, 2015, COMM COM INF SC, V526, P114, DOI 10.1007/978-3-319-19860-6_10
   Sauer Chris., 2003, STATE IT PROJECT MAN
   Standish Group, 2015, CHAOS REP 2015
NR 16
TC 6
Z9 6
U1 0
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2016
VL 28
IS 11
BP 990
EP 999
DI 10.1002/smr.1829
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA ED0WX
UT WOS:000388564700007
DA 2024-07-18
ER

PT J
AU Binkley, D
   Heinz, D
   Lawrie, D
   Overfelt, J
AF Binkley, David
   Heinz, Daniel
   Lawrie, Dawn
   Overfelt, Justin
TI Source code analysis with LDA
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE latent Dirichlet allocation; hyper-parameters; entropy
AB Latent Dirichlet allocation (LDA) has seen increasing use in the understanding of source code and its related artifacts in part because of its impressive modeling power. However, this expressive power comes at a cost: The technique includes several tuning parameters whose impact on the resulting LDA model must be carefully considered. The aim of this work is to provide insights into the tuning parameters' impact. Doing so improves the comprehension of both researchers who look to exploit the power of LDA in their research and those who interpret the output of LDA-using tools. It is important to recognize that the goal of this work is not to establish values for the tuning parameters because there is no universal best setting. Rather, appropriate settings depend on the problem being solved, the input corpus (in this case, typically words from the source code and its supporting artifacts), and the needs of the engineer performing the analysis. This work's primary goal is to aid software engineers in their understanding of the LDA tuning parameters by demonstrating numerically and graphically the relationship between the tuning parameters and the LDA output. A secondary goal is to enable more informed setting of the parameters. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Binkley, David; Lawrie, Dawn] Loyola Univ Maryland, Comp Sci Dept, Baltimore, MD 21210 USA.
   [Heinz, Daniel] CNA Financial, Chicago, IL USA.
   [Overfelt, Justin] Booz Allen Hamilton, Linthicum, MD USA.
C3 Loyola University Maryland; Booz Allen Hamilton Holding Corporation
RP Binkley, D (corresponding author), Loyola Univ Maryland, Comp Sci Dept, Baltimore, MD 21210 USA.
EM binkley@cs.loyola.edu
FU NSF [CCF 0916081]
FX Support for this work was provided by NSF grant CCF 0916081. Thanks to
   Malcom Gethers for his advice working with LDA and R, Scott Grant for
   his assistance in the replication of the topic count study, and Steve
   Thomas and Jeffrey Matthias for their assistance in the replication of
   the topic evolution work.
CR Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   [Anonymous], 2004, TECHNICAL REPORT
   [Anonymous], 2007, LATENT SEMANTIC ANAL
   [Anonymous], ICSM 11
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Campbell J. C., 2015, ART SCI ANAL SOFTWAR
   Campbell JC, 2013, IEEE WORK CONF MIN S, P57, DOI 10.1109/MSR.2013.6624005
   CASELLA G, 1992, THE AMERICAN STATIST, V46, P3
   Grant S, 2013, SCI COMPUT PROGRAM, V78, P1663, DOI 10.1016/j.scico.2013.03.015
   Hindle Abram, 2014, EMPIR SOFTW ENG, P1
   Lawrie D., 2010, REV ENG WCRE 2010 17
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Linstead E., 2007, P 22 IEEE ACM INT C, P461, DOI [10.1145/1321631.1321709, DOI 10.1145/1321631.1321709]
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McCallum A.K., 2002, MALLET MACHINE LEARN
   McCallum Andrew, 2009, ADV NEURAL INFORM PR, V22
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Panico A, 2013, CHEM ENGINEER TRANS, V32, P13, DOI 10.3303/CET1332003
   Porteous I, 2008, ACM SIGKDD INT C KNO, P3
   Sun X., 2015, COMPUTER INFORM SCI, P27, DOI DOI 10.1007/978-3-319-10509-3_3
   Thomas SW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1138, DOI 10.1145/1985793.1986020
   Thomas SW, 2011, P 8 WORK C MIN SOFTW
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Wallach H., 2009, INT C MACH LEARN ICM
   Zou CY, 2014, PROC IEEE INT CONF S, P593, DOI 10.1109/ICSME.2014.103
NR 27
TC 4
Z9 4
U1 0
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2016
VL 28
IS 10
SI SI
BP 893
EP 920
DI 10.1002/smr.1802
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EC7FT
UT WOS:000388302700004
DA 2024-07-18
ER

PT J
AU Zhou, Y
   Tong, YX
   Gu, RH
   Gall, H
AF Zhou, Yu
   Tong, Yanxiang
   Gu, Ruihang
   Gall, Harald
TI Combining text mining and data mining for bug report classification
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software evolution; bug report classification; data mining; text mining
ID SOFTWARE; SEVERITY; FAULTS
AB Bug reports represent an important information source for software construction. Misclassification of these reports inevitably introduces bias. Manual examinations can help reduce the noise, but bring a heavy burden for developers instead. In this paper, we propose a multi-stage approach by combining both text mining and data mining techniques to automate the prediction process. The first stage leverages text mining techniques to analyze the summary parts of bug reports and classifies them into three levels of probability. The extracted features and some other structured features of bug reports are then fed into the machine learner in the second stage. Data grafting techniques are employed to bridge the two stages. Comparative experiments with previous studies on the same datathree large-scale open-source projectsconsistently achieve a reasonable enhancement (from 77.4% to 81.7%, 76.1% to 81.6%, and 87.4% to 93.7%, respectively) over their best results in terms of overall performance. Additional comparative empirical experiments on other seven popular open-source systems confirm the findings. Moreover, based on the data obtained, we also empirically studied the impact relation between the underlying classifiers and various other properties of the combined model. A prototypical recommender system has been developed to demonstrate the applicability of our approach. Copyright (c) 2016 John Wiley & Sons, Ltd.
C1 [Zhou, Yu; Tong, Yanxiang; Gu, Ruihang] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
   [Zhou, Yu] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Gall, Harald] Univ Zurich, Dept Informat, CH-8050 Zurich, Switzerland.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University;
   University of Zurich
RP Zhou, Y (corresponding author), Nanjing Univ Aeronaut & Astronaut, Comp Sci, Nanjing 210016, Peoples R China.
EM zhouyu@nuaa.edu.cn
OI Gall, Harald/0000-0002-3874-5628
FU National Natural Science Foundation of China [61202002]; Natural Science
   Foundation of Jiangsu Province [BK20151476]; Fundamental Research Funds
   for the Central Universities [NS2016093]; National High-Tech Research
   and Development Program of China (863 Program) [2015AA015303];
   Collaborative Innovation Center of Novel Software Technology and
   Industrialization in China
FX We are very grateful for the constructive comments from the anonymous
   reviewers. The work was partially funded by the National Natural Science
   Foundation of China under grant No. 61202002, the Natural Science
   Foundation of Jiangsu Province under grant No. BK20151476, the
   Fundamental Research Funds for the Central Universities under grant No.
   NS2016093, the National High-Tech Research and Development Program of
   China (863 Program) under grant No. 2015AA015303, and the Collaborative
   Innovation Center of Novel Software Technology and Industrialization in
   China.
CR Anbalagan P, 2009, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSM.2009.5306337
   [Anonymous], 2013, NONPARAMETRIC STAT M
   [Anonymous], 2006, PATTERN RECOGN, DOI DOI 10.1117/1.2819119
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   Antoniol Giuliano, 2008, P 2008 C CTR ADV STU
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N., 2008, P 2008 INT WORKING C, P27
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bhattacharya P., 2010, Software Main- tenance (ICSM), 2010 IEEE International Conference on, P1
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bouktif S, 2014, ACM TRANS MANAG INF, V5, DOI 10.1145/2555596
   Chaturvedi K.K., 2012, 2012 CSI 6 INT C SOF, P1
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   DAmbros M., 2008, ANAL SOFTWARE REPOSI
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Guo PJ, 2011, P ACM 2011 C COMP SU, P395, DOI [10.1145/1958824.1958887., DOI 10.1145/1958824.1958887]
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hotho A., 2005, LDV FORUM, V20, P19, DOI DOI 10.1111/j.1365-2621.1978.tb09773.x
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kittler J, 1998, IEEE T PATTERN ANAL, V20, P226, DOI 10.1109/34.667881
   Knab P., 2006, P 2006 INT WORKSHOP, P119
   Ko AJ, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P127
   Kochhar PS, 2014, IEEE INT C ENG COMP, P126, DOI 10.1109/ICECCS.2014.25
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Larkey L. S., 1996, SIGIR Forum, P289
   Lewis D. D., 1998, Machine Learning: ECML-98. 10th European Conference on Machine Learning. Proceedings, P4, DOI 10.1007/BFb0026666
   Liu MX, 2014, IEEE T RELIAB, V63, P676, DOI 10.1109/TR.2014.2316951
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pingclasai N, 2013, ASIA PAC SOFWR ENG, P13, DOI 10.1109/APSEC.2013.105
   Prasetyo PK, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P596, DOI 10.1109/ICSM.2012.6405330
   Ramler R, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P173, DOI 10.1109/IWSM-Mensura.2013.33
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Senator TE, 2005, FIFTH IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P386, DOI 10.1109/ICDM.2005.102
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Nguyen TT, 2012, PROC INT CONF SOFTW, P1297, DOI 10.1109/ICSE.2012.6227095
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weiss C., 2007, P 4 INT WORKSH MIN S, V1
   Witten I. H., 2005, DATA MINING PRACTICA
   Wright H. K., 2010, P FSE SDP WORKSH FUT, P411, DOI [10.1145/1882362.1882446, DOI 10.1145/1882362.1882446]
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zeller A., 2013, PERSPECTIVES FUTURE, P209, DOI DOI 10.1007/978-3-642-37395-4_14
   Zhou B., 2014, Proceedings of the International Conference on Program Comprehension (ICPC'14), P95, DOI DOI 10.1145/2597008.2597142
   Zhou Y, 2014, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2014.53
   Zhou Y, 2008, WORK CONF REVERSE EN, P27, DOI 10.1109/WCRE.2008.39
   杨云峰, 1999, [西安公路交通大学学报, Journal of Xian Highway University], P67
NR 62
TC 95
Z9 102
U1 0
U2 39
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2016
VL 28
IS 3
BP 150
EP 176
DI 10.1002/smr.1770
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DH6SL
UT WOS:000372921700001
DA 2024-07-18
ER

PT J
AU Martini, A
   Pareto, L
   Bosch, J
AF Martini, Antonio
   Pareto, Lars
   Bosch, Jan
TI A multiple case study on the inter-group interaction speed in large,
   embedded software companies employing agile
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE inter-group interaction; Agile Software Development; development speed;
   boundary-spanning activities; embedded software; software product line
AB The adoption of Agile Software Development in large companies is a recent phenomenon of great interest both for researchers and practitioners. Although intra-team interaction is well supported by established agile practices, the critical interaction between the agile team and other parts of the organization is still unexplored in literature. Such interactions slow down the development, hindering the achievement of business goals based on speed: short time to market, quick replication of products of a product-line, and reaction time for product evolution. We have employed a two-year long multiple-case case-study, collecting data through interviews and a survey in three large companies developing embedded software. Through a combination of qualitative and quantitative analysis, we have found strong evidence that interaction challenges between the development team and other groups in the organization hinder speed and are widespread in the organizations. This paper also identifies current practices in use at the studied companies and provides detailed guidelines for novel solutions in the investigated domain. Such practices are called boundary-spanning activities in information system research and coordination theory. We present a comparison between large embedded software companies employing agile and developing a line of products based on reused assets and agile companies developing pure software. We highlight specific contextual factors and areas where novel spanning activities are needed for mitigating the interaction challenges hindering speed. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Martini, Antonio] Chalmers Univ Technol, Software Engn, S-41296 Gothenburg, Sweden.
   [Martini, Antonio; Pareto, Lars; Bosch, Jan] Chalmers Univ Technol, Comp Sci & Engn, S-41296 Gothenburg, Sweden.
C3 Chalmers University of Technology; Chalmers University of Technology
RP Martini, A (corresponding author), Chalmers Univ Technol, Software Engn, S-41296 Gothenburg, Sweden.
EM antonio.martini@chalmers.se
RI Martini, Antonio/AAA-2683-2019
OI Martini, Antonio/0000-0002-0669-8687
CR [Anonymous], 2005, Designing Surveys: A Guide to Decisions and Procedures
   Baskerville R, 2011, INFORM SOFTWARE TECH, V53, P543, DOI 10.1016/j.infsof.2010.10.010
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dubois A, 2002, J BUS RES, V55, P553, DOI 10.1016/S0148-2963(00)00195-8
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eklund U, 2012, LECT NOTES BUS INF P, V111, P31
   Flick, 2014, INTRO QUALITATIVE RE
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Kähkönen T, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P2
   Karlström D, 2005, IEEE SOFTWARE, V22, P43, DOI 10.1109/MS.2005.59
   Kettunen P., 2008, SOFTWARE PROCESS IMP, V13, P183, DOI [10.1002/, DOI 10.1002/SPIP.354]
   Lee EC, 2008, AGILE 2008, PROCEEDINGS, P106, DOI 10.1109/Agile.2008.75
   Lee S, 2010, EMPIR SOFTW ENG, V15, P204, DOI 10.1007/s10664-009-9119-7
   Levina N, 2005, MIS QUART, V29, P335
   Lindvall M, 2004, COMPUTER, V37, P26, DOI 10.1109/MC.2004.231
   Ma Z., 2000, Conference Proceedings of the 2000 IEEE International Performance, Computing, and Communications Conference (Cat. No.00CH37086), P373, DOI 10.1109/PCCC.2000.830340
   Ma Z, 2000, AEROSP CONF PROC, P421, DOI 10.1109/AERO.2000.878454
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Martini A., 2013, P 17 INT SOFTWARE PR, P42
   Martini A., 2012, P 16 INT SOFTWARE PR, V1, P116
   Martini A, 2013, LECT NOTES BUS INF P, V150, P60
   Paasivaara M., 2003, Software Process Improvement and Practice, V8, P183, DOI 10.1002/spip.187
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Poppendieck M., 2006, ADDISON WESLEY SIGNA
   Poppendieck M, 2007, PROC INT CONF SOFTW, P165, DOI 10.1109/ICSECOMPANION.2007.46
   Ronkainen J., 2003, EXTREME PROGRAMMING, V2675, P1012
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santos FA, 2005, ORGAN SCI, V16, P491, DOI 10.1287/orsc.1050.0152
   Strauss A. L., 1997, Grounded Theory in Practice
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Turk D., 2002, 3 INT C EXTREME PROG
   Wang XF, 2012, J SYST SOFTWARE, V85, P1287, DOI 10.1016/j.jss.2012.01.061
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xie M., 2012, P 2 INT WORKSHOP EVI, P21, DOI [10.1145/2372233.2372240, DOI 10.1145/2372233.2372240]
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 38
TC 11
Z9 12
U1 4
U2 23
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2016
VL 28
IS 1
BP 4
EP 26
DI 10.1002/smr.1757
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB7LL
UT WOS:000368696600001
DA 2024-07-18
ER

PT J
AU Rahanu, H
   Georgiadou, E
   Siakas, K
   Ekert, D
   Messanarz, R
   Abeysinghe, G
AF Rahanu, Harjinder
   Georgiadou, Elli
   Siakas, Kerstin
   Ekert, Damjan
   Messanarz, Richard
   Abeysinghe, Geetha
TI Towards relating delivery methods and examination success: lessons
   learned from the VALO LLP project case study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE VALO project; valorisation; ECQA; teaching methods; assessment methods
AB Didactic, teacher-centred approaches and rote learning have long been discredited and gradually replaced by participative, interactive and creative learning sessions. Formal classroom sessions are being replaced or augmented by self-directed study increasingly in distance mode. The evolution and affordability of technologies enables massive participation in studies, not only for short training for professional updating but also for longer study periods and attainment of qualifications. The rapid changes in society and technology demand that everybody continuously updates their knowledge and skills in their area of expertise and gain knowledge, skills and competencies in other areas for a successful life of careers and not necessarily a career for life as was the norm in the past. It is important to safeguard the quality of independent assessment and certification methods. In this paper, we consider the main delivery methods and their impact on assessment methods and associated results. With reference to the European Certification and Qualification Association framework and the recently completed European Union co-funded Lifelong Learning Programme project VALO, we juxtapose the delivery methods used and the examination results at different partner institutions. We extract observed issues and trends, which could be principles to be adopted by future projects with regards to process improvement and performance enhancement. Copyright (c) 2015 John Wiley & Sons, Ltd.
C1 [Rahanu, Harjinder; Georgiadou, Elli; Abeysinghe, Geetha] Middlesex Univ, London N17 8HR, England.
   [Georgiadou, Elli] SEEQMA Ltd, Consultancy, London, England.
   [Siakas, Kerstin] Alexander Technol Educ Inst Thessaloniki, Thessaloniki, Greece.
   [Ekert, Damjan; Messanarz, Richard] ISCN LTD, Bray, Wicklow, Ireland.
   [Abeysinghe, Geetha] Coordinating Secretariat Sci Technol & Innovat, Colombo, Sri Lanka.
C3 Middlesex University
RP Rahanu, H (corresponding author), Middlesex Univ, Sch Sci & Technol, London N17 8HR, England.
EM harjinder2@mdx.ac.uk
OI Ekert, Damjan/0000-0001-9301-242X
FU VALO project: Valorisation Expert Training and Certification Project
   under the Lifelong learning programme Leonardo da Vinci (LdV) Transfer
   of Innovation (TOI) [2011-1-GR1-LEO05-06789]
FX The work presented in this paper has been partially supported by the
   activities in the VALO project: Valorisation Expert Training and
   Certification Project with project number 2011-1-GR1-LEO05-06789 under
   the Lifelong learning programme Leonardo da Vinci (LdV) Transfer of
   Innovation (TOI), the consortium partners, and the authors'
   institutions. This publication reflects only the views of the authors,
   and the Commission cannot be held responsible for any use, which may
   make of the information contained therein.
CR Beetham H., 2013, Rethinking pedagogy for a digital age: Designing for 21st century learning
   Byrd Jr J, 2008, GUIDED BOOK STUDENT
   Elli Georgiadou, 2006, LEARNING TEACHING IS, P29
   Georgiadou E., 2012, P INSPIRE 2012, P101
   Haggard S., 2013, 130 BIS
   Moore M.G., 2011, Distance Education: A Systems View of Online Learning, V3rd
   O'Malley J., 1999, ONLINE J DISTANCE ED, V2
   Prosser M., 1999, UNDERSTANDING LEARNI
   Rod Ellis, 2003, TASK BASED LANGUAGE
   Shachar M., 2003, International Review of Research in Open and Distance Learning, V4
NR 10
TC 2
Z9 2
U1 0
U2 8
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2015
VL 27
IS 8
SI SI
BP 555
EP 564
DI 10.1002/smr.1726
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CP8UU
UT WOS:000360170900006
DA 2024-07-18
ER

PT J
AU Bernardi, ML
   Cimitile, M
   Di Lucca, G
AF Bernardi, Mario Luca
   Cimitile, Marta
   Di Lucca, Giuseppe
TI Design pattern detection using a DSL-driven graph matching approach
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE design pattern detection; object-oriented systems; graph matching;
   domain-specific languages; model-driven development
ID RECOVERY; IDENTIFICATION; VARIANTS
AB Knowledge about design pattern (DP) instances improves program comprehension and reengineering of object-oriented systems. Effectively, it helps to discover developer design decisions and trade-offs that often are not documented. This work describes an approach to automatically detect DPs in existing object-oriented systems by tracing systems' source code components with the roles they play in the patterns. In the proposed approach, DPs are modeled based on their high-level structural properties (e.g., inheritance, dependency, invocation, delegation, type nesting, and membership relationships) that are checked, by source code parsing, against the system structure and components. Moreover, the approach can also detect pattern variants, defined by overriding the pattern properties. This paper presents a description of the approach, provides a brief description of the supporting tool, and discusses the results from the experiments carried out to validate it. The approach was validated on seven systems of an open benchmark that contains systems of increasing sizes. For five additional systems, the results have been compared with the ones from a similar approach existing in the literature. The obtained results, the identified DP variants, and the effectiveness of the approach are thoroughly presented and discussed. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Bernardi, Mario Luca; Di Lucca, Giuseppe] Univ Sannio, Dept Engn, Benevento, Italy.
   [Cimitile, Marta] Unitelma Sapienza Univ, Fac Jurisprudence, Rome, Italy.
C3 University of Sannio; Universita degli Studi di Roma Unitelma Sapienza
RP Bernardi, ML (corresponding author), Univ Sannio, Dept Engn, Benevento, Italy.
EM mlbernar@unisannio.it
RI Bernardi, Mario Luca/T-1539-2019; CIMITILE, Marta/F-2083-2018
OI Bernardi, Mario Luca/0000-0002-3223-7032; CIMITILE,
   Marta/0000-0003-2403-8313; Di Lucca, Giuseppe/0000-0003-3632-0156
CR Alnusair A., 2013, P 28 ANN ACM S APPL, P1062
   Ampatzoglou A, 2012, INFORM SOFTWARE TECH, V54, P331, DOI 10.1016/j.infsof.2011.10.006
   [Anonymous], 2007, P 3 INT WORKSHOP PRE, DOI DOI 10.1109/PROMISE.2007.6
   Antoniol G, 2001, J SYST SOFTWARE, V59, P181, DOI 10.1016/S0164-1212(01)00061-9
   Antoniol G, 1998, PROG COMPREHEN, P153, DOI 10.1109/WPC.1998.693342
   Balanyi Z, 2003, PROC IEEE INT CONF S, P305, DOI 10.1109/ICSM.2003.1235436
   Bayley I, 2008, INT CONF QUAL SOFTW, P27, DOI 10.1109/QSIC.2008.32
   Bergenti F, 2000, 12 INT C SOFTW ENG K, P336
   Bernardi ML, 2013, WORK CONF REVERSE EN, P172, DOI 10.1109/WCRE.2013.6671292
   Bernardi ML, 2010, PROC IEEE INT CONF S
   Beyer D, 2003, PROG COMPREHEN, P294
   Beyer D., 2006, 28th International Conference on Software Engineering Proceedings, P807, DOI 10.1145/1134285.1134420
   Binun A, 2012, EUR CON SFTWR MTNCE, P245, DOI 10.1109/CSMR.2012.82
   De Lucia A, 2011, 6 WORKSH IT ECL COMM, P40
   De Lucia A, 2010, EUR CON SFTWR MTNCE, P176, DOI 10.1109/CSMR.2010.16
   De Lucia A, 2009, J SYST SOFTWARE, V82, P1177, DOI 10.1016/j.jss.2009.02.012
   De Lucia A, 2009, EUR CON SFTWR MTNCE, P99, DOI 10.1109/CSMR.2009.29
   De Lucia Andrea., 2010, Proceedings of the IEEE International Conference on Software Maintenance, ICSM, P1, DOI DOI 10.1109/ICSM.2010.5609707
   Dong J, 2009, IEEE T SYST MAN CY A, V39, P1271, DOI 10.1109/TSMCA.2009.2028012
   FONTANA FA, 2012, SOFTW MAINT REENG CS, P235, DOI DOI 10.1109/CSMR.2012.32
   Fontana FA, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a4
   Fontana FA, 2011, INFORM SCIENCES, V181, P1306, DOI 10.1016/j.ins.2010.12.002
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Fulop LA, 2006, PROC MONOGR ENG WATE, P127
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ghulam Rasool HA, 2013, J BASIC APPL, V3, P139
   Goldstein M, 2009, LECT NOTES COMPUT SC, V5831, P38, DOI 10.1007/978-3-642-04941-5_6
   Gueheneuc Y.G., 2007, P 1 EUROPLOP FOC GRO
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Guéhéneuc YG, 2010, SOFTWARE QUAL J, V18, P145, DOI 10.1007/s11219-009-9082-y
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   HEERING J, 1989, SIGPLAN NOTICES, V24, P43, DOI 10.1145/71605.71607
   Heuzeroth D, 2003, PROG COMPREHEN, P94
   Huang HY, 2005, J SYST SOFTWARE, V75, P69, DOI 10.1016/j.jss.2003.11.018
   Jing Dong, 2007, Proceedings of the 2007 International Conference on Software Engineering Research & Practice. SERP 2007, P621
   Kaczor O, 2006, P 10 EUR C SOFTW MAI, V10, P184
   Keller RK, 2002, ADVANCES IN SOFTWARE ENGINEERING, P113
   Kim H, 2000, LECT NOTES COMPUT SC, V1844, P318
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Le Guennec A, 2000, LECT NOTES COMPUT SC, V1939, P482
   Loo KN, 2012, IEEE SOFTWARE, V29, P64, DOI 10.1109/MS.2012.20
   Loo KN, 2010, COMP ENG TECHN ICCET, V6
   Ng JKY, 2010, J SOFTW MAINT EVOL-R, V22, P597, DOI 10.1002/smr.421
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   Paakki J., 2000, Proceedings of the International Conference on Software, P325
   Pettersson N, 2010, IEEE T SOFTWARE ENG, V36, P575, DOI 10.1109/TSE.2009.92
   Philippow I., 2005, Software System Model, V4, P55
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Rasool G., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P243, DOI 10.1109/ASE.2011.6100060
   Rasool G., 2011, IJCSI International Journal of Computer Science Issues, V8, P251
   Rasool G, 2010, ADV ENG SOFTW, V41, P519, DOI 10.1016/j.advengsoft.2009.10.014
   Shi N, 2006, IEEE INT CONF AUTOM, P123
   Smith JM, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ASE.2003.1240309
   Stencel K, 2008, ASIA PAC SOFWR ENG, P25, DOI 10.1109/APSEC.2008.67
   Stencel K, 2008, LECT NOTES COMPUT SC, V5333, P396
   Tonella P, 2007, EMPIR SOFTW ENG, V12, P551, DOI 10.1007/s10664-007-9037-5
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Tu Peng, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P454
   Vokác M, 2006, J OBJECT TECHNOL, V5, P139, DOI 10.5381/jot.2006.5.1.a6
   von Detten Markus., 2011, Proceedings of the joint ACM SIGSOFT conference - QoSA and ACM SIGSOFT symposium - ISARCS on Quality of software architectures - QoSA and architecting critical systems - ISARCS, QoSA-ISARCS '11, P23
   Wang YX, 2008, INT J COGN INFORM NA, V2, P100, DOI 10.4018/jcini.2008010108
   Wegrzynowicz P, 2013, FED CONF COMPUT SCI, P1571
   WENDEHALS L, 2003, P ICSE WORKSH DYN AN, P29
   Wendehals L., 2006, INT WORKSHOP DYNAMIC, P33
NR 64
TC 25
Z9 35
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2014
VL 26
IS 12
BP 1233
EP 1266
DI 10.1002/smr.1674
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX0NS
UT WOS:000346649500009
DA 2024-07-18
ER

PT J
AU Pérez-Castillo, R
   Caivano, D
   Piattini, M
AF Perez-Castillo, Ricardo
   Caivano, Danilo
   Piattini, Mario
TI Ontology-based similarity applied to business process clustering
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE conceptual modeling; ontologies; clustering; classification; and
   association rules; business process; empirical studies
ID WEB
AB Reverse engineering of business process enables business process to be discovered and retrieved from existing information systems, which embed many business rules that are not available anywhere else. These techniques are especially useful when business process models are unavailable, outdated, or misaligned because of uncontrolled maintenance. Reverse engineering techniques obtain well-designed business processes, but these are often retrieved with harmful quality faults as a consequence of the abstraction. Clustering techniques are then applied to reduce these quality faults and improve the understandability and modifiability of business process models. Regrettably, the most challenging concern is how to determine the similarity between two business activities to be clustered. Formal ontologies help to represent the essential concepts and constraints of a universe of discourse and determine the similarity in accordance with the given ontology. This paper shows how to compute and use the ontology-based similarity within a clustering algorithm whose aim is to improve the quality of business process models previously obtained from legacy information systems by reverse engineering. The principal contribution of this paper is the usage of an ontology-based similarity function and its application to 43 business process models retrieved from four real-life information systems. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Perez-Castillo, Ricardo; Piattini, Mario] Univ Castilla La Mancha, E-13071 Ciudad Real, Spain.
   [Caivano, Danilo] Univ Bari, Dept Informat, I-70126 Bari, Italy.
C3 Universidad de Castilla-La Mancha; Universita degli Studi di Bari Aldo
   Moro
RP Pérez-Castillo, R (corresponding author), Univ Castilla La Mancha, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM ricardo.pdelcastillo@uclm.es
RI Piattini, Mario/F-6271-2013; Pérez-Castillo, Ricardo/A-3033-2011
OI Piattini, Mario/0000-0002-7212-8279; Pérez-Castillo,
   Ricardo/0000-0002-9271-3184; Caivano, Danilo/0000-0001-5719-7447
FU MOTERO (JCCM); MOTERO (FEDER) [PEII11-0366-9449]; GEODAS-BC project
   (Ministerio de Economia y Competitividad); GEODAS-BC project
   (FondoEuropeo de Desarrollo Regional FEDER) [TIN2012-37493-C03-01];
   University of Bari
FX This work was supported by the R&D projects MOTERO (JCCM and FEDER,
   PEII11-0366-9449) and GEODAS-BC project (Ministerio de Economia y
   Competitividad and FondoEuropeo de Desarrollo Regional FEDER,
   TIN2012-37493-C03-01). Finally, this work was partially supported by the
   University of Bari.
CR Batet M, 2011, AI COMMUN, V24, P291, DOI 10.3233/AIC-2011-0501
   Cai ZG, 2009, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2009.5306291
   Castellanos M., 2009, Handbook of research on business process modeling, P456, DOI DOI 10.4018/978-1-60566-288-6.CH021
   Cheng Y, 2008, THIRD 2008 INTERNATIONAL CONFERENCE ON CONVERGENCE AND HYBRID INFORMATION TECHNOLOGY, VOL 2, PROCEEDINGS, P128, DOI 10.1109/ICCIT.2008.232
   Cohens WW, 2003, P IJCAI 2003 WORKSH
   d'Amato C, 2012, ANN MATH ARTIF INTEL, V65, P83, DOI 10.1007/s10472-012-9309-7
   Deselaers T, 2011, PROC CVPR IEEE, P1777, DOI 10.1109/CVPR.2011.5995474
   Di Francescomarino C, 2009, EUR CON SFTWR MTNCE, P139, DOI 10.1109/CSMR.2009.26
   Dijkman R, 2011, INFORM SYST, V36, P498, DOI 10.1016/j.is.2010.09.006
   Ekelands I, 1976, CONVEX ANAL 9 VARIAT
   Grabar N, 2012, APPL ONTOL, V7, P375, DOI 10.3233/AO-2012-0119
   Guizzardi G, 2008, APPL ONTOL, V3, P1, DOI 10.3233/AO-2008-0049
   Hans J, 2006, DATA MINING CONCEPTS
   Heuvels W-Jvd, 2006, ALIGNING MODERN BUSI
   Hliaoutakis A, 2006, INT J SEMANT WEB INF, V2, P55, DOI 10.4018/jswis.2006070104
   Jeston J., 2008, BUSINESS PROCESS MAN, P469
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Lewis GA, 2010, RES AGENDA SERVICE O, P40
   Lord PW, 2003, BIOINFORMATICS, V19, P1275, DOI 10.1093/bioinformatics/btg153
   McGuinness D. L., 2004, OWL WEB ONTOLOGY LAN, DOI DOI 10.2004-03
   Melniks S, 2002, DAT ENG 2002 P 18 IN
   Mirkins B, 2005, CLUSTERING DATA MINI
   Motahari-Nezhad HR, 2011, VLDB J, V20, P417, DOI 10.1007/s00778-010-0203-9
   Mustaphas NB, 2010, P 2010 ACM S APPL CO, P1438
   Noys NF, 2001, ONTOLOGY DEV
   Paradauskas B., 2006, Information Technology and Control, V35, P214
   Perez-Castillo R., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P578, DOI 10.1109/ICSM.2011.6080834
   Pérez-Castillo R, 2011, INT SYMP EMP SOFTWAR, P453, DOI 10.1109/ESEM.2011.64
   Pérez-Castillo R, 2011, INFORM SOFTWARE TECH, V53, P1023, DOI 10.1016/j.infsof.2011.05.006
   Pérez-Castillo R, 2011, ENTERP INF SYST-UK, V5, P301, DOI 10.1080/17517575.2011.587545
   Pérez-Castillo R, 2011, LECT NOTES BUS INF P, V66, P201
   Perez-Castillos R, 2012, EXPT RESULTS CLUSTER
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sanchez Gonzalezs L, 2012, EV ASS SOFTW ENG EAS
   Smiths B, 2004, ONTOLOGY PHILOS COMP
   Studer R, 1998, DATA KNOWL ENG, V25, P161, DOI 10.1016/S0169-023X(97)00056-6
   The Standish Group, 2010, MOD CLEAR PATHW SUC
   TVERSKY A, 1977, PSYCHOL REV, V84, P327, DOI 10.1037/h0026750
   van der Aalst W, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P235, DOI 10.1002/0471741442.ch10
   Weske M., 2007, Business Process Management: Concepts, Languages, Architectures, P368
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
NR 41
TC 4
Z9 4
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2014
VL 26
IS 12
BP 1128
EP 1149
DI 10.1002/smr.1652
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX0NS
UT WOS:000346649500004
OA Bronze
DA 2024-07-18
ER

PT J
AU Alshayeb, M
   Al-Jamimi, H
   Elish, MO
AF Alshayeb, Mohammad
   Al-Jamimi, Hamdi
   Elish, Mahmoud O.
TI Empirical taxonomy of refactoring methods for aspect-oriented
   programming
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE aspect-oriented programming; refactoring; refactoring taxonomy;
   refactoring classification; software metrics
ID CODE
AB Refactoring improves software quality by improving the design of existing code through changing its internal structure while preserving its behavior. Improving one quality attribute may impair other quality attributes. A number of refactoring methods were proposed specifically for aspect-oriented systems. However, there are no guidelines to help aspect-oriented software designer decide which refactoring methods to apply to optimize a software system with regard to certain design goals. In this paper, we propose a taxonomy/classification of refactoring methods for aspect-oriented programming based on their measurable effect on software quality attributes using six open-source aspect-oriented software systems. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Alshayeb, Mohammad; Al-Jamimi, Hamdi; Elish, Mahmoud O.] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
EM alshayeb@kfupm.edu.sa
RI Al-Jamimi, Hamdi A./G-5734-2016; Al-Jamimi, Hamdi/AAJ-5328-2021;
   Alshayeb, Mohammad/B-5941-2015; Elish, Mahmoud/I-8178-2018
OI Al-Jamimi, Hamdi/0000-0002-5100-1869; Alshayeb,
   Mohammad/0000-0001-7950-0099; Elish, Mahmoud/0000-0002-2767-0501
FU King Fahd University of Petroleum and Minerals [IN090015]
FX The authors acknowledge the support of King Fahd University of Petroleum
   and Minerals. This work is done under IN090015.
CR Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   Anbalagan P, 2006, ACM SIGSOFT SOFTWARE, V31, P1
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 2009, AJATO ASPECTJ ASSESS
   [Anonymous], P 1 WORKSH ASP REV E
   Barbacci M., 1995, CMUSEI95TR021
   Bartolomei Thiago T., 2006, P 3 INT WORKSH SOFTW
   Bhatti S.N., 2005, SIGSOFT SOFTW ENG NO, V30, P1
   Binkley D, 2005, PROC IEEE INT CONF S, P27
   Binkley D, 2006, IEEE T SOFTWARE ENG, V32, P698, DOI 10.1109/TSE.2006.95
   Bradley JT, 2003, CS03108 COL STAT U
   Chidamber SR, 1994, T SOFTWARE ENG, V20, P467
   Cole L., 2005, Proc. 4th ACM International Conference on Aspect-Oriented Software Development (AOSD), P123
   Elish K, ARABIAN J S IN PRESS
   Feremans L, 2005, THESIS VRIJE U BRUSS
   Filman R., 2004, ASPECT ORIENTED SOFT
   Fowler M, 2000, REFACTORING IMPROVIN, P464
   Gélinas JF, 2006, J OBJECT TECHNOL, V5, P97
   Hanenberg S, 2004, P 4 ANN INT C OBJ OR, P19
   Hannemann J., 2006, WORKSH LINK ASP TECH
   HANNEMANN J, 2005, P 4 INT C ASP OR SOF, P135
   IEEE, 1990, 610121990IEEE
   Iwamoto M., 2003, 4 AOSD MOD UML WORKS, P18
   Kerievsky J., 2004, REFACTORING PATTERNS
   Kulesza U, 2006, P 22 IEEE INT C SOFT
   Kvale Axel Anders, 2005, P 2005 ACM S APPL CO
   Laddad R., 2003, ASPECTJ ACTION PRACT
   Laddad R., 2008, ASPECT ORIENTED REFA
   Madeyski L, 2007, IET SOFTW, V1, P180, DOI 10.1049/iet-sen:20060071
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Monteiro M., 2005, Proceedings of the 4th international conference on Aspect-oriented software development, P111
   Monteiro M.P., 2006, Towards a Catalogue of Refactorings and Code Smells for AspectJ, P45
   MONTEIRO MP, 2005, THESIS U MINHO PORTU
   MONTEIRO MP, 2004, UMDIGECSD200402
   Monteiro MP, 2005, P 21 IEEE INT C SOFT
   Neto LC, 2004, THESIS U FEDERAL PER
   Pataki N, 2006, P 10 ECOOP WORKSH QU
   Ronningen E., 2003, Increasing readability with Aspect-Oriented Programming: Restructuring an object-oriented system with aspects
   Rura S, 2004, 3 INT C GEN PROGR CO
   Rura S, 2003, THESIS WILLIAMS COLL
   Sant'Anna Claudio, 2008, International Journal of Agent-Oriented Software Engineering, V2, P34, DOI 10.1504/IJAOSE.2008.016799
   Sant'Anna CN, 2003, P BRAZ S SOFTW ENG P
   Srivisut K, 2007, P 6 IEEE ACIS INT C
   Srivisut K, 2007, P 31 ANN INT COMP SO
   Tabbasum H, 2008, INT C EM TECHN IEEE
   Tonella P, 2005, IEEE T SOFTWARE ENG, V31, P819, DOI 10.1109/TSE.2005.115
   TSANG S. L., 2004, P 7 IEEE INT S OBJ O
   van Deursen A, 2004, P 1 INT WORKSH REF A
   Wloka J, 2005, P WORKSH LINK ASP TE
   Wloka J.HirschfeldR, 2008, P AOSD 08
   Zakaria A. A., 2003, P WORKSH ASP OR MOD
   Zhao J, 2002, Technical Report SE- 136-25
   ZHAO J, 2004, P 10 INT SOFTW METR
NR 55
TC 2
Z9 3
U1 0
U2 4
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2013
VL 25
IS 1
BP 1
EP 25
DI 10.1002/smr.544
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 075UF
UT WOS:000313911600001
DA 2024-07-18
ER

PT J
AU Di Martino, S
   Fasolino, AR
   Starace, LLL
   Tramontana, P
AF Di Martino, Sergio
   Fasolino, Anna Rita
   Starace, Luigi Libero Lucio
   Tramontana, Porfirio
TI GUI testing of Android applications: Investigating the impact of the
   number of testers on different exploratory testing strategies
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE Android applications; capture and replay; exploratory testing; GUI
   testing
AB Graphical user interface (GUI) testing plays a pivotal role in ensuring the quality and functionality of mobile apps. In this context, exploratory testing (ET), a distinctive methodology in which individual testers pursue a creative, and experience-based approach to test design, is often used as an alternative or in addition to traditional scripted testing. Managing the exploratory testing process is a challenging task that can easily result either in wasteful spending or in inadequate software quality, due to the relative unpredictability of exploratory testing activities, which depend on the skills and abilities of individual testers. A number of works have investigated the diversity of testers' performance when using ET strategies, often in a crowdtesting setting. These works, however, investigated ET effectiveness in detecting bugs, and not in scenarios in which the goal is to generate a re-executable test suite, as well. Moreover, less work has been conducted on evaluating the impact of adopting different exploratory testing strategies. As a first step toward filling this gap in the literature, in this work, we conduct an empirical evaluation involving four open-source Android apps and 20 masters students that we believe can be representative of practitioners partaking in exploratory testing activities. The students were asked to generate test suites for the apps using a capture and replay tool and different exploratory testing strategies. We then compare the effectiveness, in terms of aggregate code coverage that different-sized groups of students using different exploratory testing strategies may achieve. Results provide deeper insights into code coverage dynamics to project managers interested in using exploratory approaches to test simple Android apps, on which they can make more informed decisions.
   How many testers should be recruited for exploratory GUI testing of Android apps using capture and replay tools? This work aims to support project managers in this decision, providing insights on the effectiveness of the test suites generated by different-sized groups of testers using different exploratory strategies. image
C1 [Di Martino, Sergio; Fasolino, Anna Rita; Starace, Luigi Libero Lucio; Tramontana, Porfirio] Univ Napoli Federico II, Dept Elect Engn & Informat Technol DIETI, Naples, Italy.
   [Starace, Luigi Libero Lucio] Univ Napoli Federico II, Naples, Italy.
C3 University of Naples Federico II; University of Naples Federico II
RP Starace, LLL (corresponding author), Univ Napoli Federico II, Naples, Italy.
EM luigiliberolucio.starace@unina.it
RI Fasolino, Anna Rita/V-4582-2019; Starace, Luigi Libero
   Lucio/ADG-3293-2022
OI Fasolino, Anna Rita/0000-0001-7116-019X; Starace, Luigi Libero
   Lucio/0000-0001-7945-9014; Tramontana, Porfirio/0000-0003-3264-185X
FU ENACTEST Project (European iNnovation AllianCe for TESting educaTion)-
   ERASMUS-EDU-2021-PI-ALL-INNO [PE0000013]; PNRR MUR Project FAIR (Future
   Artificial Intelligence Research) [101055874, 2022-2025]; ENACTEST
   Project (European iNnovation AllianCe)
FX This work was partially funded by the PNRR MUR Project FAIR (Future
   Artificial Intelligence Research) under the number PE0000013 and by the
   ENACTEST Project (European iNnovation AllianCe for TESting educaTion)-
   ERASMUS-EDU-2021-PI-ALL-INNO under the number 101055874, 2022-2025.
CR Amalfitano D, 2017, J SYST SOFTWARE, V125, P322, DOI 10.1016/j.jss.2016.12.017
   Andersson C, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P174, DOI 10.1109/ISESE.2003.1237976
   Andrews James H., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P19, DOI 10.1109/ASE.2008.12
   Aniche M., 2021, IEEE Trans Softw Eng, V2021
   [Anonymous], 2022, Munchlife: A munchkin level counter for android-github repository
   [Anonymous], 2022, Trolly-f-droid
   [Anonymous], 2022, Utest-the professional network for testers
   [Anonymous], 2022, Simply do-f-droid
   [Anonymous], 2022, Emma reference manual
   [Anonymous], 2022, Release faster, with confidence-applause
   [Anonymous], 2022, Data.ai state of mobile 2022
   [Anonymous], 2022, Create ui tests with espresso test recorder
   [Anonymous], 2022, Emma: a free java code coverage tool
   [Anonymous], 2022, Robotium: User scenario testing for android-github repository
   [Anonymous], 2022, Tippy tipper (tip calculator)-github repository
   [Anonymous], 2022, F-Droid-Free and Open Source Android App Repository
   [Anonymous], 2022, Mooctest
   [Anonymous], 2022, Baidu crowd worker
   [Anonymous], 2022, Applause customer stories
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P497, DOI 10.1109/TSE.2011.44
   Bach J., 2007, The testing practitioner
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Bourque Pierre, 2004, IEEE Computer Society, Angela Burgess, P25
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Chen ZY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P272, DOI 10.1145/2591062.2591153
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Ciolkowski M, 2004, EUROMICRO CONF PROC, P354, DOI 10.1109/EURMIC.2004.1333390
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cui Q., 2017, Multi-objective crowd worker selection in crowdsourced testing, P218
   Cui Q, 2017, P INT COMP SOFTW APP, P75, DOI 10.1109/COMPSAC.2017.265
   Di Martino Sergio, 2023, Zenodo, DOI 10.5281/ZENODO.8043897
   Di Martino S, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1754
   Fraser G, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P18, DOI 10.1109/IWAST.2009.5069037
   Ge X., 2022, IEEE Trans Softw Eng, V2022, P1
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hosseini M, 2014, INT CONF RES CHAL
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Itkonen J, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P82, DOI 10.1109/ISESE.2005.1541817
   Itkonen J, 2014, EMPIR SOFTW ENG, V19, P303, DOI 10.1007/s10664-013-9266-8
   Itkonen J, 2013, IEEE T SOFTWARE ENG, V39, P707, DOI 10.1109/TSE.2012.55
   Kamangar ZU, 2019, PROCEEDINGS OF 2019 8TH INTERNATIONAL CONFERENCE ON SOFTWARE AND INFORMATION ENGINEERING (ICSIE 2019), P15, DOI 10.1145/3328833.3328838
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kamsties E., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P362
   Kaner Cem., 2008, A Tutorial in Exploratory Testing
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mao K, 2017, IEEE INT CONF AUTOM, P16, DOI 10.1109/ASE.2017.8115614
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   mturk, 2022, Amazon mechanical turk
   Nielsen J., 1992, CHI '92 Conference Proceedings. ACM Conference on Human Factors in Computing Systems. Striking a Balance, P373, DOI 10.1145/142750.142834
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sears A, 1997, INT J HUM-COMPUT INT, V9, P213, DOI 10.1207/s15327590ijhc0903_2
   Testin, 2022, Testin
   Tramontana P, 2019, SOFTWARE QUAL J, V27, P149, DOI 10.1007/s11219-018-9418-6
   van der Heiden G., 2018, Market guide for application crowdtesting services
   Wang J., 2020, ACM Trans. Softw. Eng. Methodol. (TOSEM), V29, P1
   Wang J., 2019, Characterizing crowds to better optimize worker recommendation in crowdsourced testing
   Wang J., 2022, ACM Trans Softw Eng Methodol, V31
   Wang JJ, 2022, IEEE T SOFTWARE ENG, V48, P3131, DOI 10.1109/TSE.2021.3081171
   Wang JJ, 2020, PROC INT CONF SOFTW, P1535, DOI 10.1145/3377811.3380380
   Wang J, 2019, PROC INT CONF SOFTW, P912, DOI 10.1109/ICSE.2019.00097
   Wang JJ, 2019, INFORM SOFTWARE TECH, V110, P139, DOI 10.1016/j.infsof.2019.03.003
   Wang YH, 2022, COMMUN ACM, V65, P64, DOI 10.1145/3490698
   Whittaker J. A., 2009, Exploratory software testing: tips, tricks, tours, and techniques to guide test design
   Wilcoxon Frank, 1992, BREAKTHROUGHS STAT, P196, DOI [DOI 10.1007/978-1-4612-4380-9_16, 10.1007/978-1-4612-4380-9_16, DOI 10.1007/978-1-4612-4380-9]
   Wood M, 1997, LECT NOTES COMPUT SC, V1301, P262, DOI 10.1145/267896.267915
   Xie M, 2017, PROC INT SYMP SOFTW, P316, DOI 10.1109/ISSRE.2017.25
   Xie M, 2017, PROC IEEE ACM INT C, P192, DOI 10.1109/ICSE-C.2017.112
   Xie Q, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P159
   Zhang Xiao-Fang, 2018, Journal of Software, V29, P69, DOI 10.13328/j.cnki.jos.005377
   Zhong Y, 2023, FRONT COMPUT SCI-CHI, V17, DOI 10.1007/s11704-022-1658-8
NR 71
TC 1
Z9 1
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 DEC 11
PY 2023
DI 10.1002/smr.2640
EA DEC 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR1B3
UT WOS:001120084900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Xiao, JM
   Xu, ZP
   Zhang, DH
   Chen, SP
   Liu, CY
   Feng, ZY
   Fan, GD
   Ouyang, CY
AF Xiao, Jianmao
   Xu, Zhipeng
   Zhang, Donghua
   Chen, Shiping
   Liu, Chenyu
   Feng, Zhiyong
   Fan, Guodong
   Ouyang, Chuying
TI Modeling and exploring the evolution of the mobile software ecosystem:
   How far are we?
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE community mining; evolution events; evolution prediction; mobile
   software ecosystem
AB The health of mobile software ecosystems is closely related to the interests of software developers, end-users, and stakeholders. Therefore, it is crucial to maintain the mobile software ecosystem healthy and functioning. Researchers have done considerable research on mobile software ecosystems like Android and iOS. However, the evolution laws implicit in mobile software ecosystems have not attracted widespread attention. This paper proposes a research framework for investigating the evolution process and influencing factors of mobile software ecosystems based on community mining. Firstly, we mine the evolving ecosystem from many mobile software projects based on a community detection algorithm. Then we analyze the evolution process of the ecosystem by identifying evolution events in different periods. Furthermore, we utilize the multinomial logistics regression model to analyze the relevant indicators and summarize the crucial factors affecting the evolution. Meanwhile, by training the long short term memory (LSTM) model to predict evolution events, our prediction accuracy can reach 75%. This work can be used to maintain and improve the healthy operations of mobile software ecosystems.
   This paper proposes a framework for investigating the evolution process and influencing factors of mobile software ecosystems based on community mining. With the help of our research findings, ecosystem managers can make targeted improvements to maintain the healthy operation of the ecosystem. image
C1 [Xiao, Jianmao; Liu, Chenyu] Jiangxi Normal Univ, Sch Software, Nanchang, Peoples R China.
   [Xu, Zhipeng; Zhang, Donghua] Jiangxi Normal Univ, Sch Digital Ind, Shangrao, Peoples R China.
   [Chen, Shiping] CSIRO Data61, Sydney, NSW, Australia.
   [Feng, Zhiyong; Fan, Guodong] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Ouyang, Chuying] Jiangxi Normal Univ, Dept Phys, Nanchang, Jiangxi, Peoples R China.
   [Xiao, Jianmao] Jiangxi Normal Univ, Sch Software, Nanchang 330022, Peoples R China.
C3 Jiangxi Normal University; Jiangxi Normal University; Commonwealth
   Scientific & Industrial Research Organisation (CSIRO); Tianjin
   University; Jiangxi Normal University; Jiangxi Normal University
RP Xiao, JM (corresponding author), Jiangxi Normal Univ, Sch Software, Nanchang 330022, Peoples R China.
EM jm_xiao@jxnu.edu.cn
RI Wang, YUJIE/JXY-8442-2024; Yao, Chen/JVD-6226-2023; su,
   lin/KHC-5034-2024; li, tao/JVO-9006-2024; Zhao, Xuan/JMR-2135-2023;
   Yang, Yifan/JTV-1487-2023; Wang, Siyi/JNT-2690-2023; chen,
   minghui/KFR-8832-2024; Zhang, Lu/KHE-5879-2024; Feng,
   Zhi-Yong/I-7541-2016; Chen, Yang/KHD-8849-2024; zhang,
   yan/KHC-3163-2024; li, rui/JVM-8999-2024; li, cheng/KCZ-0615-2024; chen,
   xian/KHW-2227-2024; Zhao, Hang/KCL-7278-2024; lin, yuan/JXL-9592-2024;
   ren, jun/KHG-7717-2024; zhang, hao/KEJ-2291-2024; Zhang,
   Wenbin/JXX-8070-2024; Sun, Jia/JXM-0311-2024; liu, qi/KHC-7509-2024; Yu,
   Yue/JWP-9103-2024; Liu, Yu/KFS-0769-2024; Yuan, Yi/KGL-5178-2024; guo,
   yi/KHC-4669-2024; li, yuanfang/KHV-1697-2024; Li, Xintong/KHD-6915-2024;
   YE, Chen/KFR-3858-2024; Li, Hongbo/KHV-4191-2024; Li,
   YiXue/JRW-6306-2023; zhu, hao/KHW-3813-2024; wang, wang/KGW-2828-2024;
   zhao, hang/JVM-8270-2024; li, jing/KHC-8303-2024; zhang,
   xu/JXX-7692-2024; FENG, X/JPL-4188-2023; liu, qi/KFA-4047-2024; Ling,
   Li/JYO-7043-2024; Chen, Shiping/B-7492-2011
OI Li, Hongbo/0000-0003-4495-0756; Chen, Shiping/0000-0002-4603-0024
FU Jiangxi Provincial Natural Science Foundation [20224BAB212015]; National
   Natural Science Foundation of China [51962010]; Foundation of Jiangxi
   Educational Committee [GJJ210338]; National Natural Science Key
   Foundation of China [61832014, 62032016]
FX This work is supported by the Jiangxi Provincial Natural Science
   Foundation under grant no. 20224BAB212015, the National Natural Science
   Foundation of China under grant no. 51962010, the Foundation of Jiangxi
   Educational Committee under grant no. GJJ210338, and the National
   Natural Science Key Foundation of China under grant nos. 61832014 and
   62032016.
CR [Anonymous], 2009, Reverse engineering software ecosystems
   Beelen L, 2022, SCI COMPUT PROGRAM, V214, DOI 10.1016/j.scico.2021.102733
   Belo I, 2021, INFORMATION, V12, DOI 10.3390/info12060240
   Berger-Wolf Tanya Y, 2006, P 12 ACM SIGKDD INT, P523, DOI [DOI 10.1145/1150402.1150462, 10.1145/1150402.1150462]
   Birrer S., 2021, Lenstronomy II: a gravitational lensing software ecosystem, V6
   Blincoe K, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P202, DOI 10.1109/MSR.2015.26
   Blondel VD, 2008, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2008/10/P10008
   Cai HP, 2020, 2020 IEEE/ACM 7TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS, MOBILESOFT, P31, DOI 10.1145/3387905.3388612
   Cheng C, 2017, J COMPUT SCI TECH-CH, V32, P396, DOI 10.1007/s11390-017-1728-9
   [范国栋 Fan Guodong], 2022, [计算机学报, Chinese Journal of Computers], V45, P2528
   Fontao A, 2017, 2017 IEEE/ACM JOINT 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND 11TH WORKSHOP ON DISTRIBUTED SOFTWARE DEVELOPMENT, SOFTWARE ECOSYSTEMS AND SYSTEMS-OF-SYSTEMS( JSOS 2017), P55, DOI 10.1109/JSOS.2017.10
   Fontao AD, 2017, LECT NOTES COMPUT SC, V10221, P208, DOI 10.1007/978-3-319-56856-0_16
   Fontao AD, 2015, P INT COMP SOFTW APP, P653, DOI 10.1109/COMPSAC.2015.121
   He DX, 2015, AAAI CONF ARTIF INTE, P130
   Held P, 2016, 2016 THIRD EUROPEAN NETWORK INTELLIGENCE CONFERENCE (ENIC 2016), P61, DOI 10.1109/ENIC.2016.16
   Hutto C., 2014, P INT AAAI C WEB SOC, V8, P216, DOI [DOI 10.1609/ICWSM.V8I1.14550, 10.1609/icwsm.v8i1.14550]
   Jansen S, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106219
   Leskovec J., 2012, NIPS, V25, P539, DOI DOI 10.5555/2999134.2999195
   Leskovec J, 2016, ACM T INTEL SYST TEC, V8, DOI 10.1145/2898361
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Ma WWY, 2017, PROC INT CONF SOFTW, P381, DOI 10.1109/ICSE.2017.42
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Massanori Daniel, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P399, DOI 10.1145/3422392.3422445
   Menard S, 2000, AM STAT, V54, P17, DOI 10.2307/2685605
   Messerschmitt DG, 2003, SOFTWARE ECOSYSTEM: UNDERSTANDING AN INDISPENSABLE TECHNOLOGY AND INDUSTRY, P1
   Phan Xuan-Hieu., 2007, GIBBSLDA ACC IMPLEME
   Qi GJ, 2012, PROC INT CONF DATA, P534, DOI 10.1109/ICDE.2012.77
   [齐晴 Qi Qing], 2020, [计算机研究与发展, Journal of Computer Research and Development], V57, P513
   Rosvall M, 2008, P NATL ACAD SCI USA, V105, P1118, DOI 10.1073/pnas.0706851105
   Schueller W, 2022, SCI DATA, V9, DOI 10.1038/s41597-022-01819-z
   Steglich C., 2020, How do business factors affect developers in mobile software ecosystems?, P1
   Su MY, 2018, 2018 16TH IEEE INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP, 16TH IEEE INT CONF ON PERVAS INTELLIGENCE AND COMP, 4TH IEEE INT CONF ON BIG DATA INTELLIGENCE AND COMP, 3RD IEEE CYBER SCI AND TECHNOL CONGRESS (DASC/PICOM/DATACOM/CYBERSCITECH), P397, DOI 10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.00079
   Sun Y, 2010, P 8 WORKSH MIN LEARN, P137, DOI DOI 10.1145/1830252.1830270
   Tan J, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2319
   Vandewalle RC, 2021, INT J GEOGR INF SCI, V35, P2168, DOI 10.1080/13658816.2020.1831514
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Xiao JM, 2020, LECT NOTES COMPUT SC, V12571, P386, DOI 10.1007/978-3-030-65310-1_27
   Xiao JM, 2020, P IEEE I C SERV COMP, P264, DOI 10.1109/SCC49832.2020.00042
   [肖建茂 Xiao Jianmao], 2020, [计算机学报, Chinese Journal of Computers], V43, P2184
   Yang J., 2013, P 6 ACM INT C WEB SE, P587, DOI [DOI 10.1145/2433396.2433471, 10.1145/2433396.2433471]
   Yang J, 2013, IEEE DATA MINING, P1151, DOI 10.1109/ICDM.2013.167
   Yousef Zadeh Shooshtari A., 2020, Ph.D. Thesis
NR 42
TC 0
Z9 0
U1 1
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2023 OCT 11
PY 2023
DI 10.1002/smr.2627
EA OCT 2023
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U0LX0
UT WOS:001081817900001
OA Bronze
DA 2024-07-18
ER

PT J
AU Moghadam, IH
   Cinnéide, MO
   Sardarian, A
   Zarepour, F
AF Hemati Moghadam, Iman
   Cinneide, Mel O.
   Sardarian, Ali
   Zarepour, Faezeh
TI Model-based source code refactoring with interaction and visual cues
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE design exploration; interactive; model-based refactoring; search-based
   refactoring; visual cues
ID SOFTWARE; DESIGN; OPTIMIZATION; ALGORITHM
AB Refactoring source code involves the developer in a myriad of program detail that can obscure the design changes that they actually wish to bring about. On the other hand, refactoring a UML model of the code makes it easier to focus on the program design, but the burdensome task of applying the refactorings to the source code is left to the developer. In an attempt to obtain the advantages of both approaches, we propose a refactoring approach where the interaction with the developer takes place at the model level, but the actual refactoring occurs on the source code itself. We call this approach model-based source code refactoring and implement it in this paper using two tools: (1) Design-Imp enables the developer to use interactive search-based design exploration to create a UML-based desired design from an initial design extracted from the source code. It also provides visual cues to improve developer comprehension during the design-level refactoring process and to help the developer to discern between promising and poor refactoring solutions. (2) Code-Imp then refactors the original source so that it has the same functional behavior as the original program, and a design close to the one produced in the design exploration phase, that is, a design that has been confirmed as "desirable" by the developer. We evaluated our approach involving interaction and visual cues with industrial developers refactoring three Java projects, comparing it with an approach using interaction without visual cues and a fully automated approach. The results show that our approach yields refactoring sequences that are more acceptable both to the individual developer and to a set of independent expert refactoring evaluators. Furthermore, our approach removed more code smells and was evaluated very positively by the experiment participants.
C1 [Hemati Moghadam, Iman] Univ Twente, Formal Methods & Tools, Enschede, Netherlands.
   [Hemati Moghadam, Iman; Zarepour, Faezeh] Vali E Asr Univ Rafsanjan, Dept Comp Engn, Rafsanjan, Iran.
   [Cinneide, Mel O.] Natl Univ Ireland, Sch Comp Sci, Dublin, Ireland.
   [Sardarian, Ali] Univ Tehran, Fac New Sci & Technol, Tehran, Iran.
C3 University of Twente; Vali-e-Asr University of Rafsanjan; University
   College Dublin; University of Tehran
RP Moghadam, IH (corresponding author), Univ Twente, Formal Methods & Tools, Enschede, Netherlands.
EM iman.hematiMoghadam@utwente.nl
OI Hemati Moghadam, Iman/0000-0002-5478-9858
CR Abid C., 2020, 30 YEARS SOFTWARE RE
   Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   Alizadeh V, 2018, IEEE INT CONF AUTOM, P464, DOI [10.1145/3238147.3238217, 10.114513238147.3238217]
   [Anonymous], MOD BAS SOURC COD RE
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Baqais AAB, 2020, SOFTWARE QUAL J, V28, P459, DOI 10.1007/s11219-019-09477-y
   Bibiano A.C., 2019, INT SYMP EMP SOFTWAR, P1, DOI [DOI 10.1109/ESEM.2019.8870183, 10.1109/ESEM.2019.8870183, DOI 10.1109/esem.2019.8870183]
   Bjork RC., 2022, EXAMPLE OBJECT ORIEN
   Bourquin F, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P149
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Box G.E.P., 2005, STAT EXPERIMENTERS D
   Candela I, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2928268
   Cedrim D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P465, DOI 10.1145/3106237.3106259
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Eilertsen AM, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P237, DOI 10.1109/SANER50967.2021.00030
   Enckevort T.v., 2009, Proceedings of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications, P635, DOI DOI 10.1145/1639950.1639959
   Fernandes E, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P9, DOI 10.1109/IWoR.2019.00009
   Ferreira TN, 2017, INFORM SOFTWARE TECH, V90, P55, DOI 10.1016/j.infsof.2017.05.003
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Fourati R, 2011, STUD COMPUT INTELL, V364, P17
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Goldberg D.E., 1989, Genetic Algorithms in Search, Optimization, and Machine Learning
   Golubev Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1303, DOI 10.1145/3468264.3473924
   Haendler T., 2018, P 13 INT C SOFTW TEC, P413
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Hemati Moghadam I., 2014, THESIS U COLL DUBLIN
   Jensen AC., 2010, P 12 ANN C GEN EV CO, P1341
   Kessentini M, 2013, SOFTWARE QUAL J, V21, P551, DOI 10.1007/s11219-012-9187-6
   Kessentini W, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P101, DOI 10.1145/3239372.3239375
   Kessentini W, 2019, INFORM SOFTWARE TECH, V106, P49, DOI 10.1016/j.infsof.2018.09.003
   Kim J, 2016, PROC INT CONF SOFTW, P1145, DOI 10.1145/2884781.2884802
   Kuehl R.O., 2000, Design of experiments: statistical principles of research designand analysis, V2nd
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Mäntylá MV, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P277, DOI 10.1109/ISESE.2005.1541837
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer MW, 2016, EMPIR SOFTW ENG, V21, P2503, DOI 10.1007/s10664-015-9414-4
   Mkaouer W, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1263, DOI 10.1145/2576768.2598366
   Moghadam IH, 2021, IEEE ACCESS, V9, P86698, DOI 10.1109/ACCESS.2021.3086689
   Moghadam IH, 2012, EUR CON SFTWR MTNCE, P43, DOI 10.1109/CSMR.2012.15
   Mohan Michael, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0046-4
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   O Cinn?ide M., 2016, P 1 INT WORKSH SOFTW, P9
   O'Keeffe M., 2003, PPPJ 03, P59, DOI [10.1145/957289.957308, DOI 10.1145/957289.957308]
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Ouni A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1843
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Pizka M, 2004, SERP'04: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P846
   Ramírez A, 2019, IEEE T SOFTWARE ENG, V45, P760, DOI 10.1109/TSE.2018.2803055
   Ramírez A, 2018, INFORM SCIENCES, V463, P92, DOI 10.1016/j.ins.2018.06.034
   Rebai S, 2022, IEEE T SOFTWARE ENG, V48, P1560, DOI 10.1109/TSE.2020.3024814
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   Santos JAM, 2018, J SYST SOFTWARE, V144, P450, DOI 10.1016/j.jss.2018.07.035
   Scanniello G, 2018, EMPIR SOFTW ENG, V23, P2695, DOI 10.1007/s10664-017-9591-4
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Shafiei N, 2020, 2020 6TH INTERNATIONAL CONFERENCE ON WEB RESEARCH (ICWR), P106, DOI [10.1109/ICWR49608.2020.9122271, 10.1109/icwr49608.2020.9122271]
   Sharma T, 2015, IEEE SOFTWARE, V32, P44, DOI 10.1109/MS.2015.105
   Simons Chris, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P47, DOI 10.1007/978-3-319-22183-0_4
   Simons C., 2011, THESIS U W ENGLAND
   Simons CL, 2012, IEEE T SYST MAN CY C, V42, P1797, DOI 10.1109/TSMCC.2012.2225103
   Simons CL, 2010, IEEE T SOFTWARE ENG, V36, P798, DOI 10.1109/TSE.2010.34
   Suny? G., 2001, LNCS, P134, DOI DOI 10.1007/3-540-45441-1_11
   Tempero E, 2017, COMMUN ACM, V60, P54, DOI 10.1145/3131873
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   Wang HZ, 2021, IEEE T SERV COMPUT, V14, P179, DOI 10.1109/TSC.2017.2787152
NR 78
TC 0
Z9 0
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2024
VL 36
IS 5
DI 10.1002/smr.2596
EA JUL 2023
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PW3G9
UT WOS:001027296000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Wu, YF
   Tong, Y
   Liu, A
   Zhao, L
   Zhang, XF
AF Wu, Yifan
   Tong, Yao
   Liu, An
   Zhao, Lei
   Zhang, Xiaofang
TI Mobile crowdsourced test report prioritization based on text and image
   understanding
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE clustering technique; mobile crowdsourced testing; prioritization
   technique; test report; textual descriptions
ID BUG REPORT DETECTION; PREDICTION; CLASSIFICATION; PRIORITY; MODEL
AB In the process of mobile crowdsourced testing, a large number of test reports are generated, which often consist of short text and rich image information. One of the critical issues is how to review these reports efficiently. Researchers have recently proposed clustering, classification, and prioritization techniques to solve this problem. However, existing studies directly use related technologies to text description and segment the text content without further understanding of the text content. By deeply digging into the text information and distinguishing it according to its actual meaning, the sentences described in the text can be categorized into two types: Describing abnormal system behavior and describing reproduction steps. This paper proposes a mobile crowdsourced test report prioritization technique to improve performance. First, we use a TextCNN trained on large-scale projects to distinguish the text descriptions of reports, then extract features from the text and screenshot information, respectively. Then we apply a clustering technique to gather similar reports. Finally, the inspection order is sampled from the clustering results. To validate our approach, we conduct experiments on six industrial crowdsourced projects. The results show that our method can detect all bugs faster in a limited time than existing prioritization methods, which can improve the bug reports review efficiency.
C1 [Wu, Yifan; Tong, Yao; Liu, An; Zhao, Lei; Zhang, Xiaofang] Soochow Univ, Sch Comp Sci & Technol, Suzhou, Peoples R China.
   [Zhang, Xiaofang] Soochow Univ, Sch Comp Sci & Technol, Suzhou 215006, Peoples R China.
C3 Soochow University - China; Soochow University - China
RP Zhang, XF (corresponding author), Soochow Univ, Sch Comp Sci & Technol, Suzhou 215006, Peoples R China.
EM xfzhang@suda.edu.cn
RI Tong, Yao/KPY-1291-2024
OI Zhang, Xiaofang/0000-0002-8667-0456
FU National Natural Science Foundation of China [62172202, 61772263,
   61772014]; Collaborative Innovation Center of Novel Software Technology
   and Industrialization; Natural Science Foundation of Jiangsu Province
   [BK20211307]; Youth Team on Interdisciplinary Research Soochoow
   University - Research on Subjectivity and Reasoning Theory in Artificial
   Intelligence [NH33714722]; Program of the Natural Science Foundation of
   Jiangsu Higher Education Institutions of China [22KJA520008]; Priority
   Academic Program Development of Jiangsu Higher Education Institutions
FX National Natural Science Foundation of China ,Grant/Award Numbers:
   62172202, 61772263,61772014; Collaborative Innovation Center of Novel
   Software Technology and Industrialization; Natural Science Foundation of
   Jiangsu Province, Grant/Award Number:BK20211307; NH33714722 Youth Team
   on Interdisciplinary Research Soochoow University - Research on
   Subjectivity and Reasoning Theory in Artificial Intelligence; Major
   Program of the Natural Science Foundation of Jiangsu Higher Education
   Institutions of China, Grant/Award Number:22KJA520008; Priority Academic
   Program Development of Jiangsu Higher Education Institutions
CR Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Ben Messaoud M, 2023, IEEE T RELIAB, V72, P846, DOI 10.1109/TR.2022.3193645
   Cai LZ, 2021, IEEE I C SQRS-C, P51, DOI 10.1109/QRS-C55045.2021.00018
   Chen H, 2021, IEEE INT C S Q R S, P888, DOI 10.1109/QRS54544.2021.00098
   Chen Y., 2015, Convolutional neural network for sentence classificationD
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Diab Mona., 2009, Proceedings of the Workshop on Multiword Expressions: Identification, Interpretation, Disambiguation and Applications, P17
   Ebrahimi N, 2019, INFORM SOFTWARE TECH, V113, P98, DOI 10.1016/j.infsof.2019.05.007
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Fazzini M, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141, DOI 10.1145/3213846.3213869
   Feng Y, 2016, IEEE INT CONF AUTOM, P202, DOI 10.1145/2970276.2970367
   Feng Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P225, DOI 10.1145/2786805.2786862
   Guo B, 2019, NEUROCOMPUTING, V363, P366, DOI 10.1016/j.neucom.2019.07.052
   Hao R, 2019, PROC INT CONF SOFTW, P900, DOI 10.1109/ICSE.2019.00096
   He T, 2016, IEEE T IMAGE PROCESS, V25, P2529, DOI 10.1109/TIP.2016.2547588
   Ilieva MG, 2005, LECT NOTES COMPUT SC, V3513, P392
   Isotani H, 2021, PROC IEEE INT CONF S, P535, DOI 10.1109/ICSME52107.2021.00054
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Joulin A., 2016, ARXIV PREPRINT ARXIV, V2, P427
   LaToza TD, 2016, IEEE SOFTWARE, V33, P74, DOI 10.1109/MS.2016.12
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Lazebnik S., 2006, P IEEE CVF C COMP VI, DOI [DOI 10.1109/CVPR.2006.68, 10.1109/CVPR.2006.68]
   Ledru Y, 2009, IEEE INT CONF AUTOM, P510, DOI 10.1109/ASE.2009.23
   Likas A, 2003, PATTERN RECOGN, V36, P451, DOI 10.1016/S0031-3203(02)00060-2
   Lin MJ, 2016, J SYST SOFTWARE, V121, P223, DOI 10.1016/j.jss.2016.02.022
   Liu D, 2022, IEEE T SOFTWARE ENG, V48, P1290, DOI 10.1109/TSE.2020.3017514
   Lowe DG, 2004, INT J COMPUT VISION, V60, P91, DOI 10.1023/B:VISI.0000029664.99615.94
   Ma J, 2019, J VIS COMMUN IMAGE R, V63, DOI 10.1016/j.jvcir.2019.102578
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   Mishra SK, 2022, PROCEEDINGS OF THE 2022 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'22), P1245, DOI 10.1145/3512290.3528843
   MURTAGH F, 1983, COMPUT J, V26, P354, DOI 10.1093/comjnl/26.4.354
   Neysiani BS, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106344
   Nowak E, 2006, LECT NOTES COMPUT SC, V3954, P490
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Shutova Ekaterina., 2010, P 23 INT C COMP LING, P1002
   Song Peng, 2019, 2019 International Conference on Computer Network, Electronic and Automation (ICCNEA). Proceedings, P229, DOI 10.1109/ICCNEA.2019.00052
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tan YS, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110567
   Thalheimer W., 2002, Work-Learning Research, P1, DOI DOI 10.1113/JPHYSIOL.2004.078915
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Umer Q, 2020, IEEE T RELIAB, V69, P1341, DOI 10.1109/TR.2019.2959624
   Umer Q, 2019, J SYST SOFTWARE, V155, P57, DOI 10.1016/j.jss.2019.05.026
   Umer Q, 2018, IEEE ACCESS, V6, P35743, DOI 10.1109/ACCESS.2018.2850910
   Wang JJ, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962584
   Wang JJ, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P83, DOI 10.1109/ICSE-SEIP.2017.8
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xiao GP, 2020, PROC INT SYMP SOFTW, P195, DOI 10.1109/ISSRE5003.2020.00027
   Xie Q, 2018, ASIA PAC SOFWR ENG, P416, DOI 10.1109/APSEC.2018.00056
   Yang Y., 2019, INT C DAT MIN BIG DA, P135
   Zainuddin N., 2014, OALIB, V1, P1
   Zhang T., 1996, BIRCH EFFICIENT DATA, V25, P103, DOI [DOI 10.1145/233269.233324, 10.1145/235968.233324]
   Zhang T, 2019, IEEE SOFTWARE, V36, P63, DOI 10.1109/MS.2017.377142400
   Zhang TL, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SMART CLOUD (SMARTCLOUD), P152, DOI 10.1109/SmartCloud.2016.33
   Zhang Xiao-Fang, 2018, Journal of Software, V29, P69, DOI 10.13328/j.cnki.jos.005377
NR 60
TC 0
Z9 0
U1 1
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2024
VL 36
IS 3
DI 10.1002/smr.2541
EA FEB 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KR8C4
UT WOS:000929317500001
DA 2024-07-18
ER

PT J
AU Cao, HC
   Li, S
   Zhou, YM
   Fan, M
   Zhao, XJ
   Tang, YT
AF Cao, Hongchen
   Li, Shuai
   Zhou, Yuming
   Fan, Ming
   Zhao, Xuejiao
   Tang, Yutian
TI Cheating your apps: Black-box adversarial attacks on deep learning apps
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE android; black-box attacks; deep learning apps
AB Deep learning is a powerful technique to boost application performance in various fields, including face recognition, image classification, natural language understanding, and recommendation system. With the rapid increase in the computing power of mobile devices, developers can embed deep learning models into their apps for building more competitive products with more accurate and faster responses. Although there are several works of adversarial attacks against deep learning models in apps, they all need information about the models' internals (i.e., structures and weights) or need to modify the models. In this paper, we propose an effective black-box approach by training substitute models to spoof the deep learning systems inside the apps. We evaluate our approach on 10 real-world deep-learning apps from Google Play to perform black-box adversarial attacks. Through the study, we find three factors that can affect the performance of attacks. Our approach can reach a relatively high attack success rate of 66.60% on average. Compared with other adversarial attacks on mobile deep learning models, in terms of the average attack success rates, our approach outperforms its counterparts by 27.63%.
C1 [Cao, Hongchen; Tang, Yutian] Nanjing Univ Sci & Technol, Nanjing, Peoples R China.
   [Cao, Hongchen] ShanghaiTech Univ, Sch Informat Sci & Technol, Shanghai, Peoples R China.
   [Li, Shuai] Hong Kong Polytech Univ, Dept Comp, Hongkong, Peoples R China.
   [Zhou, Yuming] Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Peoples R China.
   [Fan, Ming] Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Xian, Peoples R China.
   [Zhao, Xuejiao] Nanyang Technol Univ, Sch Comp Sci & Engn, Nanjing, Singapore.
C3 Nanjing University of Science & Technology; ShanghaiTech University;
   Hong Kong Polytechnic University; Nanjing University; Xi'an Jiaotong
   University; Nanyang Technological University
RP Tang, YT (corresponding author), Nanjing Univ Sci & Technol, Nanjing, Peoples R China.
EM csytang@ieee.org
RI Zhou, Yuming/GXO-5491-2022; Tang, Yutian/L-8327-2019
OI Tang, Yutian/0000-0001-5677-4564
FU Shanghai Pujiang Program, Science and Technology Commission of Shanghai
   Municipality [1PJ1410700]; National Natural Science Foundation of China
   [62202306]
FX This work is supported by Shanghai Pujiang Program, Science and
   Technology Commission of Shanghai Municipality No. 1PJ1410700, and
   National Natural Science Foundation of China No. 62202306.
CR [Anonymous], 2021, ImageNet
   [Anonymous], 2021, MINDSPORE
   Araujo A., 2019, CORR, P1
   Baluja S, 2018, AAAI CONF ARTIF INTE, P2687
   Caffe2, 2021, CAFFE2 MOB CAFFE2
   Cao H., 2021, ONLINE ARTEFACT
   Cisse M, 2017, PR MACH LEARN RES, V70
   CoreML, 2021, COR COREML
   Cui WY, 2020, IEEE IMAGE PROC, P648, DOI 10.1109/ICIP40778.2020.9191063
   Dai HJ, 2018, PR MACH LEARN RES, V80
   Dong JL, 2021, COMPUT NETW, V190, DOI 10.1016/j.comnet.2021.107956
   Dong YP, 2019, PROC CVPR IEEE, P7706, DOI 10.1109/CVPR.2019.00790
   Dong YP, 2018, PROC CVPR IEEE, P9185, DOI 10.1109/CVPR.2018.00957
   Firebase, 2021, FIR CLOUD VS ON DEV
   Flowdroid, 2021, SEC SOFTW ENG FLOWDR
   GAO X, 2019, APPL SCI, V9, P1
   Goodfellow I. J., 2015, 3 INT C LEARNING REP
   Google, 2021, GOOGL IM GOOGL
   He K., 2016, PROC CVPR IEEE, P770, DOI [10.1109/CVPR.2016.90, DOI 10.1109/CVPR.2016.90]
   HUANG G, 2017, PROC CVPR IEEE, P2261, DOI DOI 10.1109/CVPR.2017.243
   Huang YJ, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P101, DOI 10.1109/ICSE-SEIP52600.2021.00019
   Iandola Forrest N, 2016, SQUEEZENET ALEXNET L
   Jan STK, 2019, AAAI CONF ARTIF INTE, P962
   Kaggle, 2021, KAGGL DAT POK KAGGL
   Kaggle, 2021, KAGGL DAT ROAD KAGGL
   Kaggle, 2021, KAGGL DAT FRUIT KAGG
   Kaidi Xu, 2020, Computer Vision - ECCV 2020 16th European Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12350), P665, DOI 10.1007/978-3-030-58558-7_39
   Kim Hoki, 2020, ARXIV201001950
   Komkov S., 2019, CORR, P1
   Kumar C, 2020, AAAI CONF ARTIF INTE, V34, P11304
   Kurakin Alexey, 2017, INT C LEARN REPR
   Li YC, 2021, PROC INT CONF SOFTW, P263, DOI 10.1109/ICSE43902.2021.00035
   Liao FZ, 2018, PROC CVPR IEEE, P1778, DOI 10.1109/CVPR.2018.00191
   Liu YW, 2016, ADV METEOROL, V2016, DOI 10.1155/2016/4921616
   Ma NN, 2018, LECT NOTES COMPUT SC, V11218, P122, DOI 10.1007/978-3-030-01264-9_8
   Madry A., 2018, DEEP LEARNING MODELS, P1
   McIntosh A, 2019, EMPIR SOFTW ENG, V24, P562, DOI 10.1007/s10664-018-9629-2
   Mindspore, 2021, MINDSP LIT MINDS
   Mo Zhou, 2020, Computer Vision - ECCV 2020. 16th European Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12359), P781, DOI 10.1007/978-3-030-58568-6_46
   Oh SJ, 2017, IEEE I CONF COMP VIS, P1491, DOI 10.1109/ICCV.2017.165
   Pytorch, 2021, PYT CROSS PYT
   Pytorch, 2021, PYT MOB INF PYT
   Pytorch, 2021, PYT SGD PYT
   Pytorch, 2021, PYT MOB PYT
   Sandler M, 2018, PROC CVPR IEEE, P4510, DOI 10.1109/CVPR.2018.00474
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Soot, 2021, SOOT JAV OPT FRAM
   Sun L, 2018, CYBERSECURITY, V1, DOI 10.1186/s42400-018-0012-9
   Sun ZH, 2022, PLAN PRACT RES, V37, P35, DOI 10.1080/02697459.2021.1920724
   Szegedy Christian, 2015, IEEE C COMP VIS PATT, DOI [10.1109/cvpr.2015.7298594, DOI 10.1109/CVPR.2015.7298594]
   Takeda H., 2020, 2020 IEEE 9 GLOB C C, P709, DOI DOI 10.1109/GCCE50665.2020.9291873
   Tan TX, 2020, IEEE INFOCOM SER, P1947, DOI [10.1109/infocom41043.2020.9155476, 10.1109/INFOCOM41043.2020.9155476]
   Tensorflow, 2021, TENS LIT INF
   Tensorflow, 2021, TENS HUM TENS
   TensorFlow, 2021, TENS DAT
   Tramer Florian, 2018, P 7 INT C LEARN REPR
   Wang WX, 2021, PROC CVPR IEEE, P4759, DOI 10.1109/CVPR46437.2021.00473
   Wang X., 2019, ARXIV190906723
   Xu MW, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2125, DOI 10.1145/3308558.3313591
   Xu X., 2020, P IEEECVF C COMPUTER, P12304
   Yin X, 2019, PROC CVPR IEEE, P5697, DOI 10.1109/CVPR.2019.00585
   Yueru Li, 2020, Computer Vision - ECCV 2020. 16th European Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12373), P753, DOI 10.1007/978-3-030-58604-1_45
   Zhang HY, 2019, PR MACH LEARN RES, V97
   Zhang QY, 2022, PROCEEDINGS OF THE ACM WEB CONFERENCE 2022 (WWW'22), P3298, DOI 10.1145/3485447.3512148
   Zhang XH, 2021, INT J CONTROL, V94, P248, DOI 10.1080/00207179.2019.1590646
   Zhou MY, 2020, PROC CVPR IEEE, P231, DOI 10.1109/CVPR42600.2020.00031
   Zoran Daniel, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P9480, DOI 10.1109/CVPR42600.2020.00950
NR 67
TC 0
Z9 0
U1 0
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2024
VL 36
IS 4
DI 10.1002/smr.2528
EA JAN 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MU0E5
UT WOS:000905943300001
DA 2024-07-18
ER

PT J
AU Khan, HU
   Ali, F
   Nazir, S
AF Khan, Habib Ullah
   Ali, Farhad
   Nazir, Shah
TI Systematic analysis of software development in cloud computing
   perceptions
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE CC; cloud-based software; cloud computing; cloud deployment; cloud
   development; software engineering
ID RESOURCE-ALLOCATION; SERVICES; CHALLENGES; SIMULATION
AB Cloud computing is characterized as a shared computing and communication infrastructure. It encourages the efficient and effective developmental processes that are carried out in various organizations. Cloud computing offers both possibilities and solutions of problems for outsourcing and management of software developmental operations across distinct geography. Cloud computing is adopted by organizations and application developers for developing quality software. The cloud has the significant impact on utilizing the artificial complexity required in developing and designing quality software. Software developmental organization prefers cloud computing for outsourcing tasks because of its available and scalable nature. Cloud computing is the ideal choice utilized for development modern software as they have provided a completely new way of developing real-time cost-effective, efficient, and quality software. Tenants (providers, developers, and consumers) are provided with platforms, software services, and infrastructure based on pay per use phenomenon. Cloud-based software services are becoming increasingly popular, as observed by their widespread use. Cloud computing approach has drawn the interest of researchers and business because of its ability to provide a flexible and resourceful platform for development and deployment. To determine a cohesive understanding of the analyzed problems and solutions to improve the quality of software, the existing literature resources on cloud-based software development should be analyzed and synthesized systematically. Keyword strings were formulated for analyzing relevant research articles from journals, book chapters, and conference papers. The research articles published in (2011-2021) various scientific databases were extracted and analyzed for retrieval of relevant research articles. A total of 97 research publications are examined in this SLR and are evaluated to be appropriate studies in explaining and discussing the proposed topic. The major emphasis of the presented systematic literature review (SLR) is to identify the participating entities of cloud-based software development, challenges associated with adopting cloud for software developmental processes, and its significance to software industries and developers. This SLR will assist organizations, designers, and developers to develop and deploy user-friendly, efficient, effective, and real time software applications.
C1 [Khan, Habib Ullah; Ali, Farhad] Qatar Univ, Coll Business & Econ, Dept Accounting & Informat Syst, Doha, Qatar.
   [Nazir, Shah] Univ Swabi, Dept Comp Sci, Swabi, Pakistan.
C3 Qatar University
RP Khan, HU; Ali, F (corresponding author), Qatar Univ, Coll Business & Econ, Dept Accounting & Informat Syst, Doha, Qatar.
EM habib.khan@qu.edu.qa; farhadamk@gmail.com
RI ALI, FARHAD/ABP-3725-2022; Nazir, Shah/D-2020-2015; Khan,
   Habib/ISV-4411-2023; Khan, Habib Ullah/Q-7429-2016
OI ALI, FARHAD/0000-0001-8164-9511; Nazir, Shah/0000-0003-0126-9944; Khan,
   Habib Ullah/0000-0001-8373-2781
FU Qatar University [IRCC2021-010]
FX Qatar University, Grant/Award Number: IRCC2021-010
CR Akbar MA, 2022, MULTIMED TOOLS APPL, V81, P35571, DOI 10.1007/s11042-021-11245-9
   Akbar MA, 2020, APPL SOFT COMPUT, V95, DOI 10.1016/j.asoc.2020.106557
   Akerele O., 2017, STRATEGIC ENG CLOUD, P119
   Ali MM, 2017, CLUSTER COMPUT, V20, P2267, DOI 10.1007/s10586-017-0892-6
   Almeida A. D. O., 2017, The European Open Science Cloud: a new challenge for Europe, P1
   Almeida A, 2014, IEEE ACM INT SYMP, P315, DOI 10.1109/CCGrid.2014.25
   Alonso J, 2019, PROCEEDINGS OF 2019 3RD INTERNATIONAL CONFERENCE ON CLOUD AND BIG DATA COMPUTING (ICCBDC 2019), P43, DOI 10.1145/3358505.3358522
   Alshawish AM, 2020, IEEE POWER ENERG CON, DOI [10.1145/3436829.3436830, 10.1109/peci48348.2020.9064642]
   Altevogt P, 2011, WINT SIMUL C PROC, P3295, DOI 10.1109/WSC.2011.6148026
   Anand P., 2016, Proceedings of the International Conference on Ubiquitous Information Management and Communication, 2016 (IMCOM'16), P1
   Ardagna CA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2767005
   Ashraf A, 2015, INT CONF UTIL CLOUD, P341, DOI 10.1109/UCC.2015.54
   Bahsoon R, 2017, SOFTWARE ARCHITECTURE FOR BIG DATA AND THE CLOUD, P1, DOI 10.1016/B978-0-12-805467-3.00001-6
   Baryannis G., 2013, P 2013 INT WORKSH MU, P13
   Begel A, 2013, IEEE SOFTWARE, V30, P52, DOI 10.1109/MS.2013.13
   Benfenatki H, 2014, 2014 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCES ON WEB INTELLIGENCE (WI) AND INTELLIGENT AGENT TECHNOLOGIES (IAT), VOL 1, P13, DOI 10.1109/WI-IAT.2014.11
   Brennan SC, 2018, LANG POLICY-NETH, V17, P157, DOI 10.1007/s10993-017-9438-2
   Bruneo D., 2012, P 5 INT ICST C SIM T, P8
   Buyya R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241737
   Bykov S., 2011, P 2 ACM S CLOUD COMP, P1
   Cai JH, 2014, 2014 2ND INTERNATIONAL CONFERENCE ON SYSTEMS AND INFORMATICS (ICSAI), P293, DOI 10.1109/ICSAI.2014.7009302
   Cardoso WF., 2018, S SYST AUT SOFTW TES, P67, DOI DOI 10.1145/3266003.3266011
   Casale Giuliano, 2013, Performance Evaluation Review, V40, P73
   Chana I., 2013, Software Engineering Frameworks for the Cloud Computing Paradigm, P145, DOI DOI 10.1007/978-1-4471-5031-2_7
   Chana Inderveer., 2012, ACM SIGSOFT Software Engineering Notes, V37, P1
   Chandu PMSS, 2016, PROCEEDINGS OF THE 2016 IEEE INTERNATIONAL CONFERENCE ON WIRELESS COMMUNICATIONS, SIGNAL PROCESSING AND NETWORKING (WISPNET), P2008, DOI 10.1109/WiSPNET.2016.7566494
   Chauhan MA, 2017, SOFTWARE PRACT EXPER, V47, P599, DOI 10.1002/spe.2409
   Chawla P, 2019, SOFTWARE PRACT EXPER, V49, P1307, DOI 10.1002/spe.2708
   Chawla P, 2016, J COMPUT SYST SCI, V82, P712, DOI 10.1016/j.jcss.2015.12.001
   Chen, 2015, P 7 AS PAC S INT, P102
   Chen TC, 2017, AGEING SOC, V37, P1798, DOI 10.1017/S0144686X16000623
   Chen X, 2022, IEEE T CLOUD COMPUT, V10, P1117, DOI 10.1109/TCC.2020.2992537
   Chen X, 2020, FUTURE GENER COMP SY, V105, P287, DOI 10.1016/j.future.2019.12.005
   Chen X, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.4463
   Chen ZY, 2020, IEEE ACCESS, V8, P151500, DOI 10.1109/ACCESS.2020.3017643
   Chung L, 2013, J SYST SOFTWARE, V86, P2242, DOI 10.1016/j.jss.2012.10.028
   Cico O., 2019, P 9 BALK C INF, P1
   Cito J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P393, DOI 10.1145/2786805.2786826
   Cocco L, 2012, EUROMICRO CONF PROC, P446, DOI 10.1109/SEAA.2012.67
   Cretella G., 2014, SMART ORG SMART ARTI, P67, DOI [10.1007/978-3-319-07040-7_8, DOI 10.1007/978]
   Edmonds A., 2015, INT WORKSH AUT INC M
   Ewenike Stanley, 2017, 2017 International Conference on the Frontiers and Advances in Data Science (FADS). Proceedings, P47, DOI 10.1109/FADS.2017.8253192
   Ezenwoke A, 2018, J CLOUD COMPUT-ADV S, V7, DOI 10.1186/s13677-018-0117-4
   Faghri F., 2012, P WORKSH SEC DEP MID, P1
   Fylaktopoulos G, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-1688-5
   Fylaktopoulos G, 2015, PROCEDIA COMPUT SCI, V68, P42, DOI 10.1016/j.procs.2015.09.222
   Garcia YK., 2012, P 50 ANN SE REG C, P357
   Giannakopoulos I, 2017, IEEE ACM INT SYMP, P762, DOI 10.1109/CCGRID.2017.133
   Gias AU, 2020, ICPE'20: COMPANION OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P46, DOI 10.1145/3375555.3383120
   Grundy J, 2012, IEEE SOFTWARE, V29, P26, DOI 10.1109/MS.2012.31
   Gusev M., 2013, BCI 13, P95
   Hacaloglu T, 2015, LECT NOTES COMPUT SC, V9416, P421, DOI 10.1007/978-3-319-26138-6_45
   Han JB, 2019, STEM CELLS INT, V2019, DOI 10.1155/2019/5432134
   Hanna E. M., 2012, Proceedings of the 2012 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2012), P787, DOI 10.1109/CCGrid.2012.93
   He J., 2012, 2012 IEEE 5 INT C QO, P566, DOI DOI 10.1109/CLOUD.2012.125
   Heinrich R, 2017, SOFTWARE ARCHITECTURE FOR BIG DATA AND THE CLOUD, P69, DOI 10.1016/B978-0-12-805467-3.00005-3
   Iliashenko O., 2020, P INT SCI C DIG TRAN, P1
   Incki Koray, 2012, 2012 International Conference on Software Security and Reliability Companion, P18, DOI 10.1109/SERE-C.2012.32
   Iyer G.N., 2016, Comput Secur, P327, DOI 10.1002/9781118821930.ch27
   Jayathilaka H, 2015, ACM SOCC'15: PROCEEDINGS OF THE SIXTH ACM SYMPOSIUM ON CLOUD COMPUTING, P315, DOI 10.1145/2806777.2806842
   Jeferry K, 2015, PROCEDIA COMPUT SCI, V68, P227, DOI 10.1016/j.procs.2015.09.238
   Joshi P, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P171
   Khamadja S., 2013, P 6 INT C SEC INF NE, P225
   Kim CH, 2015, CAFE: A virtualization-based approach to protecting sensitive cloud application logic confidentiality, P651
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Lakka S., 2015, P 19 PANH C INF 2015, P221
   Leonard J, 2014, P ANN HICSS, P3778, DOI 10.1109/HICSS.2014.470
   Litoiu M., 2014, P 24 ANN INT C COMP, P288
   Liu HP, 2019, PROCEEDINGS OF THE WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS (HOTOS '19), P155, DOI 10.1145/3317550.3321438
   Liu PY, 2011, PROCEDIA ENGINEER, V15, DOI 10.1016/j.proeng.2011.08.601
   Mandal AK, 2013, 2013 SECOND INTERNATIONAL CONFERENCE ON ADVANCED COMPUTING, NETWORKING AND SECURITY (ADCONS 2013), P102, DOI 10.1109/ADCONS.2013.31
   de Paula ACM, 2016, COMM COM INF SC, V703, P222, DOI 10.1007/978-3-319-56390-9_11
   Marimuthu C, 2013, 2013 INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND BIG DATA (CLOUDCOM-ASIA), P183, DOI 10.1109/CLOUDCOM-ASIA.2013.98
   Markande K., 2013, CLOUD COMPUTING, P293
   Mayuranathan M., 2020, COMPUT SECUR, P1
   Mesbahi MR, 2018, HUM-CENT COMPUT INFO, V8, DOI 10.1186/s13673-018-0143-8
   Muppalla AK., 2013, SOFTWARE ENG FRAMEWO, P305
   Nawaz F., 2015, IFIP INT C ART INT T, P129, DOI [DOI 10.1007/978-3-319-25261-2_12, 10.1007/978-3-319-25261-2_12]
   Okumoto K, 2017, IEEE INT SYMP SOFTW, P57, DOI 10.1109/ISSREW.2017.48
   Onder ST, 2019, WINT SIMUL C PROC, P2737, DOI 10.1109/WSC40007.2019.9004698
   Pahl C, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3104028
   Pahl C, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1849
   Patros P., 2016, Proceedings of the 26th Annual International Conference on Computer Science and Software Engineering, CASCON '16, page, P166
   Pietrantuono R, 2020, SOFTWARE QUAL J, V28, P7, DOI 10.1007/s11219-019-09448-3
   Rai R, 2015, SPRINGERPLUS, V4, DOI 10.1186/s40064-015-0962-2
   Ramachandran, 2020, SOFTWARE ENG ERA CLO
   Ru J, 2013, IEEE AUS SOFT ENGR, P78, DOI 10.1109/ASWEC.2013.19
   SAA P, 2017, 2017 16 INT C INFORM, P1
   Schenk E, 2011, J INNOV ECON MANAG, P93, DOI 10.3917/jie.007.0093
   Schmitt N, 2021, COMPANION OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, ICPE 2021, P179, DOI 10.1145/3447545.3451176
   Shahzad F, 2014, PROCEDIA COMPUT SCI, V37, P357, DOI 10.1016/j.procs.2014.08.053
   Shin D, 2011, J INTERNET SERV APPL, V2, P243, DOI 10.1007/s13174-011-0035-x
   Sousa TB, 2018, EUROPLOP 2018: PROCEEDINGS OF THE 23RD EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS, DOI 10.1145/3282308.3282316
   Sousa TB, 2017, PROCEEDINGS OF THE 22ND EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2017), DOI 10.1145/3147704.3147720
   Spaanenburg L, 2011, CLOUD CONNECTIVITY AND EMBEDDED SENSORY SYSTEMS, P43, DOI 10.1007/978-1-4419-7545-4_2
   Staffs Keele, 2007, Tech. Rep.
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Toutouh J., 2018, P 13 INT C AV REL SE, P1
   van Eyk E, 2017, PROCEEDINGS OF THE 2ND INTERNATIONAL WORKSHOP ON SERVERLESS COMPUTING (WOSC '17), P1, DOI 10.1145/3154847.3154848
   Xiaoying Bai, 2011, Proceedings of the 2011 IEEE 6th International Symposium on Service Oriented System Engineering (SOSE 2011), P1, DOI 10.1109/SOSE.2011.6139087
   Xu XL, 2015, FRONT COMPUT SCI-CHI, V9, P554, DOI 10.1007/s11704-015-4900-9
   Zardari S., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P1013
   Zhang TW, 2015, 2015 ACM/IEEE 42ND ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA), P362, DOI 10.1145/2749469.2750422
NR 103
TC 6
Z9 6
U1 1
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2024
VL 36
IS 2
SI SI
AR e2485
DI 10.1002/smr.2485
EA JUN 2022
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HT8V5
UT WOS:000818543100001
OA Green Published
DA 2024-07-18
ER

PT J
AU Wen, YY
   Cheng, GJ
   Deng, SG
   Yin, JW
AF Wen, Yingying
   Cheng, Guanjie
   Deng, Shuiguang
   Yin, Jianwei
TI Characterizing and synthesizing the workflow structure of microservices
   in ByteDance Cloud
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE ByteDance Cloud; microservice architecture; production data
   characterization; trace data analysis
ID PERFORMANCE
AB Modern Cloud applications have evolved from monolithic systems to numerous distributed microservices whose workflows interact via Remote Procedure Calls (RPCs). The benchmarks focusing on individual microservice components are insufficient because the reference relationships between components, which form the microservice workflow structure, are another critical aspect of microservice applications. Unfortunately, understanding the characteristics of microservice workflow in the production Cloud remains a missing piece in the literature, which prevents the representative of microservice benchmarks. In this paper, we fill this gap by characterizing and synthesizing the microservice workflows based on the trace data of the Toutiao application that is running on ByteDance Cloud. We examine the microservice workflows starting from DAG graphs, introduce observed properties that are easy to ignore but important, show the artificiality of the workflow by statistic description, and explore the high cost of network overhead. We further synthesize the workflow following the characteristics observed. The extensive evaluations show that the synthesized microservice workflows have consistent statistical characteristics as the production ones. A case study applying the synthesized workflows proves its usability.
C1 [Wen, Yingying; Cheng, Guanjie; Deng, Shuiguang; Yin, Jianwei] Zhejiang Univ, Comp Sci & Technol, Hangzhou, Peoples R China.
C3 Zhejiang University
RP Wen, YY (corresponding author), Zhejiang Univ, Comp Sci & Technol, Hangzhou, Peoples R China.
EM 11821102@zju.edu.cn
OI Wen, Yingying/0000-0001-7469-4066
FU National Natural Science Foundation of China [62125206, U20A20173]
FX National Natural Science Foundation of China, Grant/Award Numbers:
   62125206, U20A20173
CR Abbott BP, 2016, PHYS REV LETT, V116, DOI 10.1103/PhysRevLett.116.241102
   Angius E., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P507, DOI 10.1109/WCRE.2012.63
   Bao L, 2019, IEEE T PARALL DISTR, V30, P2101, DOI 10.1109/TPDS.2019.2901467
   Brady T, 2010, CONCURR COMP-PRACT E, V22, P2467, DOI 10.1002/cpe.1574
   Caculo S, 2020, I S WORKL CHAR PROC, P48, DOI 10.1109/IISWC50251.2020.00014
   Callegati F, 2014, IEEE INT CONF CL NET, P132, DOI 10.1109/CloudNet.2014.6968981
   Cheng Y, 2018, 9TH ASIA-PACIFIC SYSTEMS WORKSHOP 2018 (APSYS'18), DOI 10.1145/3265723.3265742
   Correia J, 2018, 2018 IEEE 17TH INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA)
   Crawley K., 2019, GETTING STARTED OBSE
   Gan Y, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P19, DOI 10.1145/3297858.3304004
   Gan Y, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P3, DOI 10.1145/3297858.3304013
   Grambow M, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P232, DOI 10.1145/3341105.3373875
   Guo JL, 2019, 2019 IEEE MILAN POWERTECH
   Hindman B., 2011, Mesos: a platform for fine-grained resource sharing in the data center, P295
   Hu Y, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9214663
   Huang KC, 2015, J SYST SOFTWARE, V107, P127, DOI 10.1016/j.jss.2015.05.050
   Jayasinghe M, 2020, LECT NOTES COMPUT SC, V12128, P53, DOI 10.1007/978-3-030-50578-3_5
   Jindal A, 2019, PROCEEDINGS OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P25, DOI 10.1145/3297663.3310309
   Kalia A, 2019, PROCEEDINGS OF THE 16TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P1
   Kanev S, 2015, 2015 ACM/IEEE 42ND ANNUAL INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA), P158, DOI 10.1145/2749469.2750392
   Lazarev N, 2020, IEEE COMPUT ARCHIT L, V19, P134, DOI 10.1109/LCA.2020.3020064
   Lu CZ, 2017, IEEE INT CONF BIG DA, P2884, DOI 10.1109/BigData.2017.8258257
   Nguyen T., 2016, THESIS AALTO U
   Rahman M, 2014, 2014 IEEE 8TH INTERNATIONAL SYMPOSIUM ON SERVICE ORIENTED SYSTEM ENGINEERING (SOSE), P204, DOI 10.1109/SOSE.2014.31
   Reiss Charles, 2012, P ACM S CLOUD COMP, DOI [10.1145/2391229.2391236, DOI 10.1145/2391229.2391236]
   Ren G, 2010, IEEE MICRO, V30, P65, DOI 10.1109/MM.2010.68
   Services AW, 2019, IMPL MICR AWS
   Srirama SN, 2020, J NETW COMPUT APPL, V160, DOI 10.1016/j.jnca.2020.102629
   Sriraman A, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P177
   Sriraman A, 2018, I S WORKL CHAR PROC, P1, DOI 10.1109/IISWC.2018.8573515
   Thönes J, 2015, IEEE SOFTWARE, V32, P116, DOI 10.1109/MS.2015.11
   Tian HS, 2019, PROCEEDINGS OF THE 2019 TENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '19), P139, DOI 10.1145/357223.3362710
   Ueda T, 2016, I S WORKL CHAR PROC, P85, DOI 10.1109/IISWC.2016.7581269
   Wan XL, 2018, J NETW COMPUT APPL, V119, P97, DOI 10.1016/j.jnca.2018.07.003
   Wang S, 2021, IEEE T PARALL DISTR, V32, P98, DOI 10.1109/TPDS.2020.3011979
   Wu L, 2020, IEEE IFIP NETW OPER, DOI 10.1109/noms47738.2020.9110353
   Yu YB, 2019, J NETW COMPUT APPL, V147, DOI 10.1016/j.jnca.2019.102441
   Zhou X, 2018, PROC IEEE ACM INT C, P323, DOI 10.1145/3183440.3194991
NR 38
TC 2
Z9 3
U1 4
U2 14
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2022
VL 34
IS 8
AR e2467
DI 10.1002/smr.2467
EA JUN 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3L2JI
UT WOS:000804457700001
DA 2024-07-18
ER

PT J
AU Semasaba, AOA
   Zheng, W
   Wu, XX
   Agyemang, SA
   Liu, T
   Ge, Y
AF Semasaba, Abubakar Omari Abdallah
   Zheng, Wei
   Wu, Xiaoxue
   Agyemang, Samuel Akwasi
   Liu, Tao
   Ge, Yuan
TI An empirical evaluation of deep learning-based source code vulnerability
   detection: Representation versus models
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE deep learning; security; software vulnerability detection
ID PREDICTION; CHURN
AB Vulnerabilities in the source code of the software are critical issues in the realm of software engineering. Coping with vulnerabilities in software source code is becoming more challenging due to several aspects such as complexity and volume. Deep learning has gained popularity throughout the years as a means of addressing such issues. This paper proposes an evaluation of vulnerability detection performance on source code representations and evaluates how machine learning (ML) strategies can improve them. The structure of our experiment consists of three deep neural networks (DNNs) in conjunction with five different source code representations: abstract syntax trees (ASTs), code gadgets (CGs), semantics-based vulnerability candidates (SeVCs), lexed code representations (LCRs), and composite code representations (CCRs). Experimental results show that employing different ML strategies in conjunction with the base model structure influences the performance results to a varying degree. However, ML-based techniques suffer from poor performance on class imbalance handling and dimensionality reduction when used in conjunction with source code representations.
C1 [Semasaba, Abubakar Omari Abdallah; Zheng, Wei; Agyemang, Samuel Akwasi] Northwestern Polytech Univ, Sch Software, Xian, Peoples R China.
   [Wu, Xiaoxue] Yangzhou Univ, Sch Informat Engn, Yangzhou, Peoples R China.
   [Liu, Tao] Anhui Polytech Univ, Sch Comp & Informat, Anhui, Anhui, Peoples R China.
   [Ge, Yuan] Anhui Polytech Univ, Sch Elect Engn, Anhui, Anhui, Peoples R China.
C3 Northwestern Polytechnical University; Yangzhou University; Anhui
   Polytechnic University; Anhui Polytechnic University
RP Zheng, W (corresponding author), Northwestern Polytech Univ, Sch Software, Xian, Peoples R China.
EM abu_sem@mail.nwpu.edu.cn; wzheng@nwpu.edu.cn
RI Liu, Tao/M-6048-2013
FU Ministry of Education of the People's Republic of China [GDSC202006];
   2021 Key R&D Program in Shaanxi Province [2021GY-041]
FX Ministry of Education of the People's Republic of China, Grant/Award
   Number: GDSC202006; 2021 Key R&D Program in Shaanxi Province, Grant/
   Award Number: 2021GY-041
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Allamanis M, 2015, PR MACH LEARN RES, V37, P2123
   Amin A, 2016, IEEE ACCESS, V4, P7940, DOI 10.1109/ACCESS.2016.2619719
   [Anonymous], 2017, AUTOMATIC FEATURE LE
   [Anonymous], 2018, IEEE Transactions on Software Engineering
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Ban X., 2018, CONCURR COMP-PRACT E, V31, P1
   Bilgin Z, 2020, IEEE ACCESS, V8, P150672, DOI 10.1109/ACCESS.2020.3016774
   Boudjema E, 2020, SECUR PRIVACY, V3, DOI 10.1002/spy2.100
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Casalnuovo C., 2018, NL4SE WORKSH AAAI 20
   Chuanqi Tan, 2018, Artificial Neural Networks and Machine Learning - ICANN 2018. 27th International Conference on Artificial Neural Networks. Proceedings: Lecture Notes in Computer Science (LNCS 11141), P270, DOI 10.1007/978-3-030-01424-7_27
   Dahl WA., 2020, STACK BASED BUFFER O, P1
   Delaitre A., 2018, SATE V REPORT 10 YEA
   Dowd M., 2006, The Art of Software Security Assessment: Identifying and Preventing Software Vulnerabilities
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Eschweiler S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23185
   Faghani MR., 2017, ARXIV170800969, V15, P1
   Galanis M, 2020, ICINCO: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON INFORMATICS IN CONTROL, AUTOMATION AND ROBOTICS, P430, DOI 10.5220/0009826604300437
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Henzinger TA, 2003, LECT NOTES COMPUT SC, V2648, P235
   Hovsepyan A., 2012, ASS COMPUTATIONAL LI, V7
   Jamali I., 2012, International Journal of Computer Science Issues, V9, P42
   Jimenez M., 2018, THESIS U LUXEMBOURG
   Ju C, 2018, J APPL STAT, V45, P2800, DOI 10.1080/02664763.2018.1441383
   Kim Y., 2014, P 2014 C EMP METH NA, P1746, DOI [DOI 10.3115/V1/D14-1181, 10.3115/v1/D14-1181]
   Larochelle H., ADV NEURAL INFORM PR, V23
   Le T., 2019, MAXIMAL DIVERGENCE S, P15
   Li Z., 2018, Sysevr: A framework for using deep learning to detect software vulnerabilities'
   Li ZS, 2018, TRANS DISTRIB CONF
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2539, DOI 10.1145/3133956.3138840
   Lin GJ, 2018, IEEE T IND INFORM, V14, P3289, DOI 10.1109/TII.2018.2821768
   Liu KP, 2013, COMPUTER, V46, P60, DOI 10.1109/MC.2013.268
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Mnih V, 2014, ADV NEUR IN, V27
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Pang YL, 2015, 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P543, DOI 10.1109/ICMLA.2015.99
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Pewny J., 2014, P 30 ANN COMP SEC AP, P406, DOI [10.1145/2664243.2664269, DOI 10.1145/2664243.2664269]
   Raffel C, 2015, ARXIV PREPRINT ARXIV
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Sabottke C, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P1041
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Sehgal S, 2015, 2014 INTERNATIONAL CONFERENCE ON MEDICAL IMAGING, M-HEALTH & EMERGING COMMUNICATION SYSTEMS (MEDCOM), P45
   Shen ZD, 2020, SECUR COMMUN NETW, V2020, DOI 10.1155/2020/8858010
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Sorzano C., 2014, SURVEY DIMENSIONALIT
   Sun N, 2019, IEEE COMMUN SURV TUT, V21, P1744, DOI 10.1109/COMST.2018.2885561
   Nguyen T, 2020, LECT NOTES ARTIF INT, V12085, P164, DOI 10.1007/978-3-030-47436-2_13
   Wu TM, 2018, COMPUT SECUR, V76, P265, DOI 10.1016/j.cose.2017.11.013
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Zheng ZY, 2015, COMPUT INFORM, V34, P1017
   Zhou Y, 2019, Devign: Effective vulnerability identification by learning comprehensive program semantics via graph neural networks
   Zou D., 2020, ARXIV E PRINTS 2020A
NR 57
TC 1
Z9 1
U1 1
U2 18
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2023
VL 35
IS 11
SI SI
AR e2422
DI 10.1002/smr.2422
EA JAN 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X1KC8
UT WOS:000744741100001
DA 2024-07-18
ER

PT J
AU Wang, JY
AF Wang, Jinyong
TI Open source software reliability model with nonlinear fault detection
   and fault introduction
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE nonlinear fault detection; nonlinear fault introduction; open source
   software (OSS); optimal release time for open source software; software
   reliability model
AB In recent years, open source software (OSS) has been widely used and developed. The reliability of OSS has also become a hot research topic. Due to the complexity, dynamics, and uncertainty of the development and testing process of OSS, it is also a difficult task to accurately evaluate the reliability of OSS. In this paper, we consider the nonlinear changes of fault detection and fault introduction in the development and testing of OSS and propose a reliability model of OSS based on the nonlinear changes of fault detection and fault introduction. Experimental results show that the proposed model is more in line with the actual changes of fault detection and fault introduction in the processes of OSS development and testing. Compared with other models, the proposed model has better fitting and predictive performance. We also give a simple OSS optimal release method considering the testing-effort and reliability changes in the processes of OSS development and testing. The proposed model and optimized release method can effectively assist OSS developers to evaluate software reliability and determine the optimal release time.
C1 [Wang, Jinyong] Shanxi Univ, Sch Automat & Software Engn, Taiyuan, Peoples R China.
C3 Shanxi University
RP Wang, JY (corresponding author), Shanxi Univ, Sch Automat & Software Engn, Taiyuan, Peoples R China.
EM wangjinyong818@163.com
OI Wang, Jinyong/0000-0003-4167-1313
FU Fundamental Research Program of Shanxi Province of China [201801D121120]
FX Fundamental Research Program of Shanxi Province of China, Grant/Award
   Number: 201801D121120
CR Aggarwal A. G., 2019, SYSTEM PERFORMANCE M, P125
   Barack O., 2020, J SOFTW ENG APPL, V13, P179, DOI [10.4236/jsea.2020.139012, DOI 10.4236/JSEA.2020.139012]
   Chatterjee S, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2344
   Davis J., 2005, P WORKSH OP SOURC SO, P1, DOI DOI 10.1145/1083258.1083273
   Diwakar, 2019, System Performance and Management Analytics, P77, DOI [10.1007/978-981-10-7323-6_7, DOI 10.1007/978-981-10-7323-6_7]
   Erto P., 2018, IEEE T RELIAB, P1
   Gandhi Neha, 2019, Smart Innovations in Communication and Computational Sciences. Proceedings of ICSICCS 2017. Advances in Intelligent Systems and Computing (AISC 669), P23, DOI 10.1007/978-981-10-8968-8_3
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11, P1411, DOI 10.1109/TSE.1985.232177
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hoang P., 1997, INT J RELIAB QUAL SA, V4, P269, DOI DOI 10.1142/S0218539397000199
   Homma T, 1996, RELIAB ENG SYST SAFE, V52, P1, DOI 10.1016/0951-8320(96)00002-6
   Huang CY, 2014, IEEE T RELIAB, V63, P309, DOI 10.1109/TR.2013.2285056
   Huang CY, 2011, IEEE T RELIAB, V60, P498, DOI 10.1109/TR.2011.2134350
   Illes-Seifert T, 2010, INFORM SOFTWARE TECH, V52, P539, DOI 10.1016/j.infsof.2009.11.010
   Ivanov V, 2018, INFORM SCIENCES, V423, P398, DOI 10.1016/j.ins.2017.08.079
   Kapur PK., 2020, INT J RELIAB QUAL SA, V27
   Ke SZ, 2020, QUAL RELIAB ENG INT, V36, P1678, DOI 10.1002/qre.2653
   Khurshid S, 2019, INT J SOFTW INNOV, V7, P86, DOI 10.4018/IJSI.2019100105
   Li QY, 2017, APPL MATH MODEL, V51, P68, DOI 10.1016/j.apm.2017.06.034
   Li X, 2011, INFORM SOFTWARE TECH, V53, P929, DOI 10.1016/j.infsof.2011.04.005
   Lin CT, 2014, IEEE T SOFTWARE ENG, V40, P1075, DOI 10.1109/TSE.2014.2354032
   Liu Y, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P65, DOI 10.1109/QRS.2015.20
   [米晓萍 Mi Xiaoping], 2019, [计算机应用研究, Application Research of Computers], V36, P2070
   Nagaraju V, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1717
   OHBA M, 1984, LECT NOTES ECON MATH, V235, P144
   Peng R., 2018, SOFTWARE FAULT DETEC
   Pham H, 1999, IEEE T RELIAB, V48, P169
   Qian Wang, 2020, ICSCA 2020: Proceedings of the 2020 9th International Conference on Software and Computer Applications, P188, DOI 10.1145/3384544.3384554
   Raymond ES., 2001, CATHEDRAL BAZAAR MUS, V2
   Rossi B, 2010, IFIP ADV INF COMM TE, V319, P268
   Samoladas I, 2010, INFORM SOFTWARE TECH, V52, P902, DOI 10.1016/j.infsof.2010.05.001
   Saraf I., 2020, Int. J. Ind. Syst. Eng, V34, P464, DOI [10.1504/IJISE.2020.106085, DOI 10.1504/IJISE.2020.106085]
   Sharma K, 2010, IEEE T RELIAB, V59, P266, DOI 10.1109/TR.2010.2048657
   Singh VB, 2018, IEEE T SOFTWARE ENG, V44, P1207, DOI 10.1109/TSE.2017.2766070
   Sobol' I. Y. M., 1990, MATEM MOD, V2, P112, DOI DOI 10.18287/0134-2452-2015-39-4-459-461
   Tamura Y, 2005, 11th International Conference on Parallel and Distributed Systems Workshops, Vol II, Proceedings,, P488
   Tamura Yoshinobu, 2008, 2008 Second IEEE International Conference on Secure System Integration and Reliability Improvement (SSIRI), P60, DOI 10.1109/SSIRI.2008.14
   Tamura Y, 2007, IEEE SYS MAN CYBERN, P53
   Tamura Y, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON MECHATRONICS, P107
   Tamura Y, 2012, IN C IND ENG ENG MAN, P752, DOI 10.1109/IEEM.2012.6837840
   Tamura Y, 2013, P I MECH ENG O-J RIS, V227, P179, DOI 10.1177/1748006X12475110
   Tamura Y, 2008, INT J RELIAB QUAL SA, V15, P33, DOI 10.1142/S0218539308002915
   Tamura Y, 2006, IEEE SYS MAN CYBERN, P2185, DOI 10.1109/ICSMC.2006.385185
   Tamura Y, 2009, INT J SYST SCI, V40, P429, DOI 10.1080/00207720802556245
   Tandon A, 2020, TEH VJESN, V27, P550, DOI 10.17559/TV-20181031061451
   Tandon Neha A., 2020, LIFE CYCLE RELIAB SA, V9, P1
   Ullah N, 2015, COMPUTER, V48, P50, DOI 10.1109/MC.2013.446
   Utkin LV, 2018, RELIAB ENG SYST SAFE, V176, P93, DOI 10.1016/j.ress.2018.04.007
   Wang JY, 2021, ARAB J SCI ENG, V46, P3981, DOI 10.1007/s13369-021-05382-4
   Wang JY, 2019, COMPUT J, V62, P1301, DOI 10.1093/comjnl/bxy111
   Wang Q, 2019, IEEE PAC RIM INT SYM, P91, DOI 10.1109/PRDC47002.2019.00033
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   YAMADA S, 2016, SPRINGER SER RELIAB, P1
   Yang JF, 2021, IEEE ACCESS, V9, P18890, DOI 10.1109/ACCESS.2021.3054760
   Yang JF, 2016, J SYST SOFTWARE, V115, P102, DOI 10.1016/j.jss.2016.01.025
   Zhu MM, 2018, ANN OPER RES, V269, P773, DOI 10.1007/s10479-017-2556-6
NR 57
TC 2
Z9 2
U1 0
U2 11
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2021
VL 33
IS 12
AR e2385
DI 10.1002/smr.2385
EA OCT 2021
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XH1BP
UT WOS:000702897700001
DA 2024-07-18
ER

PT J
AU Barros-Justo, JL
   Benitti, FBV
   Molleri, JS
AF Barros-Justo, Jose L.
   Benitti, Fabiane B., V
   Molleri, Jefferson S.
TI Risks and risk mitigation in global software development: An update
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE evidence-based software engineering; global software development; risk;
   risk mitigation; second-generation systematic literature review;
   tertiary study
ID CHALLENGES
AB Context: Interest in global software development (GSD) has led to the publication of numerous studies. Over time, these studies should be updated to verify if their findings and conclusions remain valid. Objective: To update a tertiary study, published in 2014, focused on investigating risks and risk mitigation advice in the context of GSD. Method: We conducted a systematic literature study based on forward snowballing, out of which we identified and selected 25 unique studies. Results: We extracted: (a) 118 risks (75 of which already identified in the original work), and (b) 167 mitigation advice (44 of which were identified in the original work). Out of 43 new risks identified, just 10 are specific to GSD settings; the others are risks of the software process described in the context of GSD. The evidence supporting these risks and mitigation were extracted from 619 and 389 primary sources, respectively. Given the amount of evidence found, we have reported only those with higher empirical support. The raw data is available online as complementary material. Conclusions: Interest in GSD, its potential risks, and mitigation strategies, remains high. This update has allowed increasing the level of empirical support provided by the findings of the original work.
C1 [Barros-Justo, Jose L.] Univ Vigo, Sch Informat ESEI, Orense, Spain.
   [Benitti, Fabiane B., V] Univ Fed Santa Catarina UFSC, Dept Informat & Stat INE, Florianopolis, SC, Brazil.
   [Molleri, Jefferson S.] Simula Metropolitan Ctr Digital Engn, IT Management Dept ITM, N-0167 Oslo, Norway.
C3 Universidade de Vigo; Universidade Federal de Santa Catarina (UFSC)
RP Molleri, JS (corresponding author), Simula Metropolitan Ctr Digital Engn, IT Management Dept ITM, N-0167 Oslo, Norway.
EM jefferson@simula.no
RI Barros-Justo, Jose L./H-3181-2014
OI Barros-Justo, Jose L./0000-0003-2046-2643; Benitti,
   Fabiane/0000-0003-2747-9931; Molleri, Jefferson/0000-0001-5629-5256
CR Abdullah LM, 2009, INT CONF RES CHAL, P275, DOI 10.1109/RCIS.2009.5089291
   Alzoubi YI, 2016, INFORM MANAGE-AMSTER, V53, P22, DOI 10.1016/j.im.2015.08.003
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Britto Ricardo, 2016, Journal of Software Engineering Research and Development, V4, DOI 10.1186/s40411-016-0029-2
   Budgen D, 2018, INFORM SOFTWARE TECH, V95, P62, DOI 10.1016/j.infsof.2017.10.017
   Carroll N., 2015, HUMAN FACTORS SOFTWA, P1
   Ebert C, 2016, IEEE SOFTWARE, V33, P105, DOI 10.1109/MS.2016.27
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   Felizardo KR, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P184, DOI 10.1145/3266237.3266240
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Hossain E, 2009, ASIA PAC SOFWR ENG, P457, DOI 10.1109/APSEC.2009.56
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kroll J, 2018, INFORM SOFTWARE TECH, V93, P30, DOI 10.1016/j.infsof.2017.08.011
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Matalonga S, 2013, INT J SOFTW ENG KNOW, V23, P1289, DOI 10.1142/S021819401350040X
   Mendes E, 2019, EUROMICRO CONF PROC, P355, DOI 10.1109/SEAA.2019.00061
   Musio I, 2009, LECT NOTES BUS INF P, V35, P4
   Nepomuceno V, 2019, INFORM SOFTWARE TECH, V109, P40, DOI 10.1016/j.infsof.2019.01.005
   Nurdiani I., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P36, DOI 10.1109/ICGSE-W.2011.16
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Prikladnicki R., 2003, Software Process Improvement and Practice, V8, P267, DOI 10.1002/spip.188
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Saleem N., 2019, INVESTIGATING CRITIC
   Sievi-Korte O, 2019, INFORM SOFTWARE TECH, V106, P234, DOI 10.1016/j.infsof.2018.10.008
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Wohlin C, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916006
NR 29
TC 3
Z9 4
U1 1
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2021
VL 33
IS 11
AR e2370
DI 10.1002/smr.2370
EA SEP 2021
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WQ1DY
UT WOS:000698010200001
DA 2024-07-18
ER

PT J
AU Gao, SQ
   Liu, L
   Liu, YZ
   Liu, HX
   Wang, YH
   Liu, PX
AF Gao, Shanquan
   Liu, Lei
   Liu, Yuzhou
   Liu, Huaxiao
   Wang, Yihui
   Liu, Peixun
TI App recommendation based on both quality and security
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE app recommendation; description mining; privacy security; quality of
   functionality; review analysis
AB With the rapid prevalence of smartphones and the dramatic proliferation of mobile applications, people tend to do everything at their fingertips, including some sensitive activities, such as bank transfers. This makes security become one important factor when recommending apps to users. However, most existing methods recommend apps only on the basis of the apps' functionalities. Even when some methods take security into account, they usually roughly group apps with functionalities and identify the products using extra permissions as risky, but this ignores a common phenomenon that these permissions may be used only to achieve the corresponding functionalities. In this paper, we propose an app recommendation method considering both functionalities and security. For functionalities, we summarized them from app descriptions and further evaluated their completion quality in different products by analyzing their related reviews. For security, we cluster apps with similar functionalities and quality and analyze the permissions of apps in a more comparable range. In this way, our method recommends apps with higher completion quality of functionalities and security degree to users according to their demands. We conducted experiments on apps collected from six categories of Google Play, and the results show that our method has a good recommendation effect.
C1 [Gao, Shanquan; Liu, Lei; Liu, Yuzhou; Liu, Huaxiao; Wang, Yihui] Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Peoples R China.
   [Gao, Shanquan; Liu, Lei; Liu, Huaxiao; Wang, Yihui; Liu, Peixun] Minist Educ, Key Lab Symbol Computat & Knowledge Engn, Changchun, Peoples R China.
   [Liu, Yuzhou] Jilin Univ, Coll Elect Sci & Engn, Changchun, Peoples R China.
C3 Jilin University; Jilin University
RP Liu, YZ (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Peoples R China.
EM liuyuzhou_jlu@qq.com
RI lei, liu/HTR-5486-2023
OI liu, huaxiao/0000-0002-8151-1413; Liu, Yuzhou/0000-0003-2765-4074; Wang,
   yihui/0000-0003-2739-1403
FU Fundamental Research Funds for the Central Universities; Natural Science
   Research Foundation of Jilin Province of China [20190201193JC]; National
   Key Research and Development Program of China [2017YFB1003103]
FX Fundamental Research Funds for the Central Universities, JLU; Natural
   Science Research Foundation of Jilin Province of China, Grant/Award
   Number: 20190201193JC; National Key Research and Development Program of
   China, Grant/Award Number: 2017YFB1003103
CR [Anonymous], 1998, Computational Linguistics
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen S, 2018, ARE MOBILE BANKING A
   Chia PernHui., 2012, WWW 12 P 21 INT C WO, P311, DOI [10.1145/2187836.2187879, DOI 10.1145/2187836.2187879]
   Christel MG, 2013, INT IEEE CONSUM ELEC, P36, DOI 10.1109/IGIC.2013.6659126
   Di Sorbo A., 2016, P 2016 24 ACM SIGSOF
   Felt AP, ACM C COMP COMM SEC, P627
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Harman M, 2014, 36 CREST OP WORKSH U
   Jang BR, 2015, INT CONF BIG DATA, P178, DOI 10.1109/35021BIGCOMP.2015.7072829
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Kesswani N, 2016, PROCEEDINGS OF THE 10TH INDIACOM - 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT, P3731
   Kumar CPS, 2010, INT CONF ACOUST SPEE, P5010, DOI 10.1109/ICASSP.2010.5495067
   Li M, 2011, WORLD WIDE WEB, V14, P407, DOI 10.1007/s11280-011-0114-8
   Lin DY, 2019, EMPIR SOFTW ENG, V24, P170, DOI 10.1007/s10664-018-9627-4
   Lin KP, 2018, IEEE T COMPUT SOC SY, V5, P1061, DOI 10.1109/TCSS.2018.2878866
   Liu B, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P315, DOI 10.1145/2684822.2685322
   Liu FT, 2008, IEEE DATA MINING, P413, DOI 10.1109/ICDM.2008.17
   Liu XQ, 2018, INT REQUIR ENG CONF, P147, DOI 10.1109/RE.2018.00024
   Liu YZ, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.2112
   Liu YZ, 2017, J SYST SOFTWARE, V133, P126, DOI 10.1016/j.jss.2017.08.024
   Loper E, 2002, ETMTNLP 02 P ACL 02, P63, DOI [10.3115/1225403.1225421, DOI 10.3115/1225403.1225421, DOI 10.3115/1118108.1118117]
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   McIlroy S., 2015, EMPIR SOFTW ENG, P1
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Palomba F, 2015, IEEE INT C SOFTW MAI, V2015, P291
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Shah F.A., 2016, P INT WORKSH APP MAR, P15
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Xu JH, 2010, INT J INFORM NETWORK, pV2
   Yin HZ, 2017, PROC INT CONF DATA, P75, DOI 10.1109/ICDE.2017.43
   Yu L, 2018, IEEE T SOFTWARE ENG, V44, P834, DOI 10.1109/TSE.2017.2730198
   Yu RT, 2020, ADV SCI, V7, DOI 10.1002/advs.202000393
   Zhang C., 2018, SEKE, P665
   Zhu HS, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P951, DOI 10.1145/2623330.2623705
NR 47
TC 1
Z9 1
U1 3
U2 21
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2021
VL 33
IS 3
AR e2325
DI 10.1002/smr.2325
EA NOV 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QT0GD
UT WOS:000589521800001
DA 2024-07-18
ER

PT J
AU AbuHassan, A
   Alshayeb, M
   Ghouti, L
AF AbuHassan, Amjad
   Alshayeb, Mohammad
   Ghouti, Lahouari
TI Software smell detection techniques: A systematic literature review
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review
DE antipatterns; code refactoring; code smells; design smells; smell
   detection; software smells
ID MACHINE LEARNING TECHNIQUES; CLONE DETECTION; CODE-SMELLS; BAD SMELLS;
   EVOLUTIONARY ALGORITHMS; ARTIFICIAL-INTELLIGENCE; GRAPH; ANTIPATTERNS;
   SIMILARITY; EFFICIENT
AB Software smells indicate design or code issues that might degrade the evolution and maintenance of software systems. Detecting and identifying these issues are challenging tasks. This paper explores, identifies, and analyzes the existing software smell detection techniques at design and code levels. We carried out a systematic literature review (SLR) to identify and collect 145 primary studies related to smell detection in software design and code. Based on these studies, we address several questions related to the analysis of the existing smell detection techniques in terms of abstraction level (design or code), targeted smells, used metrics, implementation, and validation. Our analysis identified several detection techniques categories. We observed that 57% of the studies did not use any performance measures, 41% of them omitted details on the targeted programing language, and the detection techniques were not validated in 14% of these studies. With respect to the abstraction level, only 18% of the studies addressed bad smell detection at the design level. This low coverage urges for more focus on bad smell detection at the design level to handle them at early stages. Finally, our SLR brings to the attention of the research community several opportunities for future research.
C1 [AbuHassan, Amjad; Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
   [Ghouti, Lahouari] Prince Sultan Univ, Dept Comp Sci, Riyadh, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals; Prince Sultan University
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
EM alshayeb@kfupm.edu.sa
RI Alshayeb, Mohammad/B-5941-2015
OI Alshayeb, Mohammad/0000-0001-7950-0099; Ghouti,
   Lahouari/0000-0002-6381-4250
FU Deanship of Scientific Research at King Fahd University of Petroleum and
   Minerals; Prince Sultan University
FX A. AbuHassan and M. Alshayeb would like to acknowledge the support
   provided by the Deanship of Scientific Research at King Fahd University
   of Petroleum and Minerals. L. Ghouti acknowledges the support of Prince
   Sultan University.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Abebe SL, 2009, WORK CONF REVERSE EN, P95, DOI 10.1109/WCRE.2009.26
   Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   Alalfi MH, 2016, SOFTWARE SYSTEMS MOD, P1278
   Ambati V., 2004, "Collaboration, Conflict and Control: The 4th Workshop on Open Source Software Engineering" W8S Workshop - 26th International Conference on Software Engineering, P5, DOI 10.1049/ic:20040256
   Amorim L, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P261, DOI 10.1109/ISSRE.2015.7381819
   [Anonymous], 2013, Extensible markup language
   [Anonymous], 1993, Computing Science and Statistics
   [Anonymous], 2006, 21 ACM SIGPLAN S OBJ
   [Anonymous], 2013, P 2013 INT WORKSH PR
   Antony EP, 2013, WORK CONF REVERSE EN, P472, DOI 10.1109/WCRE.2013.6671325
   Arashpour M, 2016, INT J PROJ MANAG, V34, P1393, DOI 10.1016/j.ijproman.2016.02.004
   Arcoverde R., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P90, DOI 10.1109/RSSE.2012.6233419
   Arnaoudova V, 2013, EUR CON SFTWR MTNCE, P187, DOI 10.1109/CSMR.2013.28
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Baresi L, 2002, LECT NOTES COMPUT SC, V2505, P402
   BARGHOUTI NS, 1991, LECT NOTES COMPUT SC, V550, P380
   Basit HA, 2009, IEEE T SOFTWARE ENG, V35, P497, DOI 10.1109/TSE.2009.16
   Basit Hamid Abdul, 2005, SIGSOFT Softw. Eng. Notes, V30, P156, DOI [10.1145/1095430.1081733, DOI 10.1145/1095430.1081733]
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bertran IM, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1090, DOI 10.1145/1985793.1986003
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Bruhn J., 2005, TRAC 2004, P1
   Bryton S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P337, DOI 10.1109/QUATIC.2010.60
   Caram FL, 2019, INT J SOFTW ENG KNOW, V29, P285, DOI 10.1142/S021819401950013X
   Charalampidou S, 2015, P 11 INT C PRED MOD, P1, DOI [10.1145/2810146.2810155, DOI 10.1145/2810146.2810155]
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Chen Lianping, 2010, 14 INT C EVALUATION
   Chen SH, 2008, MATH COMPUT SIMULAT, V78, P379, DOI 10.1016/j.matcom.2008.01.028
   Chen ZF, 2018, INFORM SOFTWARE TECH, V94, P14, DOI 10.1016/j.infsof.2017.09.011
   Chen ZF, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P18, DOI 10.1109/SATE.2016.10
   Choi KY, 2011, IDW, P7
   Cholakov Todor., 2015, Proceedings of the 16th International Conference on Computer Systems and Technologies (New York, NY, USA), CompSysTech'15, Association for Computing Machinery, P104
   Cordy J.R., 2004, PROC C CTR ADV STUDI, P1
   Cormen T. H., 2010, Introduction to Algorithms
   Cortellessa V, 2014, SOFTW SYST MODEL, V13, P391, DOI 10.1007/s10270-012-0246-z
   Cortellessa V, 2010, IEEE INT C ENG COMP, P146, DOI [10.1109/ICECCS.2010.44, 10.1109/ICECCS.2010.24]
   Dang YN, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P369
   Danphitsanuphan P., 2012, 2012 SPRING C ENG TE, P1, DOI 10.1109/SCET.2012.6342082
   Davey N., 1995, International Journal of Applied Software Technology, V1, P219
   de Oliveira MG, 2011, HEAD NECK PATHOL, V5, P1, DOI 10.1007/s12105-010-0216-0
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   Devi D. G., 2011, 2011 3rd International Conference on Electronics Computer Technology (ICECT 2011), P126, DOI 10.1109/ICECTECH.2011.5941574
   Dhambri K, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P279
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Dubey SK, 2012, GLOBAL J COMPUTER SC, V12, P1
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Egan JP, 1975, ACAD PRESS SERIES CO
   Evans WS, 2009, SOFTWARE QUAL J, V17, P309, DOI 10.1007/s11219-009-9074-y
   Falke R, 2008, EMPIR SOFTW ENG, V13, P601, DOI 10.1007/s10664-008-9073-9
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Feldt R, 2018, INT WORK REAL ARTIF, P35, DOI 10.1145/3194104.3194109
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fokaefs M, 2007, PROC IEEE INT CONF S, P467
   Fontana F. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P450, DOI 10.1109/ICSTW.2011.12
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fontana FA, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ARCHITECTURE AND METRICS (SAM), P1, DOI 10.1109/SAM.2015.8
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fourati R, 2011, STUD COMPUT INTELL, V364, P17
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Ghannem A, 2016, SOFTWARE QUAL J, V24, P947, DOI 10.1007/s11219-015-9271-9
   Grosan C, 2007, STUD COMPUT INTELL, V75, P1
   Han J, 2012, MOR KAUF D, P1
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   HARRISON W., 2000, Proceedings of the Conference on the Future of Software Engineering (Limerick, Ireland, June 04 - 11, P261, DOI DOI 10.1145/336512.336569.ACM
   Hassaine S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P343, DOI 10.1109/QUATIC.2010.61
   HAYESROTH F, 1985, COMMUN ACM, V28, P921, DOI 10.1145/4284.4286
   Hecht G, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P148, DOI 10.1109/MobileSoft.2015.38
   Hecht G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P766, DOI 10.1109/ICSE.2015.243
   Hozano M, 2017, INT C PROGRAM COMPRE, P110, DOI 10.1109/ICPC.2017.32
   Hozano M, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1661, DOI 10.1145/2695664.2696059
   HUANG XQ, 1991, ADV APPL MATH, V12, P337, DOI 10.1016/0196-8858(91)90017-D
   Jiang D, 2014, J COMPUTATIONAL INFO, V10, P1677
   Jiang DX, 2012, PROCEEDINGS OF THE 2012 SECOND INTERNATIONAL CONFERENCE ON INSTRUMENTATION & MEASUREMENT, COMPUTER, COMMUNICATION AND CONTROL (IMCCC 2012), P299, DOI 10.1109/IMCCC.2012.74
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Johnson J. H., 1993, Proceedings CASCON '93, P171
   JOHNSON JF, 1994, P SOC PHOTO-OPT INS, V2226, P120, DOI 10.1117/12.178475
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kaur H, 2014, 2014 5TH INTERNATIONAL CONFERENCE CONFLUENCE THE NEXT GENERATION INFORMATION TECHNOLOGY SUMMIT (CONFLUENCE), P779, DOI 10.1109/CONFLUENCE.2014.6949316
   Keivanloo I., 2012, 2012 Proceedings of the First International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE 2012), P12, DOI 10.1109/RAISE.2012.6227963
   Kessentini Marouane, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P122, DOI 10.1109/MOBILESoft.2017.29
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim D.K., 2017, Int. J. Electr. Comput. Eng., V7, P3613, DOI [DOI 10.11591/IJECE.V7I6.PP3613-3621, 10.11591/ijece.v7i6.pp3613-3621]
   Kim T.-W., 2013, International Journal of Software Engineering and Its Applications, V7, P35
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kontogiannis K. A., 1996, Automated Software Engineering, V3, P77, DOI 10.1007/BF00126960
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Koschke Rainer, 2007, DAGST SEM P
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Kumar Swati, 2014, 2014 5th International Conference on Computer and Communication Technology (ICCCT), P41, DOI 10.1109/ICCCT.2014.7001467
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Li W., 1999, IEEE POTENTIALS, V18, P24
   LI Z, 2004, US ASS P 6 S OP, V6, P289
   Ligu E, 2013, PROC IEEE INT CONF S, P392, DOI 10.1109/ICSM.2013.55
   Líska P, 2011, 2011 2ND EASTERN EUROPEAN REGIONAL CONFERENCE ON THE ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS-EERC), P163, DOI 10.1109/ECBS-EERC.2011.39
   Liu H, 2007, IET SOFTW, V1, P29, DOI 10.1049/iet-sen:20060023
   Liu H, 2011, IET SOFTW, V5, P385, DOI 10.1049/iet-sen.2009.0029
   Liu H, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P269
   Macia I, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P662, DOI 10.1109/ICSM.2012.6405348
   Mahajan G, 2014, IEEE INT ADV COMPUT, P1435, DOI 10.1109/IAdCC.2014.6779537
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Maneerat N., 2011, Proceedings of the Eighth International Joint Conference on Computer Science and Software Engineering (JCSSE 2011), P331, DOI 10.1109/JCSSE.2011.5930143
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P529, DOI 10.1007/s11219-016-9309-7
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Marinescu R, 2001, TOOLS, V39, P173, DOI 10.1109/TOOLS.2001.941671
   McCall JA, 1977 DTIC
   MCCREIGHT EM, 1976, J ACM, V23, P262, DOI 10.1145/321941.321946
   Mekruksavanich S, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON SIGNAL PROCESSING SYSTEMS, P502, DOI 10.1109/ICSPS.2009.143
   Merlo E, 2004, PROC IEEE INT CONF S, P412, DOI 10.1109/ICSM.2004.1357826
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Mitchell TM, 1997, AI MAG, V18, P11
   Moha N, 2010, FORM ASP COMPUT, V22, P345, DOI 10.1007/s00165-009-0115-x
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Monperrus M, 2018, MULTIPLE GOALS DATA
   Munro MJ, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P124
   Murphy-Hill E., 2008, P 2008 INT WORKSHOP, P36
   Murphy-Hill E, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P5
   Murphy-Hill EmersonR., 2005, OOPSLA 05, P282, DOI 10.1145/1094855.1094963
   Nguyen HA, 2009, LECT NOTES COMPUT SC, V5503, P440
   Nongpong K, 2015, INT CONF KNOWL SMART, P7, DOI 10.1109/KST.2015.7051460
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   OMG, DIAGR DEF VERS 1 0
   Paiva Thanis, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0041-1
   Palomba F, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Palomba F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P769, DOI 10.1109/ICSE.2015.244
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Peldszus S, 2016, IEEE INT CONF AUTOM, P578, DOI 10.1145/2970276.2970338
   Polasek I., 2012, 2012 IEEE 10th Jubilee International Symposium on Intelligent Systems and Informatics (SISY 2012), P283, DOI 10.1109/SISY.2012.6339530
   Polasek I., 2012, Proceedings of the 2012 IEEE 16th International Conference on Intelligent Engineering Systems (INES), P115, DOI 10.1109/INES.2012.6249814
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   Qu W, 2007, IRI 2007: PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P638
   Rago A, 2016, SOFTW SYST MODEL, V15, P579, DOI 10.1007/s10270-014-0431-3
   Rahman MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1265, DOI 10.1109/ICSE.2013.6606694
   Rao A., 2007, Detecting Bad Smells in Object Oriented Design Using Design Change Propagation Probability Matrix 1
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Rattan D, 2012, ANNU IEEE IND CONF, P1041
   Reddy KR, 2009, ACM SIGSOFT SOFTW EN, V34, P1
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Sabir F, 2019, SOFTWARE PRACT EXPER, V49, P3, DOI 10.1002/spe.2639
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   Sager T., 2006, P 2006 INT WORKSHOP, P65, DOI DOI 10.1145/1137983.1138000
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Salehie M, 2006, INT C PROGRAM COMPRE, P159, DOI 10.1109/ICPC.2006.6
   Sharma T., 2012, PROC 5 WORKSHOP REFA, P50
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Sharma VS, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2014), P758, DOI 10.1109/SCC.2014.103
   Sharma VS, 2013, INT CONF CLOUD COMP, P148, DOI 10.1109/CloudCom.2013.166
   Shizhe Fu, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321194
   Singh B, 2013, INT CONF COMM SYST, P801, DOI 10.1109/CSNT.2013.171
   SINGH S, 2011, ACM SIGSOFT SOFTW EN, V36, P1, DOI DOI 10.1145/2020976.2020994
   Singh Satwinder, 2012, ACM SIGSOFT Software Engineering Notes, V37, P1
   Sirikul K, 2016, INT JOINT CONF COMP, P268
   Sousa BL, 2017, INT C PROGRAM COMPRE, P360, DOI 10.1109/ICPC.2017.8
   Srinath S, 1998, THESIS
   Stoianov Alecsandar, 2010, IEEE International Joint Conference on Computational Cybernetics and Technical Informatics (ICCC-CONTI 2010). IEEE 8th International Conference on Computational Cybernetics and 9th International Conference on Technical Informatics, P253, DOI 10.1109/ICCCYB.2010.5491288
   Störrle H, 2013, SOFTW SYST MODEL, V12, P307, DOI 10.1007/s10270-011-0217-9
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Tairas R., 2006, P 44 ANN SE REG C, P679, DOI 10.1145/1185448.1185597
   Techapalokul P, 2017, S VIS LANG HUM CEN C, P337, DOI 10.1109/VLHCC.2017.8103498
   Tekin U., 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P43, DOI 10.1109/IWSC.2012.6227865
   Tekin U, 2014, SCI COMPUT PROGRAM, V95, P406, DOI 10.1016/j.scico.2013.09.015
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Udagawa Y, 2014, 16TH INTERNATIONAL CONFERENCE ON INFORMATION INTEGRATION AND WEB-BASED APPLICATIONS & SERVICES (IIWAS 2014), P270
   Ujihara N, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P482, DOI 10.1109/SANER.2017.7884658
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Velioglu S, 2017, 2017 IEEE/ACIS 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P271, DOI 10.1109/SERA.2017.7965737
   Vidal S, 2015, 2015 34TH INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY (SCCC)
   Vogel-Heuser B., 2014, Journal of Software Engineering and Applications, V07, P440
   Wahler V, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P128
   Walter B, 2005, LECT NOTES COMPUT SC, V3556, P154
   Wang TT, 2014, FRONT COMPUT SCI-CHI, V8, P996, DOI 10.1007/s11704-014-3430-1
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Yamashita A, EXPLORING IMPACT INT
   Yamashita A, 2014, EMPIR SOFTW ENG, V19, P1111, DOI 10.1007/s10664-013-9250-3
   Zhang D, 2003, SOFTWARE QUAL J, V11, P87, DOI 10.1023/A:1023760326768
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
   Zibran M.F., 2011, P 5 INT WORKSH SOFTW, P75
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
NR 203
TC 26
Z9 26
U1 1
U2 22
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2021
VL 33
IS 3
AR e2320
DI 10.1002/smr.2320
EA OCT 2020
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QT0GD
UT WOS:000577653100001
DA 2024-07-18
ER

PT J
AU Chugh, M
   Chanderwal, N
   Upadhyay, RK
   Punia, DK
AF Chugh, Mitali
   Chanderwal, Nitin
   Upadhyay, Rajesh Kumar
   Punia, Devendra Kumar
TI Antecedents and consequences of knowledge sharing for software process
   improvement in the Indian software industry
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Indian software development organizations; information technology;
   knowledge sharing; leadership; motivation; software process improvement;
   trust
ID CRITICAL SUCCESS FACTORS; SYSTEMS DEVELOPMENT TEAMS;
   INFORMATION-TECHNOLOGY; ORGANIZATIONAL CULTURE; FIT INDEXES; MANAGEMENT;
   LEADERSHIP; MODEL; DETERMINANTS; TRUST
AB The integration of knowledge sharing is significant for software process improvement (SPI). However, very few empirical studies have evaluated how and to what extent knowledge sharing affects the different aspects of SPI. Drawing upon the resource-based view and the knowledge-based view of software development organizations, we have explored the antecedents and consequences of knowledge sharing for SPI success. This study develops and empirically validates a model presenting how knowledge sharing impacts SPI success, how organizational factors (leadership and trust) and an individual factor (motivation) affect knowledge sharing and how the use of information technology facilitates explicitly the relation between knowledge sharing and SPI success. The empirical testing of the model has been carried out using the statistical technique of structural equation modelling (SEM) by analysing the dataset of 556 respondents collected from Indian software development organizations. The outcomes reveal that knowledge sharing enhances SPI in terms of design effectiveness, lesser fault density and improved software development competence. Also, the results show that the use of information technology moderates the relation of knowledge sharing and SPI. The conclusions also contribute to improving our knowledge about how leadership, trust and motivation drive efficient knowledge sharing on the path to SPI success.
C1 [Chugh, Mitali] Univ Petr & Energy Studies, Sch Comp Sci, Dehra Dun, Uttarakhand, India.
   [Chugh, Mitali] Uttarakhand Tech Univ, Dehra Dun, Uttarakhand, India.
   [Chanderwal, Nitin] Indian Inst Management IIM, Informat Syst & Analyt, Shillong, Meghalaya, India.
   [Upadhyay, Rajesh Kumar] Graph Era Hill Univ, Dept Management, Dehra Dun, Uttarakhand, India.
   [Punia, Devendra Kumar] Paras Hosp Private Ltd, Gurgaon, Haryana, India.
C3 University of Petroleum & Energy Studies (UPES); Uttarakhand Technical
   University; Indian Institute of Management (IIM System); Indian
   Institute of Management Shillong
RP Chugh, M (corresponding author), Univ Petr & Energy Studies, Sch Comp Sci, Dehra Dun, Uttarakhand, India.; Chugh, M (corresponding author), Uttarakhand Tech Univ, Dehra Dun, Uttarakhand, India.
EM mitalichugh11@gmail.com
RI Punia, Devendra/K-8378-2012; Upadhyay, Rajesh Kumar/AAA-4483-2021;
   Nitin, Professor/D-4040-2017
OI Upadhyay, Rajesh Kumar/0000-0002-7341-3944; Nitin,
   Professor/0000-0001-5686-1131; Chugh, Mitali/0000-0002-1777-2387; Kumar,
   Dr. Sumit/0000-0002-1906-5539
CR Abu-Shanab E., 2014, IUP Journal of Knowledge Management, V12, P38
   Aghdam S. M., 2016, Karbala International Journal of Modern Science, V2, P88, DOI DOI 10.1016/J.KIJOMS.2016.02.002
   Ahimbisibwe A, 2015, J ENTERP INF MANAG, V28, P7, DOI 10.1108/JEIM-08-2013-0060
   Ammar D.N., 2014, International Journal of Science and Research, V3, P1314
   ANDERSON JC, 1988, PSYCHOL BULL, V103, P411, DOI 10.1037/0033-2909.103.3.411
   Bagozzi RP, 1998, Journal of the academy of marketing science, V16, P76
   BARNEY J, 1991, J MANAGE, V17, P99, DOI 10.1177/014920639101700108
   Baruch Y, 1999, HUM RELAT, V52, P421, DOI 10.1023/A:1016905407491
   Bavik YL, 2018, LEADERSHIP QUART, V29, P322, DOI 10.1016/j.leaqua.2017.05.006
   BENTLER PM, 1990, PSYCHOL BULL, V107, P238, DOI 10.1037/0033-2909.88.3.588
   Bock GW, 2005, MIS QUART, V29, P87, DOI 10.2307/25148669
   Boomsma A, 2000, STRUCT EQU MODELING, V7, P461, DOI 10.1207/S15328007SEM0703_6
   Byrant S., 2003, J LEADERSH ORG STUD, V9, P32, DOI [10.1177/107179190300900403, DOI 10.1177/107179190300900403]
   Chen XG, 2013, INT J INFORM MANAGE, V33, P553, DOI 10.1016/j.ijinfomgt.2013.01.008
   Chern JY, 2002, J MED SYST, V26, P323, DOI 10.1023/A:1015868720789
   Choi SY, 2010, MIS QUART, V34, P855
   Coun MMJH, 2019, EUR MANAG J, V37, P481, DOI 10.1016/j.emj.2018.12.001
   Cui XL, 2017, INT J INFORM MANAGE, V37, P380, DOI 10.1016/j.ijinfomgt.2017.04.011
   Cummings JN, 2004, MANAGE SCI, V50, P352, DOI 10.1287/mnsc.1030.0134
   Donate MJ, 2015, J BUS RES, V68, P360, DOI 10.1016/j.jbusres.2014.06.022
   DURBIN J, 1950, BIOMETRIKA, V37, P409, DOI 10.1093/biomet/37.3-4.409
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Forman C, 2019, RES POLICY, V48, DOI 10.1016/j.respol.2018.10.021
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Ghobadi S, 2015, INFORM MANAGE-AMSTER, V52, P82, DOI 10.1016/j.im.2014.10.008
   Ghobadi S, 2013, INFORM PROCESS MANAG, V49, P138, DOI 10.1016/j.ipm.2012.07.001
   Goode S, 2001, ACIS 2001, P29
   Nguyen HN, 2011, J MANAG DEV, V30, P206, DOI 10.1108/02621711111105786
   Hair JF, 2010, Multivariate data analysis
   Han Brent M., 2007, VINE, V37, P421, DOI 10.1108/03055720710838506
   Hancock G.R., 2001, STRUCTURAL EQUATION, P195, DOI DOI 10.12691/EDUCATION-3-1-10
   Herranz E, 2016, J UNIVERS COMPUT SCI, V22, P1509
   Hewtone M, 2002, ANNU REV PSYCHOL, V53, P575
   Holste JS, 2010, J KNOWL MANAG, V14, P128, DOI 10.1108/13673271011015615
   Hoyle R.H., Structural Equation Modeling, Concepts, Issues, and Applications, P1, DOI DOI 10.1177/0047287513478503
   Hu LT, 1999, STRUCT EQU MODELING, V6, P1, DOI 10.1080/10705519909540118
   Hung SY, 2011, INT J HUM-COMPUT ST, V69, P415, DOI 10.1016/j.ijhcs.2011.02.004
   Donate MJ, 2011, J KNOWL MANAG, V15, P890, DOI 10.1108/13673271111179271
   Joshi KD, 2007, DECIS SUPPORT SYST, V43, P322, DOI 10.1016/j.dss.2006.10.003
   Kankanhalli A, 2005, MIS QUART, V29, P113, DOI 10.2307/25148670
   Keeni G, 2000, IEEE SOFTWARE, V17, P79, DOI 10.1109/52.854073
   Kimble C., 2013, Global Business and Organizational Excellence, V32, P6, DOI DOI 10.1002/JOE.21480
   Koriat N, 2014, INT J INFORM MANAGE, V34, P577, DOI 10.1016/j.ijinfomgt.2014.04.009
   Koriat N, 2018, J INF KNOWL MANAG, V17, DOI 10.1142/S0219649218500260
   Korsaa M, 2013, J SOFTW-EVOL PROC, V25, P381, DOI 10.1002/smr.570
   Kremer H, 2019, BUS HORIZONS, V62, P65, DOI 10.1016/j.bushor.2018.08.010
   Kucharska W, 2016, PROC INT CONF INTELL, P159
   Kutner MH, 1996, APPL LINEAR STAT MOD, V149, DOI [10.1088/1757-899X/149/1/012180, DOI 10.1088/1757-899X/149/1/012180]
   Lam A, 2010, J KNOWL MANAG, V14, P51, DOI 10.1108/13673271011015561
   Lee JC, 2019, INFORM DEV, V35, P6, DOI 10.1177/0266666917724194
   Lee JC, 2017, INFORM TECHNOL PEOPL, V30, P47, DOI 10.1108/ITP-09-2013-0171
   Lee JC, 2016, COMPUT HUM BEHAV, V54, P462, DOI 10.1016/j.chb.2015.08.030
   Lee P, 2010, MANAGE LEARN, V41, P473, DOI 10.1177/1350507610362036
   Liao CW, 2017, HUM RESOUR MANAGE R, V27, P648, DOI 10.1016/j.hrmr.2016.12.010
   Lucas L.M., 2005, J KNOWL MANAG, V9, P87, DOI DOI 10.1108/13673270510610350
   MALHOTRA Y., 2004, KNOWLEDGE MANAGEMENT, P87
   Mao HY, 2016, INT J INFORM MANAGE, V36, P1062, DOI 10.1016/j.ijinfomgt.2016.07.001
   Mehta N, 2014, INFORM MANAGE-AMSTER, V51, P417, DOI 10.1016/j.im.2014.02.007
   Mejia J, 2016, SCI COMPUT PROGRAM, V121, P3, DOI 10.1016/j.scico.2015.12.002
   Mitchell SM, 2016, INFORM SOFTWARE TECH, V72, P151, DOI 10.1016/j.infsof.2015.12.007
   Montoni M, 2007, LECT NOTES COMPUT SC, V4764, P175
   Mueller J, 2014, EUR MANAG J, V32, P190, DOI 10.1016/j.emj.2013.05.006
   Nasir M.H. N., 2011, Scientific Research and Essays, V6, P2174, DOI [DOI 10.5897/SRE10.1171, 10.5897/SRE10.1171]
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   Niazi M, 2010, INFORM SOFTWARE TECH, V52, P1204, DOI 10.1016/j.infsof.2010.06.005
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   O'Connor R., 2011, KNOWLEDGE ENG SOFTWA, P273, DOI DOI 10.4018/978-1-60960-509-4.CH015
   Obeidat B., 2015, European Journal of Social Sciences, V50, P313
   Park JG, 2014, INT J PROJ MANAG, V32, P153, DOI 10.1016/j.ijproman.2013.02.004
   Patnayakuni R, 2007, IEEE T ENG MANAGE, V54, P286, DOI 10.1109/TEM.2007.893997
   Pinjani P, 2013, INFORM MANAGE-AMSTER, V50, P144, DOI 10.1016/j.im.2012.10.002
   Podsakoff PM, 2003, J APPL PSYCHOL, V88, P879, DOI 10.1037/0021-9010.88.5.879
   PRAHALAD CK, 1990, HARVARD BUS REV, V68, P79
   Preacher KJ, 2004, BEHAV RES METH INS C, V36, P717, DOI 10.3758/BF03206553
   Rashid M, 2019, INT J INFORM MANAGE, V46, P104, DOI 10.1016/j.ijinfomgt.2018.11.015
   Ribiere V. M., 2003, Knowledge Management Research & Practice, V1, P39, DOI 10.1057/palgrave.kmrp.8500004
   Rodríguez-Elias OM, 2008, INFORM SOFTWARE TECH, V50, P481, DOI 10.1016/j.infsof.2007.07.002
   Roller D, 2004, J ENG DESIGN, V15, P367, DOI 10.1080/09544820410001697181
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Sawyer S, 2010, INFORM SYST J, V20, P81, DOI 10.1111/j.1365-2575.2008.00311.x
   SCOTT SG, 1994, ACAD MANAGE J, V37, P580, DOI 10.5465/256701
   Seyal AH, 2002, BEHAV INFORM TECHNOL, V21, P71, DOI 10.1080/01449290210123354
   Shao Z, 2017, BEHAV INFORM TECHNOL, V36, P194, DOI 10.1080/0144929X.2016.1221461
   Sharma P, 2019, COMPUT STAND INTER, V66, DOI 10.1016/j.csi.2019.04.009
   Siemsen E, 2010, ORGAN RES METHODS, V13, P456, DOI 10.1177/1094428109351241
   Singh S.K., 2019, J BUS RES, DOI [DOI 10.1016/J.JBUSRES.2019.04.040, 10.1016/j.jbusres.2019.04.040]
   Slaughter SA, 2006, INFORM SYST RES, V17, P301, DOI 10.1287/isre.1060.0098
   Smite D, 2017, INFORM SOFTWARE TECH, V86, P71, DOI 10.1016/j.infsof.2017.01.003
   Srivastava A, 2006, ACAD MANAGE J, V49, P1239, DOI 10.2307/20159830
   STRAUB DW, 1989, MIS QUART, V13, P147, DOI 10.2307/248922
   Su AYS, 2010, COMPUT EDUC, V55, P752, DOI 10.1016/j.compedu.2010.03.008
   Sudhakar GP, 2012, J ENTERP INF MANAG, V25, P537, DOI 10.1108/17410391211272829
   Sulayman M, 2014, INFORM SOFTWARE TECH, V56, P807, DOI 10.1016/j.infsof.2014.02.006
   Tabachnick B. G., 2007, USING MULTIVARIATE S, P1
   Taylor E. Z., 2006, Journal of Information Systems, V20, P103, DOI 10.2308/jis.2006.20.1.103
   Tiwana A, 2003, COMMUN ACM, V46, P345, DOI 10.1145/953460.953520
   Tohidinia Z, 2010, IND MANAGE DATA SYST, V110, P611, DOI 10.1108/02635571011039052
   Tseng SM, 2017, J ENTERP INF MANAG, V30, P583, DOI 10.1108/JEIM-04-2016-0081
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   von Krogh G., 2011, J KNOWLEDGE MANAGEME, V49, P240
   Wernerfelt B, 1984, STRATEG MANAG J, V46, P217
   Wickramasinghe V, 2012, EFFECTS INTERPERSONA, V42, DOI [10.1108/03055721211227255, DOI 10.1108/03055721211227255]
   Yang LR, 2012, AUTOMAT CONSTR, V22, P182, DOI 10.1016/j.autcon.2011.06.016
   Zhao DL, 2015, INT J PROJ MANAG, V33, P325, DOI 10.1016/j.ijproman.2014.05.003
NR 104
TC 1
Z9 1
U1 0
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2021
VL 33
IS 2
AR e2291
DI 10.1002/smr.2291
EA JUL 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA YZ7ZN
UT WOS:000549440100001
DA 2024-07-18
ER

PT J
AU Sneed, HM
   Verhoef, C
AF Sneed, Harry M.
   Verhoef, Chris
TI Cost-driven software migration: An experience report
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE automated code-based cost estimation; code conversion; incremental
   migration; migration project planning; redevelopment; reimplementation
ID IT-OUTSOURCING SUCCESS; CODE; SYSTEMS; MAINTENANCE; QUALITY; FUTURE;
   LINES
AB Software migration projects are often bound either by time or cost or by both. If the project is bound by both time and cost, the user must sacrifice something else, usually the quality. The migration strategy depends on how the project is bound. Most migration projects are bound by time. The new system must be in operation by a given date, no matter what it costs. The project described here-a state employee payroll system-is bound by cost. It must remain within the budget, no matter how long it takes. The original costs were estimated based on the code size and the productivity measured in previous migration projects using three different approaches: conversion, redevelopment, and reimplementation. The conversion approach would have been the cheapest, but it had already been tried and failed. The redevelopment approach was considered to be out of the question due to the high costs. Thus, reimplementation remained as the only alternative. The costs of this approach were estimated using three different estimation methods and approved by the state government. The project has been in progress for 4 years, and until now, the estimated costs and actual costs are in the same order of magnitude: the costs have remained within budget. In fact, the costs are less than what was estimated with some methods. As this particular project is not bound by time, it is a good example of continuous migration.
C1 [Sneed, Harry M.] ZTP Prentner Certified Tech Auditing Agcy, Vienna, Austria.
   [Verhoef, Chris] Vrije Univ Amsterdam, Comp Sci Dept, Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam
RP Sneed, HM (corresponding author), ZTP Prentner Certified Tech Auditing Agcy, Vienna, Austria.
EM harry.sneed@t-online.de
OI Sneed, Harry/0000-0003-4869-0269
CR Albrech A., 1979, PROC JOINT SHAREGUID, P83
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 1988, Principles of software engineering management
   [Anonymous], 5 CORE METRICS INTEL
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], SOFTWARE CAPITAL EC
   [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   [Anonymous], MYTHICAL MAN MONTH
   Bianchi A, 2003, IEEE T SOFTWARE ENG, V29, P225, DOI 10.1109/TSE.2003.1183932
   Boehm BW., 1981, Software Engineering Economics
   Brodie M., 1995, MIGRATING LEGACY SYS
   Canfora G, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P23
   Clemmons R., 2006, ACM Digital Library, V19, P18
   De Marco A, 2018, PROC IEEE INT CONF S, P583, DOI 10.1109/ICSME.2018.00055
   Delen GPAJ, 2019, J SYST SOFTWARE, V156, P113, DOI 10.1016/j.jss.2019.06.074
   Delen GPAJ, 2016, SCI COMPUT PROGRAM, V130, P37, DOI 10.1016/j.scico.2016.04.001
   DeMarco T, 1986, CONTROLLING SOFTWARE
   Ebert C, 2014, IEEE SOFTWARE, V31, P24, DOI 10.1109/MS.2014.138
   Erbes J, 2012, COMPUTER, V45, P66, DOI 10.1109/MC.2012.73
   Erdogmus H, 2004, IEEE SOFTWARE, V21, P18, DOI 10.1109/MS.2004.1293068
   Eveleens JL, 2012, SCI COMPUT PROGRAM, V77, P314, DOI 10.1016/j.scico.2011.07.010
   Eveleens JL, 2009, SCI COMPUT PROGRAM, V74, P934, DOI 10.1016/j.scico.2009.09.005
   EwusiMensah K, 1997, COMMUN ACM, V40, P74, DOI 10.1145/260750.260775
   Faust D, 2003, SOFTWARE PRACT EXPER, V33, P933, DOI 10.1002/spe.530
   Galorath D.D., 2006, SOFTWARE SIZING ESTI
   Halstead MH, 1975, SOFTWARE PHYS BASIC
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Hjalmarsson A., 2013, P 6 IFIP WG 8 1 WORK, P39
   Hughes JK, 1979, PL I STRUCTURED PROG
   Jones C., 1985, Programming Productivity
   Jones C., 2000, Software Assessments, Benchmarks, and Best Practices
   Jones TC, 1998, Estimating software costs
   KEARNEY JK, 1986, COMMUN ACM, V29, P1044, DOI 10.1145/7538.7540
   Kersten B., 2003, Cutter IT Journal, V16, P27
   Klusener AS, 2005, SCI COMPUT PROGRAM, V54, P143, DOI 10.1016/j.scico.2004.03.012
   Klusener AS, 2004, SOFTWARE QUAL J, V12, P297, DOI 10.1023/B:SQJO.0000039790.04885.13
   Klusener S, 2003, PROC IEEE INT CONF S, P373, DOI 10.1109/ICSM.2003.1235445
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lehman MM, 1998, IEEE SOFTWARE, V15, P40, DOI 10.1109/MS.1998.646878
   Martin J, 1993, SYSTEMS APPL ARCHITE
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Montgomery SL, 1991, AD CYCLE IBMS FRAMEW
   Pinker EJ, 2002, COMMUN ACM, V45, P76, DOI 10.1145/506218.506219
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Rahaozar M, 2003, J SOFTW MAINT EVOL-R, V15, P325, DOI 10.1002/smr.278
   Ramaswamy R, 2000, IEEE SOFTWARE, V17, P90, DOI 10.1109/52.896255
   Sarkar S, 2007, IEEE T SOFTWARE ENG, V33, P14, DOI 10.1109/TSE.2007.256942
   Sellink A, 1999, PROG COMPREHEN, P38, DOI 10.1109/WPC.1999.777742
   Sellink A, 2002, SCI COMPUT PROGRAM, V45, P193, DOI 10.1016/S0167-6423(02)00061-8
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Sneed H, 2001, ENCY SOFTW ENG
   Sneed H., 1998, SOFTWARE PROCESS, V4, P43
   Sneed H, 1990, ONLINE Z DATENVERARB, V5, P48
   Sneed Harry M., 2009, International Journal on Software Tools for Technology Transfer, V11, P441, DOI 10.1007/s10009-009-0128-z
   Sneed H. M., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P204, DOI 10.1109/WCRE.1999.806961
   Sneed H. M., 1991, Journal of Software Maintenance: Research and Practice, V3, P163, DOI 10.1002/smr.4360030304
   Sneed H. M., 2010, P 26 IEEE INT C SOFT, P1
   Sneed H, 2019, J SYST SOFTWARE, V155, P162, DOI 10.1016/j.jss.2019.05.012
   Sneed H, 2011, EUR CON SFTWR MTNCE, P287, DOI 10.1109/CSMR.2011.35
   Sneed HM, 2016, IEEE SOFTWARE, V33, P80, DOI 10.1109/MS.2015.78
   Sneed HM, 2008, LECT NOTES COMPUT SC, V5338, P271
   Sneed HM, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P2, DOI 10.1109/CSMR.1998.665726
   Sneed HM, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P111
   Sneed HM, 2004, PROC IEEE INT CONF S, P264, DOI 10.1109/ICSM.2004.1357810
   Sneed HM, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P196, DOI 10.1109/CSMR.2005.9
   SNEED HM, 1995, IEEE SOFTWARE, V12, P24, DOI 10.1109/52.363168
   Sneed HM, 1995, J SOFTW MAINT-RES PR, V7, P405, DOI 10.1002/smr.4360070604
   Sneed HM, 2015, SOFTWAREMIGRATION PR
   Sneed HM, 2007, SOFTWARE MEASUREMENT, P245
   Staron M, 2011, J SOFTW MAINT EVOL-R, V23, P89, DOI 10.1002/smr.470
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Strassmann P. A., 1998, American Programmer, V11, P3
   Strassmann P.A., 1994, POLITICS INFORM MANA
   Symons C, 2012, IEEE SOFTWARE, V29, P67, DOI 10.1109/MS.2011.126
   Taylor MJ, 1998, J SOFTW MAINT-RES PR, V10, P381, DOI 10.1002/(SICI)1096-908X(199811/12)10:6<381::AID-SMR177>3.0.CO;2-N
   Terekhov AA, 2000, IEEE SOFTWARE, V17, P111, DOI 10.1109/52.895180
   TOCKEY S, 2005, RETURN SOFTWARE
   van der Spek P, 2014, SYSTEMS ENG, V17, P166, DOI 10.1002/sys.21261
   Van Geet J, 2010, IEEE SOFTWARE, V27, P30, DOI 10.1109/MS.2010.65
   Verhoef C, 2005, SCI COMPUT PROGRAM, V56, P315, DOI 10.1016/j.scico.2004.08.004
   Verhoef C, 2005, SCI COMPUT PROGRAM, V56, P275, DOI 10.1016/j.scico.2004.08.003
   Verhoef C, 2002, SCI COMPUT PROGRAM, V45, P1, DOI 10.1016/S0167-6423(02)00106-5
   Verhoef C, 2011, SCHATTINGSKWALITEIT
   VESSEY I, 1983, COMMUN ACM, V26, P128, DOI 10.1145/358024.358057
   WATERS RC, 1988, IEEE T SOFTWARE ENG, V14, P1207, DOI 10.1109/32.7629
   Zallmann A, 2014, IBM AIX POWER VS LIN
NR 86
TC 3
Z9 3
U1 1
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2020
VL 32
IS 7
AR e2236
DI 10.1002/smr.2236
EA FEB 2020
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MH8VX
UT WOS:000510589900001
OA Green Published
DA 2024-07-18
ER

PT J
AU Chaudhry, N
   Yousaf, MM
   Khan, MT
AF Chaudhry, Natalia
   Yousaf, Muhammad Murtaza
   Khan, Muhammad Taimoor
TI Security assessment of data management systems for cyber physical system
   applications
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE access control security; CPS; data integrity; data security
ID BIG DATA; CHALLENGES
AB Cyber physical system (CPS) applications are widely used to control critical infrastructure of various application domains, eg, medical health care, energy, and power, to name a few. Such applications usually take input data from sensors, estimate current state of the system, and then based on the estimation, make critical decisions to control the underlying infrastructure automatically. Therefore, security and integrity of the (system state) data are critically important to ensure safe operations of CPS. In this paper, we present a review of security of various data management systems used in CPS. Since CPS are composed of systems of (sub)systems that generate a huge amount of data (ie, periodical sensor input data), therefore, recently, NoSQL and NewSQL data management systems have emerged as popular data management systems to support efficient and scalable analysis of unstructured data. Unfortunately, these systems were not initially build for data security and thus are vulnerable to numerous security attacks. Considering flexible data model and efficient access methods in NoSQL and NewSQL, we discuss the security attacks on such data management systems and their corresponding solutions to mitigate them. In particular, we analyze the system and data security of popular NoSQL and NewSQL systems. To analyze that, we defined feature vectors for system and data security and compared the data systems against them. Finally, we propose security solutions for data management systems by identifying various security vulnerabilities in internal security algorithms of such systems.
C1 [Chaudhry, Natalia; Yousaf, Muhammad Murtaza] Univ Punjab, PUCIT, Lahore, Pakistan.
   [Khan, Muhammad Taimoor] Univ Greenwich, Sch Comp & Math Sci, London, England.
C3 University of Punjab; University of Greenwich
RP Khan, MT (corresponding author), Univ Greenwich, Sch Comp & Math Sci, London, England.
EM m.khan@gre.ac.uk
RI Chaudhry, Natalia/AAQ-2921-2021
OI Chaudhry, Natalia/0000-0002-8081-827X; Khan, Muhammad
   Taimoor/0000-0002-5752-6420
CR Abd Elminaam DiaaSalama., 2010, IJ NETWORK SECURITY, V10, P216
   Ahmadian M, 2017, INT J INFORM MANAGE, V37, P63, DOI 10.1016/j.ijinfomgt.2016.11.005
   Alguliyev R, 2018, COMPUT IND, V100, P212, DOI 10.1016/j.compind.2018.04.017
   [Anonymous], 2009, WORKSH FUT DIR CYB S
   [Anonymous], 2018, HDB E BUSINESS SECUR
   [Anonymous], NOSQL DAT
   [Anonymous], 2002, TUMUNICH TECHNICAL R
   [Anonymous], 2018, J TU SOFIA PLOVDIV B
   [Anonymous], 2016, ARXIV160101498
   [Anonymous], 2011, INT J COMPUT TRENDS
   [Anonymous], IEEE S P WORKSH WEB
   [Anonymous], 2010, ACM SIGMOD RECORD
   [Anonymous], 2014, 9 INT C INF TECHN AP
   [Anonymous], THESIS
   [Anonymous], 2012, ARXIV12040764
   [Anonymous], 2019, RECENT PATENTS ENG
   [Anonymous], C SOC BRAS COMP BEL
   [Anonymous], 2018, ANAL NOSQL DATABASE
   [Anonymous], 2015, INT J ADV COMPUT SCI
   [Anonymous], 2011, INT J EMERGING TECHN
   Canim M, 2007, LECT NOTES COMPUT SC, V4602, P177
   Chen Y-C, 2019, 2019 IEEE TEX POW, P1
   Colombo P, 2016, DATA SCI ENG, V1, P127, DOI 10.1007/s41019-016-0015-z
   Fernández-Medina E, 2005, INFORM SOFTWARE TECH, V47, P463, DOI 10.1016/j.infsof.2004.09.013
   Gifty R, 2019, NEURAL COMPUT APPL, V31, P23, DOI 10.1007/s00521-018-3635-6
   Gunes V, 2014, KSII T INTERNET INF, V8, P4242, DOI 10.3837/tiis.2014.12.001
   Guo YB, 2013, J COMPUT, V8, P1427, DOI 10.4304/jcp.8.6.1427-1432
   Hui L, 2018, MATH FDN COMPUT, V1, P1, DOI 10.3934/mfc.2018001
   Humayed A, 2017, IEEE INTERNET THINGS, V4, P1802, DOI 10.1109/JIOT.2017.2703172
   Inukollu V.N., 2014, International Journal of Network Security its Applications, V6, P45, DOI DOI 10.5121/IJNSA.2014.6304
   Lun YZ, 2019, J SYST SOFTWARE, V149, P174, DOI 10.1016/j.jss.2018.12.006
   Mahajan P., 2013, GLOBAL J COMPUTER SC, V13
   Mahmoud MS, 2019, NEUROCOMPUTING, V338, P101, DOI 10.1016/j.neucom.2019.01.099
   Morgado C, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P135, DOI 10.1109/QRS.2018.00027
   Murtaza A, 2019, 2019 2ND INTERNATIONAL CONFERENCE ON COMPUTING, MATHEMATICS AND ENGINEERING TECHNOLOGIES (ICOMET), DOI 10.1109/icomet.2019.8673469
   Nadeem A., 2005, Information and Communication Technologies, ICICT, V2005, P84, DOI DOI 10.1109/ICICT.2005.1598556
   Niggemann Oliver, 2015, Dx@ safeprocess, P185
   Okman L, 2011, IEEE INT CONF TRUST, P541, DOI 10.1109/TrustCom.2011.70
   Panetto H, 2019, ANNU REV CONTROL, V47, P200, DOI 10.1016/j.arcontrol.2019.02.002
   Piattini MG, 2000, 34TH ANNUAL 2000 INTERNATIONAL CARNAHAN CONFERENCE ON SECURITY TECHNOLOGY, PROCEEDINGS, P228, DOI 10.1109/CCST.2000.891192
   Putra SD., 2019, TELKOMNIKA (Telecommun Comput Electron Cont), V17, P1282
   Ruan C, 2003, LECT NOTES COMPUT SC, V2736, P917
   Sharma PriyaP., 2014, Int. J. Comput. Sci. Inf. Technol, V5, P2126
   Shi JC, 2011, INT GEOSCI REMOTE SE, P1, DOI 10.1109/IGARSS.2011.6048882
   Shmueli E, 2014, COMPUT SECUR, V44, P33, DOI 10.1016/j.cose.2014.03.011
   Terzi DS, 2015, INT CONF INTERNET, P202, DOI 10.1109/ICITST.2015.7412089
   Tripathi R., 2014, INT J ADV FDN RES CO, V1, P68
   Wang Eric Ke, 2010, Proceedings of the 2010 IEEE/ACM Int'l Conference on Green Computing and Communications (GreenCom) and Int'l Conference on Cyber, Physical and Social Computing (CPSCom), P733, DOI 10.1109/GreenCom-CPSCom.2010.36
   Wang WY, 2013, COMPUT NETW, V57, P1344, DOI 10.1016/j.comnet.2012.12.017
   Xu LD, 2019, ENTERP INF SYST-UK, V13, P148, DOI 10.1080/17517575.2018.1442934
   Zahid A, 2014, 2014 CONFERENCE ON INFORMATION ASSURANCE AND CYBER SECURITY (CIACS), P1, DOI 10.1109/CIACS.2014.6861323
NR 51
TC 3
Z9 3
U1 2
U2 17
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2020
VL 32
IS 2
SI SI
AR e2241
DI 10.1002/smr.2241
EA DEC 2019
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KH6HP
UT WOS:000500316300001
DA 2024-07-18
ER

PT J
AU Catolino, G
   Ferrucci, F
AF Catolino, Gemma
   Ferrucci, Filomena
TI An extensive evaluation of ensemble techniques for software change
   prediction
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE change prediction; empirical study; ensemble techniques; machine
   learning
ID RESEARCHER BIAS; BUG PREDICTION; QUALITY; METRICS; CLASSIFIERS;
   SELECTION; IMPACT; SUITE
AB Predicting the areas of the source code having a higher likelihood to change in the future represents an important activity to allow developers to plan preventive maintenance operations. For this reason, several change prediction models have been proposed. Moreover, research community demonstrated how different classifiers impact on the performance of devised models as well as classifiers tend to perform similarly even though they are able to correctly predict the change proneness of different code elements, possibly indicating the presence of some complementarity among them. In this paper, we deeper investigated whether the use of ensemble approaches, ie, machine learning techniques able to combine multiple classifiers, can improve the performances of change prediction models. Specifically, we built three change prediction models based on different predictors, ie, product-, process- metrics-, and developer-related factors, comparing the performances of four ensemble techniques (ie, Boosting, Random Forest, Bagging, and Voting) with those of standard machine learning classifiers (ie, Logistic Regression, Naive Bayes, Simple Logistic, and Multilayer Perceptron). The study was conducted on 33 releases of 10 open-source systems, and the results showed how ensemble methods and in particular Random Forest provide a significant improvement of more than 10% in terms of F measure. Indeed, the statistical analyses conducted confirm the superiority of this ensemble technique. Moreover, the model built using developer-related factors performed better than the other models that exploit product and process metrics and achieves an overall median of F measure around 77%.
C1 [Catolino, Gemma; Ferrucci, Filomena] Univ Salerno, Dept Comp Sci, Fisciano, Italy.
C3 University of Salerno
RP Catolino, G (corresponding author), Via Giovanni Paolo 2, I-84084 Fisciano 132, Italy.
EM gcatolino@unisa.it
RI Ferrucci, Filomena/AAG-6799-2020; Catolino, Gemma/AAD-3209-2020
OI Ferrucci, Filomena/0000-0002-0975-8972; Catolino,
   Gemma/0000-0002-4689-3401
CR Abdi MK, 2006, EUROMICRO CONF PROC, P310, DOI 10.1109/EUROMICRO.2006.20
   Ah-Rim Han, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P76, DOI 10.1109/COMPSAC.2008.80
   [Anonymous], 2014, P 5 INT WORKSH EM TR
   [Anonymous], 2017, ACM SIGSOFT SOFTWARE
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Azhar D, 2016, THESIS
   Azzeh M, 2015, J SYST SOFTWARE, V103, P36, DOI 10.1016/j.jss.2015.01.028
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baeza-Yates R., 1999, Modern information retrieval
   Baeza-Yates R., 1999, MODERN INFORM RETRIE, V463
   Baldi P, 2000, BIOINFORMATICS, V16, P412, DOI 10.1093/bioinformatics/16.5.412
   Banczyk K, 2011, LECT NOTES ARTIF INT, V6592, P312, DOI 10.1007/978-3-642-20042-7_32
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bell RM, 2013, EMPIR SOFTW ENG, V18, P478, DOI 10.1007/s10664-011-9178-4
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   BOTTOU L, 1992, NEURAL COMPUT, V4, P888, DOI 10.1162/neco.1992.4.6.888
   Braga PL, 2007, IEEE IJCNN, P1595, DOI 10.1109/IJCNN.2007.4371196
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Catolino G, 2018, EXTENSIVE EVALUATION
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   Catolino G, 2018, 2018 IEEE WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P25, DOI 10.1109/MALTESQUE.2018.8368455
   Catolino G, 2017, INT C PROGRAM COMPRE, P186, DOI 10.1109/ICPC.2017.19
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cohen J., 1988, STAT POWER ANAL BEHA
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Di Nucci D, 2017, IEEE TETCI, V1, P202, DOI 10.1109/TETCI.2017.2699224
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Duda R., 1973, Pattern Classification and Scene Analysis
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   Eski S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P566, DOI 10.1109/ICSTW.2011.43
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fowler Martin, 1997, 11 EUR C JYV FINL
   Freund Y., 1996, INT C MACHINE LEARNI, P148
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Girba T, 2004, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2004.1357788
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han AR, 2010, J SYST SOFTWARE, V83, P222, DOI 10.1016/j.jss.2009.09.038
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   HosmerJr David W, 2013, Applied logistic regression, V398
   Idri A, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P132, DOI 10.5220/0005822701320139
   Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khoshgoftaar TM, 2005, INTELL DATA ANAL, V9, P3, DOI 10.3233/IDA-2005-9102
   Khoshgoftaar TM, 2009, SOFTWARE QUAL J, V17, P25, DOI 10.1007/s11219-008-9058-3
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kocaguneli E, 2009, INT S SOFTW REL ENG
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kohavi R, 1998, Feature Selection forKnowledge Discovery and Data Mining, P33, DOI 10.1007/978-1-4615-5725-8_3.
   Kultur Y., 2008, SIGSOFT '08/FSE-16: Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, P330
   Kumar L, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P4, DOI 10.1145/3021460.3021461
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Lu HM, 2012, EMPIR SOFTW ENG, V17, P200, DOI 10.1007/s10664-011-9170-z
   Malhotra Ruchika, 2015, 2015 4th International Conference on Reliability, Infocom Technologies and Optimization (ICRITO) (Trends and Future Directions), P1, DOI 10.1109/ICRITO.2015.7359253
   Malhotra R, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P311, DOI 10.1145/3067695.3076007
   Malhotra R, 2013, INT J MACH LEARN CYB, V4, P273, DOI 10.1007/s13042-012-0095-7
   Marinescu C, 2014, INT SYMP SYMB NUMERI, P544, DOI 10.1109/SYNASC.2014.78
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   Misirli AT, 2011, SOFTWARE QUAL J, V19, P515, DOI 10.1007/s11219-010-9128-1
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Pahariya JS, 2009, WOR CONG NAT BIOL, P848
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Peer A, 2013, 2013 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P2026, DOI 10.1109/ICACCI.2013.6637493
   Peng CYJ, 2002, J EDUC RES, V96, P3, DOI 10.1080/00220670209598786
   Petric J, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962610
   Reyzin L., 2006, P 23 INT C MACH LEAR, V148, P753, DOI [DOI 10.1145/1143844.1143939, 10.1145/1143844.1143939]
   Robnik-Sikonja M, 2004, LECT NOTES COMPUT SC, V3201, P359
   Rokach L, 2010, ARTIF INTELL REV, V33, P1, DOI 10.1007/s10462-009-9124-7
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Rosenblatt F., 1962, Principles of neurodynamics: perceptrons and the theory of brain mechanisms, DOI [DOI 10.21236/AD0256582, 10.21236/ad0256582]
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Seni G., 2010, Ensemble Methods in Data Mining: Improving Accuracy through Combining Predictions
   Sharafat Ali R., 2008, Journal of Software, V3, P26, DOI 10.4304/jsw.3.5.26-39
   Sharafat AR, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P27
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Soetens QD, 2016, EMPIR SOFTW ENG, V21, P1990, DOI 10.1007/s10664-015-9405-5
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   TANTITHAMTHAVOR.C, 2016, PROC INT CONF SOFTW, P321, DOI DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tsantalis N, 2005, IEEE T SOFTWARE ENG, V31, P601, DOI 10.1109/TSE.2005.83
   Vinaykumar M.C. K., 2010, Handbook of Research on Machine Learning Applications and Trends: Algorithms, Methods, and Techniques, P499
   Wang T., 2011, Journal of Information Computational Science, V8, P4241
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
NR 101
TC 19
Z9 19
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2019
VL 31
IS 9
SI SI
AR e2156
DI 10.1002/smr.2156
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JD3OV
UT WOS:000489885900004
DA 2024-07-18
ER

PT J
AU Tiwari, S
   Gupta, A
AF Tiwari, Saurabh
   Gupta, Atul
TI Use case specifications: How complete are they?
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE completeness; empirical study; use case modeling; use case variants;
   (WH2)-H-5 analysis
ID QUALITY; FRAMEWORK
AB The flexibility of the use cases in specifying requirements from informal textual descriptions to more formal ones makes them usable in different contexts and purposes. However, the versatility of use cases regarding their admissible structure raises a natural concern about the specification completeness. This paper reports on the analysis of the eight different variants of use case template regarding their functional completeness, ability to express the set of particular functionalities, by comparing their information contents exercised by comprehensive questionnaires on five different problem specifications. The questionnaire was obtained from two sources: one based on the understanding of the functionality to be implemented and the other based on the functionality documented in eight different use case templates under study. Our results suggested that use cases can be used to specify a complete set of requirements intended to develop a software system. We found that the choice of a use case template influences the completeness of the specification. A more detailed analysis of the eight different variants of use case template resulted in the identification of 21 significant use case elements. We showed that by incorporating these significant use case elements in a given template, the completeness of the specification could be further enhanced.
C1 [Tiwari, Saurabh] DA IICT, Gandhinagar, India.
   [Gupta, Atul] Indian Inst Informat Technol Design & Mfg Jabalpu, Comp Sci & Engn, Jabalpur, India.
C3 Dhirubhai Ambani Institute of Information & Communication Technology;
   Indian Institute of Information Technology Design & Manufacturing,
   Jabalpur
RP Tiwari, S (corresponding author), DA IICT, Gandhinagar, India.
EM saurabh_t@daiict.ac.in
RI Gupta, Atul/ABB-8611-2020
OI Gupta, Atul/0000-0001-5051-5887; Tiwari, Saurabh/0000-0002-2741-3150
FU Science and Engineering Research Board (SERB), Department of Science and
   Technology (DST) [ECR/2016/001347]
FX Science and Engineering Research Board (SERB), Department of Science and
   Technology (DST), Govt. of India, Grant/Award Number: ECR/2016/001347
CR Achour CB, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/ISRE.1999.777983
   Alexander I. F., 2002, Writing Better Requirements
   Anda B, 2005, EMPIR SOFTW ENG, V10, P285, DOI 10.1007/s10664-005-1289-3
   Anda B, 2002, INSPECTION TECHNIQUE, P127, DOI [10.1145/568760.568785, DOI 10.1145/568760.568785]
   Anda B., 2001, P 4 INT C UNIFIED MO, P487
   Anda B, 2009, INFORM SOFTWARE TECH, V51, P1699, DOI 10.1016/j.infsof.2009.04.005
   Annesley TM, 2010, CLIN CHEM, V56, P897, DOI 10.1373/clinchem.2010.146589
   [Anonymous], 2007, GETTING STARTED USE
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], CUSTOMER CTR PRODUCT
   [Anonymous], INT SIB C CONTR COMM
   [Anonymous], 1998, Practical nonparametric statistics
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Armour F., 2000, ADV USE CASE MODELIN
   Brace W, 2014, REQUIR ENG, V19, P1, DOI 10.1007/s00766-012-0154-3
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   Carson RS., 1998, INCOSE INT S, V8, P738, DOI [10.1002/j.2334-5837.1998.tb00105.x, DOI 10.1002/J.2334-5837.1998.TB00105.X]
   Cockburn A., 2001, Writing effective use cases, V1
   COSTELLO RJ, 1995, J SYST SOFTWARE, V29, P39, DOI 10.1016/0164-1212(94)00127-9
   Cox K, 2004, J RES PRACT INF TECH, V36, P211
   DAVIS A, 1993, PROCEEDINGS FOR THE 1993 ANNUAL CONFERENCE OF THE SOUTHWEST/TEXAS POPULAR CULTURE ASSOCIATION, P144
   El-Attar M, 2012, REQUIR ENG, V17, P187, DOI 10.1007/s00766-011-0135-y
   El-Attar M, 2009, EMPIR SOFTW ENG, V14, P477, DOI 10.1007/s10664-008-9101-9
   Espana Sergio., 2010, J BRAZILIAN COMPUTER, V16, P3, DOI [10.1007/s13173-010-0003-5, DOI 10.1007/S13173-010-0003-5]
   Fleisch W, 1999, APPL USE CASES REQUI, P75, DOI [10.1109/ISORC.1999.776354, DOI 10.1109/ISORC.1999.776354]
   Génova G, 2013, REQUIR ENG, V18, P25, DOI 10.1007/s00766-011-0134-z
   Graham I., 1998, REQUIREMENTS ENG RAP
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Howell D.C., 2011, Statistical methods for psychology
   Insfran E., 2002, Requirements Engineering, V7, P61, DOI 10.1007/s007660200005
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Jacobson A., 2004, Software and System Modeling, V3, P210, DOI [10.1007/s10270-004-0060-3, DOI 10.1007/S10270-004-0060-3]
   JACOBSON I, 1987, SIGPLAN NOTICES, V22, P183, DOI 10.1145/38807.38824
   Kulak D., 2000, USE CASES REQUIREMEN, V1st
   Lauesen S, 2012, REQUIR ENG, V17, P3, DOI 10.1007/s00766-011-0140-1
   MASSEY FJ, 1951, J AM STAT ASSOC, V46, P68, DOI 10.2307/2280095
   Menzel I., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P15, DOI 10.1109/RE.2010.13
   Mohagheghi P, 2005, PROC INT CONF SOFTW, P303
   Overgaard G., 2005, Use cases: patterns and blueprints
   Phalp KT, 2007, SOFTWARE QUAL J, V15, P383, DOI 10.1007/s11219-007-9023-6
   POHL K, 1994, INFORM SYST, V19, P243, DOI 10.1016/0306-4379(94)90044-2
   Sinha Avik, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P155, DOI 10.1109/ICST.2010.19
   Somé SS, 2006, INFORM SOFTWARE TECH, V48, P43, DOI 10.1016/j.infsof.2005.02.006
   Thakur JS, 2014, PROCEEDINGS OF THE 7TH INDIA SOFTWARE ENGINEERING CONFERENCE 2014, ISEC '14, DOI 10.1145/2590748.2590768
   Tiwari S, 2017, INFORM SOFTWARE TECH, V91, P22, DOI 10.1016/j.infsof.2017.06.003
   Tiwari S, 2014, PROCEEDINGS OF THE 7TH INDIA SOFTWARE ENGINEERING CONFERENCE 2014, ISEC '14, DOI 10.1145/2590748.2590754
   Tiwari S, 2015, INFORM SOFTWARE TECH, V67, P128, DOI 10.1016/j.infsof.2015.06.004
   Tiwari S, 2013, ASIA PAC SOFWR ENG, P207, DOI 10.1109/APSEC.2013.37
   Tiwari S, 2012, IEEE INT C ENG COMP, P29, DOI 10.1109/ICECCS.2012.10
   Westfall L, SOFTWARE QUALITY PRO, V7, P17
   Wohlin C, 2000, PROG COMPREHEN, P9, DOI 10.1109/WPC.2000.852475
   Yue T, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430539
   Zowghi D., 2002, International Workshop on Requirements Engineering: Foundations for Software Quality, P155
NR 54
TC 2
Z9 2
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2020
VL 32
IS 1
AR e2218
DI 10.1002/smr.2218
EA AUG 2019
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KD1EN
UT WOS:000483296400001
DA 2024-07-18
ER

PT J
AU Mårtensson, T
   Ståhl, D
   Bosch, J
AF Martensson, Torvald
   Stahl, Daniel
   Bosch, Jan
TI Test activities in the continuous integration and delivery pipeline
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE continuous delivery; continuous integration; large-scale; software
   testing; test effectiveness; test efficiency
ID SOFTWARE; AUTOMATE
AB Based on 25 interviews with participants from four case study companies that develop large-scale software embedded systems, this paper presents the Test Activity Stakeholders (TAS) model. The TAS model shows how the continuous integration and delivery pipeline can be designed to include test activities that support four stakeholder interests: Check changes, Secure stability, Measure progress, and Verify compliance. The model is developed to show how each of the stakeholder interests are best supported by unit/component tests or system tests, by automated testing or manual testing and by tests executed in simulated environments or on real hardware. The TAS model may serve as a starting point for companies when evaluating and designing their continuous integration and delivery pipeline. The validation of the TAS model included twelve individuals from three case study companies. The validation showed that the TAS model is actionable and useful in practice, enabling the identification of stakeholders and showing where improvement efforts should be focused in order to support all stakeholder interests in the continuous integration and delivery pipeline.
C1 [Martensson, Torvald] Saab AB, Linkoping, Sweden.
   [Stahl, Daniel] Ericsson AB, Linkoping, Sweden.
   [Bosch, Jan] Chalmers Univ Technol, Gothenburg, Sweden.
C3 Saab Group; Ericsson; Chalmers University of Technology
RP Mårtensson, T (corresponding author), Saab AB, Linkoping, Sweden.
EM torvald.martensson@saabgroup.com
OI Martensson, Torvald/0000-0003-1438-0182; Bosch, Jan/0000-0003-2854-722X
CR [Anonymous], 2011, CONTINUOUS DELIVERY
   [Anonymous], 2016, EMPIR SOFTW ENG
   [Anonymous], 2016, REAL WORLD RES
   [Anonymous], 1979, QUASIEXPERIMENTATION
   Engblom J., 2015, P DES AUT C 2015 JUL
   Fowler M., 2006, Continuous integration
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Garousi V, 2016, J SOFTW-EVOL PROC, V28, P272, DOI 10.1002/smr.1758
   GMEINER J, 2015, ICSTW
   Itkonen J, 2014, EMPIR SOFTW ENG, V19, P303, DOI 10.1007/s10664-013-9266-8
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Labuschagne A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P821, DOI 10.1145/3106237.3106288
   Laghari G, 2016, IEEE INT CONF AUTOM, P274, DOI 10.1145/2970276.2970308
   Laukkanen E, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P23, DOI 10.1109/ICSE-SEIP.2017.21
   Liu Y, 2014, IET C PUBLICATIONS
   Marijan D, 2017, IEEE INT CONF SOFTW, P524, DOI 10.1109/ICST.2017.60
   Marijan D, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P157, DOI 10.1109/QRS.2015.31
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Mårtensson T, 2018, J SYST SOFTWARE, V142, P223, DOI 10.1016/j.jss.2018.05.002
   Mårtensson T, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P169, DOI 10.1109/ICSA.2017.11
   Mårtensson T, 2016, LECT NOTES COMPUT SC, V10027, P448, DOI 10.1007/978-3-319-49094-6_30
   Mihindukulasooriya N, 2016, CEUR WORKSHOP P
   Mossige M, 2015, INFORM SOFTWARE TECH, V57, P169, DOI 10.1016/j.infsof.2014.09.009
   Penmetsa JR, 2016, TRENDS SOFTWARE TEST, P19
   RATHOD N, 2015, ICPC
   Roberts M, 2004, LECT NOTES COMPUT SC, V3092, P194
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Rogers RO, 2004, LECT NOTES COMPUT SC, V3092, P68
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Stahl Daniel, 2017, 2017 43rd Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P440, DOI 10.1109/SEAA.2017.8114695
   STAHL D, 2016, ACM, P270, DOI DOI 10.1145/2889160.2889252
   Ståhl D, 2017, J SYST SOFTWARE, V127, P150, DOI 10.1016/j.jss.2017.02.003
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Vassallo C, 2016, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2016.72
   Vöst S, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1026, DOI 10.1145/2786805.2803193
   Wettinger J, 2017, COMPUT SCI-RES DEV, V32, P281, DOI 10.1007/s00450-016-0338-z
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
NR 37
TC 6
Z9 6
U1 1
U2 10
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2019
VL 31
IS 4
AR e2153
DI 10.1002/smr.2153
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY2MS
UT WOS:000467957000001
DA 2024-07-18
ER

PT J
AU El Koutbi, S
   Idri, A
   Abran, A
AF El Koutbi, Salma
   Idri, Ali
   Abran, Alain
TI Empirical evaluation of an entropy-based approach to estimation
   variation of software development effort
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE effort estimation; entropy; error and estimation variation; Gaussian
   distribution; interpolation
ID DEVELOPMENT EFFORT PREDICTION; UNCERTAINTY; MODELS; REGRESSION;
   SELECTION; VALIDITY
AB As effort estimation has gained increasing attention, most of the techniques proposed have focused on the accuracy of effort estimates. Yet no clear conclusions have been drawn on which techniques perform best in all contexts. We propose an entropy-based approach to effort estimate variation caused by measurement and model error sources whatever the effort estimation technique used. The proposed approach was empirically evaluated by exploring three entropy formulae, four interpolation methods, and two analogy-based effort estimation approaches (crisp and fuzzy analogy) over seven datasets using the Jackknife evaluation method. The obtained results show that the three entropy formulae have in general the same positive influence on the performance of the entropy-based approach measured in terms of absolute error of effort deviation. In addition, the spline interpolation outperformed all other interpolation methods, using any of the entropy formulae. Moreover, achievement percentages of the best variants of our approach closely approximated those of the Gaussian distribution confirming that the Gaussian distribution is useful for characterizing effort estimate variation.
C1 [El Koutbi, Salma; Idri, Ali] Univ Mohammed 5, ENSIAS, Software Projects Management Res Team, Rabat, Morocco.
   [Abran, Alain] Ecole Technol Super, Dept Software Engn & IT, Montreal, PQ, Canada.
C3 Mohammed V University in Rabat; University of Quebec; Ecole de
   Technologie Superieure - Canada
RP Idri, A (corresponding author), Univ Mohammed 5, ENSIAS, Software Projects Management Res Team, Rabat, Morocco.
EM ali.idri@um5.ac.ma
RI Abran, Alain/I-2493-2016
OI Abran, Alain/0000-0003-2670-9061; Idri, Ali/0000-0002-4586-4158
CR Abd-El-Hafiz SK, 2001, PROC IEEE INT CONF S, P110, DOI 10.1109/ICSM.2001.972721
   Agarwal P., 2011, INT J COMP SCI ISSUE, V8, P523
   Ahmed MA, 2009, INFORM SOFTWARE TECH, V51, P640, DOI 10.1016/j.infsof.2008.09.004
   Aktunc O, 2012, PROC INT SYMP SOFTW, P7, DOI 10.1109/ISSREW.2012.36
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Amazal FA, 2014, INT J COMPUT INTELL, V13, DOI 10.1142/S1469026814500138
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1965, ISODATA NOVEL METHOD
   [Anonymous], 1975, On measures of information and their characterizations
   [Anonymous], 2009, PHI LEARNING
   [Anonymous], 1989, ANAL STAT PRODUCTIVI
   [Anonymous], P INT C SOFTW PROC P
   [Anonymous], INF COMMUN TECHNOL M
   [Anonymous], MEMOIRES ELECTIONS S
   [Anonymous], APPL STAT
   [Anonymous], ANN PHYS
   [Anonymous], AIAI WORKSHOPS P
   [Anonymous], IEEE INT C TOOLS ART
   [Anonymous], JT C INT WORK SOFTW
   [Anonymous], COMPUTER SCI INFORM
   [Anonymous], 2000, P 7 INT C FUZZ THEOR
   [Anonymous], INT J INTELL SYST
   [Anonymous], 11 INT C EV NOV APPR
   [Anonymous], P INT FLINS C UNCERT
   [Anonymous], P EANN AIAI 2011
   Azhar Damir, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P173, DOI 10.1109/ESEM.2013.25
   Azzeh M., 2008, P 4 INT WORKSH PRED, P71, DOI DOI 10.1145/1370788.1370805
   Azzeh M, 2015, J SYST SOFTWARE, V103, P36, DOI 10.1016/j.jss.2015.01.028
   Berkhin P, 2006, GROUPING MULTIDIMENSIONAL DATA: RECENT ADVANCES IN CLUSTERING, P25
   Bezdek James C., 1981, PATTERN RECOGN
   Bhering LL, 2008, CROP BREED APPL BIOT, V8, P9, DOI 10.12702/1984-7033.v08n01a02
   Bisognin DA, 2002, EUPHYTICA, V125, P129, DOI 10.1023/A:1015763207980
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Bony S, 2001, NEW PHYTOL, V152, P125, DOI 10.1046/j.0028-646x.2001.00231.x
   Borda M, 2011, FUNDAMENTALS IN INFORMATION THEORY AND CODING, P1, DOI 10.1007/978-3-642-20347-3
   Borges L.C., 2003, Revista de Matematica e Estatistica, V21, P67
   BOX GEP, 1964, J ROY STAT SOC B, V26, P211, DOI 10.1111/j.2517-6161.1964.tb00553.x
   Bromiley P.A., 2003, Tina Internal Report, P003
   CALINSKI T, 1985, BIOMETRICS, V41, P39, DOI 10.2307/2530641
   COX DR, 1982, SCAND J STAT, V9, P147
   Davidson Russell, 1993, ESTIMATION INFERENCE
   Doborjeh MG, 2018, EVOL SYST-GER, V9, P195, DOI 10.1007/s12530-017-9178-8
   Dunn J. C., 1973, Journal of Cybernetics, P32, DOI 10.1080/01969727308546046
   El Koutbi S, 2017, INT C CONTROL DECISI, P248, DOI 10.1109/CoDIT.2017.8102599
   El Koutbi S, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P140, DOI 10.1109/SEAA.2016.39
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Franchini F, 2008, J PHYS A-MATH THEOR, V41, DOI 10.1088/1751-8113/41/2/025302
   Gray RM., 1990, Entropy and Information Theory, P21
   Han TeSun., 2002, Mathematics of Information and Coding, P19
   Hartigan J. A., 1975, CLUSTERING ALGORITHM, V458, P468
   Herrera F, 2003, INT J INTELL SYST, V18, P309, DOI 10.1002/int.10091
   Idri A, 2002, ENG INTELL SYST ELEC, V10, P147
   Idri A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P21, DOI 10.1109/METRIC.2002.1011322
   Idri A, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P85, DOI 10.1109/METRIC.2001.915518
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   Jiang R, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND NATURAL COMPUTING, VOL II, P296, DOI 10.1109/CINC.2009.153
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kadoda G., 2000, P EASE C KEEL UK, P1
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P69, DOI 10.1109/52.589239
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Laqrichi S, 2015, IFAC PAPERSONLINE, V48, P954, DOI 10.1016/j.ifacol.2015.06.206
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   LILLIEFORS HW, 1967, J AM STAT ASSOC, V62, P399, DOI 10.2307/2283970
   Lokan C, 2001, IEEE SOFTWARE, V18, P26, DOI 10.1109/52.951491
   MacDonell S. G., 1999, ICONIP'99. ANZIIS'99 & ANNES'99 & ACNN'99. 6th International Conference on Neural Information Processing. Proceedings (Cat. No.99EX378), P308, DOI 10.1109/ICONIP.1999.844005
   Menzies Tim., 2012, PROMISE REPOSITORY E
   Minku LL, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522928
   Mittas N, 2015, INFORM SOFTWARE TECH, V57, P310, DOI 10.1016/j.infsof.2014.05.010
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   MIYAZAKI Y, 1991, INFORM SOFTWARE TECH, V33, P239, DOI 10.1016/0950-5849(91)90139-3
   Mühlenbein H, 1993, EVOL COMPUT, V1, P25, DOI 10.1162/evco.1993.1.1.25
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   QUENOUILLE MH, 1956, BIOMETRIKA, V43, P353
   Renyi Alfred., 1960, 4th Berkeley Symposium on Mathematics, Statistics and Probability, V547, P547
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Seo YS, 2009, ASIA PAC SOFWR ENG, P3, DOI 10.1109/APSEC.2009.57
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Sharma J, 2003, AM MIDL NAT, V149, P104, DOI 10.1674/0003-0031(2003)149[0104:SSGAMO]2.0.CO;2
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Sicilia MA, 2005, KYBERNETIKA, V41, P249
   Stamelos I, 2001, INFORM SOFTWARE TECH, V43, P759, DOI 10.1016/S0950-5849(01)00183-5
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Wen JF, 2009, ASIA PAC SOFWR ENG, P179, DOI 10.1109/APSEC.2009.40
   XIE XLL, 1991, IEEE T PATTERN ANAL, V13, P841, DOI 10.1109/34.85677
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
NR 88
TC 0
Z9 0
U1 0
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAR
PY 2019
VL 31
IS 3
AR e2149
DI 10.1002/smr.2149
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ2SJ
UT WOS:000462251700005
DA 2024-07-18
ER

PT J
AU Zhang, X
   Wang, X
   Kang, YN
AF Zhang, Xuan
   Wang, Xu
   Kang, YanNi
TI Trustworthiness requirement-oriented software process modeling
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE aspect-oriented modeling; goal-oriented modeling; Petri nets; software
   process modeling; software trustworthiness requirement
ID NONFUNCTIONAL REQUIREMENTS
AB Trustworthy software is delivered by enacting trustworthy software processes. The purpose of this paper is to propose an approach to modeling trustworthiness requirement-oriented software processes. First, based on the aspect-oriented modeling techniques, separation of concerns is used to separate the crosscutting activities and the core activities according to the different trustworthiness requirements and functional requirements. A goal-oriented modeling and reasoning method for trustworthiness requirements to find the crosscutting activities that satisfy multiple trustworthiness requirements is presented. Then, base processes are modeled for functional requirements. The crosscutting activities for trustworthiness requirements are decomposed into processes or tasks and encapsulated in aspects that are woven into the base processes. In the weaving procedure, correct weaving methods between multiple aspects and between aspects and base processes are designed. Errors or mistakes of aspect-oriented process modeling are prevented. Finally, trustworthy third-party certification authority software is studied systematically in a case study, and performance evaluations are conducted to show the cost and effect of the approach.
C1 [Zhang, Xuan; Kang, YanNi] Yunnan Univ, Sch Software, Kunming 650091, Yunnan, Peoples R China.
   [Zhang, Xuan] Key Lab Software Engn Yunnan, Kunming, Yunnan, Peoples R China.
   [Wang, Xu] Yunnan Univ, Sch Econ, Kunming, Yunnan, Peoples R China.
C3 Yunnan University; Yunnan University
RP Zhang, X (corresponding author), Yunnan Univ, Sch Software, Kunming 650091, Yunnan, Peoples R China.
EM zhxuan@ynu.edu.cn
FU National Natural Science Foundation of China [61862063, 61502413,
   61262025, 61379032, 61662085]; National Social Science Foundation of
   China [18BJL104]; Natural Science Foundation of Yunnan Province
   [2016FB106]; Natural Science Foundation of Yunnan Educational Committee
   [2015Z020]; Natural Science Foundation of Key Laboratory of Software
   Engineering of Yunnan Province [2015SE202]; Data-Driven Software
   Engineering Innovative Research Team Funding of Yunnan Province
   [2017HC012]; Software Engineering Innovative Research Team Funding of
   Yunnan University
FX National Natural Science Foundation of China, Grant/Award Numbers:
   61862063, 61502413, 61262025, 61379032 and 61662085; National Social
   Science Foundation of China, Grant/Award Number: 18BJL104; Natural
   Science Foundation of Yunnan Province, Grant/Award Number: 2016FB106;
   Natural Science Foundation of Yunnan Educational Committee, Grant/Award
   Number: 2015Z020; Natural Science Foundation of Key Laboratory of
   Software Engineering of Yunnan Province, Grant/Award Number: 2015SE202;
   Data-Driven Software Engineering Innovative Research Team Funding of
   Yunnan Province, Grant/Award Number: 2017HC012; Software Engineering
   Innovative Research Team Funding of Yunnan University
CR Amoroso E., 1994, 2nd ACM Conference on Computer and Communications Security, P39, DOI 10.1145/191177.191188
   Amyot D, 2003, LECT NOTES COMPUT SC, V2599, P21
   [Anonymous], HAZARD ANAL TECHNIQU
   [Anonymous], MILSTD882D US DEP DE
   [Anonymous], 1993, Usability Engineering
   [Anonymous], 2008, SECURITY ENG
   [Anonymous], 2000, ICSE 00, DOI DOI 10.1145/336512.336551
   Bernstein L, 2005, TRUSTWORTHY SYSTEMS THROUGH QUANTITATIVE SOFTWARE ENGINEERING, P1, DOI 10.1002/0471750336
   Blair GS, 2005, ENG ASPECT ORIENTED, P379
   Boehm B, 1996, IEEE SOFTWARE, V13, P25, DOI 10.1109/52.506460
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   Choe Y., PROP2CHF PY CSCE 625
   CMU, 2003, SYST SEC ENG CAP MAT
   Constantinides CA, 1999, P ECOOP 99 WORKSH AS, P302
   DALKEY N, 1963, MANAGE SCI, V9, P458, DOI 10.1287/mnsc.9.3.458
   Dinkelaker T, 2012, COMPUT SCI INF SYST, V9, P1045, DOI 10.2298/CSIS111216033D
   Douence R., 2004, C SPED ORIENTED SOFT, P141
   Douence R, 2002, FRAMEWORK DETECTION, P173
   Durr P, 2005, P 2 EUR IN WORKSH AS, P10
   Ernst NA, 2010, LECT NOTES COMPUT SC, V6412, P118, DOI 10.1007/978-3-642-16373-9_9
   Giorgini P, 2005, ENG APPL ARTIF INTEL, V18, P159, DOI 10.1016/j.engappai.2004.11.017
   Giorgini P, 2003, LECT NOTES COMPUT SC, V2800, P1
   Giorgini P, 2002, REASONING GOAL MODEL, P167
   Hall A., 2002, FME 2002: Formal Methods-Getting IT Right. International Symposium of Formal Methods Europe (Lecture Notes in Computer Science Volume 2391), P224
   Hall A, 2002, IEEE SOFTWARE, V19, P18, DOI 10.1109/52.976937
   Hasselbring W, 2006, COMPUTER, V39, P91, DOI 10.1109/MC.2006.142
   Horkoff J, 2016, REQUIR ENG, V21, P29, DOI 10.1007/s00766-014-0209-8
   Horkoff J, 2010, LECT NOTES COMPUT SC, V6412, P59, DOI 10.1007/978-3-642-16373-9_5
   Howard M., 2002, Writing secure code
   Howard M, 2006, SECURE DEV LIFE CYCL
   IEC, 2015, 6028721 IEC, P2
   Imperial College London, 2013, PLATF IND PETR NET E
   Jureta I. J., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P115, DOI 10.1109/RE.2010.24
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kniesel G, 2006, WORK CONF REVERSE EN, P324
   Kniesel G, 2009, LECT NOTES COMPUT SC, V5490, P135, DOI 10.1007/978-3-642-02059-9_5
   Li CY, 2017, J SYST SOFTWARE, V124, P260, DOI 10.1016/j.jss.2016.03.013
   Li T., 2008, APPROACH MODELLING S
   Lianwei Guan, 2008, Frontiers of Computer Science in China, V2, P413, DOI 10.1007/s11704-008-0041-8
   Lyu R, 1996, HDB SOFTWARE RELIABI
   McGraw G., 2006, Software security: building security in
   McLean J, 2006, P INT COMP SOFTW APP, P32, DOI 10.1109/COMPSAC.2006.84
   Miller A, 2006, COMPSAC 06 P 30 ANN, V1, P31
   Molderez T., 2012, P 7 WORKSH DOM SPEC, V3, P21
   Musa D, 1999, SOFTWARE RELIABILITY
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   Nagy I, 2005, LECT NOTES INFORM P, P69
   Neumann PG, 2004, PROJECT REPORT
   NSS2, 2005, SOFTW 2015 NAT SOFTW, P4
   OWASP (the open web application security project), 2009, SOFTWARE ASSURANCE M
   Pawlak R, 2005, COMPAR ENSURING SAFE, P163
   Princeton University, 2007, ZCHAFF
   Reisig W., 2012, Petri nets: an introduction, V4
   Roubtsova EE, 2005, 1 INT WORKSH ASP BAS
   Schauerhuber A., 2007, A Survey on Aspect-Oriented Modeling Approaches
   Schmidt H, 2003, J SYST SOFTWARE, V65, P215, DOI 10.1016/S0164-1212(02)00045-6
   Sebastiani R., 2004, Simple and Minimum-Cost Satisfiability for Goal Models, P20, DOI [10.1007/978-3-540-25975-6_4, DOI 10.1007/978-3-540-25975-6_4]
   Trusted Computing Group (TCG), 2007, TCG SPEC ARCH OV REV
   Trustie, 2009, SOFTW TRUSTW CLASS S
   *US DEP DEF, 1985, 520028STD DOD
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   Xu DX, 2006, IEEE T SOFTWARE ENG, V32, P265, DOI 10.1109/TSE.2006.40
   Yang Y, 2009, LECT NOTES COMPUT SC, V5543, P389, DOI 10.1007/978-3-642-01680-6_35
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Zhang H, 2012, J SOFTW-EVOL PROC, V24, P741, DOI 10.1002/smr.516
   Zhu MX, 2012, INFORM SCIENCES, V191, P61, DOI 10.1016/j.ins.2011.07.046
NR 67
TC 1
Z9 1
U1 7
U2 24
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2018
VL 30
IS 12
AR e1991
DI 10.1002/smr.1991
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE1JU
UT WOS:000453027700012
DA 2024-07-18
ER

PT J
AU Leupolz, J
   Habermaier, A
   Reif, W
AF Leupolz, Johannes
   Habermaier, Axel
   Reif, Wolfgang
TI Quantitative and qualitative safety analysis of a hemodialysis machine
   with S#
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE deductive cause consequence analysis; design tools and techniques;
   embedded domain specific language; executable models; formal methods;
   hemodialysis; model checking; quantitative analysis; safety analysis;
   simulation
AB This paper reports on our experiences of applying S# (safety sharp) to model and analyze the case study hemodialysis machine. The S# safety analysis approach focuses on the question, what happens if we place a controller with correct software into an unreliable environment. To answer that question, the S# toolchain natively supports the Deductive Cause Consequence Analysis, a fully automatic model checking-based safety analysis technique that determines all sets of component faults with the potential of causing a system hazard. Furthermore, S# can give an approximate estimate of the hazard's probability. To demonstrate our approach, we created a model with a simplified controller of the hemodialysis machine and relevant parts of its environment and performed a safety analysis using Deductive Cause Consequence Analysis.
C1 [Leupolz, Johannes; Habermaier, Axel; Reif, Wolfgang] Univ Augsburg, Inst Software & Syst Engn, Augsburg, Germany.
C3 University of Augsburg
RP Leupolz, J (corresponding author), Univ Augsburg, Inst Software & Syst Engn, Augsburg, Germany.
EM leupolz@isse.de
OI Reif, Wolfgang/0000-0002-4086-0043
CR [Anonymous], 2015, OMG SYST MOD LANG OM
   [Anonymous], 2014, MOD UN OBJ OR LANG S
   [Anonymous], P 7 S FORM METH AUT
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Behrmann G., 2004, LNCS, V3185, P2004
   Bittner B, P TACAS 2016
   Cimatti A, P INT C COMP AID VER
   Curtis J, CORE CURRICULUM DIAL
   Diez D.M., 2019, OPENINTRO STAT, VFourth
   Grotker T., 2002, SYSTEM DESIGN SYSTEM
   Habermaier A, 2017, THESIS
   Habermaier A, 2016, LECT NOTES COMPUT SC, V9933, P150, DOI 10.1007/978-3-319-45943-1_11
   Habermaier A, 2012, RAILWAY SAFETY, RELIABILITY, AND SECURITY: TECHNOLOGIES AND SYSTEMS ENGINEERING, P65, DOI 10.4018/978-1-4666-1643-1.ch004
   Habermaier A, 2015, IFAC PAPERSONLINE, V48, P44, DOI 10.1016/j.ifacol.2015.06.471
   Habermaier A, 2015, 2015 IEEE NINTH INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS WORKSHOPS (SASOW), P128, DOI 10.1109/SASOW.2015.26
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Kant Gijs, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P692, DOI 10.1007/978-3-662-46681-0_61
   Katoen JP, 2009, INT CONF QUANT EVAL, P167, DOI 10.1109/QEST.2009.11
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Leupolz J, 2016, EUROASIASPI 2016 IND
   Leupolz J, 2018, INT J SOFTW TOOLS TE, V20, P359, DOI 10.1007/s10009-017-0464-3
   Mashkoor A, 2015, P ABZ 2016 P 5 INT C, DOI [10. 1007/978-3-319-33600-8_29-, DOI 10.1007/978-3-319-33600-8_29-]
   Noll T, 2015, FORMAL TECHNIQUES SA, DOI [10. 1007/978-3-319-17581-2 ., DOI 10.1007/978-3-319-17581-2]
   Struck S, 2013, J SYST SOFTWARE, V86, P2488, DOI 10.1016/j.jss.2013.03.078
   Vesely W., 2002, TECHNICAL REPORT
   Vinter J, 2007, 3 I ENG TECHN C AUT
   Visser W, 2012, SOFTW SYST MODEL, V11, P541, DOI 10.1007/s10270-012-0281-9
NR 28
TC 3
Z9 3
U1 0
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2018
VL 30
IS 5
SI SI
AR e1942
DI 10.1002/smr.1942
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GI1OG
UT WOS:000434139400003
DA 2024-07-18
ER

PT J
AU Miranskyy, AV
   Al-zanbouri, Z
   Godwin, D
   Bener, AB
AF Miranskyy, A. V.
   Al-zanbouri, Z.
   Godwin, D.
   Bener, A. B.
TI Database engines: Evolution of greenness
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE energy consumption; database; green computing; MySQL; software metrics
ID SOFTWARE
AB Information technology consumes up to 10% of the world's electricity generation, contributing to CO2 emissions and high energy costs. Data centers, particularly databases, use up to 23% of this energy. Therefore, building an energy-efficient (green) database engine could reduce energy consumption and CO2 emissions. The goal of this study is to understand the factors driving databases' energy consumption and execution time throughout their evolution. We conducted an empirical case study of energy consumption by 2 MySQL database engines, InnoDB and MyISAM, across 40 releases. We examined the relationships of 4 software metrics to energy consumption and execution time to determine which metrics reflect the greenness and performance of a database. Our analysis shows that database engines' energy consumption and execution time increase as databases evolve. Moreover, the lines of code (LOC) metric is correlated moderately to strongly with energy consumption and execution time in 88% of cases. Our findings provide insights to practitioners and researchers. Database administrators may use them to select a fast, green release of the MySQL database engine. MySQL developers may use LOC to assess products' greenness and performance. Researchers may use our findings to further develop new hypotheses or build models predicting greenness and performance of databases.
C1 [Miranskyy, A. V.; Al-zanbouri, Z.] Ryerson Univ, Dept Comp Sci, Toronto, ON M5B 2K3, Canada.
   [Godwin, D.] IBM Toronto Software Lab, 8200 Warden Ave, Markham, ON L6G 1C7, Canada.
   [Bener, A. B.] Ryerson Univ, Dept Mech & Ind Engn, Toronto, ON M5B 2K3, Canada.
C3 Toronto Metropolitan University; International Business Machines (IBM);
   Toronto Metropolitan University
RP Miranskyy, AV (corresponding author), Ryerson Univ, Dept Comp Sci, Toronto, ON M5B 2K3, Canada.
EM avm@ryerson.ca
RI Basar, Ayse/ABF-9265-2020; Al-Zanbouri, Zainab/AAR-2637-2021
OI Basar, Ayse/0000-0003-4934-8326; Al-Zanbouri, Zainab/0000-0001-6003-3849
CR Amsel Nadine., 2010, Proceedings, CHI EA, P3337, DOI DOI 10.1145/1753846.1753981
   [Anonymous], THESIS
   [Anonymous], 2013, P 1 INT C INFORM COM
   [Anonymous], 2013, MATH PROBLEMS ENG
   Bircher WL, 2007, INT SYM PERFORM ANAL, P158, DOI 10.1109/ISPASS.2007.363746
   Boncz P, 2014, LECT NOTES COMPUT SC, V8391, P61, DOI 10.1007/978-3-319-04936-6_5
   Brown DJ, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1666420.1666438
   Conti, 2016, DOEEIA04842016
   Cotroneo D, 2014, ACM J EMERG TECH COM, V10, DOI 10.1145/2539117
   Dancey C.P., 2004, STAT MATHS PSYCHOL U
   Delaluz V, 2001, HPCA: SEVENTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTING ARCHITECTURE, PROCEEDINGS, P159
   Duarte A., 2006, 28th International Conference on Software Engineering Proceedings, P779, DOI 10.1145/1134285.1134410
   Fei YS, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1324969.1324971
   Feng Xizhou., 2005, IPDPS '05: Proceedings of the 19th IEEE International Parallel and Distributed Processing Symposium (IPDPS'05) - Papers, P34
   Greenawalt P. M., 1994, MASCOTS '94. Proceedings of the Second International Workshop on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems (Cat. No.94TH0621-3), P62, DOI 10.1109/MASCOT.1994.284446
   Gupta A, 2011, MSRTR2011106
   Gurumurthi S, 2002, EIGHTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTER ARCHITECTURE, PROCEEDINGS, P141
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P374, DOI 10.1007/s10664-013-9276-6
   Hindle A, 2012, PROC INT CONF SOFTW, P1301, DOI 10.1109/ICSE.2012.6227094
   Jackson RB, 2016, NAT CLIM CHANGE, V6, P7
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kern E, 2011, ENVIRON SCI ENG, P199, DOI 10.1007/978-3-642-19536-5_16
   LI K, 1994, PROCEEDINGS OF THE WINTER 1994 USENIX CONFERENCE, P279
   LIND RK, 1989, IEEE T SOFTWARE ENG, V15, P649, DOI 10.1109/32.24715
   Liu XW, 2013, ADV INTEL SYS RES, V42, P284
   Mills M.P., 2013, The cloud begins with coal
   Miranskyy A., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement - ESEM'14, P1
   Miranskyy A, 2013, SAVE ENERGY DB2 10 1
   Misirli T., 2011, Proceedings of 2nd International Workshop on Emerging Trends in Software Metrics, P45
   Mittal R, 2012, MOBICOM 12: PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P317
   Murugesan San, 2008, IT Professional, V10, P24, DOI 10.1109/MITP.2008.10
   Noureddine A., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P21, DOI 10.1109/GREENS.2012.6224251
   Penzenstadler B, 2014, IEEE SOFTWARE, V31, P40, DOI 10.1109/MS.2014.22
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Python Software Foundation, 2014, PYTH LANG REF VERS 2
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Stemm M, 1997, IEICE T COMMUN, VE80B, P1125
   Tiwari V, 1996, J VLSI SIG PROCESS S, V13, P223, DOI 10.1007/BF01130407
   Whitney J, 2014, IP1408A NAT RES DEF
   Wickham H, 2014, RSQLITE SQ LITE INTE
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wilke Claas, 2013, P 2013 WORKSHOP GREE, P9
   Winter S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P494, DOI 10.1109/ICSE.2015.67
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 45
TC 3
Z9 3
U1 2
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2018
VL 30
IS 4
AR e1915
DI 10.1002/smr.1915
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD1ZI
UT WOS:000430299400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wilde, E
   German, D
AF Wilde, Evan
   German, Daniel
TI Merge-Tree: Visualizing the integration of commits into Linux
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE git; Linux; Merge-Tree; visualizations
AB With an average of more than 900 merges into the Linux kernel per release, many containing hundreds of commits and some containing thousands, maintenance of older versions of the kernel becomes nearly impossible. Various commercial products, such as the Android platform, run older versions of the kernel; due to security, performance, and changing hardware needs, maintainers must understand what changes (commits) are added to the current version of the kernel since the last time they inspected it to make the necessary patches. Current tools provide information about repositories through the directed acyclic graph (DAG) of the repository, which is helpful for smaller projects. However, with the scale and number of branches in the kernel, the DAG becomes overwhelming very quickly. Furthermore, the DAG contains every parents of every commit, while maintainers are more interested in how and when a commit arrives to the official Linux repository. This paper makes 3 contributions: a conversion from DAG to Merge-Tree, an implementation of a tool built on the Merge-Tree model, and a user study to evaluate and validate the implementation and model.
C1 [Wilde, Evan; German, Daniel] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
C3 University of Victoria
RP Wilde, E (corresponding author), Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
EM etcwilde@uvic.ca
CR [Anonymous], EMPIRICAL SOFTW ENG
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Burch M, 2005, 3rd IEEE International Workshop on Visualizing Software for Understanding and Analysis, Proceeedings, P127
   Caudwell A.H., 2010, PROC ACM INT C COMPA, P73
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   D'Ambros M, 2009, IEEE T SOFTWARE ENG, V35, P720, DOI 10.1109/TSE.2009.17
   DAmbros M., 2005, 3 IEEE INT WORKSHOP, P1
   Eick SG, 2002, IEEE T SOFTWARE ENG, V28, P396, DOI 10.1109/TSE.2002.995435
   McNemar Q, 1947, PSYCHOMETRIKA, V12, P153, DOI 10.1007/BF02295996
   Ogawa M, 2009, IEEE T VIS COMPUT GR, V15, P1097, DOI 10.1109/TVCG.2009.123
   REINGOLD EM, 1981, IEEE T SOFTWARE ENG, V7, P223, DOI 10.1109/TSE.1981.234519
   Wang W., 2006, P SIGCHI C HUM FACT, DOI 10.1371/journal.pcbi.1004226
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 14
TC 3
Z9 4
U1 0
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD FEB
PY 2018
VL 30
IS 2
SI SI
AR e1936
DI 10.1002/smr.1936
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW1ZP
UT WOS:000425099900004
OA Green Published
DA 2024-07-18
ER

PT J
AU Jia, JD
   Mo, HL
   Capretz, LF
   Chen, ZP
AF Jia, Jingdong
   Mo, Hanlin
   Capretz, Luiz Fernando
   Chen, Zupeng
TI Grouping environmental factors influencing individual decision-making
   behavior in software projects: A cluster analysis
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE cluster analysis; decision-making behavior; environmental factor;
   semantic similarity; WordNet
ID K-MEANS; NEWS ARTICLES; WORDNET; ALGORITHM; TEAMS; SIMILARITY; AGILE
AB An individual's decision-making behavior is heavily influenced by and adapted to external environmental factors. Given that software development is a human-centered activity, individual decision-making behavior may affect the software project quality. Although environmental factors affecting decision-making behavior in software projects have been identified in prior literature, there is not yet an objective and a full taxonomy of these factors. Thus, it is not trivial to manage these complex and diverse factors. To address this deficiency, we first design a semantic similarity algorithm between words by utilizing the synonymy and hypernymy relationships in WordNet. Further, we propose a method to measure semantic similarity between phrases and apply it into k-means clustering algorithm to group these factors. Subsequently, we obtain a taxonomy of the environmental factors affecting individual decision-making behavior in software projects, which includes 11 broad categories, each containing 2 to 5 sub-categories. The taxonomy presented herein is obtained by an objective method, and quite comprehensive, with appropriate references provided. The taxonomy holds significant value for researchers and practitioners; it can help them to better understand the major aspects of environmental factors, also to predict and guide the behavior of individuals during decision making towards a successful completion of software projects.
C1 [Jia, Jingdong; Chen, Zupeng] Beihang Univ, Sch Software, Beijing 100191, Peoples R China.
   [Mo, Hanlin] Chinese Acad Sci, Inst Comp Technol, Beijing, Peoples R China.
   [Capretz, Luiz Fernando] Western Univ, Dept Elect & Comp Engn, London, ON, Canada.
C3 Beihang University; Chinese Academy of Sciences; Institute of Computing
   Technology, CAS; Western University (University of Western Ontario)
RP Jia, JD (corresponding author), Beihang Univ, Sch Software, Beijing 100191, Peoples R China.
EM jiajingdong@buaa.edu.cn
RI Capretz, Luiz Fernando/K-5944-2013
OI Capretz, Luiz Fernando/0000-0001-6966-2369
CR Alenljung B, 2008, REQUIR ENG, V13, P257, DOI 10.1007/s00766-008-0068-2
   Alexander PM, 2011, J SCI EDUC TECHNOL, V20, P300, DOI 10.1007/s10956-010-9254-3
   [Anonymous], 2017, P 21 INT C EV ASS, DOI DOI 10.1145/3084226.3084271
   Arora P, 2016, PROCEDIA COMPUT SCI, V78, P507, DOI 10.1016/j.procs.2016.02.095
   Aurum A, 2003, INFORM SOFTWARE TECH, V45, P945, DOI 10.1016/S0950-5849(03)00096-X
   Bassiou N, 2011, PATTERN RECOGN, V44, P145, DOI 10.1016/j.patcog.2010.07.006
   Bekkerman R., 2003, Journal of Machine Learning Research, V3, P1183, DOI 10.1162/153244303322753625
   Borte K, 2012, INFORM SOFTWARE TECH, V54, P985, DOI 10.1016/j.infsof.2012.03.002
   Bouras C, 2012, KNOWL-BASED SYST, V36, P115, DOI 10.1016/j.knosys.2012.06.015
   Cao QM, 2015, NEURAL COMPUT APPL, V26, P995, DOI 10.1007/s00521-014-1792-9
   Capó M, 2017, KNOWL-BASED SYST, V117, P56, DOI 10.1016/j.knosys.2016.06.031
   Chen CL, 2010, DATA KNOWL ENG, V69, P1208, DOI 10.1016/j.datak.2010.08.003
   Chen Q, 2015, J COMPUT COMMUN, V3, P33
   Choi SJ, 2015, J SOFTW-EVOL PROC, V27, P514, DOI 10.1002/smr.1723
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Cunha JAOGd, 2016, P 10 ACM IEEE INT S, P1
   Cunha JAOG, 2016, PROCEDIA COMPUT SCI, V100, P947, DOI 10.1016/j.procs.2016.09.255
   Di Francescomarino C, 2013, J SOFTW-EVOL PROC, V25, P113, DOI 10.1002/smr.518
   Drury M, 2012, J SYST SOFTWARE, V85, P1239, DOI 10.1016/j.jss.2012.01.058
   Geum Y, 2016, TECHNOL FORECAST SOC, V111, P176, DOI 10.1016/j.techfore.2016.06.026
   Ghapanchi AH, 2011, J SYST SOFTWARE, V84, P238, DOI 10.1016/j.jss.2010.09.022
   GROHER I, 2015, A STUDY ON ARCHITECT, P11, DOI DOI 10.1109/WICSA.2015.27
   Guo X, 2014, ARTIF INTELL MED, V62, P79, DOI 10.1016/j.artmed.2014.08.001
   Hackenberg M, 2012, J THEOR BIOL, V297, P127, DOI 10.1016/j.jtbi.2011.12.024
   Hahn J, 2008, INFORM SYST RES, V19, P369, DOI 10.1287/isre.1080.0192
   Hammouda KM, 2004, IEEE T KNOWL DATA EN, V16, P1279, DOI 10.1109/TKDE.2004.58
   Hang Li, 2002, Natural Language Engineering, V8, P25, DOI 10.1017/S1351324902002838
   Harrison NB, 2016, PROCEEDINGS 2016 1ST INTERNATIONAL WORKSHOP ON DECISION MAKING IN SOFTWARE ARCHITECTURE, P16, DOI 10.1109/MARCH.2016.7
   Hirao Toshiki, 2015, P 25 ANN INT C COMPU, P248
   Jia J, 2017, REQUIREMENTS ENG
   JIA J, 2016, ENVIRONMENTAL FACTOR, P86, DOI DOI 10.1145/2897586.2897589
   Keil M, 2007, INFORM SYST J, V17, P59, DOI 10.1111/j.1365-2575.2006.00235.x
   Lee S, 2008, EXPERT SYST APPL, V35, P1132, DOI 10.1016/j.eswa.2007.08.042
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Li YJ, 2008, DATA KNOWL ENG, V64, P381, DOI 10.1016/j.datak.2007.08.001
   Lowry PB, 2017, COMPUT HUM BEHAV, V68, P104, DOI 10.1016/j.chb.2016.11.015
   Mesh ES, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P777, DOI 10.1145/2889160.2889209
   Momtazi S., 2009, P 18 ACM C INF KNOWL, P1911, DOI DOI 10.1145/1645953.1646263
   Mukherjee N, 2016, ENVIRON EVID, V5, DOI 10.1186/s13750-016-0066-7
   Nakatani Takako, 2014, Proceedings of the 9th International Conference on Software Engineering and Applications ICSOFT-EA 2014, P357
   Thuan NH, 2016, INFORM SYST FRONT, V18, P47, DOI 10.1007/s10796-015-9578-x
   Orvis KA, 2011, PERS INDIV DIFFER, V51, P172, DOI 10.1016/j.paid.2011.03.038
   Pera MS, 2008, INTEGR COMPUT-AID E, V15, P331
   Pérez-Castillo R, 2014, J SOFTW-EVOL PROC, V26, P1128, DOI 10.1002/smr.1652
   Tessem B, 2014, INFORM SOFTWARE TECH, V56, P873, DOI 10.1016/j.infsof.2014.02.005
   Wang P, 2016, NEUROCOMPUTING, V174, P806, DOI 10.1016/j.neucom.2015.09.096
   Wang XY, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-3329-4
   Wei TT, 2015, EXPERT SYST APPL, V42, P2264, DOI 10.1016/j.eswa.2014.10.023
   Wu YC, 2014, INFORM SCIENCES, V275, P213, DOI 10.1016/j.ins.2014.02.033
   Zannier C, 2007, LECT NOTES COMPUT SC, V4536, P1
   Zannier C, 2007, INFORM SOFTWARE TECH, V49, P637, DOI 10.1016/j.infsof.2007.02.010
   Zheng HT, 2009, INFORM SCIENCES, V179, P2249, DOI 10.1016/j.ins.2009.02.019
   Zhu GG, 2017, IEEE T KNOWL DATA EN, V29, P72, DOI 10.1109/TKDE.2016.2610428
NR 53
TC 4
Z9 5
U1 0
U2 19
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JAN
PY 2018
VL 30
IS 1
AR e1913
DI 10.1002/smr.1913
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FS7MP
UT WOS:000419982100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Erich, FMA
   Amrit, C
   Daneva, M
AF Erich, F. M. A.
   Amrit, C.
   Daneva, M.
TI A qualitative study of DevOps usage in practice
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE DevOps; software development life cycle; agile software development;
   empirical study; qualitative interviews; systematic literature review
ID SOFTWARE
AB Organizations are introducing agile and lean software development techniques in operations to increase the pace of their software development process and to improve the quality of their software. They use the term DevOps, a portmanteau of development and operations, as an umbrella term to describe their efforts. In this paper, we describe the ways in which organizations implement DevOps and the outcomes they experience. We first summarize the results of a systematic literature review that we performed to discover what researchers have written about DevOps. We then describe the results of an exploratory interview-based study involving 6 organizations of various sizes that are active in various industries. As part of our findings, we observed that all organizations were positive about their experiences and only minor problems were encountered while adopting DevOps.
C1 [Erich, F. M. A.] Univ Tsukuba, Sch Integrat & Global Majors, Tsukuba, Ibaraki, Japan.
   [Amrit, C.] Univ Twente, Sch Management & Governance, Enschede, Netherlands.
   [Daneva, M.] Univ Twente, Serv Cybersecur & Safety Res, Enschede, Netherlands.
C3 University of Tsukuba; University of Twente; University of Twente
RP Erich, FMA (corresponding author), Univ Tsukuba, Sch Integrat & Global Majors, Tsukuba, Ibaraki, Japan.
EM erich@ai.iit.tsukuba.ac.jp
RI Amrit, Chintan/AAO-7994-2020; Erich, Floris/AAJ-2131-2021
OI Amrit, Chintan/0000-0002-6310-3248; Daneva, Maya/0000-0001-7359-8013
CR Akerele O, 2013, 2013 AGILE CONFERENCE (AGILE), P60, DOI 10.1109/AGILE.2013.28
   Allspaw J., 2009, 10 DEPLOYS PER DAY D
   Ambler Scott W., 2011, Cutter IT Journal, V24, P18
   [Anonymous], 2008, Applied social research methods series
   Bahrs P., 2013, ADOPTING IBM DEVOPS
   Bang S.K., 2013, P 2 ANN C RES INF TE, P61, DOI DOI 10.1145/2512209.2512229
   Bass L, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING (RELENG), P5, DOI 10.1109/RELENG.2013.6607688
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   Corbin RD, 2007, J SYST SOFTWARE, V80, P1494, DOI 10.1016/j.jss.2007.01.013
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cukier D., 2013, Proceedings of the 2013 Companion Publication for Conference on Systems, Programming, Applications: Software for Humanity, P143, DOI DOI 10.1145/2508075.2508432
   Debois P., 2011, CUTTER IT J, V24, P3
   DeGrandis Dominica, 2011, Cutter IT Journal, V24, P34
   Dyck A, 2015, 2015 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING, P3, DOI 10.1109/RELENG.2015.10
   Erich F, 2014, P 8 ACM IEEE INT S E, P69
   Erich F, 2014, TECHNICAL REPORT U T
   Erich F, 2014, LECT NOTES COMPUT SC, V8892, P277, DOI 10.1007/978-3-319-13835-0_21
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fitzpatrick Lawrence, 2011, Cutter IT Journal, V24, P19
   FOX A, 2014, ENG SOFTWARE SERVICE
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Gohil Komal, 2011, Proceedings of the 3rd International Conference on Advances in Recent Technologies in Communication and Computing (ARTCom 2011), P262, DOI 10.1049/ic.2011.0095
   Hosono Shigeru, 2012, 2012 IEEE Eighth World Congress on Services, P397, DOI 10.1109/SERVICES.2012.80
   Humble Jez, 2011, Cutter IT Journal, V24, P6
   Humble J., 2010, DEVOPS AGILE RELEASE
   Keyworth Bill, 2011, Cutter IT Journal, V24, P12
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kvale S., 2008, Doing interviews, DOI DOI 10.4135/9781849208963
   Le-Quoc Alexis, 2011, Cutter IT Journal, V24, P24
   Loukides M., 2012, What is DevOps?
   Lwakatare LE, 2015, LECT NOTES BUS INF P, V212, P212, DOI 10.1007/978-3-319-18612-2_19
   Merton RK, 1946, AM J SOCIOL, V51, P541, DOI 10.1086/219886
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Mueller Ernest, 2011, Cutter IT Journal, V24, P6
   Neely S, 2013, 2013 AGILE CONFERENCE (AGILE), P121, DOI 10.1109/AGILE.2013.17
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Phifer Bill, 2011, Cutter IT Journal, V24, P28
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Rembetsy M, 2012, CONTINUOUSLY DEPLOYI
   Roche J, 2013, COMMUN ACM, V56, P38, DOI 10.1145/2524713.2524721
   Rowe M., 2012, BUSINESS CASE COLLAB
   Schaefer A., 2013, IAENG Transactions on Engineering Technologies, P345
   Shamow Eric, 2011, Cutter IT Journal, V24, P13
   Shang W., 2013, P 2013 INT C SOFTW E, P1583
   Spinellis D, 2012, IEEE SOFTWARE, V29, P86, DOI 10.1109/MS.2012.85
   Stuckenberg S, 2011, P 15 PAC AS C INF SY, P184
   Susarla A, 2009, J MANAGE INFORM SYST, V26, P205, DOI 10.2753/MIS0742-1222260209
   Tessem B., 2008, International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE), P105, DOI DOI 10.1145/1370114.1370141
   vansSteenis M, 2014, RADICALE VERSNELLING
   Walls M., 2013, Building a DevOps culture
   Wieringa Roel J., 2014, Design science methodology for information systems and software engineering
   Willis J., 2010, What devops means to me
NR 53
TC 79
Z9 87
U1 6
U2 55
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2017
VL 29
IS 6
SI SI
AR e1885
DI 10.1002/smr.1885
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ2CM
UT WOS:000404517400005
OA Green Published
DA 2024-07-18
ER

PT J
AU Dreves, R
   Hällmayer, F
   Haunert, L
   Sechser, B
   Riess, A
AF Dreves, Rainer
   Haellmayer, Frank
   Haunert, Lutz
   Sechser, Bernhard
   Riess, Armin
TI A method to realize traceability in development processes
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Proceedings Paper
CT Conference on European System and Software Process Improvement and
   Innovation Initiative (EuroSPI2)
CY SEP 30-OCT 02, 2015
CL Ankara Univ, Ankara, TURKEY
HO Ankara Univ
DE automotive spice (R); functional safety; reuse; software lifecycle;
   traceability
ID REQUIREMENTS; SOFTWARE
AB The SoQrates Working Group Traces develops methods for documenting a continuous flow of information and takes into account the transparency of the activities of the different disciplines. Particularly, the level of detail, accuracy, and completeness of the interfaces are considered. These methods consider also the required traceability demanded by different standards. By using the developed methods, a platform development with reusable components is possible. In combination with an efficient variant management, existing components can be combined to new customer products in a very short time (design to market). The closed traceability approach increases quality and safety veritably without additional resources. This paper describes the current results of the SoQrates Working Group Traces as a method description with best practice examples of the participating companies and research institutions.
C1 [Dreves, Rainer] Conti Tem Microelect GmbH, D-90411 Nurnberg, Germany.
   [Haellmayer, Frank] Software Factory GmbH, D-85748 Garching, Germany.
   [Haunert, Lutz] Giesecke & Devrient GmbH, D-81677 Munich, Germany.
   [Sechser, Bernhard] Method Pk Consulting GmbH, Wetterkreuz 19a, D-91058 Erlangen, Germany.
   [Riess, Armin] B Braun Avitum AG, D-34212 Melsungen, Germany.
C3 Giesecke & Devrient
RP Sechser, B (corresponding author), Method Pk Consulting GmbH, Wetterkreuz 19a, D-91058 Erlangen, Germany.
EM bernhard.sechser@methodpark.de
RI Dreves, Rainer/ABC-7761-2020
CR [Anonymous], 623042006D ISOIEC
   [Anonymous], 2015, AUT SPICE PROC ASS M
   Casey V, 2013, J SOFTW-EVOL PROC, V25, P363, DOI 10.1002/smr.571
   ISO, 2011, 262622011E ISO
   ISO/IEC, 2008, 122072008E ISOIEC
   Mäder P, 2015, EMPIR SOFTW ENG, V20, P413, DOI 10.1007/s10664-014-9314-z
   Regan G, 2013, COMPUT STAND INTER, V36, P3, DOI 10.1016/j.csi.2013.07.012
   Torkar R, 2012, INT J SOFTW ENG KNOW, V22, P385, DOI 10.1142/S021819401250009X
NR 8
TC 1
Z9 1
U1 0
U2 3
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD NOV
PY 2016
VL 28
IS 11
BP 1011
EP 1019
DI 10.1002/smr.1828
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA ED0WX
UT WOS:000388564700010
DA 2024-07-18
ER

PT J
AU Bernardi, ML
   Cimitile, M
   Di Lucca, G
AF Bernardi, Mario Luca
   Cimitile, Marta
   Di Lucca, Giuseppe
TI Mining static and dynamic crosscutting concerns: a role-based approach
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software evolution; reverse engineering; aspect mining; aspect-oriented
   programming; MOF
ID DESIGN PATTERNS; CLONE DETECTION; SYSTEMS; CODE; TOOL
AB The implementation of crosscutting concerns in object-oriented (OO) systems entails scattering and tangling of code across several components increasing code duplication and making the system harder to comprehend, maintain, evolve and reuse. Therefore, identification of crosscutting concerns drives the re-engineering or refactoring tasks in order to improve modularization of an existing system and increasing its overall internal quality. This paper proposes an approach to identify and analyse the components implementing the static and dynamic crosscutting in OO systems. The approach defines a meta-model representing the structure of an OO system in terms of its components. A static analysis of an OO software system is performed to create an instance of this meta-model. Such meta-model is finally analysed to find static and dynamic crosscutting among concerns. The effectiveness and efficiency of the proposed approach have been validated in an empirical assessment where it was applied to some OO java systems. The obtained results show a good level of effectiveness for the crosscutting analysis. Copyright (C) 2016 John Wiley & Sons, Ltd.
C1 [Bernardi, Mario Luca; Di Lucca, Giuseppe] Univ Sannio, Dept Engn, Benevento, Italy.
   [Cimitile, Marta] Unitelma Sapienza Univ, Rome, Italy.
C3 University of Sannio; Universita degli Studi di Roma Unitelma Sapienza
RP Cimitile, M (corresponding author), Unitelma Sapienza Univ, Fac Jurisprudence, Rome, Italy.
EM marta.cimitile@unitelma.it
RI Bernardi, Mario Luca/T-1539-2019; CIMITILE, Marta/F-2083-2018
OI Bernardi, Mario Luca/0000-0002-3223-7032; Di Lucca,
   Giuseppe/0000-0003-3632-0156; CIMITILE, Marta/0000-0003-2403-8313
CR [Anonymous], 1998, P INT C SOFTW MAINT
   Aversano L, 2009, IET SOFTW, V3, P395, DOI 10.1049/iet-sen.2008.0105
   Bernardi IL, 2011, COMM COM INF SC, V257, P147
   Bernardi Mario Luca, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P48, DOI 10.1109/ICPC.2010.34
   Bernardi ML, 2009, WORK CONF REVERSE EN, P319, DOI 10.1109/WCRE.2009.38
   Bernardi ML, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P63
   Bernardi ML, 2009, LECT NOTES COMPUT SC, V5899, P216, DOI 10.1007/978-3-642-10509-8_25
   Breu S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P310, DOI 10.1109/ASE.2004.1342754
   Breu S, 2006, IEEE INT CONF AUTOM, P221
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   Bruntink M, 2004, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2004.1357804
   Canfora G, 2001, INFORM SOFTWARE TECH, V43, P401, DOI 10.1016/S0950-5849(01)00149-5
   Canfora G, 2006, PROC IEEE INT CONF S, P213
   Eaddy M., 2007, P 1 INT WORKSH ASS C
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Ernst E., 2003, P AOSD 2003 WORKSH S
   Garcia A, 2006, LECT NOTES COMPUT SC, V3880, P36
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   He LL, 2006, INT J COMPUT SCI NET, V6, P247
   Herrmann S, 2007, APPL ONTOL, V2, P181
   Hursch WL, 1995, SPARATION CONCERNS
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Komondoor Raghavan, 2001, P 8 INT S STAT AN SA, V1, P40
   Krinke J, 2004, P WORKSH ASP REV ENG
   Krinke J, 2006, WORK CONF REVERSE EN, P334
   Marin M, 2006, WORK CONF REVERSE EN, P299
   Marin M, 2006, WORK CONF REVERSE EN, P29
   Masuhara H, 2003, LECT NOTES COMPUT SC, V2743, P2
   Meyer B., 1988, Object-Oriented Software Construction
   Mezini M, 2003, LECT NOTES COMPUT SC, V2655, P24
   Mezini M., 2004, Software Engineering Notes, V29, P127, DOI 10.1145/1041685.1029915
   Mezini M., 1998, KLUWER INT SERIES EN, V470
   Monteiro M., 2005, Proceedings of the 4th international conference on Aspect-oriented software development, P111
   Monteiro MP, 2008, SOFTWARE PRACT EXPER, V38, P361, DOI 10.1002/spe.835
   Monteiro MP, 2013, SOFTWARE PRACT EXPER, V43, P1519, DOI 10.1002/spe.2154
   Qu LP, 2007, FOURTH INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY, VOL 3, PROCEEDINGS, P564, DOI 10.1109/FSKD.2007.281
   Qu LP, 2007, MUE: 2007 INTERNATIONAL CONFERENCE ON MULTIMEDIA AND UBIQUITOUS ENGINEERING, PROCEEDINGS, P407
   Revelle M, 2005, PROG COMPREHEN, P23, DOI 10.1109/WPC.2005.43
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Schrefl M, 2004, SOFTWARE PRACT EXPER, V34, P449, DOI 10.1002/spe.571
   Serban G., 2006, Proceedings of the Eighth International Symposium on Symbolic and Numeric Algorithms for Scientific Computing, P69
   Shepherd D., 2005, ASE 05 P 20 IEEEACM, P184
   Siff M, 1999, IEEE T SOFTWARE ENG, V25, P749, DOI 10.1109/32.824377
   Steimann F, 2000, DATA KNOWL ENG, V35, P83, DOI 10.1016/S0169-023X(00)00023-9
   Tonella P, 2005, IEEE T SOFTWARE ENG, V31, P819, DOI 10.1109/TSE.2005.115
   Tonella P, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P112, DOI 10.1109/WCRE.2004.13
   Tourwé T, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P97
   Vander PolK J., 2006, Beef Cattle Reports, P51
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1123, DOI 10.1109/TSE.2011.83
   Zhu JL, 2014, SOFTWARE PRACT EXPER, V44, P1525, DOI 10.1002/spe.2234
NR 52
TC 2
Z9 2
U1 0
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2016
VL 28
IS 5
BP 306
EP 339
DI 10.1002/smr.1769
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DL6YP
UT WOS:000375786300001
DA 2024-07-18
ER

PT J
AU Lindholm, C
AF Lindholm, Christin
TI Involving user perspective in a software risk management process
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE risk management; user perspective; medical device development; software
   development; usability testing
ID MEDICAL DEVICE SOFTWARE; HEALTH-CARE; VERIFICATION; DESIGN; MODEL
AB More and more user groups are using medical devices. Heart starters are, for example, available in public places and used by non-professionals. Different mobile medical applications, designed to help people manage their own health, are now being added to the medical device spectra. Users handling medical devices make errors, but by involving users in the risk management process, it is possible to lower the risk of these errors. This paper presents an evaluation of the value of complementing a traditional risk management process with an emphasised user perspective. A medical device software risk management framework is being designed, and the risk management process should be regarded as the first part of the framework. The main goal of the evaluated risk management process is to integrate users and user perspective into the risk management process. The results indicate that the use of use cases as input at risk meetings makes the discussions more focused, saving effort and time. When users attend the risk meetings, user perspective and domain knowledge are brought into the process, affecting risk identification and risk assessment. The results also show that the use of usability testing gives valuable input to the risk management process. Copyright (C) 2015 John Wiley & Sons, Ltd.
C1 [Lindholm, Christin] Lund Univ, Fac Engn, Dept Comp Sci, Software Engn Res Grp, Box 118, S-22100 Lund, Sweden.
C3 Lund University
RP Lindholm, C (corresponding author), Lund Univ, Fac Engn, Dept Comp Sci, Software Engn Res Grp, Box 118, S-22100 Lund, Sweden.
EM christin.lindholm@cs.lth.se
CR Abelein U, 2013, IEEE SOFTWARE, V30, P17, DOI 10.1109/MS.2013.124
   Allen Stephen, 2014, Network Security, V2014, P11, DOI 10.1016/S1353-4858(14)70021-2
   [Anonymous], P REQ ENG FDN SOFTW
   [Anonymous], INTERACTIONS
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], P 5 INT WORKSH COOP
   [Anonymous], 610252006 IEC
   [Anonymous], P 8 C SOFTW ENG RES
   [Anonymous], P REL MAIN S RAMS
   [Anonymous], MCGRAW HILL SOFTWARE
   [Anonymous], 2005, Extreme programming explained: Embrace change
   [Anonymous], PHYSL MEASUREMENT
   [Anonymous], P 2 INT C E BUS INF
   [Anonymous], GUIDELINES RISKUSE 1
   [Anonymous], 2009, AGILE PROJECT MANAGE
   [Anonymous], DO IT DES INTR HUM F
   [Anonymous], MED DEV US SAF INC H
   [Anonymous], QUAL ASSUR J
   [Anonymous], 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering-Volume
   [Anonymous], 608122006 IEC
   [Anonymous], BMJ INNOV, DOI DOI 10.1136/BMJINNOV-2021-000713
   [Anonymous], 2012, 149712012 ISO
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Becker JC, 1997, IEEE HIGH-ASSURANCE SYSTEMS ENGINEERING WORKSHOP, PROCEEDINGS, P228, DOI 10.1109/HASE.1996.618602
   Bills Ed, 2008, Biomed Instrum Technol, V42, P466, DOI 10.2345/0899-8205-42.6.466
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Bovee MW, 2001, IEEE T ENG MANAGE, V48, P465, DOI 10.1109/17.969424
   Bubevski V, 2014, SOFTW TEST VERIF REL, V24, P124, DOI 10.1002/stvr.1488
   BUXTON JN, 1991, SOFTWARE ENG J, V6, P17, DOI 10.1049/sej.1991.0002
   Cacciabue PC, 2010, INT J MED INFORM, V79, pE1, DOI 10.1016/j.ijmedinf.2008.10.005
   Chiozza ML, 2009, CLIN CHIM ACTA, V404, P75, DOI 10.1016/j.cca.2009.03.015
   Clutterbuck P, 2009, PROCEEDINGS OF THE 3RD EUROPEAN CONFERENCE ON INFORMATION MANAGEMENT AND EVALUATION, P107
   Daniels Jeremy, 2007, J Clin Monit Comput, V21, P323, DOI 10.1007/s10877-007-9091-y
   Dhillon B.S., 2008, Reliability Technology, Human Error, and Quality in Health Care
   Dhillon BS., 2000, MED DEVICE RELIABILI
   Dumas J.S., 1999, PRACTICAL GUIDE USAB
   Fitzgerald Brian, 2013, 2013 35th International Conference on Software Engineering (ICSE), P863, DOI 10.1109/ICSE.2013.6606635
   Gary K, 2011, SOFTWARE PRACT EXPER, V41, P945, DOI 10.1002/spe.1075
   Habraken MMP, 2009, ERGONOMICS, V52, P809, DOI 10.1080/00140130802578563
   Hall E.M., 1998, Managing risk: Methods for software systems development
   Hyman W. A., 2002, Journal of Clinical Engineering, V27, P134
   Jain R. K., 2010, 2010 2nd International Conference on Reliability, Safety and Hazard - Risk-Based Technologies and Physics-of-Failure Methods (ICRESH 2010), P637, DOI 10.1109/ICRESH.2010.5779627
   Jones C., 1994, Assessment and control of software risks
   Knight JC, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P547, DOI 10.1109/ICSE.2002.1007998
   Krasich M, 2000, P A REL MAI, P1, DOI 10.1109/RAMS.2000.816275
   Kushniruk A, 2002, COMPUT BIOL MED, V32, P141, DOI 10.1016/S0010-4825(02)00011-2
   Li CX, 2013, IEEE EMBED SYST LETT, V5, P50, DOI 10.1109/LES.2013.2276434
   Lindholm C, 2014, SOFTWARE QUAL J, V22, P469, DOI 10.1007/s11219-013-9222-2
   Lindholm C, 2013, INT WORK SOFTW, P5, DOI 10.1109/SEHC.2013.6602470
   Mc Caffery F, 2010, SOFTWARE QUAL J, V18, P81, DOI 10.1007/s11219-009-9086-7
   McCaffery F, 2009, PROC INT CONF SOFTW, P152, DOI 10.1109/ICSE-COMPANION.2009.5070973
   McCaffery Fergal., 2012, Software and Systems Traceability, V9781447122, P321, DOI [DOI 10.1007/978-1-4471-2239-5_15, arXiv:1011.1669v3]
   MCDERMID JA, 1995, COMPASS '95 - PROCEEDINGS OF THE TENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P37, DOI 10.1109/CMPASS.1995.521885
   McHugh M, 2014, J SOFTW-EVOL PROC, V26, P504, DOI 10.1002/smr.1608
   McHugh M, 2013, INT WORK SOFTW, P12, DOI 10.1109/SEHC.2013.6602471
   Méry D, 2010, LECT NOTES COMPUT SC, V6416, P312, DOI 10.1007/978-3-642-16561-0_31
   NIELSEN J, 1992, COMPUTER, V25, P12, DOI 10.1109/2.121503
   NYFJORD J., 2007, International Conference on Software Engineering Advances, P25
   Rakitin SR, 2006, COMPUTER, V39, P40, DOI 10.1109/MC.2006.123
   Reason J., 1991, HUMAN ERROR
   Reason J., 1997, MANAGING RISKS ORG A
   Robson C., 2002, Real world research
   Rogers Yvonne, 2011, Interaction design: beyond humancomputer interaction
   Schmuland C, 2005, IEEE T DEVICE MAT RE, V5, P488, DOI 10.1109/TDMR.2005.857860
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shah SGS, 2006, INT J HEALTH CARE Q, V19, P500, DOI 10.1108/09526860610687619
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Sundararajan S, 2014, IET SOFTW, V8, P245, DOI 10.1049/iet-sen.2013.0190
   Vilbergsd'ottir S.G., 2006, the 4th Nordic conference on Human-computer interaction: changing roles, P281
   VIRZI RA, 1992, HUM FACTORS, V34, P457, DOI 10.1177/001872089203400407
   Yin R.K., 2011, Qualitative research from start to finish
   Zhang DM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P951, DOI 10.1109/ICSE.2013.6606644
NR 73
TC 2
Z9 3
U1 1
U2 12
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2015
VL 27
IS 12
BP 953
EP 975
DI 10.1002/smr.1753
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB5JV
UT WOS:000368551300002
DA 2024-07-18
ER

PT J
AU Samalikova, J
   Kusters, RJ
   Trienekens, JJM
   Weijters, AJMM
AF Samalikova, J.
   Kusters, R. J.
   Trienekens, J. J. M.
   Weijters, A. J. M. M.
TI Process mining support for Capability Maturity Model Integration-based
   software process assessment, in principle and in practice
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE process mining; software process assessment; information gathering
AB Currently used software process improvement methods such as the Capability Maturity Model Integration (CMMI) rely in their process assessments on information, which is gathered during interviews, in oral audit sessions, and from quality manuals and process standard reviews. Although valuable information about software processes can be gained in these assessments, the resulting data quality can be improved upon. This paper investigates the potential of process mining to support current software process assessment and improvement approaches. Based on an analysis of CMMI from a process mining perspective, particular CMMI model components are identified for which it is in principle possible to apply process mining techniques. Subsequently, criteria have been defined to select, with respect to these particular CMMI components, software processes for which process mining has an added value. These criteria have been applied in the selection of a particular 'minable' software process, that is, a change control process. Subsequently, the results of a case study from industrial practice, on the process mining of a change control board process, are used to illustrate that process mining can provide CMMI assessors with relevant information. This information reflects the actual or 'real' software processes in practice, and as such, it offers an excellent basis to support assessors in understanding the 'actual' software processes. Copyright (C) 2014 John Wiley & Sons, Ltd.
C1 [Samalikova, J.] Eindhoven Univ Technol, Ind Engn & Innovat Sci Dept, NL-5600 MB Eindhoven, Netherlands.
   [Kusters, R. J.; Trienekens, J. J. M.] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
   [Trienekens, J. J. M.] Eindhoven Univ Technol, Area ICT Syst Dev, NL-5600 MB Eindhoven, Netherlands.
   [Weijters, A. J. M. M.] Eindhoven Univ Technol, Technol Management Dept, NL-5600 MB Eindhoven, Netherlands.
C3 Eindhoven University of Technology; Eindhoven University of Technology;
   Eindhoven University of Technology; Eindhoven University of Technology
RP Trienekens, JJM (corresponding author), Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM J.J.M.Trienekens@tue.nl
RI Kusters, Rob/B-3093-2010
OI Kusters, Rob/0000-0003-4069-5655
CR Alves de Medeiros A.K., 2006, THESIS EINDHOVEN U T
   [Anonymous], 1993, SOFTW QUAL ASSUR MEA
   [Anonymous], 1992, TR9296 UMIACS
   CMMI Product Team, 2010, Technical Report CMU/SEI-2010-TR-033
   DAVIS GB, 1982, IBM SYST J, V21, P4, DOI 10.1147/sj.211.0004
   de Medeiros AKA, 2007, DATA MIN KNOWL DISC, V14, P245, DOI 10.1007/s10618-006-0061-7
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   Rubin V, 2007, LECT NOTES COMPUT SC, V4470, P169
   Samalikova Jana, 2012, Proceedings of the IADIS International Conference on Information Systems 2012, P231
   Samalikova J., 2012, THESIS EINDHOVEN U T
   Samalikova J, 2011, SOFTWARE QUAL J, V19, P101, DOI 10.1007/s11219-010-9105-8
   *SCAMPI UPGR TEAM, 2006, CMUSEI2006HB002 SCAM
   SEI, 2009, CMMI OV
   Solingen R. V., 1999, GOAL QUESTION METRIC
   Van Der Aalst W. M. P., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P549, DOI 10.1007/s10606-005-9005-9
   van der Aalst W, 2012, LECT NOTES BUS INF P, V99, P169
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3536, P444
   Weijters A., 2006, BETA WORKING PAPER S, V166
NR 18
TC 19
Z9 21
U1 0
U2 28
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2014
VL 26
IS 7
BP 714
EP 728
DI 10.1002/smr.1645
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AM2DW
UT WOS:000339660300006
DA 2024-07-18
ER

PT J
AU Ruano-Mayoral, M
   Casado-Lumbreras, C
   Garbarino-Alberti, H
   Misra, S
AF Ruano-Mayoral, Marcos
   Casado-Lumbreras, Cristina
   Garbarino-Alberti, Helena
   Misra, Sanjay
TI Methodological framework for the allocation of work packages in global
   software development
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE global software development; work package allocation; metrics;
   measurement
ID DEVELOPMENT PROJECTS; DISTRIBUTED TEAMS; IMPACT; MODEL; GSD
AB Global software development in software development industry is a new aspect for many software project managers. In this scenario, the allocation of work packages among project participants is not a simple task. This allocation was traditionally determined by availability and competence but this new trend introduces complexity in an already complex process. Given the need to define new models to guide managers in these operations, this paper presents a framework to allocate work packages among project participants. Apart from the introduction of the framework itself, the results of its implementation are presented. These results show a notable output of the implementation in terms of accuracy of task execution to planning, effect introduction and overall satisfaction. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Ruano-Mayoral, Marcos] Global Approach Consulting, Madrid, Spain.
   [Casado-Lumbreras, Cristina] Univ Int Rioja, Madrid, Spain.
   [Garbarino-Alberti, Helena] Univ ORT Uruguay, Montevideo, Uruguay.
   [Misra, Sanjay] Atilim Univ, Ankara, Turkey.
C3 Universidad Internacional de La Rioja (UNIR); University ORT Uruguay;
   Atilim University
RP Casado-Lumbreras, C (corresponding author), Univ Int Rioja, Madrid, Spain.
EM cristina.casado@unir.net
RI Casado-Lumbreras, Cristina/KIK-5336-2024; Misra, Sanjay/K-2203-2014
OI Misra, Sanjay/0000-0002-3556-9331
CR Almeida Luis Henrique, 2012, International Journal of Knowledge Society Research, V3, P1, DOI 10.4018/jksr.201204010
   Almeida LH, 2012, INT J KNOWLEDGE SOC, V3, P32
   Barcus A, 2008, OMEGA-INT J MANAGE S, V36, P464, DOI 10.1016/j.omega.2006.04.013
   Cataldo M, 2012, J SOFTW-EVOL PROC, V24, P153, DOI 10.1002/smr.477
   Colomo-Palacios R, 2012, J UNIVERS COMPUT SCI, V18, P2646
   da Silva FQB, 2012, J SOFTW-EVOL PROC, V24, P625, DOI 10.1002/smr.563
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   Doma S, 2009, LECT NOTES COMPUT SC, V5593, P13, DOI 10.1007/978-3-642-02457-3_2
   Edwards HK, 2005, J GLOB INF MANAG, V13, P21, DOI 10.4018/jgim.2005040102
   Edwards HK, 2005, J GLOB INF MANAG, V13, P32
   Fernandez J., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), DOI 10.1109/ICGSE.2012.44
   García-Crespo A, 2010, INFORM SYST MANAGE, V27, P247, DOI 10.1080/10580530.2010.493839
   Lamersdorf A., 2010, Journal of the Brazilian Computer Society, V16, P97, DOI [DOI 10.1007/S13173-010-0010-6, 10.1007/s13173-010-0010-6]
   Lamersdorf A, 2012, J SOFTW-EVOL PROC, V24, P661, DOI 10.1002/smr.576
   Leal GCL, 2012, J UNIVERS COMPUT SCI, V18, P2686
   Noll J., 2016, ACM Inroads, V1, P66, DOI [DOI 10.1145/1835428.1835445, 10.1145/1835428.1835445]
   Ruano-Mayoral M, 2011, LECT NOTES COMPUT SC, V7046, P200
   Sakthivel S, 2007, COMMUN ACM, V50, P69, DOI 10.1145/1232743.1232750
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Tuffley D, 2012, IET SOFTW, V6, P176, DOI 10.1049/iet-sen.2011.0044
NR 20
TC 9
Z9 11
U1 0
U2 10
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2014
VL 26
IS 5
SI SI
BP 476
EP 487
DI 10.1002/smr.1618
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH2SF
UT WOS:000335970700003
DA 2024-07-18
ER

PT J
AU Chen, T
   Zhang, XS
   Zhu, C
   Ji, XL
   Guo, SZ
   Wu, Y
AF Chen, Ting
   Zhang, Xiao-song
   Zhu, Cong
   Ji, Xiao-li
   Guo, Shi-ze
   Wu, Yue
TI Design and implementation of a dynamic symbolic execution tool for
   windows executables
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software testing; automated test generation; dynamic symbolic execution;
   implementations; code coverage
ID BIT-VECTORS; GENERATION; SOLVER
AB Dynamic symbolic execution, or DSE for short, has become a promising technique in software testing. However, the implementation details of DSE have not been described in depth in existing works. Although some open-source DSE tools are available nowadays, to design and implement a specific DSE tool from scratch is necessary for some reasons. To this end, we implement a Smart Fuzzing Tool for Windows Native Executables, or SMAFE for short, which utilizes Pin and STP for instrumentation and constraint solving, respectively. Advantages of Pin and STP make SMAFE portable. The major contribution of this paper is our detailed description of the implementation of DSE, including symbolization of inputs, tracking of symbols, synchronization of overlapped symbols, environment modeling, and so on. A practical case study validates the effectiveness of SMAFE. Then, the experiments with two benchmark sets present that the code coverage is above 90% on average. Benefits from this paper are at least twofold: moderating learning curve for scholars and shortening the development circle for practitioners. Copyright (c) 2013 John Wiley & Sons, Ltd.
C1 [Chen, Ting; Zhang, Xiao-song; Zhu, Cong; Ji, Xiao-li; Wu, Yue] Univ Elect Sci & Technol China, Sch Comp Sci & Engn, Chengdu 611731, Peoples R China.
   [Guo, Shi-ze] Inst North Elect Equipment, Beijing 100191, Peoples R China.
C3 University of Electronic Science & Technology of China
RP Zhang, XS (corresponding author), Univ Elect Sci & Technol China, Sch Comp Sci & Engn, Chengdu 611731, Peoples R China.
EM 705513953@qq.com
FU Fundamental Research Funds for the Central Universities
FX This work was supported by the Fundamental Research Funds for the
   Central Universities.
CR Anand S, 2008, LECT NOTES COMPUT SC, V4963, P367, DOI 10.1007/978-3-540-78800-3_28
   [Anonymous], 2008, NDSS
   [Anonymous], 2006, P 2 INT C VIRT EX EN
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2009, P 5 WORKSH HOTDEP
   [Anonymous], 2006, P ACM C COMP COMM SE
   [Anonymous], 1999, P C CTR ADV STUD COL
   [Anonymous], 2004, P INT S COD GEN OPT
   Bardin S, 2011, SOFTW TEST VERIF REL, V21, P29, DOI 10.1002/stvr.423
   Brummayer R, 2009, LECT NOTES COMPUT SC, V5505, P174, DOI 10.1007/978-3-642-00768-2_16
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   Cadar C, 2005, LECT NOTES COMPUT SC, V3639, P2
   Cadar C., 2008, USENIX S OP SYST DES
   Chipounov V, 2011, ACM SIGPLAN NOTICES, V46, P265, DOI [10.1145/1961296.1950396, 10.1145/1961295.1950396]
   CLARKE LA, 1985, J SYST SOFTWARE, V5, P15, DOI 10.1016/0164-1212(85)90004-4
   Collingbourne P, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P315
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dutertre B, 2006, LECT NOTES COMPUT SC, V4144, P81, DOI 10.1007/11817963_11
   Elkarablieh B, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129
   Emmi M., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P151
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   Godefroid P., 2007, SIGPLAN Notices, V42, P47, DOI [10.1145/1190216.1190226, 10.1145/1190215.1190226]
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P., 2010, Proceedings of the 19th international symposium on Software testing and analysis, P1, DOI DOI 10.1145/1831708.1831710
   Godefroid P, 2011, P 8 INT S SOFTW TEST
   Godefroid P, 2008, ACM SIGPLAN NOTICES, V43, P206, DOI 10.1145/1379022.1375607
   Godefroid P, 2011, ACM SIGPLAN NOTICES, V46, P258, DOI 10.1145/1993316.1993529
   Godefroid P, 2010, ACM SIGPLAN NOTICES, V45, P43, DOI 10.1145/1707801.1706307
   Gupta AK, 2008, ACM SIGPLAN NOTICES, V43, P147, DOI 10.1145/1328897.1328459
   HAMADI Y, 2003, MSRTR200391
   Jayaraman K, 2009, P 1 NASA FORM METH S
   Khknen K., 2011, WORKSHOP BYTECODE SE, P75
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kosmatov Nikolai, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P147, DOI 10.1109/ISSRE.2008.25
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Majumdar R, 2009, LECT NOTES COMPUT SC, V5643, P555, DOI 10.1007/978-3-642-02658-4_41
   Majumdar Rupak, 2007, 22 IEEE ACM INT C AU, P134
   Microsoft, NET FRAM GEN REF PRO
   Molnar D. A., 2007, TECHNICAL REPORT
   Myers Glenford J., 2011, The Art of Software Testing
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI DOI 10.1145/1806799.1806864
   Saxena P, 2009, P 8 INT S SOFTW TEST
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Schwartz EJ, 2010, P IEEE S SECUR PRIV, P317, DOI 10.1109/SP.2010.26
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Song D, 2008, LECT NOTES COMPUT SC, V5352, P1, DOI 10.1007/978-3-540-89862-7_1
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Williams N, 2005, LECT NOTES COMPUT SC, V3463, P281
   Xie T, 2009, I C DEPEND SYS NETWO, P359, DOI 10.1109/DSN.2009.5270315
   Xu Ru-Gang., 2008, ISSTA, P27
NR 54
TC 7
Z9 9
U1 0
U2 15
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD DEC
PY 2013
VL 25
IS 12
BP 1249
EP 1272
DI 10.1002/smr.1601
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 271BG
UT WOS:000328364600002
DA 2024-07-18
ER

PT J
AU Guerrouj, L
   Di Penta, M
   Antoniol, G
   Guéhéneuc, YG
AF Guerrouj, Latifa
   Di Penta, Massimiliano
   Antoniol, Giuliano
   Gueheneuc, Yann-Gael
TI TIDIER: an identifier splitting approach using speech recognition
   techniques
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE identifier splitting; program comprehension; linguistic analysis
AB The software engineering literature reports empirical evidence on the relation between various characteristics of a software system and its quality. Among other factors, recent studies have shown that a proper choice of identifiers influences understandability and maintainability. Indeed, identifiers are developers' main source of information and guide their cognitive processes during program comprehension when high-level documentation is scarce or outdated and when source code is not sufficiently commented. This paper proposes a novel approach to recognize words composing source code identifiers. The approach is based on an adaptation of Dynamic Time Warping used to recognize words in continuous speech. The approach overcomes the limitations of existing identifier-splitting approaches when naming conventions (e.g., Camel Case) are not used or when identifiers contain abbreviations. We apply the approach on a sample of more than 1000 identifiers extracted from 340 C programs and compare its results with a simple Camel Case splitter and with an implementation of an alternative identifier splitting approach, Samurai. Results indicate the capability of the novel approach: (i) to outperform the alternative ones, when using a dictionary augmented with domain knowledge or a contextual dictionary and (ii) to expand 48% of a set of selected abbreviations into dictionary words. Copyright (c) 2011 John Wiley & Sons, Ltd.
C1 [Guerrouj, Latifa; Antoniol, Giuliano; Gueheneuc, Yann-Gael] Ecole Polytech Montreal, DGIGL, PTIDEJ Team, SOCCER Lab, Quebec City, PQ, Canada.
   [Di Penta, Massimiliano] Univ Sannio, RCOST, Dept Engn, Benevento, Italy.
C3 Universite de Montreal; Polytechnique Montreal; University of Sannio
RP Guerrouj, L (corresponding author), Ecole Polytech Montreal, DGIGL, PTIDEJ Team, SOCCER Lab, Quebec City, PQ, Canada.
EM latifa.guerrouj@polymt.ca
RI Di Penta, Massimiliano/AAF-9656-2021; Guéhéneuc, Yann-Gaël/K-9371-2019
OI Di Penta, Massimiliano/0000-0002-0340-9747
FU Natural Sciences and Engineering Research Council of Canada (Research
   Chairs in Software Evolution and in Software Patterns and Patterns of
   Software); G. Antoniol Individual Discovery Grant
FX The authors are grateful and thank warmly Eric Enslen, Emily Hill, Lori
   Pollock, and K. Vijay Shanker for sharing with us the Samurai frequency
   tables. This research was partially supported by the Natural Sciences
   and Engineering Research Council of Canada (Research Chairs in Software
   Evolution and in Software Patterns and Patterns of Software) and by the
   G. Antoniol Individual Discovery Grant.
NR 0
TC 28
Z9 33
U1 0
U2 4
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUN
PY 2013
VL 25
IS 6
SI SI
BP 575
EP 599
DI 10.1002/smr.539
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 166ME
UT WOS:000320557900002
DA 2024-07-18
ER

PT J
AU Smite, D
   Wohlin, C
AF Smite, Darja
   Wohlin, Claes
TI Lessons learned from transferring software products to India
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE global software engineering; global software development; software
   transfers; offshoring; offshore insourcing; case study
AB Globalization has influenced the way software is developed today, and many software organizations have started to actively utilize resources from around the world. However, these endeavors are recognized as very challenging, and they have attracted a lot of attention in software research in the past decade. Unlike many other research initiatives, which explore the complexities of distributed software development activities, the focus of this paper is on software transfers. Software transfers refer to activities that are moved from one location to another. The authors draw attention to the lessons learned from an empirical investigation of two transfer projects conducted at Ericsson. Both transfers were performed between a site in Sweden and a site in India. The observations outline a set of generic practices that have been found useful for transferring software development within a company. It also highlights a number of challenges to be addressed and a set of corresponding recommendations. Finally, the paper emphasizes the need to identify software products that are suitable for transfers and the need to monitor the long-term effects of transfer. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Smite, Darja] Blekinge Inst Technol, Software Engn Res Lab, Blekinge, Sweden.
C3 Blekinge Institute Technology
RP Smite, D (corresponding author), Blekinge Inst Technol, Software Engn Res Lab, Blekinge, Sweden.
EM Darja.Smite@bth.se; Claes.Wohlin@bth.se
OI Wohlin, Claes/0000-0003-0460-5253
FU Ericsson Software Research; Swedish Knowledge Foundation [2009/0249]
FX The research is funded by Ericsson Software Research and the Swedish
   Knowledge Foundation under the KK-Hog grant 2009/0249.
CR Banerjee Arindam, 2009, Strategic Outsourcing, V2, P68, DOI 10.1108/17538290910935909
   Battin RD, 2001, IEEE SOFTWARE, V18, P70, DOI 10.1109/52.914750
   Boden A, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P235
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Carmel E., 2005, Offshoring Information Technology: Sourcing and Outsourcing to a Global Workforce
   Conchúir EO, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P159, DOI 10.1109/ICGSE.2006.261229
   Hanssen G., 2010, 43 HAW INT C SYST SC, P1, DOI DOI 10.1109/HICSS.2010.344
   Herbsleb JD, 2005, PROC INT CONF SOFTW, P524
   Kommeren R, 2007, EMPIR SOFTW ENG, V12, P647, DOI 10.1007/s10664-007-9047-3
   Lee JN, 2003, COMMUN ACM, V46, P84, DOI 10.1145/769800.769807
   Mockus A, 2001, IEEE SOFTWARE, V18, P30, DOI 10.1109/52.914737
   Piri A, 2009, INT CONF GLOBAL SOFT, P105, DOI 10.1109/ICGSE.2009.18
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Smite D., 2006, Software Process Improvement and Practice, V11, P61, DOI 10.1002/spip.252
   Smite Darja, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P97, DOI 10.1109/ICGSE.2010.19
   Smite D, IEEE SOFTWA IN PRESS
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
NR 19
TC 11
Z9 11
U1 3
U2 23
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD OCT
PY 2012
VL 24
IS 6
SI SI
BP 605
EP 623
DI 10.1002/smr.550
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 004ZK
UT WOS:000308719900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Korsaa, M
   Biro, M
   Messnarz, R
   Johansen, J
   Vohwinkel, D
   Nevalainen, R
   Schweigert, T
AF Korsaa, Morten
   Biro, Miklos
   Messnarz, Richard
   Johansen, Jorn
   Vohwinkel, Detlef
   Nevalainen, Risto
   Schweigert, Tomas
TI The SPI manifesto and the ECQA SPI manager certification scheme
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE process improvement; skill set; certification; SPI manager
AB Software process improvement (SPI) can be seen as a profession having its own competence needs and its own community of interest. European projects EQN and EU Cert have defined skill sets and a common certification scheme for about 20 professions, mainly in the IT domain. European Certification and Qualification Association ECQA is created to manage certification and provide the necessary infrastructure. A common way to approach the IT domain from a process perspective is the 3S concept (Software, Systems, Services). Software process can be seen as the first spearhead among these. The first software process models, such as CMM and SPICE, have already existed for about 20 years. With all the experience that the models bring, it is reasonable to start the PI profession from the software process. Software Process Improvement Manager (SPI Manager) is one of the new topics in ECQA. The development of the SPI Manager training and certification scheme has been done in many small steps so far. This paper explains the current structure and the main components of SPI Manager competences, training needs and the certification scheme. Several other schemes will be developed in the future for process improvement-related competences. The current version of the SPI Manager skill set is mainly based on software, systems and service processes and their related reference models. It could also be used in the future in domains other than IT. Copyright (c) 2010 John Wiley & Sons, Ltd.
C1 [Korsaa, Morten; Johansen, Jorn] DELTA Axiom, DK-2970 Horsholm, Denmark.
   [Biro, Miklos] Corvinus Univ Budapest, H-1093 Budapest, Hungary.
   [Messnarz, Richard] ISCN GesmbH, A-8010 Graz, Austria.
   [Vohwinkel, Detlef; Schweigert, Tomas] SQS AG, Cologne, Germany.
   [Nevalainen, Risto] Spinet Oy, Espoo, Finland.
   [Nevalainen, Risto] FiSMA Ry, Espoo, Finland.
C3 Corvinus University Budapest
RP Korsaa, M (corresponding author), DELTA Axiom, Venlighedsvej 4, DK-2970 Horsholm, Denmark.
EM mko@deltaaxiom.com
RI Biro, Miklos/K-8741-2014; Messnarz, Richard/AAH-8716-2020
OI Biro, Miklos/0000-0001-8627-1159; Messnarz, Richard/0000-0002-0555-3160
CR [Anonymous], 2004, 10 MAJ CAUS PROJ FAI
   Baddoo N, 2008, EUROSPI 2008 P
   Balstrup B, 2010, SPI MANIFESTO
   ECQA Guide, ECQA EUR CERT QUAL A
   Gilb T, 2004, PROJECT FAILURE SOME
   Hammer M., 2011, PROCESS ENTERPRISE M
   Hammer M., HARVARD BUSINESS MAN
   Hammer Michael., 2004, Harvard Business Review: Deep Change: How Operational Innovation Can Transform Your Company
   Jacobson I., 2007, J OBJECT TECHNOLOGY, V6
   Kasse T., 2004, Practical Insight Into CMMI
   Mathiassen L., 2002, IMPROVING SOFTWARE O
   Nevalainen R, 2010, J SOFTW MAINT EVOL-R, V22, P269, DOI 10.1002/spip.438
   Paulk MC, 2009, SOFTWARE PROCESS BIB
   Pries-Heje J, 2007, IMPROVEIT BOOK IMPRO
   Richard M, 2008, SOFTWARE PROCESS IMP, V4, P297
   Statz J, 1997, COMMUNICATION    APR, P13
   Tomas S, 2007, SPI MEASUREMENT DRIV
NR 17
TC 61
Z9 61
U1 0
U2 5
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2012
VL 24
IS 5
SI SI
BP 525
EP 540
DI 10.1002/smr.502
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 975AO
UT WOS:000306479100008
DA 2024-07-18
ER

PT J
AU Steiner, M
   Blaschke, M
   Philipp, M
   Schweigert, T
AF Steiner, Michael
   Blaschke, Monique
   Philipp, Michael
   Schweigert, Tomas
TI Make test process assessment similar to software process assessment-the
   Test SPICE approach
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE SPICE; software test; assessment; process improvement; ISO; IEC 15504;
   TPI; TMMI; quality assurance; ISO; IEC 29119; IEEE 829; Test SPICE
AB This article presents an ISO/IEC 15504 II conformant test assessment approach. It argues the need for such a method by reviewing the common approaches of ISTQB, TMM and TPI/TMAP and it outlines the first version of Test SPICE. The paper shows how ISO/IEC 15504?V was used as a starting point and it describes the actual model. Copyright (c) 2010 John Wiley & Sons, Ltd.
C1 [Steiner, Michael; Blaschke, Monique; Philipp, Michael; Schweigert, Tomas] SQS AG, D-51149 Cologne, Germany.
RP Schweigert, T (corresponding author), SQS AG, Stollwerckstr 11, D-51149 Cologne, Germany.
EM tomas.schweigert@sqs.de
CR [Anonymous], 2008, TEST MAT MOD INT TMM
   [Anonymous], 2007, CERT TEST FDN LEV SY
   [Anonymous], TPI PRUFK UB TPI KON
   [Anonymous], 2003, SOFTW LEHRPL ZUM AUF
   [Anonymous], ISOIEC155045
   [Anonymous], 2006, SQS GLOSS GLOSS GEM
   Blaschke M, TEST SPICE APPROACH
   Int'l Software Testing Qualifications Board, 2007, STAND GLOSS TERMS US
   ISTQB &REG, ISTQB CERT TEST ADV
   ISTQB &REG, ISTQB CERT TEST FDN
   Pol M, 2000, MANAGEMENT OPTIMIERU
   van Ewijk A., 2009, TPI NEXT BUSINESS DR
NR 12
TC 10
Z9 10
U1 0
U2 11
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD AUG
PY 2012
VL 24
IS 5
SI SI
BP 471
EP 480
DI 10.1002/smr.507
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 975AO
UT WOS:000306479100003
DA 2024-07-18
ER

PT J
AU Adam, S
   Riegel, N
   Doerr, J
   Uenalan, O
   Kerkow, D
AF Adam, Sebastian
   Riegel, Norman
   Doerr, Joerg
   Uenalan, Oezguer
   Kerkow, Daniel
TI From business processes to software services and vice versauan improved
   transition through service-oriented requirements engineering
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE transition; service-oriented; processes
AB Business processes need to be agile and flexible to help organizations stay competitive. For this purpose, SOA promises the reuse of already existing information system functionality for enabling enterprises to change the business processes more quickly. However, many promises made by SOA authors have not found their way into practice, because methodological guidance that constructively assures a more successful SOA application is still missing. In this article, service-oriented requirements engineering is therefore introduced as a discipline aiming at a better and more systematic handling and alignment of SOA and Business Process Management. Our industrial experience in this regard is also described. Copyright (C) 2011 John Wiley & Sons, Ltd.
C1 [Adam, Sebastian; Riegel, Norman; Doerr, Joerg; Uenalan, Oezguer; Kerkow, Daniel] Fraunhofer IESE, D-67663 Kaiserslautern, Germany.
RP Adam, S (corresponding author), Fraunhofer IESE, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
EM sebastian.adam@iese.fraunhofer.de
FU German Federal Ministry of Education and Research [01ISO7009,
   01IA08006F]
FX The research described in this paper was carried out under the SoKNOS
   project (grant no. 01ISO7009) and the ADiWa project (grant no.
   01IA08006F), both funded by the German Federal Ministry of Education and
   Research.
CR Adam S, 2008, P 9 WORKSH BUS PROC
   Adam S, 2008, P 32 IEEE INT COMP S
   Alves C, 2003, P COMP BAS SOFTW QUA
   Amadee AG, 2008, STUDIE SOA CHECK 200
   Arsanjani A., 2004, IBM DeveloperWorks
   ATKINSON C, 2002, P 7 INT C SOFTW REUS
   Baum L, 2000, P INT REQUIR ENG C I
   Bayer J, 2006, P 7 C PROD FOC SOFTW
   Bayer J, 1999, P 5 S SOFTW REUS SSR
   Bayer J, 2005, PROCESS FAMILY ENG M
   Boehm B, 1999, P 4TH IEEE INT S REQ
   Bortz Jurgen, 2005, STATISTIK HUMAN SOZI
   Buchwald S., 2011, INT HDB SERVICE LIFE
   CARR NG, 2004, INFORM TECHNOLOGY CO
   Chen F., 2005, P 12 AS PAC SOFTW EN
   Cockburn A., 2001, Writing effective use cases
   Doerr J, 2007, P 15 REQUIR ENG C IE
   Doerr J, 2008, IEEE SOFTWARE MAY
   Earl MJ, 1993, MIS Q            MAR, P1
   Emig C, 2006, P AICTICIW 2006 IEEE
   Erl T, 2005, SERVICE ORIENTED ARC
   Keller G., 1992, Semantische ProzeSSmodellierung auf der Grundlage Ereignisgesteuerter ProzeSSketten
   Kluckmann J, 2007, 10 SCHRITTEN BUSINES
   Lam W, 1998, IEEE INT REQUIR ENG
   Lee J, 2008, P 1 WORKSH SERV OR A
   Lee J, 2007, SOAPL WORKSH
   Maiden N, 2006, IEEE SOFTWARE SEP
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   PAECH B, 2003, PERSPECTIVES REQUIRE
   Papazoglou M, 2006, DAGST SEM P, P05462
   Petersen K, 2006, 2 INT WORKSH SERV OR
   Recker J, 2006, P CAISE 2006 LNCS, V4001
   ROLLAND C, 2007, P 31 ANN INT COMP SO
   Scheer A-W, 2001, ARISU MODELLIERUNGSM
   Schmid K, 2003, THESIS
   Schmid K, 2002, P IEEE JOINT INT C R
   Simonsen J, 1999, INFORM SYST, V11, P51
   Smith H., 2003, BUSINESS PROCESS MAN
   Sommerville I, 2005, IEEE SOFTWARE JAN
   Strong D, 2004, ROADMAP ENTERPRISE S
   Tsai W, 2007, P INT C E BUS ENG IE
   Wahli U, 2008, BUILDING SOA SOLUTIO
   Wang J, 2008, P INT C SOFTW RES LN, V5030
   Zhu F, 1998, P 22 INT COMP SOFTW
NR 44
TC 5
Z9 5
U1 0
U2 12
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2012
VL 24
IS 3
SI SI
BP 237
EP 258
DI 10.1002/smr.558
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 910NG
UT WOS:000301645800002
DA 2024-07-18
ER

EF