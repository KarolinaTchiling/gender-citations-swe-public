FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Zhang, Y
   Hong, S
AF Zhang, Yang
   Hong, Shuai
TI ReInstancer: An automatic refactoring approach for <i>Instanceof</i>
   pattern matching
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE code quality; pattern matching; program analysis; refactoring;
   typecasting
AB The instanceof pattern matching can improve the code quality and readability by removing the redundant typecasting and simplifying the design in different scenarios. However, existing works do not provide sufficient support for refactoring instanceof pattern matching. This paper first identifies several cases that cannot be well handled by existing IDEs. Based on these observations, we propose a novel approach called ReInstancer to refactor instanceof pattern matching automatically. ReInstancer conducts program analysis for multi-branch statements to obtain pattern variables. After analyzing these patterns, the multi-branch statements are optimized and finally refactored into switch statements or expressions. ReInstancer is evaluated by 20 real-world projects with more than 7,700 instanceof pattern matching. The experimental results demonstrate that a total of 3,558 instanceof expressions and 228 multi-branch statements are refactored within 10.8 s on average for each project. ReInstancer improves the code quality by reducing redundant typecasting, demonstrating its effectiveness.
C1 [Zhang, Yang] Hebei Univ Sci & Technol, Sch Informat Sci & Engn, Shijiazhuang, Hebei, Peoples R China.
   [Hong, Shuai] Dalian Maritime Univ, Coll Informat Sci & Technol, Dalian 116026, Liaoning, Peoples R China.
C3 Hebei University of Science & Technology; Dalian Maritime University
RP Hong, S (corresponding author), Dalian Maritime Univ, Coll Informat Sci & Technol, Dalian 116026, Liaoning, Peoples R China.
EM hongshuaiss@foxmail.com
FU Hebei Natural Science Foundation; Hebei Oversea High-level Talent
   Foundation [C20230358];  [F2023208001]
FX The authors would like to thank the insightful comments and suggestions
   of those anonymous reviewers, which have improved the presentation. This
   work is partially supported by the Hebei Natural Science Foundation
   under Grant No. F2023208001 and the Hebei Oversea High-level Talent
   Foundation under Grant No. C20230358.
CR André É, 2018, IEEE INT C ENG COMP, P10, DOI 10.1109/ICECCS2018.2018.00010
   Apache, 2021, Apache Oozie Workflow Scheduler for Hadoop
   Apache, 2012, Abdera
   Apache, 2022, Johnzon
   Apache, 2020, The Apache Xerces™ Project
   Apache, 2022, The Apache™ Batik Project
   Apache, 2021, Fop
   Apache, 2019, JBoss-Javassist
   Apache, 2009, Jsecurity
   Apache, 2022, Welcome to Apache Clerezza
   Apache, 2020, DeltaSpike
   Apache, 2014, Xalan
   Apache, 2016, Hama
   Apache, 2021, Cassandra
   AUGUSTSSON L, 1985, LECT NOTES COMPUT SC, V201, P368
   Ban B., 2021, JGroups
   Biboudis A., 2015, 29 EUROPEAN C OBJECT
   Bierman G., 2021, JEP 420: pattern matching for switch (second preview)
   Bierman G., 2022, JEP 394: pattern matching for instanceof
   Boyd N., 2022, Rhino
   Brown C., 2011, International Symposium on Formal Methods for Components and Objects, P237
   Cantatore A., 2003, Wildcard matching algorithms
   Dig D., 2009, Proceedings of the 24th ACM SIGPLAN Conference Companion on Object Oriented Programming Systems Languages and Applications, P793
   Dig D, 2009, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2009.5070539
   Gamma E., 2019, JHotDraw
   Gil Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P477, DOI 10.1109/SANER.2017.7884657
   Gilbert D., 2017, THE JCOMMON CLASS LIBRARY
   Gyori A., 2013, CROSSING GAP IMPERAT, P543
   HOFFMANN CM, 1982, J ACM, V29, P68, DOI 10.1145/322290.322295
   Hong S, 2022, PROC IEEE ACM INT C, P183, DOI [10.1145/3510454.3516868, 10.1109/ICSE-Companion55297.2022.9793818]
   HSQL, 2021, HSQLDB-100% Java database
   IBM, 2021, The T. J Watson libraries for analysis
   JetBrains, 2021, IntelliJ IDEA
   Kawaguchi K., 2019, Jenkins
   Khatchadourian R, 2020, SCI COMPUT PROGRAM, V195, DOI 10.1016/j.scico.2020.102476
   Liu J, 2003, LECT NOTES COMPUT SC, V2562, P110
   Microsoft, 2021, Microsoft Visual Studio
   Midolo Alessandro, 2021, CSSE 2021: 2021 4th International Conference on Computer Science and Software Engineering (CSSE 2021), P135, DOI 10.1145/3494885.3494910
   Mráz F, 2019, LECT NOTES COMPUT SC, V11601, P209, DOI 10.1007/978-3-030-23679-3_17
   Park SG., 2019, 30th Annual Symposium on Combinatorial Pattern Matching, CPM 2019, June 18-20, 2019, Pisa, Italy, p16:1
   SAKOE H, 1979, IEEE T ACOUST SPEECH, V27, P588, DOI 10.1109/TASSP.1979.1163310
   Schäfer M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P71, DOI 10.1145/1985793.1985804
   Software C, 2021, SourceMonitor
   Stein B, 2018, IEEE INT CONF AUTOM, P565, DOI 10.1145/3238147.3238174
   Tang YM, 2018, PROC IEEE ACM INT C, P206, DOI 10.1145/3183440.3195098
   Thomas A., 2021, Ganttproject
   Troniek Z., 2012, RefactoringNG: a flexible Java refactoring tool, P1165
   Wadler P., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P307, DOI 10.1145/41625.41653
   Wang M, 2013, SCI COMPUT PROGRAM, V78, P2216, DOI 10.1016/j.scico.2012.07.014
   Wang X, 2019, PROCEEDINGS OF THE 16TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P631
   Wheeler David., 2009, Sloccount
   Zhang Y., 2020, FineLock: automatically refactoring coarse-grained locks into fine-grained locks, P565
   Zhang Y., 2022, Neural Comput Applic, V34, P1, DOI [10.1007/s00521-022-07248-8, DOI 10.1007/S00521]
   Zhang Y, 2022, KNOWL-BASED SYST, V255, DOI 10.1016/j.knosys.2022.109737
   Zhang Y, 2021, IEEE INT SYMP SOFTW, P399, DOI 10.1109/ISSREW53611.2021.00108
   Zhang Y, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2403
   Zhang Y, 2022, COMPUT APPL ENG EDUC, V30, P505, DOI 10.1002/cae.22469
   Zhang Y, 2019, IEEE ACCESS, V7, P104900, DOI 10.1109/ACCESS.2019.2931953
   Zhao M., 2022, CoRed-Block
NR 59
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 MAR 12
PY 2024
DI 10.1002/smr.2661
EA MAR 2024
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KY3F0
UT WOS:001183481300001
DA 2024-08-05
ER

PT J
AU Meng, FY
   Yu, H
   Chong, CY
   Wang, Y
   Zhu, ZL
AF Meng, Fanyi
   Yu, Hai
   Chong, Chun Yong
   Wang, Ying
   Zhu, Zhiliang
TI Automated construction of reference model for software remodularization
   through software evolution
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE reference model; software architecture; software clustering; software
   evolution
ID MODULARIZATION; IMPACT
AB The undocumented evolution of a software project and its underlying architecture underscores the need to recover the architecture from the software's implementation-level artifacts. Despite the existence of various software remodularization techniques, they often suffer from inaccuracies, and evaluating their effectiveness is challenging due to the absence of accurate "ground-truth" architectures or reference models. Prior studies on reference model construction are time-consuming and labor-intensive as it heavily relies on manual analysis by domain experts. Besides, other existing approaches that directly utilize the directory or package structure of the latest version can be unreliable, lacking in-depth analysis of the employed software structure. To address the above limitations, in this paper, we propose Automated Construction of Reference Model (ACRM), an approach for automatically constructing reference models by assigning weights to classes for various software projects using the metadata of all software versions and historical maintenance records. We evaluate ACRM through both quantitative and qualitative analyses. The experiment results provide quantitative validation and show that the generated reference models are reasonable, as confirmed by the relationship between proposed reference models and architectural smells or bugs. Furthermore, we conduct a survey among the practitioners from industry, to gain insights from practitioners' practices and further validate the generated reference models. The survey shows that, on average, 87% of the participants agree with the reference models generated by ACRM. Moreover, we propose an improved metric, wc2c, which analyzes the strengths and weaknesses of different types of software clustering techniques using the proposed reference models of the given software. Finally, we discuss the potential benefits of using ACRM in analyzed projects, particularly in terms of improving software quality, reducing maintenance costs, and enhancing developer productivity.
   Automated construction of reference model (ACRM) automatically constructs reference models by assigning weights to classes for various software projects using the metadata of all software versions and historical maintenance records. ACRM can aid developers in selecting appropriate software clustering techniques in a more structured and rigorous manner by leveraging generated reference models. image
C1 [Meng, Fanyi; Yu, Hai; Wang, Ying; Zhu, Zhiliang] Northeastern Univ, Software Coll, Shenyang, Peoples R China.
   [Chong, Chun Yong] Monash Univ Malaysia, Sch Informat Technol, Selangor, Malaysia.
C3 Northeastern University - China; Monash University; Monash University
   Malaysia
RP Yu, H (corresponding author), Northeastern Univ, Software Coll, Shenyang, Peoples R China.; Chong, CY (corresponding author), Monash Univ Malaysia, Sch Informat Technol, Selangor, Malaysia.
EM yuhai@mail.neu.edu.cn; chong.chunyong@monash.edu
RI YU, Hai/E-6831-2018; Chong, Chun Yong/G-5067-2015
OI YU, Hai/0000-0002-8024-1781; Chong, Chun Yong/0000-0003-1164-0049; Meng,
   Fanyi/0000-0001-6465-3295
FU Open Fund of State Key Lab. for Novel Software Technology, Nanjing
   University
FX This research was supported by the National Natural Science Foundation
   of China (grant nos. 62141210, 61977014, 61902329, 62002125, and
   61802164), the Fundamental Research Funds for the Central Universities
   (grant no. N2217005), the Open Fund of State Key Lab. for Novel Software
   Technology, Nanjing University (KFKT2021B01), and 111 Project (B16009).r
   No Statement Availabler No Statement Availabler No Statement Available
CR Amarjeet, 2017, INFORM SOFTWARE TECH, V82, P96, DOI 10.1016/j.infsof.2016.09.011
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Arcelli Fontana F., 2020, ICSEA 2020, p68?74
   Baldassarre MT, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106377
   Beck F, 2013, EMPIR SOFTW ENG, V18, P970, DOI 10.1007/s10664-012-9225-9
   BECKFORD FA, 2016, INTERDISCIPLINARY J
   Behnamghader P, 2017, EMPIR SOFTW ENG, V22, P1146, DOI 10.1007/s10664-016-9466-0
   Chong CY, 2017, J SYST SOFTWARE, V133, P28, DOI 10.1016/j.jss.2017.08.017
   Chong CY, 2013, INFORM SOFTWARE TECH, V55, P1994, DOI 10.1016/j.infsof.2013.07.002
   Corazza A, 2010, EUR CON SFTWR MTNCE, P88, DOI 10.1109/CSMR.2010.36
   Di Penta M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P556, DOI 10.1145/3368089.3409695
   Erdemir U, 2014, J SYST SOFTWARE, V97, P156, DOI 10.1016/j.jss.2014.07.038
   Fontana FA, 2019, J SYST SOFTWARE, V154, P139, DOI 10.1016/j.jss.2019.04.066
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Fowler M., 2018, Refactoring: improving the design of existing code
   Garcia J, 2021, IEEE T SOFTWARE ENG, V48, P2439, DOI 10.1109/TSE.2021.3060068
   Garcia J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P901, DOI 10.1109/ICSE.2013.6606639
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Ghiotto G, 2020, IEEE T SOFTWARE ENG, V46, P892, DOI 10.1109/TSE.2018.2871083
   Gnoyke P, 2021, PROC IEEE INT CONF S, P413, DOI 10.1109/ICSME52107.2021.00043
   Huang JH, 2016, INFORM SCIENCES, V342, P96, DOI 10.1016/j.ins.2016.01.030
   Jin WX, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P67, DOI 10.1109/ICSE-Companion.2019.00040
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   Joblin M, 2017, EMPIR SOFTW ENG, V22, P2050, DOI 10.1007/s10664-016-9478-9
   Kaufman L., 2009, Finding Groups in Data: An Introduction to Cluster Analysis, Vvol 344
   Kobayashi K, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P462, DOI 10.1109/ICSM.2012.6405308
   Koschke R, 2000, PROG COMPREHEN, P201, DOI 10.1109/WPC.2000.852494
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lutellier T, 2018, IEEE T SOFTWARE ENG, V44, P159, DOI 10.1109/TSE.2017.2671865
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Martini A, 2018, LECT NOTES COMPUT SC, V11048, P320, DOI 10.1007/978-3-030-00761-4_21
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mitchell BS, 2001, PROC IEEE INT CONF S, P744, DOI 10.1109/ICSM.2001.972795
   Mohammadi S, 2019, INFORM SOFTWARE TECH, V105, P252, DOI 10.1016/j.infsof.2018.09.001
   Naseem R, 2013, J SYST SOFTWARE, V86, P2045, DOI 10.1016/j.jss.2013.03.080
   Newman MEJ, 2004, PHYS REV E, V69, DOI 10.1103/PhysRevE.69.026113
   Ochoa L, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10052-y
   Paixao M, 2018, IEEE T EVOLUT COMPUT, V22, P394, DOI 10.1109/TEVC.2017.2691281
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Perry D. E., 2000, EMPIRICAL STUDIES SO, P345, DOI [10.1145/336512.336586, DOI 10.1145/336512.336586]
   Pourasghar B, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2020.106469
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Salama M, 2021, IEEE T SOFTWARE ENG, V47, P1468, DOI 10.1109/TSE.2019.2925616
   Sánchez AB, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10177-8
   Sarhan QI, 2022, IEEE T SOFTWARE ENG, V48, P1905, DOI 10.1109/TSE.2020.3042553
   Shtern Mark, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P64, DOI 10.1109/ICPC.2010.25
   Shtern M, 2009, INT C PROGRAM COMPRE, P248, DOI 10.1109/ICPC.2009.5090051
   Tan AJJ, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111162
   Terceiro Antonio, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P21, DOI 10.1109/SBES.2010.26
   Teymourian N, 2022, IEEE T SOFTWARE ENG, V48, P1451, DOI 10.1109/TSE.2020.3022212
   Traini L, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3485136
   Triola MF, 2006, Elementary statistics
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tzerpos V., 1999, MOJO DISTANCE METRIC, P187
   Vasa R, 2007, PROC IEEE INT CONF S, P74
   Venters CC, 2018, J SYST SOFTWARE, V138, P174, DOI 10.1016/j.jss.2017.12.026
   Wang Y, 2018, IEEE T SOFTWARE ENG, V44, P202, DOI 10.1109/TSE.2017.2679752
   Wang ZD, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3387111
   Wen ZH, 2003, PROG COMPREHEN, P227
   Wessel Mairieli, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274451
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Xie GW, 2009, PROC IEEE INT CONF S, P51, DOI 10.1109/ICSM.2009.5306356
   Xing Z., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P54, DOI [10.1145/1101908.1101919, DOI 10.1145/1101908.1101919]
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Yu P., 2023, Towards understanding fixes of SonarQube static analysis violations: a largescale empirical study, P569
NR 70
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUN 19
PY 2024
DI 10.1002/smr.2700
EA JUN 2024
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UR8F7
UT WOS:001249871100001
DA 2024-08-05
ER

PT J
AU Demir, MÖ
   Chouseinoglou, O
   Tarhan, AK
AF Demir, Merve Ozdes
   Chouseinoglou, Oumout
   Tarhan, Ayca Kolukisa
TI Factors affecting architectural decision-making process and challenges
   in software projects: An industrial survey
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE Architectural Decisions; Decision Documentation; Decision-Making;
   Software Architecture
ID EMPIRICAL-RESEARCH; DESIGN DECISIONS; DOCUMENTATION; EXTRACTION
AB Software architecture plays a fundamental role in overcoming the challenges of the development process of large-scale and complex software systems. The software architecture of a system is the result of an extensive process in which several stakeholders negotiate issues and solutions, and as a result of this negotiation, a series of architectural decisions are made. This survey study aims to determine the experiences of the software industry experts with respect to architectural decision-making, the factors that are effective in decision-making, and the technical and social problems they encounter. An online questionnaire-based survey was conducted with 101 practitioners. The responses were analyzed qualitatively and quantitatively. Analysis of responses revealed that the majority of the participants prefer to document some or all of the architectural decisions taken and to store these documents in web-based collaboration software. Decisions are usually made by teams of two or three, and discussion-based approaches (brainstorming and consensus) are adopted. In the software architecture decision-making process, "major business impact" is the most challenging situation. Information sharing and keeping track of decisions and decision rationale are areas in need of improvement as identified by most participants. From the participants' feedback and their answers to open-ended questions, we concluded that the software architecture decision-making process has an important role in the industry. Our key findings are that decisions made in the architectural decision-making process are taken by teams and generally all decisions are documented. In projects where decisions are made by a single person, peer pressure is found to be significantly different from pressure in projects where decisions are made by the group. This is an indication that as the number of people in the decision-making process increases, the disagreements also increase.
C1 [Demir, Merve Ozdes; Tarhan, Ayca Kolukisa] Hacettepe Univ, Dept Comp Engn, Ankara, Turkiye.
   [Chouseinoglou, Oumout] Bilkent Univ, Dept Informat Syst & Technol, Ankara, Turkiye.
C3 Hacettepe University; Ihsan Dogramaci Bilkent University
RP Demir, MÖ (corresponding author), Hacettepe Univ, Dept Comp Engn, Ankara, Turkiye.
EM merveozdes@hacettepe.edu.tr
CR Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Anderson DavidR., 2014, Statistics for Business Economics
   ATLASSIAN, 2012, Atlassian software suite
   Author3, 2020, Previous Article by Authors
   Bass L., 2003, Software architecture in practice
   Bell J., 1994, Software design for reliability and reuse: A proofofconcept demonstration
   Bhat M, 2017, LECT NOTES COMPUT SC, V10475, P138, DOI 10.1007/978-3-319-65831-5_10
   Bi TT, 2018, ASIA PAC SOFWR ENG, P49, DOI 10.1109/APSEC.2018.00019
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Clements P, 2003, PROC INT CONF SOFTW, P740, DOI 10.1109/ICSE.2003.1201264
   Corbin J., 2015, BASICS QUALITATIVE R
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   Dasanayake S, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P88, DOI 10.1109/ASWEC.2015.20
   de Graaf KA, 2016, SCI COMPUT PROGRAM, V121, P75, DOI 10.1016/j.scico.2015.10.014
   Falessi D, 2010, EMPIR SOFTW ENG, V15, P250, DOI 10.1007/s10664-009-9121-0
   Flick U., 2018, An introduction to qualitative research, DOI [10.4135/9781529622737, DOI 10.4135/9781529622737]
   Forward A., 2002, Proceedings of the Symposium on Document Engineering, DocEng '02, DOI [10.1145/585058.585065, DOI 10.1145/585058.585065]
   Gaind A., Key Architecture Decisions Template
   George D., 2010, SPSS WINDOWS STEP ST, DOI DOI 10.4324/9781003205333
   Groher I, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P11, DOI 10.1109/WICSA.2015.27
   Haoues M, 2017, INT J SYST ASSUR ENG, V8, P886, DOI 10.1007/s13198-016-0546-8
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   ISO/IEC, 2011, Int Stand ISO/IEC, V2, P1
   Jansen A., 2007, 2007 WORKING IEEE IF
   Jansen A, 2008, J SYST SOFTWARE, V81, P536, DOI 10.1016/j.jss.2007.08.025
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Jansen A, 2009, J SYST SOFTWARE, V82, P1232, DOI 10.1016/j.jss.2009.04.052
   Kazman R., 2000, ATAM: Method for Architecture Evaluation
   Kazman R, 2016, IEEE T SOFTWARE ENG, V42, P222, DOI 10.1109/TSE.2015.2465387
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Lytra I, 2020, COMPUTING, V102, P551, DOI 10.1007/s00607-019-00758-9
   Miesbauer Cornelia, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P130, DOI 10.1007/978-3-642-39031-9_12
   Nord R., 2003, Integrating the architecture tradeoff analaysis method (ATAM) with the cost benefit analysis method (CBAM), V1st
   Nygard M., 2011, Documenting Architecture Decisions
   Patton M. Q., 1990, QUALITATIVE EVALUATI, DOI DOI 10.1002/NUR.4770140111
   Razavian M, 2019, J SYST SOFTWARE, V149, P360, DOI 10.1016/j.jss.2018.12.003
   Rekha VS, 2018, INFORM SOFTWARE TECH, V101, P51, DOI 10.1016/j.infsof.2018.04.009
   Rozanski N., 2012, Software Systems Architecture
   STRUTZEL E, 1968, NURS RES, V17, P364
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   Tang A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P107, DOI 10.1109/ICSA.2017.15
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Tofan Dan, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P192, DOI 10.1007/978-3-642-39031-9_17
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   van Heesch U, 2013, J SYST SOFTWARE, V86, P1545, DOI 10.1016/j.jss.2013.01.057
   van Vliet H, 2016, J SYST SOFTWARE, V117, P638, DOI 10.1016/j.jss.2016.01.017
   Velasco-Elizondo P, 2016, SCI COMPUT PROGRAM, V121, P176, DOI 10.1016/j.scico.2015.12.007
   Weinreich R, 2015, FUTURE GENER COMP SY, V47, P145, DOI 10.1016/j.future.2014.12.002
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Zimmermann O, 2011, IEEE SOFTWARE, V28, P64, DOI 10.1109/MS.2011.3
NR 51
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUN 18
PY 2024
AR e2703
DI 10.1002/smr.2703
EA JUN 2024
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA9Q0
UT WOS:001252268600001
DA 2024-08-05
ER

PT J
AU Ben Amara, B
   Sellami, HM
   Ben Said, L
AF Ben Amara, Besma
   Sellami, Hedia Mhiri
   Ben Said, Lamjed
TI An approach for serious game design and development based on iterative
   evaluation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE game design challenges; participatory design; requirements
   specification; serious game design; serious games; serious game
   characteristics
ID VIRTUAL-REALITY; SUCCESS FACTORS
AB Serious games (SGs) are valuable tools for learning, training, and improving skills in various domains because they engage and motivate players to achieve planned processes to reach objectives. Several works provided methods, models, and frameworks to support SG development. However, designers, developers, teachers, and researchers face challenges in creating SG with entertainment and learning balance, and many designed games still do not fulfill the main intended objectives. This paper introduces an approach, called SGDA-IE with phases and steps to follow during the entire SG design process. It was built on literature review and SG design challenges designers need to consider from the early stages when creating SG. The proposed approach is founded on three perspectives: software engineering best practices, video game industry practices, and SG success factors and provides means to overcome the investigated design challenges. These are characteristics taxonomy model, requirements specification approach, and artifacts iterative evaluation by designer, domain expert, and players. To assess our approach efficacy, we conceived a health, safety, and environment (HSE) training SG for workers on fuel storage sites and petroleum installations. The feedback received is positive and indicates a favorable specification method of the SG, effective participatory design, and control over requirements evolution. The SG playtesting reveals a significant involvement of participants and efficient tracking of the knowledge acquisition.
   The graphical abstract exposes the three steps of the SGDA-IE proposal construction. The first step is the SGDA-IE foundation, which is based on the investigation and then the analysis of the serious game (SG) characteristics, SG design approaches, and software engineering and video games industry best practices. Based on the first step's results, the second step, SGDA-IE components, consists of SG requirements and approach building to provide a SG specification strategy, named SGSA, and SGDA-IE lifecycle, including phases and steps. Finally, the third step applied SGDA-IE to design a SG for health safety and environment (HSE) training. image
C1 [Ben Amara, Besma; Sellami, Hedia Mhiri; Ben Said, Lamjed] Univ Tunis, Inst Super Gest Tunis, Smart Lab, Bouchoucha, Tunisia.
C3 Universite de Tunis
RP Ben Amara, B (corresponding author), Univ Tunis, Inst Super Gest Tunis, Smart Lab, Bouchoucha, Tunisia.
EM besma.benamara@fsegt.utm.tn
RI Sellami, Hedia/AGL-0672-2022
OI Mhiri Sellami, Hedia/0000-0001-7262-5075
CR Abdellatif AJ, 2018, PROCEEDINGS OF THE 8TH IEEE INTEGRATED STEM EDUCATION CONFERENCE (ISEC 2018), P112, DOI 10.1109/ISECon.2018.8340460
   Abed H, 2018, PR IEEE INT CONF TEA, P551, DOI 10.1109/TALE.2018.8615285
   Ahmad S, 2022, FUTURE GENER COMP SY, V136, P67, DOI 10.1016/j.future.2022.05.026
   Aleem S, 2016, J COMPUT SCI TECH-CH, V31, P925, DOI 10.1007/s11390-016-1673-z
   Alvarez Julian., 2011, Serious Games Simulation for Risks Management, V11, P11
   Amory A., 2003, South African Journal of Higher Education, V17, P206
   Andreoli R, 2018, ACM J COMPUT CULT HE, V11, DOI 10.1145/3064644
   Aouadi N, 2016, I C COMP SYST APPLIC
   Arnab S, 2015, BRIT J EDUC TECHNOL, V46, P391, DOI 10.1111/bjet.12113
   Aslan S, 2015, SIMUL-T SOC MOD SIM, V91, P307, DOI 10.1177/0037549715572673
   Avila-Pesantez D, 2019, IEEE ACCESS, V7, P161017, DOI 10.1109/ACCESS.2019.2951380
   Ayed I, 2019, INT J MED INFORM, V131, DOI 10.1016/j.ijmedinf.2019.06.016
   Bedwell WL, 2012, SIMULAT GAMING, V43, P729, DOI 10.1177/1046878112439444
   Ben Amara B., 2022, Proceedings of DiGRA 2022
   Ben Amara B., 2023, MultiConference OCTA'2022, V24
   Braad E, 2016, LECT NOTES COMPUT SC, V9970, P92, DOI 10.1007/978-3-319-46152-6_5
   Brockmyer JH, 2009, J EXP SOC PSYCHOL, V45, P624, DOI 10.1016/j.jesp.2009.02.016
   Çakiroglu Ü, 2019, J EDUC COMPUT RES, V57, P1723, DOI 10.1177/0735633119854030
   Calderón A, 2015, COMPUT EDUC, V87, P396, DOI 10.1016/j.compedu.2015.07.011
   Calefato F, 2021, J SYST SOFTWARE, V174, DOI 10.1016/j.jss.2020.110887
   Carreon A, 2022, J SPEC EDUC TECHNOL, V37, P82, DOI 10.1177/0162643420962011
   Carvalho MB, 2015, IEEE INT CONF ADV LE, P147, DOI 10.1109/ICALT.2015.145
   Charsky D, 2010, GAMES CULT, V5, P177, DOI 10.1177/1555412009354727
   Checa D, 2020, MULTIMED TOOLS APPL, V79, P5501, DOI 10.1007/s11042-019-08348-9
   Chin J.P., 1988, P SIGCHI C HUM FACT, P213, DOI [DOI 10.1145/57167.57203, 10.1145/57167.57203]
   De Jans S, 2017, COMPUT EDUC, V110, P77, DOI 10.1016/j.compedu.2017.03.009
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [DOI 10.1145/2181037.2181040, https://doi.org/10.1145/2181037.2181040]
   Dimitriadou A, 2021, SIMULAT GAMING, V52, P132, DOI 10.1177/1046878120944197
   Djaouti Damien., 2010, Em Proceedings of the 5th ACM SIGGRAPH Symposium on Video Games, DOI DOI 10.1145/1836135.1836137
   do Prado EF, 2015, P BRAZ SYMP SOFTW, P130, DOI 10.1109/SBCARS.2015.24
   Drner R., 2016, Serious Games Foundations, Concepts and Practice, DOI [10.1007/9783319406121, DOI 10.1007/9783319406121]
   Engstrm H., 2021, EAI Endorsed Trans Serious Games, V6, DOI [10.4108/eai.2752021.170008, DOI 10.4108/EAI.2752021.170008]
   Ernest A., 2012, Game Mechanics: Advanced Game Design
   Fullerton T., 2018, Game Design Workshop, V4th ed., DOI [DOI 10.1201/B22309, 10.1201/b22309]
   Ghanbari H, 2015, J SYST SOFTWARE, V109, P32, DOI 10.1016/j.jss.2015.07.017
   Gurbuz SC, 2022, COMPUT APPL ENG EDUC, V30, P1591, DOI 10.1002/cae.22557
   Hall L, 2013, INTERACT TECHNOL SMA, V10, P130, DOI 10.1108/ITSE-02-2013-0003
   ISO/IEC 25010:2011(en), Systems and software engineeringSystems and software Quality Requirements and Evaluation (SQuaRE)system and software quality models
   Jones C., 2009, Software Engineering Best Practices, V1
   Kanode CM, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P260, DOI 10.1109/ITNG.2009.74
   Katie Salen and Eric Zimmerman, 2004, Rules of Play Game Design Fundamentals
   Khaled R., 2014, IJCCI, V2, P93, DOI [DOI 10.1016/J.IJCCI.2014.03.001, 10.1016/j.ijcci.2014.03.001]
   Kirkley S., 2005, Instructional design authoring support for the development of serious games and mixed reality training
   Koutonen J, 2013, LECT NOTES BUS INF P, V149, P135
   Laamarti F, 2014, INT J COMPUT GAMES T, V2014, DOI 10.1155/2014/358152
   Lameras P, 2017, BRIT J EDUC TECHNOL, V48, P972, DOI 10.1111/bjet.12467
   LEWIS JR, 1995, INT J HUM-COMPUT INT, V7, P57, DOI 10.1080/10447319509526110
   Liu LL, 2024, BEHAV SCI-BASEL, V14, DOI 10.3390/bs14020082
   Macklin C., 2016, Games, design and play: a detailed approach to iterative game design, VFirst
   Mader S, 2016, INT CONF GAMES VIRTU
   MarfisiSchottman I., 2009, Tools and Methods for Efficiently Designing Serious Games, P226
   Mariais C, 2012, SIMULAT GAMING, V43, P23, DOI 10.1177/1046878110390764
   Marne B, 2012, LECT NOTES COMPUT SC, V7563, P208, DOI 10.1007/978-3-642-33263-0_17
   McKenzie T, 2019, CHI PLAY'19: EXTENDED ABSTRACTS OF THE ANNUAL SYMPOSIUM ON COMPUTER-HUMAN INTERACTION IN PLAY, P181, DOI 10.1145/3341215.3354647
   Nacke LE., 2009, Proceedings of DiGRA 2009
   Nakatsu R., 2015, Handbook of Digital Games and Entertainment Technologies, P1, DOI [10.1007/9789814560528161, DOI 10.1007/9789814560528161]
   Paschali ME, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2399
   Peñeñory VM, 2021, UNIVERSAL ACCESS INF, V20, P255, DOI 10.1007/s10209-020-00728-5
   PerezColado IJ., 2018, 2018 10th International Conference on Virtual Worlds and Games for Serious Applications (VSGames), V4
   Petrillo F., 2009, Computers in Entertainment CIE, V7, P13, DOI DOI 10.1145/1486508.1486521
   Pressman RS., 2014, Software Software Engineering for NonProfit Educational Use Only, V9th ed.
   de Lope RP, 2017, ENTERTAIN COMPUT, V18, P1, DOI 10.1016/j.entcom.2016.08.005
   Ramadan R, 2013, INT C ADV COMP SCI I, P95, DOI 10.1109/ICACSIS.2013.6761558
   Ravyse WS, 2017, VIRTUAL REAL-LONDON, V21, P31, DOI 10.1007/s10055-016-0298-4
   Ryan W., 2013, P 8 INT C FDN DIG GA
   Saavedra A.B., 2014, Proceedings of the XV International Conference on Human Computer Interaction - Interaccion, V14, P1, DOI DOI 10.1145/2662253.2662352
   Tori AA, 2022, IEEE T LEARN TECHNOL, V15, P827, DOI 10.1109/TLT.2022.3200583
   Ushaw G, 2022, 23RD INTERNATIONAL CONFERENCE ON INTELLIGENT GAMES AND SIMULATION (GAMEON(R) 2022), P5
   Wattanasoontorn V, 2013, ENTERTAIN COMPUT, V4, P231, DOI 10.1016/j.entcom.2013.09.002
   Winn B.M., 2011, Handbook of Research on Effective Electronic Gaming in Education, P1010, DOI [10.4018/978-1-59904-808-6.CH058, DOI 10.4018/978-1-59904-808-6, DOI 10.4018/978-1-59904-808-6.CH058]
   Witmer BG, 1998, PRESENCE-TELEOP VIRT, V7, P225, DOI 10.1162/105474698565686
   Xi NN, 2019, INT J INFORM MANAGE, V46, P210, DOI 10.1016/j.ijinfomgt.2018.12.002
   Yusoff A, 2009, ICALT: 2009 IEEE INTERNATIONAL CONFERENCE ON ADVANCED LEARNING TECHNOLOGIES, P21, DOI 10.1109/ICALT.2009.19
   Zarraonandia T, 2015, MULTIMED TOOLS APPL, V74, P4535, DOI 10.1007/s11042-013-1821-1
   Zhu M, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3365000
   Zyda M, 2005, COMPUTER, V38, P25, DOI 10.1109/MC.2005.297
NR 76
TC 0
Z9 0
U1 5
U2 5
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 MAY 27
PY 2024
DI 10.1002/smr.2680
EA MAY 2024
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RX5O9
UT WOS:001230972600001
DA 2024-08-05
ER

PT J
AU Poth, A
AF Poth, Alexander
TI Product and service quality risks: A survey about evolution and
   application in different business domains to facilitate quality
   engineering
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE agile development; build-in quality; DevOps; quality by design; quality
   engineering; quality management; risk management
ID MANAGEMENT; SOFTWARE; DESIGN; IMPLEMENTATION; FMEA
AB Products and services are developed to realize chances on the market. Often, development teams are focusing primarily on the potential chances rather than on the corresponding risks of new products and services. However, it is possible to integrate the product and service quality risks early into the development procedures for a balanced and holistic view. The integration enables systematic mitigation and quality assurance actions to handle the risks. The article analyzes the literature related to quality risk approaches, identifies mature and generally applicable product and service risk approaches, and gives selected approach examples about its methodical evolution and how it can be integrated into the development procedures including soft-skills development such as employee awareness and systematical training within organizations. A case study in the Group IT of the Volkswagen AG is discussed.
   Products and services are developed to realize chances on the market. Typically, risks are associated with chances respectively business opportunities-an early and systematic handling of corresponding product and service quality risks within the development procedures is proposed for a balanced and holistic view. Different quality risk approaches are presented and discussed. image
C1 [Poth, Alexander] Volkswagen AG, Berliner Ring 2, D-38436 Wolfsburg, Germany.
C3 Volkswagen; Volkswagen Germany
RP Poth, A (corresponding author), Volkswagen AG, Berliner Ring 2, D-38436 Wolfsburg, Germany.
EM alexander.poth@volkswagen.de
CR agilemanifesto, Agile Manifesto
   Arafeen J., 2009, Int J Digital Content Technol Applic, V3, P109, DOI [10.4156/jdcta.vol3.issue3.15, DOI 10.4156/JDCTA.VOL3.ISSUE3.15]
   Bandera C., 2019, To Pivot or Not to Pivot: On the Relationship Between Pivots and Revenue Among Startups
   Bank of England, about us
   Baxter P, 2008, QUAL REP, V13, P544
   Chen L, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10217400
   ema, ICH guideline
   Felderer M, 2014, SOFTWARE QUAL J, V22, P543, DOI 10.1007/s11219-013-9226-y
   Field S, 2010, LECT NOTES BUS INF P, V53, P111
   Greene JC., 1989, EDUC EVAL POLICY AN, V11, P255, DOI [10.3102/01623737011003255, DOI 10.3102/01623737011003255, 10.2307/1163620]
   Guebitz B, 2012, EXPERT SYST APPL, V39, P7291, DOI 10.1016/j.eswa.2012.01.089
   Holfelder M, 2021, Arxiv, DOI arXiv:2104.13635
   Hue KC, 2016, J AIR TRANSP MANAG, V53, P177, DOI 10.1016/j.jairtraman.2016.03.006
   International Conference on Harmonisation of Technical Requirements for Registration of Pharmaceuticals for Human Use, 2005, ICH Harmonised Tripartite Guideline: Validation of Analytical Procedures: Text and Methodology Q2(R1)
   ISTQB, about us
   James Elizebeth M., Comparison of FTA and Stpa Approaches: A Brake-by-Wire Case Study
   Jodkowski L., Possibilities and Methods of Risk Assessment under ISO 9001
   Kölln GC, 2019, IEEE INT C INTELL TR, P2969, DOI 10.1109/ITSC.2019.8916932
   Liu JW, 2023, EXPERT SYST APPL, V214, DOI 10.1016/j.eswa.2022.119119
   Martin KC., 2008, Pharm Eng, V28, P24
   Myklebust T., 2018, SCSC The 26th Safety-Critical Systems Symposium
   Park GY, 2014, ANN NUCL ENERGY, V70, P96, DOI 10.1016/j.anucene.2014.02.025
   Pazhayattil Ajay Babu, 2020, PDA J Pharm Sci Technol, V74, P423, DOI 10.5731/pdajpst.2019.010173
   Pereira JC, 2018, PROCEDIA COMPUT SCI, V138, P775, DOI 10.1016/j.procs.2018.10.101
   Poth A., 2023, Foster Systematic Agile Transitions with SAFe® and efiS® Oriented Team Evaluations, euroSPI'23
   Poth A., 2022, European Conference on Software Process Improvement, P503, DOI [10.1007/978-3-031-15559-8_36, DOI 10.1007/978]
   Poth A., 2010, ATZ Worldwide, V112, P52, DOI [10.1007/BF03225132, DOI 10.1007/BF03225132]
   Poth A, 2023, COMPUT SCI INF SYST, V20, P229, DOI 10.2298/CSIS211112048P
   Poth A, 2021, LECT NOTES BUS INF P, V426, P42, DOI 10.1007/978-3-030-88583-0_5
   Poth A, 2020, COMM COM INF SC, V1251, P191, DOI 10.1007/978-3-030-56441-4_14
   Poth A, 2020, LECT NOTES BUS INF P, V396, P111, DOI 10.1007/978-3-030-58858-8_12
   Poth A, 2020, INT REQUIR ENG CONF, P238, DOI 10.1109/RE48521.2020.00034
   Poth A, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.138
   Reich Y, 2008, J ENG DESIGN, V19, P249, DOI 10.1080/09544820701327947
   scrumguides, Scrum Guide
   Sulaman SM, 2019, SOFTWARE QUAL J, V27, P349, DOI 10.1007/s11219-017-9396-0
   Suprin M, 2019, THER INNOV REGUL SCI, V53, P36, DOI 10.1177/2168479018817752
   Tripp JF, 2018, J COMPUT INFORM SYST, V58, P170, DOI 10.1080/08874417.2016.1220240
   Wang Y, 2023, SENSORS-BASEL, V23, DOI 10.3390/s23104664
   Yamandir MN, 2022, LECT NOTE DATA ENG, V145, P667, DOI 10.1007/978-3-031-10385-8_47
   You J., 2022, J. Knowl. Econ., V1, P141, DOI [10.1016/j.jdec.2022.12.001, DOI 10.1016/J.JDEC.2022.12.001]
   Zhang YX, 2023, RISK ANAL, V43, P590, DOI 10.1111/risa.13927
NR 42
TC 0
Z9 0
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 APR 2
PY 2024
DI 10.1002/smr.2671
EA APR 2024
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MR7F9
UT WOS:001195418800001
DA 2024-08-05
ER

PT J
AU Khanna, M
   Bansal, A
AF Khanna, Megha
   Bansal, Ankita
TI An assessment of heterogenous ensemble classifiers for analyzing
   change-proneness in open-source software systems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE ensemble learning; heterogeneous ensemble classifiers; open-source
   systems; software change prediction
ID OBJECT-ORIENTED METRICS; CHANGE PREDICTION; DEFECT PREDICTION; DYNAMIC
   SELECTION; CLASSIFICATION; ALGORITHMS; MAINTAINABILITY; SUITE
AB Software managers constantly look out for methods that ensure cost effective development of good quality software products. An important means of accomplishing this is by allocating more resources to weak classes of a software product, which are prone to changes. Therefore, correct prediction of these change-prone classes is critical. Though various researchers have investigated the performance of several algorithms for identifying them, the search for an optimum classifier still persists. To this end, this study critically investigates the use of six Heterogenous Ensemble Classifiers (HEC) for Software Change Prediction (SCP) by empirically validating datasets obtained from 12 open-source software systems. The results of the study are statistically assessed using three robust performance indicators (AUC, F-measure and Mathew Correlation Coefficient) in two different validation scenarios (within project and cross-project). They indicate the superiority of Average Probability Voting Ensemble, a heterogenous classifier for determining change-proneness in the investigated systems. The average AUC values of software change prediction models developed using this ensemble classifier exhibited an improvement of 3%-9% and 3%-11% respectively when compared with its base learners and homogeneous counter parts. Similar observations were inferred using other investigated performance measures. Furthermore, the evidence obtained from the results suggests that the change in number of base learners or type of meta-learner does not exhibit significant change in the performance of corresponding heterogenous ensemble classifiers.
   Key Findings The results indicate the superiority of Average Probability Voting Ensemble, a heterogenous classifier for determining change-proneness. The average AUC values developed using Average Probability Voting Ensemble exhibited an improvement of 3%-9% and 3%-11% respectively when compared with its base learners and homogeneous counter parts. Similar observations were inferred using other performance measures. The change in number of base learners or type of meta-learner does not exhibit significant change in the performance of ensemble classifiers. image
C1 [Khanna, Megha] Univ Delhi, Sri Guru Gobind Singh Coll Commerce, Delhi, India.
   [Bansal, Ankita] Netaji Subhas Univ Technol, Delhi, India.
C3 University of Delhi; Netaji Subhas University of Technology
RP Bansal, A (corresponding author), Netaji Subhas Univ Technol, Delhi, India.
EM ankita.bansal06@gmail.com
CR Abuassba AOM, 2017, COMPUT INTEL NEUROSC, V2017, DOI 10.1155/2017/3405463
   Agrawal A., 2018, Towards extensible and adaptable methods in computing, P69, DOI [10.1007/978-981-13-2348-5_6, DOI 10.1007/978]
   Alshdaifat E, 2021, ICT EXPRESS, V7, P342, DOI 10.1016/j.icte.2020.11.005
   Azar D, 2011, INFORM SOFTWARE TECH, V53, P388, DOI 10.1016/j.infsof.2010.11.013
   Baldi P, 2000, BIOINFORMATICS, V16, P412, DOI 10.1093/bioinformatics/16.5.412
   Bansal A, 2017, COMPUT LANG SYST STR, V47, P211, DOI 10.1016/j.cl.2016.10.001
   Bauer E, 1999, MACH LEARN, V36, P105, DOI 10.1023/A:1007515423169
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Brown G., 2005, Information Fusion, V6, P5, DOI 10.1016/j.inffus.2004.04.004
   Catolino G, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2156
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Di Nucci D, 2017, IEEE TETCI, V1, P202, DOI 10.1109/TETCI.2017.2699224
   El Emam K., 1992, A validation of object oriented metrics
   Elish MO, 2015, SOFT COMPUT, V19, P2511, DOI 10.1007/s00500-014-1576-2
   Elish MO, 2013, MATH PROBL ENG, V2013, DOI 10.1155/2013/312067
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   Eski S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P566, DOI 10.1109/ICSTW.2011.43
   Field A., 2013, Discovering Statistics using IBM SPSS Statistics, Vthird, P374, DOI DOI 10.1016/B978-012691360-6/50012-4
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Ge YX, 2018, LECT NOTES COMPUT SC, V11266, P287, DOI 10.1007/978-3-030-02698-1_25
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Giger E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P217, DOI 10.1109/MSR.2012.6224284
   Han J, 2012, MOR KAUF D, P1
   Haque MN, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0146116
   Harrison R, 2000, J SYST SOFTWARE, V52, P173, DOI 10.1016/S0164-1212(99)00144-2
   Helmi RAA, 2020, 2020 16TH IEEE INTERNATIONAL COLLOQUIUM ON SIGNAL PROCESSING & ITS APPLICATIONS (CSPA 2020), P1, DOI [10.1109/CSPA48992.2020.9068678, 10.1109/cspa48992.2020.9068678]
   Hosmer DW., 2013, Applied logistic regression, DOI DOI 10.1002/9781118548387
   Hosni M, 2018, SOFT COMPUT, V22, P5977, DOI 10.1007/s00500-017-2945-4
   Khanna Megha, 2021, 17th IFIP international conference on open source systems (OSS), P68, DOI DOI 10.1007/978
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kim YS, 2009, EXPERT SYST APPL, V36, P2161, DOI 10.1016/j.eswa.2007.12.036
   Koppel M., 1996, PROC AAAI WOKSHOP IN, P53
   Koru AG, 2007, J SYST SOFTWARE, V80, P63, DOI 10.1016/j.jss.2006.05.017
   Kotsiantis SB, 2007, INFORM-J COMPUT INFO, V31, P249
   Kumar L, 2020, POLYM BULL, V77, P6049, DOI 10.1007/s00289-019-03067-5
   Kumar L, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P4, DOI 10.1145/3021460.3021461
   Kumar L, 2017, COMPUT STAND INTER, V53, P1, DOI 10.1016/j.csi.2017.02.003
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Little T.D., 2014, The Oxford handbook of quantitative methods, V1
   Liu C, 2018, P INT COMP SOFTW APP, P64, DOI 10.1109/COMPSAC.2018.00017
   Lorenz M., 1994, OBJECT ORIENTED SOFT
   Luong AV, 2021, PATTERN RECOGN, V112, DOI 10.1016/j.patcog.2020.107743
   Luong AV., 2020, International conference on neural information processing, P251, DOI [10.1007/978-3-030-63823-8_30, DOI 10.1007/978]
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Malhotra R., 2019, E-Inform Softw Eng J, V13, P312
   Malhotra R, 2019, INFORM SOFTWARE TECH, V112, P51, DOI 10.1016/j.infsof.2019.04.007
   Malhotra R, 2018, INFORM SOFTWARE TECH, V102, P65, DOI 10.1016/j.infsof.2018.05.007
   Malhotra R, 2018, INT J SYST ASSUR ENG, V9, P401, DOI 10.1007/s13198-017-0686-5
   Malhotra R, 2017, EMPIR SOFTW ENG, V22, P2806, DOI 10.1007/s10664-016-9488-7
   Malhotra R, 2017, AUTOMAT SOFTW ENG, V24, P673, DOI 10.1007/s10515-016-0203-0
   Malhotra R, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P201, DOI 10.1109/ICACCI.2014.6968347
   Malhotra R, 2013, INT J MACH LEARN CYB, V4, P273, DOI 10.1007/s13042-012-0095-7
   Moustafa S, 2018, ALEX ENG J, V57, P2763, DOI 10.1016/j.aej.2018.01.003
   Onan, 2021, SCI RES COMMUNICATIO, V1, P1, DOI DOI 10.52460/SRC.2021.004
   Onan A, 2017, INFORM PROCESS MANAG, V53, P814, DOI 10.1016/j.ipm.2017.02.008
   Onan A, 2017, KYBERNETES, V46, P330, DOI 10.1108/K-10-2016-0300
   Onan A, 2016, EXPERT SYST APPL, V57, P232, DOI 10.1016/j.eswa.2016.03.045
   Ortega J., 1996, Exploiting multiple existing models and learning algorithms. In AAAI-96 Workshop on Integrating Multiple Learned Models for Improving and Scaling Machine Learning Algorithms
   Ostvar N, 2020, COMPUT INTEL NEUROSC, V2020, DOI 10.1155/2020/8826914
   Pallant J., 2013, SPSS survival guide, V5th ed.
   Petric J., 2016, Building an ensemble for software defect prediction based on diversity selection. In Proceedings of the 10th ACM/IEEE International symposium on empirical software engineering and measurement, P1
   Polikar R, 2012, ENSEMBLE MACHINE LEARNING: METHODS AND APPLICATIONS, P1, DOI 10.1007/978-1-4419-9326-7_1
   Powers D., 2008, Journal of Machine Learning Research, V2, DOI DOI 10.9735/2229-3981
   Rathore SS, 2017, KNOWL-BASED SYST, V119, P232, DOI 10.1016/j.knosys.2016.12.017
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Rosenthal R., 1994, The handbook of research synthesis, P231
   Sagi O, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1249
   SCHAPIRE RE, 1990, MACH LEARN, V5, P197, DOI 10.1007/BF00116037
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Seewald A. K., 2001, Advances in Intelligent Data Analysis. 4th International Conference, IDA 2001. Proceedings (Lecture Notes in Computer Science Vol.2189), P115
   Seewald A.K., 2002, Proceedings of the Nineteenth International Conference on Machine Learning table of contents, P554, DOI DOI 10.1017/CBO9781107415324.004
   Singh Y., 2012, Object-oriented software engineering
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tomczak M, 2014, Trends in Sport Sciences, V1, P19
   Ueda N, 1996, IEEE IJCNN, P90, DOI 10.1109/ICNN.1996.548872
   Velusamy D, 2021, COMPUT METH PROG BIO, V198, DOI 10.1016/j.cmpb.2020.105770
   Vickerstaff V, 2019, BMC MED RES METHODOL, V19, DOI 10.1186/s12874-019-0754-4
   Wattanakriengkrai S, 2022, IEEE T SOFTWARE ENG, V48, P1480, DOI 10.1109/TSE.2020.3023177
   Witten IH, 2011, MOR KAUF D, P61, DOI 10.1016/B978-0-12-374856-0.00003-1
   WOLPERT DH, 1992, NEURAL NETWORKS, V5, P241, DOI 10.1016/S0893-6080(05)80023-1
   Yan M, 2017, INFORM SOFTWARE TECH, V92, P1, DOI 10.1016/j.infsof.2017.07.003
   Yucalar F, 2020, ENG SCI TECHNOL, V23, P938, DOI 10.1016/j.jestch.2019.10.005
   Zefrehi HG, 2020, EXPERT SYST APPL, V142, DOI 10.1016/j.eswa.2019.113005
   Zhang Y, 2018, FRONT COMPUT SCI-CHI, V12, P280, DOI 10.1007/s11704-017-6015-y
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
   Zhu XY, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.2111
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 93
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 FEB 24
PY 2024
DI 10.1002/smr.2660
EA FEB 2024
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IS8O1
UT WOS:001168414100001
DA 2024-08-05
ER

PT J
AU Koitz-Hristov, R
   Sterner, T
   Stracke, L
   Wotawa, F
AF Koitz-Hristov, Roxane
   Sterner, Thomas
   Stracke, Lukas
   Wotawa, Franz
TI On the suitability of checked coverage and genetic parameter tuning in
   test suite reduction
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE experimental evaluation; genetic algorithm; program testing; software
   testing; test suite reduction; test suite size
ID MINIMIZATION; ALGORITHMS; COST
AB As software projects evolve and grow in size and complexity, so do their test suites. Test suite reduction (TSR) aims at reducing the size of a test suite by removing redundant and obsolete test cases based on a coverage metric while preserving its fault detection capabilities. The contributions of this paper are twofold: (1) We examine a lesser-known coverage criterion, that is, checked coverage. Checked coverage not only investigates if a part of the code was executed but also if it was checked by a test oracle. In an empirical evaluation, we performed TSR based on different reduction algorithms, coverage metrics, and open-source Java projects with our own TSR tool to determine the most effective and efficient combination of metric and method. (2) Given the results of the first evaluation, we further investigate the potential of parameter optimization in regard to a genetic reduction algorithm. In particular, we focus on finding a general setting for the parameters crossover rate and mutation rate such that test suites can be reduced in a reasonable time while maintaining a high fault detection power.
   In this paper, we explore (1) the potential of checked coverage as a coverage metric as well as (2) parameter tuning for a genetic algorithm in the context of test suite reduction. In two empirical evaluations, we assess how different coverage metrics, algorithm combinations, and parameter values perform on open-source Java projects and our own Java reduction framework; based on the results we determine the most effective and efficient combination of metric and method. image
C1 [Koitz-Hristov, Roxane; Sterner, Thomas; Stracke, Lukas] Graz Univ Technol, Inst Software Technol, Graz, Austria.
   [Wotawa, Franz] Graz Univ Technol, Inst Software Technol, Christian Doppler Lab Qual Assurance Methods Auton, Graz, Austria.
C3 Graz University of Technology; Graz University of Technology
RP Koitz-Hristov, R (corresponding author), Graz Univ Technol, Inst Software Technol, Graz, Austria.
EM rkoitz@ist.tugraz.at
OI Koitz-Hristov, Roxane/0000-0002-5077-8641; Wotawa,
   Franz/0000-0002-0462-2283
CR Ahmed K, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1570, DOI 10.1145/3468264.3473123
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Chen JJ, 2017, IEEE INT CONF SOFTW, P418, DOI 10.1109/ICST.2017.45
   Chetouane N, 2020, IEEE ICST WORKSHOP, P380, DOI 10.1109/ICSTW50294.2020.00068
   Coviello C., 2020, Gasser: genetic algorithm for test suite reduction, P1, DOI 10.1145/3382494.3422157
   Coviello C, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240497
   Coviello C, 2018, PROC IEEE ACM INT C, P306, DOI 10.1145/3183440.3194983
   De Jong K., 1975, DISSERT ABSTR
   Deb K, 1999, FOUNDATIONS OF GENETIC ALGORITHMS, 5, P265
   Goldberg DE., 1989, GENETIC ALGORITHMS S, DOI DOI 10.1109/ICETEEEM.2012.6494460
   GREFENSTETTE JJ, 1986, IEEE T SYST MAN CYB, V16, P122, DOI 10.1109/TSMC.1986.289288
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Hassanat A, 2019, INFORMATION, V10, DOI 10.3390/info10120390
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Khan SUR, 2018, IEEE ACCESS, V6, P11816, DOI 10.1109/ACCESS.2018.2809600
   Koitz-Hristov R, 2022, 3RD ACM/IEEE INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2022), P6, DOI 10.1145/3524481.3527216
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Lambora Annu, 2019, 2019 International Conference on Machine Learning, Big Data, Cloud and Parallel Computing (COMITCon), P380, DOI 10.1109/COMITCon.2019.8862255
   Ma XY, 2005, IEEE SYS MAN CYBERN, P133
   Ma XY, 2005, LECT NOTES COMPUT SC, V3756, P253
   Marchetto A, 2019, IEEE T SOFTWARE ENG, V45, P363, DOI 10.1109/TSE.2017.2777831
   Nachiyappan S., 2010, Proceedings of the 2010 International Conference on Communication and Computational Intelligence (INCOCCI), P503
   Papadimitriou C.H., 1998, Combinatorial Optimization: Algorithms and Complexity
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G, 2004, ACM T SOFTW ENG METH, V13, P277, DOI 10.1145/1027092.1027093
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P531, DOI 10.1002/stvr.1497
   SRINIVAS M, 1994, COMPUTER, V27, P17, DOI 10.1109/2.294849
   Tallam Sriraman., 2005, PASTE 05, P35, DOI [10.1145/1108768.1108802, DOI 10.1145/1108768.1108802]
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
   Wong WE, 1999, J SYST SOFTWARE, V48, P79, DOI 10.1016/S0164-1212(99)00048-5
   Yang Q, 2009, COMPUT J, V52, P589, DOI 10.1093/comjnl/bxm021
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang YC, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P214, DOI 10.1145/2786805.2786858
NR 36
TC 1
Z9 1
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 FEB 11
PY 2024
DI 10.1002/smr.2656
EA FEB 2024
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HO1G5
UT WOS:001160347800001
OA hybrid
DA 2024-08-05
ER

PT J
AU Gasca-Hurtado, GP
   Muñoz, M
   Sameh, S
AF Gasca-Hurtado, Gloria Piedad
   Munoz, Mirna
   Sameh, Samer
TI Promoting social and human factors through a gamified automotive
   software development environment
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE development of software-controlled systems in automobiles; gamification;
   social and human factors; soft skills; software process improvement
ID PRODUCTIVITY; GAMIFICATION
AB Gamification is an attractive strategy for different contexts, including software process improvement, where it presents positive results associated with increased factors such as motivation and others classified into social and human factors. Such factors are required to improve software processes in the automotive industry due to the influence of changes in the conditions and the behavior of individuals. However, the treatment of gamification strategies requires rigor at a scientific level. Therefore, it is necessary to analyze critical dimensions such as the gamification maturity level, the ability to intervene, and the influence of social and human factors. Such analysis is motivated by the relationship between social and human factors and the success of a process improvement. The above justifies the researchers' interest in this article in analyzing a gamification strategy implemented in the automotive industry from such dimensions. Therefore, this article presents the analysis from the point of view of developing software-controlled systems in automobiles. Besides, it uses a deductive approach to conduct this analysis to abstract all the design aspects of a strategy created and implemented in a software development automotive environment. One of the most representative findings of this study is the strategy's capacity to promote SHF, which identifies motivation, commitment, team cohesion, emotional intelligence, and autonomy.
   Gamification is an attractive strategy being implemented in different contexts with excellent results associated with social and human factors required to improve software processes in the automotive industry. This paper uses a deductive approach; we identified the SHFs and gamification elements of the design strategy for the automotive industry. Based on the deductive method, the gamification model for social and human factors generates interesting results of the gamification strategy for the automotive industry. image
C1 [Gasca-Hurtado, Gloria Piedad] Univ Medellin, Fac Ingn, Ingn Sistemas, Medellin, Colombia.
   [Munoz, Mirna] Ctr Invest Matemat, Parque Quauntum,Ave Lassec,3 Lote 7, Zacatecas 98160, Zacatecas, Mexico.
   [Sameh, Samer] CCHE, Cairo, Egypt.
C3 Universidad de Medellin
RP Muñoz, M (corresponding author), Ctr Invest Matemat, Parque Quauntum,Ave Lassec,3 Lote 7, Zacatecas 98160, Zacatecas, Mexico.
CR Ahmed Faheem, 2013, International Journal of Information Processing and Management, V4, P171, DOI 10.4156/ijipm.vol4.issue3.17
   Alhammad MM, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2231
   Almeida C, 2023, INFORM SOFTWARE TECH, V156, DOI 10.1016/j.infsof.2022.107142
   [Anonymous], 2021, GUID PROJ MAN BOD KN, V7th
   Bekk M, 2022, INT J RES MARK, V39, P1059, DOI 10.1016/j.ijresmar.2022.03.002
   Capretz L. F., 2018, Psychol. Cogn. Sci. Open J, V4, pe1, DOI [DOI 10.17140/PCSOJ-4-E011, 10.17140/pcsoj-4-e011]
   Chen CY, 2022, COMPUT STAND INTER, V81, DOI 10.1016/j.csi.2021.103599
   Cooper RK, 1997, TRAINING DEV, V51, P31
   Deterding S., 2011, P 15 INT AC MINDTREK, DOI DOI 10.1145/2181037.2181040
   Devadas UM., 2021, Int. J. Econ. Bus. Human Behaviour, V2, DOI [10.5281/zenodo.5280309, DOI 10.5281/ZENODO.5280309]
   Fabbrini Fabrizio, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1039, DOI 10.1109/COMPSAC.2008.140
   Fatema I., 2018, Int. J. Adv. Softw, V11, P170
   García F, 2017, J SYST SOFTWARE, V132, P21, DOI 10.1016/j.jss.2017.06.021
   Gmez Prez MN., 2010, Estudios experimentales sobre la influencia de la personalidad y el clima en el desarrollo de software. Guas para gestin de equipos en proyectos de ingeniera del software
   Hazzan O, 2004, LECT NOTES COMPUT SC, V3092, P303
   Henriquez V, 2022, COMPUT STAND INTER, V82, DOI 10.1016/j.csi.2021.103610
   Hernández-López A, 2015, INT J INF TECHNOL SY, V8, P46, DOI 10.4018/IJITSA.2015010103
   Herranz E., 2014, Commun. Comput. Inform. Sci, V425, P13, DOI [10.1007/9783662438961, DOI 10.1007/9783662438961]
   Herranz E, 2018, COMM COM INF SC, V896, P207, DOI 10.1007/978-3-319-97925-0_17
   Katumba B, 2014, LECT NOTES COMPUT SC, V8892, P33, DOI 10.1007/978-3-319-13835-0_3
   Kim A.J., 2014, Beyond Player Types: Kim's Social Action Matrix
   Knutas Antti., 2014, P 15 INT C COMPUTER, P370, DOI [10.1145/2659532.2659620, DOI 10.1145/2659532.2659620]
   Korn O., 2017, Adv. Affect Pleasurable Des, P433, DOI [10.1007/978331941661842, DOI 10.1007/978331941661842]
   LovaszBukvova H., 2021, Systems, Software and Services Process Improvement, V1442
   Machuca-Villegas L, 2020, COMM COM INF SC, V1251, P717, DOI 10.1007/978-3-030-56441-4_54
   MachucaVillegas L., 2019, Toward a model based on gamification to influence the productivity of software development teams, DOI [10.23919/CISTI.2019.8760813, DOI 10.23919/CISTI.2019.8760813]
   MASSAM BH, 1988, PROG PLANN, V30, P1, DOI 10.1016/0305-9006(88)90012-8
   Memariani A., 2009, J IND ENGINEERING, V4, P13
   Munoz Mirna, 2022, Systems, Software and Services Process Improvement: 29th European Conference, EuroSPI 2022, Proceedings. Communications in Computer and Information Science (1646), P106, DOI 10.1007/978-3-031-15559-8_8
   Murphy-Hill E, 2021, IEEE T SOFTWARE ENG, V47, P582, DOI 10.1109/TSE.2019.2900308
   Oprescu F, 2014, FRONT PSYCHOL, V5, DOI 10.3389/fpsyg.2014.00014
   Orta E, 2016, COMM COM INF SC, V609, P84, DOI 10.1007/978-3-319-38980-6_7
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Gasca-Hurtado GP, 2021, IET SOFTW, V15, P428, DOI 10.1049/sfw2.12045
   Reis ACB., 2020, Production, V30, DOI [10.1590/01036513.20190094, DOI 10.1590/01036513.20190094]
   Reyes M.Z., 2004, SOCIAL RES DEDUCTIVE
   Sig A., 2010, Automotive SPICE Process Reference Model, P1
   Tillstrm J., 2012, Gamification in Automotive Marketing. A Conceptual Framework for Implementation
   Trendowicz A, 2009, ADV COMPUT, V77, P185, DOI 10.1016/S0065-2458(09)01206-6
   Viana Davi, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P121, DOI 10.1049/ic.2012.0015
   Villemoes A., 1954, Productivity in the distributive Trde in Europe. Wholesale and retail aspects, V120
   Wagner S., 2019, Rethink Prod. Softw. Eng, P69, DOI DOI 10.1007/9781484242216
   Wagner S., 2018, A systematic review of productivity factors in software development
   Werbach K., 2012, For the Win: How Game Thinking Can Revolutionize Your Business
   Yilmaz M., 2013, A Software Process Engineering Approach to Understanding Software Productivity and Team Personality Characteristics
   Yilmaz M, 2016, INT J SOFTW ENG KNOW, V26, P457, DOI 10.1142/S0218194016500194
NR 46
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUL 3
PY 2024
DI 10.1002/smr.2704
EA JUL 2024
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XI9W8
UT WOS:001261183500001
DA 2024-08-05
ER

PT J
AU Liu, XD
   Chen, ZK
   Qian, Y
   Zhong, CX
   Huang, H
   Li, SS
   Shao, D
AF Liu, Xiaodong
   Chen, Zhikun
   Qian, Yu
   Zhong, Chenxing
   Huang, Huang
   Li, Shanshan
   Shao, Dong
TI Towards a security-optimized approach for the microservice-oriented
   decomposition
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE decomposition; microservices; modularity; multi-objective optimization;
   security
ID METRICS
AB Microservice architecture (MSA) is a mainstream architectural style due to its high maintainability and scalability. In practice, an appropriate microservice-oriented decomposition is the foundation to make a system enjoy the benefits of MSA. In terms of decomposing monolithic systems into microservices, researchers have been exploring many optimization objectives, of which modularity is a predominantly focused quality attribute. Security is also a critical quality attribute, that measures the extent to which a system protects data from malicious access or use by attackers. Considering security in microservices-oriented decomposition can help avoid the risk of leaking critical data and other unexpected software security issues. However, few researchers consider the security objective during microservice-oriented decomposition, because the measurement of security and the trade-off with other objectives are challenging in reality. To bridge this research gap, we propose a security-optimized approach for microservice-oriented decomposition (So4MoD). In this approach, we adapt five metrics from previous studies for the measurement of the data security of candidate microservices. A multi-objective optimization algorithm based on NSGA-II is designed to search for microservices with optimized security and modularity. To validate the effectiveness of the proposed So4MoD, we perform several experiments on eight open-source projects and compare the decomposition results to other three state-of-the-art approaches, that is, FoSCI, CO-GCN, and MSExtractor. The experiment results show that our approach can achieve at least an 11.5% improvement in terms of security metrics. Moreover, the decomposition results of So4MoD outperform other approaches in four modularity metrics, demonstrating that So4MoD can optimize data security while pursuing a well-modularized MSA.
   In our approach, microservice-oriented decomposition (So4MoD), we adapted five metrics from previous studies for the measurement of the data security of candidate microservices. A multi-objective optimization algorithm based on NSGA-II is designed to search for microservices with optimized security and modularity. image
C1 [Liu, Xiaodong; Chen, Zhikun; Qian, Yu; Zhong, Chenxing; Li, Shanshan; Shao, Dong] Nanjing Univ, Software Inst, Nanjing, Peoples R China.
   [Liu, Xiaodong; Chen, Zhikun; Qian, Yu; Zhong, Chenxing; Li, Shanshan; Shao, Dong] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Huang, Huang] State Grid Nanjing Power Supply Co, Nanjing, Peoples R China.
C3 Nanjing University; Nanjing University
RP Zhong, CX; Li, SS (corresponding author), Nanjing Univ, Software Inst, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM zhongcx@smail.nju.edu.cn; lss@nju.edu.cn
FU Key Research and Development Program of Jiangsu Province; Innovation
   Project and Overseas Open Project of State Key Laboratory for Novel
   Software Technology (Nanjing University) [ZZKT2022A25, KFKT2022A09,
   KFKT2023A09, KFKT2023A10]; National Natural Science Foundation of China
   [62072227, 62202219, 62302210]
FX This work is supported by the Key Research and Development Program of
   Jiangsu Province (BE2021002-2), the Innovation Project and Overseas Open
   Project of State Key Laboratory for Novel Software Technology (Nanjing
   University) (ZZKT2022A25, KFKT2022A09, KFKT2023A09, and KFKT2023A10),
   and the National Natural Science Foundation of China (62072227,
   62202219, and 62302210).
CR Abdullah M, 2019, J SYST SOFTWARE, V151, P243, DOI 10.1016/j.jss.2019.02.031
   Abid C., 2020, IEEE Trans Softw Eng, V48, P864
   Abid C, 2021, AUTOMAT SOFTW ENG, V28, DOI 10.1007/s10515-021-00281-2
   Adewumi A, 2015, CIT/IUCC/DASC/PICOM 2015 IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY - UBIQUITOUS COMPUTING AND COMMUNICATIONS - DEPENDABLE, AUTONOMIC AND SECURE COMPUTING - PERVASIVE INTELLIGENCE AND COMPUTING, P872, DOI 10.1109/CIT/IUCC/DASC/PICOM.2015.130
   Al-Debagy O, 2020, J WEB ENG, V19, P341, DOI 10.13052/jwe1540-9589.19341
   Alebrahim A., 2012, An aspectoriented approach to relating security requirements and access control
   Alshammari Bandar, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P55, DOI 10.1109/ASWEC.2010.34
   Alshammari B, 2009, INT CONF QUAL SOFTW, P11, DOI 10.1109/QSIC.2009.11
   Berardi D, 2022, PEERJ COMPUT SCI, V8, DOI 10.7717/peerj-cs.779
   Birch K, 2021, BIG DATA SOC, V8, DOI 10.1177/20539517211017308
   Biswas S, 2021, IEEE ACM T COMPUT BI, V18, P2612, DOI 10.1109/TCBB.2020.2992304
   Brewer M., 2000, Research Design and Issues of Validity in Handbook of Research Methods in Social and Personality Psychology, P3, DOI DOI 10.1017/CBO9780511996481.005
   Camilli M, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3583563
   Carvalho L, 2020, PROC IEEE INT CONF S, P569, DOI 10.1109/ICSME46990.2020.00060
   Chen YL, 2020, INFORM SYST, V94, DOI 10.1016/j.is.2020.101590
   Daghaghzadeh M, 2021, SOFTWARE PRACT EXPER, V51, P449, DOI 10.1002/spe.2913
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Desai U, 2021, AAAI CONF ARTIF INTE, V35, P72
   Dong XB, 2020, FRONT COMPUT SCI-CHI, V14, P241, DOI 10.1007/s11704-019-8208-z
   Edge C., 2012, Improving security design patterns with aspectoriented strategies, P24
   Eiben AE, 2011, SWARM EVOL COMPUT, V1, P19, DOI 10.1016/j.swevo.2011.02.001
   Genfer P, 2022, LECT NOTES COMPUT SC, V13444, P3, DOI 10.1007/978-3-031-16697-6_1
   Gibson B, 2021, 2021 INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND COMPUTATIONAL INTELLIGENCE (CSCI 2021), P777, DOI 10.1109/CSCI54926.2021.00191
   Gren L., 2018, Standards of validity and the validity of standards in behavioral software engineering research: the perspective of psychological test theory, P1
   Gunantara N, 2018, COGENT ENG, V5, DOI 10.1080/23311916.2018.1502242
   Han HG, 2023, INFORM SCIENCES, V629, P580, DOI 10.1016/j.ins.2023.02.019
   Hassan S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P1, DOI 10.1109/ICSA.2017.32
   Hassanat AB, 2018, INFORMATION, V9, DOI 10.3390/info9070167
   Jafari AJ, 2019, SOFTWARE QUAL J, V27, P1531, DOI 10.1007/s11219-019-09454-5
   Jalali NS, 2019, SOFT COMPUT, V23, P11141, DOI 10.1007/s00500-018-3666-z
   Jin WX, 2021, IEEE T SOFTWARE ENG, V47, P987, DOI 10.1109/TSE.2019.2910531
   Kalia AK, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1214, DOI 10.1145/3468264.3473915
   Kramer S, 2004, ACM T SOFTW ENG METH, V13, P332, DOI 10.1145/1027092.1027094
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Li SS, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106449
   Li SS, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.008
   Li X., 2021, $$ Inter- Service $$ access control of microservices, P3971
   Li ZD, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106992
   Marler RT, 2004, STRUCT MULTIDISCIP O, V26, P369, DOI 10.1007/s00158-003-0368-6
   Millham R., 2011, Aspectoriented security and exception handling within an object oriented system, P321
   Monteiro D, 2023, IEEE T SERV COMPUT, V16, P3196, DOI 10.1109/TSC.2023.3290474
   Mumtaz H, 2018, INFORM SOFTWARE TECH, V96, P112, DOI 10.1016/j.infsof.2017.11.010
   Ouni A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1843
   Ponce F, 2022, LECT NOTES COMPUT SC, V13444, P131, DOI 10.1007/978-3-031-16697-6_9
   Ponce F, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111393
   Redding D., 2022, A case study of massive API scrapping: Parler data breach after the capitol riot, P1
   Sellami K, 2022, LECT NOTES COMPUT SC, V13740, P203, DOI 10.1007/978-3-031-20984-0_14
   Sellami K, 2022, INFORM SOFTWARE TECH, V151, DOI 10.1016/j.infsof.2022.106996
   Sjoberg DIK, 2023, IEEE T SOFTWARE ENG, V49, P1374, DOI 10.1109/TSE.2022.3176725
   Stallings W, 2014, COMPUTER SECURITY HANDBOOK, 6TH EDITION, VOL 1
   Vistbakka Inna, 2020, Formal Methods and Software Engineering. 22nd International Conference on Formal Engineering Methods, ICFEM 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12531), P308, DOI 10.1007/978-3-030-63406-3_19
   Zdun U, 2018, LECT NOTES COMPUT SC, V11236, P73, DOI 10.1007/978-3-030-03596-9_5
   Zhang H, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P51, DOI 10.1109/ICSA.2019.00014
   Zhong CX, 2023, J SYST SOFTWARE, V200, DOI 10.1016/j.jss.2023.111670
   Zhong CX, 2022, SOFTWARE PRACT EXPER, V52, P2574, DOI 10.1002/spe.3138
   Zhou X, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P1, DOI 10.1145/3510457.3513054
NR 56
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUN 27
PY 2024
DI 10.1002/smr.2670
EA JUN 2024
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WS5E3
UT WOS:001256868100001
DA 2024-08-05
ER

PT J
AU Pretorius, C
   Razavian, M
   Eling, K
   Langerak, F
AF Pretorius, Carianne
   Razavian, Maryam
   Eling, Katrin
   Langerak, Fred
TI When rationality meets intuition: A research agenda for software design
   decision-making
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE decision-making; intuition; rationality; research agenda; software
   design; systematic literature review
ID INDIVIDUAL-DIFFERENCES; PRODUCT INNOVATION; TEAM INTUITION; FRONT-END;
   ARCHITECTURE; CREATIVITY; KNOWLEDGE; THINKING; MODEL; UNCERTAINTY
AB As society's reliance on software systems escalates over time, so too does the cost of failure of these systems. Meanwhile, the complexity of software systems, as well as of their designs, is also ever-increasing, influenced by the proliferation of new tools and technologies to address intended societal needs. The traditional response to this complexity in software engineering and software architecture has been to apply rationalistic approaches to software design through methods and tools for capturing design rationale and evaluating various design options against a set of criteria. However, research from other fields demonstrates that intuition may also hold benefits for making complex design decisions. All humans, including software designers, use intuition and rationality in varying combinations. The aim of this article is to provide a comprehensive overview of what is known and unknown from existing research regarding the use and performance consequences of using intuition and rationality in software design decision-making. To this end, a systematic literature review has been conducted, with an initial sample of 3909 unique publications and a final sample of 26 primary studies. We present an overview of existing research, based on the literature concerning intuition and rationality use in software design decision-making and propose a research agenda with 14 questions that should encourage researchers to fill identified research gaps. This research agenda emphasizes what should be investigated to be able to develop support for the application of the two cognitive processes in software design decision-making.
   Using a Systematic Literature Review, this study develops and presents (1) an overview of existing literature concerning intuition and rationality use in software design decision-making and (2) an agenda for future research. image
C1 [Pretorius, Carianne] Tech Acad Adyen, Amsterdam, Netherlands.
   [Razavian, Maryam; Langerak, Fred] Eindhoven Univ Technol, Dept Ind Engn & Innovat Sci, Eindhoven, Netherlands.
   [Eling, Katrin] Wuppertal Inst Climate Environm & Energy, Wuppertal, Germany.
C3 Eindhoven University of Technology
RP Razavian, M (corresponding author), Eindhoven Univ Technol, Dept Ind Engn & Innovat Sci, Eindhoven, Netherlands.
EM m.razavian@tue.nl
RI Langerak, Fred/ABE-6823-2020
OI Langerak, Fred/0009-0008-7819-2483
CR Açikgöz A, 2014, GROUP DECIS NEGOT, V23, P1145, DOI 10.1007/s10726-013-9367-1
   Andersen J., 2000, J MANAGE PSYCHOL, V15, P46, DOI [DOI 10.1108/02683940010305298, 10.1108/02683940010305298.]
   [Anonymous], 2014, Guide to the Software Engineering Body of Knowledge
   Avison D., 2002, Information Systems Development: Methodologies, Techniques Tools, VFourth Edition
   Babar MA, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P69, DOI 10.1007/978-3-642-02374-3_5
   Ball LJ, 2010, DESIGN STUD, V31, P567, DOI 10.1016/j.destud.2010.09.003
   Bass Len, 2012, SEI S SOFTW
   Beach L.R., 2017, Decision Making, V85, P835, DOI DOI 10.4324/9781315095080-5
   Beck K., 2000, Extreme Programming Explained: Embrace Change
   Becker C., 2023, Insolvent: How to Reorient Computing for Just Sustainability
   Becker C, 2020, Arxiv, DOI arXiv:2005.03084
   Budgen David., 2003, SOFTWARE DESIGN
   Burge J, 2000, ARTIFICIAL INTELLIGENCE IN DESIGN '00, P611
   Burke L. A., 1999, Academy of Management Executive, V13, P91, DOI [10.5465/ame.1999.2570557, DOI 10.5465/AME.1999.2570557]
   Capilla R., 2020, Teaching Students Software Architecture Decision Making, DOI [10.1007/978-3-030-58923-3_16, DOI 10.1007/978-3-030-58923-3_16]
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Crilly N, 2015, DESIGN STUD, V38, P54, DOI 10.1016/j.destud.2015.01.002
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Dane E, 2007, ACAD MANAGE REV, V32, P33, DOI [10.2307/20159279, 10.5465/AMR.2007.23463682]
   Dayan M, 2011, J PROD INNOVAT MANAG, V28, P159, DOI 10.1111/j.1540-5885.2011.00868.x
   Dijksterhuis A, 2006, CONSCIOUS COGN, V15, P135, DOI 10.1016/j.concog.2005.04.007
   Dijksterhuis A., 2006, Perspect Psychol Sci, V3, P193
   Dijksterhuis D, 2006, J EXP SOC PSYCHOL, V42, P627, DOI 10.1016/j.jesp.2005.10.008
   Dorst K, 2019, DESIGN STUD, V65, P60, DOI 10.1016/j.destud.2019.10.005
   Dorst Kees, 2001, Design Studies, V22, P425, DOI DOI 10.1016/S0142-694X(01)00009-6
   Drury-Grogan ML, 2017, J SYST SOFTWARE, V131, P248, DOI 10.1016/j.jss.2017.06.003
   Drury-Grogan ML, 2013, INT J INF TECH DECIS, V12, P1097, DOI 10.1142/S0219622013400105
   Dutra E., 2021, Human factors and their influence on software development teams-a tertiary study, P442
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Eliëns R, 2018, J PROD INNOVAT MANAG, V35, P890, DOI 10.1111/jpim.12452
   Eling K, 2015, CREAT INNOV MANAG, V24, P464, DOI 10.1111/caim.12128
   Eling K, 2014, J PROD INNOVAT MANAG, V31, P956, DOI 10.1111/jpim.12136
   Engström E, 2020, EMPIR SOFTW ENG, V25, P2630, DOI 10.1007/s10664-020-09818-7
   Epstein S, 1996, J PERS SOC PSYCHOL, V71, P390, DOI 10.1037/0022-3514.71.2.390
   Evans JSBT, 2008, ANNU REV PSYCHOL, V59, P255, DOI 10.1146/annurev.psych.59.103006.093629
   Evanschitzky H, 2012, J PROD INNOVAT MANAG, V29, P21, DOI 10.1111/j.1540-5885.2012.00964.x
   GALLUPE RB, 1992, ACAD MANAGE J, V35, P350, DOI 10.5465/256377
   Gigerenzer G., 2007, GUT FEELINGS INTELLI
   Gigerenzer G, 2008, PSYCHOL REV, V115, P230, DOI 10.1037/0033-295X.115.1.230
   Glass RL., 2008, IEEE Softw, V25, P5
   Goldschmidt G, 2016, CREATIVITY RES J, V28, P115, DOI 10.1080/10400419.2016.1162497
   Grossman R., 2013, Judgment and decision making at work, P297
   Growns B., 2023, The post office scandal in the United Kingdom: Mental health and social experiences of wrongly convicted and wrongly accused individuals
   Hammedi W, 2011, J PROD INNOVAT MANAG, V28, P662, DOI 10.1111/j.1540-5885.2011.00831.x
   Hardman TheresaJane., 2021, Journal of Creativity, V31, DOI DOI 10.1016/J.YJOC.2021.100006
   Harper R., 2017, Choice
   Healey MP, 2015, ACAD MANAGE REV, V40, P399, DOI 10.5465/amr.2013.0154
   Henry BM, 2018, CLIN ANAT, V31, P364, DOI 10.1002/ca.23042
   Hesse TM, 2016, INFORM SOFTWARE TECH, V79, P36, DOI 10.1016/j.infsof.2016.06.003
   Hodgkinson GP, 2018, ACAD MANAGE PERSPECT, V32, P473, DOI 10.5465/amp.2016.0140
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Hoyt GM, 2009, INT REV ECON EDUC, V8, P158, DOI 10.1016/S1477-3880(15)30073-6
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Kahneman D., 2011, THINKING FAST SLOW
   Kahneman D, 2009, AM PSYCHOL, V64, P515, DOI 10.1037/a0016755
   Kerr NL, 2004, ANNU REV PSYCHOL, V55, P623, DOI 10.1146/annurev.psych.55.090902.142009
   Khatri N, 2000, HUM RELAT, V53, P57, DOI 10.1177/0018726700531004
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering, VVolume 2, DOI [10.1145/1134285.1134500, DOI 10.1145/1134285.1134500]
   Kitchenham B. A., 2015, Evidence-based software engineering and systematic reviews
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Klein G., 1998, SOURCES POWER PEOPLE
   Klein G, 2015, J APPL RES MEM COGN, V4, P164, DOI 10.1016/j.jarmac.2015.07.001
   Koskinen J., 2005, Empirical study of industrial decision making for software modernizations, P235
   Krishnan V, 2001, MANAGE SCI, V47, P1, DOI 10.1287/mnsc.47.1.1.10668
   Kruchten P., 2003, The Rational Unified Process: An Introduction, V3rd
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Kruchten P, 2008, J SYST SOFTWARE, V81, P2413, DOI 10.1016/j.jss.2008.08.025
   Kruchten P, 2009, IEEE SOFTWARE, V26, P36, DOI 10.1109/MS.2009.52
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Lipshitz R, 2001, J BEHAV DECIS MAKING, V14, P331, DOI 10.1002/bdm.381
   March J., 1994, A primer on decision making: How decisions happen
   Mendes FF, 2019, INFORM SOFTWARE TECH, V111, P50, DOI 10.1016/j.infsof.2019.03.010
   Miles M, 2014, Qualitative data analysis
   MINTZBERG H, 1976, ADMIN SCI QUART, V21, P246, DOI 10.2307/2392045
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Mohanani R, 2020, IEEE T SOFTWARE ENG, V46, P1318, DOI 10.1109/TSE.2018.2877759
   Mohanani R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P895, DOI 10.1145/2568225.2568235
   Moran T.P., 1996, DESIGN RATIONALE CON
   Paré G, 2015, INFORM MANAGE-AMSTER, V52, P183, DOI 10.1016/j.im.2014.08.008
   Pétervári J, 2016, FRONT PSYCHOL, V7, DOI 10.3389/fpsyg.2016.01420
   Petre Marian, 2013, Software Designers in Action: A Human-Centric Look at Design Work, V1st
   Power K, 2019, LECT NOTES COMPUT SC, V11681, P55, DOI 10.1007/978-3-030-29983-5_4
   Pratt MG, 2016, ANNU REV ORGAN PSYCH, V3, P321, DOI 10.1146/annurev-orgpsych-041015-062517
   Pretorius C, 2021, IEEE SOFTWARE, V38, P64, DOI 10.1109/MS.2020.3043663
   Pretorius C, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2018), P48, DOI 10.1109/ICSA-C.2018.00021
   Ralph P, 2018, SCI COMPUT PROGRAM, V156, P68, DOI 10.1016/j.scico.2018.01.002
   Ralph P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P24, DOI 10.1145/2568225.2568261
   Ralph P, 2015, SCI COMPUT PROGRAM, V101, P21, DOI 10.1016/j.scico.2014.11.007
   Ralph P, 2010, LECT NOTES COMPUT SC, V6105, P139, DOI 10.1007/978-3-642-13335-0_10
   Razavian M, 2023, J SYST SOFTWARE, V198, DOI 10.1016/j.jss.2022.111560
   Razavian M, 2019, J SYST SOFTWARE, V149, P360, DOI 10.1016/j.jss.2018.12.003
   Razavian M, 2016, J SOFTW-EVOL PROC, V28, P394, DOI 10.1002/smr.1776
   Razavian M, 2016, FIRST WORKSHOP ON QUALITATIVE REASONING ABOUT SOFTWARE ARCHITECTURES: QRASA 2016, P19, DOI 10.1109/QRASA.2016.8
   Rekha VS, 2018, INFORM SOFTWARE TECH, V101, P51, DOI 10.1016/j.infsof.2018.04.009
   Renaud K, 2021, INT C CYBER WARFARE, P309, DOI 10.34190/IWS.21.090
   Robertson J, 2002, IEEE SOFTWARE, V19, P20, DOI 10.1109/MS.2002.1020281
   Sadler-Smith E, 2004, ACAD MANAGE EXEC, V18, P76, DOI 10.5465/AME.2004.15268692
   Schon D, 1983, REFLECTIVE PRACTITIO
   Schriek C, 2016, LECT NOTES COMPUT SC, V9839, P22, DOI 10.1007/978-3-319-48992-6_2
   Simon H. A., 1969, The science of the artificial
   Simon HA, 1996, SCI ARTIFICIAL
   Simon HA, 1955, Q J ECON, V69, P99, DOI 10.2307/1884852
   Smrithi Rekha V., 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P185, DOI 10.1109/WICSA.2014.15
   Stanovich K.E., 2012, OXFORD HDB THINKING, P343, DOI DOI 10.1093/OXFORDHB/9780199734689.013.0022
   Stanovich KE, 2000, BEHAV BRAIN SCI, V23, P645, DOI 10.1017/S0140525X00003435
   Tang A., 2011, P 6 INT WORKSH SHARI
   Tang A, 2018, J SYST SOFTWARE, V144, P22, DOI 10.1016/j.jss.2018.05.019
   Tang A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P107, DOI 10.1109/ICSA.2017.15
   Tang A, 2015, LECT NOTES COMPUT SC, V9278, P105, DOI 10.1007/978-3-319-23727-5_9
   Tang A, 2014, J SYST SOFTWARE, V88, P87, DOI 10.1016/j.jss.2013.09.044
   Tang A, 2012, IEEE SOFTWARE, V29, P51, DOI 10.1109/MS.2011.130
   Tang A, 2010, DESIGN STUD, V31, P614, DOI 10.1016/j.destud.2010.09.004
   Tang A, 2008, LECT NOTES COMPUT SC, V5281, P28, DOI 10.1007/978-3-540-87879-7_2
   Tatikonda MV, 2001, MANAGE SCI, V47, P151, DOI 10.1287/mnsc.47.1.151.10669
   Tofan D, 2014, INFORM SOFTWARE TECH, V56, P850, DOI 10.1016/j.infsof.2014.03.009
   TVERSKY A, 1986, J BUS, V59, pS251, DOI 10.1086/296365
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   Usher M, 2011, FRONT PSYCHOL, V2, DOI 10.3389/fpsyg.2011.00037
   van Heesch U, 2013, J SYST SOFTWARE, V86, P1545, DOI 10.1016/j.jss.2013.01.057
   van Vliet H, 2016, J SYST SOFTWARE, V117, P638, DOI 10.1016/j.jss.2016.01.017
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wohlin C., 2014, P 18 INT C EV ASS SO, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   Wohlin C, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2345
   Wohlin C, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106366
   Zalewski A, 2017, LECT NOTES COMPUT SC, V10475, P123, DOI 10.1007/978-3-319-65831-5_9
   Zannier C., 2005, A qualitative empirical evaluation of design decisions, P1
   Zannier C., 2007, Social factors relevant to capturing design decisions, P2
   Zannier C, 2007, LECT NOTES COMPUT SC, V4536, P1
   Zannier C, 2007, INFORM SOFTWARE TECH, V49, P637, DOI 10.1016/j.infsof.2007.02.010
   Zannier C, 2006, LECT NOTES COMPUT SC, V4044, P11
   Zhu YX, 2017, J EXP SOC PSYCHOL, V73, P180, DOI 10.1016/j.jesp.2017.06.009
NR 134
TC 0
Z9 0
U1 4
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 MAR 31
PY 2024
DI 10.1002/smr.2664
EA MAR 2024
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MM0N7
UT WOS:001193921700001
OA hybrid
DA 2024-08-05
ER

PT J
AU Zhang, XP
   Liu, JX
   Shi, M
AF Zhang, Xiangping
   Liu, Jianxun
   Shi, Min
TI GRRLN: Gated Recurrent Residual Learning Networks for code clone
   detection
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE abstract syntax tree; code clone detection; code representation;
   residual network
AB Code clone detection is a critical problem in software development and maintenance domains. It aims to identify functionally identical or similar code fragments within an application. Existing works formulate the code clone detection task as a binary classification problem which predicts a code pair as a clone or not based on a pre-defined threshold. In reality, there are various types of code clone subject to the degree of how a pair of code fragments are similar to each other. To investigate the effect of different code clone detection manners on the clone detection result, we propose Gated Recurrent Residual Learning Networks (GRRLN), a novel neural network model for code clone detection. To train GRRLN, we first represent each code fragment as a statement-level tree sequence derived from the whole abstract syntax tree (AST). Then, a gated recurrent neural network with residual connections is adopted to fully extract the semantics of all individual statement trees together with their dependency relationships across the input statement sequence. Finally, the output representations of code fragments by GRRLN are used for similarity calculation and clone detection. We evaluate GRRLN using two real-world datasets for code clone detection and clone type classification. Experiments show that GRRLN achieves promising and compelling results and meanwhile needs significantly less time and memory consumption compared with the state-of-the-art methods.
   Code clone detection is commonly approached as a binary classification task, determining whether code pairs are clones or not based on a fixed threshold. However, code clones exhibit varying degrees of similarity, leading to different types of clones. To explore the impact of detection manners on clone detection results, we proposed a Gated Recurrent Residual Learning Networks for code clone detection task. The experimental results demonstrate that different detection manners yield varying results, even with the same model and dataset. image
C1 [Zhang, Xiangping] Hunan Automot Engn Vocat Coll, Zhuzhou, Hunan, Peoples R China.
   [Zhang, Xiangping; Liu, Jianxun] Hunan Univ Sci & Technol, Sch Comp Sci & Engn, Xiangtan, Hunan, Peoples R China.
   [Zhang, Xiangping; Liu, Jianxun] Hunan Univ Sci & Technol, Hunan Prov Key Lab Serv Comp & Novel Software Tech, Xiangtan, Hunan, Peoples R China.
   [Shi, Min] Harvard Med Sch, Harvard Ophthalmol AI Lab, Boston, MA USA.
C3 Hunan University of Science & Technology; Hunan University of Science &
   Technology; Harvard University; Harvard Medical School
RP Liu, JX (corresponding author), Hunan Univ Sci & Technol, Sch Comp Sci & Engn, Xiangtan, Hunan, Peoples R China.
EM 834506424@qq.com
OI zhang, xiangping/0000-0001-7751-602X
FU National Natural Science Foundation of China;  [61872139]
FX This work was supported by the National Natural Science Foundation of
   China (61872139).
CR Al-omari F, 2020, INT WORKS SOFTW CLON, P57, DOI [10.1109/IWSC50091.2020.9047643, 10.1109/iwsc50091.2020.9047643]
   Alon U., 2018, CODE2VEC LEARNING DI
   Alon U., 2018, code2seq: Generating sequences from structured representations of code
   [Anonymous], 2014, Learning to execute
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Basit HamidAbdul., 2007, P THE 6 JOINT M EURO, P513, DOI 10.1145/1295014.1295029
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   David Y, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428293
   Dean J, 2013, P WORKSHOP ICLR 2013
   Debray SK, 2000, ACM T PROGR LANG SYS, V22, P378, DOI 10.1145/349214.349233
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Ei-Wahed SA, 2007, MEDIA CONVERGENCE: MOVING TO THE NEXT GENERATION, P315
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Higo Y, 2022, IEEE WORK CONF MIN S, P682, DOI 10.1145/3524842.3528015
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Jiang H, 2019, IEEE T SERV COMPUT, V12, P34, DOI 10.1109/TSC.2016.2592909
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kanwal J, 2017, INT WORKS SOFTW CLON, P45
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Keller P, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3485135
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Lee S., 2005, P COMP 20 ANN ACM SI, P140
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Mondal M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P484, DOI 10.1109/SANER.2015.7081861
   Monden A, 2011, IEEE SOFTWARE, V28, P42, DOI 10.1109/MS.2010.159
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Sheneamer A., 2016, INT J COMPUTER APPL, V137, P1, DOI DOI 10.5120/IJCA2016908896
   Sheneamer AM, 2020, IEEE ACCESS, V8, P124978, DOI 10.1109/ACCESS.2020.3006178
   Siu C, 2019, PR INT CONF DATA SC, P31, DOI 10.1109/DSAA.2019.00017
   Socher R., 2011, ICML, P129
   Svacina J, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P129, DOI 10.1145/3341105.3374117
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Tian ZZ, 2015, IEEE T SOFTWARE ENG, V41, P1217, DOI 10.1109/TSE.2015.2454508
   Ullah F, 2020, MULTIMED TOOLS APPL, V79, P8581, DOI 10.1007/s11042-018-5827-6
   Walker A, 2019, APPL COMPUT REV, V19, P28, DOI [10.1145/3338840.3355654, 10.1145/3381307.3381310]
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/saner48275.2020.9054857, 10.1109/SANER48275.2020.9054857]
   Wang WJ, 2023, J SYST SOFTWARE, V199, DOI 10.1016/j.jss.2023.111618
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Yu DJ, 2023, INFORM SOFTWARE TECH, V156, DOI 10.1016/j.infsof.2022.107130
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
NR 49
TC 0
Z9 0
U1 6
U2 6
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2024
VL 36
IS 7
DI 10.1002/smr.2649
EA FEB 2024
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YG4W1
UT WOS:001157410400001
DA 2024-08-05
ER

PT J
AU Jin, KX
   Lano, K
AF Jin, Kunxiang
   Lano, Kevin
TI Object Constraint Language based test case optimization with modified
   Average Percentage of Fault Detection metric
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE genetic algorithm; modified APFD metric; Object Constraint Language;
   test case optimization
ID TEST-CASE PRIORITIZATION; GENETIC ALGORITHM; MINIMIZATION
AB Testing is one of the most time-consuming and unpredictable processes within the software development life cycle. As a result, many test case optimization (TCO) techniques have been proposed to make this process more scalable. Object Constraint Language (OCL) was initially introduced as a constraint language to provide additional details to Unified Modeling Language models. However, as OCL continues to evolve, an increasing number of systems are being expressed by this language. Despite this growth, a noticeable research gap exists for the testing of systems whose specifications are expressed in OCL. In our previous work, we verified the effectiveness and efficiency of performing the test case prioritization (TCP) process for these systems. In this study, we extend our previous work by integrating the test case minimization (TCM) process to determine whether TCM can also benefit the testing process under the context of OCL. The evaluation of TCO approaches often relies on well-established metrics such as the average percentage of fault detection (APFD). However, the suitability of APFD for model-based testing (MBT) is not ideal. This paper addresses this limitation by proposing a modification to the APFD metric to enhance its viability for MBT scenarios. We conducted four case studies to evaluate the feasibility of integrating the TCM and TCP processes into our proposed approach. In these studies, we applied the multi-objective optimization algorithm NSGA-II and the genetic algorithm independently to the TCM and TCP processes. The objective was to assess the effectiveness and efficiency of combining TCM and TCP in enhancing the testing phase. Through experimental analysis, the results highlight the benefits of integrating TCM and TCP in the context of OCL-based testing, providing valuable insights for practitioners and researchers aiming to optimize their testing efforts. Specifically, the main contributions of this work include the following: (1) we introduce the integration of the TCM process into the TCO process for systems expressed by OCL. This integration benefits the testing process further by reducing redundant test cases while ensuring sufficient coverage. (2) We comprehensively analyze the limitations associated with the commonly used metric, APFD, and then, a modified version of the APFD metric has been proposed to overcome these weaknesses. (3). We systematically evaluate the effectiveness and efficiency of OCL-based TCO processes on four real-world case studies with different complexities.
   image
C1 [Jin, Kunxiang; Lano, Kevin] Kings Coll London, Dept Informat, London, England.
C3 University of London; King's College London
RP Jin, KX (corresponding author), Kings Coll London, Dept Informat, London, England.
EM kunxiang.jin@kcl.ac.uk
CR Abukhalaf S, 2023, Arxiv, DOI arXiv:2303.16244
   Ali S, 2014, LECT NOTES COMPUT SC, V8769, P223, DOI 10.1007/978-3-319-11743-0_16
   [Anonymous], AgileUML repository
   Bajaj A, 2022, SENSORS-BASEL, V22, DOI 10.3390/s22124374
   Brucker AD., 2015, Featherweight OCL: a proposal for a machinechecked formal semantics for OCL 2.5, P199
   Büttner F, 2014, SCI COMPUT PROGRAM, V92, P162, DOI 10.1016/j.scico.2013.10.003
   Chaudhary S, 2020, 2020 INTERNATIONAL CONFERENCE ON COMPUTATIONAL PERFORMANCE EVALUATION (COMPE-2020), P699, DOI 10.1109/ComPE49325.2020.9200083
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   de Castro-Cabrera MD, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P2005, DOI 10.1145/3341105.3374036
   Deneke A, 2022, MATER TODAY-PROC, V60, P229, DOI 10.1016/j.matpr.2021.12.472
   Egea M, 2010, INNOV SYST SOFTW ENG, V6, P73, DOI 10.1007/s11334-009-0108-1
   Epitropakis M. G., 2015, P INT S SOFTW TEST A, P234, DOI [DOI 10.1145/2771783.2771788, 10.1145/2771783.2771788]
   Gogolla M., 2021, Refactoring collections in OCL, P142
   Gupta N, 2022, J KING SAUD UNIV-COM, V34, P2897, DOI 10.1016/j.jksuci.2020.01.009
   Gupta N, 2019, IEEE ACCESS, V7, P22310, DOI 10.1109/ACCESS.2019.2899471
   GutirrezMadronal L., 2014, ICCGI, V2014, P184
   Hashim NL., 2018, Int J Adv Sci Eng Inf Technol, V8, P1777, DOI [10.18517/ijaseit.8.4-2.6820, DOI 10.18517/IJASEIT.8.4-2.6820]
   Huang RB, 2022, SCI COMPUT PROGRAM, V214, DOI 10.1016/j.scico.2021.102730
   Jin KX, 2022, ACM/IEEE 25TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022 COMPANION, P607, DOI 10.1145/3550356.3561593
   Jin KX, 2022, ACM/IEEE 25TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022 COMPANION, P852, DOI 10.1145/3550356.3561545
   Lano K, 2022, ACM/IEEE 25TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022 COMPANION, P894, DOI 10.1145/3550356.3561565
   Lano K., 2021, Adding regular expression operators to OCL, P162
   Lano K., 2021, International Conference on Fundamentals of Software Engineering, P108, DOI [10.1007/978-3-030-89247-08, DOI 10.1007/978-3-030-89247-08]
   Lano K, 2021, PROCEDIA COMPUT SCI, V184, P773, DOI 10.1016/j.procs.2021.04.012
   Li F, 2022, IEEE T SOFTWARE ENG, V48, P5102, DOI 10.1109/TSE.2021.3137929
   Lipton RJ., Tech. Rep.
   Longbo Li, 2021, ASSE '21: 2021 2nd Asia Service Sciences and Software Engineering Conference, P48, DOI 10.1145/3456126.3456135
   López JAH, 2024, SCI COMPUT PROGRAM, V231, DOI 10.1016/j.scico.2023.103009
   Ma BY, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9229-3
   Maciel D, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE), P265, DOI 10.5220/0007679202650272
   Mann M, 2018, APPL INTELL, V48, P687, DOI 10.1007/s10489-017-1003-3
   Miranda B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P222, DOI 10.1145/3180155.3180210
   Morozov A, 2017, 2017 ANNUAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2017), P20, DOI 10.1109/SATE.2017.11
   Object Management Group OCLOSV, 2014, OMG Document formal/20140203
   Offutt AJ., 1996, Proceedings of 11th Annual Conference on Computer Assurance
   Palomo-Lozano F, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1427, DOI 10.1145/3205455.3205533
   Pan RQ, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10066-6
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Pospisil T, 2020, ACTA POLYTECH HUNG, V17, P125
   Rapos E.J., 2015, 2015 IEEE 8 INT C SO, P1
   Rattan P., 2021, Ann Roman Soc Cell Biol, P2965
   Reena, 2020, Proceedings of ICETIT 2019. Emerging Trends in Information Technology. Lecture Notes in Electrical Engineering (LNEE 605), P219, DOI 10.1007/978-3-030-30577-2_18
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Shin KW, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10217537
   Silva Ouriques JF., 2015, J. Softw Eng Res Dev, V3, P1, DOI [10.1186/s40411-014-0015-5, DOI 10.1186/S40411-014-0015-5]
   Sornkliang W., 2021, Int J Electr Comput Eng, V11, P575, DOI [10.11591/ijece.v11i1.pp575-588, DOI 10.11591/IJECE.V11I1.PP575-588]
   Srivatsava PR, 2013, SWARM EVOL COMPUT, V8, P44, DOI 10.1016/j.swevo.2012.08.003
   Sun CA, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111091
   Tallam Sriraman., 2005, PASTE 05, P35, DOI [10.1145/1108768.1108802, DOI 10.1145/1108768.1108802]
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang ZY, 2020, INT J SOFTW ENG KNOW, V30, P1139, DOI 10.1142/S0218194020500291
   Weileder S., 2008, Softw Eng, V2008
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   Willink E., 2019, An OCL map type
   Xiaofang Zhang, 2011, 2011 8th Web Information Systems and Applications Conference, P125, DOI 10.1109/WISA.2011.31
   Xing Y, 2021, COMPUT COMMUN, V180, P295, DOI 10.1016/j.comcom.2021.09.014
   Xintang Lin, 2020, Web Information Systems and Applications. 17th International Conference, WISA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12432), P15, DOI 10.1007/978-3-030-60029-7_2
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 58
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUL 4
PY 2024
DI 10.1002/smr.2708
EA JUL 2024
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XL8O2
UT WOS:001261932600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Ali, W
   Bo, LL
   Sun, XB
   Wu, XX
   Ali, A
   Wei, Y
AF Ali, Waqas
   Bo, Lili
   Sun, Xiaobing
   Wu, Xiaoxue
   Ali, Aakash
   Wei, Ying
TI Software bug localization based on optimized and ensembled deep learning
   models
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE improved deep neural long short-term memory; modified scatter
   probability-based coyote optimization algorithm; principle component
   analysis; software bug localization
AB An automated task for finding the essential buggy files among software projects with the help of a given bug report is termed bug localization. The conventional approaches suffer from the challenges of performing lexical matching. Particularly, the terms utilized for describing the bugs in the bug reports are observed to be irrelevant to the terms used in the source code files. To resolve these problems, we propose an optimized and ensemble deep learning model for software bug localization. These features are reduced by the principle component analysis (PCA). Then, they are selected by the weighted convolutional neural network (CNN) model with the support of the Modified Scatter Probability-based Coyote Optimization Algorithm (MSP-COA). Finally, the optimal features are subjected to the ensemble deep neural network and long short-term memory (DNN-LSTM), with parameter tuning by the MSP-COA. Experimental results show that the proposed approach can achieve higher bug localization accuracy than individual models.
   We present an optimized ensemble deep learning model for software bug localization. Features are reduced via PCA and selected using a C-CNN model aided by the Modified Scatter Probability-based Coyote Optimization Algorithm. Results demonstrate superior bug localization accuracy compared to standalone models. image
C1 [Ali, Waqas; Bo, Lili; Sun, Xiaobing; Wu, Xiaoxue; Wei, Ying] Yangzhou Univ, Sch Informat Engn, Yangzhou, Peoples R China.
   [Bo, Lili] Yunnan Key Lab Software Engn, Kunming, Yunnan, Peoples R China.
   [Ali, Aakash] Quaid E Awam Univ Engn Sci & Technol Nawabshah, Nawabshah, Pakistan.
C3 Yangzhou University
RP Bo, LL (corresponding author), Yangzhou Univ, Sch Informat Engn, Yangzhou, Peoples R China.
EM lilibo@yzu.edu.cn
FU National Natural Science Foundation of China; Six Talent Peaks Project
   in Jiangsu Province [RJFW-053]; Jiangsu "333" Project; Open Funds of
   State Key Laboratory for Novel Software Technology of Nanjing University
   [KFKT2022B17]; Open Foundation of Yunnan Key Laboratory of Software
   Engineering [2023SE201]; Yangzhou city-Yangzhou University Science and
   Technology Cooperation Fund Project [YZU201803]; Yangzhou University
   Top-level Talents Support Program; Cross-Disciplinary Project of the
   Animal Science special discipline of Yangzhou University [yzuxk202015];
   China Scholarship Council Foundation [202209300005, 202308320436]; 
   [61872312];  [61972335];  [62002309]
FX This work is supported by the National Natural Science Foundation of
   China (No. 61872312, No. 61972335, and No. 62002309); the Six Talent
   Peaks Project in Jiangsu Province (No. RJFW-053), the Jiangsu "333"
   Project, the Open Funds of State Key Laboratory for Novel Software
   Technology of Nanjing University (No. KFKT2022B17); Open Foundation of
   Yunnan Key Laboratory of Software Engineering under Grant (No.
   2023SE201); the Yangzhou city-Yangzhou University Science and Technology
   Cooperation Fund Project (No. YZU201803); Yangzhou University Top-level
   Talents Support Program (2019) and the Cross-Disciplinary Project of the
   Animal Science special discipline of Yangzhou University (No.
   yzuxk202015), the China Scholarship Council Foundation (No. 202209300005
   and No. 202308320436).
CR Ali W, 2023, EXPERT SYST APPL, V232, DOI 10.1016/j.eswa.2023.120562
   Bo LL, 2021, CHINESE J ELECTRON, V30, P55, DOI 10.1049/cje.2020.10.010
   Dutta A, 2020, IEEE T RELIAB, V69, P1267, DOI 10.1109/TR.2019.2956120
   Gao RZ, 2019, IEEE T SOFTWARE ENG, V45, P301, DOI 10.1109/TSE.2017.2776912
   Ghosh KK, 2020, IEEE ACCESS, V8, P83548, DOI 10.1109/ACCESS.2020.2991543
   Guo MW, 2020, IEEE ACCESS, V8, P69861, DOI 10.1109/ACCESS.2020.2984321
   Huo X, 2021, IEEE T SOFTWARE ENG, V47, P1368, DOI 10.1109/TSE.2019.2920771
   Mohsin H., 2022, Knowledge-Based Systems, V236, P25
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Shivani R., 2011, Retrieval from software libraries for bug localization: a comparative study of generic and composite text models
   Hoang T, 2019, IEEE T SOFTWARE ENG, V45, P1002, DOI 10.1109/TSE.2018.2810892
   Wen M, 2021, IEEE T SOFTWARE ENG, V47, P2348, DOI 10.1109/TSE.2019.2948158
   Xiao X, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106653
   Xiao Y, 2019, INFORM SOFTWARE TECH, V105, P17, DOI 10.1016/j.infsof.2018.08.002
   Yan M, 2022, IEEE T SOFTWARE ENG, V48, P82, DOI 10.1109/TSE.2020.2978819
   Yuan Z, 2020, ENERGY REP, V6, P1106, DOI 10.1016/j.egyr.2020.04.032
   Zhou C, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110572
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhou ZD, 2022, IEEE T RELIAB, V71, P896, DOI 10.1109/TR.2022.3165378
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 20
TC 0
Z9 0
U1 3
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 FEB 26
PY 2024
DI 10.1002/smr.2654
EA FEB 2024
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JL3S6
UT WOS:001173288500001
DA 2024-08-05
ER

PT J
AU Negrini, L
   Arceri, V
   Cortesi, A
   Ferrara, P
AF Negrini, Luca
   Arceri, Vincenzo
   Cortesi, Agostino
   Ferrara, Pietro
TI TARSIS: An effective automata-based abstract domain for string analysis
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE abstract interpretation; static analysis; string analysis
ID STATIC ANALYSIS
AB In this paper, we introduce Tarsis, a new abstract domain based on the abstract interpretation theory that approximates string values through finite state automata. The main novelty of Tarsis is that it works over an alphabet of strings instead of single characters. On the one hand, such an approach requires a more complex and refined definition of the lattice operators and of the abstract semantics of string operators. On the other hand, it is in position to obtain strictly more precise results than state-of-the-art approaches. We compare Tarsis both with simpler domains and with the standard automata model, targeting case studies containing standard yet challenging string manipulations. The performance gain w.r.t. the standard automata model is also assessed, measuring the speed-up gained by Tarsis. Experiments confirm that Tarsis can obtain precise results without incurring in excessive computational costs.
C1 [Negrini, Luca; Cortesi, Agostino; Ferrara, Pietro] Ca Foscari Univ Venice, Dept Environm Sci Informat & Stat, Venice, Italy.
   [Arceri, Vincenzo] Univ Parma, Dept Math Phys & Comp Sci, Parma, Italy.
   [Arceri, Vincenzo] Univ Parma, Dept Math Phys & Comp Sci, Parco Area Sci 53-A, I-43124 Parma, Italy.
C3 Universita Ca Foscari Venezia; University of Parma; University of Parma
RP Arceri, V (corresponding author), Univ Parma, Dept Math Phys & Comp Sci, Parco Area Sci 53-A, I-43124 Parma, Italy.
EM vincenzo.arceri@unipr.it
RI Negrini, Luca/ADF-3014-2022; Cortesi, Agostino/F-9637-2011; Arceri,
   Vincenzo/ABF-5954-2021
OI Negrini, Luca/0000-0001-9930-8854; Cortesi,
   Agostino/0000-0002-0946-5440; Arceri, Vincenzo/0000-0002-5150-0393
FU University of Parma; Bando di Ateneo per la Ricerca [2022]; EU - PNRR
   (Mission 4.2, Investment) [49 1.5, ECS00000043]; Ca' Foscari University;
    [CUP: D91B21005370003];  [PE00000014]
FX This work is partially supported by Bando di Ateneo per la Ricerca 2022,
   funded by University of Parma
   (MUR_DM737_2022_FIL_PROGETTI_B_ARCERI_COFIN and CUP: D91B21005370003);
   "Formal verification of GPLs blockchain smart contracts," SERICS
   (PE00000014) under the NRRP MUR program funded by the EU-NGEU;
   iNEST-Interconnected NordEst Innovation Ecosystem funded by PNRR
   (Mission 4.2, Investment 49 1.5) NextGeneration EU-Project ID:
   ECS00000043; and SPIN-2021 "Static Analysis for Data Scientists" funded
   by Ca' Foscari University.
CR Abdulla PA, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P943, DOI 10.1145/3385412.3386034
   Abdulla PA, 2019, LECT NOTES COMPUT SC, V11781, P277, DOI 10.1007/978-3-030-31784-3_16
   Abdulla PA, 2014, LECT NOTES COMPUT SC, V8559, P150, DOI 10.1007/978-3-319-08867-9_10
   Almashfi N, 2020, 2020 3RD INTERNATIONAL CONFERENCE ON INFORMATION AND COMPUTER TECHNOLOGIES (ICICT 2020), P17, DOI 10.1109/ICICT50521.2020.00011
   Amadini R, 2020, ARTIF INTELL, V289, DOI 10.1016/j.artint.2020.103368
   Arceri V., 2023, Challenges of Software Verification, P19
   Arceri V, 2022, LECT NOTES COMPUT SC, V13182, P20, DOI 10.1007/978-3-030-94583-1_2
   Arceri V, 2023, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON THE STATE OF THE ART IN PROGRAM ANALYSIS, SOAP 2023, P14, DOI 10.1145/3589250.3596141
   Arceri V, 2021, ACM T PRIV SECUR, V24, DOI 10.1145/3426470
   Arceri V, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1979, DOI 10.1145/3341105.3373964
   Arceri V, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10103525
   Arceri V, 2019, LECT NOTES COMPUT SC, V11884, P255, DOI 10.1007/978-3-030-32505-3_15
   Arceri V, 2017, ELECTRON NOTES THEOR, V331, P41, DOI 10.1016/j.entcs.2017.02.003
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Bartzis C, 2004, LECT NOTES COMPUT SC, V3114, P321
   Becchi A, 2020, INFORM COMPUT, V275, DOI 10.1016/j.ic.2020.104620
   Bodden E, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P241, DOI 10.1145/1985793.1985827
   Changhee Park, 2017, ACM SIGPLAN Notices, V52, P25, DOI 10.1145/3093334.2989228
   Chen TL, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290362
   Choi TH, 2006, LECT NOTES COMPUT SC, V4279, P374
   Christensen AS, 2003, LECT NOTES COMPUT SC, V2694, P1
   Cortesi A, 2018, PROCEEDINGS 2018 12TH INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE 2018), P1, DOI 10.1109/TASE.2018.00009
   Cortesi A, 2011, COMPUT LANG SYST STR, V37, P24, DOI 10.1016/j.cl.2010.09.001
   Costantini G, 2015, SOFTWARE PRACT EXPER, V45, P245, DOI 10.1002/spe.2218
   Costantini G, 2011, LECT NOTES COMPUT SC, V6991, P505, DOI 10.1007/978-3-642-24559-6_34
   Cousot P., 1992, Journal of Logic and Computation, V2, P511, DOI 10.1093/logcom/2.4.511
   Cousot P., 1979, 6 ACM S PRINC PROGR, P269, DOI [DOI 10.1145/567752.567778, 10.1145/567752.567778]
   Cousot P., 1977, Conference Record of the Fourth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P238, DOI [10.1145/512950.512973, DOI 10.1145/512950.512973]
   D'Antoni L, 2014, ACM SIGPLAN NOTICES, V49, P541, DOI 10.1145/2535838.2535849
   D'Silva V., 2006, Widening for automata
   Davis M., 1994, Computability, Complexity, and Languages: Fundamentals of Theoretical Computer Science
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Ferrara P., 2021, Proceedings of the 10th ACM SIGPLAN International Workshop on the State of the Art in Program Analysis. Soap 2021, P1, DOI [10.1145/3460946.3464316, DOI 10.1145/3460946.3464316]
   Ferrara P., 2020, SARL: OO framework specification for static analysis, P3, DOI [10.1007/978-3-030-63618-0_1, DOI 10.1007/978-3-030-63618-0_1]
   Fu X, 2007, P INT COMP SOFTW APP, P87
   Giacobazzi R, 2000, J ACM, V47, P361, DOI 10.1145/333979.333989
   Gould C, 2004, PROC INT CONF SOFTW, P697, DOI 10.1109/ICSE.2004.1317494
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   Livshits V.B., 2005, P 14 USENIX SECURITY
   Madsen M, 2014, LECT NOTES COMPUT SC, V8409, P197
   Negrini L, 2023, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON THE STATE OF THE ART IN PROGRAM ANALYSIS, SOAP 2023, P8, DOI 10.1145/3589250.3596145
   Negrini L, 2021, LECT NOTES COMPUT SC, V12597, P267, DOI 10.1007/978-3-030-67067-2_13
   Olivieri L., 2023, MichelsonLiSA: a static analyzer for tezos, P80, DOI [10.1109/PerComWorkshops56833.2023.10150247, DOI 10.1109/PERCOMWORKSHOPS56833.2023.10150247]
   Olivieri L., 2023, 37th European Conference on Object-Oriented Programming, ECOOP 2023, Seattle, Washington, United States, p23:1, DOI [10.4230/LIPIcs.ECOOP.2023.23, DOI 10.4230/LIPICS.ECOOP.2023.23]
   Preda MD, 2015, ACM SIGPLAN NOTICES, V50, P329, DOI 10.1145/2676726.2676986
   Rival X, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275501
   Veanes M., 2013, Applications of symbolic finite automata, P16, DOI [10.1007/978-3-642-39274-0_3, DOI 10.1007/978-3-642-39274-0_3]
   Wang HE, 2018, IEEE INT CONF AUTOM, P623, DOI 10.1145/3238147.3238189
   Yu F, 2014, FORM METHOD SYST DES, V44, P44, DOI 10.1007/s10703-013-0189-1
   Zheng Y., 2013, Z3-str: a z3-based string solver for web application analysis, P114
NR 50
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 FEB 14
PY 2024
DI 10.1002/smr.2647
EA FEB 2024
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW3G4
UT WOS:001162499800001
OA hybrid, Green Published
DA 2024-08-05
ER

PT J
AU de Campos, V
   David, JMN
   Ströele, V
   Braga, R
AF de Campos, Vitor
   David, Jose Maria N.
   Stroele, Victor
   Braga, Regina
TI Aligning technical knowledge to an industry domain in global software
   development: A systematic mapping
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE expert recommendation; global software development; industry domains;
   recommendation system; systematic mapping
ID RECOMMENDATION
AB Finding software developers with expertise in specific technologies that align with industry domains is an increasingly critical requirement. However, due to the ever-changing nature of the technology industry, locating these professionals has become a significant challenge for companies and institutions. This research presents a comprehensive overview of studies exploring suitable recommendation systems that can assist companies in addressing this pressing need. To conduct this study, we employ a hybrid systematic mapping approach with an initial number of 1,251 studies and a final selection of 21 studies. Our work focuses on collecting data on key technologies, methodologies, and data sets utilized in proposed recommendation systems, to design a new recommendation system that can effectively identify specialists capable of aligning specific technical knowledge with industry domains. The outcomes of this study include insights into the current research trends in this field, alongside a practical overview of considerations necessary for developing a recommendation system that successfully meets the criteria for aligning technical skills with industry domains. By following a hybrid systematic mapping methodology and presenting the outcomes in the form of insights, this research addresses the challenge of finding software developers with domain-specific expertise in a rapidly changing technology industry, laying the groundwork for aligning technical skills with industry domains.
   This study addresses the challenge of finding software developers with domain-specific expertise in the rapidly evolving technology industry. By reviewing 1,251 studies and selecting 21 for in-depth analysis, the research highlights current trends and key methodologies in recommendation systems. It provides valuable insights for developing systems aligning technical skills with industry domains, offering a comprehensive overview and practical considerations for creating effective solutions to match developers' industry-specific technological requirements. image
C1 [de Campos, Vitor; David, Jose Maria N.; Stroele, Victor; Braga, Regina] Univ Fed Juiz de Fora, Comp Sci Postgrad Program, Minas Gerais, MG, Brazil.
C3 Universidade Federal de Juiz de Fora
RP de Campos, V (corresponding author), Univ Fed Juiz de Fora, Comp Sci Postgrad Program, Minas Gerais, MG, Brazil.
EM vitor.queiroz@ice.ufjf.br
OI Braga, Regina/0000-0002-4888-0778; Nazar David, Jose
   Maria/0000-0002-3378-015X
FU Coordenacao de Aperfeicoamento de Pessoalde Nivel Superior-Brasil
   (CAPES) [001]; CNPq/Brazil [311595/2019-7, 313568/2023-5];
   FAPEMIG/Brazil [APQ-02685-17, APQ-02194-18]
FX This study was financed in part by the Coordenacao de Aperfeicoamento de
   Pessoalde Nivel Superior-Brasil (CAPES)-Finance Code 001; CNPq/Brazil:
   grants:311595/2019-7 and 313568/2023-5; FAPEMIG/Brazil: grants:
   APQ-02685-17 and APQ-02194-18.
CR Atzberger D, 2022, IEEE INT WORK C SO, P143, DOI 10.1109/SCAM55253.2022.00021
   Azmeh Z, 2015, INT CONF RES CHAL, P374, DOI 10.1109/RCIS.2015.7128898
   Beecham S., 2012, 2012 Seventh IEEE International Conference on Global Software Engineering Workshops (ICGSEW 2012), P12, DOI 10.1109/ICGSEW.2012.14
   Bergamini de Neira Anderson, 2018, Journal of the Brazilian Computer Society, V24, DOI 10.1186/s13173-018-0082-2
   Blanka C, 2022, TECHNOL FORECAST SOC, V178, DOI 10.1016/j.techfore.2022.121575
   Brasil-Silva R, 2022, 37TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1562, DOI 10.1145/3477314.3507304
   Brooks F. P., 1975, MYTHICAL MAN MONTH E
   Constantino K., 2022, 2022 IEEE Symposium on Visual Languages and HumanCentric Computing (VL/HCC) IEEE, P1
   Costa A, 2020, IEEE ACCESS, V8, P145687, DOI 10.1109/ACCESS.2020.3015017
   Dakhel AM, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P90, DOI 10.1145/3463274.3463343
   Datta A, 2014, J ASSOC INF SCI TECH, V65, P2518, DOI 10.1002/asi.23139
   Dehghan M, 2020, INFORM PROCESS MANAG, V57, DOI 10.1016/j.ipm.2020.102239
   Fu CB, 2017, 2017 14TH INTERNATIONAL WORKSHOP ON COMPLEX SYSTEMS AND NETWORKS (IWCSN), P149, DOI 10.1109/IWCSN.2017.8276520
   Hauff C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P362, DOI 10.1109/MSR.2015.41
   Haymond S, 2022, CLIN CHEM, V68, P392, DOI 10.1093/clinchem/hvab272
   Henderson JC, 1999, IBM SYST J, V38, P472, DOI 10.1147/SJ.1999.5387096
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Horta V, 2019, INT C COMP SUPP COOP, P464, DOI 10.1109/CSCWD.2019.8791857
   Hyrynsalmi SM., 2021, 2021 IEEE International Conference on Engineering, Technology and Innovation (ICE/ITMC), P1
   Iskoujina Z, 2015, J KNOWL MANAG, V19, P791, DOI 10.1108/JKM-10-2014-0446
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering, VVolume 2, DOI [10.1145/1134285.1134500, DOI 10.1145/1134285.1134500]
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V08, P33
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Li LY, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P636, DOI 10.1145/2736277.2741132
   Liu XM, 2014, INFORM SYST FRONT, V16, P715, DOI 10.1007/s10796-012-9385-6
   Lopes T, 2023, J COMPUT SCI-NETH, V66, DOI 10.1016/j.jocs.2022.101928
   Lopes T, 2020, PR I-A I C AD S N A, P594, DOI 10.1109/ASONAM49781.2020.9381373
   Mcafee A., 2018, Machine, Platform, Crowd: Harnessing Our Digital Future
   Mohebzada J. G., 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P200, DOI 10.1109/ICSSP.2012.6225965
   Montandon Joao Eduardo, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P276, DOI 10.1109/MSR.2019.00054
   Mourao E, 2017, INT SYMP EMP SOFTWAR, P193, DOI 10.1109/ESEM.2017.30
   Oliveira M Jr, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P417, DOI 10.1145/3350768.3352458
   Papoutsoglou M, 2019, IEEE ACCESS, V7, P157595, DOI 10.1109/ACCESS.2019.2949905
   Pereira T.A. B., 2010, Proceedings of the 2nd International Workshop on Recommendation Systems for Software Engineering, P36, DOI [10.1145/1808920.1808928, DOI 10.1145/1808920.1808928]
   Perez Q, 2022, ENASE: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P443, DOI 10.5220/0011071800003176
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Ross J. W., 2000, Information Systems Frontiers, V2, P233, DOI 10.1023/A:1026500224101
   Rostami P, 2023, INFORM PROCESS MANAG, V60, DOI 10.1016/j.ipm.2022.103144
   Rostami P, 2021, EXPERT SYST APPL, V181, DOI 10.1016/j.eswa.2021.115044
   Rothwell JT., 2015, Defining Skilled Technical Work, DOI [10.2139/ssrn.2709141, DOI 10.2139/SSRN.2709141]
   Rubin J, 2016, PROC INT CONF SOFTW, P982, DOI 10.1145/2884781.2884871
   Steinmacher I., 2013, Comput Support Coop Work, V04, P22, DOI [10.1007/s1060601291644, DOI 10.1007/S1060601291644]
   Tarafdar M, 2007, J STRATEGIC INF SYST, V16, P353, DOI 10.1016/j.jsis.2007.09.001
   Tranfield D, 2003, BRIT J MANAGE, V14, P207, DOI 10.1111/1467-8551.00375
   Tuarob S, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09966-4
   Vadlamani SL, 2020, PROC IEEE INT CONF S, P312, DOI 10.1109/ICSME46990.2020.00038
   Vergne M, 2014, LECT NOTES COMPUT SC, V8484, P196, DOI 10.1007/978-3-319-07881-6_14
   Wang XZ, 2018, J COMPUT SCI TECH-CH, V33, P625, DOI 10.1007/s11390-018-1845-0
   Wohlin C., 2014, P 18 INT C EV ASS SO, DOI DOI 10.1145/2601248.2601268
   Wohlin C, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106908
   Xie XQ, 2022, IEEE T SOFTWARE ENG, V48, P4357, DOI 10.1109/TSE.2021.3117590
   Zhang HF, 2010, PROCEEDINGS OF THE SECOND INTERNATIONAL POSTGRADUATE CONFERENCE ON INFRASTRUCTURE AND ENVIRONMENT, VOL 2, P111, DOI 10.1109/SOLI.2010.5551598
   Zhang XH, 2017, LECT NOTES COMPUT SC, V10221, P3, DOI 10.1007/978-3-319-56856-0_1
   Zhang ZY, 2020, EMPIR SOFTW ENG, V25, P859, DOI 10.1007/s10664-019-09755-0
NR 55
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUL 15
PY 2024
DI 10.1002/smr.2713
EA JUL 2024
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YT8Z1
UT WOS:001270842200001
DA 2024-08-05
ER

PT J
AU Nayebi, M
   Adams, B
AF Nayebi, Maleknaz
   Adams, Bram
TI Image-based communication on social coding platforms
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE data science; image processing; machine learning; social coding;
   software analytics; software engineering
ID CODE
AB Visual content in the form of images and videos has taken over general-purpose social networks in a variety of ways, streamlining and enriching online communications. We are interested to understand if and to what extent the use of images is popular and helpful in social coding platforms. We mined 9 years of data from two popular software developers' platforms: the Mozilla issue tracking system, that is, Bugzilla, and the most well-known platform for developers' Q/A, that is, Stack Overflow. We further triangulated and extended our mining results by performing a survey with 168 software developers. We observed that, between 2013 and 2022, the number of posts containing image data on Bugzilla and Stack Overflow doubled. Furthermore, we found that sharing images makes other developers engage more and faster with the content. In the majority of cases in which an image is included in a developer's post, the information in that image is complementary to the text provided. Finally, our results showed that when an image is shared, understanding the content without the information in the image is unlikely for 86.9% of the cases. Based on these observations, we discuss the importance of considering visual content when analyzing developers and designing automation tools.
   Developers increasingly share images on social coding platforms such as Stack Overflow and Bugzilla. These images provide information complementary to the text according to 168 surveyed developers. image
C1 [Nayebi, Maleknaz] York Univ, EXINES Lab, Toronto, ON, Canada.
   [Adams, Bram] Queens Univ, MCIS Lab, Kingston, ON, Canada.
C3 York University - Canada; Queens University - Canada
RP Nayebi, M (corresponding author), York Univ, EXINES Lab, Toronto, ON, Canada.
EM mnayebi@yorku.ca
OI Adams, Bram/0000-0001-7213-4006
FU Natural Sciences and Engineering Research Council of Canada
FX Natural Sciences and Engineering Research Council of Canada
CR Ahmad A, 2020, SECUR COMMUN NETW, V2020, DOI 10.1155/2020/8830683
   Ahmad A, 2018, DATA TECHNOL APPL, V52, P190, DOI 10.1108/DTA-07-2017-0054
   Antoniol G., 2008, P 2008 C CTR ADV STU, P304
   Arnaoudova V, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P949, DOI 10.1109/ICSE.2015.301
   Begel A., 2010, Proceedings of the FSE/SDP workshop on Future of software engineering research, P33, DOI DOI 10.1145/1882362.1882370
   Bird Christian, 2006, INT C SOFTWARE ENG P, P137, DOI DOI 10.1145/1137983.1138016
   Blank G, 2017, AM BEHAV SCI, V61, P741, DOI 10.1177/0002764217717559
   Chen JS, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1202, DOI 10.1145/3368089.3409691
   Chen JS, 2020, PROC INT CONF SOFTW, P322, DOI 10.1145/3377811.3380327
   Chen Z., ASE CROWDSOURCED REP
   Choudhary SR, 2010, 2010 IEEE INT C SOFT, P1
   Cooper N, 2021, ARXIV
   Coppola R, 2019, EMPIR SOFTW ENG, V24, P3205, DOI 10.1007/s10664-019-09722-9
   Dabbish L., 2012, Proc. ACM Computer Supported Cooperative Work, P1277
   Gibbons J., 2011, Nonparametric Statistical Inference, DOI [10.1007/978-3-642-04898-2_420, DOI 10.1007/978-3-642-04898-2_420]
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Haiduc S, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P898, DOI 10.1145/2889160.2891053
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Huo X, 2021, IEEE T SOFTWARE ENG, V47, P1368, DOI 10.1109/TSE.2019.2920771
   Jiang H, 2017, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2017.12
   Johnson P, 2007, INFORM SYST FRONT, V9, P163, DOI 10.1007/s10796-007-9030-y
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Liu D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P492, DOI 10.1109/SANER.2018.8330246
   Lu P, 2017, IEEE INT CON MULTI, P349, DOI 10.1109/ICME.2017.8019400
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Martínez-Ruiz T, 2011, IET SOFTW, V5, P172, DOI 10.1049/iet-sen.2010.0020
   McIntyre K.E., 2014, J SOCIAL MEDIA SOC, V3, P1
   Meyer AN, 2021, IEEE T SOFTWARE ENG, V47, P1872, DOI 10.1109/TSE.2019.2938525
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Moslehi P, 2018, IEEE WORK CONF MIN S, P192, DOI 10.1145/3196398.3196439
   Nayebi M, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P49, DOI 10.1145/3377816.3381723
   Nazar N, 2016, J COMPUT SCI TECH-CH, V31, P883, DOI 10.1007/s11390-016-1671-1
   Polisetty S, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P16, DOI 10.1145/3345629.3345632
   Ponzanelli Luca, 2019, IEEE Transactions on Software Engineering, V45, P464, DOI 10.1109/TSE.2017.2779479
   Semenenko N, 2013, PROC IEEE INT CONF S, P528, DOI 10.1109/ICSM.2013.88
   Sheskin DJ., 2003, Handbook of parametric and nonparametric statistical procedures
   Squire M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P219, DOI 10.1109/ICSE.2015.150
   Stocco A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P503, DOI 10.1145/3236024.3236063
   Storey M.-A., 2014, FUTURE SOFTWARE ENG, P100
   Storey MA., 2010, P FSE SDP WORKSH FUT, P359, DOI DOI 10.1145/1882362.1882435
   Storey MA, 2021, IEEE T SOFTWARE ENG, V47, P2125, DOI 10.1109/TSE.2019.2944354
   Streitz N. A., 1994, Transcending Boundaries, CSCW '94. Proceedings of the Conference on Computer Supported Cooperative Work, P345, DOI 10.1145/192844.193044
   Tanno H, 2020, J INFORM PROCESS, V28, P268
   Truong Ho-Quang, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P399, DOI 10.1109/APSEC.2014.65
   Wang JJ, 2019, INFORM SOFTWARE TECH, V110, P139, DOI 10.1016/j.infsof.2019.03.003
   White TD, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P307, DOI 10.1145/3293882.3330551
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zakari A, 2020, INFORM SOFTWARE TECH, V124, DOI 10.1016/j.infsof.2020.106312
   Zhao DH, 2020, PROC INT CONF SOFTW, P1286, DOI 10.1145/3377811.3380411
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
NR 53
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD MAY
PY 2024
VL 36
IS 5
AR e2609
DI 10.1002/smr.2609
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PW3G9
UT WOS:001217074500016
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Ignaim, K
   Fernandes, JM
AF Ignaim, Karam
   Fernandes, Joao M.
TI Improving an emergency repair process with feature models
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE emergency repair process; feature model; urgent change request
AB Whenever an emergency occurs, such as a change in the system operating environment that prevents regular functioning, one possibility to restore the system to normal operation is to perform immediately the emergency repair process (ERP). This paper introduces the feature-based emergency repair process (FbERP), which constitutes a feature-based improvement/extension to ERP. FbERP uses feature models to represent urgent change requests (UCRs) and traces each change to its location in the code base in order to realign documentation and code. Based on real-world change requests, we evaluated the proposed process using different techniques, including an empirical case study and a small survey. In the empirical case study, we compare FbERP with respect to ERP to check the effectiveness, efficiency, and usability of the proposed process. The results of the evaluation reveal that FbERP can be successfully used by software engineers to respond to UCRs, with an improvement over ERP.
   We introduce the feature-based emergency repair process (FbERP), an improvement to the traditional emergency repair process (ERP). FbERP uses feature models to represent urgent change requests and traces each change to its location in the code.To check the effectiveness, efficiency, and usability of FbERP, we used a case study to compared it with respect to the ERP.FbERP can be successfully used by software engineers to respond to UCRs, with an improvement over the ERP.image
C1 [Ignaim, Karam] Al Balqa Appl Univ BAU, Prince Abdullah bin Ghazi Fac Informat & Commun Te, Dept Software Engn, As Salt, Jordan.
   [Fernandes, Joao M.] Univ Minho, Ctr ALGORITMI, Dept Informat, Braga, Portugal.
C3 Al-Balqa Applied University; Universidade do Minho
RP Ignaim, K (corresponding author), Al Balqa Appl Univ BAU, Prince Abdullah bin Ghazi Fac Informat & Commun Te, Dept Software Engn, As Salt, Jordan.
EM karam.ignaim@bau.edu.jo
FU FCT-Fundacao para a Ciancia e Tecnologia [UIDB/00319/2020]
FX We would like to thank the companies for taking part in the evaluation
   process. The case study would not be complete without their continuous
   support and cooperation. This work was supported by FCT-Fundacao para a
   Ciancia e Tecnologia within the R&D Units Project Scope UIDB/00319/2020.
CR Acher M., 2009, Composing feature models, P62, DOI [10.1007/978-3-642-12107-46, DOI 10.1007/978-3-642-12107-46]
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Botterweck G., 2010, EvoFM: Featuredriven planning of productline evolution, P24, DOI [10.1145/1808937.1808941, DOI 10.1145/1808937.1808941]
   Clotet R., 2008, Dealing with changes in serviceoriented computing through integrated goal and variability modelling, P43
   Efe P, 2019, COMPUT STAND INTER, V66, DOI 10.1016/j.csi.2019.04.012
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Gomaa H, 2004, LECT NOTES COMPUT SC, V3014, P435
   Guo JM, 2010, LECT NOTES COMPUT SC, V6287, P451
   Hallsteinsen S, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P141
   Heydari M, 2022, MATHEMATICS-BASEL, V10, DOI 10.3390/math10152784
   Ignaim K, 2024, SCI COMPUT PROGRAM, V234, DOI 10.1016/j.scico.2024.103087
   Ignaim KM, 2022, INT J COMPUT APPL T, V70, P225, DOI 10.1504/IJCAT.2022.130881
   Jin M, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P1646, DOI 10.1145/3611643.3613892
   LACROIX M, 1989, ACM SIGSOFT, V17, P122, DOI 10.1145/72910.73357
   Maâzoun J, 2016, J KING SAUD UNIV-COM, V28, P364, DOI 10.1016/j.jksuci.2016.01.005
   Motwani M, 2018, EMPIR SOFTW ENG, V23, P2901, DOI [10.1007/s10664-017-9550-0, 10.1145/3180155.3182533]
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Sancak IE, 2023, J ENVIRON MANAGE, V330, DOI 10.1016/j.jenvman.2022.117165
   She S, 2014, INFORM SOFTWARE TECH, V56, P1122, DOI 10.1016/j.infsof.2014.01.012
   Siebert S., 2015, Change Management: A Guide to Effective Implementation
   Silva RK., 2023, An approach based on machine learning for predicting software design problems, P53, DOI [10.1145/3592813.3592888, DOI 10.1145/3592813.3592888]
   Sommerville I., 2011, Software engineering, V9th ed.
   Stojanov Z., 2008, An approach in modifying submission phase of change request process, DOI [10.1109/SISY.2008.4664923, DOI 10.1109/SISY.2008.4664923]
   Wohlin Claes, 2000, Experimentation in Software Engineering: An Introduction
NR 24
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUN 15
PY 2024
DI 10.1002/smr.2701
EA JUN 2024
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UK2K4
UT WOS:001247885200001
DA 2024-08-05
ER

PT J
AU Cavalcante, E
   Batista, T
   Oquendo, F
AF Cavalcante, Everton
   Batista, Thais
   Oquendo, Flavio
TI Looking back and forward: A retrospective and future directions on
   software engineering for systems-of-systems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE scientometric analysis; scoping review; software engineering;
   systems-of-systems
ID STATISTICAL-MODEL CHECKING; SCOPING REVIEWS; VERIFICATION
AB Modern systems are increasingly connected and more integrated with other existing systems, giving rise to systems-of-systems (SoS). An SoS consists of a set of independent, heterogeneous systems that interact to provide new functionalities and accomplish global missions through emergent behavior manifested at runtime. The distinctive characteristics of SoS, when contrasted to traditional systems, pose significant research challenges within software engineering. These challenges motivate the need for a paradigm shift and the exploration of novel approaches for designing, developing, deploying, and evolving these systems. The International Workshop on Software Engineering for Systems-of-Systems (SESoS) series started in 2013 to fill a gap in scientific forums addressing SoS from the software engineering perspective, becoming the first venue for this purpose. This article presents a study aimed at outlining the evolution and future trajectory of software engineering for SoS based on the examination of 57 papers spanning the 11 editions of the SESoS workshop (2013-2023). The study combined scoping review and scientometric analysis methods to categorize and analyze the research contributions concerning temporal and geographic distribution, topics of interest, research methodologies employed, application domains, and research impact. Based on such a comprehensive overview, this article discusses current and future directions in software engineering for SoS.
   This article outlines the evolution and future trajectory of software engineering for systems-of-systems (SoS). The study combined scoping review and scientometric analysis to examine 57 papers spanning 11 editions of the International Workshop on Software Engineering for Systems-of-Systems (SESoS) from 2013 to 2023, also discussing current and future research directions in this field. image
C1 [Cavalcante, Everton; Batista, Thais] Univ Fed Rio Grande do Norte, Natal, Brazil.
   [Oquendo, Flavio] Univ Bretagne Sud, IRISA UMR CNRS, Vannes, France.
   [Cavalcante, Everton] Univ Fed Rio Grande do Norte URFN, Inst Metropole Digital, Campus Univ Lagoa Nova, BR-59078900 Natal, RN, Brazil.
C3 Universidade Federal do Rio Grande do Norte
RP Cavalcante, E (corresponding author), Univ Fed Rio Grande do Norte URFN, Inst Metropole Digital, Campus Univ Lagoa Nova, BR-59078900 Natal, RN, Brazil.
EM everton.cavalcante@ufrn.br
RI Cavalcante, Everton/J-6229-2013
OI Cavalcante, Everton/0000-0002-2475-5075
CR Agha G, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3158668
   Aksnes DW, 2003, SCIENTOMETRICS, V56, P235, DOI 10.1023/A:1021919228368
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Olivero MA, 2019, 2019 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND 13TH WORKSHOP ON DISTRIBUTED SOFTWARE DEVELOPMENT, SOFTWARE ECOSYSTEMS AND SYSTEMS-OF-SYSTEMS (SESOS-WDES 2019), P62, DOI 10.1109/SESoS/WDES.2019.00017
   [Anonymous], 2019, ISO/IEC/IEEE 21841:2019
   [Anonymous], 2012, ACM Computing Classification
   [Anonymous], 2019, Handbook of Software Engineering, P399, DOI [10.1007/978-3-030-00262-6\_11, 10.1007/978-3-030-00262-6_11, DOI 10.1007/978-3-030-00262-6_11]
   Arcaini P, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P13, DOI 10.1109/SEAMS.2015.10
   Arksey H., 2005, INT J SOC RES METHOD, V8, P19, DOI [10.1080/1364557032000119616, DOI 10.1080/1364557032000119616, https://doi.org/10.1080/1364557032000119616]
   Axelsson J., 2022, On the concepts of capability and constituent system independence in systemsofsystems, P247
   Azani C., 2009, System of Systems Engineering: Innovations for the 21st Century, P21
   Bandara W, 2015, COMMUN ASSOC INF SYS, V37, P154
   Bencomo N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P199, DOI 10.1145/1810295.1810329
   Bencomo N, 2019, SOFTW SYST MODEL, V18, P3049, DOI 10.1007/s10270-018-00712-x
   Bornmann L, 2008, J DOC, V64, P45, DOI 10.1108/00220410810844150
   Cadavid H, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106202
   Campbell F, 2023, SYST REV-LONDON, V12, DOI 10.1186/s13643-023-02178-5
   Cavalcante E, 2016, LECT NOTES COMPUT SC, V9839, P185, DOI 10.1007/978-3-319-48992-6_14
   Cavalcante E, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, P231, DOI 10.1109/ICAC.2015.43
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Dahmann JS, 2008, 2008 2ND ANNUAL IEEE SYSTEMS CONFERENCE, P133
   Dakkak A, 2023, INFORM SOFTWARE TECH, V159, DOI 10.1016/j.infsof.2023.107200
   Dalibor M, 2022, J SYST SOFTWARE, V193, DOI 10.1016/j.jss.2022.111361
   de Lemos Rogerio, 2017, Software Engineering for Self-Adaptive Systems III. Assurances. International Seminar. Revised Selected and Invited Papers: LNCS 9640, P3, DOI 10.1007/978-3-319-74183-3_1
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   El Hachem J, 2016, ASIA PAC SOFWR ENG, P89, DOI [10.1109/APSEC.2016.023, 10.1109/APSEC.2016.52]
   Elhabbash A, 2019, ACM T AUTON ADAP SYS, V14, DOI 10.1145/3347269
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Eramo R, 2022, IEEE SOFTWARE, V39, P39, DOI 10.1109/MS.2021.3130755
   Fernandes J., 2022, iSys Brazilian J Inform Syst, V15
   Fernandes J., 2019, A conceptual model for systemsofinformation systems
   Ferreira FHC, 2024, J SYST SOFTWARE, V211, DOI 10.1016/j.jss.2024.112010
   Ferreira FHC, 2023, INFORM SOFTWARE TECH, V158, DOI 10.1016/j.infsof.2023.107186
   Fredericks EM, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P17, DOI 10.1145/2593929.2593937
   Garousi V., 2020, Contemporary Empirical Methods in Software Engineering, P385, DOI [10.1007/978-3-030-32489-6_14, DOI 10.1007/978-3-030-32489-6_14]
   Garousi V, 2016, INFORM SOFTWARE TECH, V71, P108, DOI 10.1016/j.infsof.2015.11.003
   Gonçcalves MB, 2014, IEEE SYS MAN CYBERN, P1605, DOI 10.1109/SMC.2014.6974145
   Graciano Neto VV., 2017, J Brazilian Comput Soc, V23
   Graciano Neto VV., 2018, Modelbased engineering simulation of softwareintensive systemsofsystems: experience report and lessons learned
   Grant MJ, 2009, HEALTH INFO LIBR J, V26, P91, DOI 10.1111/j.1471-1842.2009.00848.x
   Grinv AV., 2020, The disadvantages of using scientometric indicators in the digital age
   Guessi M., 2016, Checking the architectural feasibility of systemsofsystems using formal descriptions
   Guessi M, 2020, SOFTW SYST MODEL, V19, P741, DOI 10.1007/s10270-019-00764-7
   Guessi M, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1433, DOI 10.1145/2695664.2695795
   Harzing A., 2008, Ethics in Science and Environmental Politics, V8, P61, DOI 10.3354/esep00076
   Heinrich J., 2023, Industry voices on software engineering challenges in dynamic systems of systems, P58
   Henshaw M., 2023, Guide to the Systems Engineering Body of Knowledge (SEBoK), P717
   Heo S, 2022, HUM SOC SCI COMMUN, V9, DOI 10.1057/s41599-022-01466-0
   Holten D, 2006, IEEE T VIS COMPUT GR, V12, P741, DOI 10.1109/TVCG.2006.147
   Inocncio TJ., 2019, Emergent behavior in systemofsystems: a systematic mapping study, P140
   ISO/IEC/IEEE, 2022, Software, systems and enterprisearchitecture description
   ISO/IEC/IEEE 21840:2019, 2019, Systems and software engineeringguidelines for the utilization of ISO/IEC/IEEE 15288 in the context of system of systems (SoS)
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kitchenham B, 2023, IEEE T SOFTWARE ENG, V49, P1273, DOI 10.1109/TSE.2022.3174092
   Kopetz Hermann, 2016, Cyber-Physical Systems of Systems. Foundations - a Conceptual Model and Some Derivations: the AMADEOS Legacy. LNCS 10099, P73, DOI 10.1007/978-3-319-47590-5_3
   Kounev Samuel, 2017, Self-Aware Computing Systems, P3, DOI [10.1007/978-3-319-47474-8_1, DOI 10.1007/978-3-319-47474-81]
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Lana CA., 2016, Systemsofsystems development: initiatives, trends, and challenges
   Lana CA, 2019, IEEE SYST J, V13, P2201, DOI 10.1109/JSYST.2018.2874061
   Legay A, 2015, ERCIM NEWS, P31
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Lewis GA., 2009, Requirements engineering for systems of systems
   Luna S, 2013, PROCEDIA COMPUT SCI, V20, P298, DOI 10.1016/j.procs.2013.09.276
   Maier M. W., 1998, Systems Engineering, V1, P267, DOI DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D
   Manzano W, 2020, COMPUT J, V63, P709, DOI 10.1093/comjnl/bxz028
   Martin J., 2023, 2023 18 ANN SYST SYS, P1
   Michael JB, 2020, COMPUTER, V53, P81, DOI 10.1109/MC.2020.2978567
   Mingers J, 2015, EUR J OPER RES, V246, P1, DOI 10.1016/j.ejor.2015.04.002
   Mohsin A, 2020, IEEE ACCESS, V8, P177580, DOI 10.1109/ACCESS.2020.3025934
   Molléri JS, 2018, SCIENTOMETRICS, V117, P1453, DOI 10.1007/s11192-018-2907-3
   Motus L., 2012, 2012 7th International Conference on System of Systems Engineering (SoSE 2012). Proceedings, P422, DOI 10.1109/SYSoSE.2012.6384148
   Munn Z, 2018, BMC MED RES METHODOL, V18, DOI 10.1186/s12874-017-0468-4
   Nelson T, 2020, IEEE SYST J, V14, P3844, DOI 10.1109/JSYST.2019.2935984
   Neves VD, 2018, 2018 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS (SESOS 2018), P29, DOI 10.1145/3194754.3194758
   Nielsen CB, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2794381
   Olivero MA, 2024, INT J INF SECUR, V23, P787, DOI 10.1007/s10207-023-00757-0
   Oquendo F., 2018, On the emergent behavior oxymoron of systemofsystems architecture description
   Oquendo F., 2018, A formal approach for architecting softwareintensive systemsofsystems with guarantees, P14
   Oquendo F, 2016, IEEE INT C ENG COMP, P13, DOI [10.1109/ICECCS.2016.35, 10.1109/ICECCS.2016.012]
   Oquendo F, 2016, LECT NOTES COMPUT SC, V9839, P3, DOI 10.1007/978-3-319-48992-6_1
   Peters MDJ, 2020, JBI EVID SYNTH, V18, P2119, DOI 10.11124/JBIES-20-00167
   Petersen K., 2008, P 12 INT C EVALUATIO, P68, DOI DOI 10.14236/EWIC/EASE2008.8
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pham MT, 2014, RES SYNTH METHODS, V5, P371, DOI 10.1002/jrsm.1123
   Quilbeuf J, 2016, LECT NOTES COMPUT SC, V9952, P806, DOI 10.1007/978-3-319-47166-2_56
   Ralph P, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1632, DOI 10.1145/3540250.3560877
   Raynaud M, 2021, BMC MED RES METHODOL, V21, DOI 10.1186/s12874-021-01404-9
   Rivera LF., 2020, On the engineering of IoTintensive digital twin software systems, P631
   Saleh Majd, 2015, IC3K 2015. 7th International Joint Conference on Knowledge Discovery, Knowledge Engineering and Knowledge Management, P193
   Santos DS, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3519020
   Santos Rodrigo, 2023, ACM SIGSOFT Software Engineering Notes, P24, DOI 10.1145/3587062.3587070
   Santos R, 2024, INFORM SOFTWARE TECH, V165, DOI 10.1016/j.infsof.2023.107335
   Sawyer P., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P95, DOI 10.1109/RE.2010.21
   Seo D, 2016, 2016 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS (SESOS), P12, DOI [10.1109/SESoS.2016.011, 10.1145/2897829.2897833]
   Silva E, 2020, SCI COMPUT PROGRAM, V192, DOI 10.1016/j.scico.2020.102425
   Silva S, 2024, ACM T AUTON ADAP SYS, V19, DOI 10.1145/3627163
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   VanRaan AFJ, 1997, SCIENTOMETRICS, V38, P205, DOI 10.1007/BF02461131
   Wang MY, 2011, SCIENTOMETRICS, V87, P695, DOI 10.1007/s11192-011-0366-1
   Weyns Danny, 2021, An Introduction to Selfadaptive Systems: A Contemporary Software Engineering Perspective
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2014, P 18 INT C EV ASS SO, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   Wong TRC, 2022, INFORM SOFTWARE TECH, V148, DOI 10.1016/j.infsof.2022.106934
   Zeigler BP., 2019, Engineering Emergence: A Modeling and Simulation Approach, P45
NR 104
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUN 9
PY 2024
DI 10.1002/smr.2697
EA JUN 2024
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TK0X6
UT WOS:001241050500001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Shen, CC
   Yang, WH
   Jia, HT
   Pan, MX
   Zhou, Y
AF Shen, Chaochao
   Yang, Wenhua
   Jia, Haitao
   Pan, Minxue
   Zhou, Yu
TI Richen: Automated enrichment of Git documentation with usage examples
   and scenarios
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE crowd knowledge; documentation; Git commands; stack overflow; usage
   examples; version control systems
AB As the predominant modern version control system, Git has become an indispensable tool for both commercial and open-source software projects. It substantially improves software development effectiveness and efficiency through its distributed version control system, fostering seamless collaboration among teams and across locations. However, research has found that many developers have doubts about using Git commands, while the official Git documentation is rather scanty, that is, lacking sufficient explanations and examples. To help developers learn and use Git commands, we propose the first approach (Richen) for enriching Git documentation with usage examples and scenarios by leveraging crowd knowledge from Stack Overflow. Richen retrieves Git-related posts from Stack Overflow, extracts relevant Q&A pairs, and selects representative command usages, including usage examples and scenarios, for different Git commands. Experimental results have shown that Richen can extract informative and concise command usages for Git commands. Compared with alternative methods adapted from API usage mining, the command usages obtained by Richen have significant advantages in terms of relevance, readability, and usability. Furthermore, we have shown through an empirical study that the command usages extracted by Richen can better help developers complete Git command-related tasks.
   Richen, an innovative approach, enhances Git documentation by incorporating usage examples and scenarios from Stack Overflow, improving developers' understanding and application of Git commands. The empirical study confirms that Richen's crowd-sourced content significantly outperforms alternative methods, offering more relevant, readable, and practical Git command usages. image
C1 [Shen, Chaochao; Yang, Wenhua; Jia, Haitao; Zhou, Yu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
   [Pan, Minxue] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Pan, Minxue] Nanjing Univ, Software Inst, Nanjing, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University;
   Nanjing University
RP Yang, WH (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
EM ywh@naa.edu.cn
FU National Natural Science Foundation of China; Collaborative Innovation
   Center of Novel Software Technology and Industrialization;  [61972197]; 
   [61972193]
FX This work was supported by the National Natural Science Foundation of
   China (Nos. 61972197 and 61972193) and the Collaborative Innovation
   Center of Novel Software Technology and Industrialization.
CR Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Ahasanuzzaman M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P402, DOI 10.1145/2901739.2901770
   [Anonymous], Quora
   [Anonymous], 2022, Stack Overflow Data Dump
   [Anonymous], 2011, Stack Overflow
   [Anonymous], 2010, Stack Overflow
   [Anonymous], 2013, Stack-Overflow
   [Anonymous], 2008, Stack Overflow
   [Anonymous], 2022, Git Documentation
   [Anonymous], 2009, Stack Overflow
   Azad S, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/2990497
   Becker L.A., 2000, Effect size (es)
   Bennett S., 2012, 10 things I hate about git
   Buse Raymond PL, 2010, P IEEEACM INT C AUTO, P33
   Chacon S., 2014, Pro git
   Chen Y., 2015, Convolutional neural network for sentence classification
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   De Rosso SantiagoPerez., 2013, ONWARD 13, P37, DOI DOI 10.1145/2509578.2509584
   De Souza L. B. L., 2014, P IEEE INT C PROG CO, P72, DOI DOI 10.1145/2597008.2597146
   Ding W, 2014, INFORM SOFTWARE TECH, V56, P545, DOI 10.1016/j.infsof.2014.01.008
   Frey BJ, 2007, SCIENCE, V315, P972, DOI 10.1126/science.1136800
   Gao Q, 2015, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2015.81
   Gao ZP, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3412845
   Guy I, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P987, DOI 10.1145/3038912.3052632
   Nguyen HL, 2018, COMPUT SUPP COOP W J, V27, P741, DOI 10.1007/s10606-018-9323-3
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Phan H, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P632, DOI 10.1145/3180155.3180230
   Jansen A, 2009, J SYST SOFTWARE, V82, P1232, DOI 10.1016/j.jss.2009.04.052
   Ji T, 2020, PROC INT SYMP SOFTW, P70, DOI 10.1109/ISSRE5003.2020.00016
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Johnson DE, 2010, WIRES COMPUT STAT, V2, P620, DOI 10.1002/wics.109
   Kim J, 2013, ACM T INFORM SYST, V31, DOI [10.1145/2414782.2414783, 10.5763/kjsm.2013.31.1.1]
   Lin B, 2021, INT C PROGRAM COMPRE, P36, DOI 10.1109/ICPC52881.2021.00013
   Linares-Vásquez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P709, DOI 10.1109/ICSE.2015.229
   Liu SQ, 2022, IEEE T SOFTWARE ENG, V48, P1800, DOI 10.1109/TSE.2020.3038681
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Meldrum S., 2020, Exploring research interest in stack overflow-a systematic mapping study and quality evaluation
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, DOI 10.48550/ARXIV.1301.3781]
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Nugroho YS, 2020, EMPIR SOFTW ENG, V25, P790, DOI 10.1007/s10664-019-09772-z
   Pasquier N, 1999, LECT NOTES COMPUT SC, V1540, P398
   Raglianti M, 2022, PROC IEEE ACM INT C, P297, DOI [10.1109/ICSE-Companion55297.2022.9793831, 10.1145/3510454.3517068]
   Ren XX, 2020, PROC INT CONF SOFTW, P925, DOI 10.1145/3377811.3380430
   Rubei R, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106367
   Shaohua Wang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P321, DOI 10.1109/MSR.2019.00058
   Silva RFG, 2019, INT C PROGRAM COMPRE, P358, DOI 10.1109/ICPC.2019.00054
   Souza LBL, 2019, INFORM SOFTWARE TECH, V111, P37, DOI 10.1016/j.infsof.2019.03.009
   Tang H., 2023, Evaluating software documentation quality, P67
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Uddin G., 2017, Resolving API mentions in informal documents
   Uddin G, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3439769
   Uddin G, 2021, IEEE T SOFTWARE ENG, V47, P522, DOI 10.1109/TSE.2019.2900245
   Uddin G, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106277
   Wu D, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10235-1
   Wu D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09962-8
   Xia PP, 2015, INFORM SCIENCES, V307, P39, DOI 10.1016/j.ins.2015.02.024
   Xie XY, 2016, PROC INT CONF SOFTW, P808, DOI 10.1145/2884781.2884834
   Xu SB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3975
   Yang WH, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3494518
   Yin PC, 2018, IEEE WORK CONF MIN S, P476, DOI 10.1145/3196398.3196408
   Zhai J, 2020, PROC INT CONF SOFTW, P1359, DOI 10.1145/3377811.3380427
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang JX, 2021, IEEE T SOFTWARE ENG, V47, P1299, DOI 10.1109/TSE.2019.2919304
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
NR 67
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 MAR 13
PY 2024
DI 10.1002/smr.2662
EA MAR 2024
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LC2B2
UT WOS:001184503400001
DA 2024-08-05
ER

PT J
AU Cai, J
   Cai, Q
   Li, B
   Zhang, JL
   Sun, XB
AF Cai, Jie
   Cai, Qian
   Li, Bin
   Zhang, Jiale
   Sun, Xiaobing
TI Application programming interface recommendation for smart contract
   using deep learning from augmented code representation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE API recommendation; deep learning; smart contract; static analysis
AB Application programming interface (API) recommendation plays a crucial role in facilitating smart contract development by providing developers with a ranked list of candidate APIs for specific recommendation points. Deep learning-based approaches have shown promising results in this field. However, existing approaches mainly rely on token sequences or abstract syntax trees (ASTs) for learning recommendation point-related features, which may overlook the essential knowledge implied in the relations between or within statements and may include task-irrelevant components during feature learning. To address these limitations, we propose a novel code graph called pruned and augmented AST (pa-AST). Our approach enhances the AST by incorporating additional knowledge derived from the control and data flow relations between and within statements in the smart contract code. Through this augmentation, the pa-AST can better represent the semantic features of the code. Furthermore, we conduct AST pruning to eliminate task-irrelevant components based on the identified flow relations. This step helps mitigate the interference caused by these irrelevant parts during the model feature learning process. Additionally, we extract the API sequence surrounding the recommendation point to provide supplementary knowledge for the model learning. The experimental results demonstrate our proposed approach achieving an average mean reciprocal rank (MRR) of 68.02%, outperforming the baselines' performance. Furthermore, through ablation experiments, we explore the effectiveness of our proposed code representation approach. The results indicate that combining pa-AST with the API sequence yields improved performance compared with using them individually. Moreover, our AST augmentation and pruning techniques significantly contribute to the overall results.
   This paper proposes a learning-based approach for API recommendation in smart contracts. We propose a code graph named pruned and augmented AST (pa-AST) with the API sequence to capture the semantic features surrounding recommendation points. Meanwhile, we utilize a GAT-based model for code feature learning and API recommendation. image
C1 [Cai, Jie; Cai, Qian; Li, Bin; Zhang, Jiale; Sun, Xiaobing] Yangzhou Univ, Sch Informat Engn, Yangzhou, Peoples R China.
C3 Yangzhou University
RP Li, B (corresponding author), Yangzhou Univ, Sch Informat Engn, Yangzhou, Peoples R China.
EM lb@yzu.edu.cn
FU National Natural Science Foundation of China
FX No Statement Available
CR Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   ALN, 2023, ALN smart contract
   Androulaki E, 2018, EUROSYS '18: PROCEEDINGS OF THE THIRTEENTH EUROSYS CONFERENCE, DOI 10.1145/3190508.3190538
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   Bo LL, 2021, CHINESE J ELECTRON, V30, P55, DOI 10.1049/cje.2020.10.010
   Chen C., 2019, Sci China Inform Sci, V62, P1
   Chen C, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10040-2
   Chen C, 2022, IEEE T SOFTWARE ENG, V48, P2987, DOI 10.1109/TSE.2021.3074309
   Chen XP, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P470, DOI 10.1109/SANER50967.2021.00050
   Chen YJ, 2023, IEEE T SOFTWARE ENG, V49, P3289, DOI 10.1109/TSE.2023.3252259
   Chen ZJ, 2021, IEEE INT C S Q R S, P726, DOI 10.1109/QRS54544.2021.00082
   D'Souza AR, 2016, IEEE INT WORK C SO, P51, DOI 10.1109/SCAM.2016.22
   Dannen C., 2017, Introducing ethereum and solidity, DOI [10.1007/978-1-4842-2535-6, DOI 10.1007/978-1-4842-2535-6]
   Dolgui A, 2020, INT J PROD RES, V58, P2184, DOI 10.1080/00207543.2019.1627439
   Ethereum, 2023, Remix IDE
   Etherscan, 2023, Etherscan-the Ethereum Blockchain Explorer
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Grossberg S., 2013, Scholarpedia, V8, P1888, DOI [DOI 10.4249/SCHOLARPEDIA.1888, 10.4249/scholarpedia.1888]
   He XC, 2021, PROC INT CONF SOFTW, P1634, DOI 10.1109/ICSE43902.2021.00145
   Hewa T, 2021, J NETW COMPUT APPL, V177, DOI 10.1016/j.jnca.2020.102857
   Huang Y, 2019, INT C PROGRAM COMPRE, P260, DOI 10.1109/ICPC.2019.00045
   IntelliJ, 2023, Solidity plugin for IntelliJ
   Irsan IC., 2023, Multi-modal API recommendation, P272
   Jain SM., 2023, A Brief Introduction to Web3: Decentralized Web Fundamentals for App Development, P89, DOI [10.1007/978-1-4842-8975-4_5, DOI 10.1007/978-1-4842-8975-4_5]
   Jiang ZG, 2023, IEEE T SERV COMPUT, V16, P1822, DOI 10.1109/TSC.2022.3202081
   JoranHonig, 2022, tree-sitter-solidity
   Khapre S, 2023, INT J INTELL UNMANNE, V11, P75, DOI 10.1108/IJIUS-07-2021-0055
   Kingma D. P., 2014, arXiv
   Krochmalski J., 2014, IntelliJ Idea Essentials
   Li J, 2018, Arxiv, DOI arXiv:1711.09573
   Liu XY, 2018, IEEE INT CONF AUTOM, P282, DOI 10.1145/3238147.3238216
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   OpenZeppelin, 2023, OpenZeppelin library
   Paszke A, 2019, ADV NEUR IN, V32
   Pinkus A., 1999, Acta Numerica, V8, P143, DOI 10.1017/S0962492900002919
   Ren M, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P666, DOI 10.1145/3460319.3469078
   Ren M, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1360, DOI 10.1145/3468264.3473929
   Schär F, 2021, FED RESERVE BANK ST, V103, P153, DOI 10.20955/r.103.153-74
   SROOT, 2023, SROOT smart contract
   Sutskever I., 2011, P 28 INT C MACH LEAR, P1017
   Tang X., 2022, A graph neural network-based code recommendation method for smart contract development, P248
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Veličkovic P, 2018, Arxiv, DOI arXiv:1710.10903
   Wang MJ, 2020, Arxiv, DOI arXiv:1909.01315
   WeBankBlockchain, 2023, WeBankBlockchain library
   Wen FC, 2021, PROC INT CONF SOFTW, P138, DOI 10.1109/ICSE43902.2021.00025
   Xie RS, 2019, PROC INT SYMP SOFTW, P369, DOI 10.1109/ISSRE.2019.00044
   Xu CY, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P119, DOI 10.1109/ICSE-Companion.2019.00053
   Xu CY, 2018, J SYST SOFTWARE, V142, P195, DOI 10.1016/j.jss.2018.04.060
   Yu Y, 2019, NEURAL COMPUT, V31, P1235, DOI 10.1162/neco_a_01199
   Zhang YY, 2019, IEEE INTERNET THINGS, V6, P1594, DOI 10.1109/JIOT.2018.2847705
   Zhou Y, 2023, SCI CHINA INFORM SCI, V66, DOI 10.1007/s11432-021-3529-9
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 55
TC 0
Z9 0
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 MAR 3
PY 2024
DI 10.1002/smr.2658
EA MAR 2024
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JZ7U4
UT WOS:001177053200001
DA 2024-08-05
ER

PT J
AU Zhang, C
   Wang, XL
   Chen, JF
   Cai, SH
   Sosu, RNA
AF Zhang, Chi
   Wang, Xiaoli
   Chen, Jinfu
   Cai, Saihua
   Nii Ayitey Sosu, Rexford
TI A novel defect prediction method based on semantic feature enhancement
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE cross-project defect prediction; defect prediction; self-attentive
   mechanism; semantic feature enhancement
AB Although cross-project defect prediction (CPDP) techniques that use traditional manual features to build defect prediction model have been well-developed, they usually ignore the semantic and structural information inside the program and fail to capture the hidden features that are critical for program category prediction, resulting in poor defect prediction results. Researchers have proposed using deep learning to automatically extract the semantic features of programs and fuse them with traditional features as training data. However, in practice, it is important to explore the effective representation of the semantic features in the programs and how the fusion of a reasonable ratio between the two types of features can maximize the effectiveness of the model. In this paper, we propose a semantic feature enhancement-based defect prediction framework (SFE-DP), which augments the semantic feature set extracted from the program code with data. We also introduce a layer of self-attentive mechanism and a matching layer to filter low-efficiency and non-critical semantic features in the model structure. Finally, we combine the idea of hybrid loss function to iteratively optimize the model parameters. Extensive experiments validate that SFE-DP can outperform the baseline approaches on 90 pairs of CPDP tasks formed by 10 open-source projects.
   We propose a semantic feature enhancement-based defect prediction framework (SFE-DP), which enriches the training data with procedural enhancement semantic information to improve the learning capability of the model.We propose a deep model-based defect prediction framework that adds a self-attentive mechanism layer and a matching layer to a deep transfer learning model that uses a hybrid loss function-based feature representation learning method for parameter optimization.We evaluated the defect prediction of SFE-DP on 10 open-source projects and SFE-DP has the better prediction performance compared to traditional cross-project defect prediction (CPDP) parties in terms of area under curve (AUC) as well as F1-measure metrics.image
C1 [Zhang, Chi; Wang, Xiaoli; Chen, Jinfu; Cai, Saihua; Nii Ayitey Sosu, Rexford] Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang 212013, Peoples R China.
   [Zhang, Chi; Wang, Xiaoli; Chen, Jinfu; Cai, Saihua] Jiangsu Univ, Jiangsu Key Lab Secur Technol Ind Cyberspace, Zhenjiang, Peoples R China.
   [Nii Ayitey Sosu, Rexford] Ghana Commun Technol Univ, Fac Comp & Informat Syst, Accra, Ghana.
C3 Jiangsu University; Jiangsu University
RP Chen, JF (corresponding author), Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang 212013, Peoples R China.
EM jinfuchen@ujs.edu.cn
RI Sosu, Rexford Nii Ayitey/AAE-4943-2020
OI Sosu, Rexford Nii Ayitey/0000-0001-5527-5114; Chen,
   Jinfu/0000-0002-3124-5452
FU National Natural Science Foundation of China; National Key R&D Program
   of China [2020YFB1005500]; Natural Science Foundation of Jiangsu
   Province, China [BK20220515]; Jiangsu Province Qinglan Project; Graduate
   Research Innovation Project of Jiangsu Province [KYCX21_3375]; 
   [62172194];  [62202206];  [U1836116]
FX This work was partly supported by the National Natural Science
   Foundation of China (grant numbers: 62172194, 62202206, and U1836116),
   the National Key R&D Program of China (grant number: 2020YFB1005500),
   the Natural Science Foundation of Jiangsu Province, China (grant number:
   BK20220515), the Jiangsu Province Qinglan Project, and the Graduate
   Research Innovation Project of Jiangsu Province (grant number:
   KYCX21_3375).
CR Bai JJ, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106985
   Bennin KE, 2022, IET SOFTW, V16, P185, DOI 10.1049/sfw2.12052
   Cabral GG, 2023, IEEE T SOFTWARE ENG, V49, P1342, DOI 10.1109/TSE.2022.3175789
   Cabral GG, 2019, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2019.00076
   Chen HW, 2021, IEEE T SOFTWARE ENG, V47, P2803, DOI 10.1109/TSE.2020.2968520
   Chen JF, 2024, IEEE T RELIAB, DOI 10.1109/TR.2024.3356515
   Chen JF, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2537
   Chen JF, 2022, FRONT INFORM TECH EL, V23, P715, DOI 10.1631/FITEE.2100468
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   [段旭 Duan Xu], 2020, [软件学报, Journal of Software], V31, P3404
   Halstead M.H., 1977, Elements of Software Science (Operating and Programming Systems Series
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Hoa Khanh Dam, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P46, DOI 10.1109/MSR.2019.00017
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Qiu SJ, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9132660
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Shi K, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2330
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Uddin MN, 2022, SOFT COMPUT, V26, P7877, DOI 10.1007/s00500-022-06830-5
   Wang H, 2021, IEEE T RELIAB, V70, P711, DOI 10.1109/TR.2020.3047396
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Weiss Karl, 2016, Journal of Big Data, V3, DOI 10.1186/s40537-016-0043-6
   Xu Z, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P209, DOI 10.1109/SANER.2018.8330210
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yu X, 2017, PROC INT SYMP SOFTW, P78, DOI 10.1109/ISSRE.2017.18
NR 33
TC 0
Z9 0
U1 8
U2 8
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 APR 28
PY 2024
DI 10.1002/smr.2674
EA APR 2024
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OZ8I8
UT WOS:001211186300001
DA 2024-08-05
ER

PT J
AU Hou, F
   Jansen, S
AF Hou, Fang
   Jansen, Slinger
TI A survey of the state-of-the-art approaches for evaluating trust in
   software ecosystems
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE software ecosystem; software trust; trust evaluation
ID TRUSTWORTHINESS EVALUATION; REPUTATION; FRAMEWORK; SYSTEMS
AB Third-party software has streamlined the software engineering process, allowed software engineers to focus on developing more advanced components, and reduced time and cost. This shift has led to software development strategies moving from competition to collaboration, resulting in the concept of software ecosystems, in which internal and external actors work together on shared platforms and place their trust in the ecosystem. However, the increase in shared components has also created challenges, especially in security, as the large dependency trees significantly enlarge a system's attack surface. The situation is made worse by the lack of effective ways to measure and ensure the trustworthiness of these components. In this article, we explore current approaches used to evaluate trust in software ecosystems, focusing on analyzing the specific techniques utilized, the primary factors in trust evaluation, the diverse formats for result presentation, as well as the software ecosystem entities considered in the approaches. Our goal is to provide the status of current trust evaluation approaches, including their limitations. We identify key challenges, including the limited coverage of software ecosystem entities; the objectivity, universality, and environmental impacts of the evaluation approaches; the risk assessment for the evaluation approaches; and the security attacks posed by trust evaluation in these approaches.
   In this article, we explore current approaches used to evaluate trust in software ecosystems, focusing on analyzing the specific techniques utilized, the primary factors in trust evaluation, the diverse formats for result presentation, as well as the software ecosystem entities considered in the approaches. image
C1 [Hou, Fang; Jansen, Slinger] Univ Utrecht, Dept Informat & Comp Sci, Utrecht, Netherlands.
   [Jansen, Slinger] Lappeenranta Univ Technol, Sch Engn Sci, Lappeenranta, Finland.
C3 Utrecht University; Lappeenranta-Lahti University of Technology LUT
RP Hou, F (corresponding author), Univ Utrecht, Dept Informat & Comp Sci, Utrecht, Netherlands.
EM f.hou@uu.nl
RI Jansen, Slinger/Y-4244-2019
OI Jansen, Slinger/0000-0003-3752-2868
CR Adomavicius G, 2005, IEEE T KNOWL DATA EN, V17, P734, DOI 10.1109/TKDE.2005.99
   Alhamad M., 2011, Int J Mach Learn Comput, V1, P416, DOI DOI 10.7763/IJMLC.2011.V1.62
   Alhanahnah M, 2018, FUTURE GENER COMP SY, V79, P488, DOI 10.1016/j.future.2017.09.071
   AMOROSO E, 1991, 1991 IEEE COMPUTER SOCIETY SYMPOSIUM ON RESEARCH IN SECURITY AND PRIVACY, P198
   Artz D, 2007, J WEB SEMANT, V5, P58, DOI 10.1016/j.websem.2007.03.002
   Bao T., 2010, Research on an analysis method for software trustworthiness based on rules, P43
   Carrera-Rivera Angela, 2022, MethodsX, V9, P101895, DOI 10.1016/j.mex.2022.101895
   Chen L., 2010, The model and method of trustworthiness level evaluation for software product, P709
   Cho JH, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3277666
   Cho JH, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2815595
   Clancy C., 2021, MITRE Techn Pap, V24, P01
   Coetzee C, 2013, ACCENTED FUTURES: LANGUAGE ACTIVISM AND THE ENDING OF APARTHEID, P1
   Costante E, 2015, COMPUT INTELL-US, V31, P327, DOI 10.1111/coin.12025
   Deng R., 2019, Int J Performab Eng, V15, P2628
   Ding S., 2008, Research on evaluation index system of trusted software, P1
   Ding S, 2012, KNOWL INF SYST, V33, P171, DOI 10.1007/s10115-011-0442-0
   Ding S, 2012, EXPERT SYST APPL, V39, P2700, DOI 10.1016/j.eswa.2011.08.127
   Fong Elizabeth, 2010, Proceedings of the 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement Companion (SSIRI-C 2010), P32, DOI 10.1109/SSIRI-C.2010.18
   Fu C, 2010, EUR J OPER RES, V206, P601, DOI 10.1016/j.ejor.2010.03.011
   Group TC., 2019, Trusted platform model (tpm) 2.0: a brief introduction
   Guo G., 2014, From ratings to trust: an empirical study of implicit trust in recommender systems, P248
   Han W., 2017, Int J u and e Serv, Sci Technol, V10, P89
   Hong H., 2009, The research of BPM software trustworthy evaluation model, P815
   Hou F., 2023, The role of software trust in selection of opensource and closed software, P30
   Hou F, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10238-y
   Hou F, 2021, LECT NOTES BUS INF P, V423, P121, DOI 10.1007/978-3-030-79022-6_11
   Houser D, 2006, J ECON MANAGE STRAT, V15, P353, DOI 10.1111/j.1530-9134.2006.00103.x
   Hu Y, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-2897-7
   Huynh TD, 2006, AUTON AGENT MULTI-AG, V13, P119, DOI 10.1007/s10458-005-6825-4
   Immonen A, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P316
   Jadhav AS, 2011, J SYST SOFTWARE, V84, P1394, DOI 10.1016/j.jss.2011.03.034
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P1, DOI 10.4337/9781781955635
   Jiang R, 2014, ENTROPY-SWITZ, V16, P4818, DOI 10.3390/e16094818
   Josang A, 2007, DECIS SUPPORT SYST, V43, P618, DOI 10.1016/j.dss.2005.05.019
   Lewen Zhang, 2013, 2013 IEEE Seventh International Conference on Software Security and Reliability Companion (SERE-C), P219, DOI 10.1109/SERE-C.2013.23
   LEWIS JD, 1985, SOC FORCES, V63, P967, DOI 10.2307/2578601
   Li Shi, 2012, Journal of Software, V7, P532, DOI 10.4304/jsw.7.3.532-543
   Li XZ, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111255
   Limam N, 2010, IEEE T SOFTWARE ENG, V36, P559, DOI 10.1109/TSE.2010.2
   Liu Y., 2022, itrusteval: A framework for software trustworthiness evaluation with an intelligent ahpbased method, P1778
   Lu G, 2010, LECT NOTES COMPUT SC, V6407, P219, DOI 10.1007/978-3-642-16576-4_16
   Lu J., 2010, Bizseeker: a hybrid semantic recommendation system for personalized governmenttobusiness eservices
   Lu J, 2015, DECIS SUPPORT SYST, V74, P12, DOI 10.1016/j.dss.2015.03.008
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Meng L., 2009, A perspective of software trustworthiness based on distrustable factors, P873
   Mujahid S., 2022, What are the characteristics of highlyselected packages? A case study on the NPM ecosystem
   Nami M., 2013, Software trustworthiness: past, present and future, P1
   Nami M, 2012, IEEE IND ELEC, P3095, DOI 10.1109/IECON.2012.6389404
   ODonovan J., 2005, P 10 INT C INT US IN, P167, DOI [10.1145/1040830.1040870, DOI 10.1145/1040830.1040870]
   Olmedilla D., 2006, Security and trust issues in semantic grids
   Pal S, 2021, COMPUT NETW, V200, DOI 10.1016/j.comnet.2021.108506
   Paul J., 2023, The tiobe quality indicator, a pragmatic way of measuring code quality
   Paulus S, 2013, LECT NOTES COMPUT SC, V8099, P233
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Ray I, 2004, LECT NOTES COMPUT SC, V3193, P260
   Rosemann M, 2019, LECT NOTES COMPUT SC, V11675, P305, DOI 10.1007/978-3-030-26619-6_20
   Sabater J, 2005, ARTIF INTELL REV, V24, P33, DOI 10.1007/s10462-004-0041-5
   Saini M, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2265
   Sarwar B., 2001, Proceedings of the 10th internationalConference on World Wide Web (Hong Kong, Hong Kong, May 01-05, P285, DOI DOI 10.1145/371920.372071
   Sherchan W, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501661
   Shi L., 2009, The evaluation of software trustworthiness with FAHP and FTOPSIS methods, P1
   Sonatype, 2022, 2022 state of the software supply chain
   Song H., 2010, An entropy based approach for software risk assessment: a perspective of trustworthiness enhancement, P575
   Song Y., 2010, Software trusted comprehensive evaluation model based on fuzzy grey method, P513
   Spanoudakis G., 2007, Dynamic trust assessment of software services, P36
   Su Q., 2010, Evidentiality for text trustworthiness detection, P10
   Sun YL, 2006, 2006 40TH ANNUAL CONFERENCE ON INFORMATION SCIENCES AND SYSTEMS, VOLS 1-4, P1461, DOI 10.1109/CISS.2006.286695
   Tao H., 2022, Software trustworthiness evaluation method based on relationships between criteria, P403
   Tao HW, 2022, SYMMETRY-BASEL, V14, DOI 10.3390/sym14112458
   Tao HW, 2022, J INTERNET TECHNOL, V23, P583, DOI 10.53106/160792642022052303016
   Tao HW, 2022, CONNECT SCI, V34, P1181, DOI 10.1080/09540091.2022.2061424
   Tao HW, 2020, MATHEMATICS-BASEL, V8, DOI 10.3390/math8010014
   Tao HW, 2019, MATHEMATICS-BASEL, V7, DOI 10.3390/math7030237
   Tao HW, 2018, MATH PROBL ENG, V2018, DOI 10.1155/2018/6982821
   Tao HW, 2016, 2016 INTERNATIONAL SYMPOSIUM ON SYSTEM AND SOFTWARE RELIABILITY (ISSSR), P7, DOI 10.1109/ISSSR.2016.20
   Tian JF, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106233
   van Vulpen P., 2023, Decentralized autonomous organization design for the commons and the common good
   van Vulpen P., 2022, Sci Comput Progr, V213, P102722
   Wahab OA, 2015, DECIS SUPPORT SYST, V74, P121, DOI 10.1016/j.dss.2015.04.009
   Wang B., 2010, DS theorybased software trustworthiness classification assessment, P434
   Wang JW, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3408292
   Yan Z., 2008, COMPREHENSIVE TRUST, P1
   Yan Z, 2011, IEEE T DEPEND SECURE, V8, P810, DOI 10.1109/TDSC.2010.47
   Yang J., 2011, A classification evaluation model for software trustworthiness based on trustworthiness evolution, P222
   Yang X, 2018, J COMPUT SCI TECH-CH, V33, P603, DOI 10.1007/s11390-018-1843-2
   Yang Y, 2009, LECT NOTES COMPUT SC, V5543, P389, DOI 10.1007/978-3-642-01680-6_35
   Yonghao Wang, 2013, Journal of Software, V8, P3214, DOI 10.4304/jsw.8.12.3214-3221
   Zhang Q., 2004, A classification scheme for trust functions in reputationbased trust management
   Zhang X, 2012, SCI CHINA INFORM SCI, V55, P2508, DOI 10.1007/s11432-012-4646-z
   Zhang YJ, 2012, 2012 INTERNATIONAL CONFERENCE ON INDUSTRIAL CONTROL AND ELECTRONICS ENGINEERING (ICICEE), P616, DOI 10.1109/ICICEE.2012.167
   Zheng ZM, 2009, SCI CHINA SER F, V52, P1651, DOI 10.1007/s11432-009-0143-4
   Zheng ZM, 2009, SCI CHINA SER F, V52, P1328, DOI 10.1007/s11432-009-0137-2
   Zhiyuan Su, 2013, 2013 IEEE International Conference on Services Computing (SCC), P272, DOI 10.1109/SCC.2013.31
NR 93
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUN 3
PY 2024
DI 10.1002/smr.2695
EA JUN 2024
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SW2I2
UT WOS:001237416300001
OA hybrid
DA 2024-08-05
ER

PT J
AU Papatheocharous, E
   Wohlin, C
   Badampudi, D
   Carlson, J
   Wnuk, K
AF Papatheocharous, Efi
   Wohlin, Claes
   Badampudi, Deepika
   Carlson, Jan
   Wnuk, Krzysztof
TI Context factors perceived important when looking for similar experiences
   in decision-making for software components: An interview study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE components off-the-shelf; context factors; decision experience;
   decision-making; experience source; in-house; open-source software
ID INFORMATION-SEEKING BEHAVIOR; ENGINEERING RESEARCH; IMPACT; COTS
AB During software evolution, decisions related to components' origin or source significantly impact the quality properties of the product and development metrics such as cost, time to market, ease of maintenance, and further evolution. Thus, such decisions should ideally be supported by evidence, i.e., using previous experiences and information from different sources, even own previous experiences. A hindering factor to such reuse of previous experiences is that these decisions are highly context-dependent and it is difficult to identify when previous experiences come from sufficiently similar contexts to be useful in a current setting. Conversely, when documenting a decision (as a decision experience), it is difficult to know which context factors will be most beneficial when reusing the experience in the future. An interview study is performed to identify a list of context factors that are perceived to be most important by practitioners when using experiences to support decision-making for component sourcing, using a specific scenario with alternative sources of experiences. We observed that the further away (from a company or an interviewee) the experience evidence is, as is the case for online experiences, the more context factors are perceived as important by practitioners to make use of the experience. Furthermore, we discuss and identify further research to make this type of decision-making more evidence-based.
   With this interview study, which focuses on which context factors are perceived as important by practitioners when reusing previous knowledge on software component reuse, we contribute with a listing of factors perceived to be important when reusing experiences from other prior decision-making cases of selecting among software components options. image
C1 [Papatheocharous, Efi] RISE Res Inst Sweden, Kista, Sweden.
   [Papatheocharous, Efi; Wohlin, Claes; Badampudi, Deepika; Wnuk, Krzysztof] Blekinge Inst Technol, Karlskrona, Sweden.
   [Carlson, Jan] Malardalen Univ, Vasteras, Sweden.
C3 RISE Research Institutes of Sweden; Blekinge Institute Technology;
   Malardalen University
RP Papatheocharous, E (corresponding author), RISE Res Inst Sweden, Kista, Sweden.
EM efi.papatheocharous@ri.se
FU Knowledge Foundation [20140218]; ORION project; Knowledge Foundation in
   Sweden
FX The work is supported by a research grant for the ORION project
   (reference number 20140218) from the Knowledge Foundation in Sweden.
CR Aghajani E, 2018, PROC IEEE INT CONF S, P727, DOI 10.1109/ICSME.2018.00090
   Badampudi D, 2016, J SYST SOFTWARE, V121, P105, DOI 10.1016/j.jss.2016.07.027
   Baltes S, 2021, Arxiv, DOI [arXiv:2002.07764, DOI 10.48550/ARXIV.2002.07764]
   Basili V.R., 2002, Encyclopedia of Software Eng, DOI [10.1002/0471028959.sof110, DOI 10.1002/0471028959.SOF110]
   Basili V, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.290110216
   Bedjeti A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P117, DOI 10.1109/ICSA.2017.26
   Bi TT, 2018, ASIA PAC SOFWR ENG, P49, DOI 10.1109/APSEC.2018.00019
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   Borg M, 2017, INT C PROGRAM COMPRE, P12, DOI 10.1109/ICPC.2017.20
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Carlson J, 2016, PROCEEDINGS 2016 1ST INTERNATIONAL WORKSHOP ON DECISION MAKING IN SOFTWARE ARCHITECTURE, P9, DOI 10.1109/MARCH.2016.6
   Cartaxo B., 2015, Mechanisms to characterize context of empirical studies in software engineering, P281
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Devanbu P, 2018, IEEE SOFTWARE, V35, P72, DOI 10.1109/MS.2018.4321246
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Dybå T, 2013, IEEE SOFTWARE, V30, P81, DOI 10.1109/MS.2013.4
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Freund L, 2015, J ASSOC INF SCI TECH, V66, P1594, DOI 10.1002/asi.23278
   Gorschek T., 2020, contemp. Empir. Methods softw. Engineering, P503, DOI DOI 10.1007/978-3-030-32489-618
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Harper KE, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P123, DOI 10.1109/WICSA.2015.22
   Hertzum M., 2002, Information and Organization, V12, P1, DOI 10.1016/S1471-7727(01)00007-0
   Jansen BJ, 2010, J AM SOC INF SCI TEC, V61, P1517, DOI 10.1002/asi.21358
   Kirk D., 2014, Categorising software contexts
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Li J, 2006, EMPIR SOFTW ENG, V11, P433, DOI 10.1007/s10664-006-9005-5
   Li JY, 2009, IEEE SOFTWARE, V26, P80, DOI 10.1109/MS.2009.33
   Li XZ, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111255
   Oxford University Press, 2020, Oxford Dictionary
   Passos C, 2011, INT SYMP EMP SOFTWAR, P444, DOI 10.1109/ESEM.2011.63
   Petersen K, 2021, COMPUT STAND INTER, V78, DOI 10.1016/j.csi.2021.103541
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Shrikanth NC, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P182, DOI 10.1145/3377813.3381367
   Tang A, 2014, J SYST SOFTWARE, V88, P87, DOI 10.1016/j.jss.2013.09.044
   Wohlin C., 2021, J Softw: Evol Process, V134
   Wohlin C, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106555
   Wohlin C, 2012, IEEE SOFTWARE, V29, P67, DOI 10.1109/MS.2011.92
NR 40
TC 0
Z9 0
U1 3
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 APR 11
PY 2024
DI 10.1002/smr.2668
EA APR 2024
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NI4M6
UT WOS:001199811300001
OA hybrid
DA 2024-08-05
ER

PT J
AU Shafiq, S
   Mayr-Dorn, C
   Mashkoor, A
   Egyed, A
AF Shafiq, Saad
   Mayr-Dorn, Christoph
   Mashkoor, Atif
   Egyed, Alexander
TI Balanced knowledge distribution among software development
   teams-Observations from open- and closed-source software development
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE developer knowledge; software engineering; software evolution
ID PRODUCTIVITY; MANAGEMENT; IMPACT; CODE
AB In software development, developer turnover is among the primary reasons for project failures, leading to a great void of knowledge and strain for newcomers. Unfortunately, no established methods exist to measure how the problem domain knowledge is distributed among developers. Awareness of how this knowledge evolves and is owned by key developers in a project helps stakeholders reduce risks caused by turnover. To this end, this paper introduces a novel, realistic representation of problem domain knowledge distribution: the ConceptRealm. To construct the ConceptRealm, we employ a latent Dirichlet allocation model to represent textual features obtained from 300 K issues and 1.3 M comments from 518 open-source projects. We analyze whether the newly emerged issues and developers share similar concepts or how aligned the individual developers' concepts are with the team over time. We also investigate the impact of leaving developers on the frequency of concepts. Finally, we also evaluate the soundness of our approach on a closed-source software project, thus allowing the validation of the results from a practical standpoint. We find out that the ConceptRealm can represent the problem domain knowledge within a project and can be utilized to predict the alignment of developers with issues. We also observe that projects exhibit many keepers independent of project maturity and that abruptly leaving keepers correlates with a decline of their core concepts as the remaining developers cannot quickly familiarize themselves with those concepts.
C1 [Shafiq, Saad; Mayr-Dorn, Christoph; Mashkoor, Atif; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
   [Shafiq, Saad] Johannes Kepler Univ Linz, Linz, Austria.
C3 Johannes Kepler University Linz; Johannes Kepler University Linz
RP Shafiq, S (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.; Shafiq, S (corresponding author), Johannes Kepler Univ Linz, Linz, Austria.
EM saad.shafiq@jku.at
RI Egyed, Alexander/E-2632-2017
FU Austrian Science Fund; LIT AI and Secure and Correct System Labs
FX Austrian Science Fund; LIT AI and Secure and Correct System Labs
CR Abdullah NNB., 2011, Communication patterns of agile requirements engineering, P1, DOI [10.1145/2068783.2068784, DOI 10.1145/2068783.2068784]
   Abebe Surafel Lemma, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P156, DOI 10.1109/ICPC.2010.29
   Abebe SL, 2015, SCI COMPUT PROGRAM, V98, P680, DOI 10.1016/j.scico.2014.09.012
   Anonymous, 2022, Zenodo, DOI 10.5281/ZENODO.5167218
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Basili Victor R, 1994, Encyclopedia of Software Engineering
   Bin Lu, 2011, 2011 IEEE International Conference on Data Mining Workshops, P81, DOI 10.1109/ICDMW.2011.125
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bloch M., 2012, Harvard Business Review, V5, P2
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Canfora G., 2012, Who is going to mentor newcomers in open source projects?
   Catolino G, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P25, DOI 10.1145/3377815.3381380
   Çetin HA, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10129-2
   Çetin HA, 2020, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2020, P51, DOI 10.1145/3416508.3417116
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Cosentino V, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P499, DOI 10.1109/SANER.2015.7081864
   Dey T., 2021, Replication package for representation of developer expertise in open source software, P236, DOI [10.1109/ICSECompanion52605.2021.00109, DOI 10.1109/ICSECOMPANION52605.2021.00109]
   Dey T, 2021, PROC INT CONF SOFTW, P995, DOI 10.1109/ICSE43902.2021.00094
   Ehrlich K., 2014, The communication patterns of technical leaders, P733, DOI [10.1145/2531602.2531671, DOI 10.1145/2531602.2531671]
   Ferrari A, 2019, AUTOMAT SOFTW ENG, V26, P559, DOI 10.1007/s10515-019-00261-7
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Fu XH, 2013, KNOWL-BASED SYST, V37, P186, DOI 10.1016/j.knosys.2012.08.003
   Gerosa M, 2021, PROC INT CONF SOFTW, P1046, DOI 10.1109/ICSE43902.2021.00098
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hong L., 2010, P 1 WORKSH SOC MED A, P80, DOI DOI 10.1145/1964858.1964870
   Hotho A., 2005, LDV-Forum, V20, P19, DOI [10.21248/jlcl.20.2005.68, DOI 10.1111/j.1365-2621.1978.tb09773.x]
   Huang CR, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P317, DOI 10.1109/ICWS.2017.122
   HUSELID MA, 1995, ACAD MANAGE J, V38, P635, DOI 10.5465/256741
   Izquierdo-Cortazar D., 2009, Using software archaeology to measure knowledge loss in software projects due to developer turnover, P1, DOI [10.1109/HICSS.2009.498, DOI 10.1109/HICSS.2009.498]
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Kakimoto T., 2006, Social network analysis on communications for knowledge collaboration in OSS communities, P1
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Liao Zhifang., 2017, GLOBECOM 2017-2017 IEEE Global Communications Conference, P1, DOI DOI 10.1109/GLOCOM.2017.8254426
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   Manning C.D., 2009, An Introduction to Information Retrieval
   McManus J., 2012, Risk management in software development projects
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Mockus A., 2010, P 18 ACM SIGSOFT INT, P117, DOI DOI 10.1145/1882291.1882311
   Mockus A, 2009, PROC INT CONF SOFTW, P67, DOI 10.1109/ICSE.2009.5070509
   Nidhra S, 2013, INT J INFORM MANAGE, V33, P333, DOI 10.1016/j.ijinfomgt.2012.11.004
   Obadimu A, 2019, LECT NOTES COMPUT SC, V11549, P214, DOI 10.1007/978-3-030-21741-9_22
   Omoronyia I, 2009, COMPUT SUPP COOP W J, V18, P509, DOI 10.1007/s10606-009-9104-0
   Ortu M, 2015, P 11 INT C PREDICTIV, P1, DOI DOI 10.1145/2810146.2810147
   Ortu M, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P70, DOI 10.1145/3273934.3273943
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Ortu M, 2015, LECT NOTES BUS INF P, V212, P129, DOI 10.1007/978-3-319-18612-2_11
   Otte Tobias, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1247, DOI 10.1109/COMPSAC.2008.65
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Panichella S, 2014, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSME.2014.47
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI 10.1109/TSE.2007.1016.
   Ramos Juan, 2003, P 1 INSTR C MACH LEA, V242, P29, DOI DOI 10.15804/TNER.2015.42.4.03
   Rath M, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1414, DOI 10.1145/3341105.3374056
   Rath M, 2019, DATA BRIEF, V25, DOI 10.1016/j.dib.2019.104005
   Rempel P, 2017, IEEE T SOFTWARE ENG, V43, P777, DOI 10.1109/TSE.2016.2622264
   Rigby PC, 2016, PROC INT CONF SOFTW, P1006, DOI 10.1145/2884781.2884851
   Robillard MP, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1292, DOI 10.1145/3468264.3473923
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Shafiq S, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P99, DOI 10.1109/SEAA53835.2021.00022
   Shafiq S, 2021, 2021 IEEE/ACM JOINT 15TH INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES AND 16TH ACM/IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICSSP/ICGSE 2021), P39, DOI 10.1109/ICSSP-ICGSE52873.2021.00014
   Shafiq S, 2019, EUROMICRO CONF PROC, P164, DOI 10.1109/SEAA.2019.00033
   Shafiq S, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P303, DOI 10.1109/REW.2017.34
   Trivedi A, 2020, ISOFT: PROCEEDINGS OF THE 13TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3385032.3385050
   Vadlamani SL, 2020, PROC IEEE INT CONF S, P312, DOI 10.1109/ICSME46990.2020.00038
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Voria G, 2022, PROC IEEE INT CONF S, P469, DOI 10.1109/ICSME55016.2022.00061
   Wallach H., 2009, Advances in Neural Information Processing Systems, V22
   Wang S., 2014, Version history, similar report, and structure: putting them together for improved bug localization, P53, DOI [10.1145/2597008.2597148, DOI 10.1145/2597008.2597148]
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zhang Y, 2010, INT J MACH LEARN CYB, V1, P43, DOI 10.1007/s13042-010-0001-0
   Zhou M., 2010, Developer fluency: achieving true mastery in software projects
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 78
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 FEB 13
PY 2024
AR e2655
DI 10.1002/smr.2655
EA FEB 2024
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HO8E5
UT WOS:001160530000001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Nath, SS
   Roy, B
AF Sumana Nath, Sristy
   Roy, Banani
TI Practitioners' expectations on automated release note generation
   techniques
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE empirical study; GitHub; human study; release notes
AB The software development life cycle relies heavily on the software release note, a crucial document. Various practitioners, including project managers and clients, benefit from release notes as they provide an overview of the latest software release. However, the manual generation of release notes is a time-consuming and stressful task. Researchers have recently proposed automated techniques to generate release notes, saving developers' time and enhancing their understanding of software projects. Unfortunately, the adoption of these tools in practice remains limited. To address this gap, we have taken steps to understand the expectations and requirements of practitioners regarding release note generation techniques before implementing new automated approaches. Consequently, our approach involves two main stages: First, we conduct a comprehensive review of the relevant literature and analyze existing release notes from GitHub repositories to gain insights into the current practices. Second, we conduct an online survey study to gather input from practitioners and understand their expectations regarding release notes. We have reviewed 16 papers related to release notes and explored 3347 release notes from 21 GitHub repositories. Our analysis revealed key artifacts present in release note contents, including issues (29%), pull requests (32%), commits (19%), and common vulnerabilities and exposures (CVE) issues (6%). Additionally, we conducted a survey study involving 32 professionals to understand the essential information that should be included in release notes based on users' roles. For instance, project managers were more interested in learning about new features rather than less critical bug fixes. Furthermore, we identified gaps in existing systems and essential factors to consider when implementing release notes techniques in software engineering. The insights gained from our study can guide future research directions and assist practitioners in generating release notes with relevant content, thus improving the overall quality of documentation in software development.
   It remains uncertain whether release note generation techniques can address current challenges and gain practitioners' acceptance. To bridge this gap, we conducted an empirical study, surveying practitioners to understand their expectations regarding release note generation research. We compared these expectations with existing research through a literature review of release note generation papers. This contrast revealed areas needing attention for meaningful development of release note generation techniques. image
C1 [Sumana Nath, Sristy; Roy, Banani] Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK, Canada.
C3 University of Saskatchewan
RP Nath, SS (corresponding author), Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK, Canada.
EM sristy.sumana@usask.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Industry-stream NSERC CREATE in Software Analytics Research (SOAR)
FX This research is supported in part by the Natural Sciences and
   Engineering Research Council of Canada (NSERC), and by the
   industry-stream NSERC CREATE in Software Analytics Research (SOAR).
CR Abebe SL, 2016, EMPIR SOFTW ENG, V21, P1107, DOI 10.1007/s10664-015-9377-5
   Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Ali M, 2020, INT CONF SOFTW ENG, P76, DOI [10.1109/ICSESS49938.2020.9237671, 10.1109/icsess49938.2020.9237671]
   [Anonymous], Vue v2.6.13
   [Anonymous], Dataset
   Bi Tingting, 2022, IEEE Transactions on Software Engineering, V48, P1834, DOI 10.1109/TSE.2020.3038881
   Cabot J, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P550, DOI 10.1109/SANER.2015.7081875
   Cleveland S, 2014, ADV HUM-COMPUT INTER, V2014, DOI 10.1155/2014/805307
   Commit V, Commit message
   Domínguez-Alvarez D, 2022, 9TH IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS, MOBILESOFT 2022, P73, DOI 10.1145/3524613.3527819
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Hu X, 2022, PROC INT CONF SOFTW, P1693, DOI 10.1145/3510003.3510152
   Issue V, Issue title
   Jiang HX, 2021, ASIA PAC SOFWR ENG, P101, DOI 10.1109/APSEC53868.2021.00018
   Kamezawa H, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P8718
   Klepper S., 2016, Semi-automatic generation of audience-specific release notes
   Li LS, 2018, ASIA PAC SOFWR ENG, P386, DOI 10.1109/APSEC.2018.00053
   Lin C.-Y., 2004, ANN M ASS COMP LING, P74
   Liu TY, 2023, Arxiv, DOI arXiv:2210.10223
   Mondal AK., 2021, Semantic slicing of architectural change commits: towards semantic design review
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Nath SS, 2022, EUR CON SFTWR MTNCE, P1270, DOI 10.1109/SANER53432.2022.00152
   Nath SS, 2021, INT J SOFTW ENG KNOW, V31, P1721, DOI 10.1142/S0218194021400192
   Nath SS, 2021, INT C SOFTW ENG KNOW, P241
   Pennington J., 2014, GLOVE GLOBAL VECTORS, DOI DOI 10.3115/V1/D14-1162
   Pull-request V, Pull-request title
   Stapleton S, 2020, INT C PROGRAM COMPRE, P2, DOI 10.1145/3387904.3389258
   Wang C, 2021, ASIA PAC SOFWR ENG, P520, DOI 10.1109/APSEC53868.2021.00061
   Wu JY, 2023, Soft Anal Evol Reeng, P473, DOI 10.1109/SANER56733.2023.00051
   Wu JY, 2022, INT C PROGRAM COMPRE, P602, DOI 10.1145/3524610.3527919
   Yang AZH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10086-2
   Zou WQ, 2020, IEEE T SOFTWARE ENG, V46, P836, DOI 10.1109/TSE.2018.2870414
NR 33
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 FEB 7
PY 2024
DI 10.1002/smr.2657
EA FEB 2024
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5C3
UT WOS:001157558600001
DA 2024-08-05
ER

PT J
AU Bédard, M
   Leshob, A
   Benzarti, I
   Mili, H
   Rab, R
   Hussain, O
AF Bedard, Maxime
   Leshob, Abderrahmane
   Benzarti, Imen
   Mili, Hafedh
   Rab, Raqeebir
   Hussain, Omar
TI A rule-based method to effectively adopt robotic process automation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE business process modeling; business rules; goal-oriented requirements
   language; robotic process automation
ID BUSINESS RULES
AB Robotic Process Automation (RPA) is an emerging software technology for automating business processes. RPA uses software robots to perform repetitive and error-prone tasks previously done by human actors quickly and accurately. These robots mimic humans by interacting with existing software applications through user interfaces (UI). The goal of RPA is to relieve employees from repetitive and tedious tasks to increase productivity and to provide better service quality. Yet, despite all the RPA benefits, most organizations fail to adopt RPA. One of the main reasons for the lack of adoption is that organizations are unable to effectively identify the processes that are suitable for RPA. This paper proposes a new method, called Rule-based robotic process analysis (RRPA), that assists process automation practitioners to classify business processes according to their suitability for RPA. The RRPA method computes a suitability score for RPA using a combination of two RPA goals: (i) the RPA feasibility, which assesses the extent to which the process or the activity lends itself to automation with RPA and (ii) the RPA relevance, which assesses whether the RPA automation is worthwhile. We tested the RRPA method on a set of 13 processes. The results showed that the method is effective at 82.05% and efficient at 76.19%.
   image
C1 [Bedard, Maxime; Leshob, Abderrahmane] Univ Quebec Montreal, Analyt Operat & IT, Montreal, PQ, Canada.
   [Benzarti, Imen] Ecole Technol Super, Software & IT Engn, Montreal, PQ, Canada.
   [Mili, Hafedh] Univ Quebec Montreal, Comp Sci, Montreal, PQ, Canada.
   [Rab, Raqeebir] Ahsanullah Univ Sci & Technol, Dept CSE, Dhaka, Bangladesh.
   [Hussain, Omar] Univ New South Wales, Sch Business, Canberra, Australia.
C3 University of Quebec; University of Quebec Montreal; University of
   Quebec; Ecole de Technologie Superieure - Canada; University of Quebec;
   University of Quebec Montreal; Ahsanullah University of Science &
   Technology (AUST); University of New South Wales Sydney
RP Bédard, M; Leshob, A (corresponding author), Univ Quebec Montreal, Analyt Operat & IT, Montreal, PQ, Canada.
EM bedard.maxime.4@courrier.uqam.ca; leshob.abderrahmane@uqam.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX This research was supported by the Natural Sciences and Engineering
   Research Council of Canada (NSERC).
CR Aguirre S, 2017, COMM COM INF SC, V742, P65, DOI 10.1007/978-3-319-66963-2_7
   Alberth M., 2017, The Capco Institute Journal Of Financial Transformation, P54
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   Anagnoste S., 2018, Management Dynamics in the Knowledge Economy, P307, DOI DOI 10.25019/MDKE/6.2.07
   [Anonymous], 2016, Case Management Model And Notation (CMMN)
   [Anonymous], 2015, Business Motivation Model Version 1.3
   Asatiani A., 2016, JOURNALOF INFORMATIO, V6, P67, DOI [DOI 10.1057/JITTC.2016.5, 10.1057/jittc.2016.5]
   Bourgouin A, 2018, INT CONF E BUS ENG, P46, DOI 10.1109/ICEBE.2018.00018
   Boyer J, 2011, AGILE BUSINESS RULE DEVELOPMENT: PROCESS, ARCHITECTURE, AND JRULES EXAMPLES, P3, DOI 10.1007/978-3-642-19041-4
   Cabello R., 2020, Lecture Notes in Business Information Processing, DOI [10.1007/978303058779613, DOI 10.1007/978303058779613]
   Chung L., 2011, NonFunctional Requirements in Software Engineering
   Cook TD., 1979, QUASIEXPERIMENTATION
   Costa DS, 2023, HELIYON, V9, DOI 10.1016/j.heliyon.2023.e13683
   Engel C., 2021, International Conference on Information Systems (ICIS)
   Ezekiel K, 2019, BUS PROCESS MANAG J, V25, P948, DOI 10.1108/BPMJ-08-2017-0219
   Geyer-Klingeberg J., 2018, Proceedings of the Dissertation Award, Demonstration, and Industrial Track at BPM 2018 co-located with 16th International Conference on Business Process Management, V2196, P124
   Graml T, 2008, ENTERP INF SYST-UK, V2, P385, DOI 10.1080/17517570802245441
   Hammer M., 1993, Reengineering the Corporation: A Manifesto For Business Revolution, V36, P90, DOI [10.1016/S00076813(05)800643, DOI 10.1016/S00076813(05)800643]
   Hay D., 2000, Defining Business Rules: What Are They Really?
   Hofmann P, 2020, ELECTRON MARK, V30, P99, DOI 10.1007/s12525-019-00365-8
   IRPAAI, 2018, Robotic Process Automation in the Real World: How 3 Companies are Innovating with RPA
   ISO, 2018, Ergonomics of humansystem interaction (ISO 924111)
   Itpa A., 2013, Advances in Robotics Automation, V03, DOI [DOI 10.4172/2168-9695.1000124, 10.4172/21689695.1000124, DOI 10.4172/21689695.1000124]
   ITUT ITUT, 2012, User Requirements Notation (URN)Language definition
   Joshi A., 2015, BRIT J APPL SCI TECH, V7, P396, DOI DOI 10.9734/BJAST/2015/14975
   Lacity M., 2016, Robotic Process Automation: The Next Transformation Lever for Shared Services
   Lacity MC, 2016, MIS Q EXEC, V15, P21
   Leno V, 2021, BUS INFORM SYST ENG+, V63, P301, DOI 10.1007/s12599-020-00641-4
   Leshob A, 2020, ICE-B: PROCEEDINGS OF THE 17TH INTERNATIONAL JOINT CONFERENCE ON E-BUSINESS AND TELECOMMUNICATIONS, VOL 3: ICE-B, P119, DOI 10.5220/0009886701190126
   Lowers P., 2016, D. Automate this The business leader's guide to robotic and intelligent automation
   Madakam Somayya, 2019, JISTEM J.Inf.Syst. Technol. Manag., V16, pe201916001
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   OMG, 2021, Decision Model and Notation (DMN) Version 1.3
   OMG, 2019, Semantics of Business Vocabulary and Business Rules, P422
   OMG, 2013, BUSINESS PROCESS MOD
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Penttinen E., 2018, 26th European Conference on Information Systems: Beyond DigitizationFacets of SocioTechnical Change, ECIS 2018
   Rybinski F, 2022, LECT NOTES BUS INF P, V459, P231, DOI 10.1007/978-3-031-16168-1_15
   Shamsaei A., 2011, Lecture Notes in Business Information Processing, DOI [10.1007/97836422051187, DOI 10.1007/97836422051187]
   Steinke G, 2003, IND MANAGE DATA SYST, V103, P52, DOI 10.1108/02635570310456904
   The Open Group, 2019, The Open Group Standard: ArchiMate 3.1 Specification
   V R Basili GCHDR, 1994, Goal Question Metric Paradigm. Encyclopedia of Software Engineering
   van Eijndhoven T, 2008, IEEE INT ENTERP DIST, P95, DOI 10.1109/EDOC.2008.23
   van Lamsweerde A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P4
   Wagner G, 2005, LECT NOTES COMPUT SC, V3564, P251
   Willcocks L., 2017, Journal of Information Technology Teaching Cases, V7, P17, DOI [10.1057/s41266-0160016-9, 10.1057/s41266-016-0016-9, DOI 10.1057/S41266-016-0016-9]
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 47
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUL 4
PY 2024
DI 10.1002/smr.2709
EA JUL 2024
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ8M6
UT WOS:001261408000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Meng, LH
   Li, YH
   Chen, L
   Ma, ML
   Zhou, YM
   Xu, BW
AF Meng, Linghan
   Li, Yanhui
   Chen, Lin
   Ma, Mingliang
   Zhou, Yuming
   Xu, Baowen
TI Hybrid mutation driven testing for natural language inference
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE mutation; natural language inference; natural language processing;
   software testing
AB Natural language inference (NLI) is a task to infer the relationship between the premise and hypothesis sentences, whose models have essential applications in the many natural language processing (NLP) fields, for example, machine reading comprehension and recognizing textual entailment. Due to the data-driven programming paradigm, bugs inevitably occur in NLI models during the application process, which calls for novel automatic testing techniques to deal with NLI testing challenges. The main difficulty in achieving automatic testing for NLI models is the oracle problem; that is, it may be too expensive to label NLI model inputs manually and hence be too challenging to verify the correctness of model outputs. To tackle the oracle problem, this study proposes a novel automatic testing method hybrid mutation driven testing (HMT), which extends the mutation idea applied in other NLP domains successfully. Specifically, as there are two sets of sentences, that is, premise and hypothesis, to be mutated, we propose four mutation operators to achieve the hybrid mutation strategy, which mutate the premise and the hypothesis sentences jointly or individually. We assume that the mutation would not affect the outputs; that is, if the original and mutated outputs are inconsistent, inconsistency bugs could be detected without knowing the true labels. To evaluate our method HMT, we conduct experiments on two widely used datasets with two advanced models and generate more than 520,000 mutations by applying our mutation operators. Our experimental results show that (a) our method, HMT, can effectively generate mutated testing samples, (b) our method can effectively trigger the inconsistency bugs of the NLI models, and (c) all four mutation operators can independently trigger inconsistency bugs.
   We propose a novel automatic testing method, hybrid mutation driven testing (HMT), which extends the mutation idea in natural language inference (NLI). We apply four mutation operators to achieve the hybrid mutation strategy, mutating the premise and the hypothesis in the samples jointly or individually. The experimental results show that HMT can effectively generate mutations and trigger the inconsistency bugs of NLI models, with independent bugs for four mutation operators. image
C1 [Meng, Linghan; Li, Yanhui; Chen, Lin; Ma, Mingliang; Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
C3 Nanjing University
RP Li, YH (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM yanhuili@nju.edu.cn
FU National Natural Science Foundation of China;  [62172202];  [62272221]; 
   [62172205]
FX The authors thank the anonymous reviewers for their time and invaluable
   feedback on improving our study. The authors thank Jun Wang, Xinglong
   Guo, and Shen Wang in our research group for their discussions and
   suggestions about this study. This work is supported by the National
   Natural Science Foundation of China (grant nos. 62172202, 62272221, and
   62172205).
CR Abdurrahman, 2019, INT C ADV COMP SCI I, P217, DOI [10.1109/ICACSIS47736.2019.8979733, 10.1109/icacsis47736.2019.8979733]
   Aggarwal CharuC., 2012, A survey of text classification algorithms
   Allen J., 1995, Natural Language Understanding
   [Anonymous], 2023, ChatGPT
   [Anonymous], 2023, Microsoft cortana
   [Anonymous], 2023, Siri
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bolukbasi T, 2016, ADV NEUR IN, V29
   Bowman S.R, 2019, 7 INT C LEARN REPR I, DOI [10.18653/v1/w18-5446, DOI 10.18653/V1/W18-5446]
   Bowman SR., 2015, A large annotated corpus for learning natural language inference, P632, DOI [10.18653/v1/d15-1075, DOI 10.18653/V1/D15-1075]
   Cao J., 2022, ACM Trans. Softw. Eng. Methodol., V31, P1
   Chen SM, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1148, DOI 10.1145/3540250.3549102
   Cheng MH, 2020, AAAI CONF ARTIF INTE, V34, P3601
   Cheng Y, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P1756
   Chomsky Noam, 2009, Syntactic Structures
   Cohen I., 2009, Noise reduction in speech processing, V14
   Dagan I, 2006, LECT NOTES ARTIF INT, V3944, P177
   Daws R., 2020, Medical chatbot using openAI's GPT3 told a fake patient to kill themselves
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Grunbaum Branko., 1975, MATH MAG, V48, P12
   Guo XZ, 2022, LECT NOTES COMPUT SC, V13529, P195, DOI 10.1007/978-3-031-15919-0_17
   Gupta S, 2020, PROC INT CONF SOFTW, P107, DOI 10.1145/3377812.3382162
   Gururangan S, 2018, Arxiv, DOI arXiv:1803.02324
   Hauser J., 2021, Bert is robust! a case against synonymbased adversarial examples in text classification
   He PJ, 2020, PROC INT CONF SOFTW, P961, DOI 10.1145/3377811.3380339
   He PJ, 2021, PROC INT CONF SOFTW, P410, DOI 10.1109/ICSE43902.2021.00047
   Hu MH, 2019, AAAI CONF ARTIF INTE, P6529
   Jiang MY, 2021, PROC INT SYMP SOFTW, P220, DOI 10.1109/ISSRE52982.2021.00033
   Jungiewicz M, 2019, COMPUT SCI-AGH, V20, P57, DOI 10.7494/csci.2019.20.1.3023
   Kitaev N, 2018, Arxiv, DOI arXiv:1805.01052
   Kowsari K, 2019, INFORMATION, V10, DOI 10.3390/info10040150
   Lee DTS., 2020, Metamorphic robustness testing of Google translate, P388, DOI [10.1145/3387940.3391484, DOI 10.1145/3387940.3391484]
   Lee J, 2012, IET SOFTW, V6, P275, DOI 10.1049/iet-sen.2011.0066
   Lesk Michael, 1986, Proceedings of the 5th annual international conference on Systems documentation, P24
   Li C., Towards the robust smallperturbation stability region of natural language inference
   Liu SS, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9183698
   Liu TY, 2020, Arxiv, DOI arXiv:2010.03777
   Liu TY, 2021, Arxiv, DOI arXiv:2003.02756
   Liu Yinhan, 2019, ROBERTA ROBUSTLY OPT
   Liu ZX, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556929
   Luo C., 2022, Simple but challenging: natural language inference models fail on simple sentences, P3449
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Naik A, 2018, Arxiv, DOI arXiv:1806.00692
   Nie YX, 2020, Arxiv, DOI arXiv:1910.14599
   Parikh A., 2016, P 2016 C EMP METH NA, P2249, DOI DOI 10.18653/V1/D16-1244
   Poliak A, 2018, Arxiv, DOI arXiv:1805.01042
   Prates MOR, 2020, NEURAL COMPUT APPL, V32, P6363, DOI 10.1007/s00521-019-04144-6
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Reimers N, 2019, Arxiv, DOI [arXiv:1908.10084, DOI 10.48550/ARXIV.1908.10084]
   Ribeiro MT, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P856
   Rudinger R., 2017, Social bias in elicited natural language inferences, P74, DOI [10.18653/v1/w17-1609, DOI 10.18653/V1/W17-1609]
   Sharma S., 2021, arXiv
   Shen QC, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556953
   Stacey J, 2022, AAAI CONF ARTIF INTE, P11349
   Sun ZY, 2022, PROC INT CONF SOFTW, P1181, DOI 10.1145/3510003.3510206
   Sun ZY, 2020, PROC INT CONF SOFTW, P974, DOI 10.1145/3377811.3380420
   Tan L., 2014, PyWSD: python implementations of word sense disambiguation (WSD) technologies software
   McCoy RT, 2019, Arxiv, DOI arXiv:1902.01007
   Tsuchiya M, 2018, Arxiv, DOI arXiv:1804.08117
   Wen TH, 2017, Arxiv, DOI arXiv:1604.04562
   Williams A, 2018, Arxiv, DOI arXiv:1704.05426
   Wu Y., 2016, GOOGLES NEURAL MACHI
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Yang YT, 2024, FRONT COMPUT SCI-CHI, V18, DOI 10.1007/s11704-023-2639-2
   Yefet N, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428230
   Yu D, 2015, SIGNALS COMMUN TECHN, P1, DOI 10.1007/978-1-4471-5779-3
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang ZS, 2020, Arxiv, DOI arXiv:2005.06249
   Zhu D., 2021, Deepmemory: modelbased memorization analysis of deep neural language models, P1003, DOI [10.1109/ASE51524.2021.9678871, DOI 10.1109/ASE51524.2021.9678871]
NR 71
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUN 17
PY 2024
DI 10.1002/smr.2694
EA JUN 2024
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL3G0
UT WOS:001248168700001
DA 2024-08-05
ER

PT J
AU Delgado-Pérez, P
   Meléndez-Lapi, I
   Boubeta-Puig, J
AF Delgado-Perez, Pedro
   Melendez-Lapi, Ignacio
   Boubeta-Puig, Juan
TI Gas-centered mutation testing of Ethereum Smart Contracts
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE blockchain; Ethereum; gas consumption; mutation testing; smart contract
AB Smart contracts (SC) are programs embodying certain business logic stored on a blockchain network like Ethereum. The execution of transactions on SC has a cost, measured in gas units, that depends on the low-level operations performed. Therefore, a poor choice of high-level language constructs could lead to overcharging users for their transactions. Thus, a testing process focused on possible deviations of the gas used in diverse scenarios could provide substantial global savings. This paper presents a gas-centered mutation testing approach for taking care of the gas consumed by Solidity SCs. This approach can be useful to improve the test quality to detect gas-related problems, reason about performance issues that only manifest in certain situations, and identify alternative more optimal implementations. We define and implement several mutation operators specifically designed to perturb gas consumption while preserving contract semantics in general. Our experiments using several real-world SCs show the feasibility of the technique, with some mutants reproducing meaningful differences in the consumption and exposing some gas limits not tight enough in historic transactions. Therefore, our approach is shown to be a good ally to prevent the appearance of gas-related issues and lays the groundwork for researchers seeking to improve performance testing practices.
   This paper proposes a gas-centered mutation testing approach for taking care of the gas consumed by Ethereum Smart Contracts (ESC). We define several mutation operators specifically designed to perturb gas consumption of ESC written in Solidity while preserving contract semantics in general. Our experiments, applying an implementation of these operators to real-world ESC, show the feasibility of the approach, with some mutants reproducing meaningful differences in the consumption and exposing some gas limits not tight enough in historic transactions. image
C1 [Delgado-Perez, Pedro; Boubeta-Puig, Juan] Univ Cadiz, Dept Comp Sci & Engn, UCASE Software Engn Res Grp, Cadiz, Spain.
   [Melendez-Lapi, Ignacio] Univ Cadiz, Sch Engn, Cadiz, Spain.
   [Delgado-Perez, Pedro] Univ Cadiz, Dept Comp Sci & Engn, UCASE Software Engn Res Grp, Cadiz 11519, Spain.
C3 Universidad de Cadiz; Universidad de Cadiz; Universidad de Cadiz
RP Delgado-Pérez, P (corresponding author), Univ Cadiz, Dept Comp Sci & Engn, UCASE Software Engn Res Grp, Cadiz 11519, Spain.
EM pedro.delgado@uca.es
RI Boubeta-Puig, Juan/L-9429-2014; Delgado-Pérez, Pedro/N-4289-2018
OI Boubeta-Puig, Juan/0000-0002-8989-7509; Delgado-Pérez,
   Pedro/0000-0003-1568-9288
FU MCIN/AEI/10.13039/501100011033/
FX No Statement Availabler No Statement Available
CR Akbar MA, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2500
   Albert Elvira, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12079), P118, DOI 10.1007/978-3-030-45237-7_7
   Albert E, 2019, LECT NOTES COMPUT SC, V11847, P63, DOI 10.1007/978-3-030-35092-5_5
   Andesta Erfan, 2020, Proceedings of the 10th International Conference on Computer and Knowledge Engineering (ICCKE 2020), P405, DOI 10.1109/ICCKE50421.2020.9303670
   Barboni M, 2022, J SYST SOFTWARE, V193, DOI 10.1016/j.jss.2022.111445
   Barboni M, 2022, COMM COM INF SC, V1621, P61, DOI 10.1007/978-3-031-14179-9_5
   Barboni M, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2021), P50, DOI 10.1109/AST52587.2021.00014
   Boubeta-Puig J, 2021, EXPERT SYST APPL, V184, DOI 10.1016/j.eswa.2021.115578
   Cañizares PC, 2018, J SYST SOFTWARE, V143, P187, DOI 10.1016/j.jss.2018.05.010
   Chapman P, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2019), P319, DOI 10.1109/Blockchain.2019.00050
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   Chen YQ, 2022, PROC INT SYMP SOFTW, P274, DOI 10.1109/ISSRE55969.2022.00035
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Delgado-Pérez P, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1728
   Delgado-Pérez P, 2018, IEEE T RELIAB, V67, P1406, DOI 10.1109/TR.2018.2864678
   Delgado-Pérez P, 2017, INFORM SOFTWARE TECH, V81, P169, DOI 10.1016/j.infsof.2016.07.002
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Di Sorbo A, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111193
   Escobar-Velásquez C, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1090, DOI 10.1109/ASE.2019.00109
   Ethereum Foundation, 2022, Ethereum
   Gartziandia A, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2465
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Groce A, 2018, PROC IEEE ACM INT C, P25, DOI 10.1145/3183440.3183485
   Han X, 2018, IEEE INT CONF AUTOM, P17, DOI 10.1145/3238147.3238204
   Hartel P, 2020, LECT NOTES COMPUT SC, V12165, P23, DOI 10.1007/978-3-030-50995-8_2
   Honig JJ, 2019, LECT NOTES COMPUT SC, V11737, P289, DOI 10.1007/978-3-030-31500-9_19
   Ivanova Y, 2020, PROCEDIA COMPUT SCI, V178, P75, DOI 10.1016/j.procs.2020.11.009
   Jabbarvand R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P208, DOI 10.1145/3106237.3106244
   Jangali M., 2022, IEEE Trans Softw Eng, V2022, P1
   Varela-Vaca AJ, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3423166
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Laurent T, 2022, J SYST SOFTWARE, V191, DOI 10.1016/j.jss.2022.111385
   Li ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1198, DOI 10.1109/ASE.2019.00136
   Lisper B, 2017, IEEE ICST WORKSHOP, P65, DOI 10.1109/ICSTW.2017.18
   Liu MX, 2020, IEEE INT CONF AUTOM, P1260, DOI 10.1145/3324884.3418903
   Llambias G., 2023, CLEI Electron J, V25
   Loise T, 2017, IEEE ICST WORKSHOP, P97, DOI 10.1109/ICSTW.2017.24
   Marescotti Matteo, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P450, DOI 10.1007/978-3-030-03427-6_33
   McMinn P, 2019, IEEE T SOFTWARE ENG, V45, P427, DOI 10.1109/TSE.2017.2786286
   Olsthoorn M, 2022, PROC IEEE ACM INT C, P202, DOI [10.1145/3510454.3516869, 10.1109/ICSE-Companion55297.2022.9793754]
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Rosa-Bilbao J, 2023, INTERNET THINGS-NETH, V22, DOI 10.1016/j.iot.2023.100802
   Rosa-Bilbao J, 2023, COMPUT STAND INTER, V84, DOI 10.1016/j.csi.2022.103676
   Rosa-Bilbao J, 2021, IEEE INT SYMP SERV O, P161, DOI 10.1109/SOSE52839.2021.00024
   Sánchez-de la Rosa M, 2023, SOFTWARE PRACT EXPER, V53, P971, DOI 10.1002/spe.3173
   Sun JL, 2022, TSINGHUA SCI TECHNOL, V27, P27, DOI 10.26599/TST.2020.9010036
   Temple P, 2021, IEEE T SOFTWARE ENG, V47, P1511, DOI 10.1109/TSE.2019.2926971
   Wood G., 2014, Ethereum Project Yellow Paper, V151, P1, DOI DOI 10.1017/CBO9781107415324.004
   Wu F, 2017, INFORM SOFTWARE TECH, V81, P97, DOI 10.1016/j.infsof.2016.03.002
   Xu X., 2019, Architecture for Blockchain Applications
   Yaga D.J., 2018, NIST Interagency/Internal Report, V8202, P1, DOI DOI 10.6028/NIST.IR.8202
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
NR 54
TC 0
Z9 0
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 APR 12
PY 2024
DI 10.1002/smr.2672
EA APR 2024
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NO1F8
UT WOS:001201292500001
OA hybrid
DA 2024-08-05
ER

PT J
AU Swapna, R
   Polala, N
AF Swapna, R.
   Polala, Niranjan
TI MFLion-DMN: Mayfly Lion-optimized deep maxout network for prediction of
   software development effort
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE deep maxout network; machine learning; metaheuristic algorithms;
   recursive feature elimination; software effort prediction
ID MODEL
AB The precise evaluation of predicting software development effort is a serious process in software engineering. The underestimates require more time, which seems to be the negotiation of complete efficient design and complete software testing. Thus, this paper devises a novel model for inspecting the effort taken for the design of software. The Mayfly Lion Optimization (MFLion) algorithm is devised, which ensembles the Mayfly Algorithm (MA) with the Lion Optimization Algorithm (LOA) for precise estimation. The deep maxout network (DMN) is adapted wherein the different weights are produced out of which the most suitable is infused considering the MFLion during model training. The optimal features are selected using recursive feature elimination (RFE) wherein the best features are selected and the remaining irrelevant features are eliminated from the list. The proposed MFLion obtained better performance with the smallest mean magnitude of relative error (MMRE) of 5.909 and the smallest root mean square error (RMSE) of 75.505, respectively. Each technique is produced using a separate database generated using the Promise software engineering repository. The outcomes produced from the assessment of the accuracies of models suggested that the MFLion-DMN is a substitute to forecast software effort, which is extensively devised in engineering platforms.
   Initially, the input software is acquired from the dataset and the feature selection is performed using the RFE. Then, the software development effort prediction is performed using DMN, which is trained by using the proposed MFLion. The proposed MFLion algorithm is developed by incorporating MA and LOA. The proposed MFLion obtained better performance with the smallest MMRE of 5.909 and the smallest RMSE of 75.505. image
C1 [Swapna, R.] Kakatiya Univ, Dept Comp Sci & Engn, Warangal, India.
   [Polala, Niranjan] Kakatiya Inst Sci & Technol, Dept Comp Sci & Engn, Warangal, India.
C3 Kakatiya University; Kakatiya University
RP Swapna, R (corresponding author), Kakatiya Univ, Dept Comp Sci & Engn, Warangal, India.
EM swapnarudroju628@gmail.com
CR Amazal FA, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2324
   Aneja A., 2016, Int J Comput Sci Trend Technol, V4, P312
   Bisi M, 2016, IET SOFTW, V10, P63, DOI 10.1049/iet-sen.2015.0061
   Alanis-Tamez MD, 2020, MATHEMATICS-BASEL, V8, DOI 10.3390/math8101819
   Dragicevic S, 2017, J SYST SOFTWARE, V127, P109, DOI 10.1016/j.jss.2017.01.027
   Fernando Capretz Luiz, 2014, IEEE Software, V31, P103, DOI 10.1109/MS.2014.30
   Ghosh M., 2011, 2011 International Conference on Image Information Processing, P1, DOI [10.1109/ICIIP.2011.6108873, DOI 10.1109/ICIIP.2011.6108873]
   Guyon I, 2002, MACH LEARN, V46, P389, DOI 10.1023/A:1012487302797
   Idri A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1925
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Kaushik Anupama, 2022, International Journal of Information Technology, V14, P1689, DOI 10.1007/s41870-019-00339-1
   Kodmelwar MK., 2018, J Comput Theor Nanosci, V15, P3492, DOI [10.1166/jctn.2018.7651, DOI 10.1166/JCTN.2018.7651]
   Kumar G, 2014, INT C ADV COMPUT COM, P189, DOI 10.1109/ACCT.2014.73
   Lopez-Martin C, 2012, EMPIR SOFTW ENG, V17, P738, DOI 10.1007/s10664-011-9192-6
   Mahmood Y., 2020, 2020 INT C EL COMM C
   Malgonde O, 2019, EMPIR SOFTW ENG, V24, P1017, DOI 10.1007/s10664-018-9647-0
   Munassar NMA, 2010, IJCSI INT J COMPUTER, V7, P94
   Nassif AB, 2019, COMPUT INTEL NEUROSC, V2019, DOI 10.1155/2019/8367214
   de Carvalho HDP, 2021, IEEE ACCESS, V9, P92676, DOI 10.1109/ACCESS.2021.3091313
   promise.site.uottawa.ca, Cocomo81 dataset, cocomonasa_2 dataset, cocomonasa_v1 dataset and Desharnais dataset from the Promise software engineering repository
   Rai A., 2017, International Journal of Applied Engineering Research, V12, P3228
   Rai P, 2021, IET SOFTW, V15, P365, DOI 10.1049/sfw2.12048
   Rijwani P, 2022, J CASES INF TECHNOL, V24, DOI 10.4018/JCIT.296715
   Sun WC, 2018, NEUROCOMPUTING, V278, P34, DOI 10.1016/j.neucom.2017.05.103
   Varshini AGP, 2021, ELECTRONICS-SWITZ, V10, DOI 10.3390/electronics10101195
   Yazdani M, 2016, J COMPUT DES ENG, V3, P24, DOI 10.1016/j.jcde.2015.06.003
   Zervoudakis K, 2020, COMPUT IND ENG, V145, DOI 10.1016/j.cie.2020.106559
NR 27
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 FEB 28
PY 2024
DI 10.1002/smr.2659
EA FEB 2024
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JQ4J9
UT WOS:001174615300001
DA 2024-08-05
ER

PT J
AU Sanjurjo, E
   Pedreira, O
   García, F
   Piattini, M
AF Sanjurjo, Eduardo
   Pedreira, Oscar
   Garcia, Felix
   Piattini, Mario
TI Assessing BizDevOps maturity using international standards: Case studies
   and lessons learned
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE BizDevOps; case study method; DevOps; maturity model
AB DevOps has emerged as a practical approach to the interaction between development and operations. This approach has been extended to the interaction with business functions, generating the term BizDevOps. Although many proposals and tools support BizDevOps from a technical viewpoint, there has been no significant improvement in management aspects, such as evaluating the practices and processes involved in the area. This paper presents two case studies on the assessment of BizDevOps practices using MMBDO (Maturity Model for BizDevOps), a maturity model for BizDevOps based on international ICT standards. The case studies were conducted in two organizations with different profiles: a large multinational ICT company with a unit specialized in providing DevOps to the rest of the company and a small software development company that implements DevOps practices as part of its development system. The evidence we obtained in the case studies supports the adequacy of MMBDO for assessing the maturity of BizDevOps in real companies. Also, the combination of the two case studies supports the adequacy of the model for being used in companies with different sizes and levels of maturity. MMBDO is an adequate proposal for assessing the maturity of BizDevOps in software organizations and a suitable tool for process improvement.
   This paper presents two case studies on the assessment of BizDevOps practices using MMBDO (Maturity Model for BizDevOps), a maturity model for BizDevOps based on international ICT standards. The case studies were conducted in two organizations with different profiles: a large multinational ICT company with a unit specialized in providing DevOps to the rest of the company and a small software development company that implements DevOps practices as part of its development system. The evidence we obtained in the case studies supports the adequacy of MMBDO for assessing the maturity of BizDevOps in real companies. image
C1 [Sanjurjo, Eduardo; Pedreira, Oscar] Univ A Coruna, Ctr Invest CITIC, La Coruna, Spain.
   [Garcia, Felix; Piattini, Mario] Univ Castilla La Mancha, Informat Technol & Syst Inst ISTI, Ciudad Real, Spain.
   [Pedreira, Oscar] Univ A Coruna, Ctr Invest CITIC, Elvina S-N, La Coruna 15071, Spain.
C3 Universidade da Coruna; Universidad de Castilla-La Mancha; Universidade
   da Coruna
RP Pedreira, O (corresponding author), Univ A Coruna, Ctr Invest CITIC, Elvina S-N, La Coruna 15071, Spain.
EM eduardo.sanjurjo.royo@udc.es
RI Pedreira, Oscar/ABA-5296-2020; Piattini, Mario/F-6271-2013
OI Pedreira, Oscar/0000-0001-6176-4475; Piattini, Mario/0000-0002-7212-8279
FU European Union [0079_ATEMPO_6_E, 0064_GRESINT_1_E]; European Union
   through the Interreg Spain-Portugal/POCTEP - Spain's INE
   [PID2021-122554OB-C31/AEI/10.13039/501100011033/FEDER]; EU
   [PID2021-122554OB-C33/AEI/10.13039/501100011033, TED2021-129245B-C21,
   ED431C 2021/53]; CITIC - Xunta de Galicia
FX This work was partially supported by the grants and projects ATEMPO
   (0079_ATEMPO_6_E) and GRESINT (0064_GRESINT_1_E), both funded by
   European Union through the Interreg Spain-Portugal/POCTEP; CIDMEFEO,
   funded by Spain's INE; OASSIS
   (PID2021-122554OB-C31/AEI/10.13039/501100011033/FEDER, EU and
   PID2021-122554OB-C33/AEI/10.13039/501100011033) and PLAGEMIS-UDC
   (TED2021-129245B-C21), partially funded by MCIN/AEI and
   "NextGenerationEU"/PRTR; GRC (ED431C 2021/53), funded by GAIN/Xunta de
   Galicia;, and CITIC, funded by the Xunta de Galicia through the
   collaboration agreement between the Department of Culture, Education,
   Vocational Training and Universities and the Galician universities for
   the reinforcement of the research centers of the Galician University
   System (CIGUS).
CR [Anonymous], 2015, ISO/IEC 33001:2015 Information technology . Process assessment . Concepts and terminology
   [Anonymous], UNE 66178:2004 Sistemas de gestion de la calidad. Guia para lahorizontal ellipsis
   AXELOS Limited, ITIL® Foundation: ITIL 4 edition
   Azad N, 2023, INFORM SOFTWARE TECH, V157, DOI 10.1016/j.infsof.2023.107150
   Brereton P., 2008, Using a Protocol Template for Case Study Planning
   Chasioti K., 2019, BizDevOps: a process model for the alignment of DevOps with business goals
   Chrissis SS., 2011, CMMI for development: guidelines for process integration and product improvement, V3rd ed.
   Erich F, 2014, LECT NOTES COMPUT SC, V8892, P277, DOI 10.1007/978-3-319-13835-0_21
   Feijter R., 2017, Towards the adoption of DevOps in software product organizations: A maturity model approach
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Forbrig P., 2016, Continuous software engineering with special emphasis on continuous business-process modeling and human-centered design, DOI [10.1145/2882879.2882895, DOI 10.1145/2882879.2882895]
   Gimenez PJA., 2020, DevOps maturity diagnosis-A case study in two public organizations, DOI [10.1145/3411564.3411608, DOI 10.1145/3411564.3411608]
   Gruhn V., 2015, INT C INTELLIGENT SO, P388
   IEEE, 2022, IEEE 2675-2021-IEEE Standard for DevOps:Building Reliable and Secure Systems Including Application Build, Package, and Deployment
   ISO, ISO-ISO/IEC 33003:2015-Information technology-Process assessment-Requirements for process measurement frameworks
   ISO, ISO-ISO/IEC 33002:2015-Information technology-Process assessment-Requirements for performing process assessment
   ISO, ISO-ISO/IEC/IEEE 29119-2:2021-Software and systems engineering-Software testing-Part 2: Test processes
   ISO, 2017, ISO-ISO/IEC 27001:2017 Information security management-Security techniques-Information security management systems-Requirements
   ISO, ISO-ISO/IEC 33004:2015-Information technology-Process assessment-Requirements for process reference, process assessment and maturity models
   ISO/IEC, 2018, ISO/IEC 20000-1:2018, Information Technology-Service Management Part 1: Service management system requirements
   ISO/IEC, 2017, ISO/IEC 12207:2017 Systems and software engineering . Software life cycle processes
   ISO/IEC, 2015, ISO/IEC/IEEE 15288:2015, Systems and software engineering-System life cycle processes
   Japel LM., 2019, BizDevOps: A Systematic Literature Review Seminar paper
   Jayakody JAVMK, 2023, IJISPM-INT J INF SYS, V11, P60, DOI 10.12821/ijispm110304
   Kitchenham B., 2004, PROCEDURES PERFORMIN
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Lohrasbinasab I, 2020, LECT NOTES COMPUT SC, V12254, P698, DOI 10.1007/978-3-030-58817-5_50
   Lwakatare LE., 2016, An Exploratory Study of DevOps Extending the Dimensions of DevOps with Practices
   Marnewick C, 2021, IEEE SOFTWARE, V38, P48, DOI 10.1109/MS.2020.3023298
   Mohamed Samer I., 2015, IOSR Journal of Computer Engineering, DOI [10.9790/0661-17245157, DOI 10.9790/0661-17245157]
   Muñoz M, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2342
   Neubrand T., Development of a gqm-based technique for assessing devops maturity, V3, P117, DOI [10.5220/0010177801170129, DOI 10.5220/0010177801170129]
   Oktaba H, 2007, COMPUTER, V40, P21, DOI 10.1109/MC.2007.361
   Perez-Sanchez Juanjo, 2021, Trends and Applications in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 1368), P473, DOI 10.1007/978-3-030-72654-6_45
   Rafi S, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2323
   Rajapakse RN, 2022, INFORM SOFTWARE TECH, V141, DOI 10.1016/j.infsof.2021.106700
   Rodriguez M, 2021, IT PROF, V23, P17, DOI 10.1109/MITP.2021.3067944
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Sahid A, 2017, ICCWCS'17: PROCEEDINGS OF THE 2ND INTERNATIONAL CONFERENCE ON COMPUTING AND WIRELESS COMMUNICATION SYSTEMS, DOI 10.1145/3167486.3167556
   Sanjurjo E., 2020, Commun Comput Inf Sci, V1266 CCIS, P199, DOI [10.1007/978-3-030-58793-2_16, DOI 10.1007/978-3-030-58793-2_16]
   Schrader I., 2018, P INT C E LEARNING E, P87
   Waller Jan, 2015, ACM SIGSOFT Software Engineering Notes, V40, P1, DOI [10.1145/2735399, 10.1145/2735399.2735416]
   Wettinger J, 2014, INT CONF UTIL CLOUD, P59, DOI 10.1109/UCC.2014.14
   Wiedemann A, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P7017
   Wieringa Roel, 2012, Design Science Research in Information Systems. Advances in Theory and Practice. Proceedings 7th International Conference, DESRIST 2012, P220, DOI 10.1007/978-3-642-29863-9_17
   Yin RK., 2013, Collecting case study evidence
NR 46
TC 0
Z9 0
U1 3
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 FEB 26
PY 2024
DI 10.1002/smr.2646
EA FEB 2024
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JK9T0
UT WOS:001173184800001
DA 2024-08-05
ER

PT J
AU Vince, D
   Kiss, A
AF Vince, Daniel
   Kiss, Akos
TI Evaluation of the fixed-point iteration of minimizing delta debugging
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE Delta Debugging; evaluation; test case minimization
AB The minimizing Delta Debugging (DDMIN) was among the first algorithms designed to automate the task of reducing test cases. Its popularity is based on the characteristics that it works on any kind of input, without knowledge about the input structure. Several studies proved that smaller outputs can be produced faster with more advanced techniques (e.g., building a tree representation of the input and reducing that data structure); however, if the structure is unknown or changing frequently, maintaining the descriptors might not be resource-efficient. Therefore, in this paper, we focus on the evaluation of the novel fixed-point iteration of minimizing Delta Debugging (DDMIN*) on publicly available test suites related to software engineering. Our experiments show that DDMIN* can help reduce inputs further by 48.08% on average compared to DDMIN (using lines as the units of the reduction). Although the effectiveness of the algorithm improved, it comes with the cost of additional testing steps. This study shows how the characteristics of the input affect the results and when it pays off using DDMIN*.
   This paper focuses on the evaluation of the fixed-point iteration of the minimizing Delta Debugging algorithm (DDMIN*). Our experiments show that fixed-point iteration can help reduce inputs further by 48.08% on average (conducted on publicly available test suites using lines as the units of the reduction). This study also shows how the characteristics of the input affect the results and when it pays off using DDMIN*. image
C1 [Vince, Daniel; Kiss, Akos] Univ Szeged, Dept Software Engn, Szeged, Hungary.
C3 Szeged University
RP Vince, D (corresponding author), Univ Szeged, Dept Software Engn, Szeged, Hungary.
EM vinced@inf.u-szeged.hu
FU National Research, Development and Innovation Fund [TKP2021-NVA-09,
   NKP-22-3-SZTE-469, NKP-23-3-SZTE-536]
FX National Research, Development and Innovation Fund, Grant/Award
   Numbers:TKP2021-NVA-09, & Uacute;NKP-22-3-SZTE-469,&
   Uacute;NKP-23-3-SZTE-536
CR [Anonymous], Chromium: Bug Life Cycle and Reporting Guidelines
   [Anonymous], LLVM: How to submit an LLVM bug report
   Artho C, 2009, LECT NOTES COMPUT SC, V5394, P99
   Binkley D, 2019, EMPIR SOFTW ENG, V24, P3077, DOI 10.1007/s10664-018-9675-9
   Binkley D, 2017, IEEE INT WORK C SO, P21, DOI 10.1109/SCAM.2017.11
   Binkley D, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P109, DOI 10.1145/2635868.2635893
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Brsony D., 2022, OpenGL API call trace reduction with the minimizing delta debugging algorithm, P53
   Brumme R, 2009, ECOL STUD-ANAL SYNTH, V208, P1, DOI 10.1007/978-3-642-00340-0
   Clapp L, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P422, DOI 10.1145/2950290.2950342
   Gharachorlu G, 2019, LECT NOTES COMPUT SC, V11424, P409, DOI 10.1007/978-3-030-16722-6_24
   Gharachorlu G, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P426, DOI 10.1109/QRS.2018.00056
   Gold NE, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P547, DOI 10.1145/3106237.3106304
   Hildebrandt R., 2000, Simplifying failureinducing input, P135
   Hodován R, 2017, PROC IEEE INT CONF S, P194, DOI 10.1109/ICSME.2017.26
   Hodován R, 2017, 2017 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TESTING (AST), P23, DOI 10.1109/AST.2017.4
   Hodován R, 2016, ICSOFT-EA: PROCEEDINGS OF THE 11TH INTERNATIONAL JOINT CONFERENCE ON SOFTWARE TECHNOLOGIES - VOL. 1, P241, DOI 10.5220/0005988602410248
   Kalhauge CG, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P1003, DOI 10.1145/3453483.3454091
   Kalhauge CG, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P556, DOI 10.1145/3338906.3338956
   Kiss A, 2020, IEEE ACCESS, V8, P219837, DOI 10.1109/ACCESS.2020.3043027
   Kiss A, 2018, PROCEEDINGS OF THE 9TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '18), P16, DOI 10.1145/3278186.3278189
   Kremer G, 2021, LECT NOTES COMPUT SC, V12760, P231, DOI 10.1007/978-3-030-81688-9_11
   Misherghi G., 2006, 28th International Conference on Software Engineering Proceedings, P142, DOI 10.1145/1134285.1134307
   Misherghi GS., 2007, Hierarchical delta debugging
   Scott C, 2016, 13TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI '16), P291
   Stepanov D, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P317, DOI 10.1109/ASE.2019.00038
   Sun CN, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P361, DOI 10.1145/3180155.3180236
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Vince D, 2022, Iterating the minimizing delta debugging algorithm, P00
   Vince D., 2022, Cache optimizations for test case reduction, P442
   Vince D, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2483
   Vince D, 2021, PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES (ICSOFT), P196, DOI 10.5220/0010560501960206
   Vince D, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2021), P60, DOI 10.1109/AST52587.2021.00015
   Xu ZY, 2023, P ACM PROGRAM LANG, V7, DOI 10.1145/3586049
   Yoo S, 2014, IEEE INT WORK C SO, P175, DOI 10.1109/SCAM.2014.26
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
NR 37
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUN 23
PY 2024
DI 10.1002/smr.2702
EA JUN 2024
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA5S8
UT WOS:001252167400001
DA 2024-08-05
ER

PT J
AU Wu, YF
   Lin, CD
   Liu, A
   Zhao, L
   Zhang, XF
AF Wu, Yifan
   Lin, Chendong
   Liu, An
   Zhao, Lei
   Zhang, Xiaofang
TI Crowdsourced bug report severity prediction based on text and image
   understanding via heterogeneous graph convolutional networks
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE bug report severity prediction; crowdsourced testing; heterogeneous
   graph convolutional network (HGCN); machine learning; software quality
   assurance
ID RECOMMENDATION; SOFTWARE; GITHUB
AB In the process of crowdsourced testing, massive bug reports are submitted. Among them, the severity level of the bug report is an important indicator for traigers of crowdsourced platforms to arrange the order of reports efficiently so that developers can prioritize high-severity defects. A lot of work has been devoted to the study of automatically assigning severity levels to a large number of bug reports in crowdsourcing test systems. The research objects of these works are standard bug reports, focusing on the text part of the report, using various feature engineering methods and classification techniques. However, while achieving good performance, these methods still need to overcome two challenges: no consideration of image information in mobile testing and discontinuous semantic information of words in bug reports. In this paper, we propose a new method of severity prediction by using heterogeneous graph convolutional networks with screenshots (SPHGCN-S), which combines text features and screenshots information to understand the report more comprehensively. In addition, our approach applies the heterogeneous graph convolutional network (HGCN) architecture, which can capture the global word information to alleviate the semantic problem of word discontinuity and underlying relations between reports. We conduct a comprehensive study to compare seven commonly adopted bug report severity prediction methods with our approach. The experimental results show that our approach SPHGCN-S can improve severity prediction performance and effectively predict reports with high severity.
   SPHGCN-S, a crowdsourced bug, reports severity prediction model that integrates text and screenshot information via a heterogeneous GCN. SPHGCN-S enables the interaction between global vocabulary and document information by designing three weight measurement indicators for different node pairs. Extensive experiments demonstrate its excellent efficiency, outperforming all baselines. image
C1 [Wu, Yifan; Lin, Chendong; Liu, An; Zhao, Lei; Zhang, Xiaofang] Soochow Univ, Sch Comp Sci & Technol, Suzhou 215006, Peoples R China.
C3 Soochow University - China
RP Zhang, XF (corresponding author), Soochow Univ, Sch Comp Sci & Technol, Suzhou 215006, Peoples R China.
EM xfzhang@suda.edu.cn
OI Zhang, Xiaofang/0000-0002-8667-0456
FU National Natural Science Foundation of China [62172202, 61772263,
   61772014]; Collaborative Innovation Center of Novel Software Technology
   and Industrialization; Natural Science Foundation of Jiangsu Province
   [BKe20211307]; Youth Team on Interdisciplinary Research Soochoow
   University - Research on Subjectivity and Reasoning Theory in Artificial
   Intelligence [NH33714722]; Major Program of the Natural Science
   Foundation of Jiangsu Higher Education Institutions of China
   [22KJA520008]; Priority Academic Program Development of Jiangsu Higher
   Education Institutions
FX National Natural Science Foundation of China, Grant/Award Numbers:
   62172202, 61772263, 61772014; Collaborative Innovation Center of Novel
   Software Technology and Industrialization; Natural Science Foundation of
   Jiangsu Province, Grant/Award Number:BKe20211307; Youth Team on
   Interdisciplinary Research Soochoow University - Research on
   Subjectivity and Reasoning Theory in Artificial Intelligence,
   Grant/Award Number: NH33714722; Major Program of the Natural Science
   Foundation of Jiangsu Higher Education Institutions of China under,
   Grant/Award Number: 22KJA520008; Priority Academic Program Development
   of Jiangsu Higher Education Institutions
CR [Anonymous], 2016, Proceedings of the 26th Annual International Conference on Computer Science and Software Engineering
   Cai D., 2003, VIPS: a visionbased page segmentation algorithm
   Chen YT, 2021, APPL INTELL, V51, P4367, DOI 10.1007/s10489-020-02116-1
   Chen YT, 2021, MULTIMED TOOLS APPL, V80, P4237, DOI 10.1007/s11042-020-09887-2
   Choudhary SR., 2010 IEEE International Conference on Software Maintenance, V2010, P1
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Du MZ, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1756, DOI 10.1145/3540250.3558933
   Feng Y, 2016, IEEE INT CONF AUTOM, P202, DOI 10.1145/2970276.2970367
   Feng Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P225, DOI 10.1145/2786805.2786862
   Fu TJ, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P1409
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hou XC, 2021, Arxiv, DOI arXiv:2103.11794
   Huang L, 2020, P 28 INT C COMP LING, P799, DOI DOI 10.18653/V1/2020.COLING-MAIN.69
   Jia Y., 2021 8th International Conference on Dependable Systems and Their Applications (DSA), V2021, P42
   Joachims T., 1998, Text Categorization with Support Vector Machines: Learning with Many Relevant Features, P137, DOI DOI 10.1007/BFB0026683
   Joulin A, 2016, Arxiv, DOI [arXiv:1607.01759, DOI 10.48550/ARXIV.1607.01759]
   Kanji G.K., 2006, 100 Statistical Tests, V3Rd, P1
   Kao A., 2007, Natural Language Processing and Text Mining, DOI [10.1007/9781846287541, DOI 10.1007/9781846287541]
   Kim J, 2022, IEEE ACCESS, V10, P94643, DOI 10.1109/ACCESS.2022.3204689
   Kim Y., 2014, C EMP METH NAT LANG, P1746, DOI DOI 10.3115/V1/D14-1181
   Kukkar A, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19132964
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Lazebnik S, 2006, P IEEE INT C COMP VI, P2169, DOI DOI 10.1109/CVPR.2006.68
   Li X, 2022, Arxiv, DOI arXiv:2203.08992
   Li YY, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111121
   Liu D, 2022, IEEE T SOFTWARE ENG, V48, P1290, DOI 10.1109/TSE.2020.3017514
   Liu ZH, 2021, Arxiv, DOI arXiv:1910.09796
   Lowe DG, 2004, INT J COMPUT VISION, V60, P91, DOI 10.1023/B:VISI.0000029664.99615.94
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Mi HT, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2016), VOL 2, P124
   Mikolov T., 2013, INT C LEARNING REPRE, P1
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Ng AY, 2002, ADV NEUR IN, V14, P841
   Ramay WY, 2019, IEEE ACCESS, V7, P46846, DOI 10.1109/ACCESS.2019.2909746
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sokolova M, 2009, INFORM PROCESS MANAG, V45, P427, DOI 10.1016/j.ipm.2009.03.002
   Sun YM, 2009, INT J PATTERN RECOGN, V23, P687, DOI 10.1142/S0218001409007326
   Tan YS, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110567
   Tong Y, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106668
   Wang JJ, 2016, IEEE INT CONF AUTOM, P190, DOI 10.1145/2970276.2970300
   Wang Q., 2022, Intelligent Crowdsourced Testing, DOI [10.1007/9789811696435, DOI 10.1007/9789811696435]
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Wu HR, 2022, KNOWL-BASED SYST, V241, DOI 10.1016/j.knosys.2022.108308
   Wu HR, 2018, IET SOFTW, V12, P258, DOI 10.1049/iet-sen.2017.0159
   Wu Y., 2016, GOOGLES NEURAL MACHI
   Yang G, 2014, P INT COMP SOFTW APP, P97, DOI 10.1109/COMPSAC.2014.16
   Yao L, 2019, AAAI CONF ARTIF INTE, P7370
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zhang T, 2019, IEEE SOFTWARE, V36, P63, DOI 10.1109/MS.2017.377142400
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
   Zhang W, 2016, INFORM SOFTWARE TECH, V70, P68, DOI 10.1016/j.infsof.2015.10.004
   Zhu H, 2019, Arxiv, DOI arXiv:1902.00756
NR 55
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUN 27
PY 2024
DI 10.1002/smr.2705
EA JUN 2024
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WS2S1
UT WOS:001256803200001
DA 2024-08-05
ER

PT J
AU Hassanali, M
   Soltanaghaei, M
   Gandomani, TJ
   Boroujeni, FZ
AF Hassanali, Maryam
   Soltanaghaei, Mohammadreza
   Javdani Gandomani, Taghi
   Zamani Boroujeni, Farsad
TI Software development effort estimation using boosting algorithms and
   automatic tuning of hyperparameters with Optuna
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE automated hyperparameter tuning; boosting method; ensemble machine
   learning model; ISBSG; Optuna; software effort estimation
ID PREDICTION; MODEL
AB Considering the increasing need for software projects, estimating software development efforts is essential and can lead to improved project delivery quality. Machine learning methods are widely used to improve the accuracy of estimation. The boosting method is an ensemble machine learning technique less used in this field. In this research, five boosting algorithms including Adaboost, Gradient boosting, XGBoost, LightGBM, and CatBoost were implemented with the hyperparameter tuning framework Optuna on the ISBSG database. The Optuna is a next-generation optimization method for automatically tuning hyperparameters of algorithms. Six evaluation criteria MMRE, MdMRE, MAE, MSE, Pred(0.25), and SA were used to evaluate the findings. The results show that the hyperparameter automatic tuning by Optuna increases the accuracy of prediction provided by all five models. When the Catboost algorithm uses Optuna to tune its hyperparameters has made the best prediction among the five algorithms studied in this research. Using Optuna, compared to the case where the algorithm uses its default settings, the highest percentage of prediction improvement was observed in the XGBoost algorithm (except for the SA criterion). Based on the criteria of MMRE, Pred(0.25), and SA, this study has a better prediction than some relatively similar articles.
   The study introduces a new model to enhance software development effort estimation. It employs five boosting algorithms-Adaboost, Gradient boosting, XGBoost, LightGBM, and CatBoost-while utilizing the Optuna Hyperparameter tuning framework. The assessment encompasses six evaluation criteria: MMRE, MdMRE, MAE, MSE, Pred(0.25), and SA. The results highlight that Optuna-driven hyperparameter optimization enhances predictive accuracy for all models, with CatBoost exhibiting superior performance in predictions. image
C1 [Hassanali, Maryam; Soltanaghaei, Mohammadreza] Islamic Azad Univ, Dept Comp Engn, Isfahan Khorasgan Branch, Esfahan, Iran.
   [Javdani Gandomani, Taghi] Shahrekord Univ, Dept Comp Sci, Shahrekord, Iran.
   [Zamani Boroujeni, Farsad] Islamic Azad Univ, Dept Comp Engn, Sci & Res Branch, Tehran, Iran.
   [Soltanaghaei, Mohammadreza] Islamic Azad Univ, Dept Comp Engn, Isfahan Khorasgan Branch, Univ Blvd,Arqavanieh St, Esfahan, Iran.
C3 Islamic Azad University; Shahrekord University; Islamic Azad University;
   Islamic Azad University
RP Soltanaghaei, M (corresponding author), Islamic Azad Univ, Dept Comp Engn, Isfahan Khorasgan Branch, Univ Blvd,Arqavanieh St, Esfahan, Iran.
EM maryam.hasanali@gmail.com; soltan@khuisf.ac.ir; javdani@sku.ac.ir;
   farsad.zamani@yahoo.com
RI ; Javdani Gandomani, Taghi/E-1377-2016
OI Zamani Boroujeni, Farsad/0000-0002-2279-488X; Javdani Gandomani,
   Taghi/0000-0002-8333-7957
CR Abdelali Z, 2019, PROCEDIA COMPUT SCI, V148, P343, DOI 10.1016/j.procs.2019.01.042
   Agrawal T., 2021, Hyperparameter Optimization in Machine Learning'
   Akiba T, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2623, DOI 10.1145/3292500.3330701
   Alexandropoulos SAN, 2019, KNOWL ENG REV, V34, DOI 10.1017/S026988891800036X
   Ali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2211
   Arora M., 2021, 2021 2nd international conference on intelligent engineering and management (ICIEM)
   Bergstra James, 2015, Computational Science and Discovery, V8, DOI 10.1088/1749-4699/8/1/014008
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bhambri P., 2023, Agile Software Development: Trends, Challenges and Applications, P291
   Bühlmann P, 2007, STAT SCI, V22, P477, DOI 10.1214/07-STS242
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Daoud E. A., 2019, International Journal of Computer and Information Engineering, V13, P6, DOI [10.5281/zenodo.3607805, DOI 10.5281/ZENODO.3607805]
   Alanis-Tamez MD, 2020, MATHEMATICS-BASEL, V8, DOI 10.3390/math8101819
   De Barcelos Tronto IF., 2007, 2007 international joint conference on neural networks
   Elish MO, 2013, MATH PROBL ENG, V2013, DOI 10.1155/2013/312067
   Fan JL, 2019, AGR WATER MANAGE, V225, DOI 10.1016/j.agwat.2019.105758
   Feurer M, 2019, SPRING SER CHALLENGE, P3, DOI 10.1007/978-3-030-05318-5_1
   FREUND Y, 1995, INFORM COMPUT, V121, P256, DOI 10.1006/inco.1995.1136
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   González-Ladrón-de-Guevara F, 2016, J SYST SOFTWARE, V113, P188, DOI 10.1016/j.jss.2015.11.040
   Hammad M., 2018, 2018 INT C INNOVATIO
   Hertel L, 2020, SOFTWAREX, V12, DOI 10.1016/j.softx.2020.100591
   Hidmi O., 2017, Int J Comput Commun Instrument Eng, V4, P1
   Hosni M., 2017, Proceedings of the 27th international workshop on software measurement and 12th international conference on software process and product measurement
   Hosni M, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2343
   Hosni M, 2018, SOFT COMPUT, V22, P5977, DOI 10.1007/s00500-017-2945-4
   Huang JL, 2015, INFORM SOFTWARE TECH, V67, P108, DOI 10.1016/j.infsof.2015.07.004
   Hutter Frank, 2011, Learning and Intelligent Optimization. 5th International Conference, LION 5. Selected Papers, P507, DOI 10.1007/978-3-642-25566-3_40
   Hutter F., 2019, Automated machine learning: methods, systems, challenges, DOI [10.1007/978-3-030-05318-5, DOI 10.1007/978]
   Idri A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1925
   Idri A, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P132, DOI 10.5220/0005822701320139
   Jadhav A, 2022, MATH PROBL ENG, V2022, DOI 10.1155/2022/5782587
   Jia Wu, 2019, Journal of Electronic Science and Technology, V17, P26, DOI 10.11989/JEST.1674-862X.80904120
   Johansson Lannge E., 2021, Does the removal of correlated variables affect the classification accuracy of machine learning algorithms?
   Ke GL, 2017, ADV NEUR IN, V30
   Keung J, 2013, AUTOMAT SOFTW ENG, V20, P543, DOI 10.1007/s10515-012-0108-5
   Khan MS, 2021, IEEE ACCESS, V9, P60309, DOI 10.1109/ACCESS.2021.3072380
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kumar PS, 2020, COMPUT SCI REV, V38, DOI 10.1016/j.cosrev.2020.100288
   Kumar PS., 2021, Advances in machine learning and computational intelligence, P219, DOI [10.1007/978-981-15-5243-4_18, DOI 10.1007/978]
   Kumar PS., 2021, Innov Syst Softw Engineering, P1
   Lee S, 2021, ENG STRUCT, V238, DOI 10.1016/j.engstruct.2021.112109
   Marco R, 2022, INT J ADV COMPUT SC, V13, P419
   Mayr A, 2014, METHOD INFORM MED, V53, P419, DOI 10.3414/ME13-01-0122
   Mayr A, 2018, STAT MODEL, V18, P365, DOI 10.1177/1471082X17748086
   Öztürk MM, 2022, J EXP THEOR ARTIF IN, V34, P235, DOI 10.1080/0952813X.2021.1871664
   Palaniswamy SK, 2021, J AMB INTEL HUM COMP, V12, P6579, DOI 10.1007/s12652-020-02277-4
   Papatheocharous E., 2010, IFIP international conference on artificial intelligence applications and innovations, DOI [10.1007/978-3-642-16239-8_38, DOI 10.1007/978]
   Pospieszny P, 2018, J SYST SOFTWARE, V137, P184, DOI 10.1016/j.jss.2017.11.066
   Prokhorenkova L, 2018, ADV NEUR IN, V31
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sculley D., 2018, ICLR Workshop
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Snoek J., 2012, ADV NEURAL INFORM PR, DOI DOI 10.48550/ARXIV.1206.2944
   Srinivas P, 2022, BIOMED SIGNAL PROCES, V73, DOI 10.1016/j.bspc.2021.103456
   Toharudin T, 2023, IEEE ACCESS, V11, P35680, DOI 10.1109/ACCESS.2023.3265019
   Tyralis H, 2021, NEURAL COMPUT APPL, V33, P14101, DOI 10.1007/s00521-021-05995-8
   Villalobos-Arias L., 2021, Proceedings of the 17th International Conference on Predictive Models and Data Analytics in Software Engineering
   Xia T., 2020, Sequential model optimization for software effort estimation
NR 59
TC 0
Z9 0
U1 9
U2 9
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 APR 14
PY 2024
DI 10.1002/smr.2665
EA APR 2024
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NP2Q7
UT WOS:001201594400001
DA 2024-08-05
ER

PT J
AU Canedo, ED
   Cancado, ECR
   Mota, APB
   Bandeira, IN
   Costa, PHT
   Lima, F
   Amaral, L
   Bonifacio, R
AF Canedo, Edna Dias
   Cancado, Emille Catarine Rodrigues
   Mota, Alana Paula Barbosa
   Bandeira, Ian Nery
   Costa, Pedro Henrique Teixeira
   Lima, Fernanda
   Amaral, Luis
   Bonifacio, Rodrigo
TI Using Design Thinking to break social barriers: An experience report
   with former inmates
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE Design Thinking; former inmates; interviews; mobile application;
   requirements elicitation
ID REQUIREMENTS ELICITATION
AB Design Thinking techniques have been widely used in software requirements elicitation to understand the necessities of stakeholders and end-users. However, there is a lack of evidence of their effectiveness when applied to guide the development process of a system targeting vulnerable populations. What are the implications of using Design Thinking techniques to elicit requirements in a community of former inmates-and what would be the benefits of and challenges in this deployment? In this paper, we report our experience of using Design Thinking for requirements elicitation of a mobile application customized for the former inmates of the Brazilian prison system and their families. We applied techniques such as Brainstorming, Stakeholder Mapping, Personas Creation, Rapid Ethnography, and Interviews to obtain relevant data and create several prototypes. These techniques contribute to the development of an uncommon application that aims to help the reintegration process of former inmates into society. Our results validate the initial hypothesis that such techniques, when applied to a sensitive context, assist product development that meets the end-users' needs by creating a higher quality product. The main limitation of the research was the lack of access to low-literacy end-users and/or former inmates without previous experience using mobile devices.
   We present how to adapt and select Design Thinking methods to meet the possible needs of the vulnerable population. We provide evidence that such tools could benefit from product requirements elicitation aimed toward this population. We discuss the preliminary test results and how the developed product could have its impacts assessed and analyzed upon subsequent internal releases. Our results validate the initial hypothesis that such techniques, when applied to a sensitive context, assist product development that meets the end-users' needs by creating a higher quality product. image
C1 [Canedo, Edna Dias; Cancado, Emille Catarine Rodrigues; Mota, Alana Paula Barbosa; Bandeira, Ian Nery; Costa, Pedro Henrique Teixeira; Lima, Fernanda; Amaral, Luis; Bonifacio, Rodrigo] Univ Brasilia UnB, Dept Comp Sci, POB 4466, BR-70910900 Brasilia, DF, Brazil.
C3 Universidade de Brasilia
RP Canedo, ED (corresponding author), Univ Brasilia UnB, Dept Comp Sci, POB 4466, BR-70910900 Brasilia, DF, Brazil.
EM ednacanedo@unb.br
RI Canedo, Edna Dias/D-5674-2015; Bonifacio, Rodrigo/B-3450-2014; Canedo,
   Edna Dias/AGR-0318-2022
OI Canedo, Edna Dias/0000-0002-2159-339X; Canedo, Edna
   Dias/0000-0002-2159-339X; Lima, Fernanda/0000-0001-6300-818X; Nery
   Bandeira, Ian/0000-0002-8083-7278; Vieira Amaral, Luis
   Henrique/0000-0003-1236-3119; Bonifacio, Rodrigo/0000-0002-2380-2829;
   Barbosa Mota, Alana Paula/0000-0002-3976-6877
FU National Council of Justice; FAPDF (the Brazilian Federal District
   Research Foundation)
FX We want to thank the National Council of Justice for supporting this
   research. This work has been partially supported by FAPDF (the Brazilian
   Federal District Research Foundation).
CR Aldave A, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110396
   Alflen NC, 2020, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 2, P242, DOI 10.5220/0009397502420249
   Alhazmi Alhejab, 2020, CSSE '20: Proceedings of the 3rd International Conference on Computer Science and Software Engineering, P33, DOI 10.1145/3403746.3403902
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Baqui P, 2020, LANCET GLOB HEALTH, V8, P1018, DOI 10.1016/S2214-109X(20)30285-0
   Braz Rafael dos Santos, 2019, Lecture Notes in Computer Science (Including Subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), 11583 LNCS, P179, DOI [10.1007/978-3-030-23570- 3_14, DOI 10.1007/978-3-030-23570-3_14]
   Brown T, 2009, BUS WEEK, P54
   Bruce Hanington B.M, 2012, Universal methods of design: 100 ways to research complex problems, develop innovative ideas, and design effective solutions, DOI DOI 10.5860/CHOICE.49-5403
   Canedo ED., 2023, USE JOURNEY MAPS PER
   Canedo ED., 2020, HICSS SCHOLARSPACE, P1
   Canedo ED, 2022, INT J SOFTW ENG KNOW, V32, P1527, DOI 10.1142/S0218194022500607
   Canedo ED, 2020, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 2, P217, DOI 10.5220/0009387502170224
   Carroll N, 2016, 2016 IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING IN HEALTHCARE SYSTEMS (SEHS), P1, DOI 10.1109/SEHS.2016.009
   Chasanidou D, 2015, LECT NOTES COMPUT SC, V9186, P12, DOI 10.1007/978-3-319-20886-2_2
   Coutinho EF., 2016, APPLYING DESIGN THIN, P1
   Cysneiros LM, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P350, DOI 10.1109/ICRE.2002.1048548
   de Paula TR, 2020, IEEE SOFTWARE, V37, P49, DOI 10.1109/MS.2019.2959473
   de Souza JC, 2021, ICEIS: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P283, DOI 10.5220/0010443402830290
   Departamento Penitenciario Brasileiro, 2021, PRESOS UNIDADES PRIS
   Dieste O, 2011, IEEE T SOFTWARE ENG, V37, P283, DOI 10.1109/TSE.2010.33
   Duarte JC., 2022, P 21 BRAZ S SOFTW QU, p31:1
   Eisenman B., 2015, Learning react native: Building native mobile apps with JavaScript
   Ferreira B, 2018, IET SOFTW, V12, P280, DOI 10.1049/iet-sen.2017.0313
   Figma, 2017, FIGMA COLLABORATIVE
   Gobov Denys, 2020, 2020 15th Conference on Computer Science and Information Systems (FedCSIS), P673, DOI 10.15439/2020F16
   Godoy CP., 2019, 2019 ACM IEEE 14 INT, P85
   Gong C, 2018, LECT NOTES COMPUT SC, V10918, P60, DOI 10.1007/978-3-319-91797-9_5
   Grace MC., 2012, UNSAFE EXPOSURE ANAL, P101
   Hehn J., 2021, DESIGN THINKING SOFT, P11
   Hehn J, 2020, IEEE SOFTWARE, V37, P25, DOI 10.1109/MS.2019.2957715
   Herrmann A, 2018, IEEE INT WORKS EMPIR, P1, DOI 10.1109/EmpiRE.2018.00008
   Hiremath M, 2013, LECT NOTES COMPUT SC, V8119, P780
   Husaria A, 2020, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 2, P353, DOI 10.5220/0009489303530359
   Hwang W, 2010, COMMUN ACM, V53, P130, DOI 10.1145/1735223.1735255
   Ignacio RC., 2020, IMPROVING SELECTION, P1
   Jussli Alexandra, 2022, The Transdisciplinary Reach of Design Science Research: 17th International Conference on Design Science Research in Information Systems and Technology, DESRIST 2022, Proceedings. Lecture Notes in Computer Science (13229), P351, DOI 10.1007/978-3-031-06516-3_26
   Jussli A, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P240, DOI 10.1109/REW53955.2021.00045
   Kahan E., 2023, 26 IB C SOFTW ENG CI, P214
   Kahan E., 2019, QUALITY INFORM COMMU, P79, DOI DOI 10.1007/978-3-030-29238-66
   Krüger S, 2021, IEEE T SOFTWARE ENG, V47, P2382, DOI 10.1109/TSE.2019.2948910
   Kumar NM., 2017, DESIGN THINKING INNO, P21
   Leao SM., 2016, REV TRANSGRESS ES, V4, P46
   Lichtenthaler U., 2020, INT J SERVICE SCI MA, V11, P157, DOI [10.4018/IJSSMET.2020010110, DOI 10.4018/IJSSMET.2020010110]
   Lima Dantas Douglas, 2020, Distributed, Ambient and Pervasive Interactions. 8th International Conference, DAPI 2020 Held as Part of the 22nd HCI International Conference, HCII 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12203), P85, DOI 10.1007/978-3-030-50344-4_7
   Lin TC, 2021, APPL CLIN INFORM, V12, P960, DOI 10.1055/s-0041-1736222
   Lowdermilk Travis, 2013, User-centered design: a developer's guide to building user-friendly applications
   Ludmann J., 2023, 29 AM C INF SYST AMC
   Marvel, 2020, MARVEL PROTOTYPING L
   McGraw G, 2004, IEEE SECUR PRIV, V2, P80, DOI 10.1109/MSECP.2004.1281254
   Meireles MAC., 2022, P 21 BRAZ S SOFTW QU, p9:1
   Millard N, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P66, DOI 10.1109/ICRE.1998.667810
   Millen DR., 2000, RAPID ETHNOGRAPHY TI, P280, DOI DOI 10.1145/347642.347763
   Murugesan LK, 2017, 2017 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON DESIGN AND INNOVATION IN SOFTWARE ENGINEERING (DISE), P6, DOI 10.1109/DISE.2017.9
   Newman P, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P487, DOI 10.1109/ICSE.2015.181
   Pacheco C, 2018, IET SOFTW, V12, P365, DOI 10.1049/iet-sen.2017.0144
   Parizi R., 2021, HELIUS RECOMMENDATIO, P1
   Parizi R, 2022, J SYST SOFTWARE, V187, DOI 10.1016/j.jss.2022.111217
   Poth A, 2020, INT REQUIR ENG CONF, P238, DOI 10.1109/RE48521.2020.00034
   Presidencia da Republica, 1984, LEI N 7210
   Rahaman S, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2455, DOI 10.1145/3319535.3345659
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Cançado ECR, 2022, ICEIS: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 1, P85, DOI 10.5220/0010959900003179
   Rodriguez SL, 2020, INT J EDUC MATH SCI, V8, P304, DOI 10.46328/ijemst.v8i4.952
   Sandino D., 2013, LECT NOTES COMPUTER, P583, DOI DOI 10.1007/978-3-642-39229-0
   Sangaramoorthy T., 2020, RAPID ETHNOGRAPHIC A
   Schmettow M, 2012, COMMUN ACM, V55, P64, DOI 10.1145/2133806.2133824
   Souza A, 2020, IET SOFTW, V14, P693, DOI 10.1049/iet-sen.2019.0300
   Stanford d.school, 2021, DESIGN THINKING BOOT
   Stickdorn Marc., 2011, This is Service Design Thinking
   Tiwari S, 2022, COMPUT APPL ENG EDUC, V30, P1683, DOI 10.1002/cae.22550
   Turner CW., 2006, INT ENCY ERGONOMICS, V3, P3084, DOI DOI 10.1201/9780849375477.CH597
   Vetterli C., 2013, JUMPSTARTING SCRUM D
   Vetterli C, 2013, IEEE INTERNET COMPUT, V17, P91, DOI 10.1109/MIC.2013.32
   Vindrola-Padros Cecilia., 2021, Rapid Ethnographies: A Practical Guide
   Vogel J., 2021, LETS DESIGN THINKING
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Ximenes BH, 2015, LECT NOTES COMPUT SC, V9186, P356, DOI 10.1007/978-3-319-20886-2_34
   Zhao TT, 2014, BEHAV INFORM TECHNOL, V33, P162, DOI 10.1080/0144929X.2012.708786
NR 78
TC 0
Z9 0
U1 3
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2024
VL 36
IS 7
DI 10.1002/smr.2648
EA FEB 2024
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YG4W1
UT WOS:001157613400001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Poth, A
   Momen, P
AF Poth, Alexander
   Momen, Pegah
TI Sustainable software engineering-A contribution puzzle of different
   teams in large IT organizations
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE green coding; green IT; ISO 14001; software life-cycle; sustainable
   software engineering
ID ENERGY-EFFICIENCY; FRAMEWORK; GREEN; CLOUD; IMPACT; MODEL
AB IT sustainability is becoming more and more important within the digitalization journey. It is more than green coding or the usage of power-efficient hardware - it needs a holistic approach to leverage the potentials end-to-end in the software life-cycle. The overall value stream within the IT organization is subject to sustainability alignment. This holistic alignment demands the engagement of different teams in large IT organizations. This article identifies the contributions of typical team stakeholders and evaluates their sustainability software engineering (SSE) contributions. This includes demand, architecture, design, implementation, operation, and usage. As an IT organization focuses on more than just software, the term sustainable IT engineering (SIE) fits better with the scope of organizational sustainability. The proposed approaches are presented based on instantiations within the Volkswagen Group IT.
   IT sustainability is more than green coding or the usage of power-efficient hardware; it needs a holistic approach to lever the potentials end-to-end in the software life-cycle. The proposed approach includes demand, architecture, design, implementation, operations, and usage. image
C1 [Poth, Alexander; Momen, Pegah] Volkswagen AG, Berliner Ring 2, D-38436 Wolfsburg, Germany.
C3 Volkswagen; Volkswagen Germany
RP Poth, A (corresponding author), Volkswagen AG, Berliner Ring 2, D-38436 Wolfsburg, Germany.
EM alexander.pothpegah.momen@volkswagen.de
CR [Anonymous], AWS WAF: Amazon web service
   [Anonymous], Microsoft sustainability
   [Anonymous], Google sustainability
   Basili V.R., 1994, Encyclopedia of software engineering, P528
   Becker C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P467, DOI 10.1109/ICSE.2015.179
   Bernstein D, 2014, IEEE CLOUD COMPUT, V1, P81, DOI 10.1109/MCC.2014.51
   Bozzelli P., 2013, A systematic Literature Review on Green Software Metrics
   Broccardo L, 2023, TECHNOL FORECAST SOC, V187, DOI 10.1016/j.techfore.2022.122146
   Chauhan NS, 2013, IT PROF, V15, P28, DOI 10.1109/MITP.2013.6
   De Felice F, 2021, IET COLL INTEL MANUF, V3, P75, DOI 10.1049/cim2.12013
   Dumitriu D, 2020, PROCEDIA MANUF, V46, P932, DOI 10.1016/j.promfg.2020.05.011
   Greening LA, 2000, ENERG POLICY, V28, P389, DOI 10.1016/S0301-4215(00)00021-5
   Gupta U, 2022, CONF PROC INT SYMP C, P784, DOI 10.1145/3470496.3527408
   Huang JC, 1999, ASSET'99: 1999 IEEE SYMPOSIUM ON APPLICATION-SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING & TECHNOLOGY - PROCEEDINGS, P244, DOI 10.1109/ASSET.1999.756775
   Junger D., 2023, Potentials of Green Coding-Findings and Recommendations for Industry, Education and Science
   Kennes T., 2023, arXiv, P1
   Kern E, 2018, FUTURE GENER COMP SY, V86, P199, DOI 10.1016/j.future.2018.02.044
   Kipp A., 2011, Proceedings of the 2011 International Conference on Complex, Intelligent and Software Intensive Systems (CISIS 2011), P241, DOI 10.1109/CISIS.2011.42
   Lannelongue L, 2021, ADV SCI, V8, DOI 10.1002/advs.202100707
   Lee YC, 2012, J SUPERCOMPUT, V60, P268, DOI 10.1007/s11227-010-0421-3
   Mahmoud Sara S., 2013, International Journal of Software Engineering and Its Applications, V7, P55
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Milla A, 2022, COMM COM INF SC, V1584, P21, DOI 10.1007/978-3-031-05903-2_2
   Moen R., 2006, EVOLUTION PDCA CYCLE
   Naumann S, 2011, SUSTAIN COMPUT-INFOR, V1, P294, DOI 10.1016/j.suscom.2011.06.004
   Nazar N, 2022, J SYST SOFTWARE, V185, DOI 10.1016/j.jss.2021.111179
   Niven PR., 2016, Objectives and Key Results: Driving Focus, Alignment, and Engagement with OKRs, DOI [10.1002/9781119255543, DOI 10.1002/9781119255543]
   O'Brien R., 1998, OVERVIEW METHODOLOGI
   Oka Dennis Kengo, 2018, Proc. 16th ESCAR Europe, P1
   Ournani Zakaria, 2020, Proceedings of the 14th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), DOI 10.1145/3382494.3410678
   Penzenstadler B, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P454, DOI 10.1109/CSEET.2011.5876124
   Pereira R, 2021, SCI COMPUT PROGRAM, V205, DOI 10.1016/j.scico.2021.102609
   Pereira R, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P256, DOI 10.1145/3136014.3136031
   Poth A, 2022, IEEE I C SQRS-C, P201, DOI 10.1109/QRS-C57518.2022.00038
   Poth A., 2024, European Conference on Software Process Improvement (in review)
   Poth A., 2022, International Conference on Agile Software Development, P21, DOI [10.1007/978-3-031-48550-3_3, DOI 10.1007/978]
   Poth A., 2022, European Conference on Software Process Improvement, P503, DOI [10.1007/978-3-031-15559-8_36, DOI 10.1007/978]
   Poth A., 2024, 31st CIRP conference on life cycle engineering (LCE)
   Radersma R, 2022, ERCIM NEWS, P19
   Raisian K, 2022, COMPUT SYST SCI ENG, V41, P271, DOI 10.32604/csse.2022.020496
   Rashid N, 2021, IEEE ACCESS, V9, P71868, DOI 10.1109/ACCESS.2021.3079194
   Riekstin AC, 2018, IEEE COMMUN SURV TUT, V20, P1244, DOI 10.1109/COMST.2017.2784803
   Robertson J., 2000, Educational Action Research, V8, P307, DOI DOI 10.1080/09650790000200124
   RODGERS R, 1991, J APPL PSYCHOL, V76, P322, DOI 10.1037/0021-9010.76.2.322
   Rondeau E., 2015, Green Information Technology, P29, DOI [10.1016/B978-0-12-801379-3.00003-6, DOI 10.1016/B978]
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sanlialp I, 2022, ELECTRONICS-SWITZ, V11, DOI 10.3390/electronics11030442
   Saputri TRD, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106407
   Sarker KU, 2020, INT J ADV COMPUT SC, V11, P69
   Schmitt N, 2021, I S MOD ANAL SIM COM, P17, DOI 10.1109/MASCOTS53633.2021.9614299
   Schmitt N, 2020, INT CONF UTIL CLOUD, P292, DOI 10.1109/UCC48980.2020.00047
   Slot R, 2009, LECT NOTES BUS INF P, V28, P84
   Sriraman G, 2023, SUSTAINABILITY-BASEL, V15, DOI 10.3390/su15118766
   Terragni V, 2020, INT C PROGRAM COMPRE, P241, DOI 10.1145/3387904.3389273
   Torre D, 2017, 2017 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING CURRICULA FOR MILLENNIALS (SECM), P54, DOI 10.1109/SECM.2017.4
   Tufano R, 2024, IEEE T SOFTWARE ENG, V50, P338, DOI 10.1109/TSE.2023.3348172
   Venters CC, 2018, J SYST SOFTWARE, V138, P174, DOI 10.1016/j.jss.2017.12.026
NR 57
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 MAY 13
PY 2024
DI 10.1002/smr.2677
EA MAY 2024
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QK2I8
UT WOS:001220698900001
DA 2024-08-05
ER

PT J
AU Altiero, F
   Corazza, A
   Di Martino, S
   Peron, A
   Starace, LLL
AF Altiero, Francesco
   Corazza, Anna
   Di Martino, Sergio
   Peron, Adriano
   Starace, Luigi Libero Lucio
TI Regression test prioritization leveraging source code similarity with
   tree kernels
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE regression testing; source code changes; test prioritization; tree
   kernels
AB Regression test prioritization (RTP) is an active research field, aiming at re-ordering the tests in a test suite to maximize the rate at which faults are detected. A number of RTP strategies have been proposed, leveraging different factors to reorder tests. Some techniques include an analysis of changed source code, to assign higher priority to tests stressing modified parts of the codebase. Still, most of these change-based solutions focus on simple text-level comparisons among versions. We believe that measuring source code changes in a more refined way, capable of discriminating between mere textual changes (e.g., renaming of a local variable) and more structural changes (e.g., changes in the control flow), could lead to significant benefits in RTP, under the assumption that major structural changes are also more likely to introduce faults. To this end, we propose two novel RTP techniques that leverage tree kernels (TK), a class of similarity functions largely used in Natural Language Processing on tree-structured data. In particular, we apply TKs to abstract syntax trees of source code, to more precisely quantify the extent of structural changes in the source code, and prioritize tests accordingly. We assessed the effectiveness of the proposals by conducting an empirical study on five real-world Java projects, also used in a number of RTP-related papers. We automatically generated, for each considered pair of software versions (i.e., old version, new version) in the evolution of the involved projects, 100 variations with artificially injected faults, leading to over 5k different software evolution scenarios overall. We compared the proposed prioritization approaches against well-known prioritization techniques, evaluating both their effectiveness and their execution times. Our findings show that leveraging more refined code change analysis techniques to quantify the extent of changes in source code can lead to relevant improvements in prioritization effectiveness, while typically introducing negligible overheads due to their execution.
   Not all changes to a codebase are equal: Some modifications (e.g., heavy refactoring) are more critical than others (e.g., renaming local variables). In this paper, we present two regression test prioritization techniques, namely, method-level tree kernel prioritization (MTK) and method-level tree kernel with quotient set (MTK-QS), leveraging tree kernel functions to effectively measure the structural similarity of changed methods and directing testing efforts towards code affected by more critical changes. Our experiments show that these techniques can significantly improve the fault detection rate than other traditional and widely used approaches. image
C1 [Altiero, Francesco; Corazza, Anna; Di Martino, Sergio; Starace, Luigi Libero Lucio] Univ Napoli Federico II, Dipartimento Ingn Elettr & Tecnol Informaz, Naples, Italy.
   [Peron, Adriano] Univ Trieste, Dipartimento Matemat & Geosci, Trieste, Italy.
   [Altiero, Francesco; Starace, Luigi Libero Lucio] Univ Napoli Federico II, DIETI, Naples, Italy.
C3 University of Naples Federico II; University of Trieste; University of
   Naples Federico II
RP Altiero, F; Starace, LLL (corresponding author), Univ Napoli Federico II, DIETI, Naples, Italy.
EM francesco.altiero@unina.it; anna.corazza@unina.it;
   sergio.dimartino@unina.it; adriano.peron@units.it;
   luigiliberolucio.starace@unina.it
RI Starace, Luigi Libero Lucio/ADG-3293-2022
OI Starace, Luigi Libero Lucio/0000-0001-7945-9014; CORAZZA,
   Anna/0000-0002-9156-5079
CR Aho AV., 2006, Compilers: Principles, Techniques, and Tools, V2nd ed., DOI [10.5555/1177220, DOI 10.5555/1177220]
   Alenezi Mamdouh, 2014, International Journal of Computers and Applications, V36, P34, DOI 10.2316/Journal.202.2014.1.202-3902
   Altiero F., 2023, Zenodo, DOI [10.5281/zenodo.8256619, DOI 10.5281/ZENODO.8256619]
   Altiero F, 2022, IEEE WORK CONF MIN S, P196, DOI 10.1145/3524842.3528490
   Altiero F, 2020, LECT NOTES COMPUT SC, V12543, P272, DOI 10.1007/978-3-030-64881-7_17
   Bagherzadeh M, 2022, IEEE T SOFTWARE ENG, V48, P2836, DOI 10.1109/TSE.2021.3070549
   Bertolino A, 2020, PROC INT CONF SOFTW, P1, DOI 10.1145/3377811.3380369
   Beszédes A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P46, DOI 10.1109/ICSM.2012.6405252
   Bin Noor T, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P58, DOI 10.1109/ISSRE.2015.7381799
   Busjaeger B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P975, DOI 10.1145/2950290.2983954
   Chittimalli PK, 2009, IEEE T SOFTWARE ENG, V35, P452, DOI 10.1109/TSE.2009.4
   Collins M, 2002, ADV NEUR IN, V14, P625
   Corazza A., 2010, A tree kernel based approach for clone detection, P1
   Costa D, 2021, IEEE T SOFTWARE ENG, V47, P1452, DOI 10.1109/TSE.2019.2925345
   Coviello C., 2020, Gasser: genetic algorithm for test suite reduction, P1
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Engström E, 2010, LECT NOTES COMPUT SC, V6156, P3, DOI 10.1007/978-3-642-13792-1_3
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C
   Fan YR, 2021, PROC INT CONF SOFTW, P1174, DOI 10.1109/ICSE43902.2021.00108
   Filice S, 2018, J MACH LEARN RES, V18
   Gao DD, 2015, INT CONF SOFTW ENG, P275, DOI 10.1109/ICSESS.2015.7339054
   Hao D, 2016, IEEE T SOFTWARE ENG, V42, P490, DOI 10.1109/TSE.2015.2496939
   Hao D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685614
   Harrold MJ, 1999, J SYST SOFTWARE, V47, P173, DOI 10.1016/S0164-1212(99)00037-0
   Haussler D, 1999, CONVOLUTION KERNELS
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Huang RB, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110712
   Huang YC, 2012, J SYST SOFTWARE, V85, P626, DOI 10.1016/j.jss.2011.09.063
   Ishikawa T., 2020, Machine learning for tree structures in fake site detection, P1
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kaur A., 2011, Int J Comput Sci Eng, V3, P1815
   Kazmi R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3057269
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Korel B, 2005, PROC IEEE INT CONF S, P559
   Korel B, 2009, IEEE ICST WORKSHOP, P77, DOI 10.1109/ICSTW.2009.45
   Li BX, 2012, ADV ENG SOFTW, V53, P1, DOI 10.1016/j.advengsoft.2012.07.001
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lianping Chen, 2015, IEEE Software, V32, P50, DOI 10.1109/MS.2015.27
   Lin CT, 2013, IEEE INT C ENG COMP, P171, DOI 10.1109/ICECCS.2013.33
   Lou YL, 2019, ADV COMPUT, V113, P1, DOI 10.1016/bs.adcom.2018.10.001
   Lu YF, 2016, PROC INT CONF SOFTW, P535, DOI 10.1145/2884781.2884874
   Luo Q, 2019, IEEE T SOFTWARE ENG, V45, P1054, DOI 10.1109/TSE.2018.2822270
   Martin Robert C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship, V1st
   Mattis T, 2020, IEEE WORK CONF MIN S, P385, DOI 10.1145/3379597.3387458
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Moschitti A, 2006, Making tree kernels practical for natural language learning
   Moschitti A, 2006, LECT NOTES COMPUT SC, V4212, P318
   Nayak S, 2021, SOFT COMPUT, V25, P9925, DOI 10.1007/s00500-020-05428-z
   Neamtiu I., 2005, Understanding source code evolution using abstract syntax tree matching, P1, DOI [10.1145/1083142.1083143, DOI 10.1145/1083142.1083143]
   Palma F, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P80, DOI 10.1145/3273934.3273944
   Park H, 2008, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON INFORMATION SECURITY AND ASSURANCE, P32
   Paterson D, 2019, IEEE INT CONF SOFTW, P346, DOI 10.1109/ICST.2019.00041
   Peng Q., 2020, P 29 ACM SIGSOFT INT, P324, DOI DOI 10.1145/3395363.3397383
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sun X., 2011, Using lattice of class and method dependence for change impact analysis of object oriented programs, P1439, DOI [10.1145/1982185.1982495, DOI 10.1145/1982185.1982495]
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Vescan A, 2020, PROC IEEE INT CONF S, P786, DOI 10.1109/ICSME46990.2020.00091
   Wang RC, 2015, IET SOFTW, V9, P29, DOI 10.1049/iet-sen.2014.0008
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Xing Y, 2021, COMPUT COMMUN, V180, P295, DOI 10.1016/j.comcom.2021.09.014
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yusuff SR., 2021, Int J Softw Eng Comput Syst, V7, P57
   Zhang CJ, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY AND INDUSTRIAL ENGINEERING, VOLS I AND II, P171, DOI 10.1109/QSIC.2010.16
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
NR 75
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 FEB 15
PY 2024
DI 10.1002/smr.2653
EA FEB 2024
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HX3V4
UT WOS:001162778200001
DA 2024-08-05
ER

PT J
AU Zhou, YF
   Liu, XT
   Guo, ZQ
   Zhou, YM
   Zhang, CR
   Qian, JY
AF Zhou, Yufei
   Liu, Xutong
   Guo, Zhaoqiang
   Zhou, Yuming
   Zhang, Corey
   Qian, Junyan
TI Deep learning or classical machine learning? An empirical study on
   line-level software defect prediction
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE code features; deep learning; defect prediction; line-level
ID ORIENTED DESIGN METRICS; AGREEMENT
AB BackgroundLine-level software defect prediction (LL-SDP) serves as a valuable tool for developers to detect defective lines with minimal human effort. Recently, GLANCE was proposed as a readily implementable baseline for assessing the efficacy of newly proposed LL-SDP models.ProblemWhile DeepLineDP, a cutting-edge LL-SDP model rooted in deep learning, has demonstrated state-of-the-art performance, it has not yet been compared against GLANCE.ObjectiveWe aim to empirically compare DeepLineDP with GLANCE to obtain a comprehensive understanding of how deep learning contributes to solving the LL-SDP challenge.MethodWe compare GLANCE against DeepLineDP to assess the extent to which DeepLineDP surpasses GLANCE in predicting defective files and identifying problematic lines. In order to obtain a reliable conclusion, we use the same dataset and performance metrics utilized by DeepLineDP.ResultOur experimental findings indicate that DeepLineDP does not outperform GLANCE in LL-SDP. This suggests that the application of deep learning, in this context, does not yield the anticipated significant improvements.ConclusionThis finding underscores the need for further research in deep learning-based LL-SDP to attain the state-of-the-art performance that remains elusive for less advanced techniques.
   We conducted a thorough comparative analysis between DeepLineDP, a deep learning-based line-level defect prediction (LL-SDP) approach, and GLANCE, a recently introduced, simpler, traditional LL-SDP approach. Our findings reveal that the application of deep learning to LL-SDP does not invariably lead to substantial improvements, which is rather surprising in our community. image
C1 [Zhou, Yufei; Qian, Junyan] Guangxi Normal Univ, Key Lab Educ Blockchain & Intelligent Technol, Minist Educ, Guilin, Guangxi, Peoples R China.
   [Liu, Xutong; Zhou, Yuming] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Guo, Zhaoqiang] Huawei Technol Co Ltd, Hangzhou, Zhejiang, Peoples R China.
   [Zhang, Corey] Eastlake High Sch, Sammamish, WA USA.
C3 Guangxi Normal University; Nanjing University; Huawei Technologies
RP Qian, JY (corresponding author), Guangxi Normal Univ, Key Lab Educ Blockchain & Intelligent Technol, Minist Educ, Guilin, Guangxi, Peoples R China.
EM qjy2000@gmail.com
OI Qian, Junyan/0000-0002-1325-6975; Guo, Zhaoqiang/0000-0001-8971-5755
FU National Natural Science Foundation of China; Guangxi Natural Science
   Foundation [2024GXNSFBA010248, 2018GXNSFDA138003]; Basic Ability
   Enhancement Program for Young and Middle-aged Teachers of Guangxi
   [2023KY0057]; Guangxi Collaborative Innovation Center of Multi-source
   Information Integration and Intelligent Processing;  [62162004]; 
   [62172205];  [U21A20474]
FX This work was supported by the National Natural Science Foundation of
   China under Grants 62162004, 62172205, and U21A20474, in part by the
   Guangxi Natural Science Foundation under Grant 2024GXNSFBA010248,
   2018GXNSFDA138003, in part by the Basic Ability Enhancement Program for
   Young and Middle-aged Teachers of Guangxi under Grant 2023KY0057, and in
   part by Guangxi Collaborative Innovation Center of Multi-source
   Information Integration and Intelligent Processing.
CR Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   calculator.net, About us
   Checkstyle, About us
   Chen JY, 2020, PROC INT CONF SOFTW, P578, DOI 10.1145/3377811.3380389
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Error Prone, about us
   findbugs.sourceforge, FindBugs Find Bugs in Java Programs
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Guo ZQ, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3582572
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Lin B, 2021, INT C PROGRAM COMPRE, P36, DOI 10.1109/ICPC52881.2021.00013
   Liu YB, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P232, DOI 10.1109/SANER.2018.8330212
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Majd A, 2020, EXPERT SYST APPL, V147, DOI 10.1016/j.eswa.2019.113156
   Majumder S, 2018, IEEE WORK CONF MIN S, P554, DOI 10.1145/3196398.3196424
   Mikolov T., 2013, Advances in Neural Information Processing Systems, P3111
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Parnin C., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis ISSTA, P199
   Pascarella L, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110493
   Pascarella L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P592, DOI 10.1109/SANER.2018.8330264
   PMD, About us
   Pornprasit C, 2023, IEEE T SOFTWARE ENG, V49, P84, DOI 10.1109/TSE.2022.3144348
   Qiu SJ, 2024, IEEE T SUST COMPUT, V9, P249, DOI 10.1109/TSUSC.2023.3248965
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Shi K, 2020, J COMPUT LANG, V59, DOI 10.1016/j.cola.2020.100979
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Trautsch A, 2020, PROC IEEE INT CONF S, P127, DOI 10.1109/ICSME46990.2020.00022
   Trautsch A, 2020, EMPIR SOFTW ENG, V25, P5137, DOI 10.1007/s10664-020-09880-1
   Vandehei B, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3433928
   Wang H, 2021, IEEE T RELIAB, V70, P711, DOI 10.1109/TR.2020.3047396
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   Wattanakriengkrai S, 2022, IEEE T SOFTWARE ENG, V48, P1480, DOI 10.1109/TSE.2020.3023177
   Wen M, 2020, IEEE T SOFTWARE ENG, V46, P1155, DOI 10.1109/TSE.2018.2876256
   Xu JX, 2022, IEEE T RELIAB, V71, P850, DOI 10.1109/TR.2022.3161581
   Xu JZ, 2021, IMPACT ASSESS PROJ A, V39, P429, DOI [10.1109/TR.2020.3040191, 10.1080/14615517.2020.1848242]
   Xu Z, 2022, IEEE T RELIAB, V71, P204, DOI 10.1109/TR.2021.3066170
   Xu Z, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110402
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zeng ZR, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P427, DOI 10.1145/3460319.3464819
   Zhang T, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3576042
   Zhao YY, 2017, INFORM SOFTWARE TECH, V86, P37, DOI 10.1016/j.infsof.2017.02.003
   Zhao YH, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3567550
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
   Zhu K, 2020, IET SOFTW, V14, P185, DOI 10.1049/iet-sen.2019.0278
NR 63
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUN 2
PY 2024
DI 10.1002/smr.2696
EA JUN 2024
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SV9Y2
UT WOS:001237354300001
DA 2024-08-05
ER

PT J
AU Shameem, M
   Kumar, C
   Chandra, B
   Khan, AA
   Ahmed, MN
   Verner, JM
   Nadeem, M
   Akbar, MA
AF Shameem, Mohammad
   Kumar, Chiranjeev
   Chandra, Bibhas
   Ali Khan, Arif
   Ahmed, Md. Nadeem
   Verner, J. M.
   Nadeem, Mohammad
   Akbar, Muhammad Azeem
TI The impact of personality traits and cultural values on coordination
   effectiveness: A study of software development teams effectiveness
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE coordination effectiveness; cultural traits; personality traits;
   software development team; team climate; team effectiveness
ID INFORMATION-SYSTEMS; PERFORMANCE; MOTIVATION; CLIMATE; QUALITY;
   COLLABORATION; ENVIRONMENTS; SATISFACTION; COMPETENCE; CHALLENGES
AB Software development projects depend on collaborative teams. In the past 50 years of research, various studies have explored the effect of software engineer's personality traits and cultural values on team performance. These studies have led to better understand these relationships; however, how the personality traits and cultural values influence the team effectiveness is still far away in the literature. This research aims to investigate the relationships between social and psychological complexities (including personality traits and cultural values), team coordination, team motivation, and team success (which comprises team effectiveness and team climate) to explore the impact of social and psychological issues on software team success. An online survey targeting software development professionals and unstructured interviews were followed for data collection. We received 112 responses from software developers working in different countries. Findings indicate that personality traits and cultural values, that is, consciousness, openness, harmony, and autonomy, have positive relationship with team coordination effectiveness, while other factors such as neuroticism, embeddedness, hierarchy, and mastery were found to be related negatively with it. These negative relationships can be mitigated by motivating team members appropriately. Based on our research findings, we conclude that the negative impact caused by different personality and cultural traits could be reduced by improving team coordination effectiveness using effective motivation.
   This research aims to investigate the following relationships: impact of social and psychological complexities (including personality traits and cultural values) on team coordination; to understand the impact of team coordination on team success (which comprises team effectiveness and team climate) to explore the impact of social and psychological issues on software team success; motivation has been considered as a mitigating factor for the impact of social and psychological influence on team success. image
C1 [Shameem, Mohammad] MIT World Peace Univ, Dept Comp Sci & Applicat, Pune, Maharashtra, India.
   [Kumar, Chiranjeev] Dept Comp Sci & Engn, Dhanbad, Jharkhand, India.
   [Chandra, Bibhas] IIT ISM Dhanbad, Dept Management Studies, Dhanbad, Jharkhand, India.
   [Ali Khan, Arif] Univ Oulu, Empir Software Engn Res Unit M3S, Oulu, Finland.
   [Ahmed, Md. Nadeem] King Khalid Univ, Dept Comp Sci, Abha, Saudi Arabia.
   [Verner, J. M.] UNSW, Sch CSE, Kensington, NSW, Australia.
   [Nadeem, Mohammad] Aligarh Muslim Univ, Dept Comp Sci, Aligarh, India.
   [Akbar, Muhammad Azeem] LUT Univ, Dept Software Engn, Lappeenranta, Finland.
C3 Dr. Vishwanath Karad MIT World Peace University; Indian Institute of
   Technology System (IIT System); Indian Institute of Technology (Indian
   School of Mines) Dhanbad; University of Oulu; King Khalid University;
   University of New South Wales Sydney; Aligarh Muslim University;
   Lappeenranta-Lahti University of Technology LUT
RP Shameem, M (corresponding author), MIT World Peace Univ, Dept Comp Sci & Applicat, Pune, Maharashtra, India.
EM shameem.ism@gmail.com
RI Shameem, Mohammad/AFU-4006-2022
OI Shameem, Mohammad/0000-0002-6055-5345; Nadeem,
   Mohammad/0000-0003-3664-5014; Chandra, Bibhas/0000-0002-7017-5944
CR Acuña ST, 2015, INFORM SOFTWARE TECH, V57, P141, DOI 10.1016/j.infsof.2014.09.002
   Ahern D.M., 2004, CMMI DISTILLED PRACT
   Akbar MA, 2020, APPL SOFT COMPUT, V95, DOI 10.1016/j.asoc.2020.106557
   Akbar MA, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2292
   Al-Eryani M., 2017, IT COMPETENCY EVALUA
   Almamari MRH., 2016, THESIS U BRADFORD
   Amin A, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106405
   Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   [Anonymous], SYSTEMATIC REV PRODU
   Ashbacher C., 2000, MATH COMPUT ED, V34, P93
   Balijepally V, 2006, COMMUN ASSOC INF SYS, V18, P55
   BARRICK MR, 1991, PERS PSYCHOL, V44, P1, DOI 10.1111/j.1744-6570.1991.tb00688.x
   Beecham S., 2014, SOFTWARE PROJECT MAN, P247, DOI DOI 10.1007/978-3-642-55035-5
   Beecham S, 2015, LECT NOTES COMPUT SC, V9459, P193, DOI 10.1007/978-3-319-26844-6_14
   Begel A, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P1, DOI 10.1109/CHASE.2009.5071401
   Benjamini Y, 2010, J R STAT SOC B, V72, P405, DOI 10.1111/j.1467-9868.2010.00746.x
   Berry J, 2016, CROSS CULT STRATEG M, V23, P413, DOI 10.1108/CCSM-03-2016-0085
   Bhat JM, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.137
   Capretz LF, 2017, INFORM SOFTWARE TECH, V92, P92, DOI 10.1016/j.infsof.2017.07.011
   Chandra B., 2018, 2018 4 INT C COMP CO, P1, DOI DOI 10.1109/CCAA.2018.8777533
   Chen Chang-Wen Chen, 2023, MM '23: Proceedings of the 31st ACM International Conference on Multimedia, P1, DOI 10.1145/3581783.3613910
   Chen PC, 2012, ASIA PAC SOFWR ENG, P565, DOI 10.1109/APSEC.2012.152
   Colomo-Palacios R, 2013, COMPUT HUM BEHAV, V29, P456, DOI 10.1016/j.chb.2012.04.021
   Costa Jr P. T., 1992, Personality and Individual Differences, V13, P653, DOI 10.1016/0191-8869
   Cruz Shirley S. J. O., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P1, DOI 10.1049/ic.2011.0001
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Dafoulas G., 2001, Electronic Journal on Information Systems in Developing Countries, V7, P1
   De La Porte C., 2002, EUR LAW J, V8, P38, DOI DOI 10.1111/1468-0386.00141
   De Vreede GJ, 2019, J MANAGE INFORM SYST, V36, P74, DOI 10.1080/07421222.2018.1550552
   Driskell JE, 2006, GROUP DYN-THEOR RES, V10, P249, DOI 10.1037/1089-2699.10.4.249
   Driskell JE., 1987, PERSONALITY GROUP PE
   Drogendijk R, 2006, INT BUS REV, V15, P361, DOI 10.1016/j.ibusrev.2006.05.003
   Dwivedula R., 2016, International Journal of Management Development, V1, P229, DOI DOI 10.1504/IJMD.2016.076553
   Erosa VE, 2012, PROCD SOC BEHV, V52, P25, DOI 10.1016/j.sbspro.2012.09.438
   Espinosa J. A., 2006, Information Technology & People, V19, P345, DOI 10.1108/09593840610718036
   Espinosa JA, 2012, IEEE T ENG MANAGE, V59, P91, DOI 10.1109/TEM.2011.2126579
   Espinosa JA, 2003, J MANAGE INFORM SYST, V19, P157
   Faber NM, 2007, ANAL CHIM ACTA, V595, P98, DOI 10.1016/j.aca.2007.05.030
   Fairley R.E., 2011, Managing and leading software projects
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Finstad K, 2010, J USABILITY STUD, V5, P104
   Franca C., 2014, P 8 ACM IEEE INT S E, P32
   Freeze R D., 2019, Journal of Information systems education, V21, P4
   Gómez MN, 2014, EMPIR SOFTW ENG, V19, P343, DOI 10.1007/s10664-013-9265-9
   Griffith DA, 2000, J INT BUS STUD, V31, P303, DOI 10.1057/palgrave.jibs.8490908
   Hair J. F., 2009, Multivariate data analysis
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Herbsleb J.D., 2006, Proc. Int'l Conf. Information Systems (ICIS 06), P38
   Hopp C, 2012, ENTREP REGION DEV, V24, P917, DOI 10.1080/08985626.2012.742326
   Howell R., 2018, RELATIONSHIP TEAM RO
   Huang CQ, 2021, AUSTRALAS J EDUC TEC, V37, P81, DOI 10.14742/ajet.6749
   Jehn KA, 2003, RES ORGAN BEHAV, V25, P187, DOI 10.1016/s0191-3085(03)25005-X
   John O. P., 1999, Handbook of personality: Theory and research, P102
   Juhasz M., 2010, Periodica Polytechnica Social and Management Sciences, V18, P61, DOI [DOI 10.3311/PP.SO.2010-2.02, 10.3311/pp.so.2010-2.02]
   Karn JS, 2007, BEHAV INFORM TECHNOL, V26, P99, DOI 10.1080/01449290500102110
   Katz R., 2006, IEEE ENG MANAGEMENT, V34, P93, DOI DOI 10.1109/EMR.2006.1679079
   Khan AA, 2021, APPL SOFT COMPUT, V102, DOI 10.1016/j.asoc.2021.107090
   Khan AA, 2019, APPL SOFT COMPUT, V83, DOI 10.1016/j.asoc.2019.105648
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Kichuk SL, 1997, J ENG TECHNOL MANAGE, V14, P195, DOI 10.1016/S0923-4748(97)00010-6
   Klug M, 2016, ROY SOC OPEN SCI, V3, DOI 10.1098/rsos.160007
   Knoben J, 2006, INT J MANAG REV, V8, P71, DOI 10.1111/j.1468-2370.2006.00121.x
   Kumar A, 2023, 27TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, EASE 2023, P438, DOI [10.1145/3593434.3594241, 10.1109/ICAICCIT60255.2023.10466139]
   Kumar A, 2023, AUTOMAT SOFTW ENG, V30, DOI 10.1007/s10515-023-00388-8
   Lee G, 2013, IEEE T SOFTWARE ENG, V39, P1753, DOI 10.1109/TSE.2013.40
   Lethbridge TC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P12, DOI 10.1109/FOSE.2007.13
   Licorish SA, 2015, INFORM SOFTWARE TECH, V64, P113, DOI 10.1016/j.infsof.2015.02.004
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Lipsey M.W., 1990, DESIGN SENSITIVITY
   Liu JYC, 2011, INT J PROJ MANAG, V29, P547, DOI 10.1016/j.ijproman.2010.04.007
   Liu JYC, 2010, INT J PROJ MANAG, V28, P220, DOI 10.1016/j.ijproman.2009.05.006
   Locke EA, 2002, AM PSYCHOL, V57, P705, DOI 10.1037//0003-066X.57.9.705
   Lu YB, 2011, COMPUT HUM BEHAV, V27, P811, DOI 10.1016/j.chb.2010.11.006
   Manrodt K. B., 2004, Journal of Business Logistics, V25, P1, DOI 10.1002/j.2158-1592.2004.tb00168.x
   Martínez-Miranda J, 2010, IFIP ADV INF COMM TE, V322, P276
   Martinsons MG, 1997, INFORM MANAGE, V32, P215, DOI 10.1016/S0378-7206(96)00009-2
   Morand DA, 1996, ORGAN SCI, V7, P544, DOI 10.1287/orsc.7.5.544
   Murtagh F., 2012, MULTIVARIATE DATA AN
   Nawati D. A., 2006, IEEE Transactions on Professional Communication, V49, P44, DOI 10.1109/TPC.2006.870459
   Niazi M, 2016, INFORM SOFTWARE TECH, V80, P1, DOI 10.1016/j.infsof.2016.08.002
   Nidhra S, 2013, INT J INFORM MANAGE, V33, P333, DOI 10.1016/j.ijinfomgt.2012.11.004
   Noll J., 2017, P 21 INT C EV ASS SO, P394, DOI DOI 10.1145/3084226.3084277
   Noorani NM, 2022, AXIOMS, V11, DOI 10.3390/axioms11100498
   Ortu M., 2017, DIVERSE IS YOUR TEAM
   Peeters MAG, 2006, SMALL GR RES, V37, P187, DOI 10.1177/1046496405285458
   Peslak AR., 2006, P 2006 ACM SIGMIS CP, P273
   Peterson T.M., 2007, PROJ MANAG J, V38, P60, DOI DOI 10.1002/PMJ.20019
   Pizam A., 1997, International Journal of Hospitality Management, V16, P127, DOI 10.1016/S0278-4319(97)00001-7
   Preacher KJ, 2006, J EDUC BEHAV STAT, V31, P437, DOI 10.3102/10769986031004437
   Ravikumar T., 2013, INT J ADV RES MANAGE, V2, P175
   Robey D, 1996, ACM T INFORM SYST, V14, P30, DOI 10.1145/214174.214178
   Rogers ME, 2018, J PERS ASSESS, V100, P292, DOI 10.1080/00223891.2017.1303776
   Rothmann S., 2003, South African Journal of Industrial Psychology, V29, P68
   Rubinstein D., 2007, SOFTW DEV TIMES, V1
   Ryan RM, 2000, CONTEMP EDUC PSYCHOL, V25, P54, DOI 10.1006/ceps.1999.1020
   Ryan RM, 2000, AM PSYCHOL, V55, P68, DOI 10.1037/0003-066X.55.1.68
   Samuelsen T, 2018, SIXTH INTERNATIONAL CONFERENCE ON TECHNOLOGICAL ECOSYSTEMS FOR ENHANCING MULTICULTURALITY (TEEM'18), P66, DOI 10.1145/3284179.3284194
   Schwartz SH, 1999, APPL PSYCHOL-INT REV, V48, P23, DOI 10.1080/026999499377655
   Schwartz SH, 2004, J RES PERS, V38, P230, DOI 10.1016/S0092-6566(03)00069-2
   Schwartz SH, 2006, COMP SOCIOL, V5, P137, DOI 10.1163/156913306778667357
   Sfetsos P, 2009, EMPIR SOFTW ENG, V14, P187, DOI 10.1007/s10664-008-9093-5
   Shameem M, 2023, APPL SOFT COMPUT, V135, DOI 10.1016/j.asoc.2023.109998
   Shameem M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1979
   Shameem M, 2018, ARAB J SCI ENG, V43, P8223, DOI 10.1007/s13369-018-3375-z
   Shameem M, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND AUTOMATION (ICCCA), P912, DOI 10.1109/CCAA.2017.8229936
   Sharma A, 2012, INT J PROJ MANAG, V30, P176, DOI 10.1016/j.ijproman.2011.05.003
   Sharp H, 2009, INFORM SOFTWARE TECH, V51, P219, DOI 10.1016/j.infsof.2008.05.009
   Shore B., 1995, Journal of Global Information Management, V3, P5
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Sinha R, 2020, ISOFT: PROCEEDINGS OF THE 13TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3385032.3385037
   Soomro AB, 2016, INFORM SOFTWARE TECH, V73, P52, DOI 10.1016/j.infsof.2016.01.006
   Stipelman BA, 2019, STRATEGIES FOR TEAM SCIENCE SUCCESS: HANDBOOK OF EVIDENCE-BASED PRINCIPLES FOR CROSS-DISCIPLINARY SCIENCE AND PRACTICAL LESSONS LEARNED FROM HEALTH RESEARCHERS, P189, DOI 10.1007/978-3-030-20992-6_14
   Sudhinaraset M, 2015, MALARIA J, V14, DOI 10.1186/s12936-015-0585-7
   Sutter M, 2019, INT J BUS COMMUN, V56, P249, DOI 10.1177/2329488415613340
   Taherdoost Hamed., 2017, International Journal of Economics and Management Systems, V2
   Vasilescu B, 2015, P 33 ANN ACM C HUM F, P3789, DOI DOI 10.1145/2702123.2702549
   Vasilescu B, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P514, DOI 10.1109/MSR.2015.77
   Verner JM, 2014, J SYST SOFTWARE, V92, P115, DOI 10.1016/j.jss.2014.01.008
   Wang H, 2023, IEEE T KNOWL DATA EN, V35, P10981, DOI [10.1109/TKDE.2022.3233481, 10.1109/ICASSP49357.2023.10096626]
   Yasrab R., 2019, CHALLENGES ISSUES CO
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
   Zwikael O, 2010, INT J PROJ MANAG, V28, P413, DOI 10.1016/j.ijproman.2009.09.005
NR 122
TC 1
Z9 1
U1 3
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD JUL
PY 2024
VL 36
IS 7
DI 10.1002/smr.2652
EA FEB 2024
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YG4W1
UT WOS:001156154300001
DA 2024-08-05
ER

PT J
AU Dai, J
   Li, QS
   Xie, SL
   Li, DZ
   Chu, H
AF Dai, Jie
   Li, Qingshan
   Xie, Shenglong
   Li, Daizhen
   Chu, Hua
TI PCG: A joint framework of graph collaborative filtering for bug triaging
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
AB Bug triaging is a vital process in software maintenance, involving assigning bug reports to developers in the issue tracking system. Current studies predominantly treat automatic bug triaging as a classification task, categorizing bug reports using developers as labels. However, this approach deviates from the essence of triaging, which is establishing bug-developer correlations. These correlations should be explicitly leveraged, offering a more comprehensive and promising paradigm. Our bug triaging model utilizes graph collaborative filtering (GCF), a method known for handling correlations. However, GCF encounters two challenges in bug triaging: data sparsity in bug fixing records and semantic deficiency in exploiting input data. To address them, we propose PCG, an innovative framework that integrates prototype augmentation and contrastive learning with GCF. With bug triaging modeled as predicting links on the bipartite graph of bug-developer correlations, we introduce prototype clustering-based augmentation to mitigate data sparsity and devise a semantic contrastive learning task to overcome semantic deficiency. Extensive experiments against competitive baselines validate the superiority of PCG. This work may open new avenues for investigating correlations in bug triaging and related scenarios.
   A GCF backbone is proposed to creatively model bug triaging as a link prediction task on the bug-developer bipartite graph. A novel data augmentation scheme based on prototype clustering is proposed to mitigate the data sparsity of bug-fixing records. A novel semantic contrastive learning task is proposed to compensate for the semantic deficiency of the CF paradigm. image
C1 [Dai, Jie; Li, Qingshan; Xie, Shenglong; Li, Daizhen; Chu, Hua] Xidian Univ, Xian, Peoples R China.
C3 Xidian University
RP Chu, H (corresponding author), Xidian Univ, Xian, Peoples R China.
EM hchu@mail.xidian.edu.cn
OI Dai, Jie/0000-0002-1614-3167
FU National Natural Science Foundation of China; Young Talent Fund of
   Association for Science and Technology in Shaanxi [20220113]; 
   [61972300];  [U21B2015];  [62202357]
FX This work was supported by National Natural Science Foundation of China
   [grant numbers 61972300, U21B2015, 62202357] and Young Talent Fund of
   Association for Science and Technology in Shaanxi [grant number
   20220113].
CR al-Bataineh A, 2021, INT J BILING EDUC BI, V24, P386, DOI [10.1080/13670050.2018.1471039, 10.1155/2018/4305395]
   Alazzam I, 2020, IEEE T COMPUT SOC SY, V7, P1288, DOI 10.1109/TCSS.2020.3017501
   Albelwi S, 2022, ENTROPY-SWITZ, V24, DOI 10.3390/e24040551
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Aung TWW, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111133
   Badashian AS, 2015, PROC IEEE INT CONF S, P506, DOI 10.1109/ICSM.2015.7332503
   Baluja S., 2008, P 17 INT C WORLD WID, P895, DOI [DOI 10.1145/1367497.1367618, 10.1145/1367497.1367618]
   Banerjee S, 2017, INFORM SOFTWARE TECH, V89, P1, DOI 10.1016/j.infsof.2016.09.006
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bock H.H., 2007, Clustering Methods: A History of k-Means Algorithms, P161, DOI DOI 10.1007/978-3-540-73560-1_15
   Cao YX, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P151, DOI 10.1145/3308558.3313705
   Chen JA, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P6605
   Cho K., 2014, ARXIV14061078, V1406, P1078, DOI DOI 10.3115/V1/D14-1179
   Dai J, 2023, J SYST SOFTWARE, V200, DOI 10.1016/j.jss.2023.111667
   Fan WQ, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P417, DOI 10.1145/3308558.3313488
   GOLDBERG D, 1992, COMMUN ACM, V35, P61, DOI 10.1145/138859.138867
   Hao Ma, 2007, 30th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P39, DOI 10.1145/1277741.1277751
   He XN, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P639, DOI 10.1145/3397271.3401063
   He XN, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P173, DOI 10.1145/3038912.3052569
   Hu H, 2014, PROC INT SYMP SOFTW, P122, DOI 10.1109/ISSRE.2014.17
   Jahanshahi H, 2022, Arxiv, DOI arXiv:2204.05972
   Jing LL, 2021, IEEE T PATTERN ANAL, V43, P4037, DOI 10.1109/TPAMI.2020.2992393
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Ju W, 2022, Arxiv, DOI arXiv:2210.11879
   Kipf T., 2016, NIPS WORKSH BAYES DE
   Koren Y, 2009, COMPUTER, V42, P30, DOI 10.1109/MC.2009.263
   Lee J, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556898
   Li JN, 2021, Arxiv, DOI arXiv:2005.04966
   Li RF, 2022, PROCEEDINGS OF THE 28TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, KDD 2022, P936, DOI 10.1145/3534678.3539422
   Li ZK, 2019, PROCEEDINGS OF THE 28TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM '19), P539, DOI 10.1145/3357384.3357951
   Lin ZH, 2022, PROCEEDINGS OF THE ACM WEB CONFERENCE 2022 (WWW'22), P2320, DOI 10.1145/3485447.3512104
   Linden G, 2003, IEEE INTERNET COMPUT, V7, P76, DOI 10.1109/MIC.2003.1167344
   Ma QL, 2021, AAAI CONF ARTIF INTE, V35, P8847
   Ma X., 2022, 2022 IEEE INT C BLOC, P1
   Ma YB, 2023, NEUROCOMPUTING, V523, P103, DOI 10.1016/j.neucom.2022.12.032
   Mani S, 2019, PROCEEDINGS OF THE 6TH ACM IKDD CODS AND 24TH COMAD, P171, DOI 10.1145/3297001.3297023
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, DOI 10.48550/ARXIV.1301.3781]
   Murphy G, 2004, P 16 INT C SOFTW ENG
   Park J.-w., 2011, Costriage: a cost-aware triage algorithm for bug reporting systems, V25, P139, DOI DOI 10.1609/AAAI.V25I1.7839
   Rendle S., 2009, UAI 2009, P452
   Ricci F, 2011, RECOMMENDER SYSTEMS HANDBOOK, P1, DOI 10.1007/978-0-387-85820-3_1
   Sampath D., 2010, P 4 ACM C REC SYST, V10, P293, DOI [DOI 10.1145/1864708.1864770, 10.1145/1864708.1864770]
   Song Wang, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P193, DOI 10.1109/ESEM.2013.24
   Strub F., 2015, COLLABORATIVE FILTER
   Tamrawi A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P884, DOI 10.1145/1985793.1985934
   Tecimer KA, 2022, INFORM SOFTWARE TECH, V149, DOI 10.1016/j.infsof.2022.106956
   van den Berg R, 2017, Arxiv, DOI arXiv:1706.02263
   Wang HW, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P3307, DOI 10.1145/3308558.3313417
   Wu HR, 2022, KNOWL-BASED SYST, V241, DOI 10.1016/j.knosys.2022.108308
   Wu JC, 2021, SIGIR '21 - PROCEEDINGS OF THE 44TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P726, DOI 10.1145/3404835.3462862
   Wu ZR, 2018, PROC CVPR IEEE, P3733, DOI 10.1109/CVPR.2018.00393
   Xia LH, 2022, PROCEEDINGS OF THE 45TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '22), P70, DOI 10.1145/3477495.3532058
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xu SS, 2022, AAAI CONF ARTIF INTE, P11556
   Xuan JF, 2017, Arxiv, DOI arXiv:1704.04769
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Yadav A., 2022, J Shanghai Jiaotong Univ (Sci), P1, DOI [10.1007/s12204-022-2448-z, DOI 10.1007/S12204]
   Yang X., 2023, arXiv
   Ye H., 2022, ACM Trans Inform Syst, V41, P1
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Ying R, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P974, DOI 10.1145/3219819.3219890
   You Yuning, 2020, Adv Neural Inf Process Syst
   Yu JL, 2022, PROCEEDINGS OF THE 45TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '22), P1294, DOI 10.1145/3477495.3531937
   Yu X, 2021, LECT NOTES COMPUT SC, V12938, P160, DOI 10.1007/978-3-030-86130-8_13
   Zaidi SFA, 2022, J SENSORS, V2022, DOI 10.1155/2022/4347004
   Zaidi SFA, 2022, IEEE ACCESS, V10, P20677, DOI 10.1109/ACCESS.2022.3153075
   Zaidi SFA, 2021, 35TH INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN 2021), P504, DOI 10.1109/ICOIN50884.2021.9333902
   Zhang YF, 2022, PROCEEDINGS OF THE 28TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, KDD 2022, P2524, DOI 10.1145/3534678.3539425
   Zhao Peiyao, 2022, arXiv
   Zhao XY, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P3582, DOI 10.1145/3442381.3450125
   Zheng L, 2018, 12TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS), P311, DOI 10.1145/3240323.3240343
   Zhu T, 2014, SIGIR'14: PROCEEDINGS OF THE 37TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P657, DOI 10.1145/2600428.2609603
NR 72
TC 0
Z9 0
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 APR 17
PY 2024
DI 10.1002/smr.2673
EA APR 2024
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ4M9
UT WOS:001204263600001
DA 2024-08-05
ER

PT J
AU Chu, HT
   Zhang, PC
   Dong, H
   Xiao, Y
   Ji, SH
AF Chu, Hanting
   Zhang, Pengcheng
   Dong, Hai
   Xiao, Yan
   Ji, Shunhui
TI <i>SGDL</i>: Smart contract vulnerability generation via deep learning
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE deep learning; generative adversarial network; smart contract;
   vulnerability injection
AB The growing popularity of smart contracts in various areas, such as digital payments and the Internet of Things, has led to an increase in smart contract security challenges. Researchers have responded by developing vulnerability detection tools. However, the effectiveness of these tools is limited due to the lack of authentic smart contract vulnerability datasets to comprehensively assess their capacity for diverse vulnerabilities. This paper proposes a Deep Learning-based Smart contract vulnerability Generation approach (SGDL) to overcome this challenge. SGDL utilizes static analysis techniques to extract both syntactic and semantic information from the contracts. It then uses a classification technique to match injected vulnerabilities with contracts. A generative adversarial network is employed to generate smart contract vulnerability fragments, creating a diverse and authentic pool of fragments. The vulnerability fragments are then injected into the smart contracts using an abstract syntax tree to ensure their syntactic correctness. Our experimental results demonstrate that our method is more effective than existing vulnerability injection methods in evaluating the contract vulnerability detection capacity of existing detection tools. Overall, SGDL provides a comprehensive and innovative solution to address the critical issue of authentic and diverse smart contract vulnerability datasets.
C1 [Chu, Hanting; Zhang, Pengcheng; Ji, Shunhui] Hohai Univ, Coll Comp Sci & Software Engn, Nanjing, Peoples R China.
   [Dong, Hai] RMIT Univ, Comp Technol, Melbourne, Australia.
   [Xiao, Yan] Sun Yat Sen Univ, Cyber Sci & Technol, Shenzhen Campus, Shenzhen, Peoples R China.
C3 Hohai University; Royal Melbourne Institute of Technology (RMIT); Sun
   Yat Sen University
RP Zhang, PC (corresponding author), Hohai Univ, Coll Comp & Informat, Nanjing, Peoples R China.
EM pchzhang@hhu.edu.cn
RI Dong, Hai/E-9101-2010
OI Dong, Hai/0000-0002-7033-5688
FU National Natural Science Foundation of China [62272145, U21B2016]
FX National Natural Science Foundation of China, Grant/Award Numbers:
   62272145, U21B2016
CR Ahmad WU, 2021, Arxiv, DOI [arXiv:2103.06333, 10.48550/arXiv.2103.06333]
   Antunes J, 2010, IEEE T SOFTWARE ENG, V36, P357, DOI 10.1109/TSE.2009.91
   Asghari Z, 2023, J ELECTRON TEST, V39, P631, DOI 10.1007/s10836-023-06089-0
   Atzei N, 2017, LECT NOTES COMPUT SC, V10204, P164, DOI 10.1007/978-3-662-54455-6_8
   Baojiang Cui, 2010, Proceedings 2010 3rd IEEE International Conference on Broadband Network & Multimedia Technology (IC-BNMT 2010), P668, DOI 10.1109/ICBNMT.2010.5705174
   Buterin V., 2014, White Paper, V3, P28
   Cai J, 2024, IEEE T RELIAB, V73, P1117, DOI 10.1109/TR.2023.3319318
   Cai J, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111550
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   Chen JC, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10018-0
   Cherkassky V, 2004, NEURAL NETWORKS, V17, P113, DOI 10.1016/S0893-6080(03)00169-2
   Dang XY, 2024, J SYST SOFTWARE, V210, DOI 10.1016/j.jss.2024.111962
   Delmolino K, 2016, LECT NOTES COMPUT SC, V9604, P79, DOI 10.1007/978-3-662-53357-4_6
   Dingman W, 2019, 2019 IEEE/ACIS 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P116, DOI [10.1109/sera.2019.8886793, 10.1109/SERA.2019.8886793]
   Dolan-Gavitt B, 2016, P IEEE S SECUR PRIV, P110, DOI 10.1109/SP.2016.15
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Fan JL, 2019, AGR WATER MANAGE, V225, DOI 10.1016/j.agwat.2019.105758
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Ghaleb Asem, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P415, DOI 10.1145/3395363.3397385
   Guo GD, 2003, LECT NOTES COMPUT SC, V2888, P986
   Guo JX, 2018, AAAI CONF ARTIF INTE, P5141
   Harz D., 2018, Towards safer smart contracts: A survey of languages and verification methods
   Hewa T, 2021, J NETW COMPUT APPL, V177, DOI 10.1016/j.jnca.2020.102857
   Huang YF, 2019, IEEE ACCESS, V7, P150184, DOI 10.1109/ACCESS.2019.2946988
   Huszar F, 2015, Arxiv, DOI arXiv:1511.05101
   Jan-Min Chen, 2010, 2010 International Computer Symposium (ICS 2010), P113, DOI 10.1109/COMPSYM.2010.5685537
   Jin H, 2022, IEEE T SOFTWARE ENG, V48, P4611, DOI 10.1109/TSE.2021.3123170
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kashyap V, 2019, IEEE INT WORK C SO, P103, DOI 10.1109/SCAM.2019.00020
   Kindy D. A., 2011, 2011 IEEE 15th International Symposium on Consumer Electronics, P468, DOI 10.1109/ISCE.2011.5973873
   Kushwaha SS, 2022, IEEE ACCESS, V10, P6605, DOI 10.1109/ACCESS.2021.3140091
   Liao MH, 2017, AAAI CONF ARTIF INTE, P4161
   Liguori P, 2021, PROC INT SYMP SOFTW, P321, DOI 10.1109/ISSRE52982.2021.00042
   Lin K., 2017, Adv Neural Inf Process Syst, V30, P3158
   Liu C, 2018, PROC IEEE ACM INT C, P65, DOI 10.1145/3183440.3183495
   Liu ZG, 2023, IEEE T KNOWL DATA EN, V35, P1296, DOI 10.1109/TKDE.2021.3095196
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Parizi RM, 2018, Arxiv, DOI arXiv:1809.02702
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Mueller B., 2018, HITB SECCONF AMSTERD, V9, P54
   Neamtiu J. F. I., 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI DOI 10.1145/1082983.1083143
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Perez AJ, 2022, COMPUT SCI REV, V43, DOI 10.1016/j.cosrev.2021.100450
   Pewny J, 2016, ANN COMPUT SECURITY, P214, DOI 10.1145/2991079.2991103
   Ren XJ, 2023, COMPUT ELECTR ENG, V109, DOI 10.1016/j.compeleceng.2023.108766
   Sayeed S, 2020, IEEE ACCESS, V8, P24416, DOI 10.1109/ACCESS.2020.2970495
   Semeniuta S, 2019, Arxiv, DOI arXiv:1806.04936
   Shin R, 2019, ADV NEUR IN, V32
   Src O., 2022, A survey on ethereum smart contract vulnerability detection using machine learning, P110
   Tang YX, 2022, IEEE T SOFTWARE ENG, V48, P4411, DOI 10.1109/TSE.2021.3119186
   Tarimci AB, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111399
   Theis L, 2016, Arxiv, DOI arXiv:1511.01844
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF, 2021, 2021 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2021), P103, DOI 10.1109/EuroSP51992.2021.00018
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P., 2018, Proceedings of the 27th ACM SIGSOFT international symposium on software testing and analysis, P16
   Wan ZY, 2021, PROC INT CONF SOFTW, P1410, DOI 10.1109/ICSE43902.2021.00127
   Wang S, 2018, IEEE INT VEH SYM, P108, DOI 10.1109/IVS.2018.8500488
   Wang W, 2021, IEEE T NETW SCI ENG, V8, P1133, DOI 10.1109/TNSE.2020.2968505
   Wang ZL, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9284-9
   Yu LT, 2017, AAAI CONF ARTIF INTE, P2852
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang PC, 2020, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSME46990.2020.00023
   Zhuang Y, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3283
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 65
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUL 20
PY 2024
DI 10.1002/smr.2712
EA JUL 2024
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZB9I4
UT WOS:001272943900001
DA 2024-08-05
ER

PT J
AU Zhou, X
   Xu, JW
   Li, XK
   Cao, LL
   Li, LJ
   Wang, YZ
   Li, SS
   Liu, H
AF Zhou, Xin
   Xu, Jinwei
   Li, Xiaokang
   Cao, Lingli
   Li, Lingjie
   Wang, Yanze
   Li, Shanshan
   Liu, Hui
TI A blockchain-based and microservices-architected software composition
   analysis system
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE blockchain; microservices architecture; software bill of materials;
   software composition analysis; software supply chain security
AB "Shift To Left" is the cornerstone of the successful implementation of DevSecOps. By testing projects for vulnerabilities in the early stages of development, teams can save overall costs before security issues reach the build phase. As one of the popular practices in "Shift To Left," the Software Composition Analysis (SCA) system aims to leverage the Software Bill of Materials (SBOM) to enhance software supply chain security. However, the SBOM lacks mature generation and distribution mechanisms, requiring incentive measures to drive industry consensus. Additionally, the data and tools associated with the SBOM lack effective record-keeping and monitoring, making it challenging to ensure data integrity and tool security. Traditional SCA systems treat SBOM as a regular data format for external service provision, yet fail to solve problems such as lack of shared platforms, inability to guarantee data integrity and tool security, as well as issues with poor interoperation compatibility. This paper introduces blockchain technology into the SCA system, utilizing smart contracts to provide core SBOM tool services and microservices to improve the operational efficiency of smart contract deployment and maintenance. The proposed SCA system effectively provides a shared platform for SBOM with reliable data integrity, guaranteed tool security, and good interoperability.
   This is a Software Composition Analysis (SCA) system based on blockchain technology and microservices architecture. In this system, blockchain serves as the core data repository to ensure data security and privacy. Microservices, decoupling smart contracts and consensus nodes, form the infrastructure to improve system resilience and scalability. SCA performs the core function, which generates and analyzes Software Bill of Material (SBOM) for vulnerability management and compliance verification, reducing upstream software supply chain risks. image
C1 [Zhou, Xin; Xu, Jinwei; Li, Xiaokang; Cao, Lingli; Wang, Yanze; Li, Shanshan; Liu, Hui] Nanjing Univ, State Key Lab Novel Software Inst, Nanjing, Peoples R China.
   [Li, Lingjie] Huawei Technol Co Ltd, Nanjing, Peoples R China.
C3 Nanjing University; Huawei Technologies
RP Zhou, X; Li, SS (corresponding author), Nanjing Univ, State Key Lab Novel Software Inst, Nanjing, Peoples R China.
EM zhouxin@nju.edu.cn; lss@nju.edu.cn
FU National Natural Science Foundation of China; Jiangsu Province Key
   Research and Development Program [BE2021002-2]; Innovation Project and
   Overseas Open Project of State Key Laboratory for Novel Software
   Technology (Nanjing University) [ZZKT2022A25, KFKT2022A09, KFKT2023A09,
   KFKT2023A10];  [62202219];  [62072227];  [62302210]
FX This work is supported by the National Natural Science Foundation of
   China (nos. 62202219, 62072227, and 62302210), the Jiangsu Province Key
   Research and Development Program (no. BE2021002-2), and the Innovation
   Project and Overseas Open Project of State Key Laboratory for Novel
   Software Technology (Nanjing University) (ZZKT2022A25, KFKT2022A09,
   KFKT2023A09, and KFKT2023A10).
CR Androulaki E, 2018, EUROSYS '18: PROCEEDINGS OF THE THIRTEENTH EUROSYS CONFERENCE, DOI 10.1145/3190508.3190538
   Arora A., 2022, JCIP The J Crit Infrast Policy, V3, P111
   Bandara E, 2021, IEEE MILIT COMMUN C, DOI 10.1109/MILCOM52596.2021.9653024
   Bensing B., History of the software bill of materials (SBOM)
   Böhme R, 2015, J ECON PERSPECT, V29, P213, DOI 10.1257/jep.29.2.213
   Booth H., 2013, The national vulnerability database
   Bouraga S, 2021, EXPERT SYST APPL, V168, DOI 10.1016/j.eswa.2020.114384
   Carter H., The 2023 state of the software supply chain report
   De Angelis S., 2018, PBFT vs proofofauthority: applying the cap theorem to permissioned blockchain, V2058
   Ellison R., 2010, Evaluating and mitigating software supply chain security risks
   Hendrick S., The state of software bill of materials (SBOM) and cybersecurity readiness
   Hu K., 2018, A method of establishing microservice of smart contract
   Huang DY, 2020, IEEE T SYST MAN CY-S, V50, P172, DOI 10.1109/TSMC.2019.2895471
   Imtiaz N., 2021, A comparative study of vulnerability reporting by software composition analysis tools, DOI [10.1145/3475716.3475769, DOI 10.1145/3475716.3475769]
   Kalske M, 2018, LECT NOTES COMPUT SC, V10544, P32, DOI 10.1007/978-3-319-74433-9_3
   Liu XF., 2016, Chinese J Netw Inform Sec
   Marjanovi J., 2021, Improving critical infrastructure protection by enhancing software acquisition process through blockchain, DOI [10.1145/3459960.3459973, DOI 10.1145/3459960.3459973]
   Muir EO., 2019, Framing software component transparency: establishing a common software bill of material (SBOM)
   Mylrea M, 2018, 2018 RESILIENCE WEEK (RWS), P70, DOI 10.1109/RWEEK.2018.8473517
   Nadgowda Shripad, 2022, WoC '22: Proceedings of the Eighth International Workshop on Container Technologies and Container Clouds, P7, DOI 10.1145/3565384.3565889
   Newman S., 2021, Building microservices
   NTIA, The minimum elements for a software bill of materials (SBOM)
   Saleh F, 2021, REV FINANC STUD, V34, P1156, DOI 10.1093/rfs/hhaa075
   Shanshan Li, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P398, DOI 10.1145/3383219.3383276
   [孙毅 Sun Yi], 2018, [中国工程科学, Strategic Study of CAE], V20, P27
   Tikhomirov S, 2018, LECT NOTES COMPUT SC, V10723, P206, DOI 10.1007/978-3-319-75650-9_14
   Wang SY, 2020, P INT COMP SOFTW APP, P1569, DOI 10.1109/COMPSAC48688.2020.00-31
   Wang YZ, 2022, 2022 29TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, APSEC, P269, DOI 10.1109/APSEC57359.2022.00039
   Weber I., 2019, Blockchain and servicesexploring the links, P13
   Xia BM, 2023, Arxiv, DOI [arXiv:2301.05362, DOI 10.48550/ARXIV.2301.05362, 10.48550/ARXIV.2301.05362]
   [张富利 Zhang Fuli], 2021, [软件学报, Journal of Software], V32, P3423
NR 31
TC 0
Z9 0
U1 7
U2 7
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUN 11
PY 2024
DI 10.1002/smr.2675
EA JUN 2024
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TU1G7
UT WOS:001243674200001
DA 2024-08-05
ER

PT J
AU Nabi, M
   Ilyas, M
   Ahmad, J
AF Nabi, Maria
   Ilyas, Muhammad
   Ahmad, Jamil
TI Challenges and solutions in the development of blockchain applications:
   Extraction from SLR and empirical study
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE blockchain application development; challenges; empirical study;
   solutions; systematic literature review (SLR)
ID TECHNOLOGY; BENEFITS
AB Data protection is the most prior and valuable concern as stealing personal/organizational data by cyber criminals may arise issues ranging from privacy disclosure to system hacking. Blockchain is considered a top leading technology with the influence to reshape future industries, but like other revolutionary technologies, blockchain has its merits and demerits as well. However, due to its nascent stage, blockchain technology poses numerous challenges that hinder the effective development of blockchain. To uncover this potential hindrance and group the relevant barriers, a total of 12 challenges that may hinder the progress of blockchain application development have been identified from a sample of 52 primary studies. Based on the results of our research, the six challenges are considered critical an account for more than 30% occurrence. The critical challenges are "Lack of Proper Development Tools and Technology," "Security Precaution Measures," "Lack of Governance and Standards," "Lack of Professional Expertise with Essential Skills and Knowledge," "Lack of Organizational Support," and "Interoperability Integration." Using a comprehensive systematic literature review (SLR) and a questionnaire survey, a list of 65 solutions/practices has been identified to address the challenges that were identified. These solutions/practices will help blockchain developers to address the identified challenges and develop benign blockchain application in future. The results of our questionnaire survey largely align with the findings of the SLR. However, there are variations in the ranking of the challenges between the two datasets. The finding of this paper is to provide insights that can assist in streamlining and optimizing the development process of blockchain applications with greater ease and efficiency.
   Blockchain is considered a top leading technology with the influence to reshape future industries. However, due to its nascent stage, blockchain technology poses numerous challenges that hinder the effective development of blockchain applications. In this study, a total of 12 challenges that may hinder the progress of blockchain application development has been identified. Further, we also identified a list of 65 solutions/practices to address those challenges. image
C1 [Nabi, Maria; Ilyas, Muhammad; Ahmad, Jamil] Univ Malakand, Dept Comp Sci & IT, Software Engn Res Grp SERG UOM, Chakdara 18800, Pakistan.
C3 University of Malakand
RP Ilyas, M (corresponding author), Univ Malakand, Dept Comp Sci & IT, Software Engn Res Grp SERG UOM, Chakdara 18800, Pakistan.
EM milyasmkd@uom.edu.pk
CR Ahmed M, 2019, P 3 INT C FUTURE NET, P1
   Akram SV, 2020, SECUR PRIVACY, V3, DOI 10.1002/spy2.109
   Alexopoulos Charalampos., 2019, Benefits and obstacles of blockchain applications in e-government
   AlShamsi M, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12094245
   Bakarich KM, 2020, ACCOUNT PERSPECT, V19, P389, DOI 10.1111/1911-3838.12241
   Bansod S, 2020, 2020 INT C EMERGING, P1
   Barubara FR, 2018, PROCEEDINGS OF THE 19TH ANNUAL INTERNATIONAL CONFERENCE ON DIGITAL GOVERNMENT RESEARCH (DGO 2018): GOVERNANCE IN THE DATA AGE, P648, DOI 10.1145/3209281.3209317
   Belchior R, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3471140
   Berdik D, 2021, INFORM PROCESS MANAG, V58, DOI 10.1016/j.ipm.2020.102397
   Bhutta MNM, 2021, IEEE ACCESS, V9, P61048, DOI 10.1109/ACCESS.2021.3072849
   Bosu A, 2019, EMPIR SOFTW ENG, V24, P2636, DOI 10.1007/s10664-019-09708-7
   Chakraborty P, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240298
   Chen X., 2021, P 54 HAWAII INT C SY, P5646
   Cheng J, 2020, ARTIFICIAL INTELLIGE, P674
   Dave D, 2019, PROCEDIA COMPUT SCI, V160, P740, DOI 10.1016/j.procs.2019.11.017
   De Rossi LM, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P4605
   De Sousa VA, 2019, 2019 13 INT C RES CH, P1
   Destefanis G, 2018, 2018 IEEE 1ST INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE), P19, DOI 10.1109/IWBOSE.2018.8327567
   Drljevic N, 2020, COMPUT STAND INTER, V69, DOI 10.1016/j.csi.2019.103409
   Fahmideh M, 2021, INTERNET THINGS ICIO, P58
   Fahmideh M, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3530813
   Frizzo-Barker J, 2020, INT J INFORM MANAGE, V51, DOI 10.1016/j.ijinfomgt.2019.10.014
   Gao JB, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P138, DOI 10.1109/ICSE-Companion.2019.00059
   Guo HQ, 2022, BLOCKCHAIN-RES APPL, V3, DOI 10.1016/j.bcra.2022.100067
   Gupta NK, 2022, SMART INNOV SYST TEC, V235, P311, DOI 10.1007/978-981-16-2877-1_28
   Hameed K, 2022, J IND INF INTEGR, V26, DOI 10.1016/j.jii.2021.100312
   Hughes L, 2019, INT J INFORM MANAGE, V49, P114, DOI 10.1016/j.ijinfomgt.2019.02.005
   Janssen M, 2020, INT J INFORM MANAGE, V50, P302, DOI 10.1016/j.ijinfomgt.2019.08.012
   Jinmei Yang, 2020, 2020 International Conferences on Internet of Things (iThings) and IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData) and IEEE Congress on Cybermatics (Cybermatics), P749, DOI 10.1109/iThings-GreenCom-CPSCom-SmartData-Cybermatics50389.2020.00129
   Junejo AZ, 2020, Intelligent Computing and Innovation on Data Science, P411
   Kosmarski A., 2020, J. Open Innov. Technol. Mark. Complex, V6, DOI DOI 10.3390/JOITMC6040117
   Kurpjuweit S, 2021, J BUS LOGIST, V42, P46, DOI 10.1111/jbl.12231
   Lacity M, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P4665
   Li XY, 2021, J PARALLEL DISTR COM, V150, P1, DOI 10.1016/j.jpdc.2020.12.003
   Lohmer J, 2020, COMPUT IND ENG, V149, DOI 10.1016/j.cie.2020.106789
   Mahmoud QH, 2019, INTERNET TECHNOL LET, V2, DOI 10.1002/itl2.93
   Monika, 2020, 2020 International Conference on Smart Technologies in Computing, Electrical and Electronics (ICSTCEE), P381, DOI 10.1109/ICSTCEE49637.2020.9277054
   Monrat AA, 2019, IEEE ACCESS, V7, P117134, DOI 10.1109/ACCESS.2019.2936094
   Nanayakkara S, 2021, J IND INF INTEGR, V23, DOI 10.1016/j.jii.2021.100215
   Olnes S, 2017, GOV INFORM Q, V34, P355, DOI 10.1016/j.giq.2017.09.007
   Porru S, 2017, PROC IEEE ACM INT C, P169, DOI 10.1109/ICSE-C.2017.142
   Precht H, 2020, Applying software quality criteria to blockchain applications: a criteria catalog
   Prewett KW, 2020, J CORP ACCOUNT FINAN, V31, P21, DOI 10.1002/jcaf.22415
   Rocha H, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P52, DOI 10.1145/3194113.3194123
   Saberi S, 2019, INT J PROD RES, V57, P2117, DOI 10.1080/00207543.2018.1533261
   Sanka AI, 2021, COMPUT COMMUN, V169, P179, DOI 10.1016/j.comcom.2020.12.028
   Shanshan Li, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P398, DOI 10.1145/3383219.3383276
   Sunyaev A, 2020, Distributed ledger technology, Internet computing: Principles of distributed systems and emerging internet-based technologies, P265
   Upadhyay N, 2020, INT J INFORM MANAGE, V54, DOI 10.1016/j.ijinfomgt.2020.102120
   White GRT, 2017, STRATEG CHANG, V26, P439, DOI 10.1002/jsc.2144
   Wöhrer M, 2021, 2021 3RD CONFERENCE ON BLOCKCHAIN RESEARCH & APPLICATIONS FOR INNOVATIVE NETWORKS AND SERVICES (BRAINS), P173, DOI 10.1109/BRAINS52497.2021.9569813
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 52
TC 0
Z9 0
U1 4
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 FEB 8
PY 2024
DI 10.1002/smr.2651
EA FEB 2024
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HE6N2
UT WOS:001157857300001
DA 2024-08-05
ER

PT J
AU El-Attar, M
AF El-Attar, Mohamed
TI On the accessibility of the grayscale version of a PoN-enabled use case
   notation
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE cognitive effectiveness; colorblindness; UML; use case notation; visual
   syntax
ID USE CASE DIAGRAMS; WEB ACCESSIBILITY; VISUAL SYNTAX; DESIGN; MODEL;
   COMPREHENSION; INFORMATION; SEARCH; UML
AB The physics of notations (PoN) is a framework for designing cognitively effective notations. Cognitive effectiveness refers to the ease (speed and accuracy) by which model readers read models. In 2019, a PoN-Enabled notation for use case diagrams was proposed. It has been empirically proven that the cognitive effectiveness of this new notation is superior to the original use case notation. The new notation however relies in part on the use of color. The accessibility of this new design has not been validated for use by the colorblind community, or any users who need to use a grayscale version of the models created. The PoN framework was not designed to explicitly account for the colorblind community or users who can only access grayscale versions of models. Inclusivity should not be an afterthought in software engineering practice or research. To this end, this paper empirically evaluates the cognitive effectiveness of the PoN-enabled use case notation in situations where it is viewed in grayscale.
   The PoN framework was not designed to explicitly account for the colorblind community or users who can only access grayscale versions of models. Inclusivity should not be an afterthought in software engineering practice or research. To this end, this paper empirically evaluates the cognitive effectiveness of the PoN-enabled use case notation in situations where it is viewed in grayscale. image
C1 [El-Attar, Mohamed] Zayed Univ, Coll Technol Innovat, Abu Dhabi, U Arab Emirates.
C3 Zayed University
RP El-Attar, M (corresponding author), Zayed Univ, Coll Technol Innovat, Abu Dhabi, U Arab Emirates.
EM mohamed.el-attar@zu.ac.ae
CR Acosta-Vargas P, 2019, INT CONF EDEMOC EGOV, P249, DOI [10.1109/ICEDEG.2019.8734439, 10.1109/icedeg.2019.8734439]
   Acosta-Vargas P, 2018, INT CONF EDEMOC EGOV, P9, DOI 10.1109/ICEDEG.2018.8372368
   Anda B., 2001, 15th European Conference Object-Oriented Programming (ECOOP), P402
   [Anonymous], 2002, Use Case Modeling
   Armour F., 2000, ADV USE CASE MODELIN
   Arogundade OT, 2011, INT J INF SECUR PRIV, V5, P8, DOI 10.4018/jisp.2011100102
   Paiva DMB, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110819
   Basman AM., 2011, Proceedings of the ACM International Conf. Companion on Object Oriented Programming Systems Languages and Applications Companion, P237
   Berres AS., 2020, Transport Res Rec
   Bertin Jacques, 1983, Semiology of graphics
   Bouraoui A, 2019, SCI COMPUT PROGRAM, V172, P63, DOI 10.1016/j.scico.2018.11.002
   Bramao I, 2011, ACTA PSYCHOL, V138, P244, DOI 10.1016/j.actpsy.2011.06.010
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI 10.1191/1478088706qp063oa
   Chiplunkar S., 2019, CHI Conf. on Human Factors in Computing Systems, P1
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cliff N, 1996, MULTIVAR BEHAV RES, V31, P331, DOI 10.1207/s15327906mbr3103_4
   Cliff N., 1996, ORDINAL METHODS BEHA
   Cockburn A., 2001, Writing effective use cases
   Colblindor, 2021, Coblis-Colorblindness Simulation
   CompTIA, 2021, IT Industry Outlook 2021
   Cook T.D., 1979, Quasi‐experimentation: design analysis issues for field setting
   Della Bona A., 2020, Color and Appearance in Dentistry, P115, DOI [10.1007/978-3-030-42626-2_6, DOI 10.1007/978]
   Dougiamas M., 2021, Moodle
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   El-Attar M, 2008, SOFTW SYST MODEL, V7, P67, DOI 10.1007/s10270-006-0039-3
   El-Attar Mohamed, 2023, Zenodo, DOI 10.5281/ZENODO.8193640
   El-Attar M, 2023, SOFTW SYST MODEL, V22, P247, DOI 10.1007/s10270-022-00992-4
   El-Attar M, 2019, SOFTW SYST MODEL, V18, P3283, DOI 10.1007/s10270-019-00720-5
   El-Attar M, 2019, J SYST SOFTWARE, V156, P136, DOI 10.1016/j.jss.2019.06.096
   El-Attar M, 2015, IEEE T SOFTWARE ENG, V41, P661, DOI 10.1109/TSE.2015.2396526
   El-Attar M, 2010, SOFTW SYST MODEL, V9, P141, DOI 10.1007/s10270-009-0112-9
   El-Glaly Yasmine N., 2018, ACM Inroads, V9, P30, DOI 10.1145/3182184
   Engiel P., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P1001
   Evans Data Corporation, 2021, Global Developer Population and Demographic Study 2016 V2
   Ferati M., 2012, Usability-and Accessibility-Focused Requirements Engineering, P79
   Ferreira A., 2019, International Conf on Applied Human Factors and Ergonomics. Springer, P281
   Flatla David R., 2012, Proceedings of the 14th International ACM SIGACCESS Conference on Computers and Accessibility
   Fogli D, 2014, UNIVERSAL ACCESS INF, V13, P205, DOI 10.1007/s10209-013-0291-6
   Garrido A, 2013, IEEE INTERNET COMPUT, V17, P58, DOI 10.1109/MIC.2012.143
   Gemino A, 2009, J DATABASE MANAGE, V20, P1, DOI 10.4018/jdm.2009010101
   Crespo RG, 2016, COMPUT STAND INTER, V48, P1, DOI 10.1016/j.csi.2016.04.001
   Gopalakrishnan S, 2010, LECT NOTES BUS INF P, V68, P145
   Human-Computer Interaction Resource Network, 2021, Home Website
   IBM, 2021, Eclipse Foundation
   Idrobo CS, 2017, COMM COM INF SC, V735, P572, DOI 10.1007/978-3-319-66562-7_41
   Ikhsan IN, 2018, PROCEEDINGS OF 2018 5TH INTERNATIONAL CONFERENCE ON DATA AND SOFTWARE ENGINEERING (ICODSE)
   Lohse G. L., 1993, Human-Computer Interaction, V8, P353, DOI 10.1207/s15327051hci0804_3
   MACKINLAY J, 1986, ACM T GRAPHIC, V5, P110, DOI 10.1145/22949.22950
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   de Moura CJM, 2017, PROCEEDINGS 2017 INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND COMPUTATIONAL INTELLIGENCE (CSCI), P594, DOI 10.1109/CSCI.2017.103
   McDermott J., 1999, Proceedings 15th Annual Computer Security Applications Conference (ACSAC'99), P55, DOI 10.1109/CSAC.1999.816013
   Microsoft, 2021, Visual Studi IDE
   Moody D, 2009, LECT NOTES COMPUT SC, V5452, P16, DOI 10.1007/978-3-642-00434-6_3
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   National Eye Institute, 2015, Facts About Colorblindness
   National Eye Institute, 2019, Colorblindness
   Norkhalid AM., 2020, 2020 8th International Conference on Information Technology and Multimedia (ICIMU)
   Novoa Avellaneda CC., 2020, Tools Design to Support Accessibility Testing on Mobile Applications
   Oliveira RF., 2018, Proceedings of the 17th Brazilian Symposium on Software Quality, P180
   OMG, 2017, Unified Modeling Language
   Overgraad G., 2005, Use Cases Patterns and Blueprints
   Peissner M., 2014, International Conf. on Universal Access in Human-Computer Interaction, P431
   Prieto LR, 2021, TEACH PSYCHOL, V48, P90, DOI 10.1177/0098628320959946
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   Purchase HC, 2004, INT J HUM-COMPUT ST, V61, P187, DOI 10.1016/j.ijhcs.2004.01.003
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Rhyne T-M., 2017, Proceedings of the 2017 CHI Conference Extended Abstracts on Human Factors in Computing Systems
   Rhyne T-M., 2017, ACM SIGGRAPH 2017 Courses, P1
   RODGERS JL, 1988, AM STAT, V42, P59, DOI 10.2307/2685263
   Rostad L., 2006, Proceedings of the Conference on Requirements Engineering: Foundation for Software Quality, Luxembourg, P33
   Rui K., 2003, Proc. of 25th Computer Science Conf, P4
   Sánchez-Gordón ML, 2014, PROCEDIA COMPUT SCI, V27, P281, DOI 10.1016/j.procs.2014.02.031
   Sanchez-Gordon S, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.1987
   Schulga R., 2019, Abstr ICA, V1
   SHAPIRO SS, 1972, TECHNOMETRICS, V14, P355, DOI 10.2307/1267427
   Shirogane Junko, 2011, Information Quality in e-Health. Proceedings 7th Conference of the Workgroup Human-Computer Interaction and Usability Engineering of the Austrian Computer Society, USAB 2011, P349, DOI 10.1007/978-3-642-25364-5_25
   Shrestha R., 2020, Proceedings of the International Colour Association (AIC) Conference 2019
   Shrestha R, 2016, STUD HEALTH TECHNOL, V229, P392, DOI 10.3233/978-1-61499-684-2-392
   Sik-Lanyi C., 2018, Obuda Univ e-Bulletin, V8, P53
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   The Recycler, 2017, Monochrome Printers Grow In Popularity
   TREISMAN A, 1982, J EXP PSYCHOL HUMAN, V8, P194, DOI 10.1037/0096-1523.8.2.194
   Tuan DT., 2012, 2012 IEEE RIVF International Conf. on Computing Communication Technologies, Research, Innovation, P1
   Van Der Linden D., 2018, IEEE Trans Softw Eng
   Verma J.P., 2016, REPEATED MEASURES DE
   Vigo Markel., 2013, Proceedings of the 10th International Cross-Disciplinary Conference on Web Accessibility, P1, DOI DOI 10.1145/2461121.2461124
   White S., 2021, WOMEN TECH STAT HARD
   WINN W, 1993, CONTEMP EDUC PSYCHOL, V18, P162, DOI 10.1006/ceps.1993.1016
   Wohlin Claes, 2000, Experimentation in Software Engineering: An Introduction
   WURM LH, 1993, J EXP PSYCHOL HUMAN, V19, P899, DOI 10.1037/0096-1523.19.4.899
   Yang SS, 2008, J CONTROL SCI ENG, V2008, DOI 10.1155/2008/152030
   Zaki M, 2011, LECT NOTES COMPUT SC, V6761, P319, DOI 10.1007/978-3-642-21602-2_35
NR 92
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 APR 1
PY 2024
DI 10.1002/smr.2667
EA APR 2024
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MO2N4
UT WOS:001194499000001
DA 2024-08-05
ER

PT J
AU Wei, XJ
   Wang, J
   Sun, CA
   Towey, D
   Zhang, SF
   Zuo, WQ
   Yu, YM
   Ruan, RY
   Song, GY
AF Wei, Xinjie
   Wang, Jie
   Sun, Chang-ai
   Towey, Dave
   Zhang, Shoufeng
   Zuo, Wanqing
   Yu, Yiming
   Ruan, Ruoyi
   Song, Guyang
TI Log-based anomaly detection for distributed systems: State of the art,
   industry experience, and open issues
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE distributed systems; industry experience; log-based anomaly detection;
   quality assurance
ID OUTLIER DETECTION
AB Distributed systems have been widely used in many safety-critical areas. Any abnormalities (e.g., service interruption or service quality degradation) could lead to application crashes or decrease user satisfaction. These things may cause serious economic losses. Among the various quality assurance approaches for distributed systems, log-based anomaly detection (LAD) has become a popular research topic. Its popularity relates to system logs being able to record and reveal important run-time information. This paper presents a general LAD framework for distributed systems. Log grouping and feature-pattern mining are two crucial LAD components that impact on the anomaly-detection effectiveness. We also present a systematic survey of techniques in these two directions; propose classification frameworks for log grouping and feature patterns; and summarize four log-grouping techniques and five feature patterns (which refer to invariant relationships among logs that can be used for anomaly detection). To evaluate their applicability, we report on the findings when applying existing techniques to Ray, a popular industrial distributed system. Based on these findings, several open issues are identified, which provide potential guidance for future research and development.
   A log-based anomaly-detection framework that identifies and highlights log-grouping and feature-pattern mining steps. A systematic review of state-of-the-art log-grouping and feature-pattern mining techniques. An industry experience using Ray, Hadoop, and BlueGene/L reveals the gaps between theory and industrial settings, pointing out several open issues based on these gaps. image
C1 [Wei, Xinjie; Sun, Chang-ai; Zhang, Shoufeng; Zuo, Wanqing] Univ Sci & Technol Beijing, Sch Comp & Commun Engn, 30 Xueyuan Rd, Beijing, Peoples R China.
   [Wang, Jie; Yu, Yiming; Ruan, Ruoyi; Song, Guyang] Ant Grp, Beijing, Peoples R China.
   [Towey, Dave] Univ Nottingham Ningbo China, Sch Comp Sci, Ningbo, Zhejiang, Peoples R China.
C3 University of Science & Technology Beijing; University of Nottingham
   Ningbo China
RP Sun, CA (corresponding author), Univ Sci & Technol Beijing, Sch Comp & Commun Engn, 30 Xueyuan Rd, Beijing, Peoples R China.
EM casun@ustb.edu.cn
RI Towey, Dave/K-3160-2014
OI Towey, Dave/0000-0003-0877-4353
FU National Natural Science Foundation of China;  [62272037];  [61872039]
FX This research is supported by the National Natural Science Foundation of
   China under Grants 62272037 and 61872039 and CCF-Ant Research Fund.
CR Agyemang M, 2006, INTELL DATA ANAL, V10, P521, DOI 10.3233/IDA-2006-10604
   Alipay, 2023, Alipay Home
   Amar H, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3236024.3236069
   Amazon, 2023, Amazon EC2 Overview
   Amen B, 2018, IEEE 20TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS / IEEE 16TH INTERNATIONAL CONFERENCE ON SMART CITY / IEEE 4TH INTERNATIONAL CONFERENCE ON DATA SCIENCE AND SYSTEMS (HPCC/SMARTCITY/DSS), P1177, DOI 10.1109/HPCC/SmartCity/DSS.2018.00198
   [Anonymous], 2006, P 12 ACM SIGKDD INT
   Ant Group, 2023, Ant Group Home
   Apache Hadoop, 2023, APACHE HADOOP HOME
   Apache Spark, 2023, What is Apache Spark?
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Astekin M, 2019, SOFTWARE PRACT EXPER, V49, P153, DOI 10.1002/spe.2653
   Bao LF, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P851, DOI 10.1109/ASE.2019.00084
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI [10.1145/2025113.2025151, DOI 10.1145/2025113.2025151]
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Breier J, 2017, WIRELESS PERS COMMUN, V94, P497, DOI 10.1007/s11277-015-3128-1
   Brown A, 2018, PROCEEDINGS OF THE 1ST WORKSHOP ON MACHINE LEARNING FOR COMPUTING SYSTEMS (MLCS 2018), DOI 10.1145/3217871.3217872
   Busany N, 2016, PROC INT CONF SOFTW, P877, DOI 10.1145/2884781.2884805
   Carnegie Mellon University, 2023, The CERT Division
   Chandola V, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1541880.1541882
   Chen D, 2005, ANAL SCI, V21, P161, DOI 10.2116/analsci.21.161
   Chen R, 2020, PROC INT SYMP SOFTW, P37, DOI 10.1109/ISSRE5003.2020.00013
   Chen ZB, 2022, Arxiv, DOI arXiv:2107.05908
   Dallmeier V, 2012, IEEE T SOFTWARE ENG, V38, P243, DOI 10.1109/TSE.2011.105
   Díaz I, 2002, IEEE IJCNN, P2070, DOI 10.1109/IJCNN.2002.1007460
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Elastic Search, 2023, Elastic Stack
   Farshchi M, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P24, DOI 10.1109/ISSRE.2015.7381796
   Farzad A, 2020, ICT EXPRESS, V6, P229, DOI 10.1016/j.icte.2020.06.003
   Feinberg A., 2023, Project Voldemort: a distributed database
   Fluentd, 2023, Build Your Unified Logging Layer
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Ghafoori Z, 2020, IEEE T KNOWL DATA EN, V32, P815, DOI 10.1109/TKDE.2019.2934450
   Ghazal A., 2013, P 2013 ACM SIGMOD IN, P1197, DOI DOI 10.1145/2463676.2463712
   Ghezzi C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P277, DOI 10.1145/2568225.2568234
   Google, 2023, gRPC Documentation
   GOWER JC, 1969, ROY STAT SOC C-APP, V18, P54
   Guo Y., 2021, PROC INT JOINT C NEU, P1, DOI DOI 10.1109/EI252483.2021.9712987
   Hagemann Tanja, 2020, AICCC 2020: 2020 3rd Artificial Intelligence and Cloud Computing Conference, P83, DOI 10.1145/3442536.3442550
   Han SB, 2021, IEEE T INF FOREN SEC, V16, P2300, DOI 10.1109/TIFS.2021.3053371
   He SL, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3460345
   He SL, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P60, DOI 10.1145/3236024.3236083
   He SL, 2016, PROC INT SYMP SOFTW, P207, DOI 10.1109/ISSRE.2016.21
   Hodge VJ, 2004, ARTIF INTELL REV, V22, P85, DOI 10.1023/B:AIRE.0000045502.10941.a9
   Hossin M., 2015, INT J DATA MIN KNOWL, V5, P1, DOI DOI 10.5121/IJDKP.2015.5201
   Huang SS, 2010, I C DATA ENGIN WORKS, P41, DOI 10.1109/ICDEW.2010.5452747
   IBM, 2023, BlueGene Overview
   Jia T, 2022, PROCEEDINGS OF THE 28TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, KDD 2022, P3081, DOI 10.1145/3534678.3539106
   Katz-Bassett E., 2010, Proceedings of Symposium on Networked System Design and Implementation (NSDI), P219
   Kent AD, 2016, Cyber security data sources for dynamic network research, P37, DOI [DOI 10.1142/9781786340757_0002, DOI 10.1142/97817863407570002]
   Kim Y., 2014, C EMP METH NAT LANG, P1746, DOI DOI 10.3115/V1/D14-1181
   Kimura T, 2019, IEICE T COMMUN, VE102B, P306, DOI 10.1587/transcom.2018EBP3103
   Li HM, 2020, 2020 INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND COMPUTER ENGINEERING (ICAICE 2020), P347, DOI 10.1109/ICAICE51518.2020.00073
   Li XY, 2020, PROC INT SYMP SOFTW, P92, DOI 10.1109/ISSRE5003.2020.00018
   Liang E., 2023, RAY
   Liang E, 2018, PR MACH LEARN RES, V80
   Liang YL, 2007, IEEE DATA MINING, P583, DOI 10.1109/ICDM.2007.46
   Liang YL, 2005, I C DEPEND SYS NETWO, P476
   Lin QW, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P102, DOI 10.1145/2889160.2889232
   Liu FC, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1777, DOI 10.1145/3319535.3363224
   Liu SR, 2019, IEEE INT SYMP PARAL, P1244, DOI 10.1109/ISPA-BDCloud-SustainCom-SocialCom48970.2019.00177
   Lo D, 2006, WORK CONF REVERSE EN, P51
   Lou J, 2010, PROTEIN ENG DES SEL, V23, P311, DOI 10.1093/protein/gzq001
   Lou J.-G., 2010, P 16 ACM SIGKDD INT, P613, DOI DOI 10.1145/1835804.1835883
   Lu SY, 2018, 2018 16TH IEEE INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP, 16TH IEEE INT CONF ON PERVAS INTELLIGENCE AND COMP, 4TH IEEE INT CONF ON BIG DATA INTELLIGENCE AND COMP, 3RD IEEE CYBER SCI AND TECHNOL CONGRESS (DASC/PICOM/DATACOM/CYBERSCITECH), P151, DOI 10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.00037
   Makanju A, 2012, IEEE T KNOWL DATA EN, V24, P1921, DOI 10.1109/TKDE.2011.138
   Martin J., 2010, Internet Engineering Task Force, Request for Comments RFC 5905, DOI DOI 10.17487/RFC5905
   Meng WB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4739
   Mi HB, 2013, IEEE T PARALL DISTR, V24, P1245, DOI 10.1109/TPDS.2013.21
   Moritz P, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P561
   Nandi A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P215, DOI 10.1145/2939672.2939712
   Nedelkoski S, 2020, IEEE DATA MINING, P1196, DOI 10.1109/ICDM50108.2020.00148
   Ohmann T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P484, DOI 10.1145/2591062.2591107
   Oliner A, 2007, I C DEPEND SYS NETWO, P575, DOI 10.1109/DSN.2007.103
   Patil A, 2019, PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON INFORMATION AND COMMUNICATION TECHNOLOGIES AND DEVELOPMENT (ICTD), DOI 10.1145/3287098.3287144
   Pinjia He, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P654, DOI 10.1109/DSN.2016.66
   Pradel M, 2010, PROC IEEE INT CONF S
   Puth MT, 2014, ANIM BEHAV, V93, P183, DOI 10.1016/j.anbehav.2014.05.003
   Qian Y, 2020, IEEE SYS MAN CYBERN, P2822, DOI [10.1109/SMC42975.2020.9283078, 10.1109/smc42975.2020.9283078]
   Ramos Juan., 2003, USING TF IDF DETERMI, V242, P29
   Rose I, 2017, 2017 IEEE CYBERSECURITY DEVELOPMENT (SECDEV), P77, DOI 10.1109/SecDev.2017.25
   Schutze H, 2005, Introduction to Information Retrieval.
   Shang WY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P402, DOI 10.1109/ICSE.2013.6606586
   Sun JM, 2007, PROCEEDINGS OF THE SEVENTH SIAM INTERNATIONAL CONFERENCE ON DATA MINING, P366
   Tandon G, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P697
   USENIX, 2023, CFDR Data
   Vaarandi R, 2003, PROCEEDINGS OF THE 3RD IEEE WORKSHOP ON IP OPERATIONS & MANAGEMENT (IPOM2003), P119
   Le VH, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P492, DOI 10.1109/ASE51524.2021.9678773
   Wadekar A, 2019, INT CONF COMPUT, DOI 10.1109/icccnt45670.2019.8944863
   Wang S, 2021, PROCEEDINGS OF THE 18TH USENIX SYMPOSIUM ON NETWORKED SYSTEM DESIGN AND IMPLEMENTATION, P671
   Wang S, 2019, PROCEEDINGS OF THE TWENTY-SEVENTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '19), P338, DOI 10.1145/3341301.3359653
   Watt ST, 2015, 2015 SAUDI ARABIA SMART GRID CONFERENCE (SASG)
   Weiss Karl, 2016, Journal of Big Data, V3, DOI 10.1186/s40537-016-0043-6
   Xia B, 2021, INFORM SYST FRONT, V23, P285, DOI 10.1007/s10796-020-10026-3
   Xia XZ, 2019, IEEE PAC RIM INT SYM, P93, DOI 10.1109/PRDC47002.2019.00034
   Xu W, 2009, IEEE DATA MINING, P588, DOI 10.1109/ICDM.2009.19
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yadav Rakesh Bahadur, 2020, 2020 8th International Conference on Reliability, Infocom Technologies and Optimization (Trends and Future Directions) (ICRITO), P1215, DOI 10.1109/ICRITO48877.2020.9197818
   Yang L, 2021, PROC INT CONF SOFTW, P1448, DOI 10.1109/ICSE43902.2021.00130
   Yu X, 2016, ACM SIGPLAN NOTICES, V51, P489, DOI 10.1145/2954679.2872407
   Zhang B, 2020, SYM REL DIST SYST, P195, DOI 10.1109/SRDS51746.2020.00027
   Zhang X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P807, DOI 10.1145/3338906.3338931
   Zhao NW, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1404, DOI 10.1145/3468264.3473933
   Zhao X, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P603
   Zhu JM, 2023, Arxiv, DOI arXiv:2008.06448
   Zuo Y, 2020, IEEE T COGN COMMUN, V6, P548, DOI 10.1109/TCCN.2020.2966615
NR 105
TC 0
Z9 0
U1 4
U2 4
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 FEB 7
PY 2024
DI 10.1002/smr.2650
EA FEB 2024
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5B5
UT WOS:001157557800001
DA 2024-08-05
ER

PT J
AU Almashhadani, M
   Mishra, A
   Yazici, A
AF Almashhadani, Mohammed
   Mishra, Alok
   Yazici, Ali
TI Software maintenance practices using agile methods towards cloud
   environment: A systematic mapping
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Review; Early Access
DE agile methods; cloud computing; global environment; local environment;
   software maintenance
ID IDENTIFICATION; MANAGEMENT; ISSUES
AB Agile methods have emerged to overcome the obstacles of structured methodologies, such as the waterfall, prototype, spiral, and so on. There are studies showing the usefulness of agile approaches in software development. However, studies on Agile maintenance are very limited in number. Regardless of the chosen methodology, software maintenance can be carried out in either a local (on-the-premise) or global (distributed) environment. In a local environment, the software maintenance team is co-located on the same premises, while in a global environment, the team is geographically dispersed from the customer. The main objective of this Systematic Mapping (SM) study is to identify the practices useful for software maintenance using the Agile approaches in the Cloud environment. We have conducted a comprehensive search in well-known digital databases and examined the articles that map to the pre-defined inclusion criteria. The study selected and analyzed 48 articles out of 320 published between 2000 and 2022. The findings of the mapping study reveal that Agile can resolve the major issues faced in traditional software maintenance, making the role of this approach significant in global/distributed software maintenance. Cloud computing plays a vital role in software maintenance. Most of the studies highlight the application of XP- and Scrum-based Agile maintenance models. The study found a need for more Agile maintenance solutions in the cloud, highlighting the importance of agile in software maintenance, both locally and globally. Irrespective of the environment, Cloud computing provides a centralized platform for collaboration and communication, while also offering scalability and flexibility to adapt to diverse infrastructure needs. This allows agile maintenance practices to be implemented across both local and global environments, leveraging the cloud's capabilities to overcome geographical and infrastructural challenges.
   image
C1 [Almashhadani, Mohammed] Atilim Univ, Grad Sch Nat & Appl Sci, Ankara, Turkiye.
   [Almashhadani, Mohammed] Baghdad Int Zone Convent Ctr, Council Representat Iraq, Baghdad, Iraq.
   [Mishra, Alok; Yazici, Ali] Atilim Univ, Dept Software Engn, Ankara, Turkiye.
   [Mishra, Alok] Norwegian Univ Sci & Technol NTNU, Fac Engn, Trondheim, Norway.
C3 Atilim University; Atilim University; Norwegian University of Science &
   Technology (NTNU)
RP Mishra, A (corresponding author), Norwegian Univ Sci & Technol NTNU, Fac Engn, Trondheim, Norway.
EM alok.mishra@ntnu.no; ali.yazici@atilim.edu.tr
RI Mishra, Alok/AAE-2673-2019
OI Mishra, Alok/0000-0003-1275-2050
CR Abdullah S., 2018, Int J Eng Technol, V7, P113
   Abrahamsson P., 2002, Proceedings of ESPOO 2002, P7
   Agarwal M., 2013, Int J Comput Appl, V68, P30, DOI [10.5120/115696873, DOI 10.5120/115696873]
   Akbar MA, 2020, IEEE ACCESS, V8, P191242, DOI 10.1109/ACCESS.2020.3031365
   Almashhadani M, 2023, INFORMATION, V14, DOI 10.3390/info14050261
   Almudarra F, 2015, PROCEDIA COMPUT SCI, V52, P1133, DOI 10.1016/j.procs.2015.05.131
   [Anonymous], MANIFESTO AGILE SOFT
   [Anonymous], 2014, Software Engineering-A Practitioner's Approach
   Awar K., 2017, P 2017 INT C COMM CO
   Batra D, 2009, COMMUN ACM, V52, P143, DOI 10.1145/1562164.1562200
   Beck K., 2000, Extreme Programming Explained: Embrace Change
   Beecham S, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING WORKSHOPS (ICGSEW), P5, DOI 10.1109/ICGSEW.2014.7
   Bennett K.H., 2000, P C FUT SOFTW ENG, P73
   Berczuk S, 2007, AGILE 2007, Proceedings, P382, DOI 10.1109/AGILE.2007.17
   Braithwaite K, 2005, LECT NOTES COMPUT SC, V3556, P180
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Butt S.A., 2016, Pacific Science Review B: Humanities and Social Sciences, V2, P22, DOI DOI 10.1016/J.PSRB.2016.09.007
   Butt SA, 2019, IEEE ACCESS, V7, P99273, DOI 10.1109/ACCESS.2019.2929169
   Capilla R, 2013, J SOFTW-EVOL PROC, V25, P569, DOI 10.1002/smr.548
   Cardoso M., 2012, Agile Processes for the Maintenance Cycle: A Smarter Work Cycle for a Smarter Planet
   Choudhari J., 2014, ACM SIGSOFT Softw Eng Notes, V39, P1, DOI [10.1145/2557833.2557845, DOI 10.1145/2557833.2557845]
   Choudhari J., 2010, Iterative Maintenance Life Cycle Using eXtreme Programming, DOI [10.1109/artcom.2010.52, DOI 10.1109/ARTCOM.2010.52]
   Choudhari Jitender., 2015, ACM SIGSOFT Software Engineering Notes, V40, P1, DOI [10.1145/2735399.2735406, DOI 10.1145/2735399.2735406]
   Cocco L, 2012, EUROMICRO CONF PROC, P446, DOI 10.1109/SEAA.2012.67
   Dagnino A, 2002, IEEE INT C ENG COMP, P215, DOI 10.1109/ICECCS.2002.1181514
   Danait A, 2005, AGILE 2005, Proceedings, P214, DOI 10.1109/ADC.2005.9
   Devulapally GK., 2015, Agile in the context of Software Maintenance A Case Study
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Farmer M, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P95
   Franken S, 2015, PROCEDIA COMPUT SCI, V68, P188, DOI 10.1016/j.procs.2015.09.234
   Grubb P, 2003, Software maintenance concepts and practice
   Hanssen GK., 2009, Maintenance and agile development: Challenges, opportunities and future directions
   Hashmi SI., 2011, Using the Cloud to Facilitate Global Software Development Challenges, DOI [10.1109/icgsew.2011.19, DOI 10.1109/ICGSEW.2011.19]
   Heeager LT, 2015, EMPIR SOFTW ENG, V20, P1762, DOI 10.1007/s10664-014-9335-7
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Hou XY, 2024, Arxiv, DOI arXiv:2308.10620
   Ibrahim KSK, 2019, INT CONF ELECT ENG, P146, DOI [10.1109/iceei47359.2019.8988815, 10.1109/ICEEI47359.2019.8988815]
   Inayat I., 2013, Agilebased Software Product Development Using Cloud Computing Services: Findings form a Case Study
   Jain N., 2006, Offshore agile maintenance
   Jain P., 2001, Distributed eXtreme Programming, P6671
   Jalali S., Agile Practices in Global Software Engineering A Systematic Map, DOI [10.1109/icgse.2010.14, DOI 10.1109/ICGSE.2010.14]
   Janicic M., 2021, Maintenance and maintainability within agile software development
   Jyothi VE., 2014, Res Art Int J Curr Eng Technol, V4, P1690
   KajkoMattsson M., 2009, A Model of Agile Evolution and Maintenance Process
   Kalem S., 2013, Agile methods for cloud computing Agile Methods for Cloud Computing
   Kumar B., 2015, Int J Comput Appl, V109, P25, DOI [10.5120/191520581, DOI 10.5120/191520581]
   Lee S, 2010, EMPIR SOFTW ENG, V15, P204, DOI 10.1007/s10664-009-9119-7
   Lientz B. P., 1980, Software maintenance management
   Malhotra R, 2016, PROCEEDINGS OF THE 10TH INDIACOM - 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT, P1271
   Manuja M, 2014, IEEE INT ADV COMPUT, P1392, DOI 10.1109/IAdCC.2014.6779530
   McHugh O, 2012, IEEE SOFTWARE, V29, P71, DOI 10.1109/MS.2011.118
   Mell P, 2010, COMMUN ACM, V53, P50
   Mishra D, 2018, COMPUT STAND INTER, V56, P49, DOI 10.1016/j.csi.2017.09.004
   Mishra D, 2011, J GLOB INF TECH MAN, V14, P48, DOI 10.1080/1097198X.2011.10856549
   Misra SC, 2011, MATH COMPUT MODEL, V53, P504, DOI 10.1016/j.mcm.2010.03.037
   Moher D, 2015, SYST REV-LONDON, V4, DOI [10.1186/2046-4053-4-1, 10.1371/journal.pmed.1000097, 10.1136/bmj.i4086, 10.1016/j.ijsu.2010.02.007, 10.1136/bmj.b2535, 10.1016/j.ijsu.2010.07.299, 10.1136/bmj.b2700]
   Nazir Ambreen, 2013, International Journal of Modern Education and Computer Science, V5, P28, DOI 10.5815/ijmecs.2013.11.04
   Paasivaara M, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P87, DOI 10.1109/ICGSE.2008.38
   Paasivaara M, 2009, INT CONF GLOBAL SOFT, P195, DOI 10.1109/ICGSE.2009.27
   Pino FJ, 2012, J SOFTW-EVOL PROC, V24, P851, DOI 10.1002/smr.541
   Poole C, 2001, IEEE SOFTWARE, V18, P42, DOI 10.1109/52.965801
   Portelli B., 2010, The Beauty of Agile in the Cloud
   Prochazka J., 2011, Inf Syst Dev, P597, DOI [10.1007/978144199790648, DOI 10.1007/978144199790648]
   Qumer A, 2008, INFORM SOFTWARE TECH, V50, P280, DOI 10.1016/j.infsof.2007.02.002
   Ralyt J., 2008, 2008 Second International Conference on Research Challenges in Information Science
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Reyes W., 2007, Agile Approaches to Software Maintenance: An Exploratory Study of Practitioner Views
   Rizwan M., 2015, Int J Inf Eng Electron Business, V2, P1, DOI [10.5815/ijieeb.2015.02.01, DOI 10.5815/IJIEEB.2015.02.01]
   Rudzki J, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P224, DOI 10.1109/SEAA.2009.31
   Schwaber K., 2001, Agile Software Development with Scrum, VInternational
   Shaw S., 2007, Using Agile Practices in a Maintenance Environment
   Simons M., 2002, Internationally Agile: The Challenges of Offshore Development
   Singh S., 2013, Int J u e Serv Sci Technol, V6, P191, DOI [10.14257/ijunesst.2013.6.5.17, DOI 10.14257/IJUNESST.2013.6.5.17]
   Sommerville I., 2016, Software Engineering
   Staffs K., 2007, Guidelines for performing Systematic Literature Reviews in Software Engineering
   Stojanov Z., 2016, Exploring software maintenance process characteristics by using inductive thematic analysis, DOI [10.20544/aiit2016.02, DOI 10.20544/AIIT2016.02]
   Sukumaran S., 2005, Identifying test conditions for software maintenance
   Svensson H, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P256, DOI 10.1109/CSMR.2005.33
   Talluri M., 2014, Best managerial practices in agile development, DOI [10.1145/2638404.2638456, DOI 10.1145/2638404.2638456]
   Tarwani S, 2016, INFORM-J COMPUT INFO, V40, P415
   Therrien E, 2008, AGILE 2008, PROCEEDINGS, P368, DOI 10.1109/Agile.2008.9
   Thomazinho HCS., 2017, J Inf Syst Eng Manag, V2, P1, DOI [10.20897/jisem.201723, DOI 10.20897/JISEM.201723]
   Tsai WT, 2014, IEEE INTERNET COMPUT, V18, P78, DOI 10.1109/MIC.2014.46
   Tuli Anupriya, 2014, ACM SIGSOFT Software Engineering Notes, V39, DOI 10.1145/2632434.2632447
   Ur Rehman F., 2018, 2018 21 SAUD COMP SO, P15
   Wang W., 2020, Digital.ai Agility an Agile Planning Solution
   Yamato Y, 2015, IEICE T INF SYST, VE98D, P1377, DOI 10.1587/transinf.2015EDL8049
   Yap M, 2005, AGILE 2005, Proceedings, P218, DOI 10.1109/ADC.2005.26
   Younas M, 2020, IEEE ACCESS, V8, P4475, DOI 10.1109/ACCESS.2019.2962257
   Younas M, 2018, INFORM SOFTWARE TECH, V103, P142, DOI 10.1016/j.infsof.2018.06.014
   Younas Muhammad, 2016, [Journal of Internet Computing and Services, 인터넷정보학회논문지], V17, P67
   Yu LG, 2010, AUTOMATIKA, V51, P89
   Zagal JP, 2002, IEEE SOFTWARE, V19, P100, DOI 10.1109/MS.2002.1020296
NR 94
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUL 1
PY 2024
DI 10.1002/smr.2698
EA JUL 2024
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XA8Y6
UT WOS:001259063900001
DA 2024-08-05
ER

PT J
AU Zhang, HZ
   Li, Z
   Li, J
   Jin, Z
   Li, G
AF Zhang, Huangzhao
   Li, Zhuo
   Li, Jia
   Jin, Zhi
   Li, Ge
TI WELL: Applying bug detectors to bug localization via weakly supervised
   learning
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE bug detection; bug localization; weakly supervised learning
AB Bug localization, which is used to help programmers identify the location of bugs in source code, is an essential task in software development. Researchers have already made efforts to harness the powerful deep learning (DL) techniques to automate it. However, training bug localization model is usually challenging because it requires a large quantity of data labeled with the bug's exact location, which is difficult and time-consuming to collect. By contrast, obtaining bug detection data with binary labels of whether there is a bug in the source code is much simpler. This paper proposes a WEakly supervised bug LocaLization (WELL) method, which only uses the bug detection data with binary labels to train a bug localization model. With CodeBERT finetuned on the buggy-or-not binary labeled data, WELL can address bug localization in a weakly supervised manner. The evaluations on three method-level synthetic datasets and one file-level real-world dataset show that WELL is significantly better than the existing state-of-the-art model in typical bug localization tasks such as variable misuse and other bugs.
   Researchers have already made efforts to harness the powerful deep learning techniques to automate bug localization and further fixing. However, training bug localization model requires a large quantity of data labeled with the bug's exact location, which is difficult and time-consuming to collect. By contrast, obtaining bug detection data with binary buggy-or-not labels is much simpler. We propose a weakly supervised bug localization (WELL) method, using the bug detection data with binary labels to train a bug localization model. image
C1 [Zhang, Huangzhao; Li, Zhuo; Li, Jia; Jin, Zhi; Li, Ge] Peking Univ, Key Lab High Confidence Software Technol, 1542,1 Sci Bldg 5 Yiheyuan Rd, Beijing 100871, Peoples R China.
C3 Peking University
RP Li, G (corresponding author), Peking Univ, Key Lab High Confidence Software Technol, 1542,1 Sci Bldg 5 Yiheyuan Rd, Beijing 100871, Peoples R China.
EM lige@pku.edu.cn
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis Miltiadis, 2018, INT C LEARNING REPRE
   Alon U., 2019, P INT C LEARN REPR I
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Ba L.J., 2016, arXiv, DOI DOI 10.48550/ARXIV.1607.06450
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Bastings J, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P2963
   Bearman A, 2016, LECT NOTES COMPUT SC, V9911, P549, DOI 10.1007/978-3-319-46478-7_34
   Benton S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P47, DOI 10.1109/ICSE-Companion.2019.00035
   Choi MJ, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1546
   Dai JF, 2015, IEEE I CONF COMP VIS, P1635, DOI 10.1109/ICCV.2015.191
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   DeYoung J, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P4443
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Gupta Rahul, 2019, ADV NEURAL INFORM PR, V32, P11861
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hellendoorn V. J., 2020, INT C LEARN REPR
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jain S, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P4459
   Jones JA., 2003, Visualization for fault localization
   Kanade A., 2020, Learning and evaluating contextual embedding of source code, P5110
   Lei T, 2016, P 2016 C EMPIRICAL M, P107, DOI [DOI 10.18653/V1/D16-1011, 10.18653/v1/d16-1011]
   Li Jian, 2017, Code completion with neural attention and pointer networks
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Lin D, 2016, PROC CVPR IEEE, P3159, DOI 10.1109/CVPR.2016.344
   Lin M, 2014, 2014 INTERNATIONAL CONFERENCE ON MEDICAL BIOMETRICS (ICMB 2014), P1, DOI 10.1109/ICMB.2014.8
   Lison P, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P1518
   Liu F, 2020, IEEE INT CONF AUTOM, P473, DOI 10.1145/3324884.3416591
   Liu F, 2020, INT C PROGRAM COMPRE, P37, DOI 10.1145/3387904.3389261
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Luong M-T, 2015, ARXIV
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Michel Paul, 2019, ADV NEURAL INFORM PR, P14014
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Ni J, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1470, DOI 10.18653/v1/P17-1135
   Papandreou G, 2015, Arxiv, DOI arXiv:1502.02734
   Patra B, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P6268
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Safranchik E, 2020, AAAI CONF ARTIF INTE, V34, P5570
   Selvaraju RR, 2017, IEEE I CONF COMP VIS, P618, DOI 10.1109/ICCV.2017.74
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Vasic M., 2019, Neural program repair by jointly learning to localize and repair
   Vaswani A, 2017, ADV NEUR IN, V30
   Voita E, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P5797
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/saner48275.2020.9054857, 10.1109/SANER48275.2020.9054857]
   Wang ZH, 2020, 2020 IEEE INTL CONF ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING, INTL CONF ON PERVASIVE INTELLIGENCE AND COMPUTING, INTL CONF ON CLOUD AND BIG DATA COMPUTING, INTL CONF ON CYBER SCIENCE AND TECHNOLOGY CONGRESS (DASC/PICOM/CBDCOM/CYBERSCITECH), P562, DOI 10.1109/DASC-PICom-CBDCom-CyberSciTech49142.2020.00100
   Wei YC, 2018, PROC CVPR IEEE, P7268, DOI 10.1109/CVPR.2018.00759
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Yu M, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P4094
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhou B, 2016, PROC CVPR IEEE, P2921, DOI 10.1109/CVPR.2016.319
   Zhou ZH, 2018, NATL SCI REV, V5, P44, DOI 10.1093/nsr/nwx106
NR 57
TC 0
Z9 0
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 APR 23
PY 2024
DI 10.1002/smr.2669
EA APR 2024
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OH8J6
UT WOS:001206470400001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Miloudi, C
   Cheikhi, L
   Idri, A
   Abran, A
AF Miloudi, Chaymae
   Cheikhi, Laila
   Idri, Ali
   Abran, Alain
TI On the value of instance selection for bug resolution prediction
   performance
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE bug fixing; classification; effort; estimation; instance selection;
   machine learning; maintenance; open-source software
ID MAINTENANCE EFFORT; CONSISTENCY; ENSEMBLE; MODELS
AB Software maintenance is a challenging and laborious software management activity, especially for open-source software. The bugs reports of such software allow tracking maintenance activities and were used in several empirical studies to better predict the bug resolution effort. These reports are known for their large size and contain nonrelevant instances that need to be preprocessed to be suitable for use. To this end, instance selection (IS) has been proposed in the literature as a way to reduce the size of the datasets, while keeping the relevant instances. The objective of this study is to perform an empirical study that investigates the impact of data preprocessing through IS on the performance of bug resolution prediction classifiers. To deal with this, four IS algorithms, namely, edited nearest neighbor (ENN), repeated ENN, all-k nearest neighbors, and model class selection, are applied on five large datasets, together with five machine learning techniques. Overall, 125 experiments were performed and compared. The findings of this study highlight the positive impact of IS in providing better estimates for bug resolution prediction classifiers, in particular using repeated ENN and ENN algorithms.
   The key findings of the conducted empirical study are as follows: The best performances were achieved by SVM, RT, and kNN techniques, while MNB technique gave low performance. Instance selection algorithms improved the performance of original classifiers, in particular for those conducted on reduced datasets using RENN and ENN algorithms. The classifiers conducted on reduced datasets using MCS algorithm achieved similar results to those obtained by original classifiers. RENN mainly enhanced kNN, SVM, MNB, and VP techniques, while ENN enhanced RT technique. image
C1 [Miloudi, Chaymae; Cheikhi, Laila; Idri, Ali] Mohammed V Univ Rabat, Software Project Management Team, ENSIAS, Rabat, Morocco.
   [Abran, Alain] Ecole Technol Super, Dept Software Engn & Informat Technol, Montreal, PQ, Canada.
C3 Mohammed V University in Rabat; University of Quebec; Ecole de
   Technologie Superieure - Canada
RP Idri, A (corresponding author), Mohammed V Univ Rabat, Software Project Management Team, ENSIAS, Rabat, Morocco.
EM ali.idri@um5.ac.ma
RI ; Abran, Alain/I-2493-2016
OI Idri, Ali/0000-0002-4586-4158; Abran, Alain/0000-0003-2670-9061;
   Miloudi, Chaymae/0000-0002-8946-1262
CR Aljamaan H, 2013, LECT NOTES COMPUT SC, V7902, P592, DOI 10.1007/978-3-642-38679-4_60
   Anh N., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering, P1
   [Anonymous], Math in Society
   Ardimento P., 2017, Proceedings of the International Conference on Web Intelligence, Mining and Semantics, P1
   Ardimento P, 2016, LECT NOTES ARTIF INT, V9956, P167, DOI 10.1007/978-3-319-46307-0_11
   Arthur LJ., 1988, Software Evolution: The Software Maintenance Challenge
   Olvera-López JA, 2010, ARTIF INTELL REV, V34, P133, DOI 10.1007/s10462-010-9165-y
   Aston N., 2014, Journal of Computer and Communications, V2, P11, DOI DOI 10.4236/JCC.2014.23002
   Azhar Damir, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P173, DOI 10.1109/ESEM.2013.25
   Batista GustavoE. A. P. A., 2009, Argentine Symposium on Artificial Intelligence, P95
   BENTLER PM, 1980, PSYCHOL BULL, V88, P588, DOI 10.1037/0033-2909.107.2.238
   Bhattacharya P, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P171, DOI 10.1145/1985793.1985817
   Blachnik M, 2019, INT J AP MAT COM-POL, V29, P151, DOI 10.2478/amcs-2019-0012
   Bougie Gargi, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P106, DOI 10.1109/MSR.2010.5463291
   Brodley CE., 1993, Proceedings of the Tenth International Conference on Machine Learning, P17, DOI [10.1016/B978-1-55860-307-3.50009-5, DOI 10.1016/B978-1-55860-307-3.50009-5]
   Chen JS, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3391613
   Chirawichitchai Nivet, 2013, 2013 Eleventh International Conference on ICT and Knowledge Engineering (ICT & Knowledge Engineering), DOI 10.1109/ICTKE.2013.6756285
   Derrac J, 2010, INT J APPL METAHEURI, V1, P60, DOI 10.4018/jamc.2010102604
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Drmota M, 1997, RANDOM STRUCT ALGOR, V10, P421, DOI 10.1002/(SICI)1098-2418(199707)10:4<421::AID-RSA2>3.0.CO;2-W
   el Hindi K, 2011, NEURAL NETW WORLD, V21, P311, DOI 10.14311/NNW.2011.21.019
   Elmidaoui S., 2018, Proceedings of WorldCIST'18 Advances in Intelligent Systems and Computing, P746
   Elmidaoui S., 2020, Proceedings of the 30th International Workshop on Software Measurement and 15th International Conference on Software Process and Product Measurement, P2725
   Elmidaoui S, 2019, I C COMP SYST APPLIC
   Fernandez-Fernandez Yasmany, 2021, International Conference on Communication, Computing and Electronics Systems. Proceedings of ICCCES 2020. Lecture Notes in Electrical Engineering (LNEE 733), P313, DOI 10.1007/978-981-33-4909-4_23
   Ferri C., 2011, P 28 INT C MACHINE L, P657, DOI DOI 10.1145/347090.347126
   Freund Y., 1998, Proceedings of the Eleventh Annual Conference on Computational Learning Theory, P209, DOI 10.1145/279943.279985
   García S, 2012, IEEE T PATTERN ANAL, V34, P417, DOI 10.1109/TPAMI.2011.142
   García-Laencina PJ, 2010, NEURAL COMPUT APPL, V19, P263, DOI 10.1007/s00521-009-0295-6
   Grochowski M, 2004, LECT NOTES ARTIF INT, V3070, P580
   Guan D, 2009, INFORM SCIENCES, V179, P2273, DOI 10.1016/j.ins.2009.02.011
   Guo P.J., 2010, P 32 ACM IEEE INT C, V1, P495, DOI 10.1145/1806799.1806871
   Guo SK, 2018, IEEE ACCESS, V6, P45934, DOI 10.1109/ACCESS.2018.2865780
   Habayeb M, 2018, IEEE T SOFTWARE ENG, V44, P1224, DOI 10.1109/TSE.2017.2757480
   Hasanin T, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0274-4
   Idri A, 2020, HEALTH TECHNOL-GER, V10, P1239, DOI 10.1007/s12553-020-00453-2
   Jankowski N, 2004, LECT NOTES ARTIF INT, V3070, P598
   Jeni LA, 2013, INT CONF AFFECT, P245, DOI 10.1109/ACII.2013.47
   Jiang LX, 2016, INFORM SCIENCES, V329, P346, DOI 10.1016/j.ins.2015.09.037
   Kaur K., 2016, Statistical Comparison of Machine Learning Techniques for Predicting Software Maintainability and Defects
   Kibriya AM, 2004, LECT NOTES ARTIF INT, V3339, P488
   Kim KJ, 2006, EXPERT SYST APPL, V30, P519, DOI 10.1016/j.eswa.2005.10.007
   Kordos Miroslaw, 2012, Artificial Neural Networks and Machine Learning - ICANN 2012. 22nd International Conference on Artificial Neural Networks, P263, DOI 10.1007/978-3-642-33266-1_33
   Last F., 2017, Information ences, V465, P1, DOI 10.1016/j.ins.2018.06.056
   Malhotra R., 2013, Softw Eng, V3, P21
   Marks L., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering, P1, DOI [10.1145/2020390.2020401, DOI 10.1145/2020390.2020401]
   Miloudi C., 2022, INT WORKSH SOFTW MEA
   Miloudi C., 2022, Recent Adv Comput Sci Commun, V16, P1, DOI [10.2174/2666255816666220609110712, DOI 10.2174/2666255816666220609110712]
   Miloudi C., 2023, The Impact of Grid Search on Bug Resolution Prediction for OpenSource Software, P625, DOI [10.1109/CoDIT58514.2023.10284124, DOI 10.1109/CODIT58514.2023.10284124]
   Miloudi C, 2022, LECT NOTE NETW SYST, V470, P191, DOI 10.1007/978-3-031-04829-6_17
   Onan A, 2015, EXPERT SYST APPL, V42, P6844, DOI 10.1016/j.eswa.2015.05.006
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pigoski TM., 1996, Practical Software Maintenance: Best Practices for Managing Your Software Investment
   Sabor KK, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2019.106205
   Satapathy SK., 2021, EEG Brain Signal Classification for Epileptic Seizure Disorder Detection
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Sharafati A, 2019, INT J ENVIRON SCI TE, V16, P7147, DOI 10.1007/s13762-019-02344-0
   Thung Ferdian., 2016, P 5 INT WORKSHOP SOF, P18
   TOMEK I, 1976, IEEE T SYST MAN CYB, V6, P448
   Umer Q, 2018, IEEE ACCESS, V6, P35743, DOI 10.1109/ACCESS.2018.2850910
   Valdivia Garcia H., 2014, Characterizing and Predicting Blocking Bugs in Open Source Projects, P72, DOI [10.1145/2597073.2597099, DOI 10.1145/2597073.2597099]
   Vapnik V., 2000, Technometrics, V8, P1, DOI [10.1007/978-1-4757-3264-1, DOI 10.1007/978-1-4757-3264-1, 10.1080/00401706.1996.10484565, DOI 10.1080/00401706.1996.10484565]
   Wadhawa M., 2016, Int J Comput Sci Eng Applic, V6, P9, DOI [10.5121/ijcsea.2016.6102, DOI 10.5121/IJCSEA.2016.6102, DOI 10.17430/897811]
   Wang HR, 2018, PROC IEEE INT CONF S, P299, DOI 10.1109/ICSME.2018.00039
   WILSON DL, 1972, IEEE T SYST MAN CYB, VSMC2, P408, DOI 10.1109/TSMC.1972.4309137
   Wu H, 2016, PROC IEEE INT CONF S, P32, DOI 10.1109/ICSME.2016.87
   Xiong CJ, 2009, IN C IND ENG ENG MAN, P267, DOI 10.1109/IEEM.2009.5373367
   Yang YH, 2007, ANN STAT, V35, P2450, DOI 10.1214/009053607000000514
   Yu LG, 2006, J SOFTW MAINT EVOL-R, V18, P311, DOI 10.1002/smr.335
   Zhan X., 2022, arXiv
   Zhao YH, 2008, ADV SPACE RES, V41, P1955, DOI 10.1016/j.asr.2007.07.020
NR 72
TC 0
Z9 0
U1 2
U2 2
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUL 2
PY 2024
DI 10.1002/smr.2710
EA JUL 2024
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XF2S0
UT WOS:001260208700001
DA 2024-08-05
ER

PT J
AU Santos, G
   Muzetti, I
   Figueiredo, E
AF Santos, Geanderson
   Muzetti, Igor
   Figueiredo, Eduardo
TI Two sides of the same coin: A study on developers' perception of defects
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE defect prediction; machine learning models; software features for defect
   prediction
AB Software defect prediction is a subject of study involving the interplay of software engineering and machine learning. The current literature proposed numerous machine learning models to predict software defects from software data, such as commits and code metrics. Further, the most recent literature employs explainability techniques to understand why machine learning models made such predictions (i.e., predicting the likelihood of a defect). As a result, developers are expected to reason on the software features that may relate to defects in the source code. However, little is known about the developers' perception of these machine learning models and their explanations. To explore this issue, we focus on a survey with experienced developers to understand how they evaluate each quality attribute for the defect prediction. We chose the developers based on their contributions at GitHub, where they contributed to at least 10 repositories in the past 2 years. The results show that developers tend to evaluate code complexity as the most important quality attribute to avoid defects compared with the other target attributes such as source code size, coupling, and documentation. At the end, a thematic analysis reveals that developers evaluate testing the code as a relevant aspect not covered by the static software features. We conclude that, qualitatively, there exists a misalignment between developers' perceptions and the outputs of machine learning models. For instance, while machine learning models assign high importance to documentation, developers often overlook documentation and prioritize assessing the complexity of the code instead.
C1 [Santos, Geanderson; Figueiredo, Eduardo] Univ Fed Minas Gerais, Comp Sci Dept, Belo Horizonte, Brazil.
   [Muzetti, Igor] Univ Fed Ouro Preto, Comp Sci Dept, Ouro Preto, Brazil.
   [Santos, Geanderson; Muzetti, Igor; Figueiredo, Eduardo] Ave Antonio Carlos 6627,Predio ICEx, BR-3127090 Belo Horizonte, MG, Brazil.
C3 Universidade Federal de Minas Gerais; Universidade Federal de Ouro Preto
RP Santos, G (corresponding author), Univ Fed Minas Gerais, Comp Sci Dept, Belo Horizonte, Brazil.
EM geanderson@dcc.ufmg.br
OI Esteves dos Santos, Geanderson/0000-0002-7571-6578
FU CNPq; CAPES; FAPEMIG
FX This research was partially supported by Brazilian funding agencies:
   CNPq, CAPES, and FAPEMIG.
CR Abdullah AlOmar E., 2019, J Machine Learn Res (JMLR)
   Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Akiba T, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2623, DOI 10.1145/3292500.3330701
   Ali M., 2020, Read Docs
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bui XN., 2022, Extra trees ensemble: a machine learning model for predicting blastinduced ground vibration based on the bagging and sibling of random forest algorithm, P642
   Cawley GC, 2010, J MACH LEARN RES, V11, P2079
   Cui C, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2497
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Eken B, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2381
   Esteves G, 2020, AUTOMAT SOFTW ENG, V27, P369, DOI 10.1007/s10515-020-00277-4
   Ferenc R, 2020, SOFTWARE QUAL J, V28, P1447, DOI 10.1007/s11219-020-09515-0
   Ferenc Rudolf, 2020, Zenodo, DOI 10.5281/ZENODO.3693686
   Ferenc R, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P12, DOI 10.1145/3273934.3273936
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Fukushima T., 2014, An empirical study of justintime defect prediction using crossproject models, P172
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gousios G., 2014, Lean GHTorrent: GitHub data on demand, P384
   Graff CS, 2020, PREV SCH FAIL, V65, P20, DOI 10.1080/1045988X.2020.1811626
   Guo SK, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2362
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Haskins B., 2004, INCOSE Int Symp, P1723, DOI DOI 10.1002/J.2334-5837.2004.TB00608.X
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S, 2015, 2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW), P90, DOI 10.1109/ASEW.2015.8
   IEEE Computer Society, 1990, IEEE Standard Glossary of Software Engineering Terminology, V729, P32
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jureczko M., 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868342
   Jureczko M., 2010, Models Methods Syst Dependabil (MMSD), P69
   Ke G., 2017, Advances in Neural Information Processing Systems, V2017-Decem, P3147, DOI DOI 10.5555/3294996.3295074
   Kursa MB, 2010, FUND INFORM, V101, P271, DOI 10.3233/FI-2010-288
   Levin S., 2017, BOOSTING AUTOMATIC C, P97
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Lin ZJ, 2014, PR MACH LEARN RES, V32, P325
   Liu Q, 2017, LECT NOTES COMPUT SC, V10439, P351, DOI 10.1007/978-3-319-64471-4_28
   Lundberg SM, 2017, ADV NEUR IN, V30
   Lundberg SM, 2020, NAT MACH INTELL, V2, P56, DOI 10.1038/s42256-019-0138-9
   Lundberg SM, 2018, NAT BIOMED ENG, V2, P749, DOI 10.1038/s41551-018-0304-0
   Lundberg SM., 2018, Comput Res Reposit (CoRR)
   Menzies T., 2004, Assessing predictors of software defects, P1
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mori T, 2019, EMPIR SOFTW ENG, V24, P779, DOI 10.1007/s10664-018-9638-1
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Ni C, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2203
   Pantiuchina J, 2018, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2018.00017
   Petri J., 2016, The jinx on the NASA software defect data sets, P1
   Pornprasit C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P407, DOI 10.1109/ASE51524.2021.9678763
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Santos G., 2022, Understanding thresholds of software features for defect prediction, P305
   Santos G., 2022, The subtle art of digging for defects: analyzing features for defect prediction in java projects
   Sayyad S J., 2005, The PROMISE repository of software engineering databases
   SeleniumHQ, 2010, Selenium
   Stroulia E, 2001, OOIS 2001: 7TH INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P113
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thung F, 2013, EUR CON SFTWR MTNCE, P323, DOI 10.1109/CSMR.2013.41
   Tóth Z, 2016, LECT NOTES COMPUT SC, V9789, P625, DOI 10.1007/978-3-319-42089-9_44
   Turhan B, 2011, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2011.59
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Turhan B, 2009, DATA KNOWL ENG, V68, P278, DOI 10.1016/j.datak.2008.10.005
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wilcoxon F., 1992, Individual Comparisons by Ranking Methods
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Xu Z, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P209, DOI 10.1109/SANER.2018.8330210
   Xuan X, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1644, DOI 10.1145/2695664.2695959
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zimmermann T., 2007, Proceedings of the Third International Workshop on Predictor Models in Software Engineering, PROMISE'07, page, P9
NR 76
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUN 18
PY 2024
DI 10.1002/smr.2699
EA JUN 2024
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA9P5
UT WOS:001252268100001
DA 2024-08-05
ER

PT J
AU Omar, M
   Gilal, AR
   Ahmad, M
   Ibrahim, H
   Yasin, A
   Awang, H
   Almogahed, A
AF Omar, Mazni
   Gilal, Abdul Rehman
   Ahmad, Mazida
   Ibrahim, Huda
   Yasin, Azman
   Awang, Hapini
   Almogahed, Abdullah
TI Enhancing agile project success: a comprehensive study of risk
   management approaches among Malaysian practitioners
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE agile software project; project monitoring risk; risk assessment;
   software risk; software risk management
AB Risk management (RM) plays a role in project management in the software development field. As information technology (IT) systems become more essential across industries and IT projects continue to face failure rates effective project management becomes crucial. However, the utilization of methodologies in risk management is not widely considered, specifically in Malaysia. This study aims to investigate how software practitioners in Malaysia have implemented risk management and discover strategies that can enhance risk management for agile contexts. The main focus of this study is the limited integration of methodologies into risk management practices, which has created a gap within the software risk domain. Successful risk management is essential for the achievement of software projects, and the findings from this study can offer insights for software development organizations to make informed decisions and improve project outcomes. By utilizing a quantitative approach and adapted questionnaires, this comprehensive study collected data from 60 practitioners and conducted descriptive analysis to identify key risk elements that have significant potential to affect project performance. The findings highlight these risk elements that can significantly impact project success. Agile methodologies, with their emphasis on collaboration, communication within teams, and engagement with stakeholders, including top management, are instrumental in aligning project objectives, identifying potential risks, and resolving issues promptly. This study provides empirical insights into the risk management practices of agile practitioners in Malaysia, which can equip software development organizations with valuable knowledge for informed decision-making. By enhancing project outcomes and guiding future strategic actions, the findings of this study can contribute to the improvement of agile risk management in the software development industry, particularly in the Malaysian context.
   The findings of this study reveal that the majority of respondents recognized the importance of risk management in their software projects. Involving all stakeholders in the project can make it challenging and requires quick responses, implying that the more stakeholders are involved, the more challenging it is to manage risks in an agile project. Therefore, knowledge sharing, especially tacit knowledge among stakeholders, is crucial and requires an effective process to manage them. image
C1 [Omar, Mazni; Ahmad, Mazida; Ibrahim, Huda; Yasin, Azman; Awang, Hapini] Univ Utara Malaysia, Inst Adv & Smart Digital Opportun IASDO, Sch Comp, Sintok, Kedah, Malaysia.
   [Gilal, Abdul Rehman] Florida Int Univ, Knight Fdn, Sch Comp & Informat Sci, Miami, FL 33199 USA.
   [Almogahed, Abdullah] Univ Tun Hussein Onn, Fac Comp Sci & Informat Technol, Batu Pahat, Johor, Malaysia.
C3 Universiti Utara Malaysia; State University System of Florida; Florida
   International University; University of Tun Hussein Onn Malaysia
RP Gilal, AR (corresponding author), Florida Int Univ, Knight Fdn, Sch Comp & Informat Sci, Miami, FL 33199 USA.
EM rehman_gilal33@yahoo.com
RI Almogahed, Abdullah/GZM-7273-2022
OI Almogahed, Abdullah/0000-0001-5408-1529
CR Alashwal AM, 2017, J MANAGE ENG, V33, DOI 10.1061/(ASCE)ME.1943-5479.0000553
   Almomani MA, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1953
   Alshehab A., 2020, J Theor Appl Inf Technol, V98, P1513
   Anes V., 2020, 2020 INT YOUNG ENG F
   Anthony B, 2019, J SCI TECHNOL POLICY, V10, P404, DOI 10.1108/JSTPM-06-2018-0060
   Anthony B, 2015, 2015 9TH MALAYSIAN SOFTWARE ENGINEERING CONFERENCE (MYSEC2015), P217, DOI 10.1109/MySEC.2015.7475224
   Awang H., 2018, J Inform Syst Technol Manag, V3, P16
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Coutinho P, 2019, ADV HUM-COMPUT INTER, V2019, DOI 10.1155/2019/9769246
   Demirdögen G, 2023, BUILDINGS-BASEL, V13, DOI 10.3390/buildings13102606
   Dey PP, 2016, PRESSACAD PROC, V2, P427, DOI 10.17261/Pressacademia.2016118662
   dos Santos JC., 2023, Implementing a simplified risk management approach in agile software development: an experience report, DOI [10.1145/3629479.3629516, DOI 10.1145/3629479.3629516]
   Filippetto Alexsandro, 2020, International Journal of Agile Systems and Management, V13, P296
   Gilal AR, 2016, INFORM SOFTWARE TECH, V74, P105, DOI 10.1016/j.infsof.2016.02.007
   Huysmans P, 2014, P ANN HICSS, P4416, DOI 10.1109/HICSS.2014.544
   Hwang J., 2020, J Bus Res, V113, P312
   Irizar Jose, 2018, International Journal of Risk and Contingency Management, V7, P53, DOI 10.4018/IJRCM.2018070103
   Javani B, 2016, INT J MANAG PROJ BUS, V9, P389, DOI 10.1108/IJMPB-07-2015-0055
   Kamali A., 2020, CiiT International Journal of Programmable Device Circuits and Systems, V12, P51
   Karimi T., 2020, J Opt Ind Eng, V13, P267
   Khan S., 2021, IEEE Access, V9, P48591
   Kosztyán ZT, 2020, OPER RES PERSPECT, V7, DOI 10.1016/j.orp.2020.100170
   Marle F, 2020, COMPLEXITY, V2020, DOI 10.1155/2020/3739129
   Masso J, 2020, COMPUT STAND INTER, V71, DOI 10.1016/j.csi.2020.103431
   Mohamed B., 2015, Int J Appl Eng Res, V10, P42502
   Moradi M, 2019, KYBERNETES, V48, P385, DOI 10.1108/K-02-2018-0094
   Nguyen D.S., 2016, American Scientific Research Journal for Engineering, Technology, and Sciences, V17, P323
   Nikolaenko V, 2023, J RISK FINANC MANAG, V16, DOI 10.3390/jrfm16010033
   Odzaly EE, 2018, J AMB INTEL HUM COMP, V9, P823, DOI 10.1007/s12652-017-0488-2
   Osman H., 2021, Int J Adv Comput Sci Appl, V12, P310
   Prakash B, 2021, SOFT COMPUT, V25, P5587, DOI 10.1007/s00500-020-05555-7
   Rabbi MF., 2016, Eur J Adv Eng Technol, V3, P1
   Sankhwar S., 2014, Int J Adv Res Comput Sci Softw Eng, V4, P504
   Schön EM, 2020, LECT NOTES BUS INF P, V383, P132, DOI 10.1007/978-3-030-49392-9_9
   Shehzad N., 2022, A review of risk management in agile development, P63, DOI [10.1109/ICDI57181.2022.10007239, DOI 10.1109/ICDI57181.2022.10007239]
   Shrivastava SV, 2015, INFORM SOFTWARE TECH, V58, P373, DOI 10.1016/j.infsof.2014.07.007
   Singh S., 2023, J Risk Financ Manag, V16, DOI [10.3390/jrfm16020129, DOI 10.3390/JRFM16020129]
   Srivastava A., 2020, Int J Sci Technol Res, V9, P6141, DOI [10.1007/s13198-020-00966-z, DOI 10.1007/S13198]
   Tavares BG, 2021, J COMPUT INFORM SYST, V61, P561, DOI 10.1080/08874417.2020.1839813
   Verma B., 2016, Int J, V2, P499
   Wang Y., 2021, IEEE Access, V9, P19245
   Zahedi MH., 2023, Int JElectr Comput Eng, V13, P4379, DOI [10.11591/ijece.v13i4.pp4379-4387, DOI 10.11591/IJECE.V13I4.PP4379]
   Zhang JG, 2015, J OPER RES SOC, V66, P1555, DOI 10.1057/jors.2014.125
NR 43
TC 0
Z9 0
U1 3
U2 3
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 MAY 19
PY 2024
DI 10.1002/smr.2681
EA MAY 2024
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RH6K0
UT WOS:001226811200001
DA 2024-08-05
ER

PT J
AU Alharbi, M
   Alshayeb, M
AF Alharbi, Maha
   Alshayeb, Mohammad
TI An empirical investigation of the relationship between pattern grime and
   code smells
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE code smells; design patterns; pattern grime; software quality
ID DESIGN PATTERNS; BAD SMELLS; IMPACT
AB Developers are encouraged to adopt good design practices to maintain good software quality during the system's evolution. However, some modifications and changes to the system could cause code smells and pattern grime, which might incur more maintenance effort. As the presence of both code smells and pattern grime is considered a bad sign and raises a flag at code segments that need more careful examination, a potential connection between them may exist. Therefore, the main objective of this paper is to (1) empirically investigate the potential relationship between the accumulation of pattern grime and the presence of code smells and (2) evaluate the significance of individual code smells when they appear in a specific pattern grime category. To achieve this goal, we performed an empirical study using six-grime metrics and 10 code smells on five Java open-source projects ranging from 217 to 563 classes. Our statistical results indicate that, in general, the growth of grime is more likely to co-occur with code smells using Spearman's correlation and Odd Ratio test. Specifically, there is a strong positive association between the growth of pattern grime at the class level and the presence of Shotgun Surgery smell according to the result of applying the Apriori algorithm, which gives conviction values equal to 1.66. The findings in this paper are helpful for developers and researchers as the presence of pattern grime could be considered a factor in improving the performance of existing smell detection methods. Furthermore, the link between grime and smells can be exploited as a hint for smell distribution in the system.
   The results indicate that, in general, the growth of grime is more likely to co-occur with code smells. Specifically, there is a strong positive association between the growth of pattern grime at the class level and the presence of Shotgun Surgery. image
C1 [Alharbi, Maha; Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
   [Alharbi, Maha] Umm Al Qura Univ, Univ Coll Al Jamoum, Dept Comp Sci, Mecca, Saudi Arabia.
   [Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran, Saudi Arabia.
   [Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals; Umm Al Qura University;
   King Fahd University of Petroleum & Minerals; King Fahd University of
   Petroleum & Minerals
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran, Saudi Arabia.
EM alshayeb@kfupm.edu.sa
RI Alshayeb, Mohammad/B-5941-2015
OI Alshayeb, Mohammad/0000-0001-7950-0099; Alharbi,
   Maha/0009-0007-2605-3011
FU King Fahd University of Petroleum and Minerals; Deanship of Research
   Oversight and Coordination at King Fahd University of Petroleum and
   Minerals
FX The authors acknowledge the support provided by the Deanship of Research
   Oversight and Coordination at King Fahd University of Petroleum and
   Minerals. We also acknowledge the assistance provided by Mr. Yazan
   Abdallah during the experimental setup phase of this study.
CR Abdelaziz T., 2019, Information bulletin in computers and information, V1, P6, DOI [10.21608/fcihib.2019.107517, DOI 10.21608/FCIHIB.2019.107517]
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Alfadel M, 2020, PLOS ONE, V15, DOI 10.1371/journal.pone.0231731
   Alkhaeir T, 2021, IEEE ACCESS, V9, P3360, DOI 10.1109/ACCESS.2020.3047870
   [Anonymous], Nutch
   [Anonymous], JREFACTORY
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   [Anonymous], MapperXML
   [Anonymous], JHOTDRAW
   [Anonymous], QuickUML
   Bahill AT, 2008, ENG MANAG J, V20, P9, DOI 10.1080/10429247.2008.11431783
   Basili V.R., 1994, Encyclopedia of software engineering, P528
   Brin S., 1997, SIGMOD Record, V26, P265, DOI [10.1145/253262.253325, 10.1145/253262.253327]
   Cairo AS, 2018, INFORMATION, V9, DOI 10.3390/info9110273
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Cohen L. H., 1988, Life Events and Psychological Functioning: Theoretical and Methodological Issues
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Dale M.R., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, P37
   De Lucia A, 2009, J SYST SOFTWARE, V82, P1177, DOI 10.1016/j.jss.2009.02.012
   Dhillon P.K., 2012, International Journal of Scientific and Research Publications, V2, P1
   Dhiman G, 2021, J AMB INTEL HUM COMP, V12, P8457, DOI 10.1007/s12652-020-02580-0
   Dhiman G, 2021, ENG COMPUT-GERMANY, V37, P323, DOI 10.1007/s00366-019-00826-w
   Dhiman G, 2019, ENG APPL ARTIF INTEL, V82, P148, DOI 10.1016/j.engappai.2019.03.021
   Dhiman G, 2018, KNOWL-BASED SYST, V159, P20, DOI 10.1016/j.knosys.2018.06.001
   Dhiman G, 2017, ADV ENG SOFTW, V114, P48, DOI 10.1016/j.advengsoft.2017.05.014
   Dietrich J, 2007, J WEB SEMANT, V5, P108, DOI 10.1016/j.websem.2006.11.007
   Dong J, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P371
   Feitosa D, 2018, IEEE ACCESS, V6, P23065, DOI 10.1109/ACCESS.2018.2829895
   Feitosa D, 2017, LECT NOTES COMPUT SC, V10611, P165, DOI 10.1007/978-3-319-69926-4_13
   Field AP, 2009, Discovering Statistics using SPSS
   Fokaefs Marios, 2007, 2007 IEEE International Conference on Software Maintenance, P519, DOI 10.1109/ICSM.2007.4362679
   Folwer M, 1999, Refactoring: Improving the design of existing code
   Fontana F. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P15, DOI 10.1109/MTD.2012.6225993
   Fontana FA, 2011, J SYST SOFTWARE, V84, P2334, DOI 10.1016/j.jss.2011.07.006
   Fontana FA, 2013, PROC IEEE INT CONF S, P260, DOI 10.1109/ICSM.2013.37
   Fontana FA, 2011, INFORM SCIENCES, V181, P1306, DOI 10.1016/j.ins.2010.12.002
   Gamma E., 1995, DESIGN PATTERNS ELEM
   Ganea G, 2017, SCI COMPUT PROGRAM, V134, P19, DOI 10.1016/j.scico.2015.02.007
   Griffith I., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, P1
   Griffith I. D., 2015, Design Pattern Decay A Study of Design Pattern Grime and its Impact on Quality and Technical Debt
   Gueheneuc Y-G., 2007, Proceedings of the 1st EuroPLoP Focus Group on Pattern Repositories, P1
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Izurieta Clemente, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P171, DOI 10.1109/ICST.2008.27
   Izurieta Clemente, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P449
   Izurieta C, 2013, SOFTWARE QUAL J, V21, P289, DOI 10.1007/s11219-012-9175-x
   Juliet Thessalonica D., 2023, Hindawi Sci. Program, V2023, P2973250, DOI [10.1155/2023/2973250, DOI 10.1155/2023/2973250]
   Kaur A, 2020, ARCH COMPUT METHOD E, V27, P1267, DOI 10.1007/s11831-019-09348-6
   Kaur S, 2020, ENG APPL ARTIF INTEL, V90, DOI 10.1016/j.engappai.2020.103541
   Kerievsky J., 2005, Refactoring to Patterns, DOI [10.1007/978-3-540-27777-4_54, DOI 10.1007/978-3-540-27777-4_54]
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Khomh F, 2009, WORK CONF REVERSE EN, P303, DOI 10.1109/WCRE.2009.22
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Mantyla Mika., 2003, Bad Smells in Software - a Taxonomy and an Empirical Study
   Marinescu C., 2005, IEEE INT C SOFTW MAI
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Reimanis D, 2019, LECT NOTES COMPUT SC, V11602, P77, DOI 10.1007/978-3-030-22888-0_6
   Schanz T., 2010, Proceedings of the 2010 ACMIEEE International Symposium on Empirical Software Engineering and Measurement (ESEM '10), P1, DOI DOI 10.1145/1852786.1852796
   Sheskin D. J., 2007, Handbook of Parametric and Nonparametric Statistical Procedures, DOI [DOI 10.1201/9781420036268, 10.1201/9781420036268]
   Shi N, 2006, IEEE INT CONF AUTOM, P123
   Smith JM, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ASE.2003.1240309
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Vidal S, 2015, 2015 34TH INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY (SCCC)
   Wake WC., 2004, Refactoring Workbook
   Zazworka N., 2011, P 2 WORKSH MAN TECHN, P17, DOI [10.1145/1985362.1985366, DOI 10.1145/1985362.1985366]
NR 70
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 MAR 21
PY 2024
DI 10.1002/smr.2666
EA MAR 2024
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LS0T4
UT WOS:001188681300001
DA 2024-08-05
ER

PT J
AU Demi, S
   Sánchez-Gordón, M
   Kristiansen, M
   Larrucea, X
AF Demi, Selina
   Sanchez-Gordon, Mary
   Kristiansen, Monica
   Larrucea, Xabier
TI Trustworthy and collaborative traceability management: Experts' feedback
   on a blockchain-enabled framework
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE blockchain technology; content analysis; experts' judgment; neural
   distributed ledger; requirements engineering
ID QUALITATIVE CONTENT-ANALYSIS; CHALLENGES; OPPORTUNITIES
AB Blockchain technology has attracted significant attention in both academia and industry. Recently, the application of blockchain has been advocated in software engineering. The global software engineering paradigm exacerbates trust issues, as distributed and cross-organizational teams need to share software artifacts. In such a context, there is a need for a decentralized yet reliable traceability knowledge base to keep track of what/how/when/by whom software artifacts were created or changed. This study presents a blockchain-enabled framework for trustworthy and collaborative traceability management and identifies benefits, challenges, and potential improvements based on the feedback of software engineering experts. A qualitative approach was followed in this study through semistructured interviews with software engineering (SE) experts. Transcripts were analyzed by applying the content analysis technique. The results indicated the emergence of five categories, further grouped into three main categories: experts' perceptions, blockchain-based software process improvement, and experts' recommendations. In addition, the findings suggested four archetypes of organizations that may be interested in blockchain technology: distributed organizations, organizations with contract-based projects, organizations in regulated domains, and regulators who may push the use of this technology. Further efforts should be devoted to the integration of the proposal with tools used throughout the software development lifecycle and leveraging the potential of smart contracts in validating the implementation of requirements automatically.
C1 [Demi, Selina; Sanchez-Gordon, Mary; Kristiansen, Monica] Ostfold Univ Coll, Dept Comp Sci & Commun, Halden, Norway.
   [Larrucea, Xabier] Univ Basque Country UPV EHU, Fac Informat, Vitoria, Spain.
   [Larrucea, Xabier] Straumann Grp, Madrid, Spain.
C3 Ostfold University College; University of Basque Country
RP Sánchez-Gordón, M (corresponding author), Ostfold Univ Coll, Halden, Norway.
OI Sanchez-Gordon, Mary/0000-0002-5102-1122
FU Ostfold University College
FX Ostfold University College
CR Amir B., 2018, Poster: there is no random sampling in software engineering research. In: 2018 IEEE/ACM 40th international conference on software engineering: companion (ICSEcompanion). Pp 344345, DOI [10.1145/3183440.3195001, DOI 10.1145/3183440.3195001]
   Arca, ByEvolution Creative Factory
   Ayres L, 2003, QUAL HEALTH RES, V13, P871, DOI 10.1177/1049732303013006008
   Babar MA, 2014, INFORM SOFTWARE TECH, V56, P1, DOI 10.1016/j.infsof.2013.10.002
   Babich Volodymyr, 2019, Foundations and Trends in Technology, Information and Operations Management, V12, P152, DOI 10.1561/0200000084
   Belotti M, 2019, IEEE COMMUN SURV TUT, V21, P3796, DOI 10.1109/COMST.2019.2928178
   Bengtsson M., 2016, PLAN PERFORM QUALITA, V2, P8, DOI DOI 10.1016/J.NPLS.2016.01.001
   Boyce C., 2006, PATHFINDER INTERNATI
   Cleland-Huang J., 2012, Software and Systems Traceability, DOI DOI 10.1007/978144712239512
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Colomo-Palacios R, 2020, COMM COM INF SC, V1251, P3, DOI 10.1007/978-3-030-56441-4_1
   Coughlan J, 2003, INFORM SOFTWARE TECH, V45, P525, DOI 10.1016/SO950-5849(03)00032-6
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   DeFranco JF, 2017, INNOV SYST SOFTW ENG, V13, P129, DOI 10.1007/s11334-017-0287-0
   Demi Selina, 2022, Systems, Software and Services Process Improvement: 29th European Conference, EuroSPI 2022, Proceedings. Communications in Computer and Information Science (1646), P45, DOI 10.1007/978-3-031-15559-8_4
   Demi Selina, 2022, Figshare, DOI 10.6084/m9.figshare.20903656.v3
   Demi S, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2493
   Demi S, 2021, COMM COM INF SC, V1442, P3, DOI 10.1007/978-3-030-85521-5_1
   Demi S, 2021, IET SOFTW, V15, P391, DOI 10.1049/sfw2.12035
   Demi S, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11072960
   Demi S, 2020, INT REQUIR ENG CONF, P428, DOI 10.1109/RE48521.2020.00063
   Di Pierro M, 2017, COMPUT SCI ENG, V19, P92, DOI 10.1109/MCSE.2017.3421554
   El Hussein M, 2014, QUAL REP, V19
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Farooq MS, 2022, IEEE ACCESS, V10, P48193, DOI 10.1109/ACCESS.2022.3171408
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Fowler M., 2001, Software Development, V9, P28
   Georgiadou E, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2304
   Goodman SN, 2016, SCI TRANSL MED, V8, DOI 10.1126/scitranslmed.aaf5027
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Graneheim UH, 2004, NURS EDUC TODAY, V24, P105, DOI 10.1016/j.nedt.2003.10.001
   Harwood TG., 2003, Pract Assess, Res Eval, V3, P479, DOI [DOI 10.7275/Z6FM-2E34, 10.1362/146934703771910080, https://doi.org/10.7275/z6fm-2-34, DOI 10.7275/Z6FM-2-34]
   Hoffmann M, 2023, IEEE T SOFTWARE ENG, V49, P211, DOI 10.1109/TSE.2022.3148539
   Kiely G, 2022, BEHAV INFORM TECHNOL, V41, P1952, DOI 10.1080/0144929X.2021.1909141
   Kitchenham BA., 2001, SIGSOFT SOFTW ENG NO, V26, P16, DOI DOI 10.1145/505532.505535
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Lenarduzzi V., 2021, Proceedings of the 15th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P1, DOI [10.1145/3475716.3484273, DOI 10.1145/3475716.3484273]
   Mäder P, 2015, EMPIR SOFTW ENG, V20, P413, DOI 10.1007/s10664-014-9314-z
   Mäder P, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P21, DOI 10.1109/TEFSE.2009.5069578
   Marchesi M., 2018, Why blockchain is important for software developers, and why software engineering is important for blockchain software (keynote), DOI [10.1109/IWBOSE.2018.8327564, DOI 10.1109/IWBOSE.2018.8327564]
   Maro S, 2018, J SYST SOFTWARE, V141, P85, DOI 10.1016/j.jss.2018.03.060
   Matthies C., SUMM CHASE 22 C DISC, DOI [10.48550/arXiv.2207.00054, DOI 10.48550/ARXIV.2207.00054]
   Mistrík I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P389, DOI 10.1007/978-3-642-10294-3_19
   Morse JM, 2000, QUAL HEALTH RES, V10, P3, DOI 10.1177/104973200129118183
   Oates BJ., 2022, Researching Information Systems and Computing
   Polit DF., 2010, Essentials of nursing research: appraising evidence for nursing practice
   Regan G, 2012, EUROMICRO CONF PROC, P319, DOI 10.1109/SEAA.2012.80
   Rempel Patrick, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P125, DOI 10.1007/978-3-642-37422-7_10
   SnchezGordn M., 2022, Vote item: is compassionate software development a topic worth researching?, P107, DOI [10.1145/3528579.3529176, DOI 10.1145/3528579.3529176]
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Sunyaev A, 2020, Internet Computing, P265, DOI DOI 10.1007/97830303495789
   Swan M., 2015, Blockchain: Blueprint for a New Economy
   Tian FC, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2374
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Wohlrab R., 2018, Requirements Eng, V25, P21, DOI [10.1007/s0076601803061, DOI 10.1007/S0076601803061]
   Zheng ZB, 2018, INT J WEB GRID SERV, V14, P352, DOI 10.1504/IJWGS.2018.095647
NR 57
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUL 1
PY 2024
DI 10.1002/smr.2707
EA JUL 2024
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XF7B7
UT WOS:001260322600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Liu, BH
   Zhang, H
   Dong, LM
   Wang, ZQ
   Li, SS
AF Liu, Bohan
   Zhang, He
   Dong, Liming
   Wang, Zhiqi
   Li, Shanshan
TI Metrics for software process simulation modeling
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE process simulation; software metric; software process model; systematic
   literature review
ID EVOLUTION PROCESSES; DECISION-MAKING; MANAGEMENT; ITERATION; FRAMEWORK;
   SCHEDULE; PROJECTS; QUALITY; IMPACT; RISK
AB Software process simulation (SPS) has become an effective tool for software process management and improvement. However, its adoption in industry is less than what the research community expected due to the burden of measurement cost and the high demand for domain knowledge. The difficulty of extracting appropriate metrics with real data from process enactment is one of the great challenges. We aim to provide evidence-based support of the process metrics for software process (simulation) modeling. A systematic literature review was performed by extending our previous review series to draw a comprehensive understanding of the metrics for process modeling following our proposed ontology of metrics in SPS. We identify 131 process modeling studies that collectively involve 1975 raw metrics and classified them into 21 categories using the coding technique. We found product and process external metrics are not used frequently in SPS modeling while resource external metrics are widely used. We analyze the causal relationships between metrics. We find that the models exhibit significant diversity, as no pairwise relationship between metrics accounts for more than 10% SPS models. We identify 17 data issues may encounter in measurement and 10 coping strategies. The results of this study provide process modelers with an evidence-based reference of the identification and the use of metrics in SPS modeling and further contribute to the development of the body of knowledge on software metrics in the context of process modeling. Furthermore, this study is not limited to process simulation but can be extended to software process modeling, in general. Taking simulation metrics as standards and references can further motivate and guide software developers to improve the collection, governance, and application of process data in practice.
   We reviewed 131 process simulation modeling studies to identify the metrics used in modeling, the causal relationships between metrics, the metric selection preferences for different levels of modeling purposes, and data issues and coping strategies for measurement. image
C1 [Liu, Bohan; Zhang, He; Dong, Liming; Wang, Zhiqi; Li, Shanshan] Nanjing Univ, Software Inst, State Key Lab Novel Software Technol, 22 Hankou Rd, Nanjing 210093, Jiangsu, Peoples R China.
C3 Nanjing University
RP Zhang, H (corresponding author), Nanjing Univ, Software Inst, State Key Lab Novel Software Technol, 22 Hankou Rd, Nanjing 210093, Jiangsu, Peoples R China.
EM hezhang@nju.edu.cn
FU National Natural Science Foundation of China [62072227, 62202219,
   62302210, 72372070]; Research Council of Norway; Intergovernmental
   BilateralInnovation Project of Jiangsu Province; Jiangsu Provincial Key
   Research and Development Program [BE2021002-2]; Innovation Project
   andOverseas Open Projects of State Key Laboratory for Novel Software
   Technology(Nanjing University) [ZZKT2022A25, KFKT2022A09, KFKT2023A09,
   KFKT2023A10]
FX National Natural Science Foundation of China,Grant/Award Numbers:
   62072227, 62202219, 62302210, 72372070; Research Council of Norway;
   Intergovernmental BilateralInnovation Project of Jiangsu Province;
   Jiangsu Provincial Key Research and Development Program, Grant/Award
   Number:BE2021002-2; Innovation Project andOverseas Open Projects of
   State KeyLaboratory for Novel Software Technology(Nanjing University),
   Grant/Award Numbers: ZZKT2022A25, KFKT2022A09, KFKT2023A09, KFKT2023A10
CR Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   Abilio R., 2012, A systematic review of contemporary metrics for software maintainability
   Abts C., 1997, COTS Software Integration Cost Modeling Study
   Aguilar-Ruiz JS, 2001, INFORM SOFTWARE TECH, V43, P875, DOI 10.1016/S0950-5849(01)00193-8
   Ahmed R, 2008, J SIMUL, V2, P91, DOI 10.1057/jos.2008.1
   Akerele O., 2017, Innov Syst Softw Eng, V4, P1
   Akerele O., 2017, Strategic Engineering for Cloud Computing and Big Data Analytics, P101
   AlEmran A., 2008, Simulating worst case scenarios and analyzing their combined effect in operational release planning, P269
   Ambrósio BG, 2011, J SOFTW MAINT EVOL-R, V23, P35, DOI 10.1002/smr.469
   Anderson DJ, 2012, LECT NOTES BUS INF P, V111, P123
   Andersson C, 2002, NINTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P41, DOI 10.1109/ECBS.2002.999821
   Antoniol G, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P172, DOI 10.1109/METRIC.2004.1357901
   Aranha E, 2008, LECT NOTES COMPUT SC, V5007, P282, DOI 10.1007/978-3-540-79588-9_25
   Bai X, 2012, J SOFTW-EVOL PROC, V24, P721, DOI 10.1002/smr.480
   Baum T, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP), P26, DOI [10.1145/2904354.2904362, 10.1109/ICSSP.2016.012]
   Bazhenov AS., 2013, Forecasting software development project characteristics using metamodeling, P4
   Berkling K., 2008, Timeline prediction framework for iterative software engineering projects with changes, P15
   Berling T., 2003, Adaptation of a simulation model template for testing to an industrial project
   Bin Ali N, 2014, J SYST SOFTWARE, V97, P65, DOI 10.1016/j.jss.2014.06.059
   Bin Ali N, 2012, EUROMICRO CONF PROC, P327, DOI 10.1109/SEAA.2012.69
   Birkhlzer T., 2010, Applications of a generic worktestrework component for software process simulation, P333
   Birkhlzer T., 2010, Softw Process Improv Pract, V10, P327
   Cangussu J. W., 2004, Software Process Improvement and Practice, V9, P55, DOI 10.1002/spip.196
   Cao L., 2010, ACM Trans Manag Inf Syst, V1, p5:1
   Car Z, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P15, DOI 10.1109/CSMR.2002.995786
   Cherif R, 2010, LECT NOTES ARTIF INT, V5683, P73
   Cocco L, 2011, LECT NOTES BUS INF P, V77, P117
   Collofello J, 1998, P ANN HICSS, P103, DOI 10.1109/HICSS.1998.654764
   Collofello JS, 2000, IEEE T EDUC, V43, P389, DOI 10.1109/13.883347
   Concas G., 2008, A dynamic model of software product generative process, P43
   Concas G, 2013, J SOFTW-EVOL PROC, V25, P1225, DOI 10.1002/smr.1599
   Corbin J., 2015, BASICS QUALITATIVE R
   Crespo D., 2012, Decision making support in CMMI process areas using multiparadigm simulation modeling, P1
   Crespo D., 2013, Decision making support in CMMI process areas using multiparadigm simulation modeling, P1
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dan XH., 2013, Modeling user story completion of an agile software process, P88
   Di Penta M, 2011, SOFTWARE PRACT EXPER, V41, P495, DOI 10.1002/spe.1001
   Dong L., 2017, A mapping study on mining software process
   Donzelli P, 2001, J SYST SOFTWARE, V59, P227, DOI 10.1016/S0164-1212(01)00064-4
   Drappa A, 1999, J SYST SOFTWARE, V46, P113, DOI 10.1016/S0164-1212(99)00005-9
   Dugarte-Peña GL, 2021, IET SOFTW, V15, P351, DOI 10.1049/sfw2.12031
   Farshchi M, 2012, COMPUT SCI INF SYST, V9, P627, DOI 10.2298/CSIS110525003F
   Fatema I., 2018, Int. J. Adv. Softw, V11, P170
   Fenton N., 2014, Software Metrics: A Rigorous and Practical Approach
   Ferreira S, 2009, J SYST SOFTWARE, V82, P1568, DOI 10.1016/j.jss.2009.03.014
   Fran BB., 2020, The role of simulationbased studies in software engineering research, P263
   Frana BB., 2013, Are we prepared for simulation based studies in software engineering yet?, V16, P8
   Frost AA., 2007, Advancing defect containment to quantitative defect management
   Gao C., 2015, Constructing hybrid software process simulation models, P157
   Gao C., 2014, Software process simulation modeling: preliminary results from an updated systematic review, P50
   García F, 2006, INFORM SOFTWARE TECH, V48, P631, DOI 10.1016/j.infsof.2005.07.001
   Garousi Vahid, 2009, Software Process: Improvement and Practice, V14, P165, DOI 10.1002/spip.411
   Garousi V, 2016, J SOFTW-EVOL PROC, V28, P272, DOI 10.1002/smr.1758
   Gmez O., 2006, A systematic review measurement in software engineering: stateoftheart in measures, P224
   Gong HJ, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P50, DOI 10.1145/3084100.3084106
   Hall T, 2005, IEEE INTERNATIONAL WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P35, DOI 10.1109/IWSE.2005.11
   Hanakawa N, 2002, ANN SOFTW ENG, V14, P383, DOI 10.1023/A:1020574228799
   Hanakawa N, 1998, PROC INT CONF SOFTW, P350, DOI 10.1109/ICSE.1998.671388
   He Zhang, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P3, DOI 10.1109/ICSSP.2012.6225979
   Henderson P, 2001, J SYST SOFTWARE, V59, P355, DOI 10.1016/S0164-1212(01)00074-7
   Höst M, 2001, J SYST SOFTWARE, V59, P323, DOI 10.1016/S0164-1212(01)00072-3
   Houston D., 2010, Modeling a resourceconstrained testandfix cycle and test phase duration, P211
   Hurtado N, 2017, COMM COM INF SC, V770, P173, DOI 10.1007/978-3-319-67383-7_13
   Hurtado N, 2015, INFORM SOFTWARE TECH, V57, P509, DOI 10.1016/j.infsof.2014.06.001
   IEEE, 2009, IEEE Standard Adoption of ISO/IEC 15939:2007Systems and Software EngineeringMeasurement Process
   Jiang S., 2015, Proceedings of the 2015 International Conference on Software and System Process, P147
   Jones C., 1996, APPL SOFTWARE MEASUR
   Joslin D, 2005, PROCEEDINGS OF THE 2005 WINTER SIMULATION CONFERENCE, VOLS 1-4, P1059, DOI 10.1109/WSC.2005.1574359
   Junjie Wang, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P59, DOI 10.1007/978-3-642-28714-5_6
   Kahen G, 2001, J SYST SOFTWARE, V59, P271, DOI 10.1016/S0164-1212(01)00068-1
   Kaner C., 2004, De software Engineering Metrics: What do They Measure and How Do We Know?
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   KeungSik Choi, 2006, Software Process Improvement and Practice, V11, P373, DOI 10.1002/spip.284
   Kitchenham B., 2007, GUIDELINES PERFORMIN, P1, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2005, INFORM SOFTWARE TECH, V47, P747, DOI 10.1016/j.infsof.2004.05.005
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Klnder J., 2018, Helping teams to help themselves: an industrial case study on interdependencies during sprints, P31
   Kortum F., 2017, Characterizing relationships for system dynamics models supported by exploratory data analysisa conceptualizing approach about the meeting diversity in student software projects
   Kouskouras KG, 2007, EUR J OPER RES, V181, P374, DOI 10.1016/j.ejor.2006.05.031
   Kozusznik J, 2011, COMM COM INF SC, V189, P1
   KUIPERS B, 1989, AUTOMATICA, V25, P571, DOI 10.1016/0005-1098(89)90099-X
   Kupiainen E, 2015, INFORM SOFTWARE TECH, V62, P143, DOI 10.1016/j.infsof.2015.02.005
   Kusumoto S, 1997, PROC INT CONF SOFTW, P293, DOI 10.1145/253228.253290
   Lakey PB., 2003, A hybrid software process simulation model for project management
   Lehman MM, 2002, J SOFTW MAINT EVOL-R, V14, P335, DOI 10.1002/smr.259
   Li JP, 2012, INFORM SCIENCES, V191, P47, DOI 10.1016/j.ins.2011.09.040
   Li Y, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P135, DOI 10.1145/3379177.3388906
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Liu BH, 2023, IEEE T SOFTWARE ENG, V49, P5223, DOI 10.1109/TSE.2023.3330510
   Liu X., 2009, Achieving ontime delivery: a twostage probabilistic scheduling strategy for software projects, P317
   Lum K., 2002, Validation of spacecraft software cost estimation models for flight and ground systems
   Lunesu I., 2017, Using measurement and simulation for understanding distributed development processes in the cloud, P1
   Lunesu MI, 2021, IEEE ACCESS, V9, P134240, DOI 10.1109/ACCESS.2021.3115941
   Madachy R, 2005, LECT NOTES COMPUT SC, V3840, P389
   Madachy R., 2000, Software Process Improvement and Practice, V5, P133, DOI 10.1002/1099-1670(200006/09)5:2/3<133::AID-SPIP117>3.0.CO;2-M
   Madachy Raymond, 2007, Software Process: Improvement and Practice, V12, P461, DOI 10.1002/spip.332
   Martin R. H., 2000, Software Process Improvement and Practice, V5, P147, DOI 10.1002/1099-1670(200006/09)5:2/3<147::AID-SPIP122>3.0.CO;2-T
   Matalonga S, 2014, SOFTWARE QUAL J, V22, P593, DOI 10.1007/s11219-013-9214-2
   Meidan A, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3186888
   Menzies T, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P183, DOI 10.1109/ASE.2002.1115012
   Mishra D, 2016, J ENTERP INF MANAG, V29, P454, DOI 10.1108/JEIM-08-2014-0080
   Münch J, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P18, DOI 10.1109/ISESE.2003.1237961
   Naunchan P, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P341, DOI 10.1109/ASWEC.2007.10
   Neu H, 2002, LECT NOTES COMPUT SC, V2559, P78
   Neu H., 2003, Creating a code inspection model for simulationbased decision support
   Neu H., 2002, Learning and understanding a software process through simulation of its underlying model
   Noll J, 2016, 2016 IEEE 11TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING WORKSHOPS (ICGSEW), P55, DOI 10.1109/ICGSEW.2016.21
   Nonaka M., 2007, Project delay variability simulation in software product line development
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   Olsina L., 2003, J Web Eng, V2, P262
   Padberg F., 2002, Software Process Improvement and Practice, V7, P127, DOI 10.1002/spip.160
   Paikari E., 2012, Simulationbased decision support for bringing a project back on track: the case of RUPbased software construction, P13
   Park SH, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P382, DOI 10.1109/ASPEC.2007.28
   Pei Hsia, 1999, Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032), P370, DOI 10.1109/CMPSAC.1999.814310
   Araujo MAP, 2012, INT SYMP EMP SOFTWAR, P281, DOI 10.1145/2372251.2372303
   Pfahl D, 2000, INFORM SOFTWARE TECH, V42, P1001, DOI 10.1016/S0950-5849(00)00152-X
   Pfahl D, 2001, J SYST SOFTWARE, V59, P283, DOI 10.1016/S0164-1212(01)00069-3
   Pfahl D, 1999, J SYST SOFTWARE, V46, P135, DOI 10.1016/S0164-1212(99)00007-2
   Pfahl D, 2000, INT J SOFTW ENG KNOW, V10, P487, DOI 10.1142/S0218194000000213
   Pfahl D., 2004, PLSIM: a generic simulation model for studying strategic SPI in the automotive industry, P149
   Pfahl D., 2000, Using simulation to visualise and analyse productprocess dependencies in software development projects, P88
   Pfahl D., 2014, Process Simulation: A Tool for Software Project Managers?
   Bellini CGP, 2008, INT J SOFTW ENG KNOW, V18, P37, DOI 10.1142/S021819400800357X
   Powell A, 1999, J SYST SOFTWARE, V46, P151, DOI 10.1016/S0164-1212(99)00008-4
   Psaroudakis JE, 2011, INT C COMMERCE BUS, P113, DOI 10.1109/CEC.2011.19
   Raffo D., 2000, Software Process Improvement and Practice, V5, P159, DOI 10.1002/1099-1670(200006/09)5:2/3<159::AID-SPIP121>3.0.CO;2-R
   Raffo DM, 2000, J SYST SOFTWARE, V53, P31, DOI 10.1016/S0164-1212(00)00006-6
   Raffo DM, 2003, INT J SOFTW ENG KNOW, V13, P513, DOI 10.1142/S0218194003001445
   Raffo DM, 1999, J SYST SOFTWARE, V46, P163, DOI 10.1016/S0164-1212(99)00009-6
   Raffo DM., 2004, Using software process simulation to assess the impact of IVV activities, P197
   Ramil JF., 2010, Softw Process Improv Pract, V7, P95
   Robinson S, 2008, J OPER RES SOC, V59, P278, DOI 10.1057/palgrave.jors.2602368
   Robinson S, 2013, WINT SIMUL C PROC, P377, DOI 10.1109/WSC.2013.6721435
   Rodríguez D, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1883
   Ruiz M, 2004, LECT NOTES COMPUT SC, V3009, P568
   Ruiz M, 2002, LECT NOTES COMPUT SC, V2559, P63
   Ruiz M, 2001, J SYST SOFTWARE, V59, P299, DOI 10.1016/S0164-1212(01)00070-X
   Ruiz M, 2002, SOFTWARE QUAL J, V10, P181, DOI 10.1023/A:1020580008694
   Rus I, 1999, J SYST SOFTWARE, V46, P173, DOI 10.1016/S0164-1212(99)00010-2
   Rus I, 2003, INT J SOFTW ENG KNOW, V13, P531, DOI 10.1142/S0218194003001391
   Rus I., 2014, A systematic methodology for developing discrete event simulation models of software development processes
   Rus I., 2002, Systematically combining process simulation and empirical data in support of decision analysis in software development, P827
   Sambinelli F., 2018, Modeling and performance analysis of Scrumban with testdriven development using discrete event and fuzzy logic, P152
   Sandrock CNJ., 2005, Economic analysis of integrated software development and consulting companies
   Setarnanit SO, 2007, PORTL INT CONF MANAG, P2458, DOI 10.1109/PICMET.2007.4349580
   Shukla R, 2012, LECT NOTES COMPUT SC, V7336, P157, DOI 10.1007/978-3-642-31128-4_12
   Smith N., 2006, Software Process Improvement and Practice, V11, P423, DOI 10.1002/spip.280
   Spasic B., 2012, Agentbased simulation of the software development process: a case study at avl, P1
   Stach W, 2004, NAFIPS 2004: ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, VOLS 1AND 2, P28
   Stallinger F, 2001, J SYST SOFTWARE, V59, P311, DOI 10.1016/S0164-1212(01)00071-1
   Stikkel G, 2006, INFORM SOFTWARE TECH, V48, P578, DOI 10.1016/j.infsof.2005.06.003
   Stopford B., 2009, Simulating software evolution with varying numbers of developers and validation using OSS, P13
   Sycamore D., 1999, Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032), P213, DOI 10.1109/CMPSAC.1999.812703
   Topic G., 2008, Petri netbased simulation and analysis of the software development process, P418
   Trammell MTI, 2016, ENG MANAG J, V28, P71, DOI 10.1080/10429247.2016.1155390
   Turnu I, 2006, J SYST ARCHITECT, V52, P610, DOI 10.1016/j.sysarc.2006.06.005
   Uzzafer M, 2013, INT J PROJ MANAG, V31, P981, DOI 10.1016/j.ijproman.2012.12.002
   Uzzafer M, 2013, J SYST SOFTWARE, V86, P21, DOI 10.1016/j.jss.2012.06.042
   van Oorschot KE, 2018, PROJ MANAG J, V49, P78, DOI 10.1177/8756972818802714
   Wagner S., 2006, A literature survey of the quality economics of defectdetection techniques
   Wakeland W., 2005, Software Process Improvement and Practice, V10, P301, DOI 10.1002/spip.231
   Wang Z., 2020, The compare of solo programming and pair programming strategies in a Scrum team: a multiagent simulation, P122
   Wang Z, 2019, PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON COMPUTER MODELING AND SIMULATION (ICCMS 2019) AND 8TH INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING AND APPLICATIONS (ICICA 2019), P239, DOI 10.1145/3307363.3310985
   Wernick P., 2002, Software Process Improvement and Practice, V7, P113, DOI 10.1002/spip.159
   Wernick P, 1999, J SYST SOFTWARE, V46, P193, DOI 10.1016/S0164-1212(99)00012-6
   Wohlin C., 2016, Secondgeneration systematic literature studies using snowballing, p15:1
   Wysocki Wlodzimierz, 2020, Procedia Computer Science, V176, P2312, DOI 10.1016/j.procs.2020.09.291
   Wysocki W, 2019, PROCEDIA COMPUT SCI, V159, P1688, DOI 10.1016/j.procs.2019.09.339
   Yang L., 2023, Evaluating learningtorank models for prioritizing code review requests using process simulation, P461
   Yilmaz L, 2006, LECT NOTES COMPUT SC, V3966, P234
   Yu Chen, 2006, Software Process Improvement and Practice, V11, P385, DOI 10.1002/spip.281
   Zawedde A., 2013, Determinants of requirements process improvement success
   Zhai J., 2009, Stochastic process algebra based software process simulation modeling, P136
   Zhang H., 2008, Hybrid modeling of testandfix processes in incremental development, P333
   Zhang H, 2008, LECT NOTES COMPUT SC, V5007, P345, DOI 10.1007/978-3-540-79588-9_30
   Zhang H, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P66, DOI 10.1109/ASWEC.2008.50
   Zhang H, 2007, LECT NOTES COMPUT SC, V4470, P320
   Zhang H, 2006, 2006 Australian Software Engineering Conference, Proceedings, P391
   Zhang H, 2006, LECT NOTES COMPUT SC, V3966, P242
   Zhang H, 2014, J SOFTW-EVOL PROC, V26, P923, DOI 10.1002/smr.1694
   Zhang H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1046, DOI 10.1145/1985793.1985993
   Zhang H, 2010, LECT NOTES COMPUT SC, V6195, P309, DOI 10.1007/978-3-642-14347-2_27
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhang H, 2009, IEEE AUS SOFT ENGR, P345, DOI 10.1109/ASWEC.2009.45
   Zhang H, 2008, ASIA PAC SOFWR ENG, P59, DOI 10.1109/APSEC.2008.50
   Zhang X, 2018, IEEE ACCESS, V6, P70145, DOI 10.1109/ACCESS.2018.2880998
   Zhao BX, 2020, IEEE WORLD CONGR SER, P164, DOI 10.1109/SERVICES48979.2020.00044
   Zhou P, 2012, ASIA PAC SOFWR ENG, P737, DOI 10.1109/APSEC.2012.12
NR 188
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUL 11
PY 2024
DI 10.1002/smr.2676
EA JUL 2024
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YM2G2
UT WOS:001268833900001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Su, CY
   McMillan, C
AF Su, Chia-Yi
   McMillan, Collin
TI Semantic similarity loss for neural source code summarization
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE human ratings and feedback; loss functions; neural models; optimization;
   source code summarization
AB This paper presents a procedure for and evaluation of using a semantic similarity metric as a loss function for neural source code summarization. Code summarization is the task of writing natural language descriptions of source code. Neural code summarization refers to automated techniques for generating these descriptions using neural networks. Almost all current approaches involve neural networks as either standalone models or as part of a pretrained large language models, for example, GPT, Codex, and LLaMA. Yet almost all also use a categorical cross-entropy (CCE) loss function for network optimization. Two problems with CCE are that (1) it computes loss over each word prediction one-at-a-time, rather than evaluating a whole sentence, and (2) it requires a perfect prediction, leaving no room for partial credit for synonyms. In this paper, we extend our previous work on semantic similarity metrics to show a procedure for using semantic similarity as a loss function to alleviate this problem, and we evaluate this procedure in several settings in both metrics-driven and human studies. In essence, we propose to use a semantic similarity metric to calculate loss over the whole output sentence prediction per training batch, rather than just loss for each word. We also propose to combine our loss with CCE for each word, which streamlines the training process compared to baselines. We evaluate our approach over several baselines and report improvement in the vast majority of conditions.
   We proposed a procedure for using semantic similarity as a loss function. We evaluated this loss function with both purpose-built models and large language model (LLM). The results in terms of human study and automatic metrics show that models trained with this loss function are better than models trained with categorical cross-entropy (CCE). image
C1 [Su, Chia-Yi; McMillan, Collin] Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN USA.
   [Su, Chia-Yi] Holy Cross Dr, Notre Dame, IN 46556 USA.
C3 University of Notre Dame
RP Su, CY (corresponding author), Holy Cross Dr, Notre Dame, IN 46556 USA.
EM csu3@nd.edu
FU National Science Foundation
FX National Science Foundation
CR Ahmed T., 2022, Fewshot training LLMs for projectspecific codesummarization, P1
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Alon U., 2018, arXiv
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Banerjee S., 2005, P ACL WORKSHOP INTRI, P65, DOI DOI 10.3115/1626355.1626389
   Bansal A, 2021, INT C PROGRAM COMPRE, P253, DOI 10.1109/ICPC52881.2021.00032
   Bender EM, 2021, PROCEEDINGS OF THE 2021 ACM CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, FACCT 2021, P610, DOI 10.1145/3442188.3445922
   Cer D, 2018, Arxiv, DOI arXiv:1803.11175
   Chen YX, 2021, IEEE T CYBERNETICS, V51, P6240, DOI 10.1109/TCYB.2020.2964993
   Chyung S.Y., 2018, PERFORMANCE IMPROVEM, V57, P16, DOI [10.1002/pfi.21749, DOI 10.1002/PFI.21749]
   Dell N, 2012, P SIGCHI C HUM FACT, P1321, DOI DOI 10.1145/2207676.2208589
   Eghbali A., 2023, CrystalBLEU: precisely and efficiently measuring the similarity of code, P1, DOI [10.1145/3551349.3556903, DOI 10.1145/3551349.3556903]
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Ferretti C, 2023, INT C PROGRAM COMPRE, P125, DOI 10.1109/ICPC58990.2023.00027
   Gao SZ, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3522674
   Gao YX, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10384-x
   Geng M., 2024, Large language models are fewshot summarizers: multiintent comment generation via incontext learning, P1
   Geng MY, 2023, INT C PROGRAM COMPRE, P113, DOI 10.1109/ICPC58990.2023.00026
   Ghorbani A, 2023, PROC INT CONF SOFTW, P1405, DOI 10.1109/ICSE48619.2023.00123
   Gu J, 2022, EUR CON SFTWR MTNCE, P935, DOI 10.1109/SANER53432.2022.00112
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haldar R, 2020, Arxiv, DOI arXiv:2005.06980
   Haque S, 2022, INT C PROGRAM COMPRE, P36, DOI 10.1145/nnnnnnn.nnnnnnn
   Haque S, 2020, IEEE WORK CONF MIN S, P300, DOI 10.1145/3379597.3387449
   Haque S, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P330, DOI 10.1109/SANER50967.2021.00038
   Hellendoorn VJ, 2022, COMMUN ACM, V65, P31, DOI 10.1145/3501261
   Hu EJ, 2021, Arxiv, DOI arXiv:2106.09685
   Jin X, 2023, Arxiv, DOI arXiv:2312.09601
   Karpathy A., 2023, nanoGPT: The Simplest, Fastest Repository for Training/Finetuning MediumSized GPTs
   Khan J, 2022, ANN OPER RES, DOI 10.1007/s10479-022-04940-9
   Korbak T, 2023, Arxiv, DOI arXiv:2302.08582
   Kuang L, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00341-1
   LeClair A, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P3931
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Li Z, 2023, IEEE T RELIAB, V72, P258, DOI 10.1109/TR.2022.3154773
   Liu Shangqing, 2020, arXiv
   Liu Yi, 2023, arXiv, DOI DOI 10.48550/ARXIV.2305.12865
   MacNeil S, 2023, PROCEEDINGS OF THE 54TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, VOL 1, SIGCSE 2023, P931, DOI 10.1145/3545945.3569785
   Mastropaolo A., 2024, Evaluating code summarization techniques: a new metric and an empirical characterization, P1, DOI [10.1145/3597503.3639174, DOI 10.1145/3597503.3639174]
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   Nakatani Y., 2022, Comparing bertbased reward functions for deep reinforcement learning in machine translation, P37
   Nie PY, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3338906.3338965
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pasunuru R., 2018, Multireward reinforced summarization with saliency and entailment, P646
   Radford A., 2019, OpenAI blog, V1, P9
   Rani P, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111515
   Ranzato M, 2016, Arxiv, DOI [arXiv:1511.06732, 10.48550/arXiv.1511.06732]
   Robillard MP, 2017, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSME.2017.17
   Ross Steven I., 2023, IUI '23: Proceedings of the 28th International Conference on Intelligent User Interfaces, P491, DOI 10.1145/3581641.3584037
   Roy D, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1105, DOI 10.1145/3468264.3468588
   Sheldon M R, 1996, Physiother Res Int, V1, P221, DOI 10.1002/pri.66
   Shi L, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P107, DOI 10.1145/3540250.3549145
   Sievertsen HH, 2016, P NATL ACAD SCI USA, V113, P2621, DOI 10.1073/pnas.1516947113
   Song XT, 2019, IEEE ACCESS, V7, P111411, DOI 10.1109/ACCESS.2019.2931579
   Sridhara G., 2010, P IEEEACM INT C AUTO, P43
   Su CY, 2024, AUTOMAT SOFTW ENG, V31, DOI 10.1007/s10515-024-00421-4
   Su CY, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P2152, DOI 10.1145/3611643.3613090
   Tang Z, 2022, PROC INT CONF SOFTW, P150, DOI 10.1145/3510003.3510224
   Taori R., 2023, Stanford alpaca: An instruction-following llama model
   Touvron H, 2023, Arxiv, DOI [arXiv:2302.13971, DOI 10.48550/ARXIV.2302.13971]
   Ahmad WU, 2020, Arxiv, DOI arXiv:2005.00653
   Wang E., 2023, AlpacaLora
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wang Z., 2023, An intraclass relation guided approach for code comment generation, P1291
   Wieting J, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4344
   Wieting J, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P451
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wu Y., 2016, GOOGLES NEURAL MACHI
   Xu Frank F., 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P1, DOI 10.1145/3520312.3534862
   Yasui G, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019:): STUDENT RESEARCH WORKSHOP, P400
   Zhang M., 2023, ACM Trans Asian LowResource Lang Inform Process, V22, P1
   Zuegner D, 2021, Arxiv, DOI arXiv:2103.11318
NR 73
TC 0
Z9 0
U1 0
U2 0
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 JUL 7
PY 2024
DI 10.1002/smr.2706
EA JUL 2024
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XS4D5
UT WOS:001263644200001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Liu, Y
   Yang, ZZ
   Fan, LX
   Wu, YH
   Chen, X
   Zhou, XT
AF Liu, Yong
   Yang, Zezhong
   Fan, Luxi
   Wu, Yonghao
   Chen, Xiang
   Zhou, Xiaotang
TI Multi-objective optimization-based and fault localization-oriented test
   case generation for novice programs
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article; Early Access
DE fault localization; multi-objective optimization; programming education;
   test cases generation
ID SEARCH; EVOLUTIONARY
AB Online judgment (OJ) systems are capable of evaluating program results by automatically executing test cases, significantly improving the efficiency of traditional guidance approaches. Moreover, existing studies attempt to assist novices through automated fault localization techniques to provide feedback to novices, which can help them quickly find the location of faulty statements. Among them, spectrum-based fault localization (SBFL) techniques have been widely used for their lightweight and efficiency, which only requires coverage information and test results of test cases to conduct fault localization. However, manually constructing high-quality test cases for a large number of OJ questions is tough work to complete. To solve this problem, we propose the novice program-oriented Multi-Objective Optimization-Based Fault Localization-Oriented Test Case Generation (MFTCG) for automatically generating test inputs. Specifically, we use multi-objective optimization algorithms to evolve the test case in terms of both fault localization and faulty code detection capability. We conduct experiments with 8911 programs from the well-known public OJ platform AtCoder. The results show that our proposed approach MFTCG can achieve the best fault localization performance compared with existing automated test case generation approaches in most cases and can achieve the similar faulty code detection capability compared to manually designed test cases.
   We propose a fault localization-oriented test data generation approach multi-objective optimization-based fault localization-oriented test case generation (MFTCG), which utilizes the multi-objective optimization-based algorithm to generate test data. To evaluate the effectiveness of our approach, we collect a novice program data set for faulty localization from programming website AtCoder, which contains 8911 faulty programs and 14,392 faults. The experimental results show that in most cases, test cases generated by our approach can achieve the best fault localization performance compared with the test cases generated by other approaches. image
C1 [Liu, Yong; Yang, Zezhong; Fan, Luxi; Wu, Yonghao; Zhou, Xiaotang] Beijing Univ Chem Technol, Coll Informat Sci & Technol, Beijing, Peoples R China.
   [Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
   North Third Ring Rd 15, Beijing 100029, Peoples R China.
C3 Beijing University of Chemical Technology; Nantong University
RP Wu, YH (corresponding author), Beijing Univ Chem Technol, Coll Informat Sci & Technol, Beijing, Peoples R China.
EM appmlk@outlook.com
OI chen, xiang/0000-0002-1180-3891
FU National Natural Science Foundation of China;  [61872026];  [61902015]; 
   [62077003]
FX The work described in this paper is supported by the National Natural
   Science Foundation of China under grant nos. 61872026, 61902015, and
   62077003.
CR Abbas A., 2016, Indian J Sci Technol, V9, P1
   Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Ahmed UZ, 2018, PROC INT CONF SOFTW, P78, DOI 10.1145/3183377.3183383
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Almulla H, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10048-8
   [Anonymous], GitHub
   [Anonymous], Atcoder
   Araujo E., 2016, Applying spectrumbased fault localization on novice's programs, P1
   Avila-George H, 2013, IET SOFTW, V7, P104, DOI 10.1049/iet-sen.2012.0074
   Boopathi M, 2017, ARAB J SCI ENG, V42, P3503, DOI 10.1007/s13369-017-2554-7
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Derrac J, 2011, SWARM EVOL COMPUT, V1, P3, DOI 10.1016/j.swevo.2011.02.002
   deSouza LS., 2015, J Braz Comput Soc, V21, p19:1
   Drummond A, 2014, IEEE DATA MINING, P785, DOI 10.1109/ICDM.2014.142
   Feyzi F, 2018, COMPUTING, V100, P927, DOI 10.1007/s00607-018-0591-z
   Gao R., 2017, IEEE Trans Softw Eng, VPP, P1
   Gulwani S, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P465, DOI [10.1145/3192366.3192387, 10.1145/3296979.3192387]
   Gulwani S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P41, DOI 10.1145/2635868.2635912
   Gupta N., 2020, Multiobjective test suite optimization for detection and localization of software faults
   Hashim FA, 2022, MATH COMPUT SIMULAT, V192, P84, DOI 10.1016/j.matcom.2021.08.013
   Jaccard Paul, 1901, Bull Soc Vaudoise Sci Nat, V37, P547, DOI 10.5169/seals-266450
   Jiang SW, 2015, IEEE T CYBERNETICS, V45, P2202, DOI 10.1109/TCYB.2014.2367526
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Katoch S, 2021, MULTIMED TOOLS APPL, V80, P8091, DOI 10.1007/s11042-020-10139-6
   Khari M, 2020, ARAB J SCI ENG, V45, P2407, DOI 10.1007/s13369-019-03996-3
   Khari M, 2020, SOFT COMPUT, V24, P9143, DOI 10.1007/s00500-019-04444-y
   Khari M, 2019, SOFT COMPUT, V23, P1933, DOI 10.1007/s00500-017-2906-y
   Khari M, 2018, SOFT COMPUT, V22, P8341, DOI 10.1007/s00500-017-2780-7
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Knowles JD., 2002, Localsearch and hybrid evolutionary algorithms for Pareto optimization
   Kochhar P. S., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P165
   Lakshminarayana P, 2021, J INTELL SYST, V30, P59, DOI 10.1515/jisys-2019-0051
   Lambora Annu, 2019, 2019 International Conference on Machine Learning, Big Data, Cloud and Parallel Computing (COMITCon), P380, DOI 10.1109/COMITCon.2019.8862255
   Le TD., 2016, A learningtorank based fault localization approach using likely invariants, P177
   Li Bing, 1997, Control Theory & Applications, V14, P613
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Li XL, 2018, EMPIR SOFTW ENG, V23, P1, DOI 10.1007/s10664-016-9494-9
   Li Z., 2021, 2021 8 INT C DEP SYS
   Li Z, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110661
   Liu Y, 2019, J SYST SOFTWARE, V151, P20, DOI 10.1016/j.jss.2019.01.056
   Mao C., 2020, Adaptive random test case generation based on multiobjective evolutionary search, P46
   Marin VJ, 2017, PROC INT CONF DATA, P1259, DOI 10.1109/ICDE.2017.169
   Masters K., 2011, INTERNET J MED ED, V1, P1, DOI [DOI 10.5580/1F21, 10.5580/1f21]
   Filho RAM, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P21, DOI 10.1109/SBES.2015.17
   Miao H., 2020, Structured ObjectOriented Formal Language and Method
   Mitchell M., 1998, INTRO GENETIC ALGORI, DOI DOI 10.1016/S0898-1221(96)90227-8
   Moffat A, 2009, ACM T INFORM SYST, V27, DOI 10.1145/1416950.1416952
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Ponce-Ortega J.M., 2019, Optimization of Process Flowsheets through Metaheuristic Techniques
   Pradhan D, 2019, J SYST SOFTWARE, V153, P86, DOI 10.1016/j.jss.2019.03.064
   Rivers K, 2017, INT J ARTIF INTELL E, V27, P37, DOI 10.1007/s40593-015-0070-z
   Roeva O., 2010, Generalized net model of selection operator of genetic algorithms, P286
   Sahin O, 2016, APPL SOFT COMPUT, V49, P1202, DOI 10.1016/j.asoc.2016.09.045
   Sahoo RK, 2022, INNOV SYST SOFTW ENG, V18, P321, DOI 10.1007/s11334-020-00378-z
   Sahoo RK., 2017, Int J Intell Syst Appl, V9
   Shi Y., 2012, P 6 ACM C RECOMMENDE, P139, DOI DOI 10.1145/2365952.2365981
   Singh R, 2013, ACM SIGPLAN NOTICES, V48, P15, DOI 10.1145/2499370.2462195
   Srivastava PR., 2008, Generation of test data using metaheuristic approach, P1
   Vo-Duy T, 2017, COMPOS STRUCT, V168, P498, DOI 10.1016/j.compstruct.2017.02.038
   Wagner M., 2013, Efficient parent selection for approximationguided evolutionary multiobjective optimization, P1846
   Wang J., 2021, Automatic test case generation method based on improved whale optimization algorithm, P7
   Wang R, 2019, IEEE C EVOL COMPUTAT, P1382, DOI [10.1109/cec.2019.8790233, 10.1109/CEC.2019.8790233]
   Wasik S., Acm Comput Surv, V51, P1
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T SYST MAN CY C, V42, P378, DOI 10.1109/TSMCC.2011.2118751
   Wu HT, 2016, 2016 INTERNATIONAL SYMPOSIUM ON EDUCATIONAL TECHNOLOGY (ISET), P57, DOI 10.1109/ISET.2016.14
   Wu J., 2012, Development and application of online judge system, P83
   Yang B., 2020, J Phys: Confer Ser, V1576
   Yang X.-S., 2010, Engineering Optimization: An Introduction with Metaheuristic Applications, DOI [10.1002/9780470640425, DOI 10.1002/9780470640425]
   Zhang MS, 2021, IEEE T SOFTWARE ENG, V47, P1089, DOI 10.1109/TSE.2019.2911283
   Zheng Y, 2018, J SYST SOFTWARE, V139, P107, DOI 10.1016/j.jss.2018.02.001
   Zhou AM, 2011, SWARM EVOL COMPUT, V1, P32, DOI 10.1016/j.swevo.2011.03.001
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhou W., 2018, The framework of a new online judge system for programming education, P9, DOI [10.1145/3210713.3210721, DOI 10.1145/3210713.3210721]
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E., 2001, TIK-Report, DOI DOI 10.3929/ETHZ-A-004284029
NR 82
TC 0
Z9 0
U1 1
U2 1
PU WILEY
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD 2024 MAY 27
PY 2024
DI 10.1002/smr.2679
EA MAY 2024
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SK3Y2
UT WOS:001234319600001
DA 2024-08-05
ER

EF