FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Beyer, D
AF Beyer, Dirk
TI First international competition on software testing
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software testing; Test generation; Fuzzing; Program analysis; Bounded
   model checking; Test-suite validation; Competition; Test-Comp
AB Tool competitions are a special form of comparative evaluation, where each tool has a team of developers or supporters associated that makes sure the tool is properly configured to show its best possible performance. In several research areas, tool competitions have been a driving force for the development of mature tools that represent the state of the art in their field. This paper describes and reports the results of the 1st International Competition on Software Testing (Test-Comp 2019), a comparative evaluation of automatic tools for software test generation. Test-Comp 2019 was presented as part of TOOLympics 2019, a satellite event of the conference TACAS. Nine test generators were evaluated on 2 356 test-generation tasks. There were two test specifications, one for generating a test that covers a particular function call and one for generating a test suite that tries to cover the branches of the program.
C1 [Beyer, Dirk] Ludwig Maximilians Univ Munchen, Oettingenstr 67, D-80538 Munich, Germany.
C3 University of Munich
RP Beyer, D (corresponding author), Ludwig Maximilians Univ Munchen, Oettingenstr 67, D-80538 Munich, Germany.
EM dirk.beyer@sosy-lab.org
RI Beyer, Dirk/R-2534-2017
OI Beyer, Dirk/0000-0003-4832-7662
FU Deutsche Forschungsgemeinschaft (DFG) [418257054]; Projekt DEAL
FX This work was funded in part by the Deutsche Forschungsgemeinschaft
   (DFG)-418257054 (Coop). Open Access was funded by Projekt DEAL.
CR Bartocci E, 2019, LECT NOTES COMPUT SC, V11429, P3, DOI 10.1007/978-3-030-17502-3_1
   Beyer, 2020, ZENODO, DOI [10.5281/zenodo.3856478, DOI 10.5281/ZENODO.3856478]
   Beyer, 2019, ZENODO, DOI [10.5281/zenodo.2561835, DOI 10.5281/ZENODO.2561835]
   Beyer D, 2004, PROC INT CONF SOFTW, P326, DOI 10.1109/ICSE.2004.1317455
   Beyer D., 2019, LNCS, V11429, P167, DOI [10.1007/978-3-030-17502-, 3_11, DOI 10.1007/978-3-030-17502-3_11]
   Beyer D, 2019, LECT NOTES COMPUT SC, V11424, P389, DOI 10.1007/978-3-030-16722-6_23
   Beyer D, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1074, DOI 10.1109/ASE.2019.00105
   Beyer D, 2019, LECT NOTES COMPUT SC, V11429, P133, DOI 10.1007/978-3-030-17502-3_9
   Beyer D, 2019, INT J SOFTW TOOLS TE, V21, P1, DOI 10.1007/s10009-017-0469-y
   Beyer D, 2016, LECT NOTES COMPUT SC, V9636, P887, DOI 10.1007/978-3-662-49674-9_55
   Beyer D, 2013, LECT NOTES COMPUT SC, V7795, P594
   Beyer D, 2012, LECT NOTES COMPUT SC, V7214, P504, DOI 10.1007/978-3-642-28756-5_38
   Beyer Dirk., 2017, HARDWARE SOFTWARE VE, P99
   Bürdek J, 2015, LECT NOTES COMPUT SC, V9033, P84, DOI 10.1007/978-3-662-46675-9_6
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Cadar C, 2021, INT J SOFTW TOOLS TE, V23, P867, DOI 10.1007/s10009-020-00570-3
   Chalupa M, 2021, INT J SOFTW TOOLS TE, V23, P875, DOI 10.1007/s10009-020-00573-0
   Chalupa M, 2018, LECT NOTES COMPUT SC, V10869, P115, DOI 10.1007/978-3-319-94111-0_7
   Chowdhury AB, 2019, LECT NOTES COMPUT SC, V11429, P244, DOI 10.1007/978-3-030-17502-3_22
   Gadelha MR, 2021, INT J SOFTW TOOLS TE, V23, P857, DOI 10.1007/s10009-020-00571-2
   Gadelha M, 2017, INT J SOFTW TOOLS TE, V19, P97, DOI 10.1007/s10009-015-0407-9
   Godefroid P., 2018, HDB MODEL CHECKING, P613, DOI DOI 10.1007/978-3-319-10575-8_19
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Howar F, 2014, INT J SOFTW TOOLS TE, V16, P457, DOI 10.1007/s10009-014-0337-y
   Huisman M, 2015, INT J SOFTW TOOLS TE, V17, P647, DOI 10.1007/s10009-015-0396-8
   Jakobs MC, 2021, INT J SOFTW TOOLS TE, V23, P847, DOI 10.1007/s10009-020-00572-1
   Kifetew F, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2019), P15, DOI 10.1109/SBST.2019.00014
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Lemberger T, 2021, INT J SOFTW TOOLS TE, V23, P871, DOI 10.1007/s10009-020-00568-x
   Lemieux C, 2021, INT J SOFTW TOOLS TE, V23, P863, DOI 10.1007/s10009-020-00569-w
   Ruland S, 2021, INT J SOFTW TOOLS TE, V23, P853, DOI 10.1007/s10009-020-00574-z
   Song J, 2016, IEEE SECUR PRIV, V14, P76, DOI 10.1109/MSP.2016.14
   Stump A, 2014, LECT NOTES ARTIF INT, V8562, P367, DOI 10.1007/978-3-319-08587-6_28
   Veith H, 2010, P ASE, P407, DOI [10.1145/1858996.1859084, DOI 10.1145/1858996.1859084]
   Visser W., 2004, P 2004 ACM SIGSOFT I, P97, DOI [DOI 10.1145/1007512.1007526, 10.1145/1007512.1007526]
NR 35
TC 6
Z9 7
U1 3
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2021
VL 23
IS 6
BP 833
EP 846
DI 10.1007/s10009-021-00613-3
EA JUN 2021
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XU5UO
UT WOS:000665576300002
OA hybrid
DA 2024-07-18
ER

PT J
AU Khoury, R
   Hallé, S
   Lebrun, Y
AF Khoury, Raphael
   Halle, Sylvain
   Lebrun, Yannick
TI Automata-based monitoring for LTL-FO<SUP>+</SUP>
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Runtime monitoring; Formal logic
AB We present an automata-based runtime verification procedure for LTL-FO+ properties. LTL-FO+ is an extension of LTL that includes first-order quantification over bounded variables, thus greatly increasing the expressivity of the language. We show how to construct an automata representation of an LTL-FO+ property which allows runtime verification using a breadth-first search throughout the automata, and we prove the correctness of the construction. Finally, we introduce Pelota, an automata-based monitor for LTL-FO+, and show empirical results of its use on sample properties. Compared with an existing monitor for LTL-FO+, Pelota exhibits better time and space consumption, especially on memory-intensive properties.
C1 [Khoury, Raphael; Halle, Sylvain; Lebrun, Yannick] Univ Quebec Chicoutimi, Dept Informat & Math, Lab Informat Formelle, Saguenay, PQ, Canada.
C3 University of Quebec; University of Quebec Chicoutimi
RP Khoury, R (corresponding author), Univ Quebec Chicoutimi, Dept Informat & Math, Lab Informat Formelle, Saguenay, PQ, Canada.
EM raphael.khoury@uqac.ca; shalle@acm.org; yannick.lebrun.1@uqac.ca
RI Hallé, Sylvain/H-4153-2019
OI Hallé, Sylvain/0000-0002-4406-6154
CR [Anonymous], 2001, An Automata Theoretic Approach to Branching
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Barringer Howard, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P68, DOI 10.1007/978-3-642-32759-9_9
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P1, DOI 10.1007/978-3-319-75632-5_1
   Bartocci E, 2018, Lectures on runtime verification
   Basin D, 2015, FORM METHOD SYST DES, V46, P262, DOI 10.1007/s10703-015-0222-7
   Bauer A, 2013, PROPOSITIONAL 1 ORDE, P59
   Clark J., 1999, TECHNICAL REPORT
   Colombo C, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P33, DOI 10.1109/SEFM.2009.13
   Deutsch A, 2007, J COMPUT SYST SCI, V73, P442, DOI 10.1016/j.jcss.2006.10.006
   Falcone Y, 2018, LECT NOTES COMPUT SC, V11237, P241, DOI 10.1007/978-3-030-03769-7_14
   Finkbeiner B, 2004, FORM METHOD SYST DES, V24, P101, DOI 10.1023/B:FORM.0000017718.28096.48
   Halle S, 2020, BENCHMARK PELOTA VS, DOI [10.5281/zenodo.3763804, DOI 10.5281/ZENODO.3763804]
   Hallé S, 2008, IEEE INT ENTERP DIST, P63, DOI 10.1109/EDOC.2008.32
   Hallé S, 2018, COMPUTER, V51, P78, DOI 10.1109/MC.2018.2876075
   Hallé S, 2012, IEEE T SERV COMPUT, V5, P192, DOI 10.1109/TSC.2011.10
   Havelund Klaus., 2018, Monitoring Events that Carry Data, P61, DOI [10.1007/978-3-319-75632-5_3, DOI 10.1007/978-3-319-75632-5_3]
   Hodkinson I, 2006, ANN PURE APPL LOGIC, V138, P94, DOI 10.1016/j.apal.2005.06.007
   KAMINSKI M, 1994, THEOR COMPUT SCI, V134, P329, DOI 10.1016/0304-3975(94)90242-9
   Khoury R, 2016, 7 INT S LEV APPL FOR
   Neven F., 2004, ACM Transactions on Computational Logic, V5, P403, DOI 10.1145/1013560.1013562
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Pretschner A., 2009, P 5 INT WORKSH SEC T, P124
   Segoufin L, 2006, LECT NOTES COMPUT SC, V4207, P41
   Stolz V, 2007, LECT NOTES COMPUT SC, V4839, P176
   Syropoulos A, 2001, LECT NOTES COMPUT SC, V2235, P347
   VARDI MY, 1994, INFORM COMPUT, V115, P1, DOI 10.1006/inco.1994.1092
   Varvaressos S, 2017, COMPUT ENTERTAIN, V15, DOI 10.1145/2700529
NR 28
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2021
VL 23
IS 2
SI SI
BP 137
EP 154
DI 10.1007/s10009-020-00566-z
EA JUN 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SU3HE
UT WOS:000538966400001
DA 2024-07-18
ER

PT J
AU Beyer, D
   Löwe, S
   Wendler, P
AF Beyer, Dirk
   Loewe, Stefan
   Wendler, Philipp
TI Reliable benchmarking: requirements and solutions
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Benchmarking; Resource measurement; Process control; Process isolation;
   Container; Competition
ID REPEATABILITY
AB Benchmarking is a widely used method in experimental computer science, in particular, for the comparative evaluation of tools and algorithms. As a consequence, a number of questions need to be answered in order to ensure proper benchmarking, resource measurement, and presentation of results, all of which is essential for researchers, tool developers, and users, as well as for tool competitions. We identify a set of requirements that are indispensable for reliable benchmarking and resource measurement of time and memory usage of automatic solvers, verifiers, and similar tools, and discuss limitations of existing methods and benchmarking tools. Fulfilling these requirements in a benchmarking framework can (on Linux systems) currently only be done by using the cgroup and namespace features of the kernel. We developed BenchExec, a ready-to-use, tool-independent, and open-source implementation of a benchmarking framework that fulfills all presented requirements, making reliable benchmarking and resource measurement easy. Our framework is able to work with a wide range of different tools, has proven its reliability and usefulness in the International Competition on Software Verification, and is used by several research groups worldwide to ensure reliable benchmarking. Finally, we present guidelines on how to present measurement results in a scientifically valid and comprehensible way.
C1 [Beyer, Dirk; Wendler, Philipp] Ludwig Maximilians Univ Munchen, Munich, Germany.
   [Loewe, Stefan] One Log, Passau, Germany.
C3 University of Munich
RP Wendler, P (corresponding author), Ludwig Maximilians Univ Munchen, Munich, Germany.
EM benchmarking@sosy-lab.org
RI Beyer, Dirk/R-2534-2017
OI Beyer, Dirk/0000-0003-4832-7662; Wendler, Philipp/0000-0002-5139-341X
CR [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 2016, JSAT
   [Anonymous], 2015, TECHNICAL REPORT
   [Anonymous], 2008, GUIDE ADV EMPIRICAL, DOI [10.1007/978-1-84800-044-5_14, DOI 10.1007/978-1-84800-044-5_14]
   Balyo T., 2017, P AAAI C ART INT, P5061
   Beyer Dirk, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P401, DOI 10.1007/978-3-662-46681-0_31
   Beyer D., 2013, ESEC FSE, P389, DOI [10.1145/2491411.2491429, DOI 10.1145/2491411.2491429]
   Beyer D, 2017, LECT NOTES COMPUT SC, V10206, P331, DOI 10.1007/978-3-662-54580-5_20
   Beyer D, 2016, LECT NOTES COMPUT SC, V9636, P887, DOI 10.1007/978-3-662-49674-9_55
   Beyer D, 2015, LECT NOTES COMPUT SC, V9232, P160, DOI 10.1007/978-3-319-23404-5_12
   Beyer D, 2014, LECT NOTES COMPUT SC, V8559, P327, DOI 10.1007/978-3-319-08867-9_21
   Beyer D, 2013, LECT NOTES COMPUT SC, V7795, P594
   Beyer D, 2012, LECT NOTES COMPUT SC, V7214, P504, DOI 10.1007/978-3-642-28756-5_38
   Charwat G, 2013, LECT NOTES COMPUT SC, V8148, P233, DOI 10.1007/978-3-642-40564-8_23
   Collberg C, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2812803
   de Oliveira A. B., 2014, P REPRODUCE
   Gu D., 2005, STUDIA INFORM UNIVER, V4, P83
   Handigol N., 2012, P 8 INT C EM NETW EX, P253, DOI DOI 10.1145/2413176.2413206
   Hocko M., 2010, Proceedings of the first joint WOSP/SIPEW international conference on Performance engineering, WOSP/SIPEW'10, P223
   JCGM Working Group 2, 2012, 2002012 JCGM BIPM
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Kalibera T., 2005, P 2005 INT S PERF EV, P484
   Kordon Fabrice, 2014, 2014 14th International Conference on Application of Concurrency to System Design, P159, DOI 10.1109/ACSD.2014.12
   Krishnamurthi S, 2015, COMMUN ACM, V58, P34, DOI 10.1145/2658987
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Petkovich JC, 2016, SOFTWARE PRACT EXPER, V46, P1411, DOI 10.1002/spe.2382
   Roussel O., 2011, J SATISFIABILITY BOO, V7, P139
   Singh B., 2007, Ottawa Linux Symp, P209
   Stump A, 2014, LECT NOTES ARTIF INT, V8562, P367, DOI 10.1007/978-3-319-08587-6_28
   Suh YK, 2017, SOFTWARE PRACT EXPER, V47, P559, DOI 10.1002/spe.2476
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   Visser W, 2012, P FSE, P58, DOI DOI 10.1145/2393596.2393665
   Vitek J., 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P33
NR 33
TC 72
Z9 76
U1 1
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2019
VL 21
IS 1
BP 1
EP 29
DI 10.1007/s10009-017-0469-y
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM2LA
UT WOS:000459292700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Dimovski, A
   Al-Sibahi, A
   Brabrand, C
   Wasowski, A
AF Dimovski, Aleksandar S.
   Al-Sibahi, Ahmad Salim
   Brabrand, Claus
   Wasowski, Andrzej
TI Efficient family-based model checking via variability abstractions
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software product lines; Variability abstractions; Abstract model
   checking; Features
ID VERIFICATION
AB Many software systems are variational: they can be configured to meet diverse sets of requirements. They can produce a (potentially huge) number of related systems, known as products or variants, by systematically reusing common parts. For variational models (variational systems or families of related systems), specialized family-based model checking algorithms allow efficient verification of multiple variants, simultaneously, in a single run. These algorithms, implemented in a tool , scale much better than "the brute force" approach, where all individual systems are verified using a single-system model checker, one-by-one. Nevertheless, their computational cost still greatly depends on the number of features and variants. For variational models with a large number of features and variants, the family-based model checking may be too costly or even infeasible. In this work, we address two key problems of family-based model checking. First, we improve scalability by introducing abstractions that simplify variability. Second, we reduce the burden of maintaining specialized family-based model checkers, by showing how the presented variability abstractions can be used to model check variational models using the standard version of (single-system) SPIN. The variability abstractions are first defined as Galois connections on semantic domains. We then show how to use them for defining abstract family-based model checking, where a variability model is replaced with an abstract version of it, which preserves the satisfaction of LTL properties. Moreover, given an abstraction, we define a syntactic source-to-source transformation on high-level modeling languages that describe variational models, such that the model checking of the transformed high-level variational model coincides with the abstract model checking of the concrete high-level variational model. This allows the use of SPIN with all its accumulated optimizations for efficient verification of variational models without any knowledge about variability. We have implemented the transformations in a prototype tool, and we illustrate the practicality of this method in several case studies.
C1 [Dimovski, Aleksandar S.; Al-Sibahi, Ahmad Salim; Brabrand, Claus; Wasowski, Andrzej] IT Univ Copenhagen, Copenhagen, Denmark.
C3 IT University Copenhagen
RP Dimovski, A (corresponding author), IT Univ Copenhagen, Copenhagen, Denmark.
EM adim@itu.dk
RI Dimovski, Aleksandar/V-8590-2019; Dimovski, Aleksandar/ABC-8474-2021
OI Dimovski, Aleksandar/0000-0002-3601-2631; Wasowski,
   Andrzej/0000-0003-0532-2685; Al-Sibahi, Ahmad Salim/0000-0002-3445-2334
FU Danish Council for Independent Research, Sapere Aude grant [0602-02327B]
FX Danish Council for Independent Research, Sapere Aude grant no.
   0602-02327B.
CR [Anonymous], 1999, NATO ASI SERIES F
   [Anonymous], INT J SOFTWARE TOOLS
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Apel S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P372, DOI 10.1109/ASE.2011.6100075
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Belder T., 2015, EPTCS, V182, P14
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355, DOI 10.1145/2499370.2491976
   Brabrand C, 2013, LECT NOTES COMPUT SC, V7800, P73, DOI 10.1007/978-3-642-36964-3_3
   Chen S, 2012, ACM SIGPLAN NOTICES, V47, P29, DOI 10.1145/2398856.2364535
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   Classen Andreas, 2012, International Journal on Software Tools for Technology Transfer, V14, P589, DOI 10.1007/s10009-012-0234-1
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Cordy M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P190, DOI 10.1145/2635868.2635919
   Cordy M, 2012, PROC INT CONF SOFTW, P672, DOI 10.1109/ICSE.2012.6227150
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Dams D, 1997, ACM T PROGR LANG SYS, V19, P253, DOI 10.1145/244795.244800
   Dimovski Aleksandar S., 2016, Model-Checking Software. 23rd International Symposium, SPIN 2016, co-located with ETAPS 2016. Proceedings: LNCS 9641, P19, DOI 10.1007/978-3-319-32582-8_2
   Dimovski A.S., 2015, CORR
   Dimovski A. S., 2015, LIPICS, V37, P247
   Dimovski AS, 2015, LECT NOTES COMPUT SC, V9232, P282, DOI 10.1007/978-3-319-23404-5_18
   Dimovski AS, 2014, THEOR COMPUT SCI, V560, P364, DOI 10.1016/j.tcs.2014.01.016
   Fantechi A., 2007, ESEC FSE 07, P521
   Gallardo MD, 2002, LECT NOTES COMPUT SC, V2477, P395
   Gruler A, 2008, LECT NOTES COMPUT SC, V5051, P113, DOI 10.1007/978-3-540-68863-1_8
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kästner C, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P805
   Kang K. C., 1990, Technical Report
   KRAMER J, 1983, IEE PROC-E, V130, P1, DOI 10.1049/ip-e.1983.0001
   Lauenroth K, 2009, IEEE INT CONF AUTOM, P269, DOI 10.1109/ASE.2009.16
   Lochau M, 2016, J LOG ALGEBR METHODS, V85, P245, DOI 10.1016/j.jlamp.2015.09.004
   LOISEAUX C, 1995, FORM METHOD SYST DES, V6, P11, DOI 10.1007/BF01384313
   McMillan KL, 2005, LECT NOTES COMPUT SC, V3440, P1
   Midtgaard J, 2015, SCI COMPUT PROGRAM, V105, P145, DOI 10.1016/j.scico.2015.04.005
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Plath M, 2001, SCI COMPUT PROGRAM, V41, P53, DOI 10.1016/S0167-6423(00)00018-6
   Post Hendrik, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P347, DOI 10.1109/ASE.2008.45
   ter Beek M. H., 2015, SPLC, P432, DOI DOI 10.1145/2791060.2791118
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P287, DOI 10.1016/j.jlamp.2015.11.006
   Thüm T, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P97, DOI 10.1145/2866614.2866628
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thum T., 2012, P 11 INT C GEN PROGR, P11, DOI DOI 10.1145/2371401.2371404
NR 46
TC 28
Z9 28
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2017
VL 19
IS 5
BP 585
EP 603
DI 10.1007/s10009-016-0425-2
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FF8VL
UT WOS:000409295800006
DA 2024-07-18
ER

PT J
AU Lomuscio, A
   Qu, HY
   Raimondi, F
AF Lomuscio, Alessio
   Qu, Hongyang
   Raimondi, Franco
TI MCMAS: an open-source model checker for the verification of multi-agent
   systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Verification; Multi-agent systems; Model checking
ID EPISTEMIC PROPERTIES; KNOWLEDGE; LOGIC; COUNTEREXAMPLES; ALGORITHMS
AB We present MCMAS, a model checker for the verification of multi-agent systems. MCMAS supports efficient symbolic techniques for the verification of multi-agent systems against specifications representing temporal, epistemic and strategic properties. We present the underlying semantics of the specification language supported and the algorithms implemented in MCMAS, including its fairness and counterexample generation features. We provide a detailed description of the implementation. We illustrate its use by discussing a number of examples and evaluate its performance by comparing it against other model checkers for multi-agent systems on a common case study.
C1 [Lomuscio, Alessio] Imperial Coll London, Dept Comp, London, England.
   [Qu, Hongyang] Univ Sheffield, Dept Automat Control & Syst Engn, Sheffield, S Yorkshire, England.
   [Raimondi, Franco] Middlesex Univ, Sch Sci & Technol, London, England.
C3 Imperial College London; University of Sheffield; Middlesex University
RP Lomuscio, A (corresponding author), Imperial Coll London, Dept Comp, London, England.
EM A.Lomuscio@imperial.ac.uk; h.qu@sheffield.ac.uk; f.raimondi@mdx.ac.uk
OI Lomuscio, Alessio/0000-0003-3420-723X; Raimondi,
   Franco/0000-0002-9508-7713
FU EPSRC [EP/E035655/1, EP/I00520X/1, EP/E02727X/1] Funding Source: UKRI
CR Alur R, 2002, J ACM, V49, P672, DOI 10.1145/585265.585270
   Alur R, 1998, LECT NOTES COMPUT SC, V1427, P521, DOI 10.1007/BFb0028774
   [Anonymous], 2011, P IJCAI 22
   [Anonymous], 2007, The Definitive ANTLR Reference: Building Domain-Specific Languages
   [Anonymous], P 20 INT C ART INT I
   [Anonymous], 2005, Int. J. Inf. Secur., DOI [DOI 10.1007/S10207-004-0055-7, 10.1007/s10207-004-0055-7]
   [Anonymous], 2006, P INT JOINT C AUTONO
   Baukus K, 2004, LECT NOTES COMPUT SC, V3308, P99
   Boureanu I., 2009, J APPL NONCLASS LOG, V19, P463, DOI DOI 10.3166/JANCL.19.463-487
   Boureanu I., 2010, P 9 INT C AUT AG MUL, V1, P691
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   BURROWS M, 1990, ACM T COMPUT SYST, V8, P18, DOI [10.1145/77648.77649, 10.1145/74851.74852]
   Busard S, 2013, ELECTRON P THEOR COM, P71, DOI 10.4204/EPTCS.112.12
   Cermák P, 2014, LECT NOTES COMPUT SC, V8559, P525
   Cermák P, 2015, AAAI CONF ARTIF INTE, P2038
   Chaum D., 1988, Journal of Cryptology, V1, P65, DOI 10.1007/BF00206326
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Clarke E, 2002, IEEE S LOG, P19, DOI 10.1109/LICS.2002.1029814
   Clarke EM, 1999, MODEL CHECKING, P1
   CLARKE EM, 1995, DES AUT CON, P427
   COHEN PR, 1990, ARTIF INTELL, V42, P213, DOI 10.1016/0004-3702(90)90055-5
   Dam M., 2009, P 8 INT C AUT AG MUL, P945, DOI DOI 10.1145/1558109.1558144
   Dehaye PO, 2003, MATH INTELL, V25, P53, DOI 10.1007/BF02984862
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   El-Menshawy M, 2013, EXPERT SYST APPL, V40, P122, DOI 10.1016/j.eswa.2012.07.030
   Ezekiel J, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P51, DOI 10.1109/SEFM.2009.30
   Fagin R, 1997, DISTRIB COMPUT, V10, P199, DOI 10.1007/s004460050038
   Fagin R, 1995, Reasoning about knowledge
   Felli P., 2010, AAMAS, P499
   Gammie P, 2004, LECT NOTES COMPUT SC, V3114, P479
   Ganesan R, 1993, P 1 ACM C COMP COMM, P232, DOI DOI 10.1145/168588.168617
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   Gerard SN, 2013, ACM T INTEL SYST TEC, V4, DOI 10.1145/2438653.2438656
   Halpern JosephY., 2004, J COMPUT SECUR, V11, P581
   Halpern JY, 2003, LECT NOTES COMPUT SC, V2629, P115
   Hintikka J., 1962, Knowledge and Belief: An Introduction to the Logic of the Two Notions
   Huang X W, 2011, P 13 C THEOR ASP RAT, P177, DOI [10.1145/2000378.2000399, DOI 10.1145/2000378.2000399]
   Jones A. V., 2010, 9 INT C AUT AG MULT, V1-3, P675
   Jonker G., 2003, THESIS
   KACPRZAK M, 2006, FUNDAMENTA INFORM, V63, P221
   Kacprzak M, 2008, FUND INFORM, V85, P313
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Kouvaros P., 2013, P 23 INT JOINT C ART, P2013
   Kouvaros P., 2013, Proceedings of the 2013 International Conference on Autonomous Agents and Multi-agent Systems, AAMAS '13, Richland, SC, P861
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Latif NA, 2011, COMM COM INF SC, V180, P412
   Lomuscio Alessio, 2008, 2008 IEEE International Conference on Web Services (ICWS), P254, DOI 10.1109/ICWS.2008.115
   Lomuscio A., 2008, 7th Int. Conf. on Autonomous Agents and Multiagent Systems AAMAS 2008, P265
   Lomuscio A, 2008, FUND INFORM, V85, P359
   Lomuscio A, 2007, LECT NOTES COMPUT SC, V4749, P456
   Lomuscio A, 2006, LECT NOTES ARTIF INT, V4237, P29
   Lomuscio A, 2006, LECT NOTES COMPUT SC, V3920, P450
   Lomuscio A, 2012, AUTON AGENT MULTI-AG, V24, P345, DOI 10.1007/s10458-010-9152-3
   Lomuscio A, 2009, LECT NOTES COMPUT SC, V5643, P682, DOI 10.1007/978-3-642-02658-4_55
   Manna Z., 1992, The temporal logic of reactive and concurrent systems: specifications, V1
   MCCARTHY J, 1979, PHILOSOPHICAL PERSPE
   Meski A, 2014, AUTON AGENT MULTI-AG, V28, P558, DOI 10.1007/s10458-013-9232-2
   OASIS, 2007, Web Services Business Process Execution Language Version 2.0
   Penczek W, 2003, FUND INFORM, V55, P167
   Raimondi F., 2007, J APPL LOGIC, V5, P235, DOI DOI 10.1016/J.JAL.2005.12.010
   Somenzi F., 2012, CUDD: CU Decision Diagram Package-Release 2.4.0
   Su KL, 2007, COMPUT J, V50, P403, DOI 10.1093/comjnl/bxm009
   Syverson PF, 1999, LECT NOTES COMPUT SC, V1708, P814
   Wooldridge M., 2009, An introduction to multiagent systems
   Xiaowei Huang, 2011, Model Checking and Artificial Intelligence. 6th International Workshop, MoChArt 2010. Revised Selected and Invited Papers, P95, DOI 10.1007/978-3-642-20674-0_7
   [No title captured]
NR 66
TC 138
Z9 146
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2017
VL 19
IS 1
BP 9
EP 30
DI 10.1007/s10009-015-0378-x
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ1AC
UT WOS:000392941500002
OA Green Accepted, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Wehrle, M
   Kupferschmid, S
AF Wehrle, Martin
   Kupferschmid, Sebastian
TI Downward pattern refinement for timed automata
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Directed model checking; Heuristic search; Pattern databases; Bug
   finding; Timed Automata
ID DIRECTED MODEL CHECKING; ABSTRACTION; DATABASES; SYSTEMS; TOOL
AB Directed model checking is a well-established approach for detecting error states in concurrent systems. A popular variant to find shortest error traces is to apply the A search algorithm with distance heuristics that never overestimate the real error distance. An important class of such distance heuristics is the class of pattern database heuristics. Pattern database heuristics are built on abstractions of the system under consideration. In this paper, we propose downward pattern refinement, a systematic approach for the construction of pattern database heuristics for concurrent systems of timed automata. First, we propose a general framework for pattern databases in the context of timed automata and show that desirable theoretical properties hold for the resulting pattern database. Afterward, we formally define a concept to measure the accuracy of abstractions. Based on this concept, we propose an algorithm for computing succinct abstractions that are still accurate to produce informed pattern databases. We evaluate our approach on large and complex industrial problems. The experiments show the practical potential of the resulting pattern database heuristic.
C1 [Wehrle, Martin] Univ Basel, Basel, Switzerland.
   [Kupferschmid, Sebastian] ATRiCS Adv Traff Solut GmbH, Freiburg, Germany.
C3 University of Basel
RP Wehrle, M (corresponding author), Univ Basel, Basel, Switzerland.
EM martin.wehrle@unibas.ch; sebastian.kupferschmid@atrics.com
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Behrmann G., 2004, LNCS, V3185, P2004
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Clarke Edmund M., 2001, Model Checking
   Culberson JC, 1998, COMPUT INTELL, V14, P318, DOI 10.1111/0824-7935.00065
   Dierks H, 2004, FORM ASP COMPUT, V16, P104, DOI 10.1007/s00165-004-0034-9
   Dierks H, 2005, THESIS U OLDENBURG G
   Drager Klaus, 2009, International Journal on Software Tools for Technology Transfer, V11, P27, DOI 10.1007/s10009-008-0092-z
   Edelkamp S., 2004, International Journal on Software Tools for Technology Transfer, V5, P247, DOI 10.1007/s10009-002-0104-3
   Edelkamp S., 2007, LNAI, V4428
   HART PE, 1968, IEEE T SYST SCI CYB, VSSC4, P100, DOI 10.1109/TSSC.1968.300136
   Hart Peter E, 1972, SIGART Bull, V1, P28
   HASLUM P, 2007, P 22 AAAI C ART INT, P1007
   Helmert M., 2007, ICAPS, P176
   Hoffmann J., EDELKAMP LOMUSCIO, P51
   Krieg-Brückner B, 1999, LECT NOTES COMPUT SC, V1709, P1186
   Kupferschmid S., VALMARI, P35
   Kupferschmid S., 2008, LNCS, V4963
   Kupferschmid S, 2008, LECT NOTES COMPUT SC, V5123, P552
   Kupferschmid S, 2007, LECT NOTES COMPUT SC, V4424, P679
   Kupferschmid S, 2011, LECT NOTES COMPUT SC, V6605, P276, DOI 10.1007/978-3-642-19835-9_26
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Olderog ER, 2003, J UNIVERS COMPUT SCI, V9, P88
   Pearl J., 1984, Heuristics: Intelligent Search Strategies for Computer Problem Solving
   Peled D., 2009, LNAI, V5348
   Qian KR, 2004, LECT NOTES COMPUT SC, V2988, P497
   Seipp J., 2013, P 23 INT C AUT PLANN
   Smaus J.G., PELED AND WOOLDRIDGE, P146
   Valmari A., 2006, LNCS, V3925
   Wehrle M., 2010, LNCS, V88-105
   Wehrle M., 2012, LNCS, P252
   Wehrle M, 2009, LECT NOTES COMPUT SC, V5673, P86, DOI 10.1007/978-3-642-03237-0_8
   Wehrle M, 2009, LECT NOTES COMPUT SC, V5505, P186, DOI 10.1007/978-3-642-00768-2_19
   [No title captured]
NR 34
TC 1
Z9 1
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2016
VL 18
IS 1
BP 41
EP 56
DI 10.1007/s10009-014-0346-x
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB7SL
UT WOS:000368716200003
OA hybrid
DA 2024-07-18
ER

PT J
AU Ellen, C
   Gerwinn, S
   Fränzle, M
AF Ellen, Christian
   Gerwinn, Sebastian
   Fraenzle, Martin
TI Statistical model checking for stochastic hybrid systems involving
   nondeterminism over continuous domains
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Statistical model checking; Stochastic hybrid systems; Non-determinism;
   SSMT
AB Behavioral verification of technical systems involving both discrete and continuous components is a common and demanding task. The behavior of such systems can often be characterized using stochastic hybrid automata, leading to verification problems which can be formalized and solved using stochastic logic calculi such as stochastic satisfiability modulo theory (SSMT). While algorithms for discharging proof obligations in SSMT form exist, their applicability is limited due to the computational complexity, which often increases exponentially with the number of quantified variables. Recently, statistical model checking has been successfully applied to stochastic hybrid systems, thereby increasing the size of the system for which verification problems is tractable. However, being based on randomized simulation, these methods usually cannot handle non-determinism. In previous work, we have deviated from the usual approach of simulating the model and rather proposed a statistical method for SSMT solving which, being based on statistical AI planning algorithms, can also treat non-determinism over a finite domain. Here, we extend this previous work to the case of continuous domains. In particular, using ideas from noisy optimization, we adaptively build up a decision tree recording the findings and guiding further exploration, thereby favoring the currently most promising sub-domain. The non-determinism is resolved by translating the satisfaction problem into an optimization problem, thereby computing both optimistic and pessimistic bounds on the probability of satisfaction. At each stage of the evaluation process, we show how to obtain confidence statements about the probability of satisfaction for the overall SSMT formula, including reliable estimates on the optimal resolution of any non-deterministic choice involved.
C1 [Ellen, Christian; Gerwinn, Sebastian] OFFIS Inst Informat Technol, Transportat, D-26121 Oldenburg, Germany.
   [Fraenzle, Martin] Carl von Ossietzky Univ Oldenburg, Hybrid Syst, Dept Comp Sci, D-26121 Oldenburg, Germany.
C3 Carl von Ossietzky Universitat Oldenburg
RP Ellen, C (corresponding author), OFFIS Inst Informat Technol, Transportat, Escherweg 2, D-26121 Oldenburg, Germany.
EM christian.ellen@offis.de; sebastian.gerwinn@offis.de;
   fraenzle@informatik.uni-oldenburg.de
RI Fränzle, Martin/AHB-0004-2022
OI Franzle, Martin/0000-0002-9138-8340
CR Abate A, 2011, IEEE T AUTOMAT CONTR, V56, P2688, DOI 10.1109/TAC.2011.2160595
   [Anonymous], THESIS U BIRMINGHAM
   Audemard G, 2005, ELECTRON NOTES THEOR, V119, P17, DOI 10.1016/j.entcs.2004.12.022
   Audibert J.-Y., 2011, PRFOC OPT MACH LEARN, P1
   Auer P, 2002, MACH LEARN, V47, P235, DOI 10.1023/A:1013689704352
   Blom HAP, 2006, LECT NOTES CONTR INF, V337, P1, DOI 10.1007/11587392
   Bubeck S, 2011, J MACH LEARN RES, V12, P1655
   David A, 2011, LECT NOTES COMPUT SC, V6919, P80, DOI 10.1007/978-3-642-24310-3_7
   Ellen Christian, 2012, Formal Modeling and Analysis of Timed Systems. Proceedings of the 10th International Conference, FORMATS 2012, P123, DOI 10.1007/978-3-642-33365-1_10
   Fränzle M, 2008, LECT NOTES COMPUT SC, V4981, P172
   Fränzle M, 2007, FORM METHOD SYST DES, V30, P179, DOI 10.1007/s10703-006-0031-0
   Fränzle M, 2011, HSCC 11: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P43
   Franzle M., 2007, J. Satisf. Boolean Model. Comput., V1, P209
   GROOTE JF, 1995, COMPASS '95 - PROCEEDINGS OF THE TENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P57, DOI 10.1109/CMPASS.1995.521887
   Hahn E.M., 2013, THESIS U SAARLANDES
   Henriques D., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P84, DOI 10.1109/QEST.2012.19
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Kocsis L, 2006, LECT NOTES COMPUT SC, V4212, P282, DOI 10.1007/11871842_29
   LARSEN KG, 1991, INFORM COMPUT, V94, P1, DOI 10.1016/0890-5401(91)90030-6
   Littman ML, 2001, J AUTOM REASONING, V27, P251, DOI 10.1023/A:1017584715408
   Maron O., 1994, P 6 INT C NEUR INF, P59
   Sen K., 2004, Computer Aided Verification, P399
   Teige T, 2011, NONLINEAR ANAL-HYBRI, V5, P343, DOI 10.1016/j.nahs.2010.04.009
   Younes H., 2005, COMPUTER AIDED VERIF, P171
   Zuliani P., 2010, P 13 ACM INT C HYBR, DOI [10.1145/1755952.1755987, DOI 10.1145/1755952.1755987]
NR 25
TC 10
Z9 12
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2015
VL 17
IS 4
BP 485
EP 504
DI 10.1007/s10009-014-0329-y
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM2BV
UT WOS:000357485500008
DA 2024-07-18
ER

PT J
AU Becker, B
   Jeannerod, N
   Marché, C
   Régis-Gianas, Y
   Sighireanu, M
   Treinen, R
AF Becker, Benedikt
   Jeannerod, Nicolas
   Marche, Claude
   Regis-Gianas, Yann
   Sighireanu, Mihaela
   Treinen, Ralf
TI The CoLiS platform for the analysis of maintainer scripts in Debian
   software packages
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT Conference on Tools and Algorithms for Construction and Analysis of
   Systems (TACAS)
CY APR 25-30, 2020
CL Dublin, IRELAND
DE Quality assurance; Safety properties; Debian distribution; Software
   package installation; Shell scripts; High-level view of file
   hierarchies; Symbolic execution; Feature tree constraints
ID SYSTEM
AB The software packages of the Debian distribution include more than twenty-seven thousand maintainer scripts in total, almost all of them being written in the Posix shell language. These scripts are executed with root privileges at installation, update, and removal of a package, which makes them critical for system maintenance. While the Debian policy provides guidance for package maintainers producing the scripts, only few tools exist to check the compliance of a script to that policy. We present CoLiS, a software platform for discovering violations of non-trivial properties required by the Debian policy in maintainer scripts. We describe our methodology which is based on symbolic execution and feature tree constraints, and we give an overview of the toolchain. We obtain promising results: our toolchain is effective in analysing a large set of Debian maintainer scripts, and it has already detected over 150 policy violations that have led to bug reports, more than two-third of them now being fixed.
C1 [Becker, Benedikt; Marche, Claude] Univ Paris Saclay, LMF, INRIA, CNRS, F-91190 Gif Sur Yvette, France.
   [Jeannerod, Nicolas; Regis-Gianas, Yann; Treinen, Ralf] Univ Paris Cite, IRIF, CNRS, F-75013 Paris, France.
   [Sighireanu, Mihaela] Univ Paris Saclay, LMF, ENS Paris Saclay, CNRS, F-91190 Gif Sur Yvette, France.
C3 Universite Paris Cite; Inria; Centre National de la Recherche
   Scientifique (CNRS); Universite Paris Saclay; Universite Paris Cite;
   Centre National de la Recherche Scientifique (CNRS); Universite Paris
   Saclay; Centre National de la Recherche Scientifique (CNRS); Universite
   Paris Cite
RP Marché, C (corresponding author), Univ Paris Saclay, LMF, INRIA, CNRS, F-91190 Gif Sur Yvette, France.
EM Claude.Marche@inria.fr
OI Becker, Benedikt/0000-0002-0819-8344; Regis-Gianas,
   Yann/0000-0002-0745-8730; Marche, Claude/0000-0003-3035-1269;
   Sighireanu, Mihaela/0000-0002-1925-089X
FU ANR project CoLiS [ANR-15-CE25-0001]; Agence Nationale de la Recherche
   (ANR) [ANR-15-CE25-0001] Funding Source: Agence Nationale de la
   Recherche (ANR)
FX This work has been partially supported by the ANR project CoLiS,
   contract number ANR-15-CE25-0001.
CR Abramatic JF, 2018, COMMUN ACM, V61, P29, DOI 10.1145/3183558
   AITKACI H, 1994, THEOR COMPUT SCI, V122, P263, DOI 10.1016/0304-3975(94)90209-7
   Allbery R., 2019, DEBIAN POLICY MANUAL
   [Anonymous], 2018, 908189 DEB BUG TRACK
   [Anonymous], 2017, 866249 DEB BU TRACK
   [Anonymous], 2019, 929706 DEB BUG TRACK
   [Anonymous], 2016, 841934 DEB BUG TRACK
   [Anonymous], 2019, 942392 DEB BUG TRACK
   Bach MJ, 1986, DESIGN UNIX OPERATIN
   Becker B., 2019, REVISION 2 COLIS LAN
   Becker B., 2019, VERIFIED SOFTWARE TO
   Becker B., 2018, DASH IGNORES E SUBST
   Becker Benedikt., 2021, ZENODO REPOS, DOI [10.5281/zenodo.5560955, DOI 10.5281/ZENODO.5560955]
   Bobot F, 2015, INT J SOFTW TOOLS TE, V17, P709, DOI 10.1007/s10009-014-0314-5
   Developer's Reference Team, 2019, DEB DEV REF
   Di Cosmo R, 2011, SCI COMPUT PROGRAM, V76, P1144, DOI 10.1016/j.scico.2010.11.001
   Gallot P., 2021, THESIS U LILLE
   Gardner P, 2014, LECT NOTES COMPUT SC, V8410, P169
   Greenberg M., 2019, ARXIV
   IEEE and The Open Group, 2018, OPEN GROUP BASE SPEC
   Jeannerod N., 2017, LECT NOTES COMPUTER, V10712
   Jeannerod N., 2019, SPECIFICATION UNIX U
   Jeannerod N., 2017, HAVING FUN 31 521 SH
   Jeannerod N., LECT NOTES COMPUTER, V10900, P439
   Jeannerod N., 2021, THESIS U PARIS
   lintian.debian, LINTIAN EXPERT SYSTE
   Mazurak K, 2007, PLAS'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY, P105, DOI 10.1145/1255329.1255347
   Ntzik G., 2018, ECOOP, V109, DOI DOI 10.4230/LIPICS.ECOOP.2018.4
   Ntzik G, 2015, ACM SIGPLAN NOTICES, V50, P201, DOI [10.1145/2814270.2814306, 10.1145/2858965.2814306]
   piuparts.debian, PIUPARTS TOOL QUALIT
   Régis-Gianas Y, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P29, DOI 10.1145/3276604.3276615
   Rosenfeld R., 2019, PACKAGE RANCID CGI L
   SMOLKA G, 1994, J LOGIC PROGRAM, V18, P229, DOI 10.1016/0743-1066(94)90044-2
   SMOLKA G, 1992, J LOGIC PROGRAM, V12, P51, DOI 10.1016/0743-1066(92)90039-6
   The CoLiS project, US
   The Debian Project, BUGS TAGG COL
   The Linux Foundation, 2015, FIL HIER STAND VERS
   Ucko A.M., 2007, 431131 DEB BUG
NR 38
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2022
VL 24
IS 5
SI SI
BP 717
EP 733
DI 10.1007/s10009-022-00671-1
EA SEP 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 6I0IB
UT WOS:000857777500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lee, J
   Bae, K
   Ölveczky, PC
   Kim, S
   Kang, M
AF Lee, Jaehun
   Bae, Kyungmin
   Olveczky, Peter Csaba
   Kim, Sharon
   Kang, Minseok
TI Modeling and formal analysis of virtually synchronous cyber-physical
   systems in AADL
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Cyber-physical systems; Virtual synchrony; AADL; Formal methods; Model
   checking; Maude; SMT
AB This paper presents the HybridSynchAADL modeling language and formal analysis tool for virtually synchronous cyber-physical systems with complex control programs, continuous behaviors, and bounded clock skews, network delays, and execution times. We leverage the Hybrid PALS methodology, so that it is sufficient to model and verify the much simpler underlying synchronous designs. We define the HybridSynchAADL language as a sublanguage of the avionics modeling standard AADL for modeling such synchronous designs in AADL. We define the formal semantics of HybridSynchAADL using Maude with SMT solving, which allows us to represent advanced control programs and communication features in Maude, while capturing timing uncertainties and continuous behaviors symbolically with SMT solving. We have developed new general methods for optimizing the performance of such symbolic rewriting, which makes the analysis of HybridSynchAADL models feasible. We have integrated the formal modeling and analysis of HybridSynchAADL models into the OSATE tool environment for AADL. Finally, we demonstrate the effectiveness of the Hybrid PALS methodology and HybridSynchAADL on a number of applications, including autonomous drones that collaborate to achieve common goals, and compare the performance of our tool with other state-of-the-art formal tools for hybrid systems.
C1 [Lee, Jaehun; Bae, Kyungmin; Kang, Minseok] Pohang Univ Sci & Technol, Pohang, South Korea.
   [Olveczky, Peter Csaba] Univ Oslo, Oslo, Norway.
   [Kim, Sharon] Korea Shipbldg & Offshore Engn, Seoul, South Korea.
C3 Pohang University of Science & Technology (POSTECH); University of Oslo
RP Bae, K (corresponding author), Pohang Univ Sci & Technol, Pohang, South Korea.
EM thkighie1224@postech.ac.kr; kmbae@postech.ac.kr; peterol@ifi.uio.no;
   saron.kim@ksoe.co.kr; masonkang@postech.ac.kr
RI Ölveczky, Peter C/B-1797-2008
FU National Research Foundation of Korea (NRF) - Korea government (MSIT)
   [2021R1A5A1021944]; Institute of Information & communications Technology
   Planning & Evaluation (IITP) - Korea government (MSIT) [2022-0-00103]
FX We are grateful to John Hatcliff and the anonymous reviewers for very
   helpful comments on an earlier version of this paper. This work was
   partly supported by the National Research Foundation of Korea (NRF)
   grant funded by the Korea government (MSIT) (No. 2021R1A5A1021944) and
   Institute of Information & communications Technology Planning &
   Evaluation (IITP) grant funded by the Korea government (MSIT) (No.
   2022-0-00103).
CR ABRIAL JR, 1996, FORMAL METHODS IND A
   Agha G, 2006, ELECTRON NOTES THEOR, V153, P213, DOI 10.1016/j.entcs.2005.10.040
   Agha G, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3158668
   Ahmad E., 2015, LNCS, V8997
   Ahmad E., 2014, P ACM SIGADA ANN C H
   Al-Nayeem A, 2009, REAL TIM SYST SYMP P, P161, DOI 10.1109/RTSS.2009.50
   AlTurki Musab, 2011, Algebra and Coalgebra in Computer Science. Proceedings 4th International Conference, CALCO 2011, P386, DOI 10.1007/978-3-642-22944-2_28
   [Anonymous], 2006, 6 INT C APPL CONC SY
   Arney D, 2007, 2007 JOINT WORKSHOP ON HIGH CONFIDENCE MEDICAL DEVICES, SOFTWARE AND SYSTEMS AND MEDICAL DEVICE PLUG-AND PLAY INTEROPERABILITY, P23, DOI 10.1109/HCMDSS-MDPnP.2007.36
   Bae K., 2012, LNCS, V7212
   Bae K., 2011, LNCS, V6991
   Bae K., 2014, LNCS, V8442
   Bae K, 2021, ACM T EMBED COMPUT S, V20, DOI 10.1145/3477036
   Bae K, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290364
   Bae K, 2019, SCI COMPUT PROGRAM, V178, P20, DOI 10.1016/j.scico.2019.03.006
   Bae K, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P180, DOI 10.23919/FMCAD.2017.8102258
   Bae K, 2016, HSCC'16: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P145, DOI 10.1145/2883817.2883849
   Bae K, 2015, SCI COMPUT PROGRAM, V103, P13, DOI 10.1016/j.scico.2014.09.011
   Bae K, 2014, SCI COMPUT PROGRAM, V91, P3, DOI 10.1016/j.scico.2013.09.010
   Bak S, 2017, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (PART OF CPS WEEK) (HSCC' 17), P173, DOI 10.1145/3049797.3054973
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Bao YX, 2017, IEEE T COMPUT AID D, V36, P1989, DOI 10.1109/TCAD.2017.2681076
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C., 2010, P 8 INT WORKSHOP SAT, V13, P14
   Baudart G, 2016, PROCEEDINGS OF THE 2016 16TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2016), P9, DOI 10.1109/FMCAD.2016.7886655
   Caspi P., 2001, INT C COMP SAF REL S
   Cimatti Alessandro, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P52, DOI 10.1007/978-3-662-46681-0_4
   Clavel M., 2020, TECHNICAL REPORT
   Clavel M., 2007, ALL MAUDE A HIGH PER, DOI DOI 10.1007/978-3-540-71999-1
   Desai A, 2015, LECT NOTES COMPUT SC, V9207, P429, DOI 10.1007/978-3-319-21668-3_25
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Feiler PH., 2012, Model-based engineering with AADL: An introduction to the SAE architecture analysis design language
   França RB, 2007, IEEE INT C ENG COMP, P377, DOI 10.1109/ICECCS.2007.41
   Frehse G., 2011, LNCS, V6806
   Girault A, 2002, LECT NOTES COMPUT SC, V2491, P266
   Henzinger TA, 2000, NATO ADV SCI I F-COM, V170, P265
   Johnson T.T., 2015, Proceedings of the 18th International Conference on Hybrid Systems: Computation and Control, P128
   Kim C., 2010, P 1 ACMIEEE ICCPS, P149, DOI DOI 10.1145/1795194.1795215
   Larrieu Robin, 2014, 2014 Twelfth ACM/IEEE Conference on Formal Methods and Models for Codesign (MEMOCODE), P72, DOI 10.1109/MEMCOD.2014.6961845
   Lee J, 2021, LECT NOTES COMPUT SC, V12759, P491, DOI 10.1007/978-3-030-81685-8_23
   Lee J, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P343, DOI 10.1109/ASE51524.2021.9678719
   Leen G, 1999, COMPUT CONTROL ENG J, V10, P257, DOI 10.1049/cce:19990604
   Liu J, 2019, FRONT COMPUT SCI-CHI, V13, P516, DOI 10.1007/s11704-018-7039-7
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   Meseguer J, 2012, THEOR COMPUT SCI, V451, P1, DOI 10.1016/j.tcs.2012.05.040
   Miller SP, 2009, IEEEAAIA DIGIT AVION, P23
   Ölveczky PC, 2010, LECT NOTES COMPUT SC, V6117, P47, DOI 10.1007/978-3-642-13464-7_5
   Potop-Butucaru D, 2007, FUND INFORM, V78, P131
   Qian Y., 2013, P INTERNETWARE 13
   Raisch J, 1999, LECT NOTES COMPUT SC, V1567, P279
   Ren W, 2008, COMMUN CONTROL ENG, P1
   Rocha C, 2017, J LOG ALGEBR METHODS, V86, P269, DOI 10.1016/j.jlamp.2016.10.001
   Rushby J, 1999, IEEE T SOFTWARE ENG, V25, P651, DOI 10.1109/32.815324
   Sicun Gao, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P208, DOI 10.1007/978-3-642-38574-2_14
   Skeirik S, 2020, FUND INFORM, V173, P315, DOI 10.3233/FI-2020-1926
   Soonho Kong, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P200, DOI 10.1007/978-3-662-46681-0_15
   Steiner W, 2011, IEEEAAIA DIGIT AVION
   Steiner W, 2009, 2009 8TH IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS, P319, DOI 10.1109/NCA.2009.28
   Tripakis S, 2008, IEEE T COMPUT, V57, P1300, DOI 10.1109/TC.2008.81
   Xin Chen, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P258, DOI 10.1007/978-3-642-39799-8_18
   Yu G., 2020, P INT WORKSH REWR LO
NR 62
TC 2
Z9 2
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2022
VL 24
IS 6
SI SI
BP 911
EP 948
DI 10.1007/s10009-022-00665-z
EA SEP 2022
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8H5UG
UT WOS:000849444600001
DA 2024-07-18
ER

PT J
AU Basile, D
   ter Beek, MH
   Ferrari, A
   Legay, A
AF Basile, Davide
   ter Beek, Maurice H.
   Ferrari, Alessio
   Legay, Axel
TI Exploring the ERTMS/ETCS full moving block specification: an experience
   with formal methods
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal methods; Railways; ERTMS; ETCS; Moving block; UPPAAL; Statistical
   model checking
ID RAILWAY; SIMULINK; SCHEME
AB Shift2Rail is a joint undertaking funded by the EU via its Horizon 2020 program and by main railway stakeholders. Several Shift2Rail projects aim to investigate the application of formal methods to new ERTMS/ETCS railway signalling systems that promise to move European railway forward by guaranteeing high capacity, low cost and improved reliability. We explore the ERTMS/ETCS level 3 full moving block specifications stemming from different Shift2Rail projects using Uppaal and statistical model checking. The results range from novel rigorously formalised requirements to an operational model formally verified against scenarios with multiple trains on a single railway line. From the gained experience, we have distilled future research goals to improve the formal specification and verification of real-time systems, and we discuss some barriers concerning a possible uptake of formal methods and tools in the railway industry.
C1 [Basile, Davide; ter Beek, Maurice H.; Ferrari, Alessio] ISTI CNR, Via G Moruzzi 1, I-56124 Pisa, Italy.
   [Legay, Axel] Catholic Univ Louvain, Louvain La Neuve, Belgium.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); Universite
   Catholique Louvain
RP Basile, D (corresponding author), ISTI CNR, Via G Moruzzi 1, I-56124 Pisa, Italy.
EM davide.basile@isti.cnr.it; maurice.terbeek@isti.cnr.it;
   alessio.ferrari@isti.cnr.it; axel.legay@uclouvain.be
RI BASILE, Davide/AAX-1112-2020
OI BASILE, Davide/0000-0002-7196-6609
FU ASTRail; 4SECURail; Shift2Rail Joint Undertaking under the European
   Union's Horizon 2020 research and innovation programme [777561, 881775];
   Italian MIUR PRIN [2017FTXR7S]
FX Research partially funded by ASTRail and 4SECURail. The ASTRail and
   4SECURail projects received funding from the Shift2Rail Joint
   Undertaking under the European Union's Horizon 2020 research and
   innovation programme under grant agreements 777561 (ASTRail) and 881775
   (4SECURail) in the context of the open call S2R-OC-IP2-01-2019, part of
   the "Annual Work Plan and Budget 2019", of the programme
   H2020-S2RJU-2019. The content of this paper reflects only the authors'
   view and the Shift2Rail Joint Undertaking is not responsible for any use
   that may be made of the included information. We also acknowledge
   funding from the Italian MIUR PRIN 2017FTXR7S project IT MaTTerS
   (Methods and Tools for Trustworthy Smart Systems).
CR Abrial JR, 2020, INT J SOFTW TOOLS TE, V22, P257, DOI 10.1007/s10009-019-00525-3
   Agha G, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3158668
   Agrawal A., 2004, ELECTRON NOTES THEOR, V109, P43
   Arcaini P, 2020, INT J SOFTW TOOLS TE, V22, P265, DOI 10.1007/s10009-019-00539-x
   Arnold A., 2017, EAI ENDORSED T IND N, DOI 10.4108/eai.1-2-2017.152154
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   BARTHOLOMEUS M, 2018, LNCS, V1119
   Basile D., LNCS, V12863, P174, DOI 10.1007/978-3-030-85248-1_11
   Basile D., LNCS, V11687, DOI 10.1007/978-3-030-27008-7_1
   Basile D., LNCS, V11245, P372, DOI 10.1007/978-3-030-03421-4_24
   Basile D., LNCS, V2136, P3, DOI 10.1007/978-3-030-50086-3_1
   Basile D, 2021, FORM ASP COMPUT, V33, P957, DOI 10.1007/s00165-021-00556-1
   Behrmann G, 2006, INT CONF QUANT EVAL, P125
   Beugin J, 2012, TRANSPORT RES C-EMER, V22, P42, DOI 10.1016/j.trc.2011.12.002
   Bouissou O, 2012, ACM SIGPLAN NOTICES, V47, P129, DOI 10.1145/2345141.2248437
   Boulanger J.L., 2015, 50128 CENELEC, P287, DOI [10.1002/9781119005056.ch9, DOI 10.1002/9781119005056.CH9]
   Boulanger JL., 2014, FORMAL METHODS APPL, DOI 10.1002/9781119002727
   Broy M, 2011, SOFTW SYST MODEL, V10, P441, DOI 10.1007/s10270-011-0207-y
   Butler M, 2020, INT J SOFTW TOOLS TE, V22, P249, DOI 10.1007/s10009-020-00562-3
   Cappart Q, 2017, IEEE HI ASS SYS ENGR, P61, DOI 10.1109/HASE.2017.10
   CASPI P, LNCS, V2855, P84
   Clarke T.A., 2018, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8
   Cook S, 2012, SOFTW SYST MODEL, V11, P471, DOI 10.1007/s10270-012-0256-x
   Cunha A, 2020, INT J SOFTW TOOLS TE, V22, P281, DOI 10.1007/s10009-019-00540-4
   David A, 2015, INT J SOFTW TOOLS TE, V17, P351, DOI [10.1007/s10009-014-0361-y, 10.1007/s10009-014-0323-4]
   DENICOLA R, 1995, THEOR COMPUT SCI, V138, P391, DOI 10.1016/0304-3975(95)92307-J
   Derezinska A., 2012, MONOGRAPHS APPL INFO, P36
   Dghaym D, 2020, INT J SOFTW TOOLS TE, V22, P297, DOI 10.1007/s10009-019-00548-w
   Emery, 2011, P 9 WORLD C RAILW RE, P1
   European Committee for Electrotechnical Standardization, 2011, 50128 CENELEC EN
   European Committee for Electrotechnical Standardization:, 2017, 501262 CENELEC EN
   European Committee for Electrotechnical Standardization:, 2017, 501261 CENELEC EN
   Falco G, 2018, I NAVIG SAT DIV INT, P3463, DOI 10.33012/2018.15866
   Fantechi A., 2013, Formal Methods for Industrial Critical Systems, P61, DOI [10.1002/9781118459898.ch4, DOI 10.1002/9781118459898]
   Fantechi A, 2016, LECT NOTES COMPUT SC, V9953, P261, DOI 10.1007/978-3-319-47169-3_18
   Fantechi A, 2014, LECT NOTES COMPUT SC, V8368, P167, DOI 10.1007/978-3-319-05032-4_13
   Ferrari Alessio, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P24, DOI 10.1007/978-3-642-28891-3_5
   Ferrari A., 2022, ACM COMPUT SURV, DOI 10.1145/3520480
   Ferrari A., 2021, IEEE T SOFTW ENG, DOI 10.1109/TSE.2021.3124677
   Ferrari A, 2020, PROC INT CONF SOFTW, P62, DOI 10.1145/3377811.3380373
   Ferrari A, 2019, LECT NOTES COMPUT SC, V11495, P226, DOI 10.1007/978-3-030-18744-6_15
   Ferrari A, 2013, SCI COMPUT PROGRAM, V78, P828, DOI 10.1016/j.scico.2012.04.003
   Ferrari A, 2013, IEEE SOFTWARE, V30, P28, DOI 10.1109/MS.2013.44
   Filipovikj P, 2016, LECT NOTES COMPUT SC, V9995, P748, DOI 10.1007/978-3-319-48989-6_46
   Flammini F, 2012, RAILWAY SAFETY, RELIABILITY, AND SECURITY: TECHNOLOGIES AND SYSTEMS ENGINEERING, P1, DOI 10.4018/978-1-4666-1643-1
   Flammini F, 2021, FORM ASP COMPUT, V33, P989, DOI 10.1007/s00165-021-00560-5
   Fränzle M, 2011, HSCC 11: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P43
   Furness N., 2017, IRSE News, V232, P2
   Garavel H, 2020, LECT NOTES COMPUT SC, V12327, P3, DOI 10.1007/978-3-030-58298-2_1
   Ghazel M, 2017, IEEE T INTELL TRANSP, V18, P2667, DOI 10.1109/TITS.2017.2657695
   Ghazel M, 2014, TRANSPORT RES C-EMER, V42, P60, DOI 10.1016/j.trc.2014.02.002
   Gilmore S, 2014, LECT NOTES COMPUT SC, V8739, P71, DOI 10.1007/978-3-319-10181-1_5
   Groves PD, 2013, I NAVIG SAT DIV INT, P3231
   Gu R., LNCS, V12476, P350, DOI 10.1007/978-3-030-61362-4_20
   Han X, 2020, P INT TECH M I NAVIG, P570, DOI 10.33012/2020.17162
   Hansen D, 2020, INT J SOFTW TOOLS TE, V22, P315, DOI 10.1007/s10009-020-00551-6
   Herde Christian, 2008, 2008 3rd International Conference on Systems (ICONS '08), P196
   Jansen DN, 2004, INT CONF QUANT EVAL, P250
   Jensen P.G., LNCS, V12476, P385, DOI 10.1007/978-3-030-61362-4_22
   JIN Y, 2020, MATH PROBL ENG, V2020
   Krauss SS, 2015, PROCEDIA ENGINEER, V128, P15, DOI 10.1016/j.proeng.2015.11.500
   Legay A., LNCS, P478, DOI 10.1007/978-3-319-91908-9_23
   Mammar A, 2020, INT J SOFTW TOOLS TE, V22, P333, DOI 10.1007/s10009-019-00543-1
   Marais J, 2017, IEEE T INTELL TRANSP, V18, P2602, DOI 10.1109/TITS.2017.2658179
   Mazzanti F, 2018, INT J SOFTW TOOLS TE, V20, P263, DOI 10.1007/s10009-018-0488-3
   Minopoli S, 2016, HSCC'16: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P93, DOI 10.1145/2883817.2883826
   Nardone R, 2016, COMM COM INF SC, V596, P121, DOI 10.1007/978-3-319-29510-7_7
   Nummenmaa T., 2011, SIGSOFT SOFTW ENG NO, V36, P1, DOI [10.1145/1988997.2003643, DOI 10.1145/1988997.2003643]
   Paigwar A, 2020, IEEE INT VEH SYM, P737
   Puch S., LNCS, V1245, P305, DOI 10.1007/978-3-030-03421-4_20
   Rispoli F, 2013, 2013 23RD INTERNATIONAL CONFERENCE RADIOELEKTRONIKA (RADIOELEKTRONIKA), P13, DOI 10.1109/RadioElek.2013.6530882
   Ryabtsev M, 2009, LECT NOTES COMPUT SC, V5643, P696, DOI 10.1007/978-3-642-02658-4_57
   Schoitsch, LNCS, V7612, P305, DOI 10.1007/978-3-642-33678-2_26
   Siemens:, 2019, X2RAIL 1 DEL D5 1 MO
   ter Beek MH, 2018, INT J SOFTW TOOLS TE, V20, P237, DOI 10.1007/s10009-018-0487-4
   ter Beek MH, 2016, LECT NOTES COMPUT SC, V9952, P114, DOI 10.1007/978-3-319-47166-2_8
   terBeek M.H., LNCS, V1800, P762, DOI 10.1007/978-3-030-30942-8_46
   Fotso SJT, 2020, INT J SOFTW TOOLS TE, V22, P349, DOI 10.1007/s10009-019-00542-2
   UNISIG, 2016, FIS RBC RBC HAND VER
   vander Poll J.A., 2002, P 2002 ANN RES C S A, P179
NR 80
TC 4
Z9 4
U1 4
U2 19
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2022
VL 24
IS 3
SI SI
BP 351
EP 370
DI 10.1007/s10009-022-00653-3
EA APR 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1D5TB
UT WOS:000779997000001
OA hybrid
DA 2024-07-18
ER

PT J
AU ter Beek, MH
   Legay, A
AF ter Beek, Maurice H.
   Legay, Axel
TI Quantitative variability modelling and analysis
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Variability; Quantitative modelling; Quantitative analysis; QSPL
ID PRODUCT; CHECKING
AB Over the last decade, the explicit introduction and management of variability in the development cycle of (software) systems has led to a plethora of modelling and analysis techniques tailored to deal with such highly configurable (variational) systems. Most of the work on Variability Modelling and Analysis, however, focusses on qualitative (i.e. functional) requirements. This Special Section of the Foundations for Mastering Change track of the International Journal on Software Tools for Technology Transfer on Quantitative Variability Modelling and Analysis aims to provide a comprehensive overview of the latest approaches to Variability Modelling and Analysis techniques which specifically take quantities into account. In this paper, we first introduce Quantitative Variability Modelling and Analysis, after which we briefly describe the contents of the six papers that constitute this Special Section.
C1 [ter Beek, Maurice H.] ISTI CNR, Pisa, Italy.
   [Legay, Axel] Catholic Univ Louvain, Louvain La Neuve, Belgium.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); Universite
   Catholique Louvain
RP ter Beek, MH (corresponding author), ISTI CNR, Pisa, Italy.
EM maurice.terbeek@isti.cnr.it
RI Beek, Maurice H ter/N-5563-2015
OI Beek, Maurice H ter/0000-0002-2930-6367
CR [Anonymous], 2014, Tools and Algorithms for the Construction and Analysis of Systems
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Asirelli P, 2011, LECT NOTES COMPUT SC, V6722, P44, DOI 10.1007/978-3-642-21461-5_3
   Basile D, 2018, QUANTITATIVE VARIABI, V2
   Borba P., 2013, DAGSTUHL REPORTS, V3, P144, DOI DOI 10.4230/DAGREP.3.2.144
   Chesta C, 2016, LECT NOTES COMPUT SC, V9953, P497, DOI 10.1007/978-3-319-47169-3_40
   Chrszon P, 2018, FORM ASP COMPUT, V30, P45, DOI 10.1007/s00165-017-0432-4
   Clarke D, 2011, ACM SIGPLAN NOTICES, V46, P13, DOI 10.1145/1942788.1868298
   Classen Andreas, 2012, International Journal on Software Tools for Technology Transfer, V14, P589, DOI 10.1007/s10009-012-0234-1
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Clements P., 2002, Software product lines
   Cordy M., 2018, QUANTITATIVE VARIABI, V2
   Cordy M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P141
   Cordy M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P472, DOI 10.1109/ICSE.2013.6606593
   Cordy Maxime., 2012, Proceedings of the 16th International Software Product Line Conference (SPLC'12), P66, DOI DOI 10.1145/2362536
   Damiani F., 2018, QUANTITATIVE VARIABI, V2
   Dimovski A, 2017, INT J SOFTW TOOLS TE, V19, P585, DOI 10.1007/s10009-016-0425-2
   Erwig M, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063245
   Fahrenberg U., 2018, QUANTITATIVE VARIABI, V2
   Ghezzi C, 2013, INFORM SOFTWARE TECH, V55, P508, DOI 10.1016/j.infsof.2012.07.017
   Gruler A, 2008, LECT NOTES COMPUT SC, V5051, P113, DOI 10.1007/978-3-540-68863-1_8
   Herrmann L., 2018, QUANTITATIVE VARIABI, V2
   Kowal M, 2014, LECT NOTES COMPUT SC, V8411, P94
   Lauenroth K, 2009, IEEE INT CONF AUTOM, P269, DOI 10.1109/ASE.2009.16
   Legarra A., 2017, P 22 C ASS ADVANCEME, P2
   Lochau M, 2016, J LOG ALGEBR METHODS, V85, P245, DOI 10.1016/j.jlamp.2015.09.004
   Luthmann L., 2018, QUANTITATIVE VARIABI, V2
   Muschevici R, 2016, SOFTW SYST MODEL, V15, P1181, DOI 10.1007/s10270-015-0475-z
   Nouri A, 2016, ACM T EMBED COMPUT S, V15, DOI 10.1145/2885498
   Nyman U, 2007, LECT NOTES COMPUT SC, V4421, P64
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rodrigues GN, 2015, IEEE HI ASS SYS ENGR, P173, DOI 10.1109/HASE.2015.34
   Schaefer I, 2014, LECT NOTES COMPUT SC, V8802, P253
   ter Beek Maurice H., 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P450, DOI 10.1007/978-3-642-32759-9_36
   ter Beek M.H., 2014, P 2 FME WORKSHOP FOR, P31, DOI [10.1145/2593489.2593493, DOI 10.1145/2593489.2593493]
   ter Beek MH, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302349
   ter Beek MH, 2020, IEEE T SOFTWARE ENG, V46, P321, DOI 10.1109/TSE.2018.2853726
   ter Beek MH, 2017, LECT NOTES COMPUT SC, V10202, P387, DOI 10.1007/978-3-662-54494-5_23
   ter Beek MH, 2016, LECT NOTES COMPUT SC, V9952, P856, DOI 10.1007/978-3-319-47166-2_59
   ter Beek MH, 2016, LECT NOTES COMPUT SC, V9952, P114, DOI 10.1007/978-3-319-47166-2_8
   ter Beek MH, 2015, LECT NOTES COMPUT SC, V9509, P266, DOI 10.1007/978-3-662-49224-6_22
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P287, DOI 10.1016/j.jlamp.2015.11.006
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P123, DOI 10.1016/j.jlamp.2015.09.006
   ter Beek MH, 2019, P 23 INT SYST SOFTW, P39
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Tribastone M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P82, DOI 10.1145/2648511.2648520
   Vandin A, 2018, LECT NOTES COMPUT SC, V10951, P329, DOI 10.1007/978-3-319-95582-7_19
NR 47
TC 2
Z9 2
U1 2
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2019
VL 21
IS 6
SI SI
BP 607
EP 612
DI 10.1007/s10009-019-00535-1
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JL0QK
UT WOS:000495240000001
DA 2024-07-18
ER

PT J
AU Couto, LD
   Tran-Jorgensen, PWV
   Nilsson, RS
   Larsen, PG
AF Couto, Luis Diogo
   Tran-Jorgensen, Peter W. V.
   Nilsson, Rene S.
   Larsen, Peter Gorm
TI Enabling continuous integration in a formal methods setting
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE VDM; Modelling; Simulation; Code generation; Test automation; Continuous
   integration; DevOps
AB In modern software development, the practices of continuous integration and DevOps are widely used to increase delivery speed and reduce the time it takes to deploy software changes to production. If formal method tools cannot be efficiently integrated in a DevOps paradigm, then their impact on software development will be reduced. In this paper, we present work addressing this issue through a series of extensions for the Overture tool supporting the Vienna Development Method. These extensions enable Overture to be used in a DevOps setting, through continuous integration and validation of models and generated code via integration with the Jenkins automation server. We frame the integration of formal methods and DevOps in a series of principles, demonstrate the value of this integration through a case study, and reflect on our experiences using formal methods and DevOps in an industrial setting. We hope that this work can help other formal method practitioners integrate their tools with DevOps.
C1 [Couto, Luis Diogo] United Technol Res Ctr, Cork, Ireland.
   [Tran-Jorgensen, Peter W. V.; Larsen, Peter Gorm] Aarhus Univ, DIGIT, Aarhus, Denmark.
   [Nilsson, Rene S.] AGCO AS, Randers, Denmark.
C3 Raytheon Technologies; Aarhus University
RP Tran-Jorgensen, PWV (corresponding author), Aarhus Univ, DIGIT, Aarhus, Denmark.
EM CoutoLD@utrc.utc.com; pvj@eng.au.dk; rene.nilsson@agcocorp.com;
   pgl@eng.au.dk
OI Larsen, Peter Gorm/0000-0002-4589-1500
FU Innovation Fund Denmark
FX 33We thank the anonymous reviewers for their constructive comments,
   which helped us improve the manuscript. The authors would also like to
   thank Nick Battle for valuable feedback on earlier versions of this
   paper. Finally, we would like to thank Innovation Fund Denmark for
   supporting parts of this work.
CR Aichernig B. K., 1997, FME '97: Industrial Applications and Strengthened Foundations of Formal Methods. 4th International Symposium of Formal Methods Europe. Proceedings, P338
   Amazon.com Inc, AM SIMPL STOR SERV S
   [Anonymous], 2016, DSPACE TARGETLINK PR
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Chudnov A, 2018, LECT NOTES COMPUT SC, V10982, P430, DOI 10.1007/978-3-319-96142-2_26
   Cook B, 2018, LECT NOTES COMPUT SC, V10981, P38, DOI 10.1007/978-3-319-96145-3_3
   Couto L.D., 2016, P 6 INT C SIM MOD ME
   Couto L.D., 2018, 2 INT C PERS TECHN
   Couto LD, 2015, ELECTRON P THEOR COM, P14, DOI 10.4204/EPTCS.187.2
   Dijkstra EW., 1959, NUMER MATH, V1, P269, DOI [10.1007/BF01386390, DOI 10.1007/BF01386390]
   Fitzgerald J. S., 1995, WORKSH FORM METH APP
   Fowler M., 2006, Continuous integration
   Frohlich B., 1996, FME '96: Industrial Benefit and Advances in Formal Methods. Third International Symposium of Formal Methods Europe. Proceedings, P179
   Gallasch G.E., 2001, Comms/CPN: A communication infrastruc- ture for external communication with design/CPN
   GormLarsen P., 2010, PROC FM AM, P13
   Hasanagi M, 2018, SOFTWARE PRACT EXPER, V48, P478
   Jones CB, 1999, LECT NOTES COMPUT SC, V1708, P28
   Jorgensen P. W. V., 2014, P 12 OV WORKSH
   Knight J.C., 2001, P 12 INT S SOFTW REL
   Kumar VS, 2018, LECT N EDUC TECHNOL, P121, DOI 10.1007/978-981-10-8743-1_17
   Larsen P.G., 2010, TECHNICAL REPORT
   Larsen PG, 1996, IEEE SOFTWARE, V13, P48, DOI 10.1109/52.493020
   Macedo HD, 2019, COMPUTERS, V8, DOI 10.3390/computers8020031
   Nielsen C.B., 2012, ABSTRACT STATE MACHI
   O'Hearn P, 2018, LICS'18: PROCEEDINGS OF THE 33RD ANNUAL ACM/IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P13, DOI 10.1145/3209108.3209109
   Ribeiro A., 2010, 12 INT C FORM ENG ME
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   SMITH PR, 1999, VDM PRACTICE
   The VDM Tool Group, 2008, TECHNICAL REPORT
   Tran-Jorgensen P.W., 2018, P 16 OV WORKSH OXF U, P7
   Tran-Jorgensen PWV, 2018, INT J SOFTW TOOLS TE, V20, P211, DOI 10.1007/s10009-017-0448-3
   Tran-JOrgensen PWV, 2016, THESIS
   Vermolen S., 2010, P 25 S APPL COMP SAC
   Wassyng A., 2006, International Journal on Software Tools for Technology Transfer, V8, P337, DOI 10.1007/s10009-005-0209-6
   Westergaard M, 2009, LECT NOTES COMPUT SC, V5606, P313, DOI 10.1007/978-3-642-02424-5_19
NR 35
TC 1
Z9 2
U1 0
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2020
VL 22
IS 6
SI SI
BP 667
EP 683
DI 10.1007/s10009-019-00546-y
EA OCT 2019
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OQ9JV
UT WOS:000492646400001
DA 2024-07-18
ER

PT J
AU Valmari, A
   Vogler, W
AF Valmari, Antti
   Vogler, Walter
TI Fair testing and stubborn sets
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 23rd International SPIN Symposium on Model Checking of Software (SPIN)
CY APR 07-08, 2016
CL Eindhoven, NETHERLANDS
DE Partial order methods; Stubborn sets; Fairness; Progress; Fair testing
   equivalence
ID PARTIAL-ORDER REDUCTION
AB Partial order methods alleviate state explosion by considering only a subset of actions in each constructed state. The choice of the subset depends on the properties that the method promises to preserve. Many methods have been developed ranging from deadlock-preserving to CTL*-preserving and divergence-sensitive branching bisimilarity preserving. The less the method preserves, the smaller state spaces it constructs. Fair testing equivalence unifies deadlocks with livelocks that cannot be exited and ignores the other livelocks. It is the weakest congruence that preserves whether or not the system may enter a livelock that it cannot leave. We prove that a method that was designed for trace equivalence also preserves fair testing equivalence. We demonstrate its effectiveness on a protocol with a connection and data transfer phase. This is the first practical partial order method that deals with a practical fairness assumption.
C1 [Valmari, Antti] Tampere Univ Technol, Dept Math, POB 553, FIN-33101 Tampere, Finland.
   [Vogler, Walter] Univ Augsburg, Inst Informat, D-86135 Augsburg, Germany.
C3 Tampere University; University of Augsburg
RP Valmari, A (corresponding author), Tampere Univ Technol, Dept Math, POB 553, FIN-33101 Tampere, Finland.
EM antti.valmari@jyu.fi; walter.vogler@informatik.uni-augsburg.de
RI Valmari, Antti/G-4239-2014
OI Valmari, Antti/0000-0002-5022-1624
CR Abdulla P, 2014, ACM SIGPLAN NOTICES, V49, P373, DOI 10.1145/2535838.2535845
   BARTLETT KA, 1969, COMMUN ACM, V12, P260, DOI 10.1145/362946.362970
   Clarke EM, 1999, MODEL CHECKING, P1
   Esparza J., 2008, Monographs in Theoretical Computer Science. An EATCS Series
   Evangelista Sami, 2010, International Journal on Software Tools for Technology Transfer, V12, P155, DOI 10.1007/s10009-010-0137-y
   EVE J, 1977, ACTA INFORM, V8, P303, DOI 10.1007/BF00271339
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Gabow HN, 2000, INFORM PROCESS LETT, V74, P107, DOI 10.1016/S0020-0190(00)00051-X
   Gerth R., 1995, Proceedings Third Israel Symposium on the Theory of Computing and Systems, P130, DOI 10.1109/ISTCS.1995.377038
   Godefroid P., 1990, DIMACS SERIES DISCRE, V3, P321, DOI [10.1090/dimacs/003/21, DOI 10.1090/DIMACS/003/21]
   Godefroid P., 1996, Lecture Notes in Computer Science, V1032
   Kastenberg H, 2008, LECT NOTES COMPUT SC, V5201, P233, DOI 10.1007/978-3-540-85361-9_21
   Laarman A, 2016, INT J SOFTW TOOLS TE, V18, P427, DOI 10.1007/s10009-014-0363-9
   Lauterburg S, 2010, LECT NOTES COMPUT SC, V6013, P308, DOI 10.1007/978-3-642-12029-9_22
   Manna Z., 1992, The temporal logic of reactive and concurrent systems-specification, DOI DOI 10.1007/978-1-4612-0931-7
   MAZURKIEWICZ A, 1987, LECT NOTES COMPUT SC, V255, P279
   McMillan KennethL., 1993, CAV 92 P 4 INT WORKS, P164, DOI [10.1007/3-540-56496-914, DOI 10.1007/3-540-56496-914]
   Milner R., 1989, Communication and concurrency
   Peled D., 1993, Computer Aided Verification. 5th International Conference, CAV '93 Proceedings, P409
   Peled D.A., 1996, DIMACS SERIES SERIES, V29, P233
   Rensink A, 2007, INFORM COMPUT, V205, P125, DOI 10.1016/j.ic.2006.06.002
   Rodriguez C., 2015, CONCUR LIPICS, V42, P456, DOI 10.4230/LIPIcs.CONCUR.2015.456
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Valmari Antti, 2016, Model-Checking Software. 23rd International Symposium, SPIN 2016, co-located with ETAPS 2016. Proceedings: LNCS 9641, P225, DOI 10.1007/978-3-319-32582-8_16
   Valmari A., 1988, Application and Theory of Petri Nets. 9th European Workshop, P95
   Valmari A., 1996, Proceedings of the Fourth Euromicro Workshop on Parallel and Distributed Processing - PDP '96, P187, DOI 10.1109/EMPDP.1996.500586
   Valmari A., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P429
   Valmari A., 1992, A19924 U HELS DEP CO
   Valmari A., 1988, TAMPERE U TECHNOLOGY, V55
   Valmari A., 2017, LECT NOTES COMPUTER, P246, DOI DOI 10.1007/978-3-319-51046-013
   Valmari A., 1996, ACM AMS DIMACS SERIE, P213
   Valmari A., 2017, LECT NOTES COMPUTER, P160
   Valmari A, 2017, ACM T EMBED COMPUT S, V16, DOI 10.1145/3012279
   Valmari A, 2016, INT CONF APPL CONCUR, P25, DOI 10.1109/ACSD.2016.15
   Valmari A, 2015, ACTA INFORM, V52, P207, DOI 10.1007/s00236-015-0217-2
   Valmari A, 2011, FUND INFORM, V113, P377, DOI 10.3233/FI-2011-613
   Valmari Antti, 2016, CEUR WORKSHOP P, V1591, P213
   Valmari Antti, 2015, P 14 S PROGR LANG SO, V1525, P91
   Vogler W., 1992, LECT NOTES COMPUTER, V625, DOI [10.1007/3-540-55767-9, DOI 10.1007/3-540-55767-9]
NR 40
TC 5
Z9 5
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2018
VL 20
IS 5
SI SI
BP 589
EP 610
DI 10.1007/s10009-017-0481-2
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GQ7TL
UT WOS:000441949300007
DA 2024-07-18
ER

PT J
AU Sinnott, RO
   Voorsluys, W
AF Sinnott, R. O.
   Voorsluys, W.
TI A scalable Cloud-based system for data-intensive spatial analysis
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE e-Infrastructure; Urban research; Cloud computing; Geospatial systems;
   Spatial analysis
ID ARCHITECTURE
AB Advances in Cloud computing technology and the availability of affordable and easy to use Cloud services are enabling a multitude of scientific applications to use these resources as primary or secondary computing infrastructure. The urban and built environment research domain is one area that can benefit greatly from Cloud computing. The global population growth and increase in the size and population of cities raise many challenges for governments, planners and researchers alike. The Australian Urban Research Infrastructure Network (AURIN-http://www.aurin.org.au) project has been tasked with developing an advanced platform (e-Infrastructure) across Australia to tackle these challenges. The platform leverages large-scale Cloud resources to provide federated data access to, at present over 1100 data sets from major and often definitive government and industry data-rich organisations, and for scalable data processing and visualisation. The original AURIN tools were developed using the object modelling system (OMS) and supported integrated workflows to define and enact/re-enact scientific processes. More recently the work has evolved to focus more on delivery of a workbench offering a rich range of tools delivered through an extensible workflow environment. In this paper, we provide the background to AURIN including the scientific drivers that are shaping the work and the realisation of the Cloud-based AURIN environment. We focus in particular on the workflow environment and show how it seamlessly utilizes the Cloud for urban research processes focused especially on data-intensive spatial analysis. We illustrate the utilisation of this workflow environment across a range of case studies reflecting urban research activities.
C1 [Sinnott, R. O.; Voorsluys, W.] Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic, Australia.
C3 University of Melbourne
RP Sinnott, RO (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic, Australia.
EM rsinnott@unimelb.edu.au
RI sinnott, richard/E-7197-2014
OI sinnott, richard/0000-0001-5998-222X
FU Australian Education Investment Fund SuperScience initiative
FX The AURIN project is funded through the Australian Education Investment
   Fund SuperScience initiative. The project began in July 2010 and is due
   to run to mid-2015. We gratefully acknowledge their support and the
   wider research community on their feedback. We are grateful to the rest
   of the AURIN team including those within the Melbourne eResearch Group
   (Dr. Glenn Jayaputera, Philip Greenwood, Luca Morandini, Dr. Ivo
   Widjaja, Sulman Sarwar, Dr. Marcos Nino-Ruiz, Dr. Hossein Pursultani,
   Christopher Bayliss, Ghazal Nogoorani, Gerson Galang, Andrew Bromage,
   Daghan Acay, DavisMarques, Rosana Rabanal), those within the AURIN
   Office (Jack Barton, Xavier Goldie, Chis Pettit, Bob Stimson, Stewart
   Wallace) and the wider network of AURIN collaborators. Map tiles in
   figures by Stamen Design (stamen.com) under CC BY 3.0
   (http://creativecommons.org/licenses/by/3.0).
CR [Anonymous], IEEE INT S BIG DAT S
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Barker A, 2008, LECT NOTES COMPUT SC, V4967, P746
   Deelman E., 2005, Scientific Programming, V13, P219
   Goecks J, 2010, GENOME BIOL, V11, DOI 10.1186/gb-2010-11-8-r86
   Hey A.J., 2003, DATA DELUGE SCI PERS
   Hey T, 2005, SCIENCE, V308, P817, DOI 10.1126/science.1110410
   Hirschheim R, 2010, MIS Q EXEC, V9, P37
   Hoffa Christina, 2008, 2008 IEEE Fourth International Conference on eScience, P640, DOI 10.1109/eScience.2008.167
   Javadi B, 2013, FUTURE GENER COMP SY, V29, P1826, DOI 10.1016/j.future.2013.01.008
   Marx V, 2013, NATURE, V498, P255, DOI 10.1038/498255a
   Papajorgji P, 2004, ECOL MODEL, V179, P61, DOI 10.1016/j.ecolmodel.2004.05.013
   Pettit C., 2015, CUPUM 2015 IN PRESS
   Shiers J, 2007, COMPUT PHYS COMMUN, V177, P219, DOI 10.1016/j.cpc.2007.02.021
   Sinnott R.O., 2011, IEEE E SCI C STOCKH
   Sinnott R.O., 2014, J CONCURRENCY CO APR, DOI [10.1002/cpe.3282, DOI 10.1002/CPE.3282]
   Sinnott RO, 2012, IEEE E SCI C CHIC US
   Stimson R., 2011, AUSTR URBAN RES INFR
   Widjaja I., 2013, INT J DIGITAL EARTH
   Wolstencroft K, 2013, NUCLEIC ACIDS RES, V41, pW557, DOI 10.1093/nar/gkt328
NR 20
TC 9
Z9 9
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2016
VL 18
IS 6
BP 587
EP 605
DI 10.1007/s10009-015-0398-6
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DY5YK
UT WOS:000385180700003
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Schrammel, P
   Melham, T
   Kroening, D
AF Schrammel, Peter
   Melham, Tom
   Kroening, Daniel
TI Generating test case chains for reactive systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Test case generation; Reactive systems; Test optimization; Bounded model
   checking
ID SEQUENCE; NUMBER
AB Testing of reactive systems is challenging because long input sequences are often needed to drive them into a state to test a desired feature. This is particularly problematic in on-target testing, where a system is tested in its real-life application environment and the amount of time required for resetting is high. This article presents an approach to discovering a test case chain-a single software execution that covers a group of test goals and minimizes overall test execution time. Our technique targets the scenario in which test goals for the requirements are given as safety properties. We give conditions for the existence and minimality of a single test case chain and minimize the number of test case chains if a single test case chain is infeasible. We report experimental results with our ChainCover tool for C code generated from Simulink models and compare it to state-of-the-art test suite generators.
C1 [Schrammel, Peter; Melham, Tom; Kroening, Daniel] Univ Oxford, Dept Comp Sci, Oxford, England.
C3 University of Oxford
RP Schrammel, P (corresponding author), Univ Oxford, Dept Comp Sci, Oxford, England.
EM peter.schrammel@cs.ox.ac.uk; tom.melham@cs.ox.ac.uk;
   daniel.kroening@cs.ox.ac.uk
RI Schrammel, Peter/AAJ-9990-2021
OI Schrammel, Peter/0000-0002-5713-1381; Kroening,
   Daniel/0000-0002-6681-5283
CR [Anonymous], BOSCH AUT HDB
   Biere A., 2002, ELECT NOTES THEOR CO, V66, P160, DOI [DOI 10.1016/S1571-0661(04)80410-9, 10.1016/S1571-0661(04)80410-9]
   BOYD SC, 1991, IEEE T SOFTWARE ENG, V17, P976, DOI 10.1109/32.92918
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   du Bousquet L., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P267, DOI 10.1109/ICSE.1999.841017
   Duale AY, 2004, IEEE T COMPUT, V53, P614, DOI 10.1109/TC.2004.1275300
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Een Niklas, 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P181
   FLOYD RW, 1962, COMMUN ACM, V5, P345, DOI 10.1145/367766.368168
   Fraser G, 2009, SOFTW TEST VERIF REL, V19, P215, DOI 10.1002/stvr.402
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Helsgaun K, 2000, EUR J OPER RES, V126, P106, DOI 10.1016/S0377-2217(99)00284-2
   Hierons RM, 2010, AUTOMAT SOFTW ENG, V17, P217, DOI 10.1007/s10515-009-0061-0
   Hierons RM, 2006, IEEE T COMPUT, V55, P618, DOI 10.1109/TC.2006.80
   Hierons RM, 2004, INFORM PROCESS LETT, V90, P287, DOI 10.1016/j.ipl.2004.03.003
   Holzer A, 2008, LECT NOTES COMPUT SC, V5123, P209
   Holzer A, 2009, LECT NOTES COMPUT SC, V5403, P151, DOI 10.1007/978-3-540-93900-9_15
   Jahier E., 2006, International Journal on Software Tools for Technology Transfer, V8, P517, DOI 10.1007/s10009-006-0023-9
   Jard C., 2005, International Journal on Software Tools for Technology Transfer, V7, P297, DOI 10.1007/s10009-004-0153-x
   Jourdan GV, 2009, 2009 24TH INTERNATIONAL SYMPOSIUM ON COMPUTER AND INFORMATION SCIENCES, P547
   Kalaji A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P230, DOI 10.1109/ICST.2009.29
   Kroening Daniel, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P381, DOI 10.1007/978-3-642-39799-8_26
   Kroening D, 2003, LECT NOTES COMPUT SC, V2575, P298
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Lee D, 1996, 1996 INTERNATIONAL CONFERENCE ON NETWORK PROTOCOLS, PROCEEDINGS, P66, DOI 10.1109/ICNP.1996.564905
   Meinke K, 2011, LECT NOTES COMPUT SC, V6706, P134, DOI 10.1007/978-3-642-21768-5_11
   Mori T., 2003, Systems and Computers in Japan, V34, P20, DOI 10.1002/scj.10482
   Núñez A, 2013, SOFT COMPUT, V17, P301, DOI 10.1007/s00500-012-0894-5
   Peleska J, 2011, LECT NOTES COMPUT SC, V6617, P298, DOI 10.1007/978-3-642-20398-5_22
   Petrenko A, 2013, IEEE ICST WORKSHOP, P198, DOI 10.1109/ICSTW.2013.31
   Petrenko Alexandre, 2012, International Journal on Software Tools for Technology Transfer, V14, P383, DOI 10.1007/s10009-012-0240-3
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   Petrenko A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P310, DOI 10.1109/ICST.2012.111
   Raymond P, 2008, EURASIP J EMBED SYST, DOI 10.1155/2008/753821
   Schrammel Peter, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P133, DOI 10.1007/978-3-642-41707-8_9
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   Tretmans J., 2008, LNCS, V4949, P1, DOI DOI 10.1007/978-3-540-78917-8_
   URAL H, 1991, IEEE T COMMUN, V39, P514, DOI 10.1109/26.81739
NR 41
TC 5
Z9 5
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2016
VL 18
IS 3
BP 319
EP 334
DI 10.1007/s10009-014-0358-6
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK5QH
UT WOS:000374974200006
OA hybrid
DA 2024-07-18
ER

PT J
AU Rubin, J
   Czarnecki, K
   Chechik, M
AF Rubin, Julia
   Czarnecki, Krzysztof
   Chechik, Marsha
TI Cloned product variants: from ad-hoc to managed software product lines
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software product lines; Legacy product lines; Cloned product variants;
   Industrial case studies
ID SOURCE CODE
AB We focus on the problem of managing a collection of related software product variants realized via cloning. By analyzing three industrial case studies of organizations with cloned product lines, we conclude that an efficient management of clones relies on both refactoring cloned variants into a single-copy product line representation and improving development experience when maintaining existing clones. We propose a framework that consists of seven conceptual operators for cloned product line management and show that these operators are adequate to realize development activities we observed in the analyzed case studies. We discuss options for implementing the operators and benefits of the operator-based view.
C1 [Rubin, Julia] IBM Res, Haifa, Israel.
   [Rubin, Julia; Chechik, Marsha] Univ Toronto, Toronto, ON, Canada.
   [Czarnecki, Krzysztof] Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
C3 International Business Machines (IBM); University of Toronto; University
   of Waterloo
RP Rubin, J (corresponding author), IBM Res, Haifa, Israel.
EM mjulia@cs.toronto.edu; kczarnec@gsd.uwaterloo.ca; chechik@cs.toronto.edu
CR Acher M, 2010, LECT NOTES COMPUT SC, V6138, P3, DOI 10.1007/978-3-642-13595-8_3
   [Anonymous], 2004, FAQ SHEET FEATURE IN
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2013, JOINT M EUR SOFTW EN, DOI DOI 10.1145/2491411.2491446
   [Anonymous], JPL
   [Anonymous], 2006, GAMMA 06, DOI DOI 10.1145/1138304.1138307
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Bayer J, 1999, LECT NOTES COMPUT SC, V1687, P446, DOI 10.1145/318774.319262
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Borba P, 2012, THEOR COMPUT SCI, V455, P2, DOI 10.1016/j.tcs.2012.01.031
   Chen K, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P31
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Davril Jean-Marc., 2013, JOINT M EUR SOFTW EN, P290, DOI DOI 10.1145/2491411.2491455
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Ferber S., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P235
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Goldin L., 1997, Automated Software Engineering, V4, P375, DOI 10.1023/A:1008617922496
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Herzig K., 2011, UNTANGLING CHA UNPUB
   Hetrick W. A., 2006, COMP 21 ACM SIGPLAN, P798, DOI DOI 10.1145/1176617.1176726
   HORWITZ S, 1990, SIGPLAN NOTICES, V25, P234, DOI 10.1145/93548.93574
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   Jepsen H. P., 2000, Software Architectures for Product Families. International Workshop IW-SAPF-3. Proceedings (Lecture Notes in Computer Science Vol.1951), P30
   Jepsen HP, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P203
   Jepsen HansPeter., 2009, Proc. of the International Software Product Line Conference (SPLC'09), P101
   Jia Liu, 2006, 28th International Conference on Software Engineering Proceedings, P112
   Kang KC, 2005, LECT NOTES COMPUT SC, V3714, P45
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kim K., 2007, 11 INT SOFTW PROD LI, P171
   Kolb R, 2006, J SOFTW MAINT EVOL-R, V18, P109, DOI 10.1002/smr.329
   Koschke R, 2009, SOFTWARE QUAL J, V17, P331, DOI 10.1007/s11219-009-9077-8
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   MacKenzie D., 2003, COMP MERGING FILES G
   Mende T, 2009, J SOFTW MAINT EVOL-R, V21, P143, DOI 10.1002/smr.402
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Murphy GC, 2001, PROC INT CONF SOFTW, P275, DOI 10.1109/ICSE.2001.919101
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Northrop L., 2006, AUSTR SOFTWARE ENG C
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rastkar S., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P103, DOI 10.1109/ICSM.2011.6080777
   Reason P., 2006, HDB ACTION RES
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Rubin J., 2013, SPLC, P101
   Rubin J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1233, DOI 10.1109/ICSE.2013.6606686
   Rubin J, 2013, LECT NOTES COMPUT SC, V7793, P83, DOI 10.1007/978-3-642-37057-1_7
   Rubin Julia., 2012, P SOFTWARE PRODUCT L, P156, DOI DOI 10.1145/2362536.2362558
   Ryssel U., 2011, P INT SOFTW PROD LIN
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   She S., 2011, P INT C SOFTW ENG IC
   She Steven., 2012, Proc. of the Workshop on VARiability for You (VARY) at the ACM/IEEE International Conference on Model Driven Engineering Languages and Systems (MODELS'12), P13
   Stephan M., 2011, TECHNICAL REPORT
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   WESTON N., 2009, P 13 INT SOFTWARE PR, P211
NR 56
TC 21
Z9 25
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2015
VL 17
IS 5
BP 627
EP 646
DI 10.1007/s10009-014-0347-9
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8LO
UT WOS:000360859500005
DA 2024-07-18
ER

PT J
AU Wang, F
AF Wang, Farn
TI Model-checking fair dense-time systems with propositions and events
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Distributed; Real-time; TCTL; Model-checking; Verification; Events;
   Fairness
ID REAL-TIME; TEMPORAL LOGIC; BRANCHING TIME; AUTOMATA; EXPRESSIVENESS
AB We propose a temporal logic, TECTLF, for the flexible specification of distributed real-time systems with constraints involving events, propositions, and fairness. We then present algorithms formodel-checking TECTLF formulas and a speed-up technique for refuting certain formulas. Finally, we report the implementation and experiment of the ideas in our tool, RED 8.
C1 Natl Taiwan Univ, Dept Elect Engn, Taipei 106, Taiwan.
C3 National Taiwan University
RP Wang, F (corresponding author), Natl Taiwan Univ, Dept Elect Engn, 1,Sec 4,Roosevelt Rd, Taipei 106, Taiwan.
EM farn@ntu.edu.tw
CR Aceto L, 1998, LECT NOTES COMPUT SC, V1384, P263, DOI 10.1007/BFb0054177
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1989, ANN IEEE SYMP FOUND, P164, DOI 10.1109/SFCS.1989.63473
   ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   ALUR R, 1993, INFORM COMPUT, V104, P35, DOI 10.1006/inco.1993.1025
   ALUR R, 1992, LECT NOTES COMPUT SC, V600, P74, DOI 10.1007/BFb0031988
   Barbuti R, 2004, ACTA INFORM, V40, P317, DOI 10.1007/s00236-003-0135-6
   Bryant R, 1986, IEEE T COMPUT C, VC-35
   BURCH JR, 1990, IEEE LICS
   Chaki S., 2004, LNCS, V2999
   Chandy K.M., 1988, PARALLEL PROGRAM DES
   CLARKE EM, 1981, LNCS
   Dill D. L., 1989, LNCS, V407
   EMERSON EA, 1987, SCI COMPUT PROGRAM, V8, P275, DOI 10.1016/0167-6423(87)90036-0
   EMERSON EA, 1986, J ACM, V33, P151, DOI 10.1145/4904.4999
   EMERSON EA, 1985, J COMPUT SYST SCI, V30, P1, DOI 10.1016/0022-0000(85)90001-7
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   HUTH M, 2001, ESOP
   JENSEN HE, 1996, 2 SPIN WORKSH
   Kindler E., 1998, LNCS, V1420
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Nicola R. D., 1995, J ACM, V42, P458
   Pnueli A., 1977, 18TH P ANN ACM S F C, P45
   Shaw A., 1992, IEEE T SOFTW ENG, V18
   SILBERSCHATZ A, 2004, OPERATING SYSTEM PRI
   Wang F., 2004, IN J SOFTW TOOLS TEC, V6
   Wang F., 2001, FORTE
   Wang F., 2000, 24 COMPSAC
   Wang F., 2006, IEEE T SOFTW ENG, V32
   WANG F, 2001, WORKSH REAL TIM TOOL
   Wang F., 2002, IEEE T COMPUT
   Wang F., 2000, LNCS, V1785
   Wang F., 2008, LNCS, V5311
   Wang F, 2011, REAL-TIME SYST, V47, P285, DOI 10.1007/s11241-011-9122-0
   Wang Farn, 2008, IEEE REAL TIM SYST S
   YOVINE S, 1997, INT J SOFTW TOOLS TE, V1
NR 37
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2015
VL 17
IS 2
BP 223
EP 243
DI 10.1007/s10009-014-0312-7
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7NI
UT WOS:000355682200007
DA 2024-07-18
ER

PT J
AU Bures, T
   Hnetynka, P
   Krulis, M
   Plasil, F
   Khalyeyev, D
   Hahner, S
   Seifermann, S
   Walter, M
   Heinrich, R
AF Bures, Tomas
   Hnetynka, Petr
   Krulis, Martin
   Plasil, Frantisek
   Khalyeyev, Danylo
   Hahner, Sebastian
   Seifermann, Stephan
   Walter, Maximilian
   Heinrich, Robert
TI Generating adaptation rule-specific neural networks
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Self-adaptive systems; Adaptation rules; Machine learning; Neural
   networks
AB There have been a number of approaches to employ neural networks in self-adaptive systems; in many cases, generic neural networks and deep learning are utilized for this purpose. When this approach is to be applied to improve an adaptation process initially driven by logical adaptation rules, the problem is that (1) these rules represent a significant and tested body of domain knowledge, which may be lost if they are replaced by a neural network, and (2) the learning process is inherently demanding given the black-box nature and the number of weights in generic neural networks to be trained. In this paper, we introduce the rule-specific neural network method that makes it possible to transform the guard of an adaptation rule into a rule-specific neural network, the composition of which is driven by the structure of the logical predicates in the guard. Our experiments confirmed that the black box effect is eliminated, the number of weights is significantly reduced, and much faster learning is achieved whilst the accuracy is preserved. This text is an extended version of the paper presented at the ISOLA 2022 conference (Bures et al. in Proceedings of ISOLA 2022, Rhodes, Greece, pp. 215-230, 2022).
C1 [Bures, Tomas; Hnetynka, Petr; Krulis, Martin; Plasil, Frantisek; Khalyeyev, Danylo] Charles Univ Prague, Prague, Czech Republic.
   [Hahner, Sebastian; Seifermann, Stephan; Walter, Maximilian; Heinrich, Robert] Karlsruhe Inst Technol KIT, Karlsruhe, Germany.
C3 Charles University Prague; Helmholtz Association; Karlsruhe Institute of
   Technology
RP Bures, T (corresponding author), Charles Univ Prague, Prague, Czech Republic.
EM bures@d3s.mff.cuni.cz; hnetynka@d3s.mff.cuni.cz; krulis@d3s.mff.cuni.cz;
   plasil@d3s.mff.cuni.cz; khalyeyev@d3s.mff.cuni.cz;
   sebastian.hahner@kit.edu; stephan.seifermann@kit.edu;
   maximilian.walter@kit.edu; robert.heinrich@kit.edu
RI Bures, Tomas/G-1821-2014; Kruliš, Martin/D-6454-2017
OI Hahner, Sebastian/0000-0003-3450-0508
FU DFG (German Research Foundation) [432576552, HE8596/1-1]; Czech Science
   Foundation [20-24814J]; Charles University institutional funding [SVV
   260698/2023]; Helmholtz Association (HGF); KASTEL Security Research
   Labs; Charles University Grant Agency [408622]
FX This work has been funded by the DFG (German Research Foundation) -
   project number 432576552, HE8596/1-1 (FluidTrust), supported by the
   Czech Science Foundation project 20-24814J, partially supported by
   Charles University institutional funding SVV 260698/2023 and funding
   from the topic Engineering Secure Systems <EM><STRONG> </STRONG></EM>of
   the Helmholtz Association (HGF) and by KASTEL Security Research Labs,
   and partially supported by the Charles University Grant Agency project
   408622.
CR Al-Ali R., 2018, 1000085169 KARLSR I
   Anaya I.D.P., 2014, PROC SEAMS 2014
   Bierzynski K., 2019, SMART SYSTEMS INTEGR
   Bures Tomas, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P215, DOI 10.1007/978-3-031-19759-8_14
   Chen T, 2017, IEEE T SOFTWARE ENG, V43, P453, DOI 10.1109/TSE.2016.2608826
   Gabor T, 2020, INT J SOFTW TOOLS TE, V22, P457, DOI 10.1007/s10009-020-00560-5
   Gerostathopoulos I., 2020, P ISOLA 2020
   Ghahremani S, 2018, PR INT CONF AUTONOM, P187, DOI 10.1109/ICAC.2018.00031
   github, PAP RES REPL PACK
   Goh J., 2017, PROC HASE 2017
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Jamshidi P, 2016, IEEE CLOUD COMPUT, V3, P50, DOI 10.1109/MCC.2016.66
   Kolen JF, 2009, A Field Guide to Dynamical Recurrent Networks, DOI [DOI 10.1109/9780470544037.CH14, 10.1109/9780470544037]
   Kravchik M, 2018, CPS-SPC'18: PROCEEDINGS OF THE 2018 WORKSHOP ON CYBER-PHYSICAL SYSTEMS SECURITY AND PRIVACY, P72, DOI 10.1145/3264888.3264896
   Li H., 2001, PROC 8 INT C INFORM
   Luo YP, 2021, AAAI CONF ARTIF INTE, V35, P2286
   Mandziuk J., 1993, Optical Memory & Neural Networks, V2, P17
   Mohammadi Rouzbahani H., 2020, Handbook of Big Data Privacy
   Muccini H, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P242, DOI 10.1109/ICSA-C.2019.00050
   Riegel R., 2020, CoRR
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saputri TRD, 2020, IEEE ACCESS, V8, P205948, DOI 10.1109/ACCESS.2020.3036037
   Schwenker F, 2001, NEURAL NETWORKS, V14, P439, DOI 10.1016/S0893-6080(01)00027-2
   Shi S., 2019, NEURAL LOGIC NETWORK
   Stein A, 2018, 2018 IEEE 3RD INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P204, DOI 10.1109/FAS-W.2018.00048
   Su Y, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2828, DOI 10.1145/3292500.3330672
   Van Der Donckt J, 2020, I W S E ADAP SM SYS, P20, DOI 10.1145/3387939.3391605
   Weyns D, 2021, 2021 INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2021), P217, DOI 10.1109/SEAMS51251.2021.00036
   Zhao TQ, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON AUTOMATIC COMPUTING (ICAC), P103, DOI 10.1109/ICAC.2017.47
NR 29
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2023
VL 25
IS 5-6
BP 733
EP 746
DI 10.1007/s10009-023-00725-y
EA NOV 2023
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AB9N8
UT WOS:001098098200001
DA 2024-07-18
ER

PT J
AU Nickovic, D
   Qin, X
   Ferrère, T
   Mateis, C
   Deshmukh, J
AF Nickovic, Dejan
   Qin, Xin
   Ferrere, Thomas
   Mateis, Cristinel
   Deshmukh, Jyotirmoy
TI Specifying and detecting temporal patterns with shape expressions
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Statistical regression; Pattern matching; Regular expressions; Runtime
   monitoring
AB Modern cyber-physical systems (CPS) and the Internet of things (IoT) are data factories generating, measuring and recording huge amounts of time series. The useful information in time series is usually present in the form of sequential patterns. We propose shape expressions as a declarative language for specification and extraction of rich temporal patterns from possibly noisy data. Shape expressions are regular expressions with arbitrary (linear, exponential, sinusoidal, etc.) shapes with parameters as atomic predicates and additional constraints on these parameters. We associate with shape expressions novel noisy semantics that combines regular expression matching semantics with statistical regression. We study essential properties of the language and propose an efficient heuristic for approximate matching of shape expressions. We demonstrate the applicability of this technique on two case studies from the health and the avionics domains.
C1 [Nickovic, Dejan; Mateis, Cristinel] AIT Austrian Inst Technol, Vienna, Austria.
   [Qin, Xin; Deshmukh, Jyotirmoy] Univ Southern Calif, Los Angeles, CA 90007 USA.
   [Ferrere, Thomas] Imaginat Technol, Dacorum, England.
C3 Austrian Institute of Technology (AIT); University of Southern
   California
RP Nickovic, D (corresponding author), AIT Austrian Inst Technol, Vienna, Austria.
EM dejan.nickovic@ait.ac.at
OI Mateis, Cristinel/0000-0001-7502-0688; Nickovic,
   Dejan/0000-0001-5468-0396
FU Austrian Science Fund (FWF) [S11402-N23, Z211-N23]; Productive 4.0
   project [ECSEL 737459]; National Science Foundation under the FMitF
   [CCF-1837131]
FX This research was supported by the Austrian Science Fund (FWF) under
   grants S11402-N23 (RiSE/SHiNE) and Z211-N23 (Wittgenstein Award), by the
   Productive 4.0 project (ECSEL 737459) and by the National Science
   Foundation under the FMitF grant CCF-1837131.
CR Abbas H, 2017, LECT N BIOINFORMAT, V10545, P23, DOI 10.1007/978-3-319-67471-1_2
   Alur R, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290363
   Alur R, 2016, LECT NOTES COMPUT SC, V9632, P15, DOI 10.1007/978-3-662-49498-1_2
   André É, 2018, IEEE INT C ENG COMP, P10, DOI 10.1109/ICECCS2018.2018.00010
   [Anonymous], 1977, 1811977 ANSIIEEE, DOI [10.1109/IEEESTD.1977.81097, DOI 10.1109/IEEESTD.1977.81097]
   Asarin E, 1997, IEEE S LOG, P160, DOI 10.1109/LICS.1997.614944
   Asarin E, 2002, J ACM, V49, P172, DOI 10.1145/506147.506151
   Bakhirkin A, 2018, LECT NOTES COMPUT SC, V11022, P215, DOI 10.1007/978-3-030-00151-3_13
   Bakhirkin A, 2017, LECT NOTES COMPUT SC, V10419, P189, DOI 10.1007/978-3-319-65765-3_11
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Faymonville P, 2016, LECT NOTES COMPUT SC, V10012, P152, DOI 10.1007/978-3-319-46982-9_10
   Geurts P., 2001, European Conference on Principles of Data Mining and Knowledge Discovery, P115, DOI [10.1007/3-540-44794-610, DOI 10.1007/3-540-44794-610, DOI 10.1007/3-540-44794-6_10]
   Ghidella Jason, 2005, AIAA MOD SIM TECHN C, P5886, DOI DOI 10.2514/6.2005-5886
   Goldberger AL, 2000, CIRCULATION, V101, pE215, DOI 10.1161/01.CIR.101.23.e215
   Gorostiaga F, 2018, LECT NOTES COMPUT SC, V11237, P282, DOI 10.1007/978-3-030-03769-7_16
   Halle S., 2017, PROC INT WORKSHOP CO, P81, DOI DOI 10.29007/4CTH
   Leucker M, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1925, DOI 10.1145/3167132.3167338
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Mamouras K, 2017, ACM SIGPLAN NOTICES, V52, P693, DOI [10.1145/3140587.3062369, 10.1145/3062341.3062369]
   Nickovic D, 2019, LECT NOTES COMPUT SC, V11757, P292, DOI 10.1007/978-3-030-32079-9_17
   Olszewski R. T., 2001, Generalized feature extraction for structural pattern recognition in time-series data
   Rakthanmanon Thanawin, 2012, KDD, V2012, P262, DOI 10.1145/2339530.2339576
   Ulus D., 2014, Formal Modeling and Analysis of Timed Systems, P222, DOI DOI 10.1007/978-3-319-10512-3_16
   Ulus D, 2017, LECT NOTES COMPUT SC, V10426, P329, DOI 10.1007/978-3-319-63387-9_16
   Ulus D, 2016, LECT NOTES COMPUT SC, V9636, P736, DOI 10.1007/978-3-662-49674-9_47
   Waga M, 2018, IEEE T COMPUT AID D, V37, P2649, DOI 10.1109/TCAD.2018.2857358
   Waga M, 2017, LECT NOTES COMPUT SC, V10419, P224, DOI 10.1007/978-3-319-65765-3_13
   Waga M, 2018, 2018 IEEE 3RD WORKSHOP ON MONITORING AND TESTING OF CYBER-PHYSICAL SYSTEMS (MT-CPS 2018), P14, DOI 10.1109/MT-CPS.2018.00014
   Wenig F, 2017, PROC IEEE INT SYMP, P1507, DOI 10.1109/ISIE.2017.8001469
   Ye LX, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P947
NR 30
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2021
VL 23
IS 4
SI SI
BP 565
EP 577
DI 10.1007/s10009-021-00627-x
EA JUN 2021
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WK6KY
UT WOS:000668051300001
DA 2024-07-18
ER

PT J
AU Enevoldsen, S
   Larsen, KG
   Mariegaard, A
   Srba, J
AF Enevoldsen, Soren
   Larsen, Kim G.
   Mariegaard, Anders
   Srba, Jiri
TI Dependency graphs with applications to verification
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Dependency graphs; Verification; Fixed-point computation; On-the-fly
   algorithms
ID HENNESSY-MILNER LOGIC; LOCAL MODEL CHECKING; PROOF SYSTEMS; LINEAR-TIME;
   ALGORITHMS; DISCRETE
AB Dependency graphs, as introduced more than 20 years ago by Liu and Smolka, are oriented graphs with hyperedges that connect nodes with sets of target nodes in order to represent causal dependencies in the graph. Numerous verification problems can be reduced into the problem of computing a minimum ormaximum fixed-point assignment on dependency graphs. In the original definition, assignments link each node with a Boolean value; however, in the recent work the assignment domains have been extended to more general setting, even including infinite domains. In this survey paper, we present an overview of the recent results on extensions of dependency graphs in order to deal with verification of quantitative, probabilistic, parameterized and timed systems.
C1 [Enevoldsen, Soren; Larsen, Kim G.; Mariegaard, Anders; Srba, Jiri] Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
C3 Aalborg University
RP Srba, J (corresponding author), Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
EM srba@cs.aau.dk
OI Srba, Jiri/0000-0001-5551-6547; Guldstrand Larsen,
   Kim/0000-0002-5953-3384
FU ERC Advanced Grant LASSO
FX We would like to thank to Hubert Garavel and Radu Mateescu for sharing
   the French history of on-the-fly model checking with us. The work of the
   second author has taken place in the context of the ERC Advanced Grant
   LASSO.
CR ALGAYRES B, 1993, COMPUT NETWORKS ISDN, V25, P779, DOI 10.1016/0169-7552(93)90048-9
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ANDERSEN HR, 1992, LECT NOTES COMPUT SC, V575, P24
   ANDERSEN HR, 1992, LECT NOTES COMPUT SC, V582, P1
   Andersen JR, 2015, LECT NOTES COMPUT SC, V9399, P573, DOI 10.1007/978-3-319-25150-9_33
   [Anonymous], 1980, LNCS
   Asarin E, 1995, LECT NOTES COMPUT SC, V999, P1
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Balcazar J., 1992, Formal Aspects of Computing, V4, P638, DOI 10.1007/BF03180566
   Behrmann G, 2007, LECT NOTES COMPUT SC, V4590, P121
   Bonneland F.M., 2019, CONCUR 19
   Borjesson A., 1992, FORMAL DESCRIPTION T, V10, P449
   BRADFIELD J, 1992, THEOR COMPUT SCI, V96, P157, DOI 10.1016/0304-3975(92)90183-G
   Cassez F, 2005, LECT NOTES COMPUT SC, V3653, P66, DOI 10.1007/11539452_9
   Cassez F, 2009, LECT NOTES COMPUT SC, V5469, P90, DOI 10.1007/978-3-642-00602-9_7
   Cerans K., 1993, Computer Aided Verification. 5th International Conference, CAV '93 Proceedings, P253
   Christoffersen P, 2015, OPEN ACCESS SERIES I, V44, P77, DOI [10.4230/OASIcs.SynCoP.2015.77, DOI 10.4230/OASICS.SYNCOP.2015.77]
   CLEAVELAND R, 1990, LECT NOTES COMPUT SC, V407, P24
   CLEAVELAND R, 1991, LECT NOTES COMPUT SC, V510, P127
   Dalsgaard AE, 2018, FUND INFORM, V161, P351, DOI 10.3233/FI-2018-1707
   Dalsgaard AE, 2017, LECT NOTES COMPUT SC, V10258, P139, DOI 10.1007/978-3-319-57861-3_10
   Dalsgaard AE, 2016, LECT NOTES COMPUT SC, V9984, P197, DOI 10.1007/978-3-319-47677-3_13
   David Alexandre, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P206, DOI 10.1007/978-3-662-46681-0_16
   David A., 2010, LECT NOTES COMPUTER, V6957, P336, DOI [10.1007/978-3-642-25271-6_18, DOI 10.1007/978-3-642-25271-6_18]
   David A, 2012, LECT NOTES COMPUT SC, V7214, P492, DOI 10.1007/978-3-642-28756-5_36
   Enevoldsen S, 2019, LECT NOTES COMPUT SC, V11636, P1, DOI 10.1007/978-3-030-30923-7_1
   Enevoldsen S, 2019, LECT NOTES COMPUT SC, V11427, P316, DOI 10.1007/978-3-030-17462-0_18
   Godskesen J., 1989, TECHNICAL REPORT
   Groote JF, 2004, LECT NOTES COMPUT SC, V3170, P308
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Jensen Jonas Finnemann, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P178, DOI 10.1007/978-3-642-39176-7_12
   Jensen JF, 2016, INT J SOFTW TOOLS TE, V18, P409, DOI 10.1007/s10009-014-0359-5
   Jensen MC, 2019, LECT NOTES COMPUT SC, V11460, P298, DOI 10.1007/978-3-030-20652-9_20
   Jensen PG, 2018, INT J SOFTW TOOLS TE, V20, P529, DOI 10.1007/s10009-017-0473-2
   Karra SL, 2019, LECT NOTES COMPUT SC, V11495, P106, DOI 10.1007/978-3-030-18744-6_7
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   LARSEN KG, 1990, THEOR COMPUT SCI, V72, P265, DOI 10.1016/0304-3975(90)90038-J
   LARSEN KG, 1988, LECT NOTES COMPUT SC, V299, P215
   Larsen KG, 2015, LECT NOTES COMPUT SC, V9360, P260, DOI 10.1007/978-3-319-23506-6_17
   Liu XX, 1998, LECT NOTES COMPUT SC, V1443, P53
   Mariegaard A., 2015, THESIS
   Mariegaard A, 2017, LECT NOTES COMPUT SC, V10419, P153, DOI 10.1007/978-3-319-65765-3_9
   Mateescu R, 2000, LECT NOTES COMPUT SC, V1785, P251
   Probst D.K, 1992, LECT NOTES COMPUTER, V663, P30, DOI [10.1007/3-540-56496-9_4, DOI 10.1007/3-540-56496-9_4]
   STEFFEN B, 1989, LECT NOTES COMPUT SC, V372, P723
   STIRLING C, 1991, THEOR COMPUT SCI, V89, P161, DOI 10.1016/0304-3975(90)90110-4
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   VANGLABBEEK RJ, 1990, LECT NOTES COMPUT SC, V458, P278
   WINSKEL G, 1991, THEOR COMPUT SCI, V83, P157, DOI 10.1016/0304-3975(91)90043-2
NR 50
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2020
VL 22
IS 5
SI SI
BP 635
EP 654
DI 10.1007/s10009-020-00578-9
EA JUN 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9OM
UT WOS:000538347200001
DA 2024-07-18
ER

PT J
AU Edelkamp, S
   Greulich, C
AF Edelkamp, Stefan
   Greulich, Christoph
TI A case study of planning for smart factories
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 23rd International SPIN Symposium on Model Checking of Software (SPIN)
CY APR 07-08, 2016
CL Eindhoven, NETHERLANDS
DE Model checking; Action planning; Flow production; Monte Carlo search
ID MODEL-CHECKING; TIMED AUTOMATA; SEARCH
AB In this work, we propose the application of the SPIN software model checker to a multiagent system that controls the industrial production of goods. The flow of material is buffered on a production line with assembling stations. As the flow of material is asynchronous at each station, queuing is required as long as buffers provide waiting room. Besides validating the design of the system, the core objective of this work is to find concurrent plans that optimize the throughput of the system. In the mapping of the production system to the model checker, we model the production line as a set of communicating processes, with the movement of items modeled as channels. Experiments show that the model checker is able to analyze the system, subject to the partial ordering of the product parts. It derives valid and optimized plans with several thousands of steps using constraint branching in branch-and-bound search. We compare the results with a randomized exploration based on recent advances in Monte Carlo search.
C1 [Edelkamp, Stefan] Kings Coll London, Dept Informat, 30 Aldwych, London WC2B 4BG, England.
   [Greulich, Christoph] Univ Bremen, Fac Math & Comp Sci, D-28359 Bremen, Germany.
C3 University of London; King's College London; University of Bremen
RP Edelkamp, S (corresponding author), Kings Coll London, Dept Informat, 30 Aldwych, London WC2B 4BG, England.
EM stefan.edelkamp@kcl.ac.uk
OI Edelkamp, Stefan/0000-0001-8435-5025
CR Abdeddaïm Y, 2001, LECT NOTES COMPUT SC, V2102, P478
   [Anonymous], MOCHART
   [Anonymous], 2000, Reasoning About Rational Agents
   [Anonymous], 2008, J BETRIEBSWIRTSCHAFT, DOI DOI 10.1007/S11301-008-0036-4
   [Anonymous], 2001, MODEL CHECKING
   Armando Alessandro, 2009, International Journal on Software Tools for Technology Transfer, V11, P69, DOI 10.1007/s10009-008-0091-0
   Bhat U. N., 1986, Queueing Systems Theory and Applications, V1, P85, DOI 10.1007/BF01149329
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Bosnacki D., 1998, FORMAL DESCRIPTION T, P423, DOI DOI 10.1007/978-0-387-35394-426
   Brinksma E., 2002, International Journal on Software Tools for Technology Transfer, V4, P21, DOI 10.1007/s10009-002-0079-0
   Burckert HJ, 2000, APPL ARTIF INTELL, V14, P697, DOI 10.1080/08839510050119253
   Burman M.H., 1995, THESIS
   Cazenave T, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P456
   Cimatti A., 1997, Recent Advances in AI Planning. 4th European Conference on Planning, ECP'97 Proceedings, P130, DOI 10.1007/3-540-63912-8_81
   Cimatti A, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P875
   Dorer Klaus., 2005, Proceedings of the International Joint Conference on Autonomous Agents and Multi-Agent Systems, AAMAS '05, P45
   Edelkamp S., 2004, International Journal on Software Tools for Technology Transfer, V5, P247, DOI 10.1007/s10009-002-0104-3
   Edelkamp Stefan, 2016, ICAART 2016. 8th International Conference on Agents and Artificial Intelligence. Proceedings, P27
   Edelkamp S, 1998, LECT NOTES ARTIF INT, V1504, P81
   Edelkamp S, 2016, LECT NOTES ARTIF INT, V9904, P43, DOI 10.1007/978-3-319-46073-4_4
   Edelkamp S, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P73, DOI 10.1109/SEFM.2008.34
   Fischer K, 1996, APPL ARTIF INTELL, V10, P1, DOI 10.1080/088395196118669
   Fox M, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P956
   Ganji F., 2010, ARTIF INTELL, P37
   Gerth R., 1995, INT C PROTOCOL SPECI, P3
   Ghallab M., 2004, AUTOMATED PLANNING T
   Giunchiglia Fausto., 1999, EUROPEAN C PLANNING, V1809, P1
   GODEFROID P, 1991, LECT NOTES COMPUT SC, V531, P176, DOI 10.1007/BFb0023731
   Greulich C, 2015, LECT NOTES ARTIF INT, V9433, P119, DOI 10.1007/978-3-319-27343-3_7
   HARRISON JM, 1973, J APPL PROBAB, V10, P354, DOI 10.2307/3212352
   Hélias A, 2008, COMPUT ELECTRON AGR, V63, P183, DOI 10.1016/j.compag.2008.02.008
   Himoff J., 2006, P 5 INT JOINT C AUT, P1514
   Hoffmann J, 2014, FRONT ARTIF INTEL AP, V263, P441, DOI 10.3233/978-1-61499-419-0-441
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Hopp W. J., 1989, Queueing Systems Theory and Applications, V4, P137, DOI 10.1007/BF01158549
   Jensen R. M., 2001, EUR S PLANN
   Kocsis L, 2006, LECT NOTES COMPUT SC, V4212, P282, DOI 10.1007/11871842_29
   Kupferschmid S, 2006, LECT NOTES COMPUT SC, V3925, P35
   Lipper E. H., 1986, Queueing Systems Theory and Applications, V1, P67, DOI 10.1007/BF01149328
   Liu Weichen., 2009, Proceedings of the 7th IEEE/ACM international conference on Hardware/software codesign and system synthesis, P61
   Manitz M, 2008, COMPUT OPER RES, V35, P2520, DOI 10.1016/j.cor.2006.12.016
   Morales-Kluge E., 2010, INT PLM C
   Nissim R., 2013, P ICAPS WORKSH DISTR
   Rekersbrink H., 2011, IND MANAG, V23, P25
   Rosin C.D., 2011, IJCAI 2011, P649, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-115
   Ruys TC, 2003, LECT NOTES COMPUT SC, V2648, P1
   Ruys TC, 1998, LECT NOTES COMPUT SC, V1384, P393, DOI 10.1007/BFb0054185
   Saffidine A., 2014, THESIS
   Silver D., 2017, MASTERING CHESS SHOG
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Valmari A., 1992, Formal Methods in System Design, V1, P297, DOI 10.1007/BF00709154
   Wijs A., THESIS
   Wooldridge M., 2009, An introduction to multiagent systems
NR 53
TC 1
Z9 1
U1 0
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2018
VL 20
IS 5
SI SI
BP 515
EP 528
DI 10.1007/s10009-018-0498-1
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GQ7TL
UT WOS:000441949300003
OA hybrid
DA 2024-07-18
ER

PT J
AU Huang, WL
   Peleska, J
AF Huang, Wen-ling
   Peleska, Jan
TI Complete model-based equivalence class testing
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model-based testing; Equivalence class partition testing; Complete test
   strategies; State transition systems; SysML state machines
AB In this article, we present a model-based black-box equivalence partition testing strategy, together with a formal proof of its completeness properties. The results apply to reactive systems with large, possibly infinite input data types and finite internal and output data ranges that may be enumerated with acceptable effort. The investigation is performed on a semantic level and applies to all concrete test models whose behavioural semantics can be encoded as a variant of state transition systems. Test suite construction is performed in relation to a given fault model for which a finite black-box test suite can be constructed which is complete with respect to . It is shown how the test suite generation can be effectively implemented by model-based testing tools, using propositional representations of behavioural model semantics and constraint solvers. A SysML model of the ceiling speed monitoring function of the European Train Control System is presented as a case study, to explain theory application to a concrete modelling formalism.
C1 [Huang, Wen-ling; Peleska, Jan] Univ Bremen, Dept Math & Comp Sci, D-28359 Bremen, Germany.
C3 University of Bremen
RP Peleska, J (corresponding author), Univ Bremen, Dept Math & Comp Sci, D-28359 Bremen, Germany.
EM huang@informatik.uni-bremen.de; jp@informatik.uni-bremen.de
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2013, 2911922013E ISOIECIE
   [Anonymous], 1992, RTCA. DO-178B
   [Anonymous], 2009, 262624 ISODIS
   [Anonymous], 2013, 2911912013E ISOIECIE
   [Anonymous], 2012, ERTMS ETCS SYST REQ
   [Anonymous], TECHNICAL REPORT
   Binder R.V., 2000, AW OBJ TECHNOL S
   Brucker AD, 2013, FORM ASP COMPUT, V25, P683, DOI 10.1007/s00165-012-0222-y
   Chen TY, 2001, J SYST SOFTWARE, V58, P65, DOI 10.1016/S0164-1212(01)00028-0
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Clarke EM, 1999, MODEL CHECKING, P1
   Dick J., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P268, DOI 10.1007/BFb0024651
   Doucet F, 2006, ELECTRON NOTES THEOR, V146, P105, DOI 10.1016/j.entcs.2005.05.038
   *EUR COMM EL STAND, 2001, 50128 EN CENELEC EUR
   European Railway Agency, 2012, ERTMS SYST REQ SPEC
   Frantzen L, 2005, LECT NOTES COMPUT SC, V3395, P1
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gaudel MC, 1995, LECT NOTES COMPUT SC, V915, P82
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   Gnesi S, 2004, IEEE INT C ENG COMP, P75, DOI 10.1109/ICECCS.2004.1310906
   Grieskamp W., 2002, Software Engineering Notes, V27, P112, DOI 10.1145/566171.566190
   Helke S., 1997, ZUM '97: The Z Formal Specification Notation. 10th International Conference of Z Users Proceedings, P52, DOI 10.1007/BFb0027283
   Hong HS, 2002, LECT NOTES COMPUT SC, V2280, P327
   Huang Wen ling, 2013, D341 COMPASS
   Kalaji A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P230, DOI 10.1109/ICST.2009.29
   Lapschies F., SONOLAR
   OMG: Business process model and notation (BPMN) version 2. 0, 2011, TECHNICAL REPORT
   Peleska J., 1997, South African Computer Journal, P53
   Peleska J, 2013, ELECTRON P THEOR COM, P3, DOI 10.4204/EPTCS.111.1
   Peleska J, 2011, LECT NOTES COMPUT SC, V7019, P146, DOI 10.1007/978-3-642-24580-0_11
   Peleska J, 2011, LECT NOTES COMPUT SC, V6617, P298, DOI 10.1007/978-3-642-20398-5_22
   Petrenko Alexandre, 2012, International Journal on Software Tools for Technology Transfer, V14, P383, DOI 10.1007/s10009-012-0240-3
   Petrenko A., 1996, Formal Description Techniques IX. Theory, Application and Tools. IFIP TC6/6.1 International Conference on Formal Description Techniques IX/Protocol Specification, Testing and Verification XVI, P163
   Ranise Silvio, 2006, Trends and ControversiesIEEE Intelligent Systems Magazine, V21, P71
   Spillner A., 2006, SOFTWARE TESTING FDN
   Springintveld J, 2001, THEOR COMPUT SCI, V254, P225, DOI 10.1016/S0304-3975(99)00134-6
   Tretmans J, 1996, COMPUT NETWORKS ISDN, V29, P49, DOI 10.1016/S0169-7552(96)00017-7
   Tretmans Jan, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P1, DOI 10.1007/978-3-540-78917-8_1
   Vasilevskii M. P., 1973, Cybernetics, V9, P653, DOI 10.1007/BF01068590
   Wen-ling Huang, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P49, DOI 10.1007/978-3-642-41707-8_4
NR 41
TC 26
Z9 27
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2016
VL 18
IS 3
BP 265
EP 283
DI 10.1007/s10009-014-0356-8
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK5QH
UT WOS:000374974200003
DA 2024-07-18
ER

PT J
AU Kushik, N
   El-Fakih, K
   Yevtushenko, N
   Cavalli, AR
AF Kushik, Natalia
   El-Fakih, Khaled
   Yevtushenko, Nina
   Cavalli, Ana R.
TI On adaptive experiments for nondeterministic finite state machines
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Nondeterministic finite state machine; Conformance testing; Adaptive
   homing and distinguishing experiments
ID IDENTIFICATION; LENGTH
AB Adaptive experiments are well defined in the context of finite state machine (FSM) based analysis, in particular, in FSM based testing where homing and distinguishing experiments with FSMs are used for test derivation. In this paper, we define and propose algorithms for deriving adaptive homing and distinguishing experiments for non-initialized nondeterministic finite state machines (NFSMs). For NFSMs, the construction of adaptive experiments is rather complex as the partition over produced outputs does not define a partition over the set of states but a collection of intersecting subsets, and thus, the refinement of such set system is more difficult than the refinement of a partition. Given a complete non-initialized possibly non-observable NFSM, we establish necessary and sufficient conditions for having adaptive homing and distinguishing experiments and evaluate the height of these experiments.
C1 [Kushik, Natalia; Yevtushenko, Nina] Tomsk State Univ, Dept Informat Technol, Lenin Str 36, Tomsk, Russia.
   [Kushik, Natalia; Cavalli, Ana R.] Telecom SudParis, Dept Network Software, 9 Rue Charles Fourier, F-91011 Evry, France.
   [El-Fakih, Khaled] Amer Univ Sharjah, Dept Comp Sci & Engn, POB 26666, University City, Sharjah, U Arab Emirates.
C3 Tomsk State University; IMT - Institut Mines-Telecom; Institut
   Polytechnique de Paris; Telecom SudParis; Institut Mines-Telecom
   Business School; American University of Sharjah
RP Kushik, N (corresponding author), Tomsk State Univ, Dept Informat Technol, Lenin Str 36, Tomsk, Russia.
EM ngkushik@gmail.com
RI Kushik, Natalia G./P-1756-2014; Yevtushenko, Nina V./R-6494-2016
OI Kushik, Natalia/0000-0002-8691-6655
CR Alur R., 1995, Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, P363, DOI 10.1145/225058.225161
   [Anonymous], 14032013 TECHRCA
   [Anonymous], THESIS TOMSK STATE U
   [Anonymous], 1980, Lecture Notes in Computer Science
   [Anonymous], 1964, 5 ANN S SWITCH CIRC, DOI DOI 10.1109/SWCT.1964.8
   [Anonymous], 2005, 2 INT C PERS TECHN, DOI DOI 10.1007/11759744N9
   [Anonymous], SLIDES LECT TAROT SU
   [Anonymous], LECT AUTOMATA THEORY
   [Anonymous], 1956, AUTOMATA STUDIES
   Dorofeeva R, 2010, INFORM SOFTWARE TECH, V52, P1286, DOI 10.1016/j.infsof.2010.07.001
   El-Fakih K, 2013, ACTA CYBERN, V21, P205, DOI 10.14232/actacyb.21.2.2013.1
   GILL A, 1961, INFORM CONTROL, V4, P132, DOI 10.1016/S0019-9958(61)80003-X
   GINSBURG S, 1958, J ACM, V5, P266, DOI 10.1145/320932.320938
   Gromov ML, 2008, PROGRAM COMPUT SOFT+, V34, P322, DOI 10.1134/S0361768808060030
   Gromov M, 2009, LECT NOTES COMPUT SC, V5522, P137, DOI 10.1007/978-3-642-02138-1_9
   Hibbard T.N., 1961, J ACM, V8, P601, DOI DOI 10.1145/321088.321098
   Hierons RM, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P157, DOI 10.1109/SEFM.2009.12
   Hwang I, 2012, INFORM PROCESS LETT, V112, P298, DOI 10.1016/j.ipl.2011.12.012
   Kohavi Z., 1978, Switching and Finite Automata Theory, Vsecond
   Kushik Natalia, 2013, Implementation and Application of Automata. 18th International Conference, CIAA 2013. Proceedings: LNCS 7982, P220, DOI 10.1007/978-3-642-39274-0_20
   Kushik Natalia, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P33, DOI 10.1007/978-3-642-41707-8_3
   Kushik N, 2011, LECT NOTES COMPUT SC, V6807, P215, DOI 10.1007/978-3-642-22256-6_20
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   Leeke M, 2009, IEEE 15TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P121, DOI 10.1109/PRDC.2009.28
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   Petrenko A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P310, DOI 10.1109/ICST.2012.111
   Petrenko A., 1996, P IFIP 9 INT WORKSHO, P125
   Petrenko A, 2011, LECT NOTES COMPUT SC, V7019, P162, DOI 10.1007/978-3-642-24580-0_12
   Ravikumar B, 1998, LECT NOTES COMPUT SC, V1388, P373
   Sandberg S, 2005, LECT NOTES COMPUT SC, V3472, P5
   Simao A, 2009, IET SOFTW, V3, P91, DOI 10.1049/iet-sen.2008.0018
   Spitsyna N, 2007, SOFTW TEST VERIF REL, V17, P227, DOI 10.1002/stvr.374
   Starke P. H., 1972, ABSTRACT AUTOMATA
   von Bochmann G., 1994, SIGSOFT Software Engineering Notes, P109
   Zhang F, 2003, IEEE T SOFTWARE ENG, V29, P1, DOI 10.1109/TSE.2003.1166585
NR 36
TC 20
Z9 23
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2016
VL 18
IS 3
BP 251
EP 264
DI 10.1007/s10009-014-0357-7
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK5QH
UT WOS:000374974200002
DA 2024-07-18
ER

PT J
AU Steffen, B
   Howar, F
   Isberner, M
   Naujokat, S
   Margaria, T
AF Steffen, Bernhard
   Howar, Falk
   Isberner, Malte
   Naujokat, Stefan
   Margaria, Tiziana
TI Tailored generation of concurrent benchmarks
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Benchmark generation; Concurrency; Interference; Synchronization; LTL
   synthesis; Model checking; Property-oriented expansion; Path condition
   extraction; Theorem proving; SAT solving; Code motion
AB In this paper, we show how to extend our approach to property-driven benchmark generation (PDBG) to support concurrency in the benchmarks: we systematically produce multi-process PROMELA code of known and tailored complexity that can then serve as benchmark for the evaluation of analysis and verification tools for concurrent software systems. Key to this extension is the way in which we control the corresponding property profiles, i.e., the statements about the validity of a predefined set of LTL properties, along the PDBG tool chain. It is based on the idea to introduce intricate structural elements like synchronization and interference at a local and therefore controllable level, only concerning a few parallel components, and subsequently obfuscating the locality of these structures at the global level via property-preserving transformations of both the system components and the properties. This leads to a scalable approach which we illustrate along some concrete examples.
C1 [Steffen, Bernhard; Isberner, Malte; Naujokat, Stefan] Tech Univ Dortmund, Chair Programming Syst, D-44227 Dortmund, Germany.
   [Howar, Falk] Carnegie Mellon Univ, Moffett Field, CA USA.
   [Margaria, Tiziana] Univ Potsdam, Chair Serv & Software Engn, D-14482 Potsdam, Germany.
C3 Dortmund University of Technology; Carnegie Mellon University;
   University of Potsdam
RP Naujokat, S (corresponding author), Tech Univ Dortmund, Chair Programming Syst, D-44227 Dortmund, Germany.
EM steffen@cs.tu-dortmund.de; howar@cmu.edu;
   malte.isberner@cs.tu-dortmund.de; stefan.naujokat@cs.tu-dortmund.de;
   margaria@cs.uni-potsdam.de
RI Margaria, Tiziana/AAO-2272-2021; Isberner, Malte/AAF-7893-2020
OI Isberner, Malte/0000-0002-7704-5173; Howar, Falk/0000-0002-9524-4459;
   Naujokat, Stefan/0000-0002-6265-6641; Margaria,
   Tiziana/0000-0002-5547-9739
CR ABADI M, 1995, ACM T PROGR LANG SYS, V17, P507, DOI 10.1145/203095.201069
   [Anonymous], 2001, Handbook of automated reasoning
   [Anonymous], FULL GENERATIO UNPUB
   [Anonymous], 2001, MODEL CHECKING
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   BRIGGS P, 1994, SIGPLAN NOTICES, V29, P159, DOI 10.1145/773473.178257
   Burkart O, 1997, LECT NOTES COMPUT SC, V1256, P419
   ELRAD T, 1982, SCI COMPUT PROGRAM, V2, P155, DOI 10.1016/0167-6423(83)90013-8
   Gastin P, 2001, LECT NOTES COMPUT SC, V2102, P53
   Giannakopoulou D, 2002, LECT NOTES COMPUT SC, V2529, P308
   Hoare CAR., 1985, Communicating Sequential Processes
   Holzmann G.J., 2004, HOLZMANN SPIN MODEL
   Howar Falk, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P608, DOI 10.1007/978-3-642-34026-0_45
   KNOOP J, 1992, SIGPLAN NOTICES, V27, P224, DOI 10.1145/143103.143136
   KNOOP J, 1993, J PROGRAM LANG, V1, P71
   Kupferman O, 1999, LECT NOTES COMPUT SC, V1703, P82
   LARSEN KG, 1990, LECT NOTES COMPUT SC, V407, P232
   Milner R., 1989, Communication and concurrency
   MOREL E, 1979, COMMUN ACM, V22, P96, DOI 10.1145/359060.359069
   Naujokat S., 2014, P 6 INT S L IN PRESS
   Robinson A.J., 2001, HDB AUTOMATED REASON, V2
   Rosen B.K., 1988, 15 ANN ACM S PRINC P
   Snelting G, 2006, ACM T SOFTW ENG METH, V15, P410, DOI 10.1145/1178625.1178628
   STEFFEN B, 1989, LECT NOTES COMPUT SC, V379, P481
   STEFFEN B, 1989, LECT NOTES COMPUT SC, V372, P723
   Steffen Bernhard, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P341, DOI 10.1007/978-3-642-39176-7_21
   Steffen B, 1997, LECT NOTES COMPUT SC, V1200, P1, DOI 10.1007/BFb0023444
   STEFFEN B, 1995, LECT NOTES COMPUTER, V962, P72
   Steffen B, 2007, LECT NOTES COMPUT SC, V4383, P92
   Steffen B, 2014, INT J SOFTW TOOLS TE, V16, P465, DOI 10.1007/s10009-014-0336-z
NR 30
TC 7
Z9 8
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2014
VL 16
IS 5
BP 543
EP 558
DI 10.1007/s10009-014-0339-9
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HU
UT WOS:000209673300008
DA 2024-07-18
ER

PT J
AU Yüksel, E
   Nielson, HR
   Nielson, F
   Zhu, HB
   Huang, HQ
AF Yuksel, Ender
   Nielson, Hanne Riis
   Nielson, Flemming
   Zhu, Huibiao
   Huang, Heqing
TI Quantitative modelling and analysis of a Chinese smart grid: a
   stochastic model checking case study
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal verification; Stochastic model checking; Cyber-physical systems;
   Smart grid
AB Cyber-physical systems integrate information and communication technology with the physical elements of a system, mainly for monitoring and controlling purposes. The conversion of traditional power grid into a smart grid, a fundamental example of a cyber-physical system, raises a number of issues that require novel methods and applications. One of the important issues in this context is the verification of certain quantitative properties of the system. In this paper, we consider a specific Chinese smart grid implementation as a case study and address the verificationproblem for performance and energy consumption. We employ stochastic model checking approach and present our modelling and analysis study using PRISM model checker.
C1 [Yuksel, Ender; Nielson, Hanne Riis; Nielson, Flemming] Tech Univ Denmark, Dept Appl Math & Comp Sci, DK-2800 Lyngby, Denmark.
   [Zhu, Huibiao] E China Normal Univ, Shanghai Key Lab Trustworthy Comp, Softwarep Engn Inst, Shanghai 200062, Peoples R China.
   [Huang, Heqing] Wuxi SensingNet Ind Res Inst, Wuxi, Peoples R China.
C3 Technical University of Denmark; East China Normal University
RP Yüksel, E (corresponding author), Tech Univ Denmark, Dept Appl Math & Comp Sci, DK-2800 Lyngby, Denmark.
EM ender@dtu.dk; hrni@dtu.dk; fnie@dtu.dk; hbzhu@sei.ecnu.edu.cn;
   huangheqing@wsn.cn
OI Nielson, Hanne Riis/0000-0002-2484-5580; Nielson,
   Flemming/0000-0001-7362-6176
CR [Anonymous], P 41 HAW INT C SYST
   [Anonymous], 2006, IEEE Standard 802.15.4-2006
   Aziz A, 1996, LNCS, P269, DOI [DOI 10.1007/3-540-61474-5_75, 10.1007/3-540-61474-5_75, DOI 10.1007/3-540-61474-5]
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Fuchs A., 2011, P INT WORKSH SEC DEP, DOI [10.1145/2349913.2349916, DOI 10.1145/2349913.2349916]
   Hackenberg G., 2012, P ICSE 2012 INT WORK
   Katoen JP, 2009, INT CONF QUANT EVAL, P167, DOI 10.1109/QEST.2009.11
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2007, LECT NOTES COMPUT SC, V4486, P220
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Martins J, 2011, LECT NOTES COMPUT SC, V6991, P131, DOI 10.1007/978-3-642-24559-6_11
   McCanne S., NETWORK SIMULATOR
   Morris T., 2009, N AM POWER S NAPS, P1, DOI [10.1109/naps.2009.5484019, DOI 10.1109/NAPS.2009.5484019]
   OPNET Technologies Inc, OPNET SIM
   Pottie GJ, 2000, COMMUN ACM, V43, P51, DOI 10.1145/332833.332838
   Yuksel Ender, 2012, 2012 IEEE Sixth International Symposium on Theoretical Aspects of Software Engineering (TASE 2012), P25, DOI 10.1109/TASE.2012.44
   Yuksel E., 2011, THESIS TU DENMARK LY
   Yuksel E., 2012, 201202 IMM DTU INF
NR 18
TC 2
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2014
VL 16
IS 4
BP 421
EP 435
DI 10.1007/s10009-014-0311-8
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HT
UT WOS:000209673200006
DA 2024-07-18
ER

PT J
AU Makedonski, P
   Grabowski, J
   Philipp, F
AF Makedonski, Philip
   Grabowski, Jens
   Philipp, Florian
TI Quantifying the evolution of TTCN-3 as a language
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE TTCN-3; Language evolution; Data mining; Repository mining; Quantitative
   analysis
AB Ten years of maintenance, nine published revisions of the standards for the Testing and Test Control Notation version 3 (TTCN-3), more than 500 change requests since 2006, and 10 years of activity on the official TTCN-3 mailing list add up to a rich history, not unlike that of many successful Open Source Software (OSS) projects. In this article, we contemplate TTCN-3 in the context of software evolution and examine its history quantitatively. We mined the changes in the textual content of the standards, the data in change requests from the past 5 years, and the mailing list archives from the past 10 years. In addition, to characterize the use of the TTCN-3 we investigated the meta-data of the contributions at the TTCN-3 User Conference, and the use of language constructs in a large-scale TTCN-3 test suite. Based on these data sets, we first analyze the amount, density, and location of changes within the different parts of the standard. Then, we analyze the activity and focus of the user community and the maintenance team in both the change request management system and the official TTCN-3 mailing list. Finally, we analyze the distribution of contributions at the TTCN-3 User Conference across different topics over the past 8 years and construct use anomalies during the development of a large-scale test suite. Our findings indicate that the TTCN-3 is becoming increasingly stable as the overall change density and intensity, aswell as the number of change requests are decreasing, despite the monotonous increase in the size of the standards.
C1 [Makedonski, Philip; Grabowski, Jens; Philipp, Florian] Univ Gottingen, Inst Comp Sci, Software Engn Distributed Syst Grp, Goldschmidtstr 7, D-37077 Gottingen, Germany.
C3 University of Gottingen
RP Makedonski, P (corresponding author), Univ Gottingen, Inst Comp Sci, Software Engn Distributed Syst Grp, Goldschmidtstr 7, D-37077 Gottingen, Germany.
EM makedonski@informatik.uni-goettingen.de;
   grabowski@informatik.uni-goettingen.de;
   florian.philipp@stud.uni-goettingen.de
CR [Anonymous], 1999, 101666199905 ETSI TR
   [Anonymous], 2007, HOPL 3 P 3 ACM SIGPL
   [Anonymous], 2011, 202784 ETSI ES
   [Anonymous], 2010, 202782 ETSI ES
   [Anonymous], 2011, 202785 ETSI ES
   CHEN HC, 1992, IEEE T SYST MAN CYB, V22, P885, DOI 10.1109/21.179830
   Cook W.R., 2007, APPLESCRIPT, DOI [10.1145/1238844.1238845, DOI 10.1145/1238844.1238845]
   ETSI, 2011, TTCN 3 MAINT TEAM WO
   ETSI, 2010, 202781 ETSI ES
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Grabowski J, 2003, COMPUT NETW, V42, P375, DOI 10.1016/S1389-1286(03)00249-4
   Griswold R.E., 1993, HIST ICON PROGRAMMIN, P53, DOI [10.1145/154766.155363, DOI 10.1145/154766.155363]
   Hudak P., 2007, A HIST OF HASKELL, DOI [10.1145/1238844.1238856, DOI 10.1145/1238844.1238856]
   Ierusalimschy R., 2007, THE EVOLUTION OF LUA, DOI [10.1145/1238844.1238846, DOI 10.1145/1238844.1238846]
   ISO/IEC, 1992, 96463 ISOIEC
   *ISO IEC, 1998, 96463 ISOIEC
   ITEA, 2011, IT WEB SIT TT MED PR
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Monkewich O, 2011, TTCN 3 US C 2011 BLE
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   NLM, 2011, NAT LIB MED LEX TOOL
   Parnin C., 2011, P 8 WORK C MIN SOFTW, P312, DOI [10.1145/1985441.1985446, DOI 10.1145/1985441.1985446]
   Rethy G, 2009, TTCN 3 US C 2009 SOP
   Stroustrup B., 2007, Proceedings of the third ACM SIGPLAN conference on History of programming languages, P4, DOI [10.1145/1238844.1238848, DOI 10.1145/1238844.1238848]
   Willcock Colin, 2011, INTRO TTCN 3
   Zeiss B, 2006, THESIS I INFORM, P1612
NR 26
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2014
VL 16
IS 3
BP 227
EP 246
DI 10.1007/s10009-013-0282-1
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HS
UT WOS:000209673100002
DA 2024-07-18
ER

PT J
AU Collavizza, H
   Vinh, NL
   Ponsini, O
   Rueher, M
   Rollet, A
AF Collavizza, Helene
   Nguyen Le Vinh
   Ponsini, Olivier
   Rueher, Michel
   Rollet, Antoine
TI Constraint-based BMC: a backjumping strategy
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Embedded systems; Validation; Constraint-based bounded model checking;
   Counterexample generation
ID MODEL CHECKING
AB Safety property checking is mandatory in the validation process of critical software. When formal verification tools fail to prove some properties, the automatic generation of counterexamples for a given loop depth is an important issue in practice. We investigate in this paper the capabilities of constraint-based bounded model checking for program verification and counterexample generation on real applications. We introduce dynamic post-condition variable-driven strategy (DPVS), a new backjumping strategy we developed to handle an industrial application from a car manufacturer, the Flasher Manager. This backjumping strategy is used to search a faulty path and to collect the constraints of such a path. The simplified control flow graph (CFG) of the program is explored in a backward way, starting from the post-condition and jumping to the most promising node where the variables of the post-condition are defined. In other words, the constraints are collected by exploring the CFG in a dynamic and non-sequential backward way. The Flasher Manager application has been designed and simulated using the Simulink platform. However, this module is concretely embedded as a C program in a car computer, thus we have to check that the safety properties are preserved on this C code. We report experiments on the Flasher Manager with our constraint-based bounded model checker, and with CBMC, a state-of-the-art bounded model checker. Experiments show that DPVS and CBMC have similar performances on one property of the Flasher Manager; DPVS outperforms CBMC to find a counterexample for two properties; two of the properties of the Flasher Manager remain intractable for CBMC and DPVS.
C1 [Collavizza, Helene; Nguyen Le Vinh; Ponsini, Olivier; Rueher, Michel] Univ Nice, I3S, CNRS, 2000 Route Lucioles,Bat Euclide B,BP 121, F-06903 Sophia Antipolis, France.
   [Rollet, Antoine] Univ Bordeaux, LABRI, CNRS, F-33405 Talence, France.
C3 Universite Cote d'Azur; Centre National de la Recherche Scientifique
   (CNRS); Universite de Bordeaux; Centre National de la Recherche
   Scientifique (CNRS)
RP Ponsini, O (corresponding author), Univ Nice, I3S, CNRS, 2000 Route Lucioles,Bat Euclide B,BP 121, F-06903 Sophia Antipolis, France.
EM helen@polytech.unice.fr; lvnguyen@polytech.unice.fr;
   ponsini@i3s.unice.fr; michel.rueher@gmail.com; rollet@labri.fr
CR Albert Elvira, 2008, Logic-Based Program Synthesis and Transformation. 18th International Symposium, LOPSTR 2008. Revised Selected Papers, P4
   Armando Alessandro, 2009, International Journal on Software Tools for Technology Transfer, V11, P69, DOI 10.1007/s10009-008-0091-0
   Ball T, 2011, COMMUN ACM, V54, P68, DOI 10.1145/1965724.1965743
   Barnett M., 2005, INFORM PROCESS LETT, V93, P281
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Blanc B, 2010, ELECTRON NOTES THEOR, V264, P3, DOI 10.1016/j.entcs.2010.12.011
   Bochot T, 2009, PROC INT CONF SOFTW, P18, DOI 10.1109/ICSE-COMPANION.2009.5070960
   Botella B, 2006, SOFTW TEST VERIF REL, V16, P97, DOI 10.1002/stvr.333
   Charreteur F., 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P131, DOI 10.1109/ISSRE.2010.26
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Collavizza H, 2011, P 2011 ACM S APPL CO, P1633
   Collavizza H, 2008, LECT NOTES COMPUT SC, V5202, P327, DOI 10.1007/978-3-540-85958-1_22
   Collavizza H, 2010, CONSTRAINTS, V15, P238, DOI 10.1007/s10601-009-9089-9
   Cordeiro L, 2009, IEEE INT CONF AUTOM, P137, DOI 10.1109/ASE.2009.63
   Cousot P, 2007, TASE 2007: FIRST JOINT IEEE/IFIP SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/TASE.2007.55
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Delmas D, 2009, LECT NOTES COMPUT SC, V5825, P53
   Denmat T., 2006, P ISSRE 18 IEEE INT, P181
   Ganai MalayK., 2006, P 2006 IEEEACM INT C, P794
   Gotlieb A., 1998, Software Engineering Notes, V23, P53, DOI 10.1145/271775.271790
   Gotlieb A., 2010, KNOWLEDGE E IN PRESS
   GOTLIEB A, 2009, ICST 2009, P151
   Jackson D., 2000, Software Engineering Notes, V25, P14, DOI 10.1145/347636.383378
   Marre B., 2000, TEST SEQUENCES GENER
   Michel L, 2005, LECT NOTES COMPUT SC, V3709, P881
   Regin J.C., 1994, A filtering algorithm for constraints of difference in CSP, P362
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Sy NT, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P13, DOI 10.1109/ASE.2001.989786
NR 30
TC 5
Z9 6
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2014
VL 16
IS 1
BP 103
EP 121
DI 10.1007/s10009-012-0258-6
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HQ
UT WOS:000209672900007
DA 2024-07-18
ER

PT J
AU Fernando, V
   Joshi, K
   Laurel, J
   Misailovic, S
AF Fernando, Vimuth
   Joshi, Keyur
   Laurel, Jacob
   Misailovic, Sasa
TI Diamont: dynamic monitoring of uncertainty for distributed asynchronous
   programs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 20th International Conference on Runtime Verification (RV)
CY OCT 06-09, 2020
CL ELECTR NETWORK
SP Toyota Res Inst
DE Uncertainty; Runtime Analysis; Distributed Programs
AB Many application domains including graph analytics, the Internet-of-Things, precision agriculture, and media processing operate on noisy data and/or produce approximate results. These applications can distribute computation across multiple (often resource-constrained) processing units. Analyzing the reliability and accuracy of such applications is challenging, since most existing techniques operate on specific fixed-error models, check for individual properties, or can only be applied to sequential programs.We present Diamont, a system for dynamic monitoring of uncertainty properties in distributed programs. Diamont programs consist of distributed processes that communicate via asynchronous message passing. Diamont includes datatypes that dynamically monitor uncertainty in data and provides support for checking predicates over the monitored uncertainty at runtime. We also present a general methodology for verifying the soundness of the runtime system and optimizations using canonical sequentialization.We implemented Diamont for a subset of the Go language and evaluated eight programs from precision agriculture, graph analytics, and media processing. We show that Diamont can prove important end-to-end properties of program outputs for significantly larger inputs compared to prior work, with modest execution time overhead: 3% on average (max 16.3%) for our main evaluation input set and 15% on average for 8x larger inputs.
C1 [Fernando, Vimuth; Joshi, Keyur; Laurel, Jacob; Misailovic, Sasa] Univ Illinois, Urbana, IL 61801 USA.
C3 University of Illinois System; University of Illinois Urbana-Champaign
RP Fernando, V (corresponding author), Univ Illinois, Urbana, IL 61801 USA.
EM wvf2@illinois.edu; kpjoshi2@illinois.edu; jlaurel2@illinois.edu;
   misailo@illinois.edu
FU NSF [CCF-1846354, CCF-1956374, CCF-2028861, CCF-2008883]; USDA
   [NIFA-2021-67021-33449]
FX The research presented in this paper was supported in part by NSF Grants
   No. CCF-1846354, CCF-1956374, CCF-2028861, and CCF-2008883, USDA Grant
   No. NIFA-2021-67021-33449, and a gift from Meta Platforms, Inc.
CR Achour S., 2015, OOPSLA
   Ahmad M, 2015, I S WORKL CHAR PROC, P44, DOI 10.1109/IISWC.2015.11
   Albarghouthi A, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P211, DOI 10.1145/3287560.3287588
   Bakst A, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133934
   Bastani O, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360544
   Bornholt J, 2014, ACM SIGPLAN NOTICES, V49, P51, DOI 10.1145/2541940.2541958
   Boston B., 2015, OOPSLA
   Boston B., 2018, OOPSLA
   Boyapati R., 2017, ISCA
   Carbin M., 2013, PEPM
   Carbin M, 2013, ACM SIGPLAN NOTICES, V48, P33, DOI [10.1145/2544173.2509546, 10.1145/2509136.2509546]
   Carbin M, 2012, ACM SIGPLAN NOTICES, V47, P169, DOI 10.1145/2345156.2254086
   Chen Y., 2020, IEEE T PARALL DISTR
   Darulova E., 2012, RV
   Darulova E., 2011, OOPSLA
   Darulova Eva., 2018, TACAS
   de Kruijf M, 2010, CONF PROC INT SYMP C, P497, DOI 10.1145/1816038.1816026
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Fernando V., 2019, OOPSLA
   Fernando V., 2021, THESIS U ILLINOIS
   Fernando V., 2021, RUNTIME VERIFICATION
   Fernando V, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P849, DOI 10.1145/3297858.3304033
   Golubovic N., 2019, INT J BIG DATA INTEL, V6
   Jaroszewicz S, 2012, SIAM J SCI COMPUT, V34, pA1241, DOI 10.1137/110839680
   Joshi K., 2023, ARXIV
   Joshi K, 2020, INT SYM CODE GENER, P56, DOI 10.1145/3368826.3377924
   Joshi K, 2019, PROC INT CONF SOFTW, P608, DOI 10.1109/ICSE.2019.00071
   Lafarge T., 2016, NCSLI Measure, V10, P20, DOI [10.1080/19315775.2015.11721732, DOI 10.1080/19315775.2015.11721732]
   Lahiri S.K., 2015, AUTOMATED DIFFERENTI
   Laurel J., 2022, POPL
   Laurel J., 2022, OOPSLA
   Laurel J, 2021, DES AUT CON, P787, DOI 10.1109/DAC18074.2021.9586276
   Laurel J, 2020, LECT NOTES COMPUT SC, V12075, P366, DOI 10.1007/978-3-030-44914-8_14
   Leskovec J., 2014, SNAP Datasets: Stanford large network dataset collection
   Liu T., 2020, DATASHEET AM2302 SEN
   Maderbacher B., 2020, RV
   Manousakis I., 2018, P ACM S CLOUD COMP
   Misailovic S., 2015, THESIS MIT
   Misailovic S, 2014, ACM SIGPLAN NOTICES, V49, P309, DOI [10.1145/10.1145/2660193.2660231, 10.1145/2714064.2660231]
   Misra A, 2023, DES AUT TEST EUROPE, DOI 10.23919/DATE56975.2023.10137324
   Page L., 1999, PAGERANK CITATION RA, DOI DOI 10.1109/IISWC.2012.6402911
   Panchekha P, 2015, ACM SIGPLAN NOTICES, V50, P1, DOI 10.1145/2737924.2737959
   Ranjan A, 2015, DES AUT CON, DOI 10.1145/2744769.2744799
   Recht Benjamin, 2011, 25 ANN C NEUR INF PR, DOI 10.48550/arXiv.1106.5730
   Ringenburg M, 2015, ACM SIGPLAN NOTICES, V50, P399, DOI [10.1145/2775054.2694365, 10.1145/2694344.2694365]
   Rubio-González C, 2013, INT CONF HIGH PERFOR, DOI 10.1145/2503210.2503296
   Samadi M, 2014, ACM SIGPLAN NOTICES, V49, P35, DOI 10.1145/2541940.2541948
   Sampson A, 2014, ACM SIGPLAN NOTICES, V49, P112, DOI [10.1145/2666356.2594294, 10.1145/2594291.2594294]
   Sampson A, 2011, ACM SIGPLAN NOTICES, V46, P164, DOI 10.1145/1993316.1993518
   Sampson Adrian., 2015, ACCEPT PROGRAMMER GU
   Sanchez-Stern A., 2018, PLDI
   Sen K, 2004, LECT NOTES COMPUT SC, V3114, P202
   Sidiroglou S., 2011, FSE
   Stanley-Marbell P, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3394898
   Stevens J.R., 2018, ICCAD
   Tsoutsouras V., 2021, MICRO MICRO 21
   Yazdanbakhsh A, 2017, IEEE DES TEST, V34, P60, DOI 10.1109/MDAT.2016.2630270
   Zhuang W., 2009, WCSP
NR 58
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2023
VL 25
IS 4
BP 521
EP 539
DI 10.1007/s10009-023-00717-y
EA NOV 2023
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA X7GZ5
UT WOS:001093027600004
DA 2024-07-18
ER

PT J
AU Neele, T
   Willemse, TAC
   Wesselink, W
   Valmari, A
AF Neele, Thomas
   Willemse, Tim A. C.
   Wesselink, Wieger
   Valmari, Antti
TI Partial-order reduction for parity games and parameterised Boolean
   equation systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Partial-order reduction; Parity games; Parameterised Boolean equation
   systems; Stubborn sets
ID CHECKING
AB In model checking, reduction techniques can be helpful tools to fight the state-space explosion problem. Partial-order reduction (POR) is a well-known example, and many POR variants have been developed over the years. However, none of these can be used in the context of model checking stutter-sensitive temporal properties. We propose POR techniques for parity games, a well-established formalism for solving a variety of decision problems, including model checking. As a result, we obtain the first PORmethod that is sound for the full modal mu-calculus. We showhowour technique can be applied to the fixed point logic called parameterised Boolean equation systems, which provides a high-level representation of parity games. Experiments with our implementation indicate that substantial reductions can be achieved.
C1 [Neele, Thomas; Willemse, Tim A. C.; Wesselink, Wieger] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Valmari, Antti] Univ Jyvaskyla, Jyvaskyla, Finland.
C3 Eindhoven University of Technology; University of Jyvaskyla
RP Neele, T (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM t.s.neele@tue.n1
RI Valmari, Antti/G-4239-2014
OI Valmari, Antti/0000-0002-5022-1624; Neele, Thomas/0000-0001-6117-9129
CR Anderson T. E., 1990, IEEE Transactions on Parallel and Distributed Systems, V1, P6, DOI 10.1109/71.80120
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bonneland F.M., 2019, LIPICS, V140
   Bonneland FM, 2021, LOG METH COMPUT SCI, V17, DOI 10.23638/LMCS-17(1:21)2021
   Bunte Olav, 2019, Tools and Algorithms for the Construction and Analysis of Systems. 25th International Conference, TACAS 2019. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2019. Proceedings: Lecture Notes in Computer Science (11428), P21, DOI 10.1007/978-3-030-17465-1_2
   Cranen Sjoerd, 2013, CONCUR 2013 - Concurrency Theory. 24th International Conference, CONCUR 2013. Proceedings: LNCS 8052, P470, DOI 10.1007/978-3-642-40184-8_33
   Emerson EA, 1997, LECT NOTES COMPUT SC, V1217, P19, DOI 10.1007/BFb0035378
   Evangelista Sami, 2010, International Journal on Software Tools for Technology Transfer, V12, P155, DOI 10.1007/s10009-010-0137-y
   Gazda M. W., 2016, SOFSEM 2016 : Theory and Practice of Computer Science. 42nd International Conference on Current Trends in Theory and Practice of Computer Science. Proceedings: LNCS 9587, P277, DOI 10.1007/978-3-662-49192-8_23
   Gerth R, 1999, INFORM COMPUT, V150, P132, DOI 10.1006/inco.1998.2778
   Godefroid P, 1996, LECT NOTES COMPUT SC, V1032, P11
   Groote JF, 2005, THEOR COMPUT SCI, V343, P332, DOI 10.1016/j.tcs.2005.06.016
   Groote JF, 1996, THEOR COMPUT SCI, V170, P47, DOI 10.1016/S0304-3975(96)80702-X
   GRUMBERG O, 1994, ACM T PROGR LANG SYS, V16, P843, DOI 10.1145/177492.177725
   HELMBOLD D, 1985, IEEE SOFTWARE, V2, P47, DOI 10.1109/MS.1985.230351
   Hesselink WH, 1998, INFORM PROCESS LETT, V68, P173, DOI 10.1016/S0020-0190(98)00158-6
   Ip CN, 1996, FORM METHOD SYST DES, V9, P41, DOI 10.1007/BF00625968
   Kan SL, 2017, J LOGIC COMPUT, V27, P1095, DOI 10.1093/logcom/exw004
   Keiren JJA, 2014, LECT NOTES COMPUT SC, V8837, P219, DOI 10.1007/978-3-319-11936-6_16
   Knig D, 1927, Acta Litterarum ac Scientiarum Ser Sci. Math. Szeged, V3, P121
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Laarman A, 2016, INT J SOFTW TOOLS TE, V18, P427, DOI 10.1007/s10009-014-0363-9
   Le Lann Gerard, 1977, INFORMATION PROCESSI, P155
   Liebke T, 2019, LECT NOTES COMPUT SC, V11522, P321, DOI 10.1007/978-3-030-21571-2_18
   Milner R., 1980, Lecture Notes in Computer Science, V92, DOI DOI 10.1007/3-540-10235-3
   Neele Thomas, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12079), P307, DOI 10.1007/978-3-030-45237-7_19
   Neele T., 2020, THESIS EINDHOVEN U T
   Neele T, 2021, LOG METH COMPUT SCI, V17, DOI 10.46298/LMCS-17(3:8)2021
   Neele T, 2020, LECT NOTES COMPUT SC, V12077, P482, DOI 10.1007/978-3-030-45231-5_25
   Neele T, 2020, SCI COMPUT PROGRAM, V188, DOI 10.1016/j.scico.2019.102389
   Pelánek R, 2007, LECT NOTES COMPUT SC, V4595, P263
   Peled D., 1993, Computer Aided Verification. 5th International Conference, CAV '93 Proceedings, P409
   Peled D, 1996, FORM METHOD SYST DES, V8, P39, DOI 10.1007/BF00121262
   Ploeger B, 2011, INFORM COMPUT, V209, P637, DOI 10.1016/j.ic.2010.11.025
   Ramakrishna YS, 1997, LECT NOTES COMPUT SC, V1243, P5
   Siegel SF, 2019, LECT NOTES COMPUT SC, V11562, P478, DOI 10.1007/978-3-030-25543-5_27
   Valmari A., 1992, Formal Methods in System Design, V1, P297, DOI 10.1007/BF00709154
   Valmari A., 1988, Application and Theory of Petri Nets. 9th European Workshop, P95
   VALMARI A, 1997, DIMACS SERIES DISCRE, V29, P213
   Valmari A, 2018, INT J SOFTW TOOLS TE, V20, P589, DOI 10.1007/s10009-017-0481-2
   Valmari A, 2017, LECT NOTES COMPUT SC, V10470, P140, DOI 10.1007/978-3-662-55862-1_7
   Zielonka W, 1998, THEOR COMPUT SCI, V200, P135, DOI 10.1016/S0304-3975(98)00009-7
NR 42
TC 1
Z9 1
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2022
VL 24
IS 5
SI SI
BP 735
EP 756
DI 10.1007/s10009-022-00672-0
EA OCT 2022
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6I0IB
UT WOS:000864207200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Bettini, L
   Di Ruscio, D
   Iovino, L
   Pierantonio, A
AF Bettini, Lorenzo
   Di Ruscio, Davide
   Iovino, Ludovico
   Pierantonio, Alfonso
TI Supporting safe metamodel evolution with edelta
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model-driven engineering; Metamodel evolution; Parallel evolution; Safe
   evolution
AB Metamodels play a crucial role in any model-based application. They underpin the definition of models and tools, and the development of model management operations, including model transformations and analysis. Like any software artifacts, metamodels are subject to evolution to improve their quality or implement unforeseen requirements. Metamodels can be defined in terms of existing ones to increase the separation of concerns and foster reuse. However, the induced coupling can give additional evolution complexity, and dedicated support is needed to avoid breaking metamodels defined in terms of those being changed. This paper presents a tool-supported approach that can automatically analyze the available metamodels and alert modelers in case of change operations that can give place to invalid situations like dangling references. The approach has been implemented in the Edelta development environment and successfully applied to metamodels retrieved from a publicly available Ecore models dataset.
C1 [Bettini, Lorenzo] Univ Florence, DiSIA, Florence, Italy.
   [Di Ruscio, Davide; Pierantonio, Alfonso] Univ Aquila, Informat Engn Comp Sci & Math Dept, Laquila, Italy.
   [Iovino, Ludovico] Gran Sasso Sci Inst, Laquila, Italy.
C3 University of Florence; University of L'Aquila; Gran Sasso Science
   Institute (GSSI)
RP Iovino, L (corresponding author), Gran Sasso Sci Inst, Laquila, Italy.
EM lorenzo.bettini@unifi.it; davide.diruscio@univaq.it;
   ludovico.iovino@gssi.it; alfonso.pierantonio@univaq.it
RI Di Ruscio, Davide/AAG-4674-2020
OI Di Ruscio, Davide/0000-0002-5077-6793; Iovino,
   Ludovico/0000-0001-6552-2609
CR Acerbis R, 2008, LECT NOTES BUS INF P, V11, P392
   Arendt T, 2013, AUTOMAT SOFTW ENG, V20, P141, DOI 10.1007/s10515-012-0114-7
   Barriga A., 2020, P 23 ACM IEEE INT C, P1
   Barriga A, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a13
   ben Fadhel A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P212, DOI 10.1109/ICSM.2012.6405274
   Bettini L., 2020, P 23 ACM IEEE INT C, P1
   Bettini L., 2017, MODELS SATELLITE EVE, P71
   Bettini L, 2019, IEEE ACCESS, V7, P16364, DOI 10.1109/ACCESS.2019.2891357
   Burger Erik, 2010, GESELLSCHAFT INFORMA, P285
   de Lara J, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P147, DOI 10.1145/3276604.3276610
   Debray SK, 2000, ACM T PROGR LANG SYS, V22, P378, DOI 10.1145/349214.349233
   Del Fabro M.D., 2006, ECL MOD S ECL SUMM E, V2006, P37
   Di Cosmo R, 2011, SCI COMPUT PROGRAM, V76, P1144, DOI 10.1016/j.scico.2010.11.001
   Di Rocco J, 2020, SOFTW SYST MODEL, V19, P401, DOI 10.1007/s10270-019-00748-7
   Durisic D, 2014, EUROMICRO CONF PROC, P141, DOI 10.1109/SEAA.2014.21
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Hassam K, 2011, EUR CON SFTWR MTNCE, P151, DOI 10.1109/CSMR.2011.21
   Hebig R, 2017, IEEE T SOFTWARE ENG, V43, P396, DOI 10.1109/TSE.2016.2610424
   Hinkel G, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P145
   Iovino L, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a3
   Khelladi DE, 2016, INFORM SYST, V62, P220, DOI 10.1016/j.is.2016.05.002
   Kling Wolfgang, 2012, Software Language Engineering. 4th International Conference, SLE 2011. Revised Selected Papers, P180, DOI 10.1007/978-3-642-28830-2_10
   Kolovos D., 2020, P 23 INT C MOD DRIV, P12, DOI [10.1145/3365438.3410943, DOI 10.1145/3365438.3410943]
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Langer P, 2013, J SYST SOFTWARE, V86, P551, DOI 10.1016/j.jss.2012.09.037
   LouisMRose Richard F, 2009, PROC JOINT MODSE MCC, P6
   Mahouachi Rim, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P126, DOI 10.1007/978-3-642-39742-4_11
   Mens T., 2006, LMO, P167
   Mens T., 2003, ELECTRON NOTES THEOR, V82, P483, DOI [10.1016/S1571-0661(05)82624-6, DOI 10.1016/S1571-0661(05)82624-6]
   Mens T, 2006, LECT NOTES COMPUT SC, V4143, P219
   Rodríguez C, 2011, LECT NOTES COMPUT SC, V6705, P83, DOI 10.1007/978-3-642-21952-8_8
   Rutle A, 2020, SOFTW SYST MODEL, V19, P1107, DOI 10.1007/s10270-020-00805-6
   Silva N., 2019, NEW PERSPECTIVES INF, P1
   Steinberg D., 2009, EMF ECLIPSE MODELING
   Strittmatter M., 2016, ME MODELS, P30
   Sugawara N., 2013, US Patent, Patent No. [8,347,272, 8347272]
   Suny┬u┬ G., 2001, LNCS, V2185, P134
   Treinen R., 2008, ARXIV PREPRINT ARXIV
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Williams JR, 2013, Eessmod@ Models, V1078, P55
   Xing ZC, 2006, WORK CONF REVERSE EN, P263
NR 42
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2022
VL 24
IS 2
BP 247
EP 260
DI 10.1007/s10009-022-00646-2
EA FEB 2022
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0F1UH
UT WOS:000750709600001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Ruland, S
   Lochau, M
   Fehse, O
   Schürr, A
AF Ruland, Sebastian
   Lochau, Malte
   Fehse, Oliver
   Schuerr, Andy
TI CPA/Tiger-MGP: test-goal set partitioning for efficient multi-goal
   test-suite generation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE CPAchecker; Test-goal partitioning; Multi-goal test coverage
AB Software model checkers can be used to generate high-quality test cases from counterexamples of a reachability analysis. However, naively invoking a software model checker for each test goal in isolation does not scale to large programs as a repeated construction of an abstract program model is expensive. In contrast, invoking a software model checker for reaching all test goals in a single run leads to few abstraction possibilities and thus to low scalability. Therefore, our approach pursues a test-suite generation technique that incorporates configurable multi-goal set partitioning (MGP) including configurable partitioning strategies and simultaneous processing of multiple test goals in one reachability analysis. Our approach employs recent techniques from multi-property verification in order to control the computational overhead for tracking multi-goal reachability information. Our tool, called CPA/Tiger-MGP, uses predicate-abstraction-based program analysis in the model-checking framework CPAchecker.
C1 [Ruland, Sebastian; Lochau, Malte; Fehse, Oliver; Schuerr, Andy] Tech Univ Darmstadt, Dept Elect Engn & Informat Technol, Real Time Syst Lab, Darmstadt, Germany.
C3 Technical University of Darmstadt
RP Ruland, S (corresponding author), Tech Univ Darmstadt, Dept Elect Engn & Informat Technol, Real Time Syst Lab, Darmstadt, Germany.
EM sebastian.ruland@es.tu-damstadt.de; malte.lochau@es.tu-darmstadt.de;
   andy.schuerr@es.tu-darmstadt.de
FU Projekt DEAL; Hessian LOEWE initiative within the Software-Factory 4.0
   project
FX Open Access funding provided by Projekt DEAL. This work was funded by
   the Hessian LOEWE initiative within the Software-Factory 4.0 project.
CR Beyer D, 2004, PROC INT CONF SOFTW, P326, DOI 10.1109/ICSE.2004.1317455
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Beyer D., 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P189
   Beyer D, 2007, LECT NOTES COMPUT SC, V4590, P504
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Lowe S, 2014, LNCS, P392, DOI DOI 10.1007/978-3-642-54862-827
NR 7
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2021
VL 23
IS 6
BP 853
EP 856
DI 10.1007/s10009-020-00574-z
EA JUN 2020
PG 4
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XU5UO
UT WOS:000537648100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Cordy, M
   Legay, A
AF Cordy, Maxime
   Legay, Axel
TI Verification and abstraction of real-time variability-intensive systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model checking; Variability; Real time; Abstraction
ID MODEL-CHECKING; REFINEMENT; AUTOMATA
AB Featured timed automaton (FTA) is a concise formalism to model the real-time behaviour of variability-intensive systems. FTA extends the timed automaton by allowing optional transitions and clock constraints that are relevant only for a subset of the system variants. Then, one can verify a variant individually by deriving the corresponding TA from the FTA and using established tools like UPPAAL or apply family-based algorithms to verify all variants at once. These latter algorithms consist of computing the reachability relation in FTA as an antichain. Yet, they suffer from a three-source complexity: the number of states, the number of time clocks and the number of variants. This motivates the design of abstraction refinement heuristics to reduce verification effort. In this paper, we present the syntax and semantics of FTA, efficient algorithms to compute their reachability relations, and discuss how abstraction methods can be applied.
C1 [Cordy, Maxime] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
   [Legay, Axel] Catholic Univ Louvain, Louvain La Neuve, Belgium.
C3 University of Luxembourg; Universite Catholique Louvain
RP Cordy, M (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
EM maxime.cordy@uni.lu; axel.legay@uclouvain.be
OI Cordy, Maxime/0000-0001-8312-1358
CR Albarghouthi Aws, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P672, DOI 10.1007/978-3-642-31424-7_48
   ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   Apel S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P372, DOI 10.1109/ASE.2011.6100075
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Behrmann G., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P174
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Bengtsson J., 1996, Tools and Algorithms for the Construction and Analysis of Systems. Second International Workshop, TACAS '96. Proceedings, P431
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Beyer D, 2013, LECT NOTES COMPUT SC, V7795, P594
   Chechik M, 2003, ACM T SOFTW ENG METH, V12, P371, DOI 10.1145/990010.990011
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Cledou G, 2017, LECT NOTES COMPUT SC, V10522, P51, DOI 10.1007/978-3-319-68972-2_4
   Comtet L., 1974, SPERNER SYSTEMS 7 2
   Cordy M., 2012, SPLC 12
   Cordy M., 2012, VAMOS, P183, DOI DOI 10.1145/2110147.2110168
   Cordy M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P190, DOI 10.1145/2635868.2635919
   Cordy M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P141
   Cordy M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P472, DOI 10.1109/ICSE.2013.6606593
   Cordy M, 2012, PROC INT CONF SOFTW, P672, DOI 10.1109/ICSE.2012.6227150
   Dierks H, 2007, LECT NOTES COMPUT SC, V4763, P114
   Dill D. L., 1990, P INT WORKSH AUT VER, P197
   Dimovski AS, 2017, LECT NOTES COMPUT SC, V10460, P249, DOI 10.1007/978-3-319-63121-9_13
   Ehlers R, 2010, REAL TIM SYST SYMP P, P360, DOI 10.1109/RTSS.2010.36
   Falke S, 2013, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2013.6693138
   KRAMER J, 1983, IEE PROC-E, V130, P1, DOI 10.1049/ip-e.1983.0001
   Lazreg S., 2018, 33 S APPL COMP
   Luthmann L, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P104, DOI 10.1145/3106195.3106204
   Miller A, 2001, SELF-ASSEMBLING PEPTIDE SYSTEMS IN BIOLOGY, MEDICINE AND ENGINEERING, P207
   Morse J, 2013, LECT NOTES COMPUT SC, V7795, P619, DOI 10.1007/978-3-642-36742-7_47
   Nagaoka T, 2010, IEICE T INF SYST, VE93D, P994, DOI 10.1587/transinf.E93.D.994
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Post Hendrik, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P347, DOI 10.1109/ASE.2008.45
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P287, DOI 10.1016/j.jlamp.2015.11.006
   Wang Yi, 1990, CONCUR '90. Theories of Concurrency: Unification and Extension, P502, DOI 10.1007/BFb0039080
NR 37
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2019
VL 21
IS 6
SI SI
BP 635
EP 649
DI 10.1007/s10009-019-00537-z
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JL0QK
UT WOS:000495240000003
DA 2024-07-18
ER

PT J
AU Fearnley, J
   Jain, S
   de Keijzer, B
   Schewe, S
   Stephan, F
   Wojtczak, D
AF Fearnley, John
   Jain, Sanjay
   de Keijzer, Bart
   Schewe, Sven
   Stephan, Frank
   Wojtczak, Dominik
TI An ordered approach to solving parity games in quasi-polynomial time and
   quasi-linear space
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Parity games; Progress measure; Quasi-polynomial
ID AUTOMATA
AB Parity games play an important role in model checking and synthesis. In their paper, Calude et al. have recently shown that these games can be solved in quasi-polynomial time. We show that their algorithm can be implemented efficiently: we use their data structure as a progress measure, allowing for a backward implementation instead of a complete unravelling of the game. To achieve this, a number of changes have to be made to their techniques, where the main one is to add power to the antagonistic player that allows for determining her rational move without changing the outcome of the game. We provide a first implementation for a quasi-polynomial algorithm, test it on small examples, and provide a number of side results, including minor algorithmic improvements, a quasi-bi-linear complexity in the number of states and edges for a fixed number of colours, matching lower bounds for the algorithm of Calude et al., and a complexity index associated to our approach, which we compare to the recently proposed register index.
C1 [Fearnley, John; Schewe, Sven; Wojtczak, Dominik] Univ Liverpool, Dept Comp Sci, Liverpool, Merseyside, England.
   [Jain, Sanjay; Stephan, Frank] Natl Univ Singapore, Dept Comp Sci, Sch Comp, Singapore, Singapore.
   [de Keijzer, Bart] Univ Essex, Dept Comp Sci & Elect Engn, Colchester, Essex, England.
   [Stephan, Frank] Natl Univ Singapore, Dept Math, Singapore, Singapore.
C3 University of Liverpool; National University of Singapore; University of
   Essex; National University of Singapore
RP de Keijzer, B (corresponding author), Univ Essex, Dept Comp Sci & Elect Engn, Colchester, Essex, England.
EM john.fearnley@liverpool.ac.uk; sanjay@comp.nus.edu.sg;
   b.dekeijzer@essex.ac.uk; sven.schewe@liverpool.ac.uk;
   fstephan@comp.nus.edu.sg; d.wojtzcak@liverpool.ac.uk
OI jain, sanjay/0000-0001-6798-8330; Schewe, Sven/0000-0002-9093-9518;
   Stephan, Frank/0000-0001-9152-1706; Wojtczak,
   Dominik/0000-0001-5560-0546
FU NUS Grant [C252-000-087-001]; Singapore Ministry of Education Academic
   Research Fund Tier 2 Grant [MOE2016-T2-1-019 / R146-000-234-112]; EPSRC
   [EP/M027287/1, EP/P020909/1]; EPSRC [EP/H046623/1, EP/P020909/1,
   EP/M027287/1] Funding Source: UKRI
FX We thank Xiang Fei Ding for pointing out an error in a previous version
   of this manuscript. We thank Tin Lok Wong for help with programming and
   implementation of the algorithms. We thank anonymous reviewers for many
   helpful suggestions and improvements made to a preliminary submission of
   this manuscript. Sanjay Jain was supported in part by NUS Grant
   C252-000-087-001. Further, Sanjay Jain and Frank Stephan were supported
   in part by the Singapore Ministry of Education Academic Research Fund
   Tier 2 Grant MOE2016-T2-1-019 / R146-000-234-112. Sven Schewe and
   Dominik Wojtczak were supported in part by EPSRC Grant EP/M027287/1.
   Further, John Fearnley, Bart de Keijzer, Sven Schewe and Dominik
   Wojtczak were supported in part by EPSRC Grant EP/P020909/1.
CR Allen Emerson E., 1986, LICS, P267
   Allen Emerson E., 1993, LECT NOTES COMPUT SC, P385, DOI DOI 10.1007/3-540-56922-7_32
   Alur R, 2002, J ACM, V49, P672, DOI 10.1145/585265.585270
   [Anonymous], THESIS
   [Anonymous], P INT WORKSH GAM DES
   [Anonymous], LOG METHODS COMPUT S
   [Anonymous], 2000, COMPUTER AIDED VERIF, DOI DOI 10.1007/10722167_18
   Ash R., 1990, ser. Dover books on advanced mathematics
   Berwanger D, 2006, LECT NOTES COMPUT SC, V3884, P524
   Bjorklund H, 2007, DISCRETE APPL MATH, V155, P210, DOI 10.1016/j.dam.2006.04.029
   Browne A, 1997, THEOR COMPUT SCI, V178, P237, DOI 10.1016/S0304-3975(96)00228-9
   Calude CS, 2017, ACM S THEORY COMPUT, P252, DOI 10.1145/3055399.3055409
   Chatterjee K, 2015, IEEE S LOG, P269, DOI 10.1109/LICS.2015.34
   de Alfaro L, 2001, IEEE S LOG, P279, DOI 10.1109/LICS.2001.932504
   EMERSON EA, 1991, PROCEEDINGS - 32ND ANNUAL SYMPOSIUM ON FOUNDATIONS OF COMPUTER SCIENCE, P368, DOI 10.1109/SFCS.1991.185392
   Fearnley J, 2017, SPIN'17: PROCEEDINGS OF THE 24TH ACM SIGSOFT INTERNATIONAL SPIN SYMPOSIUM ON MODEL CHECKING OF SOFTWARE, P112, DOI 10.1145/3092282.3092286
   Fearnley J, 2010, LECT NOTES ARTIF INT, V6355, P212, DOI 10.1007/978-3-642-17511-4_13
   Friedmann O., 2017, PGSOLVER VERSION 41
   FRIEDMANN O, 1932, RAIRO, V45, P449, DOI DOI 10.1051/ita/2011124
   Friedmann O, 2009, LECT NOTES COMPUT SC, V5799, P182, DOI 10.1007/978-3-642-04761-9_15
   Friedmann Oliver, 2014, The PGSolver collection of parity game solvers
   Hahn EM, 2016, LECT NOTES COMPUT SC, V9780, P291, DOI 10.1007/978-3-319-41540-6_16
   Jurdzinski M, 1998, INFORM PROCESS LETT, V68, P119, DOI 10.1016/S0020-0190(98)00150-1
   JURDZINSKI M, LECT NOTES COMPUT SC, V1770, P290
   Jurdzinski M, 2006, PROCEEDINGS OF THE SEVENTHEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P117, DOI 10.1145/1109557.1109571
   Jurdziski M., 2017, P LICS 2017
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Lehtinen K, P LICS 18
   LUDWIG W, 1995, INFORM COMPUT, V117, P151, DOI 10.1006/inco.1995.1035
   MCNAUGHTON R, 1993, ANN PURE APPL LOGIC, V65, P149, DOI 10.1016/0168-0072(93)90036-D
   Obdrzálek J, 2003, LECT NOTES COMPUT SC, V2725, P80
   Piterman N, 2006, IEEE S LOG, P255, DOI 10.1109/LICS.2006.28
   Schewe S., 2006, P CSL, P591
   Schewe S, 2007, LECT NOTES COMPUT SC, V4407, P127, DOI 10.1007/978-3-540-71410-1_10
   Schewe S, 2017, J COMPUT SYST SCI, V84, P243, DOI 10.1016/j.jcss.2016.10.002
   Schewe S, 2015, LECT NOTES COMPUT SC, V9135, P388, DOI 10.1007/978-3-662-47666-6_31
   Schewe Sven., 2008, Proceedings of the 17th Annual Conference of the European Association for Computer Science Logic (CSL 2008), 15-19 September, Bertinoro, Italy, volume 5213 of Lecture Notes in Computer Science, P368
   Totzke P., 2017, IMPLEMENTATION SUCCI
   Vardi MY, 1998, LECT NOTES COMPUT SC, V1443, P628, DOI 10.1007/BFb0055090
   Wilke T, 2001, B BELG MATH SOC-SIM, V8, P359, DOI 10.36045/bbms/1102714178
   Zielonka W, 1998, THEOR COMPUT SCI, V200, P135, DOI 10.1016/S0304-3975(98)00009-7
NR 41
TC 6
Z9 6
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2019
VL 21
IS 3
SI SI
BP 325
EP 349
DI 10.1007/s10009-019-00509-3
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY4RT
UT WOS:000468116300006
DA 2024-07-18
ER

PT J
AU Ge, N
   Jenn, E
   Breton, N
   Fonteneau, Y
AF Ge, Ning
   Jenn, Eric
   Breton, Nicolas
   Fonteneau, Yoann
TI Integrated formal verification of safety-critical software
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT Joint 21st International Workshop on Formal Methods for Industrial
   Critical Systems (FMICS) / 16th International Workshop on Automated
   Verification of Critical Systems (AVoCS)
CY SEP 26-28, 2016
CL Pisa, ITALY
SP European Res Consortium Informat & Math, Formal Methods Europe, Springer Intl Publishing AG
DE Integration; Formal verification; Safety-critical embedded software;
   HLL; S3; SAT; Floating-point arithmetic
AB This work presents a formal verification process based on the Systerel Smart Solver (S3) toolset for the development of safety-critical embedded software. In order to guarantee the correctness of the implementation of a set of textual requirements, the process integrates different verification techniques (inductive proof, bounded model checking, test cases generation, and equivalence proof) to handle different types of properties at their best capacities. It is aimed at the verification of properties at system, design, and code levels. To handle the floating-point arithmetic (FPA) in both the design and the code, an FPA library is designed and implemented in S3. This work is illustrated on an Automatic Rover Protection system implemented onboard a robot. Focus is placed on the verification of safety and functional properties and on the equivalence proof between the design model and the generated code.
C1 [Ge, Ning] Beihang Univ, Sch Software, Beijing, Peoples R China.
   [Ge, Ning; Jenn, Eric] IRT St Exupery, Toulouse, France.
   [Ge, Ning; Breton, Nicolas; Fonteneau, Yoann] Systerel, Toulouse, France.
   [Jenn, Eric] Thales Avion, Toulouse, France.
C3 Beihang University; Thales Group
RP Ge, N (corresponding author), Beihang Univ, Sch Software, Beijing, Peoples R China.; Ge, N (corresponding author), IRT St Exupery, Toulouse, France.; Ge, N (corresponding author), Systerel, Toulouse, France.
EM gening@buaa.edu.cn; eric.jenn@irt-saintexupery.com;
   nicolas.breton@systerel.com; yoann.fonteneau@systerel.com
FU INGEQUIP project
FX This work has been funded by the INGEQUIP project. The authors would
   like to thank the members in the project for their good cooperation. We
   are thankful to Remi Delmas and Michael Dierkes for sharing the
   experimental results on the TSV use case and their expertise. The
   authors want to express appreciation to the anonymous reviewers for
   their constructive and helpful comments.
CR [Anonymous], 2011, 330 RTCA
   [Anonymous], 2011, 178C RTCA
   [Anonymous], INT C HYBR SYST COMP
   BENVENISTE A, 1991, P IEEE, V79, P1270, DOI 10.1109/5.97297
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Biere Armin., 1999, Symbolic model checking without BDDs
   Birgmeier J, 2014, LECT NOTES COMPUT SC, V8559, P831, DOI 10.1007/978-3-319-08867-9_55
   BJESSE P, 2000, FORMAL METHODS COMPU, P409
   Blanchet B, 2003, ACM SIGPLAN NOTICES, V38, P196, DOI 10.1145/780822.781153
   Brain M., STATIC ANAL, P412
   Brain M, 2014, FORM METHOD SYST DES, V45, P213, DOI 10.1007/s10703-013-0203-7
   Brillout Angelo, 2009, Proceedings of the 2009 9th International Conference Formal Methods in Computer-Aided Design (FMCAD), P69, DOI 10.1109/FMCAD.2009.5351141
   Caspi P, 2003, ACM SIGPLAN NOTICES, V38, P153, DOI 10.1145/780731.780754
   Champion A, 2015, SCI COMPUT PROGRAM, V103, P71, DOI 10.1016/j.scico.2014.10.004
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   Clabaut M., 2016, 8 EUR C EMB REAL TIM
   Cody William James, 1980, Prentice-Hall series in computational mathematics
   Cuenot P., 2016, 8 EUR C EMB REAL TIM
   Cuenot P., 2016, 8 EUR C EMB REAL TIM
   Dajani-Brown S, 2003, LECT NOTES COMPUT SC, V2648, P34
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dierkes M, 2011, LECT NOTES COMPUT SC, V6959, P102, DOI 10.1007/978-3-642-24431-5_9
   Dieumegard A., 2017, 9 NASA FORM METH S N
   Frohlich A., 2015, 29 AAAI C ART INT
   Ge N., 2016, ARXIV161007410
   Ge N, 2017, 11 INT S THEOR ASP S
   Ge N, 2016, LECT NOTES COMPUT SC, V9933, P171, DOI 10.1007/978-3-319-45943-1_12
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Harrison J, 2006, LECT NOTES COMPUT SC, V3965, P211
   IEEE Standard Association, 2008, IEEE STAND FLOAT POI
   Lapschies F, 2012, SATISFIABILITY MODUL
   Leeser Miriam., 2014, DATE, P1
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2725, P1
   Meseguer J, 2010, LECT NOTES COMPUT SC, V6447, P303, DOI 10.1007/978-3-642-16901-4_21
   Monniaux D, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1353445.1353446
   Rushby J, 1999, LECT NOTES COMPUT SC, V1680, P1
   Sha L., 2009, IEEE REAL TIME SYST
   Sheeran M, 2000, LECT NOTES COMPUT SC, V1954, P108
   Wahl, 2010, INT WORKSH SAT MOD T, P151
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 40
TC 4
Z9 4
U1 1
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2018
VL 20
IS 4
SI SI
BP 423
EP 440
DI 10.1007/s10009-017-0475-0
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GL5XP
UT WOS:000437248300005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Grov, G
   Lin, YH
AF Grov, Gudmund
   Lin, Yuhui
TI The Tinker tool for graphical tactic development
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Interactive theorem proving; Tactic languages; Development; Maintenance
ID DIAGRAM; WORTH
AB PSGraph (Grov et al. in LPAR. Springer, Berlin, pp 324-339, 2013) is a graphical language to support the development and maintenance of proof tactics for interactive theorem provers. By using labelled hierarchical graphs this formalisation improves upon analysis and maintenance found in traditional tactic languages. Tool support for PSGraph is achieved by Tinker (Grov et al. in UITP 2014, ENTCS, vol 167. Open Publishing Association, London, pp 23-34, 2014; Lin et al. in Tools and algorithms for the construction and analysis of systems. Springer, Berlin, pp 573-579, 2016): a theorem prover-independent system, which is connected to several different provers, with a graphical user interface including novel features to develop and debug proof tactics graphically. In this paper we provide a detailed and formal account of PSGraph and show how theorem prover independence is achieved by Tinker. We then show practical use of PSGraph and Tinker by developing several proof patterns using the language and tool.
C1 [Grov, Gudmund; Lin, Yuhui] Heriot Watt Univ, Edinburgh, Midlothian, Scotland.
C3 Heriot Watt University
RP Grov, G (corresponding author), Heriot Watt Univ, Edinburgh, Midlothian, Scotland.
EM G.Grov@hw.ac.uk; Y.Lin@hw.ac.uk
FU EPSRC [EP/J001058, EP/K503915, EP/H023852, EP/H024204]; SICSA; EPSRC
   [EP/J001058/1, EP/H024204/1, EP/N014758/1] Funding Source: UKRI
FX This work has been supported by EPSRC Grants EP/J001058, EP/K503915,
   EP/H023852 and EP/H024204. The first author is supported by a SICSA
   Industrial Fellowship.
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Adams M, 2015, LECT NOTES COMPUT SC, V9509, P53, DOI 10.1007/978-3-662-49224-6_6
   [Anonymous], 2015, THESIS
   [Anonymous], 2002, THESIS
   [Anonymous], 2010, EPIC SERIES COMPUTIN, DOI DOI 10.29007/36DT
   Armando A., 1999, Automated Software Engineering, V6, P329, DOI 10.1023/A:1008763422061
   Arthan R., 2005, Z HOL PROOFPOWER BCS
   Bjorner D, 1978, LECT NOTES COMPUTER, V61, DOI [10.1007/3-540-08766-4, DOI 10.1007/3-540-08766-4]
   Bornat R, 1997, LECT NOTES ARTIF INT, V1249, P412
   Bras P. L., 2015, THESIS
   Bras P. L., TINKER USER GUIDE
   Bundy A, 1998, LECT NOTES ARTIF INT, V1397, P10
   Bundy A., 2005, CAMBRIDGE TRACTS THE, V56
   Burstall Rod, 2000, ENTCS, V31, P16, DOI DOI 10.1016/S1571-0661(05)80327-5
   Delahaye D., 2002, Electronic Notes in Theoretical Computer Science, V70, DOI 10.1016/S1571-0661(04)80508-5
   Dixon L, 2004, LECT NOTES COMPUT SC, V3223, P83
   Dixon L, 2013, MATH STRUCT COMP SCI, V23, P308, DOI 10.1017/S0960129512000138
   Freitas L, 2014, LECT NOTES COMPUT SC, V8442, P279, DOI 10.1007/978-3-319-06410-9_20
   Grov Gudmund, 2013, Logic for Programming, Artificial Intelligence and Reasoning. 19th International Conference, LPAR-19, Proceedings: LNCS 8312, P324, DOI 10.1007/978-3-642-45221-5_23
   Grov G., TINKER WEBPAGE RESOU
   Grov G, 2014, ELECTRON PROC THEOR, P23, DOI 10.4204/EPTCS.167.5
   Hupel L, 2014, LECT NOTES ARTIF INT, V8543, P328, DOI 10.1007/978-3-319-08434-3_24
   JONES CB, 1990, CASE STUDIES SYSTEMA
   Kissinger A., 2012, CORR
   Kissinger A., 2015, GRAPH TRANSFORMATION, P33
   Kissinger A, 2015, LECT NOTES ARTIF INT, V9195, P326, DOI 10.1007/978-3-319-21401-6_22
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Liang YB, 2016, LECT NOTES COMPUT SC, V9675, P262, DOI 10.1007/978-3-319-33600-8_19
   Libal T, 2014, ELECTRON P THEOR COM, P35, DOI 10.4204/EPTCS.167.6
   Lin YH, 2016, J FORMALIZ REASON, V9, P69
   Lin YH, 2016, LECT NOTES COMPUT SC, V9636, P573, DOI 10.1007/978-3-662-49674-9_37
   Lin YH, 2016, LECT NOTES COMPUT SC, V9675, P319, DOI 10.1007/978-3-319-33600-8_28
   Matichuk Daniel, 2014, Interactive Theorem Proving. 5th International Conference, ITP 2014, Held as Part of the Vienna Summer of Logic, VSL 2014. Proceedings: LNCS 8558, P390, DOI 10.1007/978-3-319-08970-6_25
   O'Halloran C, 2013, AUTOMAT SOFTW ENG, V20, P237, DOI 10.1007/s10515-012-0116-5
   Ozols MA, 1997, LECT NOTES ARTIF INT, V1249, P400
   Pak K., 2010, STUDIES LOGIC GRAMMA, V22, P95
   Paulson L. C., 1994, GENERIC THEOREM PROV, V828
   Siekmann Jorg, 1999, FORM ASP COMPUT, V11, P326, DOI [10.1007/s001650050053, DOI 10.1007/S001650050053]
   STERLING L, 1989, J SYMB COMPUT, V7, P71, DOI 10.1016/S0747-7171(89)80007-0
   Woodcock Jim., 1996, Using Z: specification, refinement, and proof, V39
NR 40
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2018
VL 20
IS 2
SI SI
BP 139
EP 155
DI 10.1007/s10009-017-0452-7
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA6HE
UT WOS:000428433000003
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Tran-Jorgensen, PWV
   Larsen, PG
   Leavens, GT
AF Tran-Jorgensen, Peter W. V.
   Larsen, Peter Gorm
   Leavens, Gary T.
TI Automated translation of VDM to JML-annotated Java
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Design-by-Contract; Formal methods; VDM; Java; JML; Code-generation
AB When a system specified using the Vienna Development Method (VDM) is realised using code-generation, no guarantees are currently made about the correctness of the generated code. In this paper, we improve code-generation of VDM models by taking contract-based elements such as invariants and pre- and postconditions into account during the code-generation process. The contract-based elements of the Vienna Development Method Specification Language (VDM-SL) are translated into corresponding constructs in the Java Modelling Language (JML) and used to validate the generated code against the properties of the VDM model. VDM-SL and JML are both Design-by-Contract (DbC) languages, with the difference that VDM-SL supports abstract modelling and system specification, while JML is used for detailed specification of Java classes and interfaces. We describe the semantic differences between the contract-based elements of VDM-SL and JML and formulate the translation as a set of rules. We further demonstrate how dynamic JML assertion checks can be used to ensure the consistency of VDM's subtypes when a model is code-generated. The translator is fully automated and produces JML-annotated Java programs that can be checked for correctness using JML tools.
C1 [Tran-Jorgensen, Peter W. V.; Larsen, Peter Gorm] Aarhus Univ, Aarhus, Denmark.
   [Leavens, Gary T.] Univ Cent Florida, Orlando, FL 32816 USA.
C3 Aarhus University; State University System of Florida; University of
   Central Florida
RP Tran-Jorgensen, PWV (corresponding author), Aarhus Univ, Aarhus, Denmark.
EM peter.w.v.jorgensen@gmail.com; pgl@eng.au.dk; leavens@cs.ucf.edu
OI Larsen, Peter Gorm/0000-0002-4589-1500
FU US National Science foundation [CCF 1518789, CNS 1228695]; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1518789] Funding Source: National Science Foundation;
   Division of Computing and Communication Foundations; Direct For Computer
   & Info Scie & Enginr [1518732] Funding Source: National Science
   Foundation
FX The authors would like to thank Victor Bandur, Nick Battle and the
   anonymous reviewers for their valuable feedback on earlier versions of
   this paper. The work of Leavens was supported in part by the US National
   Science foundation under Grants CCF 1518789 and CNS 1228695.
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   Andrews D., 1998, 19989 LEIC U
   [Anonymous], P 12 ANN INT C ASPEC
   [Anonymous], 2005, VALIDATED DESIGNS OB, DOI DOI 10.1007/B138800
   [Anonymous], 1980, Software Development: A Rigorous Approach
   Bjorner Dines., 1978, LECT NOTES COMPUTER, V61
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Cok DR, 2005, J OBJECT TECHNOL, V4, P77, DOI 10.5381/jot.2005.4.8.a4
   Cok DR, 2011, LECT NOTES COMPUT SC, V6617, P472, DOI 10.1007/978-3-642-20398-5_35
   Filliatre JC, 2003, 1366 LRI U PAR SUD
   Fitzgerald J, 2009, MODELLING SYSTEMS: PRACTICAL TOOLS AND TECHNIQUES IN SOFTWARE DEVELOPMENT, 2ND EDITION, P1, DOI 10.1017/CBO9780511626975
   Fitzgerald JS, 2008, WILEY ENCY COMPUTER
   Hubbers E., 2003, FORUM SPECIFICATION, P263
   Jin D, 2008, ALPIT 2008: SEVENTH INTERNATIONAL CONFERENCE ON ADVANCED LANGUAGE PROCESSING AND WEB INFORMATION TECHNOLOGY, PROCEEDINGS, P320, DOI 10.1109/ALPIT.2008.25
   Jorgensen P. W. V., 2014, P 12 OV WORKSH
   Klebanov A., 2008, P SPRING SUMM YOUNG, P41
   Larsen Peter Gorm, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P278, DOI 10.1109/SEFM.2010.32
   Larsen P.G., 2010, TR201006 OV OP SOURC
   Larsen Peter Gorm., 2010, SIGSOFT Softw. Eng. Notes, V35, P1, DOI DOI 10.1145/1668862.1668864
   Larsen PG, 2001, J UNIVERS COMPUT SCI, V7, P692
   Lausdahl K, 2011, LECT NOTES COMPUT SC, V6991, P179, DOI 10.1007/978-3-642-24559-6_14
   Leavens G.T., 2013, JML Reference Manual
   Lensink Leonard, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P310, DOI 10.1007/978-3-642-28891-3_30
   McCarthy J., 1961, W JOINT COMP C
   Meyer B., 1988, Object-Oriented Software Construction
   Müller P, 2006, SCI COMPUT PROGRAM, V62, P253, DOI 10.1016/j.scico.2006.03.001
   OWRE S, 1992, LECT NOTES ARTIF INT, V607, P748
   Rivera V., 2015, INT J SOFTW TOOLS TE, V19, P1
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Tran-Jorgensen P. W. V., 2016, P 14 OV WORKSH
   Tran-Jorgensen P. W. V., 2016, TECH REP
   Vilhena C., 2008, THESIS
   WING JM, 1987, ACM T PROGR LANG SYS, V9, P1, DOI 10.1145/9758.10500
   Woodcock J., 1996, PRENTICE HALL INT SE
   Zhen Z., 2000, JAVA CARD TECHNOLOGY
   Zhou J, 2010, CHIN CONT DECIS CONF, P2312, DOI 10.1109/CCDC.2010.5498815
NR 36
TC 7
Z9 7
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2018
VL 20
IS 2
SI SI
BP 211
EP 235
DI 10.1007/s10009-017-0448-3
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA6HE
UT WOS:000428433000007
DA 2024-07-18
ER

PT J
AU Havelund, K
   Holzmann, GJ
AF Havelund, Klaus
   Holzmann, Gerard J.
TI Programming event monitors
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Log analysis; Specification language; Temporal
   logic; Domain-specific language; Scala; C
AB Specification languages for runtime verification are commonly rooted in formal languages, such as temporal logic, automata, or regular expressions. We argue that, for practical purposes, specification languages for monitoring should allow language features similar to those found in general purpose programming languages, in addition to providing specialized monitoring constructs. Using a realistic and large event-log, we compare two such programming-oriented monitoring language systems to a temporal logic-based monitoring system that was previously evaluated on the same log. The first programming-oriented language is a library in Scala developed for runtime verification. The other language is a scripting language, originally developed for fast static code analysis. We formulate the same reasonably complex properties as in the temporal logic case, using both methods, and compare the efficiency with which they can be checked against the large event log, and the ease with which the properties can be formulated.
C1 [Havelund, Klaus] CALTECH, Jet Prop Lab, Pasadena, CA 91125 USA.
   [Holzmann, Gerard J.] Nimble Res, Monrovia, CA USA.
C3 California Institute of Technology; National Aeronautics & Space
   Administration (NASA); NASA Jet Propulsion Laboratory (JPL)
RP Havelund, K (corresponding author), CALTECH, Jet Prop Lab, Pasadena, CA 91125 USA.
EM klaus.havelund@jpl.nasa.gov; gholzmann@acm.org
FU National Aeronautics and Space Administration; Nimble Research under
   Cyber Pack Ventures, Inc.
FX We would like to thank members of the MonPoly team, David Basin, Matus
   Harvan, Felix Klaedtke, and SrdanKrstic for their responses to our
   questions. The research performed by the first author was carried out at
   Jet Propulsion Laboratory, California Institute of Technology, under a
   contract with the National Aeronautics and Space Administration. The
   research of the second author was supported by Nimble Research, under a
   contract with Cyber Pack Ventures,Inc
CR Aad I., 2010, P INT WORKSHOP SENSI
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Barringer Howard, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P57, DOI 10.1007/978-3-642-21437-0_7
   Barringer H., 2011, SCALA DAYS 2011
   Barringer H, 2007, LECT NOTES COMPUT SC, V4839, P111
   Basin D., 2011, Proceedings of the 2011 Eighteenth International Symposium on Temporal Representation and Reasoning (TIME 2011), P88, DOI 10.1109/TIME.2011.14
   Basin D, 2015, FORM METHOD SYST DES, V46, P262, DOI 10.1007/s10703-015-0222-7
   Bauer A, 2011, LECT NOTES COMPUT SC, V6617, P13, DOI 10.1007/978-3-642-20398-5_3
   Colombo C, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P33, DOI 10.1109/SEFM.2009.13
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Decker N, 2016, INT J SOFTW TOOLS TE, V18, P205, DOI 10.1007/s10009-015-0380-3
   github, 2022, TRACECONTRACT GITHUB
   github, 2022, COBRA GITHUB
   github, 2022, FASTCSV GITHUB
   github, 2022, DAUT GITHUB
   Gorostiaga F, 2021, LECT NOTES COMPUT SC, V13047, P563, DOI 10.1007/978-3-030-90870-6_30
   Hallé S, 2012, IEEE T SERV COMPUT, V5, P192, DOI 10.1109/TSC.2011.10
   Havelund Klaus, 2015, International Journal on Software Tools for Technology Transfer, V17, P143, DOI 10.1007/s10009-014-0309-2
   Havelund K, 2014, 2014 THEORETICAL ASPECTS OF SOFTWARE ENGINEERING CONFERENCE (TASE), P1, DOI 10.1109/TASE.2014.37
   Holzmann GJ, 2017, INNOV SYST SOFTW ENG, V13, P35, DOI 10.1007/s11334-016-0282-x
   Joshi R., 2019, COMMUNICATION
   Kallwies H, 2022, LECT NOTES COMPUT SC, V13498, P314, DOI 10.1007/978-3-031-17196-3_20
   Kim M., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00254-3
   Kurklu E., 2020, 17 INT C THEOR ASP C
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   Odersky M., 2016, Programming in Scala: Updated for Scala 2.12, V3rd
   Perez I., 2020, Technical report NASA/TM 2020-220587
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Reger Giles, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P596, DOI 10.1007/978-3-662-46681-0_55
   scala, 2022, SCALA PROGRAMMING LA
   Shafiei N., 2020, 20 INT C RUNT VER RV
NR 31
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2024
VL 26
IS 1
BP 33
EP 47
DI 10.1007/s10009-023-00706-1
EA JUN 2023
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW1A5
UT WOS:001014509900002
DA 2024-07-18
ER

PT J
AU Biewer, S
   Finkbeiner, B
   Hermanns, H
   Köhl, MA
   Schnitzer, Y
   Schwenger, M
AF Biewer, Sebastian
   Finkbeiner, Bernd
   Hermanns, Holger
   Koehl, Maximilian A.
   Schnitzer, Yannik
   Schwenger, Maximilian
TI On the road with RTLola Testing Real Driving Emissions on your Phone
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
AB This paper is about shipping runtime verification to the masses. It presents the crucial technology enabling everyday car owners to monitor the behaviour of their cars in-the-wild. Concretely, we present an Android app that deploys rtlola runtime monitors for the purpose of diagnosing automotive exhaust emissions. For this, it harvests the availability of cheap Bluetooth adapters to the On-Board-Diagnostics (obd) ports, which are ubiquitous in cars nowadays. The app is a central piece in a set of tools and services we have developed for black-box analysis of automotive vehicles. We detail its use in the context of real driving emission (rde) tests and report on sample runs that helped identify violations of the regulatory framework currently valid in the European Union.
C1 [Biewer, Sebastian; Hermanns, Holger; Koehl, Maximilian A.; Schnitzer, Yannik] Saarland Univ, Saarland Informat Campus E1 3, Saarbrucken, Germany.
   [Finkbeiner, Bernd; Schwenger, Maximilian] CISPA, Saarland Informat Campus E1 1, Saarbrucken, Germany.
C3 Saarland University
RP Biewer, S (corresponding author), Saarland Univ, Saarland Informat Campus E1 3, Saarbrucken, Germany.
EM biewer@depend.uni-saarland.de; finkbeiner@cs.uni-saarland.de;
   hermanns@depend.uni-saarland.de; mkoehl@cs.uni-saarland.de;
   s8yaschn@stud.uni-saarland.de; maximilian.schwenger@cispa.saarland
OI Hermanns, Holger/0000-0002-2766-9615
FU DFG [389792660]; European Research Council (ERC) [683300, 695614,
   966770]; Key-Area Research and Development Program of Guangdong Province
   [2018B010107004]; European Research Council (ERC) [966770] Funding
   Source: European Research Council (ERC)
FX We thank everyone who tested or used LOLADRIVES, or will do so in the
   future. Thanks to Marc Gro beta jean for his support when we became lost
   in the jungle of privacy policies. We also thank Lorenz Hetterich, who
   built the car simulator for testing LOLADRIVES. Many thanks go to
   Florian Schie beta l, Felix Freiberger and Gregory Stock, who jointly
   keep our technical infrastructure running, and who have spent a lot of
   effort to make the CDP possible. We also owe special thanks to Sarah
   Sterz, who designed the gorgeous LOLADRIVES logo and produced great
   tutorial videos for loladrives.app! This work is partly supported by DFG
   grant 389792660 as part of TRR 248 - CPEC, by the European Research
   Council (ERC) grants 683300 (OSARES), 695614 (POWVER), and 966770
   (LEOpowver), and by the Key-Area Research and Development Program Grant
   2018B010107004 of Guangdong Province.
CR Adolf FM, 2017, LECT NOTES COMPUT SC, V10548, P33, DOI 10.1007/978-3-319-67531-2_3
   [Anonymous], 2021, Wikipedia
   [Anonymous], 2022, wikipedia
   [Anonymous], 2021, DDT4ALL
   [Anonymous], 2018, BBC
   Babiker M., 2022, CLIMATE CHANGE 2022, DOI DOI 10.1017/CBO9781107415416
   Baumeister J, 2020, LECT NOTES COMPUT SC, V12225, P28, DOI 10.1007/978-3-030-53291-8_3
   Baumeister J, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3358220
   Biewer, LOLADRIVES APP PRIVA
   Biewer Sebastian, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12652), P365, DOI 10.1007/978-3-030-72013-1_20
   Biewer S., 2021, PCDF ANALYSER
   Biewer S, 2022, LECT NOTES COMPUT SC, V13241, P71, DOI 10.1007/978-3-030-99429-7_4
   Biewer S, 2021, ACM T MODEL COMPUT S, V31, DOI 10.1145/3449354
   Biewer S, 2019, LECT NOTES COMPUT SC, V11785, P313, DOI 10.1007/978-3-030-30281-8_18
   Cheshire S., 1997, Computer Communication Review, V27, P209, DOI 10.1145/263109.263168
   Coenen N, 2019, LECT NOTES COMPUT SC, V11561, P121, DOI 10.1007/978-3-030-25540-4_7
   Contag M, 2017, P IEEE S SECUR PRIV, P231, DOI 10.1109/SP.2017.66
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   D'Argenio PR, 2017, LECT NOTES COMPUT SC, V10201, P83, DOI 10.1007/978-3-662-54434-1_4
   Deutsche Forschungsgemeinschaft / German Research Foundation, GUID SAF GOOD RES PR
   Dimitrova R, 2020, LECT NOTES COMPUT SC, V12136, P59, DOI 10.1007/978-3-030-50086-3_4
   Dwork C, 2008, LECT NOTES COMPUT SC, V4978, P1, DOI 10.1007/978-3-540-79228-4_1
   Faymonville P, 2019, LECT NOTES COMPUT SC, V11561, P421, DOI 10.1007/978-3-030-25540-4_24
   Faymonville P, 2016, LECT NOTES COMPUT SC, V10012, P152, DOI 10.1007/978-3-319-46982-9_10
   Field CB, 2014, CLIMATE CHANGE 2014: IMPACTS, ADAPTATION, AND VULNERABILITY, PT A: GLOBAL AND SECTORAL ASPECTS, P1
   Finkbeiner B, 2015, LECT NOTES COMPUT SC, V9206, P30, DOI 10.1007/978-3-319-21690-4_3
   Goguen J. A., 1982, Proceedings of the 1982 Symposium on Security and Privacy, P11
   Hermanns H., 2018, EPIC SERIES COMPUT, V57, P1, DOI DOI 10.29007/6ZXT
   Köhl MA, 2018, LECT NOTES COMPUT SC, V11237, P299, DOI 10.1007/978-3-030-03769-7_17
   Lee I, 1999, INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOLS I-V, PROCEEDINGS, P279
   Li J, 2005, SIGMOD REC, V34, P39, DOI 10.1145/1058150.1058158
   LolaDrives web page, MAK YOUR CAR MOR PER
   Moosbrugger P, 2017, FORM METHOD SYST DES, V51, P31, DOI 10.1007/s10703-017-0275-x
   oica, INT ORG MOTOR VEHICL
   Princen T., 2005, LOGIC SUFFICIENCY
   Pulungan R, 2015, INT J SOFTW TOOLS TE, V17, P77, DOI 10.1007/s10009-013-0296-8
   Riley, 2018, CNN BUSINESS
   Schneidewind U., 2018, GROSSE TRANSFORMATIO
   Schnitzer, 2021, PCDF CORE
   Schnitzer Y., 2021, LOLADRIVES ANDROID
   Schwenger M., 2022, DISSERTATION
   Taylor, 2020, FORBES
   The European Parliament and the Council of the European Union, 2017, COMM REG EU 2017 115
   The European Parliament and the Council of the European Union, 1998, DIR 98 69 EC EUR PAR
   Torens C., 2017, AIAA INFORM SYSTEMS, DOI [10.2514/6.2017-0419, DOI 10.2514/6.2017-0419]
   Tutuianu M, 2015, TRANSPORT RES D-TR E, V40, P61, DOI 10.1016/j.trd.2015.07.011
   Watanabe K, 2018, DES AUT CON, DOI 10.1145/3195970.3199856
   World Commission on Environment and Development, 1987, Our Common Future
NR 48
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2023
VL 25
IS 2
SI SI
BP 205
EP 218
DI 10.1007/s10009-022-00689-5
EA JAN 2023
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF2I9
UT WOS:000921787900001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Hansen, ST
   Thule, C
   Gomes, C
   van de Pol, J
   Palmieri, M
   Inci, EO
   Madsen, F
   Alfonso, J
   Castellanos, JA
   Rodriguez, JM
AF Hansen, Simon Thrane
   Thule, Casper
   Gomes, Claudio
   van de Pol, Jaco
   Palmieri, Maurizio
   Inci, Emin Oguz
   Madsen, Frederik
   Alfonso, Jesus
   Castellanos, Jose Angel
   Rodriguez, Jose Manuel
TI Verification and synthesis of co-simulation algorithms subject to
   algebraic loops and adaptive steps
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Formal Methods for Industrial Critical
   Systems (FMICS)
CY AUG 24-26, 2021
CL Paris, FRANCE
DE Co-simulation; Model-checking; Cyber-physical systems; Formal methods
AB Simulation-based analyses are becoming increasingly vital for the development of cyber-physical systems. Co-simulation is one such technique, enabling the coupling of specialized simulation tools through an orchestration algorithm. The orchestrator describes how to coordinate the simulation of multiple simulation tools. The simulation result depends on the orchestration algorithm that must stabilize algebraic loops, choose the simulation resolution, and adhere to each simulation tool's implementation. This paper describes how to verify that an orchestration algorithm respects all contracts related to the simulation tool's implementation and how to synthesize such tailored orchestration algorithms. The approaches work for complex and adaptive co-simulation scenarios and have been applied to several real-world case studies.
C1 [Hansen, Simon Thrane; Thule, Casper; Gomes, Claudio; Madsen, Frederik] Aarhus Univ, Dept Elect & Comp Engn, DIGIT, Abogade 34, DK-8000 Aarhus, Denmark.
   [van de Pol, Jaco] Aarhus Univ, Dept Comp Sci, DIGIT, Abogade 34, DK-8000 Aarhus, Denmark.
   [Palmieri, Maurizio] Univ Pisa, Dept Informat Engn, DII, Pisa, Italy.
   [Alfonso, Jesus; Castellanos, Jose Angel; Rodriguez, Jose Manuel] Inst Tecnol Aragon, Dept Informat Engn, Zaragoza, Spain.
   [Inci, Emin Oguz] Katholieke Univ Leuven, Dept Mech Engn, Celestijnenlaan 300, B-3001 Leuven, Belgium.
C3 Aarhus University; Aarhus University; University of Pisa; KU Leuven
RP Hansen, ST (corresponding author), Aarhus Univ, Dept Elect & Comp Engn, DIGIT, Abogade 34, DK-8000 Aarhus, Denmark.
EM sth@ece.au.dk
RI Gomes, Cláudio/AAW-6105-2021
OI Gomes, Cláudio/0000-0003-2692-9742; Palmieri,
   Maurizio/0000-0002-6177-0928; Inci, Emin Oguz/0000-0002-3051-7807; van
   de Pol, J.C./0000-0003-4305-0625; Alfonso de la Riva,
   Jesus/0000-0002-3694-8130
FU Poul Due Jensen Foundation
FX We are grateful to the Poul Due Jensen Foundation, which has supported
   the establishment of a new Centre for Digital Twin Technology at Aarhus
   University. We are would also like to thank the anonymous reviewers of
   the paper, who have provided valuable feedback on the paper.
CR Alfonso, 2020, SAE INT J CONNECTED, V3
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Amálio N, 2016, LECT NOTES COMPUT SC, V10009, P450, DOI 10.1007/978-3-319-47846-3_28
   [Anonymous], 2008, UCBEECS20088
   [Anonymous], 2021, TIRE SIZE CALCULATOR
   Arnold M, 2013, ARCH MECH ENG, V60, P75, DOI 10.2478/meceng-2013-0005
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Behrmann Gerd, 2006, Uppaal 4.0
   Berard B., 2013, Systems and software verification: model-checking techniques and tools, DOI 10.1007/978-3-662-04558-9
   Blockwitz T., 2012, 9 INT MOD C, P173, DOI DOI 10.3384/ECP12076173
   Broman, 2013, PROC EMSOFT 13
   Cavalcanti A., 2016, PROC ICTAC 16, V9965
   Cellier F. E., 2010, Continuous System Simulation
   Clarke EM, 1999, MODEL CHECKING, P1
   DIJKSTRA EW, 1975, COMMUN ACM, V18, P453, DOI [10.1145/360933.360975, 10.1145/390016.808417]
   FMI, 2014, FUNCT MOCK UP INT TO
   Gomes C., 2018, LNCS, V11176
   Gomes C., 2019, PROC SIMULTECH 19
   Gomes C, 2020, LECT NOTES COMPUT SC, V12226, P34, DOI 10.1007/978-3-030-57506-9_4
   Gomes C, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P784, DOI 10.1109/MODELS-C.2019.00124
   Gomes C, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3179993
   Gomes C, 2019, SIMUL-T SOC MOD SIM, V95, P241, DOI 10.1177/0037549718759775
   Hansen Simon Thrane, 2021, 2021 Annual Modeling and Simulation Conference (ANNSIM), DOI 10.23919/ANNSIM52504.2021.9552073
   Hansen S.T., 2021, LNCS, V12863
   Hansen ST, 2021, LECT NOTES COMPUT SC, V12524, P295, DOI 10.1007/978-3-030-67220-1_22
   Inci E.O. etal., 2021, PROC ANN MODELING SI
   Kübler R, 2000, MATH COMP MODEL DYN, V6, P93, DOI 10.1076/1387-3954(200006)6:2;1-M;FT093
   Nyman U, 2017, IEEE INT C ENG COMP, P11, DOI 10.1109/ICECCS.2017.33
   Oakes B.J., 2020, ADV INTELLIGENT SYST, V1260
   Palmieri M, 2020, SOFTW SYST MODEL, V19, P601, DOI 10.1007/s10270-019-00754-9
   Schweizer B, 2015, J COMPUT NONLIN DYN, V10, DOI 10.1115/1.4028503
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Thule C, 2019, SIMUL MODEL PRACT TH, V92, P45, DOI 10.1016/j.simpat.2018.12.005
   Thule C, 2018, LECT NOTES COMPUT SC, V11176, P5, DOI 10.1007/978-3-030-04771-9_1
   Zeyda F, 2018, LECT NOTES COMPUT SC, V10729, P453, DOI 10.1007/978-3-319-74781-1_31
NR 35
TC 4
Z9 4
U1 3
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2022
VL 24
IS 6
SI SI
BP 999
EP 1024
DI 10.1007/s10009-022-00686-8
EA NOV 2022
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 8H5UG
UT WOS:000882344000001
DA 2024-07-18
ER

PT J
AU Louadah, H
   Labiche, Y
AF Louadah, Hassna
   Labiche, Yvan
TI Interface control document modeling with Citrus (avionics systems
   interfaces)
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Avionics systems integration; AFDX; Interface control document;
   Interfaces; IMA; Avionics systems integration; Citrus
AB Avionics systems integration based on interfaces control documents (ICDs) may be well handled when leveraging the strength of the model based-engineering. Indeed, avionics systems and their internal hardware and software components interfaces, specified in the form of ICDs, must be well defined and specified (e.g., unambiguous, complete, verifiable, consistent, and traceable specification). However, as of today, these ICDs are specified in different formats and levels of abstraction. In this paper, we analyzed the modeling capabilities of a set of relevant modeling languages, including our industry partners' modeling language (Citrus), at modeling ICDs. Citrus covers most of the ICD content, however, it still needs improvement to cover some needs such as AFDX technology. This paper presents our extension to the Citrus meta-model capabilities to cover these needs.
C1 [Louadah, Hassna] Ecole Technol Super ETS, Montreal, PQ, Canada.
   [Labiche, Yvan] Carleton Univ, Ottawa, ON, Canada.
C3 University of Quebec; Ecole de Technologie Superieure - Canada; Carleton
   University
RP Louadah, H (corresponding author), Ecole Technol Super ETS, Montreal, PQ, Canada.
EM hassna.louadah.1@etsmtl.net; yvanlabiche@cunet.carleton.ca
OI LOUADAH, HASSNA/0000-0003-2286-8487
FU NSERC/CRIAQ project [AVIO-506]
FX This work has been financed by NSERC/CRIAQ project AVIO-506 in
   collaboration with our industrial partners CMC Electronics and Solutions
   Isoneo.
CR AEEC, 2015, ARINC653P14 AEEC
   AEEC, 1997, ARINC710 AEEC
   AEEC, 2009, ARINC664P7 AEEC
   AEEC, 1994, ARINC7026 AEEC
   AEEC, 1998, ARINC739A1 AEEC
   Association EAST-ADL, 2013, E ADL DOM MOD SPEC V
   Consortium SPEEDS, 2009, SPEEDS L 1 MET
   Feiler PH., 2012, Model-based engineering with AADL: An introduction to the SAE architecture analysis design language
   Gianni D, 2013, GPS SOLUT, V17, P175, DOI 10.1007/s10291-012-0270-z
   Louadah H., 2016, DATA EXTRACTION PROC
   Open Group, 2013, REF IMPL GUID FACE T
   Viaud B., 2013, CITRUS MODEL BASED A
NR 12
TC 0
Z9 0
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2022
VL 24
IS 2
BP 225
EP 245
DI 10.1007/s10009-022-00645-3
EA FEB 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0F1UH
UT WOS:000751210600001
DA 2024-07-18
ER

PT J
AU Schneider, J
   Basin, D
   Brix, F
   Krstic, S
   Traytel, D
AF Schneider, Joshua
   Basin, David
   Brix, Frederik
   Krstic, Srdan
   Traytel, Dmitriy
TI Scalable online first-order monitoring
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Online monitoring; Temporal logic; Data
   parallelism
ID CHECKING
AB Online monitoring is the task of identifying complex temporal patterns while incrementally processing streams of data-carrying events. Existing state-of-the-art monitors for first-order patterns, which may refer to and quantify over data values, can process streams of modest velocity in real-time. We show how to scale up first-order monitoring to substantially higher velocities by slicing the stream, based on the events' data values, into substreams that can be monitored independently. Because monitoring is not embarrassingly parallel in general, slicing can lead to data duplication. To reduce this overhead, we adapt hash-based partitioning techniques from databases to the monitoring setting. We implement these techniques in an automatic data slicer based on Apache Flink and empirically evaluate its performance using two tools-MonPoly and DejaVu-to monitor the substreams. Our evaluation attests to substantial scalability improvements for both tools.
C1 [Schneider, Joshua; Basin, David; Brix, Frederik; Krstic, Srdan] Swiss Fed Inst Technol, Dept Comp Sci, Inst Informat Secur, Zurich, Switzerland.
   [Traytel, Dmitriy] Univ Copenhagen, Dept Comp Sci, Copenhagen, Denmark.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich; University of
   Copenhagen
RP Schneider, J; Krstic, S (corresponding author), Swiss Fed Inst Technol, Dept Comp Sci, Inst Informat Secur, Zurich, Switzerland.; Traytel, D (corresponding author), Univ Copenhagen, Dept Comp Sci, Copenhagen, Denmark.
EM joshua.schneider@inf.ethz.ch; srdan.krstic@inf.ethz.ch; traytel@di.ku.dk
RI Krstic, Srdan/AAB-7936-2021; Traytel, Dmitriy/AAC-6052-2021
OI Krstic, Srdan/0000-0001-8314-2589; Traytel, Dmitriy/0000-0001-7982-2768;
   Schneider, Joshua/0000-0001-8253-4513; Basin, David/0000-0003-2952-939X
FU ETH Zurich
FX Open Access funding provided by ETH Zurich.
CR Abiteboul S, 1995, FDN DATABASES
   Afrati F. N., 2017, LIPICS, V68
   Afrati FN, 2011, IEEE T KNOWL DATA EN, V23, P1282, DOI 10.1109/TKDE.2011.47
   Alexandrov A, 2014, VLDB J, V23, P939, DOI 10.1007/s00778-014-0357-y
   [Anonymous], 2014, NOKIA CASE STUDY LOG
   Barre B., 2012, INT C RUNTIME VERIFI, P184
   Barringer Howard, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P68, DOI 10.1007/978-3-642-32759-9_9
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P1, DOI 10.1007/978-3-319-75632-5_1
   Bartocci E, 2014, LECT NOTES COMPUT SC, V8734, P1, DOI 10.1007/978-3-319-11164-3_1
   Basin D, 2020, LECT NOTES COMPUT SC, V12399, P197, DOI 10.1007/978-3-030-60508-7_11
   Basin D, 2017, LECT NOTES COMPUT SC, V10206, P94, DOI 10.1007/978-3-662-54580-5_6
   Basin D, 2017, LECT NOTES COMPUT SC, V10548, P85, DOI 10.1007/978-3-319-67531-2_6
   Basin D, 2016, FORM METHOD SYST DES, V49, P75, DOI 10.1007/s10703-016-0242-y
   Basin D, 2015, J ACM, V62, DOI 10.1145/2699444
   Basin D, 2013, IEEE T SOFTWARE ENG, V39, P1403, DOI 10.1109/TSE.2013.18
   Basin David A., 2017, RV-CuBES, V3, P19
   Bauer A, 2013, LECT NOTES COMPUT SC, V8174, P59, DOI 10.1007/978-3-642-40787-1_4
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Beame P, 2017, J ACM, V64, DOI 10.1145/3125644
   Beame P, 2014, PODS'14: PROCEEDINGS OF THE 33RD ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P212, DOI 10.1145/2594538.2594558
   Bersani MM, 2016, PROC INT CONF SOFTW, P888, DOI 10.1145/2884781.2884832
   Bianculli Domenico, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P144, DOI 10.1007/978-3-319-10431-7_11
   Bundala D, 2014, LECT NOTES COMPUT SC, V8573, P86
   Carbone P, 2017, PROC VLDB ENDOW, V10, P1718, DOI 10.14778/3137765.3137777
   Chothia Z, 2017, PROCEEDINGS OF THE TWELFTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS 2017), P344, DOI 10.1145/3064176.3064195
   Chu S, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P63, DOI 10.1145/2723372.2750545
   Cormode G, 2010, VLDB J, V19, P3, DOI 10.1007/s00778-009-0172-z
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Falcone Y, 2018, LECT NOTES COMPUT SC, V11237, P241, DOI 10.1007/978-3-030-03769-7_14
   Fania, 2019, THESIS ETH ZURICH
   Feng SG, 2017, LOG METH COMPUT SCI, V13, DOI 10.23638/LMCS-13(3:19)2017
   GANGULY S, 1992, J LOGIC PROGRAM, V14, P101, DOI 10.1016/0743-1066(92)90048-8
   Halle S., 2017, PROC INT WORKSHOP CO, P81, DOI DOI 10.29007/4CTH
   Hallé S, 2017, LECT NOTES COMPUT SC, V10548, P359, DOI 10.1007/978-3-319-67531-2_22
   Havelund K, 2018, LECT NOTES COMPUT SC, V10869, P26, DOI 10.1007/978-3-319-94111-0_2
   Havelund K, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P116, DOI 10.23919/FMCAD.2017.8102249
   Joglekar M, 2018, THEOR COMPUT SYST, V62, P810, DOI 10.1007/s00224-017-9811-8
   Kuhtz L, 2009, LECT NOTES COMPUT SC, V5556, P235, DOI 10.1007/978-3-642-02930-1_20
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Nasir MAU, 2016, PROC INT CONF DATA, P589, DOI 10.1109/ICDE.2016.7498273
   Nasir MAU, 2015, PROC INT CONF DATA, P137, DOI 10.1109/ICDE.2015.7113279
   Okcan Alper., 2011, PROC SIGMOD C, P949
   Phadnis, 2019, MASSIVE SCALE DATA P
   Pnueli A, 2006, LECT NOTES COMPUT SC, V4085, P573
   Raszyk M, 2020, LECT NOTES COMPUT SC, V12302, P233, DOI 10.1007/978-3-030-59152-6_13
   Raszyk M, 2019, LECT NOTES COMPUT SC, V11781, P151, DOI 10.1007/978-3-030-31784-3_9
   Reger G, 2015, LECT NOTES COMPUT SC, V9333, P216, DOI 10.1007/978-3-319-23820-3_14
   Rivetti N., 2015, P 9 ACM INT C DISTR, P80
   Rosu G, 2012, LOG METH COMPUT SCI, V8, DOI 10.2168/LMCS-8(1:09)2012
   Schneider J., 2019, ARCH FORMAL PROOFS
   Schneider J, 2019, LECT NOTES COMPUT SC, V11781, P133, DOI 10.1007/978-3-030-31784-3_8
   Schneider J, 2019, LECT NOTES COMPUT SC, V11757, P310, DOI 10.1007/978-3-030-32079-9_18
   Schneider J, 2018, LECT NOTES COMPUT SC, V11237, P353, DOI 10.1007/978-3-030-03769-7_20
   Sofronie-Stokkermans V., LNCS, V12166, P432
   Suri S., 2011, P 20 INT C WORLD WID, P607, DOI DOI 10.1145/1963405.1963491
   Traytel, 2019, IMPLEMENTATION ASS T
   Vitorovic A, 2016, PROC VLDB ENDOW, V9, P1553, DOI 10.14778/3007263.3007307
   Zeume T., 2016, LIPICS, V48
NR 58
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2021
VL 23
IS 2
SI SI
BP 185
EP 208
DI 10.1007/s10009-021-00607-1
EA JUN 2021
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SU3HE
UT WOS:000658132000001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Cheng, Z
   Tisi, M
AF Cheng, Zheng
   Tisi, Massimo
TI Slicing ATL model transformations for scalable deductive verification
   and fault localization
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model driven engineering; Model transformation; Deductive verification;
   Program slicing; Fault localization; Scalability
AB Model-driven engineering (MDE) is increasingly accepted in industry as an effective approach for managing the full life cycle of software development. In MDE, software models are manipulated, evolved and translated by model transformations (MT), up to code generation. Automatic deductive verification techniques have been proposed to guarantee that transformations satisfy correctness requirements (encoded as transformation contracts). However, to be transferable to industry, these techniques need to be scalable and provide the user with easily accessible feedback. In MT-specific languages like ATL, we are able to infer static trace information (i.e., mappings among types of generated elements and rules that potentially generate these types). In this paper, we show that this information can be used to decompose the MT contract and, for each sub-contract, slice the MT to the only rules that may be responsible for fulfilling it. Based on this contribution, we design a fault localization approach for MT, and a technique to significantly enhance scalability when verifying large MTs against a large number of contracts. We implement both these algorithms as extensions of the VeriATL verification system, and we show by experimentation that they increase its industry readiness.
C1 [Cheng, Zheng] INRIA Rennes Bretagne Atlantique, Res Ctr, Rennes, France.
   [Tisi, Massimo] CNRS, IMT Atlantique, UMR 6004, LS2N, Nantes, France.
C3 Universite de Rennes; Centre National de la Recherche Scientifique
   (CNRS); IMT - Institut Mines-Telecom; IMT Atlantique
RP Cheng, Z (corresponding author), INRIA Rennes Bretagne Atlantique, Res Ctr, Rennes, France.
EM zheng.cheng@inria.fr; massimo.tisi@imt-atlantique.fr
CR Ab Rahim L, 2015, SOFTW SYST MODEL, V14, P1003, DOI 10.1007/s10270-013-0358-0
   Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   [Anonymous], 1980, Essays on Combinatory Logic, Lambda Calculus and Formalism
   [Anonymous], 2015, OBJECT MANAGEMENT GR
   [Anonymous], 1994, TECH REP
   Aranega V, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P66
   Barnett M, 2006, LECT NOTES COMPUT SC, V4111, P364
   Berghofer S, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P230, DOI 10.1109/SEFM.2004.1347524
   Berry Gerard, 2008, Formal Methods for Industrial Critical Systems. 12th International Workshop, FMICS 2007. Revised Selected Papers
   Bertot Y., 2010, INTERACTIVE THEOREM
   Briand L. C., 2016, 4 INT C MOD ENG SOFT
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Buttner Fabian, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P432, DOI 10.1007/978-3-642-33666-9_28
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Calegari D, 2011, LECT NOTES COMPUT SC, V6527, P112, DOI 10.1007/978-3-642-19829-8_8
   Cheng Z, 2018, SOFTW SYST MODEL, V17, P1197, DOI 10.1007/s10270-016-0553-x
   Cheng Z, 2017, LECT NOTES COMPUT SC, V10202, P300, DOI 10.1007/978-3-662-54494-5_17
   Cheng Z, 2015, LECT NOTES COMPUT SC, V9152, P133, DOI 10.1007/978-3-319-21155-8_11
   Claessen K, 2011, ACM SIGPLAN NOTICES, V46, P53, DOI 10.1145/1988042.1988046
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   Harman M, 2003, J SYST SOFTWARE, V68, P45, DOI 10.1016/S0164-1212(02)00135-8
   Hatcliff J, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187678
   Hidaka S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P23, DOI 10.1109/MODELS.2017.21
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Huth Michael, 2004, Logic in Computer Science: Modelling and reasoning about systems
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kehrer T, 2016, LECT NOTES COMPUT SC, V9765, P173, DOI 10.1007/978-3-319-42064-6_12
   Lano K, 2015, FORM ASP COMPUT, V27, P193, DOI 10.1007/s00165-014-0313-z
   Leino K. R. M., 2008, VERIFICATION CONDITI
   Oakes BJ, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P256, DOI 10.1109/MODELS.2015.7338256
   Poernomo I, 2008, LECT NOTES COMPUT SC, V5063, P214, DOI 10.1007/978-3-540-69927-9_15
   Prasad M. R., 2005, International Journal on Software Tools for Technology Transfer, V7, P156, DOI 10.1007/s10009-004-0183-4
   Radke H, 2015, LECT NOTES COMPUT SC, V9151, P155, DOI 10.1007/978-3-319-21145-9_10
   Roychoudhury A, 2016, COMMUN ACM, V59, P68, DOI 10.1145/2856103
   Cuadrado JS, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P12, DOI 10.1109/MODELS.2017.12
   Cuadrado JS, 2014, PROC INT SYMP SOFTW, P34, DOI 10.1109/ISSRE.2014.10
   Selim Gehan M. K., 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P90, DOI 10.1007/978-3-642-31491-9_9
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Tisi M, 2013, LECT NOTES COMPUT SC, V8107, P656, DOI 10.1007/978-3-642-41533-3_40
   Wagelaar, 2014, 2 SOFTW DEV AUT C AM
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 44
TC 8
Z9 8
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2018
VL 20
IS 6
SI SI
BP 645
EP 663
DI 10.1007/s10009-018-0491-8
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GV9OI
UT WOS:000446488000003
DA 2024-07-18
ER

PT J
AU Dillig, I
   Dillig, T
   Li, B
   McMillan, K
   Sagiv, M
AF Dillig, Isil
   Dillig, Thomas
   Li, Boyang
   McMillan, Ken
   Sagiv, Mooly
TI Synthesis of circular compositional program proofs via abduction
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Program verification; Abductive inference; Circular compositional
   reasoning
AB This paper presents a new technique for synthesizing circular compositional proofs of program correctness. Our technique uses abductive inference to decompose the proof into small lemmas (i.e., compositionality) and proves that each lemma is not the first one to fail (i.e., circularity). Our approach represents lemmas as small program fragments annotated with pre and post-conditions and uses different tools to discharge each different lemma. This approach allows us to combine the strengths of different verifiers and addresses scalability concerns, as each lemma concerns the correctness of small syntactic fragments of the program. We have implemented our proposed technique for generating circular compositional proofs and used four different program analysis tools to discharge the proof subgoals. We evaluate our approach on a collection of synthetic and real-world benchmarks and show that our technique can successfully verify applications that cannot be verified by any individual technique.
C1 [Dillig, Isil; Dillig, Thomas] UT Austin, Austin, TX 78705 USA.
   [Li, Boyang] Coll William & Mary, Williamsburg, VA USA.
   [McMillan, Ken] Microsoft Res, Redmond, WA USA.
   [Sagiv, Mooly] Tel Aviv Univ, Tel Aviv, Israel.
C3 University of Texas System; University of Texas Austin; William & Mary;
   Microsoft; Tel Aviv University
RP Dillig, I (corresponding author), UT Austin, Austin, TX 78705 USA.
EM isil@cs.utexas.edu; tdillig@cs.utexas.edu; bli01@email.wm.edu;
   kenmcmil@microsoft.com; msagiv@acm.org
FU NSF CAREER Award [1453386]; DARPA [FA8750-12-2-0020]
FX This work is supported in part by NSF CAREER Award 1453386 and DARPA
   #FA8750-12-2-0020.
CR Alrajeh D., 2009, J APPL LOGIC
   [Anonymous], PLDI
   Calcagno C, 2009, ACM SIGPLAN NOTICES, V44, P289, DOI 10.1145/1594834.1480917
   Charlton N, 2007, LECT NOTES COMPUT SC, V4590, P168
   Cobleigh JM, 2003, LECT NOTES COMPUT SC, V2619, P331
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   Dillig I., 2009, CAV
   Dillig I., 2010, FLUID UPDATES STRONG
   Dillig I., 2012, CAV
   Dillig I, 2010, STAT AN S
   Dillig I., 2011, POPL
   Dillig I., SAIL STATIC ANAL INT
   GIACOBAZZI R, 1994, MIT PS LOG, P377
   GRANGER P, 1991, LECT NOTES COMPUT SC, V493, P169
   Gulwani S, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P235, DOI 10.1145/1328438.1328468
   Gulwani S, 2006, ACM SIGPLAN NOTICES, V41, P376, DOI 10.1145/1133981.1134026
   Gupta A., 2008, FORM METHODS SYST DE
   Henzinger TA, 2003, LECT NOTES COMPUT SC, V2648, P235
   Jeannet B., INTERPROC ANAL RECUR
   McMillan K, 1999, CORRECT HARDWARE DES, P705
   Peirce Charles, 1932, COLLECTED PAPERS CS
NR 22
TC 5
Z9 6
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2017
VL 19
IS 5
BP 535
EP 547
DI 10.1007/s10009-015-0397-7
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FF8VL
UT WOS:000409295800003
DA 2024-07-18
ER

PT J
AU Pezzé, M
   Wuttke, J
AF Pezze, Mauro
   Wuttke, Jochen
TI Model-driven generation of runtime checks for system properties
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Assertions; Software design; Development
   framework; Model-driven design
AB Creating runtime monitors for interesting properties is an important research problem. Existing approaches to runtime verification require specifications that not only define the property to monitor, but also contain details of the implementation, sometimes even requiring the implementation to add special variables or methods for monitoring. Often intuitive properties such as "event X should only happen when objects A and B agree" have to be translated by developers into complex specifications, for example, pre- and post-conditions on several methods that only in concert express this simple property. In most specification languages, the result of this manual translation are specifications that are so strongly tailored to the program at hand and the objects involved that, even if the property occurs again in a similar program, the whole translation process has to be repeated to create a new specification. In this paper, we introduce the concept of property templates. Property templates are pre-defined constraints that can be easily reused in specifications. They are part of a model-driven framework that translates high-level specifications into runtime monitors specialized to the problem at hand. The framework is extensible: Developers can define property templates for constraints they often need and can specialize the code generation when the default implementation is not satisfactory. We demonstrate the use of the framework in some case studies using a set of functional and structural constraints that we developed through an extensive study of existing software specifications. The key innovations of the approach we present are three. First, the properties developed with this approach are reusable and apply to a wide range of software systems, rather than being ad hoc and tailored to one particular program. Second, the properties are defined at a relatively high level of abstraction, so that no detailed knowledge of the implementation is needed to decide whether a given property applies. Third, we separate the definition of precise assertions for properties, and the use of properties. That way, experts can determine which assertions are needed to assure properties, and other developers can easily use these definitions to annotate systems.
C1 [Pezze, Mauro] Univ Lugano, Lugano, Switzerland.
   [Pezze, Mauro] Univ Milano Bicocca, Milan, Italy.
   [Wuttke, Jochen] Univ Washington, Seattle, WA 98195 USA.
C3 Universita della Svizzera Italiana; University of Milano-Bicocca;
   University of Washington; University of Washington Seattle
RP Wuttke, J (corresponding author), Univ Washington, Seattle, WA 98195 USA.
EM wuttkej@gmail.com
OI PEZZE, MAURO/0000-0001-5193-7379
CR Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 2008, OBJ C 2 0 PROGR LANG
   Avgustinov P, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P589
   Barnett M, 2005, LECT NOTES COMPUT SC, V3362, P49
   Barringer H, 2010, J LOGIC COMPUT, V20, P675, DOI 10.1093/logcom/exn076
   Bodden E, 2010, LECT NOTES COMPUT SC, V6418, P183, DOI 10.1007/978-3-642-16612-9_15
   Chen F, 2006, ELECTRON NOTES THEOR, V144, P3, DOI 10.1016/j.entcs.2006.02.002
   Chen F, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P569
   Ciupa I., 2008, TECHNICAL REPORT, V595
   Cobleigh R. L., 2006, P 14 ACM SIGSOFT INT, P208, DOI [10.1145/1181775.1181801, DOI 10.1145/1181775.1181801]
   de Caso G, 2009, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.2009.5070544
   Denaro G, 2009, PROC INT CONF SOFTW, P421, DOI 10.1109/ICSE-COMPANION.2009.5071042
   Drusinsky D, 2009, LECT NOTES COMPUT SC, V5795, P586, DOI 10.1007/978-3-642-04425-0_45
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Dzidek W. J., 2005, Satellite Events at the MoDELS 2005 Conference. MoDELS 2005 International Workshops. Doctoral Symposium, Educators Symposium. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3844), P10
   Gamma Erich., 1994, DESIGN PATTERNS
   Goldsmith S, 2005, ACM SIGPLAN NOTICES, V40, P385, DOI 10.1145/1103845.1094841
   Gorla A, 2010, COMPUT INFORM, V29, P93
   Havelund K., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00253-1
   Hein C., 2007, 2 INT WORKSH MOD RUN
   Kim M, 2004, FORM METHOD SYST DES, V24, P129, DOI 10.1023/B:FORM.0000017719.43755.7c
   Konig D., 2007, GROOVY IN ACTION
   Laddad R., 2009, ASPECTJ ACTION ENTER
   Leavens GT, 1999, SPRING INT SER ENG C, V523, P175
   Lee C. M., 2012, TECHNICAL REPORT
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P336, DOI 10.1109/32.385971
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   Meredith PO, 2010, AUTOMAT SOFTW ENG, V17, P149, DOI 10.1007/s10515-010-0063-y
   Object Management Group, 2007, OMG UN MOD LANG SUP
   Pike L., 2012, LNCS, P310, DOI DOI 10.1007/978-3-642-29860-8_23
   Richters M., 2003, AOSD MOD UML WORKSH
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   Stirewalt K, 2005, LECT NOTES COMPUT SC, V3713, P616, DOI 10.1007/11557432_46
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   The Object Management Group, OBJ CONSTR LANG
   Unkel C, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P183, DOI 10.1145/1328438.1328463
   Voas J. M., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P152, DOI 10.1109/ISSRE.1994.341367
   Wang K., 2007, P 5 INT WORKSH DYN A
   Wu G., 2012, SERIES LECT NOTES CO, V7186, P325, DOI [10.1007/978-3-642-29860-8_24, DOI 10.1007/978-3-642-29860-8_24]
   Wuttke J., 2010, THESIS U LUGANO LUGA
   Wuttke J., 2008, TECHNICAL REPORT
NR 43
TC 3
Z9 3
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2016
VL 18
IS 1
BP 1
EP 19
DI 10.1007/s10009-014-0325-2
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB7SL
UT WOS:000368716200001
DA 2024-07-18
ER

PT J
AU Jacobs, B
   Smans, J
   Piessens, F
AF Jacobs, Bart
   Smans, Jan
   Piessens, Frank
TI Solving the VerifyThis 2012 challenges with VeriFast
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal verification; Program correctness; Separation logic
AB We describe our experience solving the VerifyThis 2012 challenges with our program verification tool VeriFast, including detailed explanations of our solutions. We also describe some alternative solutions that we developed after the competition. VeriFast is a modular verifier that takes Java or C source code annotated with function/method specifications written in a variant of separation logic, and verifies that the code complies with the annotations through symbolic execution.
C1 [Jacobs, Bart; Smans, Jan; Piessens, Frank] Katholieke Univ Leuven, IMinds DistriNet, B-3001 Leuven, Belgium.
C3 IMEC; KU Leuven
RP Jacobs, B (corresponding author), Katholieke Univ Leuven, IMinds DistriNet, B-3001 Leuven, Belgium.
EM bart.jacobs@cs.kuleuven.be
RI Piessens, Frank/B-1695-2014; Jacobs, Bart/B-1271-2014
OI Jacobs, Bart/0000-0002-3605-249X
CR [Anonymous], 2002, LICS
   Bertot Y., 2004, TEXT THEORET COMP S
   Bornat R., 2005, POPL
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Filliatre J.-C., 2012, COMPARE2012 1 INT WO
   HOARE CAR, 1969, CACM, V12
   Huisman M., 2012, VERIFYTHIS 2012
   Jacobs B., 2013, VERIFAST
   Klebanov V., 2011, LNCS, V6664
   Nipkow T., 2012, SOFTWARE SAFETY SECU, P254
   O'Hearn P.W., 2001, CSL
   Parkinson M.J., 2005, POPL
   Philippaerts P., 2013, SCI COMPUT PROGR
   Tuerk T., 2010, VSTTE THEOR WORKSH
NR 14
TC 3
Z9 3
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2015
VL 17
IS 6
BP 659
EP 676
DI 10.1007/s10009-014-0310-9
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT3DN
UT WOS:000362687300002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Schordan, M
   Prantl, A
AF Schordan, Markus
   Prantl, Adrian
TI Combining static analysis and state transition graphs for verification
   of event-condition-action systems in the RERS 2012 and 2013 challenges
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Program Analysis; Model Checking; Verification; Event-Condition-Action
   System
ID BOUNDED MODEL CHECKING
AB We present a combination of approaches for the verification of event-condition-action (ECA) systems. The analyzed ECA systems range from structurally simple to structurally complex systems. We address the verification of reachability properties and behavioral properties. Reachability properties are represented by assertions in the program and we determine statically whether an assertion holds for all execution paths. Behavioral properties are represented as linear temporal logic formulas specifying the input/output behavior of the program. Our approach assumes a finite state space. We compare a symbolic analysis with an exhaustive state space exploration and discuss the trade-offs between the approaches in terms of the number of computed states and run-time behavior. All variants compute a state transition graph which can also be passed to an LTL verifier. The variants have a different impact on the number of computed states in the state transition graph which in turn impacts the run-time and memory consumption of subsequent phases. We evaluate the different analysis variants with the RERS benchmarks.
C1 [Schordan, Markus; Prantl, Adrian] Lawrence Livermore Natl Lab, Livermore, CA USA.
C3 United States Department of Energy (DOE); Lawrence Livermore National
   Laboratory
RP Schordan, M (corresponding author), Lawrence Livermore Natl Lab, Livermore, CA USA.
EM schordan1@llnl.gov
CR Almeida EE, 2007, IEEE T AUTOM SCI ENG, V4, P167, DOI 10.1109/TASE.2006.880857
   [Anonymous], 1990, LICS, DOI DOI 10.1109/LICS.1990.113767
   [Anonymous], 5 INT C VER EV COMP
   Armando Alessandro, 2009, International Journal on Software Tools for Technology Transfer, V11, P69, DOI 10.1007/s10009-008-0091-0
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Beyer D, 2007, LECT NOTES COMPUT SC, V4590, P504
   Beyer D, 2014, INT J SOFTW TOOLS TE, V16, P507, DOI 10.1007/s10009-014-0334-1
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   Clarke EM, 2008, LECT NOTES COMPUT SC, V5000, P1
   Cordeiro L, 2009, IEEE INT CONF AUTOM, P137, DOI 10.1109/ASE.2009.63
   Duret-Lutz Alexandre, 2014, International Journal of Critical Computer-Based Systems, V5, P31, DOI 10.1504/IJCCBS.2014.059594
   Holzmann Gerard J., 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P155, DOI 10.1007/978-3-642-31759-0_12
   Holzmann Gerard J., 2007, 2007 IEEE International Parallel and Distributed Processing Symposium, P1
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Howar Falk, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P608, DOI 10.1007/978-3-642-34026-0_45
   Howar F, 2014, INT J SOFTW TOOLS TE, V16, P457, DOI 10.1007/s10009-014-0337-y
   Jhala R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592438
   Lerda F., 2003, Electronic Notes in Theoretical Computer Science, V89, DOI 10.1016/S1571-0661(05)80008-8
   MCCARTHY DR, 1989, SIGMOD REC, V18, P215, DOI 10.1145/66926.66946
   Steffen B, 2014, INT J SOFTW TOOLS TE, V16, P465, DOI 10.1007/s10009-014-0336-z
NR 22
TC 10
Z9 10
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2014
VL 16
IS 5
BP 493
EP 505
DI 10.1007/s10009-014-0338-x
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HU
UT WOS:000209673300004
DA 2024-07-18
ER

PT J
AU Toepfer, M
   Abdullah, M
   Bures, T
   Hnetynka, P
   Krulis, M
AF Toepfer, Michal
   Abdullah, Milad
   Bures, Tomas
   Hnetynka, Petr
   Krulis, Martin
TI Machine-learning abstractions for component-based self-optimizing
   systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Self-adaptation; Ensembles; Machine learning; Heuristics
AB This paper features an approach that combines machine-learning abstractions with a component model. We target modern self-optimizing systems and therefore integrate the machine-learning abstractions into our ensemble-based component model DEECo. We further endow the DEECo component model with abstractions for specifying self-optimization heuristics, which address coordination among multiple components. We demonstrate these abstractions in the context of an Industry 4.0 use case. We argue that incorporating machine learning and optimization heuristics is the key feature for modern smart systems, which learn over time and optimize their behavior at runtime to deal with uncertainty in their environment.
C1 [Toepfer, Michal; Abdullah, Milad; Bures, Tomas; Hnetynka, Petr; Krulis, Martin] Charles Univeristy, Prague, Czech Republic.
RP Toepfer, M (corresponding author), Charles Univeristy, Prague, Czech Republic.
EM topfer@d3s.mff.cuni.cz; abdullah@d3s.mff.cuni.cz; bures@d3s.mff.cuni.cz;
   hnetynka@d3s.mff.cuni.cz; krulis@d3s.mff.cuni.cz
RI Bures, Tomas/G-1821-2014; Kruliš, Martin/D-6454-2017; Abdullah,
   Milad/ABB-2008-2021; Töpfer, Michal/GVU-5727-2022
OI Abdullah, Milad/0000-0002-0696-6354; Töpfer, Michal/0000-0002-3313-1766
FU Charles University institutional funding SVV [260698/2023]; Czech
   Science Foundation [20-24814J]; Charles University Grant Agency
   [269723]; European Research Council (ERC) [810115]
FX This work has been partially supported by Charles University
   institutional funding SVV 260698/2023, partially supported by the Czech
   Science Foundation project 20-24814J, partially supported by the Charles
   University Grant Agency project 269723, and partially supported by the
   European Research Council (ERC) under the European Union's Horizon 2020
   research and innovation program (grant agreement No 810115).
CR Abd Alrahman Y, 2020, SCI COMPUT PROGRAM, V192, DOI 10.1016/j.scico.2020.102428
   Abd Alrahman Y, 2016, LECT NOTES COMPUT SC, V9952, P539, DOI 10.1007/978-3-319-47166-2_38
   Abd Alrahman Y, 2016, LECT NOTES COMPUT SC, V9688, P1, DOI 10.1007/978-3-319-39570-8_1
   Al-Ali R, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P277, DOI 10.1145/3344948.3344974
   [Anonymous], 2023, Replication package
   Bliudze S, 2008, IEEE T COMPUT, V57, P1315, DOI 10.1109/TC.2008.26
   Bures T, 2020, INT J SOFTW TOOLS TE, V22, P497, DOI 10.1007/s10009-020-00558-z
   Bures Tomas, 2013, P 16 INT ACM SIGS S, P81, DOI [10.1145/2465449.2465462, DOI 10.1145/2465449.2465462]
   Cámara J, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P11, DOI 10.1109/ICSA47634.2020.00010
   Chehida S, 2021, LECT NOTES COMPUT SC, V13077, P27, DOI 10.1007/978-3-030-90636-8_2
   De Nicola R, 2020, INT J SOFTW TOOLS TE, V22, P437, DOI 10.1007/s10009-020-00555-2
   De Nicola R, 2019, LECT NOTES COMPUT SC, V11533, P111, DOI 10.1007/978-3-030-22397-7_7
   El Ballouli R, 2021, INT J SOFTW TOOLS TE, V23, P701, DOI 10.1007/s10009-020-00596-7
   Gabor T, 2020, INT J SOFTW TOOLS TE, V22, P457, DOI 10.1007/s10009-020-00560-5
   Gheibi O, 2021, 2021 INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2021), P104, DOI 10.1109/SEAMS51251.2021.00023
   Gheibi O, 2021, ACM T AUTON ADAP SYS, V15, DOI 10.1145/3469440
   Grohmann J, 2021, ACM T AUTON ADAP SYS, V15, DOI 10.1145/3463369
   Heinrich B, 2015, DECIS SUPPORT SYST, V78, P1, DOI 10.1016/j.dss.2015.07.005
   Hennicker Rolf, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Engineering Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12477), P224, DOI 10.1007/978-3-030-61470-6_14
   Hennicker Rolf, 2014, Specification, Algebra, and Software. Essays Dedicated to Kokichi Futatsugi: LNCS 8373, P359, DOI 10.1007/978-3-642-54624-2_18
   jRESP, JAV RUNT ENV SCEL PR
   Kanungo T, 2002, IEEE T PATTERN ANAL, V24, P881, DOI 10.1109/TPAMI.2002.1017616
   Muccini H, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P242, DOI 10.1109/ICSA-C.2019.00050
   Nicola Rocco, 2015, Software Engineering for Collective Autonomic Systems. The ASCENS Approach: LNCS 8998, P3, DOI 10.1007/978-3-319-16310-9_1
   Palm A, 2020, LECT NOTES COMPUT SC, V12127, P169, DOI 10.1007/978-3-030-49435-3_11
   Saputri TRD, 2020, IEEE ACCESS, V8, P205948, DOI 10.1109/ACCESS.2020.3036037
   Topfer Michal, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P318, DOI 10.1007/978-3-031-19759-8_20
   Van Der Donckt J., 2019, EVALUATION NOVEL APP, DOI DOI 10.1007/978-3-030-22559-9_17
   Van Der Donckt J, 2020, I W S E ADAP SM SYS, P20, DOI 10.1145/3387939.3391605
NR 29
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2023
VL 25
IS 5-6
BP 717
EP 731
DI 10.1007/s10009-023-00726-x
EA NOV 2023
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AB9N8
UT WOS:001093027600006
DA 2024-07-18
ER

PT J
AU Chakraborty, S
   Gupta, A
   Unadkat, D
AF Chakraborty, Supratik
   Gupta, Ashutosh
   Unadkat, Divyesh
TI Full-program induction: verifying array programs sans loop invariants
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT Conference on Tools and Algorithms for Construction and Analysis of
   Systems (TACAS)
CY APR 25-30, 2020
CL Dublin, IRELAND
DE Full-program induction; Inductive proof; Hoare triple; Array programs;
   Difference program; Difference pre-condition; Quantified assertions;
   Loop invariant
ID BOUNDED MODEL CHECKING; ACCELERATION
AB Arrays are commonly used in a variety of software to store and process data in loops. Automatically proving safety properties of such programs that manipulate arrays is challenging. We present a novel verification technique, called full-program induction, for proving (a sub-class of) quantified as well as quantifier-free properties of programs manipulating arrays of parametric size N. Instead of inducting over individual loops, our technique inducts over the entire program (possibly containing multiple loops) directly via the program parameter N. The technique performs non-trivial transformations of the given program and pre-conditions during the inductive step. The transformations assist in effectively reducing the assertion checking problem by transforming a program with multiple loops to a program which has fewer and simpler loops or is loop free. Significantly, full-program induction does not require generation or use of loop-specific invariants. To assess the efficacy of our technique, we have developed a prototype tool called Vajra. We demonstrate the performance of Vajra vis-a-vis several state-of-the-art tools on a large set of array manipulating benchmarks from the international software verification competition (SV-COMP) and on several programs inspired by algebraic functions that perform polynomial computations.
C1 [Chakraborty, Supratik; Gupta, Ashutosh; Unadkat, Divyesh] Indian Inst Technol, Comp Sci & Engn, Main Gate Rd, Mumbai 400076, Maharashtra, India.
   [Unadkat, Divyesh] TCS Res, 54-B Hadapsar Ind Estate, Pune 411013, Maharashtra, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Bombay
RP Unadkat, D (corresponding author), Indian Inst Technol, Comp Sci & Engn, Main Gate Rd, Mumbai 400076, Maharashtra, India.; Unadkat, D (corresponding author), TCS Res, 54-B Hadapsar Ind Estate, Pune 411013, Maharashtra, India.
EM supratik@cse.iitb.ac.in; akg@cse.iitb.ac.in; diyyesh.unadkat@tcs.com
CR Afzal Mohammad, 2020, INT C TOOLS ALG CONS, DOI 10.1007/978-3-030-45237-7_25
   Alberti F, 2014, LECT NOTES COMPUT SC, V8837, P18, DOI 10.1007/978-3-319-11936-6_2
   Alberti F, 2012, LECT NOTES COMPUT SC, V7180, P46, DOI 10.1007/978-3-642-28717-6_7
   Alhawi OM, 2021, INT J SOFTW TOOLS TE, V23, P115, DOI 10.1007/s10009-020-00564-1
   Allen Randy, 2001, Optimizing compilers for modern architectures: a dependencebased approach
   [Anonymous], 1978, Structure of Computers and Computations
   [Anonymous], 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research FOSER
   Beyer D, 2007, LECT NOTES COMPUT SC, V4349, P378
   Beyer D, 2015, LECT NOTES COMPUT SC, V9206, P622, DOI 10.1007/978-3-319-21690-4_42
   Binkley D., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P41, DOI 10.1109/ICSM.1992.242560
   Bjesse P, 2000, LECT NOTES COMPUT SC, V1954, P372
   Bozga M, 2010, LECT NOTES COMPUT SC, V6174, P227, DOI 10.1007/978-3-642-14295-6_23
   Brain M, 2015, LECT NOTES COMPUT SC, V9291, P145, DOI 10.1007/978-3-662-48288-9_9
   Chakraborty Supratik, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12078), P22, DOI 10.1007/978-3-030-45190-5_2
   Chakraborty S., 2021, FIGSHARE, DOI [10.6084/m9.figshare.14509467, DOI 10.6084/M9.FIGSHARE.14509467]
   Chakraborty S., 2020, FIGSHARE, DOI [10.6084/m9.figshare.11875428.v1, DOI 10.6084/M9.FIGSHARE.11875428.V1]
   Chakraborty S, 2021, LECT NOTES COMPUT SC, V12760, P911, DOI 10.1007/978-3-030-81688-9_42
   Chakraborty S, 2017, LECT NOTES COMPUT SC, V10422, P428, DOI 10.1007/978-3-319-66706-5_21
   Claessen Koen, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P392, DOI 10.1007/978-3-642-38574-2_27
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   Colon M. A., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P67
   Colon M. A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P442
   Cousot P, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P105, DOI 10.1145/1926385.1926399
   Dams Dennis., 2000, Workshop on Advances in Verification, P1
   de Moura L, 2003, LECT NOTES COMPUT SC, V2725, P14
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Deharbe D., 1997, Advances in Hardware Design and Verification. IFIP TC10 WG10.5 International Conference on Correct Hardware and Verification Methods, P203
   DERSHOWITZ N, 1982, THEOR COMPUT SCI, V17, P279, DOI 10.1016/0304-3975(82)90026-3
   Dillig I, 2010, LECT NOTES COMPUT SC, V6012, P246, DOI 10.1007/978-3-642-11957-6_14
   Donaldson AF, 2011, LECT NOTES COMPUT SC, V6887, P351, DOI 10.1007/978-3-642-23702-7_26
   Donaldson AF, 2010, LECT NOTES COMPUT SC, V6015, P280, DOI 10.1007/978-3-642-12002-2_24
   Een N., 2003, ELECT NOTES THEORETI, V89, P543, DOI 10.1016/s1571-0661(05)82542-3
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Fedyukovich G, 2019, LECT NOTES COMPUT SC, V11561, P259, DOI 10.1007/978-3-030-25540-4_14
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Flanagan C., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P500
   Gadelha M, 2017, INT J SOFTW TOOLS TE, V19, P97, DOI 10.1007/s10009-015-0407-9
   Georgiou Pamina, 2020, 2020 Formal Methods in Computer Aided Design (FMCAD), P255, DOI 10.34727/2020/isbn.978-3-85448-042-6_33
   Gopan D, 2005, ACM SIGPLAN NOTICES, V40, P338, DOI 10.1145/1047659.1040333
   Grosse Daniel, 2009, 2009 10th International Workshop on Microprocessor Test and Verification (MTV), P101, DOI 10.1109/MTV.2009.16
   Gulwani S, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P235, DOI 10.1145/1328438.1328468
   Gurfinkel A, 2018, LECT NOTES COMPUT SC, V11138, P248, DOI 10.1007/978-3-030-01090-4_15
   Hagen G, 2008, 2008 FORMAL METHODS IN COMPUTER-AIDED DESIGN, P109
   Halbwachs N, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P339, DOI 10.1145/1375581.1375623
   Henzinger TA, 2010, LECT NOTES COMPUT SC, V6397, P348, DOI 10.1007/978-3-642-16242-8_25
   HORWITZ S, 1989, ACM T PROGR LANG SYS, V11, P345, DOI 10.1145/65979.65980
   HORWITZ S, 1992, 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING : PROCEEDINGS, P392
   Ish-Shalom O, 2020, LECT NOTES COMPUT SC, V11990, P112, DOI 10.1007/978-3-030-39322-9_6
   Jacobs B, 2011, LECT NOTES COMPUT SC, V6617, P41, DOI 10.1007/978-3-642-20398-5_4
   Jeannet B, 2014, ACM SIGPLAN NOTICES, V49, P529, DOI 10.1145/2535838.2535843
   Jhala R, 2007, LECT NOTES COMPUT SC, V4590, P193
   Kahsai T, 2011, ELECTRON PROC THEOR, P55, DOI 10.4204/EPTCS.72.6
   Knobe K., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P107, DOI 10.1145/268946.268956
   Komuravelli A, 2015, PROCEEDINGS OF THE 15TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2015), P89, DOI 10.1109/FMCAD.2015.7542257
   Krishnan HGV, 2019, LECT NOTES COMPUT SC, V11562, P367, DOI 10.1007/978-3-030-25543-5_21
   Lahiri Shuvendu K., 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P712, DOI 10.1007/978-3-642-31424-7_54
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   LESCANNE P, 1982, RAIRO-INF THEOR APPL, V16, P331
   Lin FZ, 2016, ARTIF INTELL, V235, P1, DOI 10.1016/j.artint.2016.01.014
   Liu JC, 2015, LECT NOTES COMPUT SC, V8931, P282
   Liu YA, 2005, ACM T PROGR LANG SYS, V27, P91, DOI 10.1145/1053468.1053471
   Liu YHA, 1998, ACM T PROGR LANG SYS, V20, P546, DOI 10.1145/291889.291895
   Mann M, 2021, LOG METH COMPUT SCI, V18, DOI [10.1007/978-3-030-72016-2_7, 10.46298/LMCS-18(3:26)2022]
   Monniaux D, 2016, LECT NOTES COMPUT SC, V9837, P361, DOI 10.1007/978-3-662-53413-7_18
   Monniaux D, 2015, LECT NOTES COMPUT SC, V9291, P217, DOI 10.1007/978-3-662-48288-9_13
   PAIGE R, 1982, ACM T PROGR LANG SYS, V4, P402, DOI 10.1145/357172.357177
   Podelski A, 2004, LECT NOTES COMPUT SC, V2937, P239
   Rajkhowa P, 2018, LECT NOTES COMPUT SC, V11294, P38, DOI 10.1007/978-3-030-03592-1_3
   Reynolds A, 2015, LECT NOTES COMPUT SC, V8931, P80
   Rosen B. K., 1988, P 15 ACM SIGPLAN SIG, P12
   Seghir Mohamed Nassim, 2013, Logic-Based Program Synthesis and Transformation. 22nd International Symposium, LOPSTR 2012. Revised Selected Papers, P194, DOI 10.1007/978-3-642-38197-3_13
   Shankar A, 2007, ACM SIGPLAN NOTICES, V42, P310, DOI 10.1145/1273442.1250770
   Sheeran M, 2000, LECT NOTES COMPUT SC, V1954, P108
   Srivastava S, 2009, ACM SIGPLAN NOTICES, V44, P223, DOI 10.1145/1543135.1542501
   Towle R.A., 1976, CONTROL DATA DEPENDE
   Unadkat D.P., 2022, THESIS INDIAN I TECH
   Unno H, 2017, LECT NOTES COMPUT SC, V10427, P571, DOI 10.1007/978-3-319-63390-9_30
   Yu EM, 2021, LECT NOTES COMPUT SC, V12760, P363, DOI 10.1007/978-3-030-81688-9_17
NR 78
TC 2
Z9 3
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2022
VL 24
IS 5
SI SI
BP 843
EP 888
DI 10.1007/s10009-022-00676-w
EA SEP 2022
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 6I0IB
UT WOS:000863163300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Metzler, P
   Suri, N
   Weissenbacher, G
AF Metzler, Patrick
   Suri, Neeraj
   Weissenbacher, Georg
TI Extracting safe thread schedules from incomplete model checking results
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software verification; Model checking; Concurrency; Nondeterministic
   scheduling
AB Model checkers frequently fail to completely verify a concurrent program, even if partial-order reduction is applied. The verification engineer is left in doubt whether the program is safe and the effort toward verifying the program is wasted. We present a technique that uses the results of such incomplete verification attempts to construct a (fair) scheduler that allows the safe execution of the partially verified concurrent program. This scheduler restricts the execution to schedules that have been proven safe (and prevents executions that were found to be erroneous). We evaluate the performance of our technique and show how it can be improved using partial-order reduction. While constraining the scheduler results in a considerable performance penalty in general, we show that in some cases our approach-somewhat surprisingly-even leads to faster executions.
C1 [Metzler, Patrick] Tech Univ Darmstadt, Darmstadt, Germany.
   [Suri, Neeraj] Univ Lancaster, Bailrigg, England.
   [Weissenbacher, Georg] TU Wien, Vienna, Austria.
C3 Technical University of Darmstadt; Lancaster University; Technische
   Universitat Wien
RP Metzler, P (corresponding author), Tech Univ Darmstadt, Darmstadt, Germany.
EM patrick.metzler@posteo.net; neeraj.suri@lancaster.ac.uk;
   georg.weissenbacher@tuwien.ac.at
OI Weissenbacher, Georg/0000-0002-0143-632X; Suri,
   Neeraj/0000-0003-1688-1167
FU Austrian Science Fund (FWF)
FX Open access funding provided by Austrian Science Fund (FWF).
CR Abdulla P.A., 2013, LNCS
   Abdulla P.A., 2012, TACAS
   Aviram Amittai., 2010, OSDI
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bergan Tom., 2013, OOPSLA
   Bergan Tom., 2010, ASPLOS
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Beyer D., 2012, FSE
   Blum Ben, 2013, SOSP
   Clarke E. M., 1999, International Journal on Software Tools for Technology Transfer, V2, P279, DOI 10.1007/s100090050035
   Cui H., 2011, SOSP
   Fang X., 2003, ICS
   Fischer B., 2013, ASE
   Flanagan C., 2005, POPL
   Flanagan C., 2002, LNCS
   Godefroid P, 1996, LNCS
   Gunther H., 2017, LNCS
   Gupta Ashutosh., 2015, POPL
   Henzinger TA, 2002, ACM SIGPLAN NOTICES, V37, P58, DOI 10.1145/565816.503279
   Henzinger ThomasA., 2004, PLDI
   Inverso O., 2014, CAV
   Kroening Daniel., 2011, Proceedings of the 23rd international conference on Computer aided verification. CAV'11, P573, DOI [DOI 10.1007/978-3-642-22110-145, 10.1007/978-3-642-22110-1_45, DOI 10.1007/978-3-642-22110-1_45]
   KUPERSTEIN M., 2010, FMCAD
   Lal A, 2009, FORM METHOD SYST DES, V35, P73, DOI 10.1007/s10703-009-0078-9
   Linden A., 2013, LNCS
   Liu Tongping., 2011, SOSP
   McMillan K.L, 2006, LNCS
   Metzler P., 2017, ASE
   Metzler P., 2019, LNCS
   Metzler P., 2018, CORR
   Mushtaq H., 2012, HIGH PERFORMANCE COM
   Musuvathi M., 2007, PLDI
   Nguyen T.L., 2016, LNCS
   Nguyen T.L., 2017, ASE
   Olszewski M., 2009, ASPLOS
   Qadeer S., 2005, LNCS
   Qadeer Shaz., 2004, PLDI
   Raychev V., 2013, SAS
   Valmari A, 1996, ADV PETRI NETS
   Wachter B., 2013, FMCAD
NR 40
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2020
VL 22
IS 5
SI SI
BP 565
EP 581
DI 10.1007/s10009-020-00575-y
EA JUN 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9OM
UT WOS:000543587100001
OA Green Published, Green Accepted, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Budde, CE
   D'Argenio, PR
   Hartmanns, A
   Sedwards, S
AF Budde, Carlos E.
   D'Argenio, Pedro R.
   Hartmanns, Arnd
   Sedwards, Sean
TI An efficient statistical model checker for nondeterminism and rare
   events
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
ID SEQUENTIAL CONFIDENCE-INTERVALS; RESTART; DESIGN
AB Statistical model checking avoids the state space explosion problem in verification and naturally supports complex non-Markovian formalisms. Yet as a simulation-based approach, its runtime becomes excessive in the presence of rare events, and it cannot soundly analyse nondeterministic models. In this article, we present modes: a statistical model checker that combines fully automated importance splitting to estimate the probabilities of rare events with smart lightweight scheduler sampling to approximate optimal schedulers in nondeterministic models. As part of theModest Toolset, it supports a variety of input formalisms natively and via theJaniexchange format. A modular software architecture allows its various features to be flexibly combined. We highlight its capabilities using experiments across multi-core and distributed setups on three case studies and report on an extensive performance comparison with three current statistical model checkers.
C1 [Budde, Carlos E.; Hartmanns, Arnd] Univ Twente, Enschede, Netherlands.
   [D'Argenio, Pedro R.] Univ Nacl Cordoba, Cordoba, Argentina.
   [D'Argenio, Pedro R.] Consejo Nacl Invest Cient & Tecn, Cordoba, Argentina.
   [D'Argenio, Pedro R.] Saarland Univ, Saarbrucken, Germany.
   [Sedwards, Sean] Univ Waterloo, Waterloo, ON, Canada.
C3 University of Twente; National University of Cordoba; Consejo Nacional
   de Investigaciones Cientificas y Tecnicas (CONICET); Saarland
   University; University of Waterloo
RP Hartmanns, A (corresponding author), Univ Twente, Enschede, Netherlands.
EM c.e.budde@utwente.nl; dargenio@famaf.unc.edu.ar; a.hartmanns@utwente.nl;
   sean.sedwards@uwaterloo.ca
RI D'Argenio, Pedro R./R-7137-2019; Budde, Carlos E./JDC-4950-2023
OI D'Argenio, Pedro R./0000-0002-8528-9215; Budde, Carlos
   E./0000-0001-8807-1548; Hartmanns, Arnd/0000-0003-3268-8674; Sedwards,
   Sean/0000-0002-2903-0823
FU ANPCyT [PICT-2017-3894]; ERC [695614]; NWO SEQUOIA Project; NWO VENI
   [639.021.754]; SeCyT-UNC Project [33620180100354CB]; JST ERATO HASUO
   Metamathematics for Systems Design Project [JPMJER1603]
FX The authors are listed in alphabetical order. This work was supported by
   ANPCyT Project PICT-2017-3894 (RAFTSys), by ERC Grant 695614 (POWVER),
   by the JST ERATO HASUO Metamathematics for Systems Design Project
   (JPMJER1603), by the NWO SEQUOIA Project, by NWO VENI Grant 639.021.754,
   and by SeCyT-UNC Project 33620180100354CB (ARES).
CR Agha G, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3158668
   Agresti A, 1998, AM STAT, V52, P119, DOI 10.2307/2685469
   Alexandre David, 2011, LNCS, P349
   Alexandre David, 2015, LNCS, P206
   Amrein M, 2011, ACM T MODEL COMPUT S, V21, DOI 10.1145/1899396.1899401
   [Anonymous], 2016, VALUETOOLS ICST, DOI DOI 10.4108/EAI.25-10-2016.2266997
   Arnd Hartmanns, 2019, LNCS, P344
   Arnd Hartmanns, 2014, LNCS, P593
   Axel Legay, 2015, LNCS, P350
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bohnenkamp H, 2006, IEEE T SOFTWARE ENG, V32, P812, DOI 10.1109/TSE.2006.104
   Brázdil T, 2014, LECT NOTES COMPUT SC, V8837, P98, DOI 10.1007/978-3-319-11936-6_8
   Budde C.E., 2017, VALUETOOLS ICST, P30, DOI [10.4108/eai.25-10-2016.2266501, DOI 10.4108/EAI.25-10-2016.2266501]
   Budde C.E., 2017, THESIS
   Budde CE, 2019, SCI COMPUT PROGRAM, V174, P90, DOI 10.1016/j.scico.2019.01.006
   Budde Carlos E., 2017, LNCS, P151
   Budde Carlos E., 2017, LNCS, P42
   Budde Carlos E., 2018, LNCS, P340
   Cérou F, 2012, STAT COMPUT, V22, P795, DOI 10.1007/s11222-011-9231-6
   Chen JH, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P362, DOI 10.1109/ICMLA.2013.149
   CHOW YS, 1965, ANN MATH STAT, V36, P457, DOI 10.1214/aoms/1177700156
   Christian Dehnert, 2017, LNCS, P592
   Clopper CJ, 1934, BIOMETRIKA, V26, P404, DOI 10.1093/biomet/26.4.404
   Cyrille Jegourel, 2013, LNCS, P576
   Cyrille Jegourel, 2016, LNCS, P163
   D'Argenio P, 2015, INT J SOFTW TOOLS TE, V17, P469, DOI 10.1007/s10009-015-0383-0
   D'Argenio PR, 2005, INFORM COMPUT, V203, P1, DOI 10.1016/j.ic.2005.07.001
   Daca P, 2017, ACM T COMPUT LOG, V18, DOI 10.1145/3060139
   Daniel Reijsbergen, 2016, LNCS, P16
   DArgenio Pedro R., 2018, LECT NOTES COMPUTER, P384
   DArgenio Pedro R., 2016, LECT NOTES COMPUTER, P99
   DArgenio Pedro R., 2018, LNCS, P336
   Dean T, 2009, STOCH PROC APPL, V119, P562, DOI 10.1016/j.spa.2008.02.017
   Dombrowski C, 2016, SYM REL DIST SYST, P307, DOI [10.1109/SRDS.2016.048, 10.1109/SRDS.2016.46]
   Eisentraut C, 2010, IEEE S LOG, P342, DOI 10.1109/LICS.2010.41
   Fränzle M, 2011, HSCC 11: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P43
   Frey J, 2010, AM STAT, V64, P242, DOI 10.1198/tast.2010.09140
   Garvels M. J. J., 2000, THESIS
   Garvels MJJ, 1998, 1998 WINTER SIMULATION CONFERENCE PROCEEDINGS, VOLS 1 AND 2, P601, DOI 10.1109/WSC.1998.745040
   Garvels MJJ, 2002, EUR T TELECOMMUN, V13, P363, DOI 10.1002/ett.4460130408
   Gerardo Rubino, 2009, RARE EVENT SIMULATIO, P1
   GOYAL A, 1992, IEEE T COMPUT, V41, P36, DOI 10.1109/12.123381
   Graf-Brill A., 2017, INDL INFORMATICS IND, DOI [10.1109/INDIN.2017.8104755, DOI 10.1109/INDIN.2017.8104755]
   Hahn EM, 2013, FORM METHOD SYST DES, V43, P191, DOI 10.1007/s10703-012-0167-z
   Hartmanns Arnd, 2017, 2017 Winter Simulation Conference (WSC), P1419, DOI 10.1109/WSC.2017.8247885
   Hartmanns A., 2018, STAT MODEL CHECKER N, DOI [10.4121/uuid:64cd25f4-4192-46d1-a951-9f99b452b48f, DOI 10.4121/UUID:64CD25F4-4192-46D1-A951-9F99B452B48F]
   Hartmanns A., 2019, EFFICIENT STAT MODEL, DOI [10.4121/uuid:2896b362-85d8-4705-bbe4-073fc79e23ec, DOI 10.4121/UUID:2896B362-85D8-4705-BBE4-073FC79E23EC]
   Hartmanns A, 2016, 2016 PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT), DOI 10.1145/2968478.2968496
   Hartmanns A, 2015, INT J SOFTW TOOLS TE, V17, P429, DOI 10.1007/s10009-014-0349-7
   Henzinger TA, 1998, J COMPUT SYST SCI, V57, P94, DOI 10.1006/jcss.1998.1581
   HOPKINS DN, 2004, LECT NOTES COMPUTER, P73
   Jegourel C., 2015, ECEASST, V72, DOI [10.14279/tuj.eceasst.72.1024, DOI 10.14279/TUJ.ECEASST.72.1024]
   Jegourel C, 2016, THEOR COMPUT SCI, V649, P1, DOI 10.1016/j.tcs.2016.08.009
   Jonathan Bogdoll, 2012, LECT NOTES COMPUTER, P249
   Kearns M, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P1324, DOI 10.1023/A:1017932429737
   Kurkowski S., 2005, ACM SIGMOBILE Mob. Comput. Commun. Rev., V9, P50, DOI DOI 10.1145/1096166.1096174
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2002, THEOR COMPUT SCI, V282, P101, DOI 10.1016/S0304-3975(01)00046-9
   Legay A, 2016, LECT NOTES COMPUT SC, V9952, P77, DOI 10.1007/978-3-319-47166-2_6
   Legay A, 2016, LECT NOTES COMPUT SC, V9899, P23, DOI 10.1007/978-3-319-45994-3_2
   LeGland F, 2006, LECT NOTES CONTR INF, V337, P351, DOI 10.1007/11587392_11
   Manuel Villen-Altamirano, 2011, LNCS, p509 
   Matsumoto M., 1998, ACM Transactions on Modeling and Computer Simulation, V8, P3, DOI 10.1145/272991.272995
   Moritz Hahn Ernst, 2019, LNCS, P69
   Nimal V., 2010, THESIS U OXFORD
   OKAMOTO M, 1958, ANN I STAT MATH, V10, P29
   Pagés C, 2009, LATIN AMER DEVELOP, P39
   Peter Bulychev, 2012, LECT NOTES COMPUTER, P449
   Pilch C, 2017, I C DEPEND SYS NETWO, P475, DOI 10.1109/DSN.2017.41
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   Reijsbergen D, 2015, INT J SOFTW TOOLS TE, V17, P377, DOI 10.1007/s10009-014-0350-1
   Rolland J, 2015, J COMPUT PHYS, V283, P541, DOI 10.1016/j.jcp.2014.12.009
   Thulin M, 2014, ELECTRON J STAT, V8, P817, DOI 10.1214/14-EJS909
   Turati P, 2016, RELIAB ENG SYST SAFE, V154, P117, DOI 10.1016/j.ress.2016.04.020
   Villén-Altamirano J, 2018, PERFORM EVALUATION, V121, P38, DOI 10.1016/j.peva.2018.02.002
   VILLENALTAMIRANO M, 1991, NORTH HOLL STUD TELE, V15, P71
   Vojtech Forejt, 2011, LNCS, P53
   WALD A, 1948, ANN MATH STAT, V19, P326, DOI 10.1214/aoms/1177730197
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
   Younes Hakan L. S., 2005, LNCS, P429
   Zimmermann A., 2017, VALUETOOLS, P263, DOI [10.1145/3150928.3150963, DOI 10.1145/3150928.3150963]
NR 82
TC 10
Z9 10
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2020
VL 22
IS 6
SI SI
BP 759
EP 780
DI 10.1007/s10009-020-00563-2
EA MAY 2020
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OQ9JV
UT WOS:000556435500001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Tennyson, MF
AF Tennyson, Matthew F.
TI ASAP: A Source Code Authorship Program
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Authorship attribution; Source code; Software forensics; Plagiarism
   detection; Software copyright infringement; Similarity search;
   Information retrieval; Machine learning
ID ATTRIBUTION
AB Source code authorship attribution is the task of determining who wrote a computer program, based on its source code, usually when the author is either unknown or under dispute. Areas where this can be applied include software forensics, cases of software copyright infringement, and detecting plagiarism. Numerous methods of source code authorship attribution have been proposed and studied. However, there are no known easily accessible and user-friendly programs that perform this task. Instead, researchers typically develop software in an ad hoc manner for use in their studies, and the software is rarely made publicly available. In this paper, we present a software tool called A Source Code Authorship Program (ASAP), which is suitable to be used by either the layperson or the expert. An author can be attributed to individual documents one at a time, or complex authorship attribution experiments can easily be performed on large datasets. In this paper, the interface and implementation of the ASAP tool is presented, and the tool is validated by using it to replicate previously published authorship attribution experiments.
C1 [Tennyson, Matthew F.] Murray State Univ, Murray, KY 42071 USA.
C3 Murray State University
RP Tennyson, MF (corresponding author), Murray State Univ, Murray, KY 42071 USA.
EM mtennyson@murraystate.edu
CR [Anonymous], 2007, ADCS 2007 P 12 AUSTR
   Burrows S, 2014, SOFTWARE PRACT EXPER, V44, P1, DOI 10.1002/spe.2146
   Burrows Steven., 2010, Source code authorship attribution
   Caliskan-Islam A, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P255
   Ding HB, 2004, J SYST SOFTWARE, V72, P49, DOI 10.1016/S0164-1212(03)00049-9
   Elenbogen B. S., 2008, J. Comput. Sci. Coll, V23, P50
   Frank E, 2016, THE WEKA WORKBENCH, P4
   Frantzeskou G., 2006, 28th International Conference on Software Engineering Proceedings, P893, DOI 10.1145/1134285.1134445
   Hendrikse S, 2017, EFFECT CODE OBFUSCAT
   Kothari J, 2007, INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY, PROCEEDINGS, P243
   Krsul I, 1997, COMPUT SECUR, V16, P233, DOI 10.1016/S0167-4048(97)00005-9
   Lange R, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P2082
   MacDonell S., 1999, P 6 INT C NEUR INF P, P66
   McDonald Andrew W. E., 2012, Privacy Enhancing Technologies. Proceedings 12th International Symposium, PETS 2012, P299, DOI 10.1007/978-3-642-31680-7_16
   Neme A, 2015, NEUROCOMPUTING, V147, P147, DOI 10.1016/j.neucom.2014.03.064
   Niezgoda S., 2006, SIGCSE Bulletin, V38, P51, DOI 10.1145/1124706.1121359
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   Robertson S.E., 1999, The Eighth Text REtrieval Conference (TREC 8), V8, P151
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   Shevertalov M, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P69, DOI 10.1109/SSBSE.2009.18
   Swain S., 2017, P INT C EL COMM AER
   Tennyson M, 2013, AUTHORSHIP ATTRIBUTI
   Tennyson M., 2013, P IADIS INT C APPL C, P39
   Tennyson Matthew F., 2013, Proceedings of the 2013 3rd International Workshop on Replication in Empirical Software Engineering Research (RESER 2013), P76, DOI 10.1109/RESER.2013.12
   Tennyson MF, 2014, IEEE SOUTHEASTCON
   Wisse W, 2015, DIGIT INVEST, V15, P61, DOI 10.1016/j.diin.2015.09.001
   Yang XY, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0187204
   Zhao Y, 2005, LECT NOTES COMPUT SC, V3689, P174
NR 29
TC 0
Z9 0
U1 2
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2019
VL 21
IS 4
BP 471
EP 484
DI 10.1007/s10009-019-00517-3
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IK4EM
UT WOS:000476539900005
DA 2024-07-18
ER

PT J
AU André, É
AF Andre, Etienne
TI What's decidable about parametric timed automata?
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Decidability; Decision problems; Parametric timed model checking;
   Parameter synthesis; L/U-PTAs; Hybrid automata
ID EXPRESSIVENESS
AB Parametric timed automata (PTAs) are a powerful formalism to reason, simulate and formally verify critical real-time systems. After 25 years of research on PTAs, it is now well understood that any non-trivial problem studied is undecidable for general PTAs. We provide here a survey of decision and computation problems for PTAs. On the one hand, bounding time, bounding the number of parameters or the domain of the parameters does not (in general) lead to any decidability. On the other hand, restricting the number of clocks, the use of clocks (compared or not with the parameters), and the use of parameters (e.g., used only as upper or lower bounds) leads to decidability of some problems. We also put emphasis on open problems. We also discuss formalisms close to parametric timed automata (such as parametric hybrid automata or parametric interrupt timed automata), and we study tools dedicated to PTAs and their extensions.
C1 [Andre, Etienne] Univ Paris 13, CNRS, UMR 7030, LIPN, F-93430 Villetaneuse, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite Paris 13
RP André, É (corresponding author), Univ Paris 13, CNRS, UMR 7030, LIPN, F-93430 Villetaneuse, France.
EM eandre93430@lipn13.fr
CR Aceto L, 1998, LECT NOTES COMPUT SC, V1530, P245
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   Alur R, 2004, LECT NOTES COMPUT SC, V3185, P1
   ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   Alur R., 1993, Proceedings of the Twenty-Fifth Annual ACM Symposium on the Theory of Computing, P592, DOI 10.1145/167088.167242
   Alur R., 2001, ACM Transactions on Computational Logic, V2, P388, DOI [DOI 10.1145/377978.377990, 10.1145/377978.377990]
   Andre Etienne, 2017, Formal Techniques for Distributed Objects, Components and Systems. 37th IFIP WG 6.1 International Conference, FORTE 2017, held as part of the 12th International Federated Conference on Distributed Computing Techniques, DisCoTec 2017. Proceedings: LNCS 10321, P17, DOI 10.1007/978-3-319-60225-7_2
   Andre Etienne, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P984, DOI 10.1007/978-3-642-39799-8_70
   Andre Etienne, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P33, DOI 10.1007/978-3-642-32759-9_6
   Andre E, 2016, FTSCS COMMUNICATIONS, P1
   Andre E, 2015, LNCS
   Andre E., 2016, ICFEM
   Andre E., 2016, FORMATS
   Andre E., 2016, TECHNICAL REPORT
   André É, 2017, INT CONF APPL CONCUR, P9, DOI 10.1109/ACSD.2017.19
   Andre E, 2017, LECT NOTES COMPUT SC, V10227, P35, DOI 10.1007/978-3-319-57288-8_3
   André É, 2016, LECT NOTES COMPUT SC, V9965, P469, DOI 10.1007/978-3-319-46750-4_27
   André E, 2015, LECT NOTES COMPUT SC, V9268, P27, DOI 10.1007/978-3-319-22975-1_3
   André É, 2012, IEEE INT C ENG COMP, P253, DOI 10.1109/ICECCS.2012.29
   André É, 2009, INT J FOUND COMPUT S, V20, P819, DOI 10.1142/S0129054109006905
   [Anonymous], INT J SOFTW TOOLS TE, DOI DOI 10.1007/S100090050008
   [Anonymous], 1993, Hybrid Systems, DOI [DOI 10.1007/3-540-57318-6_30, DOI 10.1007/3-540, DOI 10.1007/3-540-57318-6, 10.1007/3-540-57318-6_30]
   [Anonymous], 2000, Proceedings of the 11th International Conference on Concurrency Theory, CONCUR 00
   [Anonymous], 1974, THESIS
   Asarin E, 2012, INFORM COMPUT, V211, P138, DOI 10.1016/j.ic.2011.11.006
   Astefanoaei L, 2016, LECT NOTES COMPUT SC, V9995, P60, DOI 10.1007/978-3-319-48989-6_4
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Benes N, 2015, LECT NOTES COMPUT SC, V9135, P69, DOI 10.1007/978-3-662-47666-6_6
   Bérard B, 2005, LECT NOTES COMPUT SC, V3829, P211
   Berard Beatrice, 2015, Reachability Problems. 9th International Workshop, RP 2015. Proceedings: LNCS 9328, P20, DOI 10.1007/978-3-319-24537-9_3
   Bérard B, 2013, THEOR COMPUT SCI, V474, P1, DOI 10.1016/j.tcs.2012.12.005
   BERARD B, 1957, INFORMORMATICA, V143, P235, DOI DOI 10.3233/FI-2016-1313
   Bérard B, 2012, FORM METHOD SYST DES, V40, P41, DOI 10.1007/s10703-011-0140-2
   Bouyer P, 2013, LECT NOTES COMPUT SC, V8169, P1, DOI 10.1007/978-3-642-41036-9_1
   Bozzelli L, 2009, FORM METHOD SYST DES, V35, P121, DOI 10.1007/s10703-009-0074-0
   Brihaye T, 2004, LECT NOTES COMPUT SC, V2993, P219
   Brihaye Thomas, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P55, DOI 10.1007/978-3-319-02444-8_6
   Bruyère V, 2007, LOG METH COMPUT SCI, V3, DOI 10.2168/LMCS-3(1:7)2007
   Bundala D, 2014, LECT NOTES COMPUT SC, V8634, P123, DOI 10.1007/978-3-662-44522-8_11
   Cassez F, 2006, J SYST SOFTWARE, V79, P1456, DOI 10.1016/j.jss.2005.12.021
   Chevallier R, 2009, FORM METHOD SYST DES, V34, P59, DOI 10.1007/s10703-008-0061-x
   Di Giampaolo B, 2015, THEOR COMPUT SCI, V564, P131, DOI 10.1016/j.tcs.2014.11.019
   Doyen L, 2007, INFORM PROCESS LETT, V102, P208, DOI 10.1016/j.ipl.2006.11.018
   Fanchon L., 2013, INT COMP MUS C
   Fribourg L., 2012, 2012 19th International Symposium on Temporal Representation and Reasoning (TIME), P73, DOI 10.1109/TIME.2012.10
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   Henzinger TA, 1998, J COMPUT SYST SCI, V57, P94, DOI 10.1006/jcss.1998.1581
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   Henzinger TA, 1995, LECT NOTES COMPUT SC, V944, P417
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   HUNE T, 2020, JLAP, V52, P183
   Jovanovi A., 2013, THESIS
   Jovanovic A, 2015, IEEE T SOFTWARE ENG, V41, P445, DOI 10.1109/TSE.2014.2357445
   Knapik M., 2012, TOPNOC, V5, P141
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Lime D, 2009, LECT NOTES COMPUT SC, V5505, P54, DOI 10.1007/978-3-642-00768-2_6
   Markey N., 2011, 2011 6th IEEE International Symposium on Industrial Embedded Systems (SIES), P28, DOI 10.1109/SIES.2011.5953652
   Miller JS, 2000, LECT NOTES COMPUT SC, V1790, P296
   Minsky M., 1967, Computation: finite and infinite machines
   Ouaknine J., 2007, LOG METH COMPUT SCI, V3, P1, DOI DOI 10.2168/LMCS-3(1:8)2007
   Ouaknine J, 2010, LECT NOTES COMPUT SC, V6199, P22, DOI 10.1007/978-3-642-14162-1_3
   Quaas K, 2014, ELECTRON P THEOR COM, P5, DOI 10.4204/EPTCS.145.3
   Srba J, 2008, LECT NOTES COMPUT SC, V5215, P15, DOI 10.1007/978-3-540-85778-5_3
   Sun J, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430537
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Traonouez LM, 2009, J UNIVERS COMPUT SCI, V15, P3273
   VANGLABBEEK RJ, 1990, LECT NOTES COMPUT SC, V458, P278
NR 69
TC 37
Z9 38
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2019
VL 21
IS 2
BP 203
EP 219
DI 10.1007/s10009-017-0467-0
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS3JE
UT WOS:000463758000005
DA 2024-07-18
ER

PT J
AU Wijs, A
   Bosnacki, D
AF Wijs, Anton
   Bosnacki, Dragan
TI Many-core on-the-fly model checking of safety properties using GPUs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE GPU; Model checking; Safety properties; Graph search; Refinement
ID ALGORITHMS; VERIFICATION
AB Model checking is an automatic method to formally verify the correctness of a system specification. Such model checking specifications can be viewed as implicit descriptions of a large directed graph or state space, which, for most model checking operations, needs to be analysed. However, construction or on-the-fly exploration of the state space is computationally intensive and often can be prohibitive in practical applications. In this work, we present techniques to perform graph generation and exploration using general purpose graphics processors (GPUs). GPUs have been successfully applied in multiple application domains to drastically speed up computations. We explain the limitations involved when trying to achieve efficient state space exploration with GPUs and present solutions how to overcome these. We discuss the possible approaches involving related work and propose an alternative, using a new hash table approach for GPUs. As input, we consider models that can be represented by a fixed number of communicating finite-state Labelled Transition Systems. This means that we assume that all variables used in a model range over finite data domains. Additionally, we show how our exploration technique can be extended to detect deadlocks and check safety properties on-the-fly. Experimental evaluations with our prototype implementations show significant speed-ups compared to the established sequential counterparts.
C1 [Wijs, Anton; Bosnacki, Dragan] Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
   [Wijs, Anton] Rhein Westfal TH Aachen, Aachen, Germany.
C3 Eindhoven University of Technology; RWTH Aachen University
RP Wijs, A (corresponding author), Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM A.J.Wijs@tue.nl; D.Bosnacki@tue.nl
RI Wijs, Anton/A-9694-2019
OI Wijs, Anton/0000-0002-2071-9624
CR Alcantara D.A., 2011, GPU COMPUTING GEMS
   Alcantara DA, 2009, ACM T GRAPHIC, V28, DOI [10.1145/1618452.1610500, 10.1145/1618452.1618500]
   [Anonymous], [No title captured]
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Barnat J., 2011, Proceedings of the 25th IEEE International Parallel & Distributed Processing Symposium (IPDPS 2011), P544, DOI 10.1109/IPDPS.2011.59
   Barnat Jiri, 2009, Proceedings of the 2009 IEEE 15th International Conference on Parallel and Distributed Systems (ICPADS 2009), P34, DOI 10.1109/ICPADS.2009.50
   Barnat J, 2012, J PARALLEL DISTR COM, V72, P1083, DOI 10.1016/j.jpdc.2011.10.015
   Bartocci E., 2014, P 2014 INT SPIN S MO, P87
   Bauer A., 2010, ABS10063638 CORR
   Bosnacki Dragan, 2010, Proceedings 2010 9th International Workshop on Parallel & Distributed Methods in Verification and 2nd International Workshop on High Performance Computational Systems Biology (PDMC-HiBi 2010), P17, DOI 10.1109/PDMC-HiBi.2010.11
   Bosnacki Dragan, 2011, International Journal on Software Tools for Technology Transfer, V13, P21, DOI 10.1007/s10009-010-0176-4
   Cranen S, 2013, LECT NOTES COMPUT SC, V7795, P199, DOI 10.1007/978-3-642-36742-7_15
   Dashti MT, 2007, LECT NOTES COMPUT SC, V4762, P543
   Dietzfelbinger M, 2011, LECT NOTES COMPUT SC, V6942, P615, DOI 10.1007/978-3-642-23719-5_52
   Edelkamp S, 2010, LECT NOTES COMPUT SC, V6349, P106
   Garavel H, 1997, SCI COMPUT PROGRAM, V29, P171, DOI 10.1016/S0167-6423(96)00034-2
   Garavel H, 1999, INT FED INFO PROC, V28, P185
   Garavel H, 2011, LECT NOTES COMPUT SC, V6605, P372, DOI 10.1007/978-3-642-19835-9_33
   Harish P, 2007, LECT NOTES COMPUT SC, V4873, P197
   Holzmann Gerard J., 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P155, DOI 10.1007/978-3-642-31759-0_12
   Hong SP, 2011, ACM SIGPLAN NOTICES, V46, P267, DOI 10.1145/2038037.1941590
   [Information Processing Systems Open Systems Interconnection ISO IEC LOTOS International Organization of Standardization], 1989, 8807 ISOIEC
   Laarman Alfons, 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P247
   Laarman A, 2011, LECT NOTES COMPUT SC, V6617, P506, DOI 10.1007/978-3-642-20398-5_40
   LAMPORT L, 1987, ACM T COMPUT SYST, V5, P1, DOI 10.1145/7351.7352
   Lang F, 2005, LECT NOTES COMPUT SC, V3771, P70
   Luo LJ, 2010, DES AUT CON, P52
   LUTTIK S, 1997, SENR9706 CWI
   Mateescu R, 2009, LECT NOTES COMPUT SC, V5505, P215, DOI 10.1007/978-3-642-00768-2_21
   Merrill D, 2012, ACM SIGPLAN NOTICES, V47, P117, DOI 10.1145/2370036.2145832
   Merrill D, 2011, PARALLEL PROCESS LET, V21, P245, DOI 10.1142/S0129626411000187
   Mounier L., 1994, LOTOS SPECIFICATION, P94
   *NIST, 1999, FIPS PUB, P46
   Pagh R., 2001, LNCS, V2161, P121, DOI DOI 10.1007/3-540-44676-1_10
   Pecheur C., 1999, 14th IEEE International Conference on Automated Software Engineering, P119, DOI 10.1109/ASE.1999.802152
   Pelanek Radek, 2008, International Journal on Software Tools for Technology Transfer, V10, P443, DOI 10.1007/s10009-008-0070-5
   Pelánek R, 2007, LECT NOTES COMPUT SC, V4595, P263
   PETERSON GL, 1981, INFORM PROCESS LETT, V12, P115, DOI 10.1016/0020-0190(81)90106-X
   ROMIJN J, 1999, SENR9915 CWI
   Szymanski B. K., 1990, Proceedings of the 5th Jerusalem Conference on Information Technology (JCIT). Next Decade in Information Technology (Cat. No.90TH0326-9), P110, DOI 10.1109/JCIT.1990.128275
   Wijs Anton, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P368, DOI 10.1007/978-3-662-46681-0_29
   Wijs A., 2014, Proc. of TACAS 2014: the 20th International Conference on Tools and Algorithms for the Construction and Analysis of Systems, V8413, P233, DOI DOI 10.1007/978-3-642-54862-816
   Wijs A., 2007, THESIS VU U AMSTERDA
   Wijs Anton J., 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P98, DOI 10.1007/978-3-642-31759-0_9
   Wijs A, 2014, LECT NOTES COMPUT SC, V8559, P310, DOI 10.1007/978-3-319-08867-9_20
   Yangdong Deng, 2009, Proceedings of the 2009 IEEE/ACM International Conference on Computer-Aided Design (ICCAD 2009), P539, DOI 10.1145/1687399.1687501
NR 46
TC 12
Z9 12
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2016
VL 18
IS 2
BP 169
EP 185
DI 10.1007/s10009-015-0379-9
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK5QQ
UT WOS:000374975200004
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Lincke, D
   Schupp, S
   Ionescu, C
AF Lincke, Daniel
   Schupp, Sibylle
   Ionescu, Cezar
TI Functional prototypes for generic C++ libraries: a transformational
   approach based on higher-order, typed signatures
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Defunctionalization; Higher-order functions; Type constructors;
   Concepts; Program transformation
ID VULNERABILITY; SUPPORT
AB This paper presents a method for developing generic C++ software libraries from functional prototypes, based on program transformation. More precisely, the type signatures of generic functions, i.e., functions parameterized on types, are transformed. This transformation maps typelevel expressions from functional higher-order, typed languages to type-level expressions in C++. In particular, type-level functional constructs such as higher-order functions and type constructors, are mapped to type parameters of generics that are constrained with appropriate concepts. The core of the transformation is a novel form of "defunctionalization" at the level of types. To make the transformation retargetable, we based it on two kernel languages that can be bound to different functional and object-oriented languages. For this paper, we use bindings to Haskell as front end and C++ with concepts as back end. Our transformational approach presents an alternative to a language extension and is useful particularly for functional prototyping where functional features are employed at specification time. We illustrate our approach by a case study: we show how we developed a generic C++ library for vulnerability modeling in the context of global change from a functional prototype in Haskell.
C1 [Lincke, Daniel] Global Climate Forum, Berlin, Germany.
   [Schupp, Sibylle] Hamburg Univ Technol, Inst Software Syst, Hamburg, Germany.
   [Ionescu, Cezar] Potsdam Inst Climate Impact Res PIK, Res Domain Transdisciplinary Concepts & Methods, Potsdam, Germany.
C3 Hamburg University of Technology; Potsdam Institut fur
   Klimafolgenforschung
RP Lincke, D (corresponding author), Global Climate Forum, Berlin, Germany.
EM daniel.lincke@globalclimateforum.org
CR Abrahams D., 2005, C TEMPLATE METAPROGR
   [Anonymous], 2006, SOFTWARE ENG
   [Anonymous], 2003, Haskell 98 language and libraries: the revised report
   Bagge AH, 2009, ELECTRON NOTES THEOR, V238, P17, DOI 10.1016/j.entcs.2009.09.038
   Bernardy JP, 2010, J FUNCT PROGRAM, V20, P271, DOI 10.1017/S095679681000016X
   Botta N, 2007, PARALLEL COMPUT, V33, P795, DOI 10.1016/j.parco.2007.08.002
   Botta N, 2011, APPL MATH COMPUT, V218, P4025, DOI 10.1016/j.amc.2011.08.051
   Botta N., 2006, 103 PIK POTSD I CLIM
   Broberg N., HASKELL SRC EXTS PAC
   Brooks N., 2003, Tyndall Centre Working Paper 26, V26
   Garcia R, 2007, J FUNCT PROGRAM, V17, P145, DOI 10.1017/S0956796806006198
   Gregor D., 2008, N2741080251 ISOIEC J
   Gregor D., 2006, TECHNICAL REPORT
   Gregor D., 2009, WHAT HAPPENED FRANKF
   Gregor D, 2006, ACM SIGPLAN NOTICES, V41, P291, DOI 10.1145/1167515.1167499
   Gregor Douglas., CONCEPTGCC
   Haeri S. H., 2011, P 23 S IMPL APPL FUN
   Ionescu C., 2008, THESIS FREIE U BERLI
   Janssen MA, 2006, GLOBAL ENVIRON CHANG, V16, P237, DOI 10.1016/j.gloenvcha.2006.04.003
   Järvi J, 2003, SOFTWARE PRACT EXPER, V33, P259, DOI 10.1002/spe.504
   Jones M. P., 1994, YALEUDCSRR1049 DEP C
   Lämmel R, 2003, ACM SIGPLAN NOTICES, V38, P26, DOI 10.1145/640136.604179
   Lincke D., 2009, P IFIP WORK C DOM SP, P236
   Lincke D., 2012, THESIS TU HAMBURG HA
   Lincke D., 2008, P DIG EARTH SUMM GEO, P188
   Lincke D., TRANSFORMATIONAL APP
   McNamara B., 2004, THESIS GEORGIA I TEC
   Schupp S., 2012, P 12 WORKSH LANG DES
   STEPANOV A, 1994, WG21N0482
   TURNER DA, 1985, P DISC M ROYAL SOC L, P29
   Vandervoorde D., 2002, C TEMPLATES COMPLETE
   Wolf S, 2013, INT J CLIM CHANG STR, V5, P54, DOI 10.1108/17568691311299363
   Zalewski M., 2008, THESIS CHALMERS U TE
   Zalewski M., 2007, P 6 INT WORKSH MULT
NR 34
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2015
VL 17
IS 1
BP 91
EP 105
DI 10.1007/s10009-014-0299-0
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7ND
UT WOS:000355681700006
DA 2024-07-18
ER

PT J
AU Goldman, RP
   Pelican, MJS
   Musliner, DJ
AF Goldman, Robert P.
   Pelican, Michael J. S.
   Musliner, David J.
TI A loop acceleration technique to speed up verification of automatically
   generated plans
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Automated planning; Verification; Model checking; Timed automata; Loop
   acceleration
AB The CIRCA planning system automatically creates reactive plans and uses formal verification techniques to prove that those plans will preserve system safety. CIRCA's timed automata verification system is highly efficient, yet can display pathologically bad behavior when reasoning about reaction loops, a particular form of interacting cycles of states. In this paper, we describe a loop acceleration technique that recognizes these state-space structures during the verification process and bypasses the process of expanding an arbitrarily large cycle of states, effectively compressing loops of arbitrary size into a compact, finite set of states. The resulting performance improvement can be very dramatic: in domains where tight loops of short-duration transitions interact with long-duration transitions, our new loop acceleration methods can reduce verification time (and hence planning time) from hours to below a second.
C1 [Goldman, Robert P.; Pelican, Michael J. S.; Musliner, David J.] SIFT LLC, Minneapolis, MN USA.
RP Pelican, MJS (corresponding author), SIFT LLC, Minneapolis, MN USA.
EM mpelican@sift.net
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R., 1998, WORKING NOTES NATO A
   Alur R., 1998, MSCIS9810 U PENN
   [Anonymous], ELECT NOTES THEORETI
   Bardin S, 2005, LECT NOTES COMPUT SC, V3707, P474
   Bardin S, 2006, LECT NOTES COMPUT SC, V4144, P63, DOI 10.1007/11817963_9
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Behrmann G., 2002, P 7 INT S FORM TECHN
   Bozga M., 2010, TR20103
   DAWS C, 1996, HYBRID SYSTEMS, V3, P208
   DECHTER R, 1991, ARTIF INTELL, V49, P61, DOI 10.1016/0004-3702(91)90006-6
   DILL DL, 1990, LECT NOTES COMPUT SC, V407, P197
   Fietzke A., 2012, MPII2012RG1002
   Gat E., 1996, SSS9604 AAAI
   Goldman R.P., 2004, P 14 INT C AUT PLANN, P279
   Hendriks M., 2006, THESIS I PROGRAMMING
   Hune T.S., 2000, RES SER U AARHUS, VRS-00-17
   Iversen Torsten K., 2000, Proceedings 12th Euromicro Conference on Real-Time Systems. Euromicro RTS 2000, P147, DOI 10.1109/EMRTS.2000.854002
   Kortenkamp D., 2012, INT S ART INT ROB AU
   Kortenkamp D., 2011, AIAA INF AER
   LARSEN KG, 1995, LNCS, V965, P62, DOI DOI 10.1007/3-540-60249-6
   MUSLINER D, 1997, NASA WORKSH PLANN SC
   Musliner D.J., 2008, AAAI SPRING S ARCH I
   MUSLINER DJ, 1993, IEEE T SYST MAN CYB, V23, P1561, DOI 10.1109/21.257754
   MUSLINER DJ, 1995, ARTIF INTELL, V74, P83, DOI 10.1016/0004-3702(94)00008-O
   Potts CM, 2013, AAAI SPRING S TRUST
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Salah R.B., 2007, THESIS I NATL POLYTE
   Yovine S., 1997, International Journal on Software Tools for Technology Transfer, V1, P123, DOI 10.1007/s100090050009
NR 29
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2014
VL 16
IS 1
BP 13
EP 29
DI 10.1007/s10009-013-0284-z
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HQ
UT WOS:000209672900002
DA 2024-07-18
ER

PT J
AU Lafuente, AL
   Mavridou, A
AF Lafuente, Alberto Lluch
   Mavridou, Anastasia
TI Formal methods and tools for industrial critical systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal methods; Tools; Critical systems
ID SPECIAL-ISSUE; VERIFICATION
AB Formal methods and tools have become well established and widely applied to ensure the correctness of fundamental components of industrial critical systems in domains like railways, avionics and automotive. In this Introduction to the special issue, we outline a number of recent achievements concerning the use of formal methods and tools for the specification and verification of critical systems from a variety of industrial domains. These achievements are represented by four properly revised and extended versions of papers that were selected from the 26th International Conference on Formal Methods for Industrial Critical Systems (FMICS 2021).
C1 [Lafuente, Alberto Lluch] DTU Compute, Lyngby, Denmark.
   [Mavridou, Anastasia] NASA, KBR Inc, Ames Res Ctr, Moffett Field, CA USA.
C3 Technical University of Denmark; National Aeronautics & Space
   Administration (NASA); NASA Ames Research Center
RP Lafuente, AL (corresponding author), DTU Compute, Lyngby, Denmark.
EM albl@dtu.dk; anastasia.mavridou@nasa.gov
RI Lafuente, Alberto Lluch/G-4413-2011
OI Lafuente, Alberto Lluch/0000-0001-7405-0818
CR Agha G, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3158668
   Almeida J.B., 2011, Rigorous Software Development, P15, DOI DOI 10.1007/978-0-85729-018-2_2
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Basile D, 2018, LECT NOTES COMPUT SC, V11023, P20, DOI 10.1007/978-3-319-98938-9_2
   BeloLourenco, 2022, INT J SOFTW TOOLS TE
   Bonfanti S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1943
   Bowen J. P., 2014, Computer Science and Software Engineering, V3rd, P71
   Brat G, 2004, FORM METHOD SYST DES, V25, P167, DOI 10.1023/B:FORM.0000040027.28662.a4
   Campos J., 2018, FORMAL METHODS MANUF, V1st, DOI [10.1201/9781315216140, DOI 10.1201/9781315216140]
   Clarke E.M., 2018, Handbook of Model Checking, DOI [DOI 10.1007/978-3-319-10575-8_1, 10.1007/978-3-319-10575-8_1]
   Clarke EM, 2009, COMMUN ACM, V52, P75, DOI 10.1145/1592761.1592781
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Craigen D., 1995, IND APPL FORMAL METH, DOI [10.1016/C2009-0-20452-1, DOI 10.1016/C2009-0-20452-1]
   Ferrari A, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3520480
   Garavel H, 2020, LECT NOTES COMPUT SC, V12327, P3, DOI 10.1007/978-3-030-58298-2_1
   Gleirscher M, 2020, EMPIR SOFTW ENG, V25, P4473, DOI 10.1007/s10664-020-09836-5
   Gnesi S., 2013, FORMAL METHODS IND C, DOI [10.1002/9781118459898, DOI 10.1002/9781118459898]
   Güdemann M, 2017, INT J SOFTW TOOLS TE, V19, P391, DOI 10.1007/s10009-017-0455-4
   Hansen ST, 2022, INT J SOFTW TOOLS TE, V24, P999, DOI 10.1007/s10009-022-00686-8
   Hinchey M, 2010, ENCY SOFTWARE ENG, P308
   Hinchey M.G., 1999, IND STRENGTH FORMAL, DOI [10.1007/978-1-4471-0523-7, DOI 10.1007/978-1-4471-0523-7]
   Kiviriga A, 2022, INT J SOFTW TOOLS TE, V24, P1025, DOI 10.1007/s10009-022-00681-z
   Kulik T, 2022, FORM ASP COMPUT, V34, DOI 10.1145/3522582
   Lluch-Lafuente, 2021, LECT NOTES COMPUTER, V12863, DOI [10.1007/978-3-030-85248-1, DOI 10.1007/978-3-030-85248-1]
   Margaria T, 2020, IT PROF, V22, P9, DOI 10.1109/MITP.2020.2968715
   Marko N., 2020, ARXIV
   Michael JB, 2021, COMPUTER, V54, P25, DOI 10.1109/MC.2021.3089267
   Nielson F., 2019, FORMAL METHODS APPET, DOI [10.1007/978-3-030-05156-3, DOI 10.1007/978-3-030-05156-3]
   Ozay N, 2017, DISCRETE EVENT DYN S, V27, P205, DOI 10.1007/s10626-017-0246-9
   Palanque P, 2017, HDB FORMAL METHODS H, DOI [10.1007/978-3-319-51838-1, DOI 10.1007/978-3-319-51838-1]
   Robinson JA, 2001, Handbook of automated reasoning
   Schmidt J, 2022, INT J SOFTW TOOLS TE, V24, P1043, DOI 10.1007/s10009-022-00682-y
   Sifakis J, 2014, PROCEEDINGS OF THE 2014 ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING (PODC'14), P292
   Sifakis J, 2012, FOUND TRENDS ELECTRO, V6, P293, DOI 10.1561/1000000034
   Sztipanovits J, 2012, P IEEE, V100, P29, DOI 10.1109/JPROC.2011.2161529
   ter Beek MH, 2018, INT J SOFTW TOOLS TE, V20, P237, DOI 10.1007/s10009-018-0487-4
   Ter Beek MH, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3177772
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P123, DOI 10.1016/j.jlamp.2015.09.006
   ter Beek MH., 2022, SOFTWARE, V1, P381, DOI [10.3390/software1040017, DOI 10.3390/SOFTWARE1040017]
   Voas J, 2016, COMPUTER, V49, P102, DOI 10.1109/MC.2016.131
   Wing JM, 2021, COMMUN ACM, V64, P64, DOI 10.1145/3448248
   WING JM, 1990, COMPUTER, V23, P8, DOI 10.1109/2.58215
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
NR 43
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2022
VL 24
IS 6
SI SI
BP 973
EP 976
DI 10.1007/s10009-022-00687-7
EA OCT 2022
PG 4
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8H5UG
UT WOS:000875518300001
DA 2024-07-18
ER

PT J
AU Yuan, Y
   Li, Y
   Shi, WC
AF Yuan, Yue
   Li, Yi
   Shi, Wenchang
TI Detecting multiphase linear ranking functions for single-path
   linear-constraint loops
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Termination analysis; Multiphase linear ranking functions; Depth bound;
   Single-path linear-constraint loops
AB Single-path linear-constraint loops are important since many analyses in different fields can be reduced to termination proof synthesis for such loops. In 2017, Ben-Amram and Genaim provided a complete polynomial-time solution to the problem of existence and of synthesis of multiphase linear ranking functions (M phi RFsof bounded depth to prove the termination of a single-path linear-constraint loop. However, an open question whether one can precompute a bound on the depth of a M phi RF for a given loop is raised and the solution has not been accomplished so far. In this paper, we propose an approach to depth bound detection and synthesis of M phi RFs for rational single-path linear-constraint loops. We take a step further based on the work of Ben-Amram and Genaim, and detect the depth bound for a certain class of rational single-path linear-constraint loops. Furthermore, the effectiveness of our approach is presented with experimental evidence. The depth bound can be precomputed for loops where existing tools fail to infer a M phi RF or prove that none exists.
C1 [Yuan, Yue; Shi, Wenchang] Renmin Univ China, Sch Informat, Beijing 100872, Peoples R China.
   [Li, Yi] Chinese Acad Sci, Chongqing Key Lab Automated Reasoning & Cognit, Automated Reasoning & Cognit Ctr, Chongqing Inst Green & Intelligent Technol, Chongqing 401120, Peoples R China.
C3 Renmin University of China; Chinese Academy of Sciences; Chongqing
   Institute of Green & Intelligent Technology, CAS
RP Li, Y (corresponding author), Chinese Acad Sci, Chongqing Key Lab Automated Reasoning & Cognit, Automated Reasoning & Cognit Ctr, Chongqing Inst Green & Intelligent Technol, Chongqing 401120, Peoples R China.
EM yy199153@126.com; zm_liyi@163.com; wenchang@ruc.edu.cn
CR Bagnara R., 2013, PPDP, P229
   Ben-Amram AM, 2017, LECT NOTES COMPUT SC, V10427, P601, DOI 10.1007/978-3-319-63390-9_32
   Ben-Amram AM, 2014, J ACM, V61, DOI 10.1145/2629488
   Bradley AR, 2005, LECT NOTES COMPUT SC, V3576, P491
   Bradley AR, 2005, LECT NOTES COMPUT SC, V3580, P1349
   Chen HY, 2015, INT J SOFTW TOOLS TE, V17, P47, DOI 10.1007/s10009-013-0288-8
   Chen YH, 2007, LECT NOTES COMPUT SC, V4711, P34
   Chen YF, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P135, DOI 10.1145/3192366.3192405
   Colon M. A., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P67
   Colon M. A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P442
   Cook B, 2008, LECT NOTES COMPUT SC, V5123, P328
   Cook B, 2006, ACM SIGPLAN NOTICES, V41, P415, DOI 10.1145/1133981.1134029
   Cook B, 2007, CONFERENCE RECORD OF POPL 2007: THE 34TH ACM SIGPLAN SIGACT SYMPOSIUM ON PRINCIPLES OF PROGAMMING LANGUAGES, P265
   Cousot P, 2005, LECT NOTES COMPUT SC, V3385, P1
   Fedyukovich G, 2018, LECT NOTES COMPUT SC, V10981, P124, DOI 10.1007/978-3-319-96145-3_7
   Ganty Pierre, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P397, DOI 10.1007/978-3-642-39799-8_27
   Larraz D, 2013, 2013 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P218
   Leike J, 2018, LECT NOTES COMPUT SC, V10806, P266, DOI 10.1007/978-3-319-89963-3_16
   Leike Jan, 2014, LNCS, V8413, P172
   Leroux M, 2005, LECT NOTES COMPUT SC, V3707, P489
   Li Y, 2017, THEOR COMPUT SCI, V681, P75, DOI 10.1016/j.tcs.2017.03.036
   Li Y, 2016, 2016 10TH INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P30, DOI 10.1109/TASE.2016.8
   Ouaknine Joel, 2015, ACM SIGLOG News, V2, P4
   Podelski A, 2004, LECT NOTES COMPUT SC, V2937, P239
   Schrijver A., 1998, THEORY LINEAR INTEGE
   Turing AM, 1937, P LOND MATH SOC, V42, P230, DOI 10.1112/plms/s2-42.1.230
   Yi Li, 2017, Dependable Software Engineering. Theories, Tools, and Applications. Third International Symposium, SETTA 2017. Proceedings: LNCS 10606, P131, DOI 10.1007/978-3-319-69483-2_8
NR 27
TC 1
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2021
VL 23
IS 1
SI SI
BP 55
EP 67
DI 10.1007/s10009-019-00527-1
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PV6IB
UT WOS:000610088700003
DA 2024-07-18
ER

PT J
AU Ben Mahfoudh, H
   Serugendo, GD
   Naja, N
   Abdennadher, N
AF Ben Mahfoudh, Houssem
   Di Marzo Serugendo, Giovanna
   Naja, Nabil
   Abdennadher, Nabil
TI Learning-based coordination model for spontaneous self-composition of
   reliable services in a distributed system
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Coordination model; Collective adaptive system; On-demand services;
   Multi-agent learning; Reinforcement learning; QLearning
AB Context-aware, pervasive systems, mobile devices, intelligent virtual assistants activating services or controlling connected devices are pervading our everyday life. These systems rely on centralized services provided by servers in a cloud gathering all requests, performing pre-defined computations and involving pre-defined devices. Large-scale scenarios, involving unanticipated devices, adaptation to dynamically changing conditions, call for alternative solutions favoring edge computing and decentralized behavior. For several years, we have worked on a new type of applications, built and spontaneously composed on-demand. Applications arise from the interactions of multiple sensors and devices, working together as a decentralized collective adaptive system. Our solution relies on a learning-based coordination model providing decentralized communication platforms among agents working on behalf of heterogeneous devices. Each device provides few simple services and data regarding itself (properties and capabilities). In this article, we discuss first the design of complex services, arising from the spontaneous self-composition of simpler services. Second, we present our learning-based coordination model combining coordination and reinforcement learning, and how this approach ensures reliable self-composition of services in terms of functionality and expected quality of services. On the basis of a humanitarian scenario, we show the feasibility of the approach and discuss our current implementation. Preliminary results show convergence toward learning and correct functionality. Spontaneous self-composition and learning provide a self-adaptive solution for creating on-demand complex services evolving in highly dynamic scenarios comprising large numbers of connected devices.
C1 [Ben Mahfoudh, Houssem; Di Marzo Serugendo, Giovanna; Naja, Nabil] Univ Geneva, Route Drize 7, CH-1227 Geneva, Switzerland.
   [Abdennadher, Nabil] Univ Appl Sci Western Switzerland, Rue Prairie 4, CH-1202 Geneva, Switzerland.
C3 University of Geneva; University of Applied Sciences & Arts Western
   Switzerland
RP Ben Mahfoudh, H (corresponding author), Univ Geneva, Route Drize 7, CH-1227 Geneva, Switzerland.
EM houssem.benmahfoudh@unige.ch; Giovanna.Dimarzo@unige.ch;
   nabil.naja@unige.ch; Nabil.abdennadher@hesge.ch
RI Di Marzo Serugendo, Giovanna/I-4378-2013
CR [Anonymous], 1989, LEARNING DELAYED REW
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baresi L., 2004, ICSOC 04, P193, DOI DOI 10.1145/1035167.1035195
   Beal J, 2006, IEEE INTELL SYST, V21, P10, DOI 10.1109/MIS.2006.29
   Beckert B., 2013, LECT NOTES COMPUTER, V7542
   Boes Jeremy, 2015, Modeling and Using Content. 9th International and Interdisciplinary Conference (CONTEXT 2015). Proceedings: LNCS 9405, P91, DOI 10.1007/978-3-319-25591-0_7
   Busoniu L, 2008, IEEE T SYST MAN CY C, V38, P156, DOI 10.1109/TSMCC.2007.913919
   Busoniu L, 2010, STUD COMPUT INTELL, V310, P183
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Ciatto Giovanni, 2018, Coordination Models and Languages. 20th IFIP WG 6.1 International Conference, COORDINATION 2018. Held as Part of the 13th International Federated Conference on Distributed Computing Techniques, DisCoTec 2018. Proceedings: LNCS 10852, P51, DOI 10.1007/978-3-319-92408-3_3
   De Angelis F.L., 2014, 29 ANN ACM S APPL CO
   De Angelis F.L., 2014, ADV INTELLIGENT SYST, V296
   Di Marzo Serugendo G., 2017, GLOBAL IOT SUMMIT
   GELERNTER D, 1985, ACM T PROGRAMMING LA
   Gu C., 2011, ADV COMPUTER SCI ENV
   HatziDimitris O., 2010, ARTIFICIAL INTELLIGE
   Kaelbling LP, 1996, J ARTIF INTELL RES, V4, P237, DOI 10.1613/jair.301
   Khadka S., 2018, 32 C NEUR INF PROC S
   Fernandez-Marquez JL, 2013, NAT COMPUT, V12, P43, DOI 10.1007/s11047-012-9324-y
   Mahfoudh H.B., 2018, ISOLA
   Mamei M, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1538942.1538945
   Matthes F., 2017, P SIGDIAL
   Mazac S., 2014, 14 INT C SYNTH SIM L
   Montagna S., 2012, P 13 WORKSH OBJ AG
   Moustafa A., 2018, INT C PRINC PRACT MU
   Nicola Rocco, 2015, Software Engineering for Collective Autonomic Systems. The ASCENS Approach: LNCS 8998, P3, DOI 10.1007/978-3-319-16310-9_1
   Omicini A., 1999, INTERNET RES, P59
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Rabanal P, 2017, COMPUT STAND INTER, V53, P59, DOI 10.1016/j.csi.2017.03.001
   Rao Jinghai., 2004, SURVEY AUTOMATED WEB
   Ren L., 2017, IEEE T SERVICES COMP
   Shi W., 2016, EDGE COMPUTING VISIO
   Sutton R., 1998, Reinforcement Learning: An Introduction
   ter Beek MauriceH., 2007, ICIW, P15
   Thi Nguyen S.N.T., 2018, ARXIV181211794
   Wang H., 2014, LNCS
   Wang HB, 2019, KNOWL-BASED SYST, V180, P75, DOI 10.1016/j.knosys.2019.05.020
   Wang HB, 2016, INFORM SCIENCES, V363, P96, DOI 10.1016/j.ins.2016.05.002
   Wirsing M., 2013, Formal Methods for Components and Objects, P1, DOI [10.1007/978-3-642-35887-6_1, DOI 10.1007/978-3-642-35887-6_1]
   Wirsing M., 2015, LECT NOTES COMPUTER, V8998
   Wu ZX, 2007, ICEIS 2007: PROCEEDINGS OF THE NINTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P453
   Zambonelli F, 2015, PERVASIVE MOB COMPUT, V17, P236, DOI 10.1016/j.pmcj.2014.12.002
NR 42
TC 3
Z9 3
U1 1
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2020
VL 22
IS 4
SI SI
BP 417
EP 436
DI 10.1007/s10009-020-00557-0
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MH4SO
UT WOS:000546721100004
DA 2024-07-18
ER

PT J
AU Cunha, A
   Macedo, N
AF Cunha, Alcino
   Macedo, Nuno
TI Validating the Hybrid ERTMS/ETCS Level 3 concept with Electrum
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal specification; Validation and verification; Railway safety
AB This paper reports on the development of a formal model for the Hybrid ERTMS/ETCS Level 3 concept in Electrum, a lightweight formal specification language that extends Alloy with mutable relations and temporal logic operators. We show how Electrum and its Analyzer can be used to perform scenario exploration to validate this model, namely to check that all the operational scenarios described in the reference document are admissible, and to reason about expected safety properties, which can be easily specified and model checked for arbitrary track configurations. We also show how the Analyzer can be used to depict scenarios (and counter-examples) in a graphical notation that is logic-agnostic, making them understandable by stakeholders without expertise in formal specification.
C1 [Cunha, Alcino; Macedo, Nuno] INESC TEC, Braga, Portugal.
   [Cunha, Alcino; Macedo, Nuno] Univ Minho, Braga, Portugal.
C3 INESC TEC; Universidade do Minho
RP Macedo, N (corresponding author), INESC TEC, Braga, Portugal.; Macedo, N (corresponding author), Univ Minho, Braga, Portugal.
EM nuno.m.macedo@inesctec.pt
RI Macedo, Nuno/A-1539-2013; Cunha, Alcino/I-4104-2015
OI Macedo, Nuno/0000-0002-4817-948X; Cunha, Alcino/0000-0002-2714-8027
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial Jean-Raymond, 2018, LECT NOTES COMPUTER, P322
   [Anonymous], ERTMS US GROUP HYBR
   [Anonymous], ERA UNISIG EEIG ERTM
   [Anonymous], ERTMS US GROUP HYBR
   [Anonymous], INESC TEC ONERA ELEC
   [Anonymous], 2005, B BOOK ASSIGNING PRO
   Arcaini Paolo, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P277, DOI 10.1007/978-3-319-91271-4_19
   Couto R, 2018, ELECTRON P THEOR COM, P37, DOI 10.4204/EPTCS.284.4
   Cunha Alcino, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P307, DOI 10.1007/978-3-319-91271-4_21
   Dghaym Dana, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P338, DOI 10.1007/978-3-319-91271-4_23
   Hansen PS, 2003, PROCEEDINGS OF THE 1ST INTERNATIONAL CONFERENCE ON ADVANCED RESEARCH IN VIRTUAL AND RAPID PROTOTYPING, P292
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Macedo N, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P373, DOI 10.1145/2950290.2950318
   Mammar Amel, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P353, DOI 10.1007/978-3-319-91271-4_24
   Mammar A, 2016, LECT NOTES COMPUT SC, V9952, P325, DOI 10.1007/978-3-319-47166-2_23
   Mendes Moreira Joao, 2015, F1000Res, V4, P181, DOI 10.12688/f1000research.6499.1
   Snook C, 2006, ACM T SOFTW ENG METH, V15, P92, DOI 10.1145/1125808.1125811
   Snook C, 2014, P ROD WORKSH 2014 TO, P29
   Thai Son Hoang, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P251, DOI 10.1007/978-3-319-91271-4_17
   Tueno Fotso Steve Jeffrey, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P262, DOI 10.1007/978-3-319-91271-4_18
NR 24
TC 7
Z9 7
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2020
VL 22
IS 3
SI SI
BP 281
EP 296
DI 10.1007/s10009-019-00540-4
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE0ZY
UT WOS:000526454200004
DA 2024-07-18
ER

PT J
AU Ulyantsev, V
   Buzhinsky, I
   Shalyto, A
AF Ulyantsev, Vladimir
   Buzhinsky, Igor
   Shalyto, Anatoly
TI Exact finite-state machine identification from scenarios and temporal
   properties
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Finite-state machine identification; Linear temporal logic; Model
   checking; SAT; QSAT
AB Finite-state models, such as finite-state machines (FSMs), aid software engineering in many ways. They are often used in formal verification and also can serve as visual software models. The latter application is associated with the problems of software synthesis and automatic derivation of software models from specification. Smaller synthesized models are more general and are easier to comprehend, yet the problem of minimum FSM identification has received little attention in previous research. This paper presents four exact methods to tackle the problem of minimum FSM identification from a set of test scenarios and a temporal specification represented in linear temporal logic. The methods are implemented as an open-source tool. Three of them are based on translations of the FSM identification problem to SAT or QSAT problem instances. Accounting for temporal properties is done via counterexample prohibition. Counterexamples are either obtained from previously identified FSMs, or based on bounded model checking. The fourth method uses backtracking. The proposed methods are evaluated on several case studies and on a larger number of randomly generated instances of increasing complexity. The results show that the Iterative SAT-based method is the leader among the proposed methods. The methods are also compared with existing inexact approaches, i.e., the ones which do not necessarily identify the minimum FSM, and these comparisons show encouraging results.
C1 [Ulyantsev, Vladimir; Buzhinsky, Igor; Shalyto, Anatoly] ITMO Univ, Comp Technol Lab, St Petersburg, Russia.
   [Buzhinsky, Igor] Aalto Univ, Dept Elect Engn & Automat, Espoo, Finland.
C3 ITMO University; Aalto University
RP Buzhinsky, I (corresponding author), ITMO Univ, Comp Technol Lab, St Petersburg, Russia.; Buzhinsky, I (corresponding author), Aalto Univ, Dept Elect Engn & Automat, Espoo, Finland.
EM ulyantsev@rain.ifmo.ru; igor_buzhinsky@corp.ifmo.ru;
   shalyto@mail.ifmo.ru
RI Ulyantsev, Vladimir/AAV-2126-2020; Shalyto, Anatoly/Q-2046-2015;
   Buzhinsky, Igor/J-9516-2015
OI Ulyantsev, Vladimir/0000-0003-0802-830X; Buzhinsky,
   Igor/0000-0003-3713-6051; Shalyto, Anatoly/0000-0002-2723-2077
FU Government of Russian Federation [074-U01]; Russian Foundation for Basic
   Research (RFBR) [14-07-31337 mol_a]
FX This work was financially supported by the Government of Russian
   Federation, Grant 074-U01, and also partially supported by the Russian
   Foundation for Basic Research (RFBR), research project No. 14-07-31337
   mol_a. We also thank Maxim Buzdalov, Daniil Chivilikhin and the
   anonymous reviewers for their useful comments.
CR Alur Rajeev, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P75, DOI 10.1007/978-3-319-13338-6_7
   Amla N, 2005, LECT NOTES COMPUT SC, V3725, P254
   [Anonymous], 2004, ANT COLONY OPTIMIZAT
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Biere A, 2003, ADV COMPUT, V58, P117
   Bodik Rastislav, 2013, International Journal on Software Tools for Technology Transfer, V15, P397, DOI 10.1007/s10009-013-0287-9
   Broy M., 2005, Lecture Notes in Computer Science, V3472
   Cheng CH, 2014, LECT NOTES COMPUT SC, V8559, P541, DOI 10.1007/978-3-319-08867-9_36
   Chivilikhin D, 2014, 2014 13TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P350, DOI 10.1109/ICMLA.2014.62
   Chivilikhin D, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P511
   Chongstitvatana P., 1999, Proceedings of the First NASA/DoD Workshop on Evolvable Hardware, P262, DOI 10.1109/EH.1999.785463
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Clarke EM, 1999, MODEL CHECKING, P1
   Duret-Lutz Alexandre, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P442, DOI 10.1007/978-3-319-02444-8_31
   Een N., 2003, ELECT NOTES THEORETI, V89, P543, DOI 10.1016/s1571-0661(05)82542-3
   Ehlers R, 2012, FORM METHOD SYST DES, V40, P232, DOI 10.1007/s10703-011-0137-x
   Ehlers R, 2011, LECT NOTES COMPUT SC, V6605, P272, DOI 10.1007/978-3-642-19835-9_25
   Filiot E, 2009, LECT NOTES COMPUT SC, V5643, P263, DOI 10.1007/978-3-642-02658-4_22
   Finkbeiner Bernd, 2013, International Journal on Software Tools for Technology Transfer, V15, P519, DOI 10.1007/s10009-012-0228-z
   Finkbeiner B, 2012, LECT NOTES COMPUT SC, V7148, P219, DOI 10.1007/978-3-642-27940-9_15
   GOLD EM, 1978, INFORM CONTROL, V37, P302, DOI 10.1016/S0019-9958(78)90562-4
   Heule MJH, 2013, EMPIR SOFTW ENG, V18, P825, DOI 10.1007/s10664-012-9222-z
   Heule MJH, 2010, LECT NOTES ARTIF INT, V6339, P66, DOI 10.1007/978-3-642-15488-1_7
   Holldobler S., 2013, P 12 INT WORKSH CONS, P16
   Jackson PB, 2007, ELECTRON NOTES THEOR, V174, P17, DOI 10.1016/j.entcs.2006.12.020
   JOBSTMANN B, 2006, FMCAD, P117, DOI DOI 10.1109/FMCAD.2006.22
   Lang K. J., 1998, Grammatical Inference. 4th International Colloquium, ICGI-98. Proceedings, P1, DOI 10.1007/BFb0054059
   Lo D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P345, DOI 10.1145/1595696.1595761
   Lonsing F., 2015, LECT NOTES COMPUTER
   Mitchell M., 1998, INTRO GENETIC ALGORI
   Ohmann T., 2014, P IEEE ACM INT C AUT, P19, DOI [10.1145/2642937.2642988, DOI 10.1145/2642937.2642988, 10.1145/2642937, DOI 10.1145/2642937]
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Rosner R., 1992, THESIS
   Tsarev Fedor, 2011, P 13 ANN C COMP GEN, P759, DOI DOI 10.1145/2001858
   Ulyantsev Vladimir, 2015, Language and Automata Theory and Applications. 9th International Conference, LATA 2015. Proceedings: LNCS 8977, P611, DOI 10.1007/978-3-319-15579-1_48
   Ulyantsev V., 2012, P 14 IFAC S INF CONT, P512
   Vyatkin V., 2012, IEC 61499 FUNCTION B
   Walkinshaw Neil, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P248, DOI 10.1109/ASE.2008.35
   Walkinshaw N, 2016, EMPIR SOFTW ENG, V21, P811, DOI 10.1007/s10664-015-9367-7
NR 39
TC 16
Z9 16
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2018
VL 20
IS 1
BP 35
EP 55
DI 10.1007/s10009-016-0442-1
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT7PX
UT WOS:000423346100003
DA 2024-07-18
ER

PT J
AU Furia, CA
   Nordio, M
   Polikarpova, N
   Tschannen, J
AF Furia, Carlo A.
   Nordio, Martin
   Polikarpova, Nadia
   Tschannen, Julian
TI AutoProof: auto-active functional verification of object-oriented
   programs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Functional verification; Auto-activeverification; Object-oriented
   verification; Verification benchmarks
ID SPECIFICATION; CHECKING
AB Auto-active verifiers provide a level of automation intermediate between fully automatic and interactive: users supply code with annotations as input while benefiting from a high level of automation in the back-end. This paper presents AutoProof, a state-of-the-art auto-active verifier for object-oriented sequential programs with complex functional specifications. AutoProof fully supports advanced object-oriented features and a powerful methodology for framing and class invariants, which make it applicable in practice to idiomatic object-oriented patterns. The paper focuses on describing AutoProof 's interface, design, and implementation features, and demonstrates AutoProof 's performance on a rich collection of benchmark problems. The results attest AutoProof 's competitiveness among tools in its league on cutting-edge functional verification of object-oriented programs.
C1 [Furia, Carlo A.] Chalmers Univ Technol, Gothenburg, Sweden.
   [Nordio, Martin; Tschannen, Julian] Swiss Fed Inst Technol, Chair Software Engn, Zurich, Switzerland.
   [Polikarpova, Nadia] MIT CSAIL, Cambridge, MA 02139 USA.
C3 Chalmers University of Technology; Swiss Federal Institutes of
   Technology Domain; ETH Zurich; Massachusetts Institute of Technology
   (MIT)
RP Polikarpova, N (corresponding author), MIT CSAIL, Cambridge, MA 02139 USA.
EM polikarn@csail.mit.edu
CR Ahrendt W., 2014, LECT NOTES COMPUTER
   [Anonymous], 2009, P IWACO
   [Anonymous], 2015, EIFFELBASE2 FULLY VE
   Barnett M., 2004, MATH PROGRAM CONSTRU
   Barnett M, 2011, COMMUN ACM, V54, P81, DOI 10.1145/1953122.1953145
   Beckert B., 2014, LECT NOTES COMPUTER, V8901
   Beckert Bernhard., 2007, LNCS, V4334
   Bormer T., 2011, LNCS, V7421
   Chalin P., 2006, FMCO
   Chimento J. M., 2015, LECT NOTES COMPUTER, V9333
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   COHEN E, 2009, LNCS, V5674
   Cok D., 2011, NASA FORMAL METHODS, V6617
   Dafny, 2010, LNCS, V6355
   Darvas A, 2008, IET SOFTW, V2, P477, DOI 10.1049/iet-sen:20080011
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Ernst G, 2015, INT J SOFTW TOOLS TE, V17, P677, DOI 10.1007/s10009-014-0308-3
   Filliatre J.-C., 2007, LNCS, V4590
   Filliatre J. C., 2013, ESOP, V7792
   Filliatre J.- C., 2012, CEUR WORKSHOP P, V873
   Furia CA, 2015, ELECTRON P THEOR COM, P42, DOI 10.4204/EPTCS.187.4
   GAMMA E, 1995, DESIGN PATTERNS
   Huisman M., 2012, VERIFYTHIS VERIFICAT
   Huisman M., 2015, VERIFYTHIS VERIFICAT
   Jacobs B., 2010, LNCS, V6461
   Jacobs B., 2010, VS TOOLS WORKSH VSTT
   Kassios Ioannis T., 2006, FM
   Kiniry J. R., 2007, LNCS, V4661
   Klebanov V., 2011, LNCS, V6664
   Leavens GT, 2007, FORM ASP COMPUT, V19, P159, DOI 10.1007/s00165-007-0026-7
   Leavens GT, 2005, SCI COMPUT PROGRAM, V55, P185, DOI 10.1016/j.scico.2004.05.015
   Leino K. R. M., 2008, THIS IS BOOGIE 2, V2
   Leino K. R. M., 2004, LECT NOTES COMPUTER, V3086
   Leino K.R.M., 2010, US VER WORKSH
   Leino KRM, 2002, ACM SIGPLAN NOTICES, V37, P246, DOI 10.1145/543552.512559
   LEINO KRM, 2004, ECOOP
   Logozzo F., 2012, LNCS, V7152
   Pek E., 2014, P 35 ACM SIGPLAN C P, P46
   Polikarpova N., 2015, LNCS
   Polikarpova N., 2014, LNCS, V8442
   Polikarpova N., 2010, LNCS, V6217
   Suter P., 2011, LNCS, V6887
   Tschannen Julian, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P566, DOI 10.1007/978-3-662-46681-0_53
   Tschannen J., 2011, LNCS, V7041
   Tschannen J., 2014, VSTTE 2013, V8164
   Tschannen J., 2012, LNCS, V7682
   Tschannen J, 2015, INT J SOFTW TOOLS TE, V17, P745, DOI 10.1007/s10009-014-0300-y
   Weide BW, 2008, LECT NOTES COMPUT SC, V5295, P84, DOI 10.1007/978-3-540-87873-5_10
   West S., 2015, P 10 JOINT M EUR SOF
NR 49
TC 12
Z9 12
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2017
VL 19
IS 6
BP 697
EP 716
DI 10.1007/s10009-016-0419-0
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ4TL
UT WOS:000412735100004
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Aichernig, BK
   Hörmaier, K
   Lorber, F
   Nickovic, D
   Tiran, S
AF Aichernig, Bernhard K.
   Hoermaier, Klaus
   Lorber, Florian
   Nickovic, Dejan
   Tiran, Stefan
TI Require, test, and trace IT
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model-based testing; Test-case generation; Requirements engineering;
   Traceability; Requirement interfaces; Formal specification; Synchronous
   systems; Consistency checking; Incremental test-case generation;
   Model-based mutation testing
ID TEST-CASE GENERATION; CONFORMANCE; LANGUAGE; SIMULINK; DESIGN
AB We propose a framework for requirement-driven test generation that combines contract-based interface theories with model-based testing. We design a specification language, requirement interfaces, for formalizing different views (aspects) of synchronous data-flow systems from informal requirements. Various views of a system, modeled as requirement interfaces, are naturally combined by conjunction. We develop an incremental test generation procedure with several advantages. The test generation is driven by a single requirement interface at a time. It follows that each test assesses a specific aspect or feature of the system, specified by its associated requirement interface. Since we do not explicitly compute the conjunction of all requirement interfaces of the system, we avoid state space explosion while generating tests. However, we incrementally complete a test for a specific feature with the constraints defined by other requirement interfaces. This allows catching violations of any other requirement during test execution, and not only of the one used to generate the test. This framework defines a natural association between informal requirements, their formal specifications, and the generated tests, thus facilitating traceability. Finally, we introduce a fault-based test-case generation technique, called model-based mutation testing, to requirement interfaces. It generates a test suite that covers a set of fault models, guaranteeing the detection of any corresponding faults in deterministic systems under test. We implemented a prototype test generation tool and demonstrate its applicability in two industrial use cases.
C1 [Aichernig, Bernhard K.; Lorber, Florian; Tiran, Stefan] Graz Univ Technol, Graz, Austria.
   [Hoermaier, Klaus] Infineon Technol Austria AG, Villach, Austria.
   [Nickovic, Dejan] AIT, Seibersdorf, Austria.
C3 Graz University of Technology; Infineon Technologies; Austrian Institute
   of Technology (AIT)
RP Lorber, F (corresponding author), Graz Univ Technol, Graz, Austria.
EM aichernig@ist.tugraz.at; Klaus.Hoermaier@infineon.com;
   florber@ist.tugraz.at; Dejan.Nickovic@ait.ac.at; stiran@ist.tugraz.at
OI Lorber, Florian/0009-0006-2387-2778; Nickovic,
   Dejan/0000-0001-5468-0396; Aichernig, Bernhard/0000-0002-3484-5584
FU Graz University of Technology
FX Open access funding provided by Graz University of Technology.
CR Aichernig Bernhard K., 2015, Formal Methods for Industrial Critical Systems. 20th International Workshop, FMICS 2015. Proceedings: LNCS 9128, P113, DOI 10.1007/978-3-319-19458-5_8
   Aichernig Bernhard K., 2013, Tests and Proofs. 7th International Conference, TAP 2013. Proceedings: LNCS 7942, P20, DOI 10.1007/978-3-642-38916-0_2
   Aichernig B. K., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P120, DOI 10.1109/ICST.2011.57
   Aichernig B.K., 2011, SIGSOFT Softw. Eng. Notes, V36, P1, DOI DOI 10.1145/1921532.1921559
   Aichernig BK, 2015, SOFTW TEST VERIF REL, V25, P716, DOI 10.1002/stvr.1522
   Aichernig BK, 2014, INT CONF QUAL SOFTW, P117, DOI 10.1109/QSIC.2014.13
   Aiguier M, 2012, THEOR COMPUT SCI, V455, P66, DOI 10.1016/j.tcs.2011.12.072
   Ammann PE, 1998, SECOND INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P46, DOI 10.1109/ICFEM.1998.730569
   [Anonymous], 2009, 262621 ISODIS TECHN
   [Anonymous], P 2 WORKSH MUT AN MU
   Belli F, 2012, IEICE T INF SYST, VE95D, P2211, DOI 10.1587/transinf.E95.D.2211
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   Benveniste A., 2002, Proceedings of the IEEE, chapter The synchronous approach to reactive and real-time systems, P147
   Benveniste A, 1993, REX SCH S, P1
   Benveniste A, 2008, LECT NOTES COMPUT SC, V5382, P200, DOI 10.1007/978-3-540-92188-2_9
   Benveniste Albert., 2012, Research Report RR-8147, P65
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Berry G, 2007, NEXT GENERATION DESIGN AND VERIFICATION METHODOLOGIES FOR DISTRIBUTED EMBEDDED CONTROL SYSTEMS, P19, DOI 10.1007/978-1-4020-6254-4_2
   Brillout A, 2010, LECT NOTES COMPUT SC, V6286, P208
   BUDD TA, 1985, COMPUT LANG, V10, P63, DOI 10.1016/0096-0551(85)90011-6
   Caspi P., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P178, DOI 10.1145/41625.41641
   Chakrabarti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P414
   Daca P., 2014, TECHNICAL REPORT
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Doyen L., 2008, Proc. ACM IEEE Int. Conf. Embedded Software, P79, DOI DOI 10.1145/1450058.1450070
   du Bousquet L., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P267, DOI 10.1109/ICSE.1999.841017
   Ellen Christian, 2014, Formal Methods for Industrial Critical Systems. 19th International Conference, FMICS 2014. Proceedings: LNCS 8718, P155, DOI 10.1007/978-3-319-10702-8_11
   GAUTIER T, 1987, LECT NOTES COMPUT SC, V274, P257
   HAMON G, 2005, AUTOMATED TEST GENER
   He NN, 2011, DES AUT CON, P224
   Henzinger Thomas A., 2012, Large-Scale Complex IT Systems. Development, Operation and Management. 17th Monterey Workshop 2012. Revised Selected Papers, P380, DOI 10.1007/978-3-642-34059-8_20
   Hierons RM, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P141, DOI 10.1109/TAIC.PART.2007.20
   Huber F, 1996, LECT NOTES COMPUT SC, V1135, P467
   Jeannet B., 2016, 8 EUR C EMB REAL TIM
   Junker U, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P167
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Krichen M, 2009, FORM METHOD SYST DES, V34, P238, DOI 10.1007/s10703-009-0065-1
   Marre B, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P229, DOI 10.1109/ASE.2000.873667
   Papailiopoulou Virginia, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P517, DOI 10.1109/ASE.2008.96
   Raymond P, 1998, REAL TIM SYST SYMP P, P200, DOI 10.1109/REAL.1998.739746
   Reineke J., 2014, UCBEECS20144
   Sampaio A, 2009, LECT NOTES COMPUT SC, V5885, P20, DOI 10.1007/978-3-642-10373-5_2
   Spivey J.M., 1992, PRENTICE HALL INT SE
   Stocks PA, 1993, THESIS
   Teehan P, 2007, IEEE DES TEST COMPUT, V24, P418, DOI 10.1109/MDT.2007.151
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   van der Bijl M, 2004, LECT NOTES COMPUT SC, V2931, P86
   Wakankar A., 2010, 2010 2nd International Conference on Reliability, Safety and Hazard - Risk-Based Technologies and Physics-of-Failure Methods (ICRESH 2010), P493, DOI 10.1109/ICRESH.2010.5779600
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 49
TC 5
Z9 6
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2017
VL 19
IS 4
BP 409
EP 426
DI 10.1007/s10009-016-0444-z
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ5UW
UT WOS:000404785500003
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Zech, P
   Kalb, P
   Felderer, M
   Atkinson, C
   Breu, R
AF Zech, Philipp
   Kalb, Philipp
   Felderer, Michael
   Atkinson, Colin
   Breu, Ruth
TI Model-based regression testing by OCL
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model-based testing; Regression testing; Model-based regression testing;
   Model evolution; Software testing; Software evolution
ID SELECTION; PRIORITIZATION; REDUCTION
AB Model-based testing has gained widespread acceptance over the last decade, not only in academia but also in industry. Despite its powerful features of abstraction and automation, most existing approaches and tools provide only limited support for regression testing. Yet regression testing, the repeated execution of selected test cases after system modification, is vital, because changes may introduce new bugs or unwanted side effects that must be avoided at all costs. Model-based testing's potential for supporting regression testing has yet to be explored, even though syntactic and semantic abstractions within software models already allow identifying changes in software systems. This change information can easily be used for test case selection. In this article, we present a model-based regression testing method based on OCL. By means of a running example using the UML Testing Profile we show how our method supports regression testing on the basis of an existing model-based testing method.
C1 [Zech, Philipp; Kalb, Philipp; Felderer, Michael; Breu, Ruth] Univ Innsbruck, Innsbruck, Austria.
   [Atkinson, Colin] Univ Mannheim, Mannheim, Germany.
C3 University of Innsbruck; University of Mannheim
RP Felderer, M (corresponding author), Univ Innsbruck, Innsbruck, Austria.
EM Michael.Felderer@uibk.ac.at
RI Felderer, Michael/AAF-4909-2020
OI Zech, Philipp/0000-0002-4952-4337; Atkinson, Colin/0000-0002-3164-5595;
   Zech, Philipp/0000-0001-9542-6319
FU MBOSTECO [FWFP 26194-N15]; QE LaB-Living Models for Open Systems [FFG
   822740]; Austrian Science Fund (FWF) [P26194] Funding Source: Austrian
   Science Fund (FWF)
FX This research was partially funded by the research projects MBOSTECO
   (FWFP 26194-N15) and QE LaB-Living Models for Open Systems (FFG 822740).
CR [Anonymous], 2009, ANSWER SET PROGRAMMI
   [Anonymous], P VLL 2007 WORKSH VI
   [Anonymous], 2009, 2009 42 HAW INT C SY
   [Anonymous], 2004, GUIDE SOFTWARE ENG B
   [Anonymous], MICROTOOL STEP PROJE
   [Anonymous], 3 IEEE INT C GLOB SO
   [Anonymous], C CTR ADV STUD COLL
   [Anonymous], EMF COMP DEV
   [Anonymous], TEST TEST CONTR NOT
   [Anonymous], OBJ CONSTR LANG V2 3
   [Anonymous], 2011, P 10 IASTED INT C SO
   [Anonymous], ECL CDO
   [Anonymous], MAG DRAW
   Atkinson Colin, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P454, DOI 10.1109/ICSTW.2010.21
   Bergmann G, 2011, LECT NOTES COMPUT SC, V6698, P389, DOI 10.1007/978-3-642-21470-7_32
   Breu M., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P290, DOI 10.1109/ICSEA.2010.51
   Breu R., 2011, INT J SOFTWARE INFOR, V5, P267
   Breu R, 2010, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON COMPLEX, INTELLIGENT AND SOFTWARE INTENSIVE SYSTEMS (CISIS 2010), P1, DOI 10.1109/CISIS.2010.73
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P16, DOI 10.1016/j.infsof.2008.09.010
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P347, DOI 10.1016/S0950-5849(98)00050-0
   Chen Yanping., 2007, 3rd international workshop on Advances in model-based testing, P54, DOI 10.1145/1291535.1291541
   Chimia-Opoka Joanna, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P81, DOI 10.1109/ICSTW.2008.33
   Dias Neto A. C., 2007, P ACM INT WORKSH EMP, P31
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Farooq Qurat-ul-ann, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P41, DOI 10.1109/ECBS.2010.12
   Felderer M, 2016, SOFTW TEST VERIF REL, V26, P119, DOI 10.1002/stvr.1580
   Felderer M, 2015, INT J SOFTW TOOLS TE, V17, P305, DOI 10.1007/s10009-015-0365-2
   Felderer M, 2011, LECT NOTES COMPUT SC, V6542, P181, DOI 10.1007/978-3-642-19125-1_14
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fraser G, 2007, ELECTRON NOTES THEOR, V190, P33, DOI 10.1016/j.entcs.2007.08.004
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Heimdahl MPE, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/ASE.2004.1342735
   Iqbal MuhammadZohaib Z., 2007, Proceedings of the 3rd international workshop on Advances in model-based testing, P44
   Jeffrey D, 2005, PROC IEEE INT CONF S, P549
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Korel B, 2002, PROC IEEE INT CONF S, P214, DOI 10.1109/ICSM.2002.1167768
   Marchesi M, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P67, DOI 10.1109/CSMR.1998.665739
   Massol V., 2003, JUNIT IN ACTION
   OMG, 2005, UML TEST PROF VERS 1
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P358, DOI 10.1109/ICSM.1993.366926
   Thapa V, 2010, IEEE INT C ENG COMP, P193, DOI [10.1109/ICECCS.2010.28, 10.1109/ICECCS.2010.10]
   Utting M., 2007, PRACTICAL MODEL BASE
   Wenjun Deng, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P205, DOI 10.1109/CSSE.2008.1091
   Windmuller S., 2013, P 16 INT ACM SIGS S, P111, DOI [10.1145/2465449.2465469, DOI 10.1145/2465449.2465469]
   Yang Q., 2006, P 2006 INT WORKSH AU, P99, DOI [10.1145/1138929.1138949, DOI 10.1145/1138929.1138949]
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zech Philipp, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P112, DOI 10.1007/978-3-642-34026-0_9
NR 49
TC 8
Z9 8
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2017
VL 19
IS 1
BP 115
EP 131
DI 10.1007/s10009-015-0408-8
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ1AC
UT WOS:000392941500007
DA 2024-07-18
ER

PT J
AU Gibson-Robinson, T
   Armstrong, P
   Boulgakov, A
   Roscoe, AW
AF Gibson-Robinson, Thomas
   Armstrong, Philip
   Boulgakov, Alexandre
   Roscoe, A. W.
TI FDR3: a parallel refinement checker for CSP
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE CSP; FDR; Model-checking; Process algebras; Refinement
ID MODEL
AB Failures divergence refinement 3 (FDR3) is a complete rewrite of the CSP refinement checker FDR2 that incorporates a significant number of enhancements. In this paper, we describe the operation of FDR3 at a high level and give a detailed description of several of the more important innovations. FDR3 has a new parallel refinement-checking algorithm that is able to achieve a near linear speedup as the number of cores increases. This algorithm scales linearly not only on shared-memory systems, but also on distributed systems (i.e. clusters). In particular, this paper presents experimental results that show FDR3 can achieve a speedup factor in excess of 1000 versus the sequential case on a cluster of 64, 16-core machines (i.e. 1024 cores): we obtain similar performance improvements on a supercomputer and, more interestingly, on a commodity cloud computing provider. We also present experimental results that compare FDR3 to related tools, and indicate that (as far as we know) FDR3 is unique in being able to scale beyond the bounds of main memory. This paper also describes the new algorithm that FDR3 uses to construct its internal representation of CSP processes, one of the key problems to solve in order to efficiently model-check process algebras.
C1 [Gibson-Robinson, Thomas; Armstrong, Philip; Boulgakov, Alexandre; Roscoe, A. W.] Univ Oxford, Dept Comp Sci, Wolfson Bldg,Parks Rd, Oxford OX1 3QD, England.
C3 University of Oxford
RP Gibson-Robinson, T (corresponding author), Univ Oxford, Dept Comp Sci, Wolfson Bldg,Parks Rd, Oxford OX1 3QD, England.
EM thomas.gibson-robinson@cs.ox.ac.uk; philip.armstrong@cs.ox.ac.uk;
   alexandre.boulgakov@cs.ox.ac.uk; bill.roscoe@cs.ox.ac.uk
FU EPSRC [EP/E035590/1] Funding Source: UKRI
CR [Anonymous], P 22 ACM S PAR ALG A
   [Anonymous], LNCS
   [Anonymous], LNCS
   [Anonymous], IFM 99
   [Anonymous], LNCS
   [Anonymous], P 13 ACM SIGACT SIGP
   [Anonymous], MODEL CHECKING CSP C
   [Anonymous], 1997, The Theory and Practice of Concurrency
   [Anonymous], LNCS
   [Anonymous], SOFTW TOOLS TECHNOL
   [Anonymous], P AVOCS 2007
   [Anonymous], P WORKSH PAR DISTR M
   [Anonymous], 2005, P NATL C ARTIFICIAL
   [Anonymous], LNCS
   [Anonymous], P HOWARD FESTSCHR HO
   [Anonymous], LNCS
   [Anonymous], COMMUNICATING PROCES
   [Anonymous], LIBCSPM
   [Anonymous], LNCS
   [Anonymous], PRG28 OUCL
   [Anonymous], FAIL DIV REF FDR 2 U
   [Anonymous], LNCS
   [Anonymous], TACAS
   [Anonymous], NASA FORMAL METHODS
   [Anonymous], THESIS
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Barnat J, 2009, IEEE INT CONF AUTOM, P635, DOI 10.1109/ASE.2009.32
   Hoare CAR., 1985, Communicating Sequential Processes
   Laarman Alfons., 2010, FORMAL METHODS COMPU
   Lowe G., 1998, Journal of Computer Security, V6, P53
   Mota A, 2001, SCI COMPUT PROGRAM, V40, P59, DOI 10.1016/S0167-6423(00)00023-X
   REED GM, 1988, THEOR COMPUT SCI, V58, P249, DOI 10.1016/0304-3975(88)90030-8
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Verstoep K., 2009, IPDPS, P1
NR 35
TC 22
Z9 23
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2016
VL 18
IS 2
BP 149
EP 167
DI 10.1007/s10009-015-0377-y
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK5QQ
UT WOS:000374975200003
DA 2024-07-18
ER

PT J
AU Ferreira, JF
   Gherghina, C
   He, GH
   Qin, SC
   Chin, WN
AF Ferreira, Joao F.
   Gherghina, Cristian
   He, Guanhua
   Qin, Shengchao
   Chin, Wei-Ngan
TI Automated verification of the FreeRTOS scheduler in HIP/SLEEK
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE FreeRTOS; Separation logic; Automated verification; Operating systems;
   Embedded systems; Task scheduler; HIP/SLEEK
AB Automated verification of operating system kernels is a challenging problem, partly due to the use of shared mutable data structures. In this paper, we show how we can automatically verify memory safety and functional correctness properties of the task scheduler component of the FreeRTOS kernel using the verification system Hip/Sleek. We show how some of Hip/Sleek features such as user-defined predicates and lemmasmake the specifications highly expressive and the verification process viable. To the best of our knowledge, this is the first code-level verification of memory safety and functional correctness properties of the FreeRTOS scheduler. The outcome of our experiment confirms that Hip/Sleek can indeed be used to verify code that is used in production. Moreover, since the properties that we verify are quite general, we envisage that the same approach can be adopted to verify components of other operating systems.
C1 [Ferreira, Joao F.; He, Guanhua; Qin, Shengchao] Univ Teesside, Sch Comp, Middlesbrough, Cleveland, England.
   [Ferreira, Joao F.] Univ Minho, HASLab INESC TEC, Braga, Portugal.
   [Gherghina, Cristian] Singapore Univ Technol & Design, Singapore, Singapore.
   [Qin, Shengchao] Shenzhen Univ, Shenzhen, Peoples R China.
   [Chin, Wei-Ngan] Natl Univ Singapore, Singapore 117548, Singapore.
C3 University of Teesside; INESC TEC; Universidade do Minho; Singapore
   University of Technology & Design; Shenzhen University; National
   University of Singapore
RP Qin, SC (corresponding author), Shenzhen Univ, Shenzhen, Peoples R China.
EM s.qin@tees.ac.uk
RI Qin, Shengchao/F-4823-2012
OI Qin, Shengchao/0000-0003-3028-8191; Ferreira, Joao/0000-0002-6612-9013
FU EPSRC [EP/G042322/2] Funding Source: UKRI
CR [Anonymous], 2019, LCP ISABELLE 2019
   [Anonymous], 2002, LICS
   Ball T., 2006, EUROSYS
   Baumann C., 2009, SAFECOMP
   Berdine J., 2005, FMCO
   Blanchet B, 2003, PLDI
   Calcagno C, 2011, J ACM, V58, DOI 10.1145/2049697.2049700
   Chin W.N., 2011, CAV
   Chin WN, 2012, SCI COMPUT PROGRAM, V77, P1006, DOI 10.1016/j.scico.2010.07.004
   Cook B., 2011, CAV
   Distefano D, 2006, LECT NOTES COMPUT SC, V3920, P287
   HENZINGER TA, 2004, POPL
   Hoare T, 2003, J ACM, V50, P63, DOI 10.1145/602382.602403
   Jacobs Bart., 2010, APLAS
   Jones C, 2006, COMPUTER, V39, P93, DOI 10.1109/MC.2006.145
   Klarlund Nils, 2001, Mona Version 1.4: User Manual
   Klein G, 2009, SADHANA-ACAD P ENG S, V34, P27, DOI 10.1007/s12046-009-0002-4
   Klein Gerwin., 2009, SOSP
   Lee O., 2011, CAV
   Lee O, 2012, FORM METHOD SYST DES, V41, P4, DOI 10.1007/s10703-012-0151-7
   Magill S., 2008, CAV
   Muhlberg J.T., 2011, AVOCS
   NGUYEN HH, 2007, VMCAI
   Qin S., 2010, ICFEM
   Qin S., 2011, FM
   Qin SC, 2014, SCI COMPUT PROGRAM, V82, P56, DOI 10.1016/j.scico.2013.03.004
   Qin SC, 2013, J SYMB COMPUT, V50, P386, DOI 10.1016/j.jsc.2012.08.007
   Sagiv Mooly, 1999, POPL
   Sharma A., 2013, SPECIFYING COM UNPUB
   Sputh B.H.C., 2009, CPA
   Woodcock J., 2008, SBMF
   Yang H., 2008, CAV
NR 32
TC 14
Z9 15
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2014
VL 16
IS 4
BP 381
EP 397
DI 10.1007/s10009-014-0307-4
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HT
UT WOS:000209673200004
DA 2024-07-18
ER

PT J
AU Bouajjani, A
   Emmi, M
AF Bouajjani, Ahmed
   Emmi, Michael
TI Bounded phase analysis of message-passing programs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 18th International Conference on Tools and Algorithms for the
   Construction and Analysis of Systems (TACAS)
CY MAR 24-APR 01, 2012
CL Tallinn, ESTONIA
DE Concurrency; Verification; Analysis; Message-passing; Distributed
ID MODEL-CHECKING; REACHABILITY ANALYSIS; SYSTEMS; VERIFICATION
AB We describe a novel technique for bounded analysis of asynchronous message-passing programs with ordered message queues. Our bounding parameter does not limit the number of pending messages, nor the number of "context-switches" between processes. Instead, we limit the number of process communication cycles, in which an unbounded number of messages are sent to an unbounded number of processes across an unbounded number of contexts. We show that remarkably, despite the potential for such vast exploration, our bounding scheme gives rise to a simple and efficient program analysis by reduction to sequential programs. As our reduction avoids explicitly representing message queues, our analysis scales irrespectively of queue content and variation.
C1 [Bouajjani, Ahmed; Emmi, Michael] Univ Paris Diderot, LIAFA, Paris, France.
C3 Universite Paris Cite
RP Emmi, M (corresponding author), Univ Paris Diderot, LIAFA, Paris, France.
EM abou@liafa.univ-paris-diderot.fr; mje@liafa.univ-paris-diderot.fr
CR Abdulla P., 1993, Proceedings of Eighth Annual IEEE Symposium on Logic in Computer Science (Cat. No.93CH3328-2), P160, DOI 10.1109/LICS.1993.287591
   Abdulla PA, 1998, LECT NOTES COMPUT SC, V1427, P305, DOI 10.1007/BFb0028754
   Atig M.F., 2012, LNCS, V7358
   Atig MF, 2008, LECT NOTES COMPUT SC, V5257, P121, DOI 10.1007/978-3-540-85780-8_9
   Barnett M., BOOGIE INTERMEDIATE
   Boigelot B, 1999, FORM METHOD SYST DES, V14, P237, DOI 10.1023/A:1008719024240
   Bouajjani A, 1999, THEOR COMPUT SCI, V221, P211, DOI 10.1016/S0304-3975(99)00033-X
   Bouajjani A, 2008, FORM METHOD SYST DES, V32, P129, DOI 10.1007/s10703-008-0048-7
   Bouajjani A, 2012, LECT NOTES COMPUT SC, V7214, P451, DOI 10.1007/978-3-642-28756-5_31
   Bouajjani A, 2011, LECT NOTES COMPUT SC, V6887, P129, DOI 10.1007/978-3-642-23702-7_13
   BRAND D, 1983, J ACM, V30, P323, DOI 10.1145/322374.322380
   Chaudhuri S, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P159, DOI 10.1145/1328438.1328460
   Dahl R., NODE JS EVENTED I O
   Emmi M., 2012, FSE 12
   Emmi M, 2012, LECT NOTES COMPUT SC, V7460, P439, DOI 10.1007/978-3-642-33125-1_29
   Emmi M, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P411, DOI 10.1145/1926385.1926432
   Esparza J, 2003, INFORM COMPUT, V186, P355, DOI 10.1016/S0890-5401(03)00139-1
   Ganty P, 2012, ACM T PROGR LANG SYS, V34, DOI 10.1145/2160910.2160915
   Ganty P, 2009, ACM SIGPLAN NOTICES, V44, P102, DOI 10.1145/1594834.1480895
   Haller P, 2009, THEOR COMPUT SCI, V410, P202, DOI 10.1016/j.tcs.2008.09.019
   Heussner A, 2010, LECT NOTES COMPUT SC, V6014, P267, DOI 10.1007/978-3-642-12032-9_19
   Jhala R, 2007, CONFERENCE RECORD OF POPL 2007: THE 34TH ACM SIGPLAN SIGACT SYMPOSIUM ON PRINCIPLES OF PROGAMMING LANGUAGES, P339
   Kidd N, 2010, LECT NOTES COMPUT SC, V6349, P245
   La Torre S, 2008, LECT NOTES COMPUT SC, V4963, P299, DOI 10.1007/978-3-540-78800-3_21
   La Torre S, 2007, IEEE S LOG, P161, DOI 10.1109/LICS.2007.9
   La Torre S, 2012, ELECTRON PROC THEOR, P34, DOI 10.4204/EPTCS.87.4
   La Torre S, 2010, LECT NOTES COMPUT SC, V6174, P629, DOI 10.1007/978-3-642-14295-6_54
   La Torre S, 2009, LECT NOTES COMPUT SC, V5643, P477, DOI 10.1007/978-3-642-02658-4_36
   Lal Akash, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P427, DOI 10.1007/978-3-642-31424-7_32
   Lal A, 2009, FORM METHOD SYST DES, V35, P73, DOI 10.1007/s10703-009-0078-9
   Lynch N. A., 1996, DISTRIBUTED ALGORITH
   Miller MS, 2005, LECT NOTES COMPUT SC, V3705, P195, DOI 10.1007/11580850_12
   Parlato G., 2012, LIPICS, V18, P173
   POST EL, 1946, B AM MATH SOC, V52, P264, DOI 10.1090/S0002-9904-1946-08555-9
   Qadeer S, 2005, LECT NOTES COMPUT SC, V3440, P93
   Qadeer S, 2004, ACM SIGPLAN NOTICES, V39, P14, DOI 10.1145/996893.996845
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P300, DOI 10.1007/11817963_29
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   SVENSSON H, 2005, ERLANG 05, P35
   Trottier-Hebert F., LEARN YOU SOME ERLAN
NR 41
TC 8
Z9 10
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2014
VL 16
IS 2
BP 127
EP 146
DI 10.1007/s10009-013-0276-z
PG 20
WC Computer Science, Software Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HR
UT WOS:000209673000002
DA 2024-07-18
ER

PT J
AU Kiviriga, A
   Larsen, KG
   Nyman, U
AF Kiviriga, Andrej
   Larsen, Kim Guldstrand
   Nyman, Ulrik
TI Randomized reachability analysis in UPPAAL: fast error detection in
   timed systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Formal Methods for Industrial Critical
   Systems (FMICS)
CY AUG 24-26, 2021
CL Paris, FRANCE
DE Model-checking; Randomized; State space explosion; Schedulability
   analysis; Timed automata; Stopwatch automata
ID STATISTICAL-MODEL CHECKING; SCHEDULABILITY ANALYSIS
AB Randomized reachability analysis is an efficient method for detection of safety violations. Due to the under-approximate nature of the method, it excels at quick falsification of models and can greatly improve the model-based development process: using lightweight randomized methods early in the development for the discovery of bugs, followed by expensive symbolic verification only at the very end. We show the scalability of our method on a number of timed automata and stopwatch automata models of varying sizes and origin. Among them, we revisit the schedulability problem from the Herschel-Planck industrial case study, where our new method finds the deadline violation three orders of magnitude faster: some cases could previously be analyzed by statistical model checking in 23 h and can now be checked in 23 s. Moreover, a deadline violation is discovered in a number of cases that were previously intractable. We have implemented the Randomized reachability analysis-and made it available-in the tool Uppaal. Finally, we provide an evaluation of the strengths and weaknesses of Random reachability analysis exploring exactly which types of model features hamper method's efficiency.
C1 [Kiviriga, Andrej; Larsen, Kim Guldstrand; Nyman, Ulrik] Aalborg Univ, Dept Comp Sci, DK-9220 Aalborg, Denmark.
C3 Aalborg University
RP Kiviriga, A (corresponding author), Aalborg Univ, Dept Comp Sci, DK-9220 Aalborg, Denmark.
EM kiviriga@cs.aau.dk; kgl@cs.aau.dk; ulrik@cs.aau.dk
RI Nyman, Ulrik/HNJ-5352-2023
OI Nyman, Ulrik/0000-0001-6430-540X; Kiviriga, Andrej/0000-0003-1992-6690;
   Guldstrand Larsen, Kim/0000-0002-5953-3384
FU ERC; Villum Investigator project S4OS: Synthesis of Safe, Small, Secure
   and Optimal Strategies for Cyber-Physical Systems
FX This project is supported by the ERC Advanced Grant Project: LASSO:
   Learning, Analysis, Synthesis and Optimization of Cyber-Physical
   Systems, and by the Villum Investigator project S4OS: Synthesis of Safe,
   Small, Secure and Optimal Strategies for Cyber-Physical Systems.
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], 2000, Proceedings of the 11th International Conference on Concurrency Theory, CONCUR 00
   Barbot B, 2016, LECT NOTES COMPUT SC, V9826, P175, DOI 10.1007/978-3-319-43425-4_13
   BatistaRibeiro L., 2022, CURRENTLY REV UNDERR
   Behrmann G, 2005, LECT NOTES COMPUT SC, V3657, P162
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Boudjadar A, 2016, SCI COMPUT PROGRAM, V127, P103, DOI 10.1016/j.scico.2016.05.008
   Boudjadar A, 2015, SCI COMPUT PROGRAM, V113, P236, DOI 10.1016/j.scico.2015.10.003
   Brekling Aske, 2009, 2009 21st International Conference on Microelectronics (ICM 2009), P149, DOI 10.1109/ICM.2009.5418667
   Burns A, 1995, PREEMPTIVE PRIORITY, P225
   David Alexandre, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P293, DOI 10.1007/978-3-642-34032-1_28
   David A., 2009, MODEL BASED EMBED SY, V1, P93
   David A, 2015, INT J SOFTW TOOLS TE, V17, P351, DOI [10.1007/s10009-014-0361-y, 10.1007/s10009-014-0323-4]
   Fersman E, 2007, INFORM COMPUT, V205, P1149, DOI 10.1016/j.ic.2007.01.009
   Grosu R, 2005, LECT NOTES COMPUT SC, V3440, P271
   Han PJ, 2021, INT J SOFTW TOOLS TE, V23, P721, DOI 10.1007/s10009-020-00597-6
   JOSEPH M, 1986, COMPUT J, V29, P390, DOI 10.1093/comjnl/29.5.390
   Kiviriga Andrej, 2020, Dependable Software Engineering. Theories, Tools, and Applications. 6th International Symposium, SETTA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12153), P70, DOI 10.1007/978-3-030-62822-2_5
   Larsen K, 2017, LECT NOTES COMPUT SC, V10712, P152, DOI 10.1007/978-3-319-72308-2_10
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Martins Gomes R., 2017, FOE TAG FIELD EXPERT
   Mikucionis M, 2010, LECT NOTES COMPUT SC, V6416, P175, DOI 10.1007/978-3-642-16561-0_21
   Onis, URPAL
   Onis, 2018, AUTOMATIC VERIFICATI
   Palm S., 2006, HERSCHEL PLANCK ACC
   Sen K, 2004, LECT NOTES COMPUT SC, V3114, P202
   SoeLuckow K., FLEXIBLE SCHEDULABIL
NR 27
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2022
VL 24
IS 6
SI SI
BP 1025
EP 1042
DI 10.1007/s10009-022-00681-z
EA NOV 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 8H5UG
UT WOS:000884928200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bunte, O
   van Gool, LCM
   Willemse, TAC
AF Bunte, Olav
   van Gool, Louis C. M.
   Willemse, Tim A. C.
TI Formal verification of OIL component specifications using mCRL2
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Domain specific languages; Model checking; Model transformation;
   Verification
ID STATE-SPACE REDUCTION
AB To aid in making software bug-free, several high-tech companies are moving from coding to modelling. In some cases model checking techniques are explored or have already been adopted to get more value from these models. This also holds for Canon Production Printing, where the language OIL was developed for modelling control-software components. In this paper, we present OIL and give its semantics. We define a translation from OIL to mCRL2 to enable the use of model checking techniques. Moreover, we discuss validity requirements on OIL component specifications and show how these can be formalised and verified using model checking. To test the feasibility of these techniques, we apply them to two models of systems used in production.
C1 [Bunte, Olav; Willemse, Tim A. C.] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [van Gool, Louis C. M.] Canon Prod Printing, Venlo, Netherlands.
C3 Eindhoven University of Technology
RP Bunte, O (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM o.bunte@tue.nl; louis.vangool@cpp.canon; t.a.c.willemse@tue.nl
FU Canon Production Printing
FX This work was carried out as part of the VOICE-B project, which is
   funded by Canon Production Printing.
CR Aceto L., 2007, REACTIVE SYSTEMS MOD
   [Anonymous], 2014, P ONW 2014 ACM, DOI DOI 10.1145/2661136.2661149
   Axelsson R, 2007, LOG METH COMPUT SCI, V3, DOI 10.2168/LMCS-3(2:7)2007
   Basile D, 2019, LECT NOTES COMPUT SC, V11687, P1, DOI 10.1007/978-3-030-27008-7_1
   Beek Maurice H., 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P762, DOI 10.1007/978-3-030-30942-8_46
   Berger U, 2018, SCI COMPUT PROGRAM, V154, P61, DOI 10.1016/j.scico.2017.10.011
   Bienmuller T., 2000, LECT NOTES COMPUTER, V1855, P561
   Bouwman M, 2019, LECT NOTES COMPUT SC, V11687, P22, DOI 10.1007/978-3-030-27008-7_2
   Bouwman M, 2021, LECT NOTES COMPUT SC, V12719, P42, DOI 10.1007/978-3-030-78089-0_3
   Bravenboer M, 2008, SCI COMPUT PROGRAM, V72, P52, DOI 10.1016/j.scico.2007.11.003
   Bunte O, 2020, LECT NOTES COMPUT SC, V12327, P231, DOI 10.1007/978-3-030-58298-2_10
   Bunte O, 2019, LECT NOTES COMPUT SC, V11428, P21, DOI 10.1007/978-3-030-17465-1_2
   Clarke E.M., 2001, MODEL CHECKING
   Cordy Maxime, 2019, From Software Engineering to Formal Methods and Tools, and Back: Essays Dedicated to Stefania Gnesi on the Occasion of Her 65th Birthday. Lecture Notes in Computer Science (LNCS 11865), P285, DOI 10.1007/978-3-030-30985-5_18
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   Damm W, 2001, FORM METHOD SYST DES, V19, P121, DOI 10.1023/A:1011279932612
   Denkers J, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P205, DOI 10.1145/3276604.3276608
   Fernandez JC, 2003, SCI COMPUT PROGRAM, V47, P203, DOI 10.1016/S0167-6423(02)00133-8
   Frenken M., 2019, THESIS EINDHOVEN U T
   Groote JF, 2014, MODELING AND ANALYSIS OF COMMUNICATING SYSTEMS, P1
   Groote JF, 2005, THEOR COMPUT SCI, V343, P332, DOI 10.1016/j.tcs.2005.06.016
   Hansen HH, 2010, INNOV SYST SOFTW ENG, V6, P83, DOI 10.1007/s11334-009-0116-1
   Hwong YL, 2013, SCI COMPUT PROGRAM, V78, P2435, DOI 10.1016/j.scico.2012.11.009
   Islam MA, 2019, THEOR COMPUT SCI, V765, P158, DOI 10.1016/j.tcs.2018.02.005
   Jin Hyun Kim, 2015, Formal Methods for Industrial Critical Systems. 20th International Workshop, FMICS 2015. Proceedings: LNCS 9128, P47, DOI 10.1007/978-3-319-19458-5_4
   Kernberger D., 2020, J LOG ALGEBRAIC METH, V110
   Kölbl M, 2018, LECT NOTES COMPUT SC, V11119, P35, DOI 10.1007/978-3-030-00244-2_3
   Latella D., 1999, Formal Aspects of Computing, V11, P637, DOI 10.1007/s001659970003
   Limbree C, 2016, LECT NOTES COMPUT SC, V9707, P134, DOI 10.1007/978-3-319-33951-1_10
   Lynch NA., 1988, INTRO INPUTOUTPUT AU
   Mitsch Stefan, 2017, Reliability, Safety, and Security of Railway Systems. Modelling, Analysis, Verification, and Certification. Second International Conference, RSSRail 2017. Proceedings LNCS 10598, P173, DOI 10.1007/978-3-319-68499-4_12
   Remenska Daniela, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P244, DOI 10.1007/978-3-642-38088-4_17
   Sankaranarayanan Sriram, 2017, ACM SIGBED Review, V14, P24, DOI 10.1145/3076125.3076128
   Schafer T., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00262-2
   Schindler E., 2021, DOMAIN SPECIFIC LANG, P53
   Schrammel Peter, 2015, Formal Methods for Industrial Critical Systems. 20th International Workshop, FMICS 2015. Proceedings: LNCS 9128, P62, DOI 10.1007/978-3-319-19458-5_5
   Shao Jie Zhang, 2010, Proceedings of the 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement Companion (SSIRI-C 2010), P1, DOI 10.1109/SSIRI-C.2010.11
   Silva J, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187674
   ter Beek MH, 2017, LECT NOTES COMPUT SC, V10202, P387, DOI 10.1007/978-3-662-54494-5_23
   Thevenod-Fosse P., 1993, SIGSOFT Software Engineering Notes, V18, P99, DOI 10.1145/174146.154262
   Toennemann J, 2018, LECT NOTES COMPUT SC, V11119, P67, DOI 10.1007/978-3-030-00244-2_5
   Valmari A, 2009, LECT NOTES COMPUT SC, V5606, P123, DOI 10.1007/978-3-642-02424-5_9
   van Beusekom R., 2017, LECT NOTES COMPUTER, V10471, P217
   van de Pol J, 2009, LECT NOTES COMPUT SC, V5799, P54
   van Gool L., 2006, THESIS EINDHOVEN U T
   Wang HL, 2019, IEEE ACCESS, V7, P16561, DOI 10.1109/ACCESS.2019.2892745
   Weiglhofer M, 2009, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2009.194
NR 47
TC 2
Z9 2
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2022
VL 24
IS 3
SI SI
BP 441
EP 472
DI 10.1007/s10009-022-00658-y
EA APR 2022
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1D5TB
UT WOS:000784612100001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Fotso, SJT
   Frappier, M
   Laleau, R
   Mammar, A
AF Tueno Fotso, Steve Jeffrey
   Frappier, Marc
   Laleau, Regine
   Mammar, Amel
TI Modeling the hybrid ERTMS/ETCS level 3 standard using a formal
   requirements engineering approach
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Hybrid ERTMS; ETCS level 3 standard; Requirements engineering; Goal
   diagrams; Domain modeling; Ontologies; SysML; KAOS; B System
AB This paper presents a specification of the hybrid ERTMS/ETCS level 3 standard in the framework of the case study proposed for ABZ2018. The specification is based on methods and tools, developed in the ANR FORMOSE project, for the modeling and formal verification of critical and complex system requirements. The requirements are specified with SysML/KAOS goal diagrams and are automatically translated into B System specifications, in order to obtain the architecture of the formal specification. Domain properties are specified by ontologies with the SysML/KAOS domain modeling language, based on OWL and PLIB. Their automatic translation completes the structural part of the formal specification. The only part of the specification that must be manually completed is the body of events. The construction is incremental, based on refinement mechanisms that exist within the involved methods. Regarding the case study, the formal specification includes seven refinement levels and all proofs have been discharged under the Rodin platform.
C1 [Tueno Fotso, Steve Jeffrey; Frappier, Marc] Univ Sherbrooke, GRIL, Sherbrooke, PQ J1K 2R1, Canada.
   [Laleau, Regine] Univ Paris Est Creteil, LACL, F-94010 Creteil, France.
   [Mammar, Amel] Telecom SudParis, SAMOVAR, CNRS, F-91000 Evry, France.
C3 University of Sherbrooke; Universite Paris-Est-Creteil-Val-de-Marne
   (UPEC); Centre National de la Recherche Scientifique (CNRS); IMT -
   Institut Mines-Telecom; Institut Polytechnique de Paris; Telecom
   SudParis
RP Fotso, SJT (corresponding author), Univ Sherbrooke, GRIL, Sherbrooke, PQ J1K 2R1, Canada.
EM Steve.Jeffrey.Tueno.Fotso@USherbrooke.ca; Marc.Frappier@USherbrooke.ca;
   laleau@u-pec.fr; amel.mammar@telecom-sudparis.eu
RI Laleau, Regine/ABA-9759-2021
OI Laleau, Regine/0000-0002-2019-4936
FU French National Research Agency (ANR); Natural Sciences and Engineering
   Research Council of Canada (NSERC)
FX This work is carried out within the framework of the FORMOSE project [4]
   funded by the French National Research Agency (ANR). It is also partly
   supported by the Natural Sciences and Engineering Research Council of
   Canada (NSERC).
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial Jean-Raymond, 2018, LECT NOTES COMPUTER, P322
   [Anonymous], 2018, SYSML KAOS REQUIREME
   [Anonymous], 2019, OP PROJ
   [Anonymous], 2017, ANR14CE280009
   [Anonymous], 2017, ROD SMT SOLV PLUG IN
   [Anonymous], 2005, B BOOK ASSIGNING PRO
   [Anonymous], 2017, JETBR MPS
   [Anonymous], 2017, ROD AT B PROV PLUG I
   [Anonymous], 2019, OP SYSML KAOS TOOL
   Arcaini Paolo, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P277, DOI 10.1007/978-3-319-91271-4_19
   Arora C, 2019, EMPIR SOFTW ENG, V24, P2509, DOI 10.1007/s10664-019-09693-x
   Bechhofer S, 2018, ENCY DATABASE SYSTEM
   Bjorner D, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3295738
   Broy M.:., 2013, PERSPECTIVES FUTURE, P15
   Brunel J, 2018, IEEE INT CONF AUTOM, P884, DOI 10.1145/3238147.3240475
   BUTLER M, 2006, LECT NOTES COMPUTER, V4157
   Butler M.J., 2018, LECT NOTES COMPUTER, V10817
   Clancy T, 2014, STANDISH GROUP CHAOS, P8
   ClearSy, 2014, AT B B SYST
   Cunha Alcino, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P307, DOI 10.1007/978-3-319-91271-4_21
   Dghaym Dana, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P338, DOI 10.1007/978-3-319-91271-4_23
   EEIG ERTMS Users Group, 2018, 16E042 EEIG ERTMS
   Falbo R.d. A., 2002, 14th international conference on Software engineering and knowledge engineering (SEKE), P351, DOI DOI 10.1145/568760.568822
   Fotso Steve Jeffrey Tueno, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P55, DOI 10.1007/978-3-319-91271-4_5
   Furness N., 2017, IRSE News, V232, P2
   Hacid K, 2016, LECT NOTES COMPUT SC, V9952, P340, DOI 10.1007/978-3-319-47166-2_24
   Hansen Dominik, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P292, DOI 10.1007/978-3-319-91271-4_20
   Hause  M., 2006, 15 EUR SYST ENG C CI, V9
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Laleau R, 2010, INNOV SYST SOFTW ENG, V6, P47, DOI 10.1007/s11334-009-0119-y
   Lecomte T, 2017, LECT NOTES COMPUT SC, V10623, P70, DOI 10.1007/978-3-319-70848-5_6
   Lee DG, 2005, AXIOMATIC DESIGN FAB, P732
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Mammar Amel, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P353, DOI 10.1007/978-3-319-91271-4_24
   Mammar A, 2016, LECT NOTES COMPUT SC, V9952, P325, DOI 10.1007/978-3-319-47166-2_23
   Matoussi A, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P139, DOI 10.1109/ICECCS.2011.21
   Micouin Patrice, 2018, INCOSE International Symposium, V28, P321, DOI 10.1002/j.2334-5837.2018.00484.x
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Pierra G, 2004, INT FED INFO PROC, V156, P13
   Roques A., 2015, PLANTUML OPEN SOURCE
   Snook C, 2006, ACM T SOFTW ENG METH, V15, P92, DOI 10.1145/1125808.1125811
   Thai Son Hoang, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P251, DOI 10.1007/978-3-319-91271-4_17
   Tueno Fotso Steve Jeffrey, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P262, DOI 10.1007/978-3-319-91271-4_18
   Tueno S., 2018, SYSML KAOS DOMAIN MO
   Tueno S., 2018, ARXIV181104732
   Tueno S., 2017, ARXIV171000903
   Tueno S., 2017, SYSML KAOS DOMAIN MO
   Tueno S., 2018, SYSML KAOS APPROACH
   Tueno S., IEEE P MODRE WORKSH
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
NR 53
TC 9
Z9 9
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2020
VL 22
IS 3
SI SI
BP 349
EP 363
DI 10.1007/s10009-019-00542-2
EA OCT 2019
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE0ZY
UT WOS:000489596100001
DA 2024-07-18
ER

PT J
AU Jensen, PG
   Larsen, KG
   Srba, J
AF Jensen, Peter Gjol
   Larsen, Kim Guldstrand
   Srba, Jiri
TI Discrete and continuous strategies for timed-arc Petri net games
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 23rd International SPIN Symposium on Model Checking of Software (SPIN)
CY APR 07-08, 2016
CL Eindhoven, NETHERLANDS
DE Timed-arc Petri net games; Discrete time; Continuous time; Synthesis;
   Safety games
AB Automatic strategy synthesis for a given control objective can be used to generate correct-by-construction controllers of real-time reactive systems. The existing symbolic approach for continuous timed game is a computationally hard task and current tools like UPPAAL TiGa often scale poorly with the model complexity. We suggest an explicit approach for strategy synthesis in the discrete-time setting and show that even for systems with closed guards, the existence of a safety discrete-time strategy does not imply the existence of a safety continuous-time strategy and vice versa. Nevertheless, we prove that the answers to the existence of discrete-time and continuous-time safety strategies coincide on a practically motivated subclass of urgent controllers that either react immediately after receiving an environmental input or wait with the decision until a next event is triggered by the environment. We then develop an on-the-fly synthesis algorithm for discrete timed-arc Petri net games. The algorithm is implemented in our tool TAPAAL, and based on the experimental evidence, we discuss the advantages of our approach compared to the symbolic continuous-time techniques.
C1 [Jensen, Peter Gjol; Larsen, Kim Guldstrand; Srba, Jiri] Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
C3 Aalborg University
RP Jensen, PG (corresponding author), Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
EM peter.gjoel@gmail.com
OI Jensen, Peter Gjol/0000-0002-9320-9991; Guldstrand Larsen,
   Kim/0000-0002-5953-3384; Srba, Jiri/0000-0001-5551-6547
FU project DiCyPS - Innovation Fund Denmark; Sino Danish Research Center
   IDEA4CPS; ERC Advanced Grant LASSO
FX The research leading to these results has received funding from the
   project DiCyPS funded by the Innovation Fund Denmark, the Sino Danish
   Research Center IDEA4CPS and the ERC Advanced Grant LASSO. The third
   author is partially affiliated with FI MU, Brno, Czech Republic.
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Andersen M., 2013, LNCS, V7721
   [Anonymous], LNCS
   Asarin E, 1998, SYSTEM STRUCTURE AND CONTROL 1998 (SSC'98), VOLS 1 AND 2, P447
   BEHRMANN G, 2007, LNCS, V4590
   Behrmann G., 2006, 3 INT C QUANT EV SYS
   Berthomieu B., 2006, 3 INT C QUANT EV SYS
   Birch S., 2014, LNCS, V8711
   Bolognesi T., 1990, PROTOCOL SPECIFICATI
   Bozga M., 1999, LNCS, V1703
   CASSEZ F, 2005, LNCS, V3653
   Church A., 1963, J SYMB LOG
   Church A., 1962, P INT C MATH STOCKH
   Cong J., 2009, P 2009 INT C COMP AI
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   David A., 2012, LNCS, V7214
   Dill D., 1990, LNCS, V407
   Finkbeiner B., 2014, P 5 INT S GAM AUT LO, V161
   Finkbeiner B., 2015, LNCS, V9360
   Finkbeiner B., 2012, LNCS, V7214
   Gardey G., 2005, LNCS, V3576
   Hanisch H., 1993, LNCS, V691
   Hoffman A., 1957, LINEAR INEQUALITIES, V38, P223
   Jacobs S., 2016, P 4 WORKSH SYNTH SYN, V202
   Jensen P. G., 2017, LNCS
   Jensen P. G., 2014, LNCS, V8430
   Jensen P. G., 2016, LNCS, V9641
   Jorgensen K., 2012, P 7 C SYST SOFTW VER, V102
   Kempf J.-F., 2013, LNCS, V7795
   Larsen KG, 1997, INFORM COMPUT, V134, P75, DOI 10.1006/inco.1997.2623
   LIU X, 1998, LNCS, V1443
   Maler O., 2010, P 12 INT WORKSH VER, V39
   Mateo JA, 2015, FUND INFORM, V140, P89, DOI 10.3233/FI-2015-1246
   Peter H., 2011, LNCS, V7214
   Peter H., 2009, IEEE 2013 34 REAL TI
   Raskin J., 2003, TECHNICAL REPORT
   Ruiz V., 1999, P 8 INT WORKSH PETR
   ZHOU Q, 1995, INT J ADV MANUF TECH, V10, P59, DOI 10.1007/BF01184279
NR 38
TC 7
Z9 7
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2018
VL 20
IS 5
SI SI
BP 529
EP 546
DI 10.1007/s10009-017-0473-2
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GQ7TL
UT WOS:000441949300004
DA 2024-07-18
ER

PT J
AU Chadli, M
   Kim, JH
   Larsen, KG
   Legay, A
   Naujokat, S
   Steffen, B
   Traonouez, LM
AF Chadli, Mounir
   Kim, Jin H.
   Larsen, Kim G.
   Legay, Axel
   Naujokat, Stefan
   Steffen, Bernhard
   Traonouez, Louis-Marie
TI High-level frameworks for the specification and verification of
   scheduling problems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT Joint 21st International Workshop on Formal Methods for Industrial
   Critical Systems (FMICS) / 16th International Workshop on Automated
   Verification of Critical Systems (AVoCS)
CY SEP 26-28, 2016
CL Pisa, ITALY
SP European Res Consortium Informat & Math, Formal Methods Europe, Springer Intl Publishing AG
DE Scheduling; Energy; Hierarchical scheduling; Formal methods; Statistical
   model-checking; High-level language; Meta-modeling
ID STATISTICAL-MODEL CHECKING
AB Over the years, schedulability of Cyber-Physical Systems (CPS) has mainly been performed by analytical methods. These techniques are known to be effective but limited to a few classes of scheduling policies. In a series of recent work, we have shown that schedulability analysis of CPS could be performed with a model-based approach and extensions of verification tools such as UPPAAL. One of our main contributions has been to show that such models are flexible enough to embed various types of scheduling policies, which goes beyond those in the scope of analytical tools. However, the specification of scheduling problems with model-based approaches requires a substantial modeling effort, and a deep understanding of the techniques employed in order to understand their results. In this paper we propose simplicity-driven high-level specification and verification frameworks for various scheduling problems. These frameworks consist of graphical and user-friendly languages for describing scheduling problems. The high-level specifications are then automatically translated to formal models, and results are transformed back into the comprehensible model view. To construct these frameworks we exploit a meta-modeling approach based on the tool generator Cinco . Additionally we propose in this paper two new techniques for scheduling analysis. The first performs runtime monitoring using the CUSUM algorithm to detect alarming change in the system. The second performs optimization using efficient statistical techniques. We illustrate our frameworks and techniques on two case studies.
C1 [Chadli, Mounir] Irisa, Rennes, France.
   [Kim, Jin H.] Univ Penn, Philadelphia, PA 19104 USA.
   [Larsen, Kim G.] Aalborg Univ, Aalborg, Denmark.
   [Legay, Axel; Traonouez, Louis-Marie] INRIA, Rennes, France.
   [Naujokat, Stefan; Steffen, Bernhard] Tech Univ Dortmund, Dortmund, Germany.
C3 Universite de Rennes; University of Pennsylvania; Aalborg University;
   Inria; Dortmund University of Technology
RP Traonouez, LM (corresponding author), INRIA, Rennes, France.
EM mounir.chadli@irisa.fr; jhkim07@gmail.com; kgl@cs.aau.dk;
   Axel.Legay@inria.fr; stefan.naujokat@cs.tu-dortmund.de;
   steffen@cs.tu-dortmund.de; Louis-Marie.Traonouez@inria.fr
OI Guldstrand Larsen, Kim/0000-0002-5953-3384; Naujokat,
   Stefan/0000-0002-6265-6641
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R, 2004, THEOR COMPUT SCI, V318, P297, DOI 10.1016/j.tcs.2003.10.038
   [Anonymous], P 6 INT S LEV APPL F
   [Anonymous], T FOUND MASTERING CH
   [Anonymous], THEORY HYBRID AUTOMA
   [Anonymous], ECE ASST
   [Anonymous], 2016, SIGBED REV
   [Anonymous], 2000, Proceedings of the 11th International Conference on Concurrency Theory, CONCUR 00
   [Anonymous], SOFTW TOOLS TECHNOL
   [Anonymous], 2009, HDB RES BUSINESS PRO
   [Anonymous], 1990, CMUSEI90TR008
   [Anonymous], ICAPS POSTER SESSION
   [Anonymous], 2008, ECLIPSE MODELING PRO
   Basseville M., 1993, DETECTION ABRUPT CHA
   Beauquier D, 2003, THEOR COMPUT SCI, V292, P65, DOI 10.1016/S0304-3975(01)00215-8
   Behrmann G., 2001, Hybrid Systems: Computation and Control. 4th International Workshop, HSCC 2001. Proceedings (Lecture Notes in Computer Science Vol.2034), P147
   Behrmann G, 2006, INT CONF QUANT EVAL, P125
   Boudjadar Abdeldjalil, 2015, Formal Aspects of Component Software - 11th International Symposium, FACS 2014. Revised Selected Papers: LNCS 8997, P209, DOI 10.1007/978-3-319-15317-9_14
   Boudjadar A, 2014, LECT NOTES COMPUT SC, V8348, P61, DOI 10.1007/978-3-319-07602-7_6
   Cesta A, 2011, FUND INFORM, V107, P111, DOI 10.3233/FI-2011-397
   Chadli M, 2016, LECT NOTES COMPUT SC, V9933, P133, DOI 10.1007/978-3-319-45943-1_9
   Cimatti A, 2016, AAAI CONF ARTIF INTE, P3116
   Cimatti A, 2017, AAAI CONF ARTIF INTE, P3547
   David Alexandre, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P352, DOI 10.1007/978-3-642-38088-4_24
   David Alexandre, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P293, DOI 10.1007/978-3-642-34032-1_28
   David A, 2015, INT J SOFTW TOOLS TE, V17, P397, DOI 10.1007/s10009-014-0361-y
   David A, 2012, ELECTRON PROC THEOR, P122, DOI 10.4204/EPTCS.92.9
   David A, 2011, LECT NOTES COMPUT SC, V6919, P80, DOI 10.1007/978-3-642-24310-3_7
   David Alexandre, 2009, Model-based Framework for Schedulability Analysis Using Uppaal 4.1
   Jin Hyun Kim, 2015, Hardware and Software: Verification and Testing. 11th International Haifa Verification Conference, HVC 2015. Proceedings: LNCS 9434, P190, DOI 10.1007/978-3-319-26287-1_12
   Jorges Sven, 2012, International Journal on Software Tools for Technology Transfer, V14, P511, DOI 10.1007/s10009-012-0254-x
   Kim JH, 2015, 2015 18TH INTERNATIONAL ACM SIGSOFT SYMPOSIUM ON COMPONENT-BASED SOFTWARE ENGINEERING (CBSE), P91, DOI 10.1145/2737166.2737170
   Lamprecht AL, 2013, COMPUTER, V46, P48, DOI 10.1109/MC.2013.299
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Margaria T, 2010, COMPUTER, V43, P90, DOI 10.1109/MC.2010.177
   Montgomery D.C., 2006, DESIGN ANAL EXPT, DOI DOI 10.1198/TECH.2006.S372
   Oddi A, 2015, PROC INT C TOOLS ART, P453, DOI 10.1109/ICTAI.2015.74
   PAGE ES, 1954, BIOMETRIKA, V41, P100, DOI 10.1093/biomet/41.1-2.100
   Phan L.T. X., 2011, SIGBED Rev, V8, P62, DOI DOI 10.1145/1967021.1967029
   Shin I, 2003, RTSS 2003: 24TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P2, DOI 10.1109/REAL.2003.1253249
   Shin I, 2008, ECRTS 2008: PROCEEDINGS OF THE 20TH EUROMICRO CONFERENCE ON REAL-TIME SYSTEMS, P181, DOI 10.1109/ECRTS.2008.28
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
NR 43
TC 3
Z9 3
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2018
VL 20
IS 4
SI SI
BP 397
EP 422
DI 10.1007/s10009-017-0466-1
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GL5XP
UT WOS:000437248300004
DA 2024-07-18
ER

PT J
AU Naujokat, S
   Lybecait, M
   Kopetzki, D
   Steffen, B
AF Naujokat, Stefan
   Lybecait, Michael
   Kopetzki, Dawid
   Steffen, Bernhard
TI CINCO: a simplicity-driven approach to full generation of
   domain-specific graphical modeling tools
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Simplicity; Abstract tool specification; Full code generation;
   Metamodeling; Domain-specific tools; Hierarchy; Service-orientation
ID VISUAL LANGUAGES
AB Even with the help of powerful metamodeling frameworks, the development of domain-specific graphical modeling tools is usually a complex, repetitive, and tedious task, which introduces substantial upfront costs often prohibiting such approaches in practice. In order to reduce these costs, the presented Cinco meta tooling suite is designed to provide a holistic approach that greatly simplifies the development of such domain-specific tools. Our solution is based on the idea to apply the concept of domain specialization also to the (meta-)domain of "domain-specific modeling tools". Important here is our focus on complex graph-based models, comprising various kinds of nodes and edges together with their individual representation, correlations, and interpretation. This focus allows for high-level specifications of the model structures and functionalities as the prerequisite for push-button tool generation.
C1 [Naujokat, Stefan; Lybecait, Michael; Kopetzki, Dawid; Steffen, Bernhard] TU Dortmund Univ, Dept Comp Sci, Chair Programming Syst, D-44227 Dortmund, Germany.
C3 Dortmund University of Technology
RP Naujokat, S (corresponding author), TU Dortmund Univ, Dept Comp Sci, Chair Programming Syst, D-44227 Dortmund, Germany.
EM stefan.naujokat@tu-dortmund.de
CR Almorsy M, 2014, S VIS LANG HUM CEN C, P133, DOI 10.1109/VLHCC.2014.6883035
   Almorsy M, 2013, S VIS LANG HUM CEN C, P91, DOI 10.1109/VLHCC.2013.6645249
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], TECH REP
   [Anonymous], 2004 IEEE S VIS LANG
   [Anonymous], SERVICE ORIENTED COM
   [Anonymous], P 6 INT S LEV APPL F
   [Anonymous], ADDISON WESLEY OBJEC
   [Anonymous], AN EATCS SERIES
   [Anonymous], TECH REP
   [Anonymous], 2013, USER LEVEL WORKFLOW, DOI DOI 10.1007/978-3-642-45389-2
   [Anonymous], 1960, DYNAMIC PROGRAMMING
   [Anonymous], LANGUAGEWORKBENCH
   [Anonymous], 2000, ARCHITECTURAL STYLES
   [Anonymous], THESIS
   [Anonymous], MODEL BASED FRAMEWOR
   [Anonymous], THESIS
   [Anonymous], LNCS
   [Anonymous], 2013, CONSTRUCTION EVOLUTI
   [Anonymous], EVALUATION MODELING
   [Anonymous], WORKSH INT SIGN PROC
   [Anonymous], THESIS
   [Anonymous], 2009, HDB RES BUSINESS PRO
   [Anonymous], TECH REP
   [Anonymous], 2013, QUANTITATIVE EVALUAT, DOI DOI 10.1007/978-3-642-40196-1_12
   [Anonymous], 2015, THE EPSILON BOOK
   [Anonymous], P 33 INT C SOFTW ENG
   [Anonymous], THESIS
   [Anonymous], 1997, ANN REV COMMUN ACM
   [Anonymous], MET PROGR SYST
   [Anonymous], P 7 INT S LEV APPL F
   [Anonymous], 2008, ECLIPSE MODELING PRO
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Backus J., 1959, IFIP Congress, P125
   Bengtsson J., 1996, Hybrid Systems III. Verification and Control, P232, DOI 10.1007/BFb0020949
   Berg A., 2015, TECH REP
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Bo&beta;elmann S., 2016, P 2016 INT C SEC MAN, P145
   Bosselmann S, 2016, LECT NOTES COMPUT SC, V9953, P809, DOI 10.1007/978-3-319-47169-3_60
   Brambilla M., 2012, MODELDRIVEN SOFTWARE, DOI [10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Chadli M, 2016, LECT NOTES COMPUT SC, V9933, P133, DOI 10.1007/978-3-319-45943-1_9
   Doedt M, 2012, IEEE ANNU SOFTW ENG, P158, DOI 10.1109/SEW.2012.23
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Fowler M, 2005, Language workbenches: The killer-app for domain specific languages?
   Fowler M., 2011, DOMAIN SPECIFIC LANG
   Fowler M., 2005, FLUENT INTERFACE
   Grundy JC, 2013, IEEE T SOFTWARE ENG, V39, P487, DOI 10.1109/TSE.2012.33
   Jörges S, 2008, INNOV SYST SOFTW ENG, V4, P361, DOI 10.1007/s11334-008-0071-2
   John Karl-Heinz, 2010, 611313 IEC
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kastens U, 1998, LECT NOTES COMPUT SC, V1383, P294, DOI 10.1007/BFb0026439
   Katoen JP, 2005, LECT NOTES COMPUT SC, V3472, P615
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Kelly S., 2008, Domain-Specific Modeling
   Kolovos DS, 2010, LECT NOTES COMPUT SC, V6394, P211
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2002, THEOR COMPUT SCI, V282, P101, DOI 10.1016/S0304-3975(01)00046-9
   Lamprecht Anna-Lena, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P47, DOI 10.1007/978-3-642-34026-0_5
   Lamprecht AL, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P262, DOI 10.1109/QUATIC.2010.53
   Lamprecht AL, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-S10-S8
   Margaria T, 2005, LECT NOTES COMPUT SC, V3826, P450
   Margaria T., 2004, International Journal on Software Tools for Technology Transfer, V5, P107, DOI 10.1007/s10009-003-0119-4
   Margaria T, 2010, COMPUTER, V43, P90, DOI 10.1109/MC.2010.177
   McAffer Jeff., 2010, Eclipse rich client platform
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   Naujokat S, 2016, LECT NOTES COMPUT SC, V9953, P218, DOI 10.1007/978-3-319-47169-3_16
   Naujokat S, 2014, SOFTWARE PRACT EXPER, V44, P277, DOI 10.1002/spe.2243
   Naujokat S, 2012, LECT NOTES COMPUT SC, V7212, P94, DOI 10.1007/978-3-642-28872-2_7
   Neubauer J, 2014, LECT NOTES COMPUT SC, V8802, P56, DOI 10.1007/978-3-662-45234-9_5
   Neubauer J, 2013, ELECTRON P THEOR COM, P259, DOI 10.4204/EPTCS.129.16
   Neubauer J, 2013, COMPUTER, V46, P56, DOI 10.1109/MC.2013.296
   Petri Carl Adam, 1966, COMMUNICATION
   Steffen B., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P450
   Steffen B., 2016, T FOUND MASTERING CH, V1, P22
   Steffen B, 2007, LECT NOTES COMPUT SC, V4383, P92
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Weber M, 2003, LECT NOTES COMPUT SC, V2472, P124
   Weckwerth J., 2016, THESIS
   Wortmann N, 2016, LECT NOTES COMPUT SC, V9953, P774, DOI 10.1007/978-3-319-47169-3_58
NR 79
TC 12
Z9 13
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2018
VL 20
IS 3
SI SI
BP 327
EP 354
DI 10.1007/s10009-017-0453-6
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GF1BQ
UT WOS:000431667100006
DA 2024-07-18
ER

PT J
AU Vanit-Anunchai, S
AF Vanit-Anunchai, Somsak
TI Modelling and simulating a Thai railway signalling system using Coloured
   Petri Nets
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Interlocking tables; Route-based Interlocking; Approach lock; Back lock;
   Visualization extension
ID INTERLOCKINGS
AB It is well known that formal verification of a large railway signalling system encounters the state explosion problem. To alleviate the problem, researchers usually concentrate on only route interlocking and abstract away other properties. Besides the route interlocking, there are also other vital properties to which failure to comply could potentially lead to danger. According to our experience, most of train accidents often involve human error and errors in other properties rather than errors in the route interlocking. Thus, we encounter a dilemma between fully automated validation of an incomplete model or partial validation of a complete model. We argue that formally modelling the complete model will be more valuable for the on-going projects of the State Railway of Thailand (SRT) because it provides insights and can be used to train new signal engineers. This paper focuses on the complete Coloured Petri Net model of a typical Thai railway signalling system: a double-line station with one passing loop. The model includes train movements that can be simulated and graphically visualized. According to SRT's signalling principles, we have identified nine properties: route interlocking, alternative overlap, flank protection, aspect sequence, approach signal release, approach lock, back lock, sectional route release and quick route release. Lessons learnt from using CPN Tools to model and validate the railway signalling systems are also discussed.
C1 [Vanit-Anunchai, Somsak] Suranaree Univ Technol, Inst Engn, Sch Telecommun Engn, Muang, Nakhon Ratchasi, Thailand.
C3 Suranaree University of Technology
RP Vanit-Anunchai, S (corresponding author), Suranaree Univ Technol, Inst Engn, Sch Telecommun Engn, Muang, Nakhon Ratchasi, Thailand.
EM somsav@sut.ac.th
OI Vanit-Anunchai, Somsak/0000-0003-4972-7713
FU National Science and Technology Development Agency; National Research
   Council of Thailand
FX This work is supported by Research Grant from the National Science and
   Technology Development Agency and National Research Council of Thailand.
   The author is thankful to anonymous reviewers and Dr. Guy E. Gallasch.
   Their constructive feedback has helped the author improve the quality of
   this paper. The author is also grateful to his colleagues from the State
   Railway of Thailand, Patama Sridaranop, Anan Phonimdang, Sommart
   Klinsukol, Ittipon Kansiri, Kittisak Siripen, Surapol Eiamsaart and
   Navaporn Rittisuk.
CR BASTEN T, 1995, IEEE PARALL DISTRIB, V3, P50, DOI 10.1109/M-PDT.1995.414843
   Clavel M., 2004, MAUDE MANUAL
   Fantechi Alessandro, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P276, DOI 10.1007/978-3-642-34032-1_26
   Fantechi A., 2013, Formal Methods for Industrial Critical Systems, P61, DOI [10.1002/9781118459898.ch4, DOI 10.1002/9781118459898]
   Fantechi A, 2014, LECT NOTES COMPUT SC, V8368, P167, DOI 10.1007/978-3-319-05032-4_13
   Ferrari A, 2011, FORMS/FORMAT 2010: FORMAL METHODS FOR AUTOMATION AND SAFETY IN RAILWAY AND AUTOMOTIVE SYSTEMS, P107, DOI 10.1007/978-3-642-14261-1_11
   Haxthausen A. E., 2013, LNCS, P205
   Haxthausen AE, 2016, LECT NOTES COMPUT SC, V9707, P160, DOI 10.1007/978-3-319-33951-1_12
   James P, 2014, INT J SOFTW TOOLS TE, V16, P685, DOI 10.1007/s10009-014-0304-7
   James P, 2014, SCI COMPUT PROGRAM, V96, P315, DOI 10.1016/j.scico.2014.04.005
   Jensen K, 2015, COMMUN ACM, V58, P61, DOI 10.1145/2663340
   Jensen K, 2012, THEOR COMPUT SCI, V429, P169, DOI 10.1016/j.tcs.2011.12.036
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Hagalisletto AM, 2007, IEEE T SYST MAN CY C, V37, P444, DOI 10.1109/TSMCC.2007.897323
   Sun P., 2015, THESIS
   Vanit-Anunchai S., 2009, 10 WORKSH TUT PRACT, P139
   Vanit-Anunchai S, 2014, ELECTRON PROC THEOR, P17, DOI 10.4204/EPTCS.156.6
   Vanit-Anunchai S, 2016, LECT NOTES COMPUT SC, V9933, P214, DOI 10.1007/978-3-319-45943-1_15
   Vanit-Anunchai S, 2010, LECT NOTES COMPUT SC, V6116, P137, DOI 10.1007/978-3-642-13414-2_10
   Vu L. H., 2014, FORMAL TECHNIQUES SA, P223
   Winter Kirsten, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P246, DOI 10.1007/978-3-642-34032-1_24
NR 21
TC 7
Z9 7
U1 2
U2 18
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2018
VL 20
IS 3
SI SI
BP 243
EP 262
DI 10.1007/s10009-018-0482-9
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GF1BQ
UT WOS:000431667100002
DA 2024-07-18
ER

PT J
AU Quesel, JD
   Mitsch, S
   Loos, S
   Aréchiga, N
   Platzer, A
AF Quesel, Jan-David
   Mitsch, Stefan
   Loos, Sarah
   Arechiga, Nikos
   Platzer, Andre
TI How to model and prove hybrid systems with KeYmaera: a tutorial on
   safety
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE KeYmaera tutorial; Formal verification of hybrid systems; Differential
   dynamic logic; Automated theorem proving; Introduction to hybrid system
   modeling and verification
ID DIFFERENTIAL DYNAMIC LOGIC; VERIFICATION
AB This paper is a tutorial on how to model hybrid systems as hybrid programs in differential dynamic logic and how to prove complex properties about these complex hybrid systems in KeYmaera, an automatic and interactive formal verification tool for hybrid systems. Hybrid systems can model highly nontrivial controllers of physical plants, whose behaviors are often safety critical such as trains, cars, airplanes, or medical devices. Formal methods can help design systems that work correctly. This paper illustrates how KeYmaera can be used to systematically model, validate, and verify hybrid systems. We develop tutorial examples that illustrate challenges arising in many real-world systems. In the context of this tutorial, we identify the impact that modeling decisions have on the suitability of the model for verification purposes. We show how the interactive features of KeYmaera can help users understand their system designs better and prove complex properties for which the automatic prover of KeYmaera still takes an impractical amount of time. We hope this paper is a helpful resource for designers of embedded and cyber-physical systems and that it illustrates how to master common practical challenges in hybrid systems verification.
C1 [Quesel, Jan-David; Mitsch, Stefan; Loos, Sarah; Arechiga, Nikos; Platzer, Andre] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
C3 Carnegie Mellon University
RP Quesel, JD; Mitsch, S; Loos, S; Aréchiga, N; Platzer, A (corresponding author), Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
EM jquesel@cs.cmu.edu; smitsch@cs.cmu.edu; sloos@cs.cmu.edu;
   narechiga@ece.cmu.edu; aplatzer@cs.cmu.edu
RI Platzer, André/J-2507-2014
OI Platzer, André/0000-0001-7238-5710; Mitsch, Stefan/0000-0002-3194-9759
FU Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [1054246] Funding Source: National Science Foundation
CR Abraham E., 2014, Tools and Algorithms for the Constructionand Analysis of Systems, V8413, P279
   Alur R, 2004, THEOR COMPUT SCI, V318, P297, DOI 10.1016/j.tcs.2003.10.038
   Alur R., 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P273
   ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   [Anonymous], 2000, The mathematica book
   [Anonymous], LOGICAL METHODS COMP
   [Anonymous], 1993, Hybrid Systems, DOI [DOI 10.1007/3-540-57318-6_30, DOI 10.1007/3-540, DOI 10.1007/3-540-57318-6, 10.1007/3-540-57318-6_30]
   [Anonymous], 2002, NONLINEAR SYSTEMS
   [Anonymous], 1951, DECISION METHOD ELEM
   [Anonymous], 2010, LOGICAL ANAL HYBRID
   Aréchiga N, 2012, P AMER CONTR CONF, P3573
   Asarin E., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P365
   Beckert Bernhard., 2007, LNCS, V4334
   Behrmann G., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P174
   Behrmann G., 2001, Hybrid Systems: Computation and Control. 4th International Workshop, HSCC 2001. Proceedings (Lecture Notes in Computer Science Vol.2034), P147
   Brown C. W., 2003, SIGSAM Bulletin, V37, P97, DOI 10.1145/968708.968710
   Chen C.-T., 1999, LINEAR SYSTEM THEORY
   Clarke EM, 1999, MODEL CHECKING, P1
   Damm W, 2012, SCI COMPUT PROGRAM, V77, P1122, DOI 10.1016/j.scico.2011.07.006
   DAVENPORT JH, 1988, J SYMB COMPUT, V5, P29, DOI 10.1016/S0747-7171(88)80004-X
   Davoren JM, 2000, P IEEE, V88, P985, DOI 10.1109/5.871305
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Deshpande A., 1996, HYBRID SYSTEMS VOLUM, V1273, P113
   Dolzmann A., 1997, SIGSAM Bulletin, V31, P2, DOI 10.1145/261320.261324
   Eggers A, 2011, LECT NOTES COMPUT SC, V7041, P172, DOI 10.1007/978-3-642-24690-6_13
   Franzle M., 2007, J. Satisf. Boolean Model. Comput., V1, P209
   Frehse G, 2005, LECT NOTES COMPUT SC, V3414, P258
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   HAREL D, 2000, FOUNDAT COMPUT, P3
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   Henzinger TA, 1997, LECT NOTES COMPUT SC, V1254, P460, DOI 10.1007/s100090050008
   IOANNOU P, 1993, PROCEEDINGS OF THE 32ND IEEE CONFERENCE ON DECISION AND CONTROL, VOLS 1-4, P1885, DOI 10.1109/CDC.1993.325521
   Jeannin J.B., 2015, LNCS
   Jeannin JB, 2014, LECT NOTES ARTIF INT, V8562, P292, DOI 10.1007/978-3-319-08587-6_22
   Kouskoulas Y., 2013, PROC 16 INT C HYBRID, P263, DOI [10.1145/2461328.2461369, DOI 10.1145/2461328.2461369]
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Loos Sarah M., 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P42, DOI 10.1007/978-3-642-21437-0_6
   Loup Ulrich, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P193, DOI 10.1007/978-3-642-38574-2_13
   Mitsch S., 2014, 5 WORKSH FORM METH R
   Mitsch S., 2013, Robotics: Science and Systems, P81
   Mitsch S, 2014, LECT NOTES COMPUT SC, V8734, P199, DOI 10.1007/978-3-319-11164-3_17
   Mitsch S, 2014, LECT NOTES COMPUT SC, V8442, P481, DOI 10.1007/978-3-319-06410-9_33
   Mitsch S, 2012, ACM IEEE INT CONF CY, P171, DOI 10.1109/ICCPS.2012.25
   Olderog Ernst-Rudiger., 2008, REAL TIME SYSTEMS FO
   Plaku E, 2009, FORM METHOD SYST DES, V34, P157, DOI 10.1007/s10703-008-0058-5
   Platzer A.:, 2014, LECT NOTES CMU
   Platzer A., 2014, B EATCS, V114, P151
   Platzer A, 2008, J AUTOM REASONING, V41, P143, DOI 10.1007/s10817-008-9103-8
   Platzer A, 2008, LECT NOTES ARTIF INT, V5195, P171, DOI 10.1007/978-3-540-71070-7_15
   Platzer A, 2007, LECT NOTES COMPUT SC, V4548, P216
   Platzer A, 2012, IEEE S LOG, P541, DOI 10.1109/LICS.2012.64
   Platzer A, 2012, IEEE S LOG, P13, DOI 10.1109/LICS.2012.13
   Platzer A, 2010, LECT NOTES COMPUT SC, V6247, P469, DOI 10.1007/978-3-642-15205-4_36
   Platzer A, 2009, LECT NOTES COMPUT SC, V5885, P246, DOI 10.1007/978-3-642-10373-5_13
   Platzer A, 2009, LECT NOTES COMPUT SC, V5850, P547, DOI 10.1007/978-3-642-05089-3_35
   Platzer A, 2010, J LOGIC COMPUT, V20, P309, DOI 10.1093/logcom/exn070
   Platzer A, 2009, FORM METHOD SYST DES, V35, P98, DOI 10.1007/s10703-009-0079-8
   Pratt V.R., 1976, 17 ANN S FDN COMPUTE, P109, DOI [10.1109/SFCS.1976.27, DOI 10.1109/SFCS.1976.27]
   Quesel Jan-David, 2012, Automated Reasoning. Proceedings 6th International Joint Conference, IJCAR 2012, P439, DOI 10.1007/978-3-642-31365-3_34
   Ratschan S, 2007, ACM T EMBED COMPUT S, V6, DOI 10.1145/1210268.1210276
   Tomlin C, 1998, IEEE T AUTOMAT CONTR, V43, P509, DOI 10.1109/9.664154
   Umeno S, 2007, LECT NOTES COMPUT SC, V4416, P557
   Xin Chen, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P258, DOI 10.1007/978-3-642-39799-8_18
NR 63
TC 29
Z9 37
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2016
VL 18
IS 1
BP 67
EP 91
DI 10.1007/s10009-015-0367-0
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB7SL
UT WOS:000368716200005
OA hybrid
DA 2024-07-18
ER

PT J
AU Anielak, G
   Jakacki, G
   Lasota, S
AF Anielak, Grzegorz
   Jakacki, Grzegorz
   Lasota, Slawomir
TI Incremental test case generation using bounded model checking: an
   application to automatic rating
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Bounded model checking; Test case generation; Program equivalence
   checking; Automatic rating
ID SOFTWARE; CHECKERS
AB In this paper we focus on the task of rating solutions to a programming exercise. State-of-the-art rating methods generally examine each solution against an exhaustive set of test cases, typically designed manually. Hence an issue of completeness arises. We propose the application of bounded model checking to the automatic generation of test cases. The experimental evaluation we have performed reveals a substantial increase in accuracy of ratings at a cost of a moderate increase in computation resources needed. Most importantly, application of model checking leads to the finding of errors in solutions that would previously have been classified as correct.
C1 [Anielak, Grzegorz; Lasota, Slawomir] Univ Warsaw, Warsaw, Poland.
   [Jakacki, Grzegorz] Codility, London, England.
C3 University of Warsaw
RP Anielak, G (corresponding author), Univ Warsaw, Warsaw, Poland.
EM grzegorz.anielak@gmail.com; sl@mimuw.edu.pl; jakacki@codility.com
RI Lasota, Slawomir SL/I-8963-2012
OI Lasota, Slawomir/0000-0001-8674-4470
CR Angeletti D, 2010, J AUTOM REASONING, V45, P397, DOI 10.1007/s10817-010-9172-3
   Anielak G., 2012, THESIS U WARSAW
   [Anonymous], 2003, Adv. Comput., DOI 10.1016/S0065-2458(03)58003-2
   Ball T., 2004, Formal Methods for Components and Objects. Third International Symposium, FMCO 2004. Revised Lectures (Lecture Notes in Computer Science Vol. 3657), P1
   Clarke E., 2003, Proceedings 2003. Design Automation Conference (IEEE Cat. No.03CH37451), P368
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke EM, 1999, MODEL CHECKING, P1
   Dias-Neto AC, 2009, INFORM SOFTWARE TECH, V51, P1487, DOI 10.1016/j.infsof.2009.06.010
   Dong-Ah Lee, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P397, DOI 10.1007/978-3-642-24270-0_29
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Fraser G, 2009, J SYST SOFTWARE, V82, P1403, DOI 10.1016/j.jss.2009.05.016
   Fraser G, 2009, SOFTW TEST VERIF REL, V19, P215, DOI 10.1002/stvr.402
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Holzer A, 2009, LECT NOTES COMPUT SC, V5403, P151, DOI 10.1007/978-3-540-93900-9_15
   Kim M., 2008, ASE 2008
   Kim M, 2011, IEEE T SOFTWARE ENG, V37, P146, DOI 10.1109/TSE.2010.68
   Shuker Z., 1999, Journal of Computing in Higher Education, V11, P86, DOI 10.1007/BF02940843
   Utting M., 2007, PRACTICAL MODEL BASE
NR 18
TC 3
Z9 4
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2015
VL 17
IS 3
BP 339
EP 349
DI 10.1007/s10009-014-0317-2
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7NL
UT WOS:000355682600007
OA hybrid
DA 2024-07-18
ER

PT J
AU Bürger, J
   Jürjens, J
   Wenzel, S
AF Buerger, Jens
   Juerjens, Jan
   Wenzel, Sven
TI Restoring security of evolving software models using graph
   transformation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Evolution; Graph transformation; Model transformation; Model-based
   software engineering security
ID TOOL; CHECKING
AB Security certification of complex systems requires a high amount of effort. As a particular challenge, today's systems are increasingly long-living and subject to continuous change. After each change of some part of the system, the whole system needs to be re-certified from scratch ( since security properties are not in general modular), which is usually far too much effort. When models for software get changed, this can lead to security weaknesses that are also part of the software system that is derived from those models. Hence, it is important to check the models with respect to security properties and correct them respectively. To address this challenge, we present an approach which not only finds security weaknesses but can also correct them in a tool-supported way. As time goes by, a diverse number of changing requirements that may be security-related and non-security-related lead to an evolving system that met its security requirements at design time but can contain vulnerabilities with respect to meanwhile updated security knowledge. Supported by patterns we can describe and detect potential flaws that may arise in models, such as inconsistencies in security requirements. Potential violations can be formalized in the patterns as well as the correction alternatives to fix these. It is based on graph transformation and can be applied to different types of models and violations. For flaw detection, these patterns are used as the left-hand sides of graph transformation rules. Using graph transformation, we can further correct the models and establish that they no longer violate the security requirements under investigation. The approach is supported by a tool which can check whether these patterns arise in models and assist the user in correcting the security vulnerabilities.
C1 [Buerger, Jens; Juerjens, Jan] TU Dortmund, Dortmund, Germany.
   [Juerjens, Jan; Wenzel, Sven] Fraunhofer ISST, Dortmund, Germany.
C3 Dortmund University of Technology
RP Jürjens, J (corresponding author), TU Dortmund, Dortmund, Germany.
EM jens.buerger@cs.tu-dortmund.de; jan.jurjens@cs.tu-dortmund.de;
   sven.wenzel@isst.fraunhofer.de
CR Aksit M, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P39
   Amrani M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P921, DOI 10.1109/ICST.2012.197
   [Anonymous], 2007, P EMISA 2007
   [Anonymous], 2007, TRRI07284 U PAD
   [Anonymous], 2005, Secure Systems Development with UML
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Banti F, 2011, J SYMB COMPUT, V46, P119, DOI 10.1016/j.jsc.2010.08.005
   Bergmann G, 2012, LECT NOTES BUS INF P, V107, P110
   Bergmann G, 2010, LECT NOTES COMPUT SC, V6394, P76
   Biermann E., 2010, Electron. Commun. Eur. Assoc. Softw. Sci. Technol, V26, P1, DOI [10.14279/tuj.eceasst.26.353, DOI 10.14279/TUJ.ECEASST.26.353]
   Bottoni P, 2000, LECT NOTES COMPUT SC, V1939, P294
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Cengarle MV, 2008, LECT NOTES COMPUT SC, V5065, P383, DOI 10.1007/978-3-540-68679-8_23
   Cunningham Ward., 2010, Portland Pattern Repository
   *ECL FDN, ECL MOD FRAM PROJ EM
   Eclipse Foundation, HENSH PROJ
   Eclipse Foundation, EMF COMP
   Ehrig H., 1976, Automata, languages, development, P425
   Engels G, 2003, LECT NOTES COMPUT SC, V2863, P356
   Greenyer J., TGG INTERPRETER
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Guerra E, 2013, SOFTW SYST MODEL, V12, P555, DOI 10.1007/s10270-011-0211-2
   Jürjens J, 2001, INT FED INFO PROC, V74, P489
   Jürjens J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P408, DOI 10.1109/ASE.2001.989840
   Jürjens J, 2001, INT FED INFO PROC, V65, P93
   Kehrer T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P163, DOI 10.1109/ASE.2011.6100050
   Kehrer T, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P638, DOI 10.1109/ICSM.2012.6405342
   Knapp A., 2002, Formal Techniques in Real-Time and Fault-Tolerant Systems. 7th International Symposium, FTRTFT 2002. Proceedings (Lecture Notes in Computer Science Vol.2469), P395
   Krause Christian, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P76, DOI 10.1007/978-3-642-38883-5_10
   Latella D., 1999, Formal Aspects of Computing, V11, P637, DOI 10.1007/s001659970003
   LBC, TOPC OP SOURC TOOLK
   LLANO MT, 2009, ICSEA 09, P39
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Massacci F, 2007, EIGHTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS - PROCEEDINGS, P278, DOI 10.1109/POLICY.2007.46
   Mens T., 2007, P 1 WORKSH REF TOOLS
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Menzel M, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P41, DOI 10.1109/ARES.2009.90
   Montrieux L., 2009, THESIS FACULTS U NOT
   *OBJ MAN GROUP, BUS PROC MOD NOT BPM
   Pnueli A, 1998, LECT NOTES COMPUT SC, V1384, P151, DOI 10.1007/BFb0054170
   Reder A, 2012, IEEE INT CONF AUTOM, P220, DOI 10.1145/2351676.2351707
   Rodríguez A, 2007, IEICE T INF SYST, VE90D, P745, DOI 10.1093/ietisy/e90-d.4.745
   RUHROTH T, 2014, INT WORKSH COMP VERS
   Salay R., 2007, P OOPSLA WORKSH ECL, P55
   Schmidt A, 2003, LECT NOTES COMPUT SC, V2863, P92
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Taentzer G., 1996, THESIS TU BERLIN
   Thein Than Tun, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P88, DOI 10.1109/SSIRI.2010.36
   Wendehals L., 2001, THESIS U PADERBORN
   Wolter C, 2008, MODELLIERUNG, P197
   WOLTER C, 2007, 5 BPM, V4714, P64, DOI DOI 10.1007/978-3-540-75183-0_5
NR 51
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2015
VL 17
IS 3
BP 267
EP 289
DI 10.1007/s10009-014-0364-8
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7NL
UT WOS:000355682600003
DA 2024-07-18
ER

PT J
AU Felderer, M
   Ramler, R
AF Felderer, Michael
   Ramler, Rudolf
TI A multiple case study on risk-based testing in industry
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Risk-based testing; Case study research; Multiple case study; Test
   process improvement; Test management; Risk management; Software testing;
   Software quality
AB In many development projects, testing has to be conducted under severe pressure due to limited resources and a challenging time schedule. Risk-based testing, which utilizes identified risks of the system for testing purposes, has a high potential to improve testing as it helps to optimize the allocation of resources and provides decision support for management. But for many organizations, the integration of a risk-based approach into established testing activities is a challenging task, and there are several options to do so. In this article, we analyze how risk is defined, assessed, and applied to support and improve testing activities in projects, products, and processes. We investigate these questions empirically by a multiple case study of currently applied risk-based testing activities in industry. The case study is based on three cases from different backgrounds, i.e., a test project in context of the extension of a large Web-based information system, product testing of a measurement and diagnostic equipment for the electrical power industry, as well as a test process of a system integrator of telecommunication solutions. By analyzing and comparing these different industrial cases, we draw conclusions on the state of risk-based testing and discuss possible improvements.
C1 [Felderer, Michael] Univ Innsbruck, A-6020 Innsbruck, Austria.
   [Ramler, Rudolf] Software Competence Ctr Hagenberg, Hagenberg, Austria.
C3 University of Innsbruck; Softwarepark Hagenberg
RP Felderer, M (corresponding author), Univ Innsbruck, A-6020 Innsbruck, Austria.
EM Michael.Felderer@uibk.ac.at
RI Felderer, Michael/AAF-4909-2020
OI Ramler, Rudolf/0000-0001-9903-6107
FU Austrian Science Fund (FWF) [P26194] Funding Source: Austrian Science
   Fund (FWF)
CR Amland S, 2000, J SYST SOFTWARE, V53, P287, DOI 10.1016/S0164-1212(00)00019-4
   [Anonymous], 2012, 7 INT C SOFTW ENG AD
   [Anonymous], 2008, AST, DOI DOI 10.1145/1370042.1370057
   [Anonymous], 2007, P MEREP07 PALM MALL
   [Anonymous], 2009, CASE STUDY RES DESIG
   Bach J., 1999, SOFTWARE TESTING QUA, V11, P99
   Cavano J. P., 1978, Proceedings of the Software Quality Assurance Workshop on Functional and Performance Issues, P133, DOI DOI 10.1145/800283.811113
   Chen Y, 2002, P 2002 C CTR ADV STU
   Felderer M, 2013, LECT NOTES BUS INF P, V133, P125
   Felderer M, 2013, LECT NOTES BUS INF P, V133, P10
   Felderer M, 2012, LECT NOTES BUS INF P, V94, P159
   ISO, 2013, 29119 ISOIECIEEE
   ISO, 2010, ISO/IEC/IEEE 24765:2010- Systems and Software EngineeringVocabulary
   Karolak DW., 1995, Software engineering risk management: A just-in-time approach
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Redmill F, 2005, SOFTW TEST VERIF REL, V15, P3, DOI 10.1002/stvr.310
   Redmill F, 2004, SOFTW TEST VERIF REL, V14, P3, DOI 10.1002/stvr.288
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Souza Ellen, 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P1032, DOI 10.1109/ITNG.2010.203
   Souza E., 2009, 10 LAT AM TEST WORKS, P1
   Standards Australia, 2004, 4360 ASNZS, V2004
   van Veenendaal E., 2012, PRACTICAL RISK BASED
   van Veenendaal E, 2012, TECHNICAL REPORT
   Yoon H, 2011, INT J SOFTW ENG KNOW, V21, P191, DOI 10.1142/S0218194011005220
NR 24
TC 19
Z9 21
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2014
VL 16
IS 5
BP 609
EP 625
DI 10.1007/s10009-014-0328-z
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HU
UT WOS:000209673300012
DA 2024-07-18
ER

PT J
AU Gadelha, MR
   Menezes, RS
   Cordeiro, LC
AF Gadelha, Mikhail R.
   Menezes, Rafael S.
   Cordeiro, Lucas C.
TI ESBMC 6.1: automated test case generation using bounded model checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Test case generation; Software testing; Bounded model checking;
   Statisfiability modulo theories
AB ESBMC is an SMT-based bounded model checker that provides a bit-precise verification of both C and C++ programs. Bounded model checking (BMC) was developed to provide faster results when finding property violations; BMC achieves this by limiting the number of loop unwindings and recursion depth. The technique, however, is unable to prove correctness unless all loops and recursions are fully unwound, which might not be possible for some programs (e.g., infinite loops). The version of ESBMC described here is designed to avoid the problem of guessing the number of unwindings, which leads to a property violation; it incrementally verifies the program, searching only for property violations. Once ESBMC has found a property violation, it produces a test suite that contains at least one test to expose a bug. ESBMC can correctly produce 312 test cases, which are confirmed by the test validator employed by Test-Comp 2019.
C1 [Gadelha, Mikhail R.] Sidia Inst Ciencia & Tecnol, Manaus, Amazonas, Brazil.
   [Menezes, Rafael S.] Univ Fed Amazonas, Elect & Informat Res Ctr, Manaus, Amazonas, Brazil.
   [Cordeiro, Lucas C.] Univ Manchester, Dept Comp Sci, Manchester, Lancs, England.
C3 Universidade Federal de Amazonas; University of Manchester
RP Gadelha, MR (corresponding author), Sidia Inst Ciencia & Tecnol, Manaus, Amazonas, Brazil.
EM mikhail.gadelha@sidia.com
RI Cordeiro, Lucas Carvalho/AAQ-9258-2021; Cordeiro, Lucas/IVV-3044-2023
OI Cordeiro, Lucas Carvalho/0000-0002-6235-4272; Sa Menezes,
   Rafael/0000-0002-6102-4343
CR Anielak G, 2015, INT J SOFTW TOOLS TE, V17, P339, DOI 10.1007/s10009-014-0317-2
   [Anonymous], P 2014 INT SPIN S MO
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Beyer D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P721, DOI 10.1145/2786805.2786867
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Brummayer R, 2009, LECT NOTES COMPUT SC, V5505, P174, DOI 10.1007/978-3-642-00768-2_16
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Cordeiro L, 2012, IEEE T SOFTWARE ENG, V38, P957, DOI 10.1109/TSE.2011.59
   CYTRON R, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P25, DOI 10.1145/75277.75280
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   HOOKER JN, 1993, J LOGIC PROGRAM, V15, P177, DOI 10.1016/0743-1066(93)90018-C
   Ivancic F, 2005, PR IEEE COMP DESIGN, P297, DOI 10.1109/ICCD.2005.77
   Kroening Daniel, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P557, DOI 10.1007/978-3-642-22110-1_44
   Levine John., 2009, FLEX BISON
   Lopes BrunoCardoso., 2014, GETTING STARTED LLVM
   Merz F, 2012, LECT NOTES COMPUT SC, V7152, P146, DOI 10.1007/978-3-642-27705-4_12
   Morse J, 2015, SOFTW SYST MODEL, V14, P65, DOI 10.1007/s10270-013-0366-0
   Neamtiu J. F. I., 2005, P INT WORKSH MIN SOF, V30, P1, DOI [DOI 10.1145/1082983.1083143, 10.1145/1082983.1083143]
   Niemetz Aina, 2014, J. Satisf. Boolean Model. Comput, V9, P53, DOI [10.3233/sat190101, DOI 10.3233/SAT190101]
   Petrov M, 2015, AUTOM CONTROL COMPUT, V49, P466, DOI 10.3103/S0146411615070172
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Rocha H, 2015, LECT NOTES COMPUT SC, V9276, P251, DOI 10.1007/978-3-319-22969-0_18
   Xu ZX, 2010, LECT NOTES COMPUT SC, V6415, P535, DOI 10.1007/978-3-642-16558-0_44
NR 27
TC 6
Z9 6
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2021
VL 23
IS 6
BP 857
EP 861
DI 10.1007/s10009-020-00571-2
EA MAY 2020
PG 5
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XU5UO
UT WOS:000533802500001
DA 2024-07-18
ER

PT J
AU Búr, M
   Szilágyi, G
   Vörös, A
   Varró, D
AF Bur, Marton
   Szilagyi, Gabor
   Voros, Andras
   Varro, Daniel
TI Distributed graph queries over models@run.time for runtime monitoring of
   cyber-physical systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime monitoring; Graph queries; Distributed model management; Data
   Distribution Service (DDS)
AB Smart cyber-physical systems (CPSs) have complex interaction with their environment which is rarely known in advance, and they heavily depend on intelligent data processing carried out over a heterogeneous and distributed computation platform with resource-constrained devices to monitor, manage and control autonomous behavior. First, we propose a distributed runtime model to capture the operational state and the context information of a smart CPS using directed, typed and attributed graphs as high-level knowledge representation. The runtime model is distributed among the participating nodes, and it is consistently kept up to date in a continuously evolving environment by a time-triggered model management protocol. Our runtime models offer a (domain-specific) model query and manipulation interface over the reliable communication middleware of the Data Distribution Service (DDS) standard widely used in the CPS domain. Then, we propose to carry out distributed runtime monitoring by capturing critical properties of interest in the form of graph queries, and design a distributed graph query evaluation algorithm for evaluating such graph queries over the distributed runtime model. As the key innovation, our (1) distributed runtime model extends existing publish-subscribe middleware (like DDS) used in real-time CPS applications by enabling the dynamic creation and deletion of graph nodes (without compile time limits). Moreover, (2) our distributed query evaluation extends existing graph query techniques by enabling query evaluation in a real-time, resource-constrained environment while still providing scalable performance. Our approach is illustrated, and an initial scalability evaluation is carried out on the MoDeS3 CPS demonstrator and the open Train Benchmark for graph queries.
C1 [Bur, Marton; Varro, Daniel] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
   [Szilagyi, Gabor; Voros, Andras; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Budapest, Hungary.
   [Voros, Andras; Varro, Daniel] MTA BME Lendulet Cyber Phys Syst Res Grp, Budapest, Hungary.
C3 McGill University; Budapest University of Technology & Economics;
   Budapest University of Technology & Economics
RP Vörös, A (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Budapest, Hungary.; Vörös, A (corresponding author), MTA BME Lendulet Cyber Phys Syst Res Grp, Budapest, Hungary.
EM marton.bur@mail.mcgill.ca; vori@mit.bme.hu; daniel.varro@mcgill.ca
RI Varro, Daniel/AAC-4234-2022
OI Varro, Daniel/0000-0002-8790-252X
FU Budapest University of Technology and Economics (BME); NSERC
   [RGPIN-04573-16]; McGill Engineering Doctoral Award (MEDA); MTA-BME
   Lendulet Cyber-Physical Systems Research Group; New National Excellence
   Program of the Ministry of Human Capacities [UNKP-17-2-I]; European
   Union; European Social Fund [EFOP-3.6.2-16-2017-00013]; National
   Research, Development and Innovation Fund (Thematic Excellence Program)
   [TUDFO/51757/2019-ITM]
FX Open access funding provided by Budapest University of Technology and
   Economics (BME). We are grateful forGabor Szarnyas for the help with
   running Train Benchmark, Zsolt Mazlo for the help with preparing the
   MoDeS3 platform for evaluation, Kristof Marussy for the insightful
   comments and the helpful feedback received from the anonymous reviewers.
   This paper is supported by the NSERC RGPIN-04573-16 project, the McGill
   Engineering Doctoral Award (MEDA), the MTA-BME Lendulet Cyber-Physical
   Systems Research Group and the UNKP-17-2-I New National Excellence
   Program of the Ministry of Human Capacities. The research has been
   supported by the European Union and co-financed by the European Social
   Fund (EFOP-3.6.2-16-2017-00013, Thematic Fundamental Research
   Collaborations Grounding Innovation in Informatics and
   Infocommunications) and by the National Research, Development and
   Innovation Fund (Thematic Excellence Program, TUDFO/51757/2019-ITM).
CR Abril M, 2008, TRANSPORT RES E-LOG, V44, P774, DOI 10.1016/j.tre.2007.04.001
   Alippi C, 2017, IEEE TETCI, V1, P61, DOI 10.1109/TETCI.2016.2641452
   [Anonymous], 2013, DECS WORKSH SAFECOMP
   Baresi L., 2010, FOSER
   Barringer Howard, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P68, DOI 10.1007/978-3-642-32759-9_9
   Bauer A, 2016, FORM METHOD SYST DES, V48, P46, DOI [10.1007/978-3-642-32759-9_10, 10.1007/s10703-016-0253-8]
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Bergmann Gabor, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P167, DOI 10.1007/978-3-642-21732-6_12
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Búr M, 2018, LECT NOTES COMPUT SC, V10802, P111, DOI 10.1007/978-3-319-89363-1_7
   Búr M, 2015, LECT NOTES COMPUT SC, V9151, P275, DOI 10.1007/978-3-319-21145-9_18
   CallidusCloud, 2018, OR
   Cengarle M., 2013, CHARACTERISTICS CAPA
   Cheng Betty H. C., 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P101
   CPSoS, 2015, CYB PHYS SYST SYST R
   David Istvan, 2018, Software & Systems Modeling, V17, P135, DOI 10.1007/s10270-016-0533-1
   de Lemos R, 2010, SOFTWARE ENG SELF AD
   Decker N., 2015, INT J SOFTW TOOLS TE, P1
   Desai A., 2015, APPROXIMATE SYNCHRON, P429
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Emery D., 2011, 9th World Congress on Railway Research, P22
   Fouquet Francois, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P87, DOI 10.1007/978-3-642-33666-9_7
   Gallagher B., 2006, AAAI FS, V6, P45
   Götz S, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P64, DOI 10.1109/SEAMS.2015.25
   Gonczy L., 2016, TRUSTWORTHY CYBER PH
   Group O.M, 2019, DDS EXTREMELY RES CO
   Hartmann T, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P80, DOI 10.1109/MODELS.2015.7338238
   Hartmann Thomas., 2017, P 29 INT C SOFTWARE, P596
   Havelund K, 2015, INT J SOFTW TOOLS TE, V17, P143, DOI 10.1007/s10009-014-0309-2
   Hewitt C., 1973, PROC 3 INT JOINT C A, P235, DOI 10.1145/359545.359563
   Horvath R, 2007, ECON BULL, V6
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P1367, DOI 10.1007/s10270-014-0405-5
   Joshi Yogi., 2017, Proceedings of the Symposium on Applied Computing - SAC'17, P1379, DOI DOI 10.1145/3019612.3019827
   Kang W, 2012, IEEE T IND INFORM, V8, P393, DOI 10.1109/TII.2012.2183878
   Kopetz H., 1993, Digest of Papers FTCS-23 The Twenty-Third International Symposium on Fault-Tolerant Computing, P524, DOI 10.1109/FTCS.1993.627355
   Krause C, 2014, LECT NOTES COMPUT SC, V8411, P325
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Lee EA, 2014, IEEE DES TEST, V31, P8, DOI 10.1109/MDAT.2014.2314600
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Maroti M., 2004, P 2 INT C EMB NETW S, P39, DOI DOI 10.1145/1031495.1031501
   Mazak A, 2016, CONF BUS INFORM, P104, DOI 10.1109/CBI.2016.20
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   Mitsch S., 2014, INT C RUNT VER
   Mitschke R, 2014, ACM SIGPLAN NOTICES, V49, P417, DOI [10.1145/2660193.2660242, 10.1145/2714064.2660242]
   Morin B., 2014, TECHNICAL REPORT
   Mostafa M, 2015, INT PARALL DISTRIB P, P494, DOI 10.1109/IPDPS.2015.95
   Nenzi L, 2015, LECT NOTES COMPUT SC, V9333, P21, DOI 10.1007/978-3-319-23820-3_2
   Ng KH, 2017, EMBEDDED COURTS: JUDICIAL DECISION-MAKING IN CHINA, P1
   Nielsen CB, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2794381
   Pardo-Castellote G., 2003, P 23 INT C DISTR COM
   Peters Martin, 2014, The Semantic Web: Trends and Challenges. 11th International Conference (ESWC 2014). Proceedings: LNCS 8465, P270, DOI 10.1007/978-3-319-07443-6_19
   Solis R, 2006, IEEE DECIS CONTR P, P2737
   Szárnyas G, 2018, SOFTW SYST MODEL, V17, P1365, DOI 10.1007/s10270-016-0571-8
   Szärnyas G, 2014, LECT NOTES COMPUT SC, V8767, P653, DOI 10.1007/978-3-319-11653-2_40
   Sztipanovits J., 2014, OPENMETA MODEL AND C, P235
   Sztipanovits J, 2012, P IEEE, V100, P29, DOI 10.1109/JPROC.2011.2161529
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
   Teich J., 1994, VLSI Signal Processing VII (Cat. No.94TH8008), P103, DOI 10.1109/VLSISP.1994.574735
   The Linux Foundation, 2018, JAN
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Varro D., 2018, Graph Transformation, Specifications, and Nets, P285
   Varro D., 2016, SOFTW SYST MODEL
   Varró G, 2015, SOFTW SYST MODEL, V14, P597, DOI 10.1007/s10270-013-0372-2
   Vogel T, 2014, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2555612
   Vörös A, 2018, LECT NOTES COMPUT SC, V10811, P460, DOI 10.1007/978-3-319-77935-5_31
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   Zhang B., 2015, HotStorage
   Zheng X, 2017, IEEE T MOBILE COMPUT, V16, P1787, DOI 10.1109/TMC.2016.2613529
NR 68
TC 5
Z9 5
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2020
VL 22
IS 1
SI SI
BP 79
EP 102
DI 10.1007/s10009-019-00531-5
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS8XB
UT WOS:000518590800006
OA hybrid
DA 2024-07-18
ER

PT J
AU Lange, T
   Neuhäusser, MR
   Noll, T
   Katoen, JP
AF Lange, Tim
   Neuhaeusser, Martin R.
   Noll, Thomas
   Katoen, Joost-Pieter
TI IC3 software model checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Program verification; Safety properties; Software model checking; IC3
AB In recent years, the inductive, incremental verification algorithm IC3 had a major impact on hardware model checking. Also for software model checking, a number of adaptations of Boolean IC3 and combinations with CEGAR and ART-based techniques have been developed. However, most of them exploit the peculiarities of software programs, such as the explicit representation of control flow, only to a limited extent. In this paper, we present an approach that supports this explicit representation in the form of control-flow automata, and integrates it with symbolic reasoning about the data state space of the program. By maintaining reachability information specifically for each control location, we arrive at a "two-dimensional" extension of IC3, which provides a true lifting from hardware to software model checking. Moreover, we address the problem of generalization in this setting, an essential feature to ensure the scalability of IC3. We introduce several improvements that range from efficient caching of generalizations over variable reductions to syntax-oriented generalization by means of weakest preconditions. Using a prototypical implementation, we evaluate our approach on a number of case studies, including a significant subset of the SV-COMP 2018 benchmarks, and compare the outcomes with results obtained from other IC3 software model checkers.
C1 [Lange, Tim; Noll, Thomas; Katoen, Joost-Pieter] Rhein Westfal TH Aachen, Aachen, Germany.
   [Neuhaeusser, Martin R.] Siemens AG, Munich, Germany.
C3 RWTH Aachen University; Siemens AG; Siemens Germany
RP Katoen, JP (corresponding author), Rhein Westfal TH Aachen, Aachen, Germany.
EM tim.lange@cs.rwth-aachen.de; martin.neuhaeusser@siemens.com;
   noll@cs.rwth-aachen.de; katoen@cs.rwth-aachen.de
RI Katoen, Joost-Pieter/O-3307-2018
OI Noll, Thomas/0000-0002-1865-1798
CR Albarghouthi A, 2012, LECT NOTES COMPUT SC, V7214, P157, DOI 10.1007/978-3-642-28756-5_12
   [Anonymous], 2013, LNCS
   [Anonymous], 2001, MODEL CHECKING
   Backeman P., 2018, FMCAD18
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Beyer D., 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P189
   Beyer Dirk, 2009, Proceedings of the 2009 9th International Conference Formal Methods in Computer-Aided Design (FMCAD), P25, DOI 10.1109/FMCAD.2009.5351147
   Beyer D, 2015, LECT NOTES COMPUT SC, V9232, P160, DOI 10.1007/978-3-319-23404-5_12
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P1
   Birgmeier J, 2014, LECT NOTES COMPUT SC, V8559, P831, DOI 10.1007/978-3-319-08867-9_55
   Bjorner Nikolaj, 2015, LPAR SHORT PAPERS, V35, P15
   Bradley A. R., 2007, The Calculus of Computation
   Bradley AR, 2007, FMCAD 2007: FORMAL METHODS IN COMPUTER AIDED DESIGN, PROCEEDINGS, P173, DOI 10.1109/.15
   Bradley AR, 2011, LECT NOTES COMPUT SC, V6538, P70, DOI 10.1007/978-3-642-18275-4_7
   Chockler H., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P135
   Cimatti Alessandro, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P277, DOI 10.1007/978-3-642-31424-7_23
   Cimatti A., 2014, P 20 INT C TOOLS ALG, P46
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   DIJKSTRA EW, 1975, COMMUN ACM, V18, P453, DOI [10.1145/360933.360975, 10.1145/390016.808417]
   Een N., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P125
   Günther H, 2016, LECT NOTES COMPUT SC, V9636, P954, DOI 10.1007/978-3-662-49674-9_69
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   Hassan Z, 2013, 2013 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P157
   Henzinger TA, 2002, ACM SIGPLAN NOTICES, V37, P58, DOI 10.1145/565816.503279
   Hoder Krystof, 2012, LNCS, P157, DOI [10.1007/978-3-642-31612-8_13, DOI 10.1007/978-3-642-31612-8_13, DOI 10.1007/978-3-642-31612-813]
   Ivrii A, 2015, PROCEEDINGS OF THE 15TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2015), P65, DOI 10.1109/FMCAD.2015.7542254
   Komuravelli A, 2014, LECT NOTES COMPUT SC, V8559, P17
   Komuravelli A, 2015, PROCEEDINGS OF THE 15TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2015), P89, DOI 10.1109/FMCAD.2015.7542257
   Kroening D, 2008, TEXTS THEOR COMPUT S, P1
   Lange B, 2018, FGF ST SM BUS ENTREP, P85, DOI 10.1007/978-3-319-65506-2_6
   Lange Tim, 2013, Hardware and Software: Verification and Testing. 9th International Haifa Verification Conference, HVC 2013. Proceedings: LNCS 8244, P44, DOI 10.1007/978-3-319-03077-7_4
   Lange T, 2015, PROCEEDINGS OF THE 15TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2015), P97, DOI 10.1109/FMCAD.2015.7542258
   Mertens T., 2016, THESIS
   Nielson F., 1999, Principles of Program Analysis
   Prinz F, 2016, THESIS
   Tonetta S, 2009, LECT NOTES COMPUT SC, V5850, P89, DOI 10.1007/978-3-642-05089-3_7
   Vojnar T., 2019, COMPETITION SOFTWARE
   Welp T, 2013, DES AUT TEST EUROPE, P791
NR 40
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2020
VL 22
IS 2
SI SI
BP 135
EP 161
DI 10.1007/s10009-019-00547-x
EA NOV 2019
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KX0GO
UT WOS:000494510600001
OA Green Published
DA 2024-07-18
ER

PT J
AU Leupolz, J
   Knapp, A
   Habermaier, A
   Reif, W
AF Leupolz, Johannes
   Knapp, Alexander
   Habermaier, Axel
   Reif, Wolfgang
TI Qualitative and quantitative analysis of safety-critical systems with
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT Joint 21st International Workshop on Formal Methods for Industrial
   Critical Systems (FMICS) / 16th International Workshop on Automated
   Verification of Critical Systems (AVoCS)
CY SEP 26-28, 2016
CL Pisa, ITALY
SP European Res Consortium Informat & Math, Formal Methods Europe, Springer Intl Publishing AG
DE Safety analysis; Model checking; Quantitative analysis; Executable
   models; Formal methods
ID MODEL CHECKER
AB We give an overview of the (pronounced "safety sharp") framework for rigorous, model-based analysis of safety-critical systems. We introduce 's expressive modeling language based on the programming language, showing how 's fault modeling and flexible model composition capabilities can be used to model a case study from the transportation sector with multiple design variants. A formal semantics for executable probabilistic models is given. Fully automated qualitative and quantitative safety analyses are conducted for the case study using algorithms of the model checkers LTSmin and MRMC. The results of the quantitative analyses are discussed in comparison with results obtained by using traditional techniques.
C1 [Leupolz, Johannes; Knapp, Alexander; Habermaier, Axel; Reif, Wolfgang] Univ Augsburg, Inst Software & Syst Engn, Augsburg, Germany.
C3 University of Augsburg
RP Leupolz, J (corresponding author), Univ Augsburg, Inst Software & Syst Engn, Augsburg, Germany.
EM leupolz@isse.de; knapp@isse.de; habermaier@isse.de; reif@isse.de
OI Reif, Wolfgang/0000-0002-4086-0043
CR Andrews T, 2004, LECT NOTES COMPUT SC, V3114, P484
   [Anonymous], 2012, 23271 ISOIEC
   [Anonymous], 2002, CAV, DOI DOI 10.1007/3-540-45657-0
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baier C, 2004, SECOND ACM AND IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR CO-DESIGN, PROCEEDINGS, P57, DOI 10.1109/MEMCOD.2004.1459815
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Batteux M, 2013, IEEE INTL CONF IND I, P741, DOI 10.1109/INDIN.2013.6622976
   Bozzano M, 2009, LECT NOTES COMPUT SC, V5775, P173, DOI 10.1007/978-3-642-04468-7_15
   Butcher J., 2003, The Numerical Analysis of Ordinary Differential Equations
   Diez D.M., 2019, OPENINTRO STAT, VFourth
   Gretz F, 2014, PERFORM EVALUATION, V73, P110, DOI 10.1016/j.peva.2013.11.004
   Habermaier A., FAULT AWARE MODELING, P97
   Habermaier A., THESIS
   Habermaier A., UNIFIED SIMULATION V, P150
   Habermaier A, 2012, RAILWAY SAFETY, RELIABILITY, AND SECURITY: TECHNOLOGIES AND SYSTEMS ENGINEERING, P65, DOI 10.4018/978-1-4666-1643-1.ch004
   Habermaier A, 2015, 2015 IEEE NINTH INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS WORKSHOPS (SASOW), P128, DOI 10.1109/SASOW.2015.26
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Holzmann G. J., 2004, SPIN MODEL CHECKER
   ISO, 2006, 23270 ISOIEC
   ISO, 2010, 24765 ISO
   Kant Gijs, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P692, DOI 10.1007/978-3-662-46681-0_61
   Katoen JP, 2011, PERFORM EVALUATION, V68, P90, DOI 10.1016/j.peva.2010.04.001
   Kirsch C., 2007, HDB REAL TIME EMBEDD
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Laarman Alfons, 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P247
   Leveson NG, 2011, ENG SYST, P1
   Lipaczewski M., HIGH ASSURANCE SYSTE, P159
   Noll T, 2015, COMM COM INF SC, V476, P17, DOI 10.1007/978-3-319-17581-2_2
   OMG, 2015, OMG SYST MOD LANG
   Ortmeier R., 2002, Computer Safety, Reliability and Security. 21st International Conference, SAFECOMP 2002. Proceedings (Lecture Notes in Computer Science Vol.2434), P296
   Parker D., 2002, THESIS
   ter Beek M. H., 2016, LECT NOTES COMPUTER, V9933
   Vesely W., TECH REP
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
NR 34
TC 1
Z9 1
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2018
VL 20
IS 4
SI SI
BP 359
EP 377
DI 10.1007/s10009-017-0464-3
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GL5XP
UT WOS:000437248300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kwiatkowska, M
   Parker, D
   Wiltsche, C
AF Kwiatkowska, Marta
   Parker, David
   Wiltsche, Clemens
TI PRISM-games: verification and strategy synthesis for stochastic
   multi-player games with multiple objectives
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal verification; Quantitative verification; Stochastic games
ID MODEL CHECKING; SYSTEMS
AB PRISM-games is a tool for modelling, verification and strategy synthesis for stochastic multi-player games. These allow models to incorporate both probability, to represent uncertainty, unreliability or randomisation, and game-theoretic aspects, for systems where different entities have opposing objectives. Applications include autonomous transport, security protocols, energy management systems and many more. We provide a detailed overview of the PRISM-games tool, including its modelling and property specification formalisms, and its underlying architecture and implementation. In particular, we discuss some of its key features, which include multi-objective and compositional approaches to verification and strategy synthesis. We also discuss the scalability and efficiency of the tool and give an overview of some of the case studies to which it has been applied.
C1 [Kwiatkowska, Marta; Wiltsche, Clemens] Univ Oxford, Dept Comp Sci, Oxford, England.
   [Parker, David] Univ Birmingham, Sch Comp Sci, Birmingham, W Midlands, England.
C3 University of Oxford; University of Birmingham
RP Parker, D (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham, W Midlands, England.
EM d.a.parker@cs.bham.ac.uk
RI Parker, David/AAD-5939-2022; som, nie/JFK-6681-2023
OI Parker, David/0000-0003-4137-8862; 
FU ERC Advanced Grant VERIWARE; EPSRC Mobile Autonomy Programme Grant;
   EPSRC [EP/M019918/1, EP/R007128/1] Funding Source: UKRI
FX This work has been supported by the ERC Advanced Grant VERIWARE and the
   EPSRC Mobile Autonomy Programme Grant. The authors also gratefully
   acknowledge helpful feedback from the anonymous reviewers.
CR Alur R, 2002, J ACM, V49, P672, DOI 10.1145/585265.585270
   Alur R., 1996, P 11 ANN IEEE S LOG, P207
   [Anonymous], 2015, P ACMIEEE 6 INT C CY, P70
   Aslanyan Z, 2016, P IEEE CSFW, P105, DOI 10.1109/CSF.2016.15
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Basset Nicolas, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P256, DOI 10.1007/978-3-662-46681-0_22
   Basset Nicolas, 2014, CONCUR 2014 - Concurrency Theory. 25th International Conference, CONCUR 2014. Proceedings: LNCS 8704, P173, DOI 10.1007/978-3-662-44584-6_13
   Basset N., 2017, INF COMPUT
   Brazdil Tomas, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P181, DOI 10.1007/978-3-662-46681-0_12
   Brenguier Romain, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P890, DOI 10.1007/978-3-642-39799-8_63
   Cámara J, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P155, DOI 10.1145/2593929.2593933
   Chatterjee K., 2010, LNCS, P665
   Chen T, 2013, LECT NOTES COMPUT SC, V8087, P266, DOI 10.1007/978-3-642-40313-2_25
   Chen TL, 2013, FORM METHOD SYST DES, V43, P61, DOI 10.1007/s10703-013-0183-7
   Chen T, 2013, LECT NOTES COMPUT SC, V7795, P185, DOI 10.1007/978-3-642-36742-7_13
   Chen TL, 2011, LECT NOTES ARTIF INT, V6814, P190, DOI 10.1007/978-3-642-22359-4_14
   Cheng C., 2011, P 17 INT C TOOLS ALG, P258
   Condon A, 1990, DIMACS SERIES DISCRE, V13, P51
   David Alexandre, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P206, DOI 10.1007/978-3-662-46681-0_16
   De Alfaro L., 1997, THESIS
   Dehnert C., 2017, P 29 INT C COMP AID
   DESHPANDE T, 2014, P EUR DEP COMP C EDC, P226, DOI DOI 10.1109/EDCC.2014.37
   Etessami K., 2008, LMCS, V4, P1
   Forejt V, 2011, LECT NOTES COMPUT SC, V6659, P53, DOI 10.1007/978-3-642-21455-4_3
   Glazier TJ, 2015, 2015 IEEE NINTH INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS WORKSHOPS (SASOW), P55, DOI 10.1109/SASOW.2015.14
   Hahn E. M., 2014, P 19 INT S FORM METH, P312
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hartmanns Arnd, 2014, LNCS, V8413, P593
   Huber Birkett, 2000, J EUR MATH SOC, V2, P179
   Katoen JP, 2011, PERFORM EVALUATION, V68, P90, DOI 10.1016/j.peva.2010.04.001
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M., 2016, LNCS
   Kwiatkowska M, 2013, INFORM COMPUT, V232, P38, DOI 10.1016/j.ic.2013.10.001
   McIver A, 2007, ACM T COMPUT LOG, V8, DOI 10.1145/1182613.1182616
   Segala R., 1995, THESIS
   SHAPLEY LS, 1953, P NATL ACAD SCI USA, V39, P1095, DOI 10.1073/pnas.39.10.1095
   Simaitis A., 2014, THESIS
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Svorenová M, 2016, EUR J CONTROL, V30, P15, DOI 10.1016/j.ejcon.2016.04.009
   Taolue Chen, 2013, Quantitative Evaluation of Systems. 10th International Conference, QEST 2013. Proceedings: LNCS 8054, P322, DOI 10.1007/978-3-642-40196-1_28
   Toumi A, 2015, LECT NOTES COMPUT SC, V9399, P583, DOI 10.1007/978-3-319-25150-9_34
   Ujma M., 2015, THESIS
   WEIBEL C, 2007, THESIS
   Wiltsche C., 2015, THESIS U OXFORD
NR 44
TC 26
Z9 28
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2018
VL 20
IS 2
SI SI
BP 195
EP 210
DI 10.1007/s10009-017-0476-z
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA6HE
UT WOS:000428433000006
PM 31258390
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Fedyukovich, G
   Sery, O
   Sharygina, N
AF Fedyukovich, Grigory
   Sery, Ondrej
   Sharygina, Natasha
TI Flexible SAT-based framework for incremental bounded upgrade checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
ID MODEL CHECKING; RESOLUTION
AB Software undergoes a myriad of minor changes along its lifecycle. Each evolved transformation of a program is expected to preserve important correctness and security properties, in particular confirmed by a software model checking tool. However, it may be extremely resource- and time-consuming to repeat entire model checking for each new version of the program. As a possible solution to this problem, we propose to conduct incremental analysis of a new program version by reusing efforts of bounded model checking of the previous program version. Our approach maintains over-approximations of the bounded program behaviors by means of function summaries derived using Craig interpolation. For each new version, these summaries are used to localize the scope of model checking. A benefit of this approach is that the cost of the upgrade checking depends on the change impact between the two versions. If the change impact is relatively small, then the incremental check can drastically outperform the model checking the new program version from scratch. We implemented the approach in scope of the SAT-based bounded model checker for C, eVolCheck. The evaluation of eVolCheck confirms that incremental changes can be verified efficiently for different classes of industrial programs.
C1 [Fedyukovich, Grigory; Sery, Ondrej; Sharygina, Natasha] Univ Svizzera Italiana, Fac Informat, Formal Verificat Lab, Lugano, Switzerland.
   [Sery, Ondrej] Charles Univ Prague, Fac Math & Phys, D3S, Prague, Czech Republic.
C3 Universita della Svizzera Italiana; Charles University Prague
RP Fedyukovich, G (corresponding author), Univ Svizzera Italiana, Fac Informat, Formal Verificat Lab, Lugano, Switzerland.
EM grigory.fedyukovich@gmail.com; ondrej.sery@d3s.mff.cuni.cz;
   natasha.sharygina@usi.ch
OI Fedyukovich, Grigory/0000-0003-1727-4043; Sharygina,
   Natasha/0000-0002-8872-4913
CR Albarghouthi A, 2012, LECT NOTES COMPUT SC, V7148, P39, DOI 10.1007/978-3-642-27940-9_4
   [Anonymous], 2012, P INT S AUT TECHN VE
   Backes John, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P99, DOI 10.1007/978-3-642-39176-7_7
   Bar-Ilan Omer, 2008, Hardware and Software: Verification and Testing. Proceedings 4th International Haifa Verification Conference, HVC 2008, P114
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Bruttomesso R, 2010, ICCAD-IEEE ACM INT, P770, DOI 10.1109/ICCAD.2010.5654297
   Bruttomesso R, 2010, LECT NOTES COMPUT SC, V6015, P150, DOI 10.1007/978-3-642-12002-2_12
   Clarke E., 2003, Proceedings 2003. Design Automation Conference (IEEE Cat. No.03CH37451), P368
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Cotton S, 2010, LECT NOTES COMPUT SC, V6175, P306, DOI 10.1007/978-3-642-14186-7_26
   Craig W., 1957, J SYMBOLIC LOGIC, V22, P269
   CYTRON R, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P25, DOI 10.1145/75277.75280
   D'Silva V, 2010, LECT NOTES COMPUT SC, V5944, P129, DOI 10.1007/978-3-642-11319-2_12
   Donaldson AF, 2010, LECT NOTES COMPUT SC, V6015, P280, DOI 10.1007/978-3-642-12002-2_24
   Fedyukovich G., 2014, LNCS, V8941, P96
   Fedyukovich G, 2015, LECT NOTES COMPUT SC, V9033, P186, DOI 10.1007/978-3-662-46675-9_13
   Fedyukovich G, 2014, LECT NOTES COMPUT SC, V8430, P300, DOI 10.1007/978-3-319-06200-6_25
   Fedyukovich G, 2013, LECT NOTES COMPUT SC, V7795, P292, DOI 10.1007/978-3-642-36742-7_21
   Fontaine P, 2011, LECT NOTES ARTIF INT, V6803, P237, DOI 10.1007/978-3-642-22438-6_19
   Godefroid P., 2011, LNCS, V6887
   Godlin B, 2009, DES AUT CON, P466
   Gurfinkel Arie, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P255, DOI 10.1007/978-3-319-02444-8_19
   Henzinger TA, 2004, ACM SIGPLAN NOTICES, V39, P232, DOI 10.1145/982962.964021
   Ivancic F, 2008, THEOR COMPUT SCI, V404, P256, DOI 10.1016/j.tcs.2008.03.013
   Kawaguchi M., 2010, MSRTR2010119
   Kroening D, 2013, FORM METHOD SYST DES, V42, P221, DOI 10.1007/s10703-012-0176-y
   Lahiri ShuvenduK., 2013, ACM SIGSOFT S FDN SO, P345, DOI DOI 10.1145/2491411.2491452
   McMillan KL, 2010, LECT NOTES COMPUT SC, V6174, P104, DOI 10.1007/978-3-642-14295-6_10
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2725, P1
   Merz F, 2012, LECT NOTES COMPUT SC, V7152, P146, DOI 10.1007/978-3-642-27705-4_12
   Person Suzette, 2008, P 16 INT S FDN SOFTW, P226, DOI [DOI 10.1145/1453101.1453131, 10.1145/1453101.1453131]
   Pudlak P, 1997, J SYMBOLIC LOGIC, V62, P981, DOI 10.2307/2275583
   Rollini S., 2010, HVC, P182
   Rollini Simone Fulvio, 2013, Logic for Programming, Artificial Intelligence and Reasoning. 19th International Conference, LPAR-19, Proceedings: LNCS 8312, P683, DOI 10.1007/978-3-642-45221-5_45
   Rollini Simone Fulvio, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P193, DOI 10.1007/978-3-642-31424-7_18
   Sery Ondrej, 2012, Hardware and Software: Verification and Testing. 7th International Haifa Verification Conference (HVC 2011). Revised Selected Papers, P160, DOI 10.1007/978-3-642-34188-5_15
   Sery O, 2012, PROCEEDINGS OF THE 12TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2012), P114
   Sharygina N, 2005, LECT NOTES COMPUT SC, V3582, P512
   Yang GW, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1059, DOI 10.1145/2568225.2568319
NR 40
TC 3
Z9 4
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2017
VL 19
IS 5
BP 517
EP 534
DI 10.1007/s10009-015-0405-y
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FF8VL
UT WOS:000409295800002
DA 2024-07-18
ER

PT J
AU Ye, KF
   Woodcock, J
AF Ye, Kangfeng
   Woodcock, Jim
TI Model checking of state-rich formalism <i>Circus</i> by linking to
   <i>CSP</i> ∥ <i>B</i>
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Circus; CSP parallel to B; CSP; Z; B; ProB; Model checking; Buffer
ID TUTORIAL INTRODUCTION; UNIFYING THEORIES; SEMANTICS
AB Since state-rich formalism Circus is a combination of Z, CSP, refinement calculus and Dijkstra's guarded commands, its model checking is intrinsically more complicated and difficult than that of individual state-based languages or process algebras. Current solutions translate executable constructs of Circus programs to Java with JCSP, or translate them to CSP processes. Data aspects of Circus programs are expressed in the Java programming language or as CSP processes. Both of them have disadvantages. This work presents a new approach to model-checking Circus by linking it to CSP parallel to B; then we utilise ProB to model-check and animate the CSP parallel to B program. The most significant advantage of this approach is the direct mapping of the state part in Circus to Z and finally to B, which maintains the high-level abstraction of data specification. In addition, introduction of deadlock, invariant violation checking, LTL formula checking and animation is another key advantage. We present our approach, a link definition for a subset of Circus constructs, as well as a popular case study ( reactive buffer) to show the practical usability of our work. We conclude with a discussion of related work, advantages and potential limitations of our approach and future work.
C1 [Ye, Kangfeng; Woodcock, Jim] Univ York, Dept Comp Sci, York, N Yorkshire, England.
C3 University of York - UK
RP Ye, KF (corresponding author), Univ York, Dept Comp Sci, York, N Yorkshire, England.
EM ky582@york.ac.uk; jim.woodcock@york.ac.uk
OI Ye, Kangfeng/0000-0003-2460-7926; Woodcock, James/0000-0001-7955-2702
FU EPSRC [EP/E025366/1, EP/G061947/1, EP/H017461/1, EP/M025756/1] Funding
   Source: UKRI
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   [Anonymous], B LANG REF MAN VERS
   [Anonymous], 1997, The Theory and Practice of Concurrency
   [Anonymous], 1980, CALCULUS COMMUNICATI, DOI DOI 10.1007/3-540-10235-3
   [Anonymous], UNIFYING THEORIES PR
   [Anonymous], 2005, B BOOK ASSIGNING PRO
   [Anonymous], 1994, PRENTICE HALL INT SE
   [Anonymous], THESIS
   Beg A., 2010, P 8 INT C FRONT INF
   BERGSTRA JA, 1984, INFORM CONTROL, V60, P109, DOI 10.1016/S0019-9958(84)80025-X
   Butler M, 2005, LECT NOTES COMPUT SC, V3582, P221
   Carlsson M., 2015, SICSTUS PROLOG USERS
   Carrington D., 1990, Formal Description Techniques, II. Proceedings of the IFIP TC/WG 6.1 Second International Conference on Formal Descriptive Techniques for Distributed Systems and Communications Protocols, FORTE '89, P281
   Cavalcanti A., 2003, Formal Aspects of Computing, V15, P146, DOI 10.1007/s00165-003-0006-5
   Cavalcanti A, 2006, LECT NOTES COMPUT SC, V3167, P220
   Clarke EM, 1999, MODEL CHECKING, P1
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Eclipse, ECL PUBL LIC C 1 0
   Fischer C., 1998, COMBINE Z PROCESS AL, P5
   Fischer C., 1997, CSP OZ COMBINATION O
   Formal systems (Europe) Ltd, 2012, FDR2 US MAN
   Freitas A, 2006, LECT NOTES COMPUT SC, V4085, P115
   Galloway A., 1997, P 1 INT C FORM ENG M
   Hoare CAR., 1985, Communicating Sequential Processes
   ISO/IEC, 2002, INF TECHN Z FORM SPR
   JONES CB, 1991, PRENTICE HALL INT SE
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Lazic R, 1999, THESIS
   Leijen D., 2001, DIVISION MODULUS COM
   Leuschel M, 2005, LECT NOTES COMPUT SC, V3785, P345
   Oliveira MVM, 2014, LECT NOTES COMPUT SC, V8739, P39, DOI 10.1007/978-3-319-10181-1_3
   Mota A, 1998, LECT NOTES COMPUT SC, V1382, P205, DOI 10.1007/BFb0053592
   MVM Oliveira, 2005, THESIS
   Nogueira S, 2014, FORM ASP COMPUT, V26, P441, DOI 10.1007/s00165-012-0258-z
   Oliveira M, 2009, FORM ASP COMPUT, V21, P3, DOI 10.1007/s00165-007-0052-5
   Oliveira M, 2007, ELECTRON NOTES THEOR, V187, P107, DOI 10.1016/j.entcs.2006.08.047
   Oliveira M, 2005, INNOV SYST SOFTW ENG, V1, P125, DOI 10.1007/s11334-005-0014-0
   Oliveira Marcel, 2013, P A R R A C J W COMP
   Plagge D, 2007, LECT NOTES COMPUT SC, V4591, P480
   Roscoe A. W., 1996, Journal of Computer Security, V4, P27
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Scattergood  B., 1998, THESIS
   Schneider S, 2005, FORM ASP COMPUT, V17, P390, DOI 10.1007/s00165-005-0076-7
   Spivey J.M., 1992, PRENTICE HALL INT SE
   Welch PH, 2000, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOLS I-V, P51
   Woodcock J, 2005, LECT NOTES COMPUT SC, V3582, P237
   Woodcock J., 2002, ZB 2002: Formal Specification and Development in Z and B. 2nd International Conference of B and Z Users. Proceedings (Lecture Notes in Computer Science Vol.2272), P184
   Woodcock J, 2004, LECT NOTES COMPUT SC, V2999, P40
   Woodcock J., 2007, OPERATIONAL SEMANTIC
NR 49
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2017
VL 19
IS 1
BP 73
EP 96
DI 10.1007/s10009-015-0402-1
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ1AC
UT WOS:000392941500005
DA 2024-07-18
ER

PT J
AU Decker, N
   Leucker, M
   Thoma, D
AF Decker, Normann
   Leucker, Martin
   Thoma, Daniel
TI Monitoring modulo theories
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Monitoring; SMT; Monitor synthesis; First-order
   temporal logic
ID RUNTIME VERIFICATION; TEMPORAL ASSERTIONS
AB This paper considers a generic approach to run-time verification of temporal properties over first-order theories. This allows especially for the verification of multi-threaded, object-oriented systems. It presents a general framework lifting monitor synthesis procedures for propositional temporal logics to a temporal logic over structures within some first-order theory. To evaluate such specifications SMT solving and classical monitoring of propositional temporal properties are combined. The monitoring procedure was implemented for linear-time temporal logic based on the Z3 SMT solver and evaluated regarding runtime performance.
C1 [Decker, Normann; Leucker, Martin; Thoma, Daniel] Med Univ Lubeck, Inst Software Engn & Programming Languages, D-23538 Lubeck, Germany.
C3 University of Lubeck
RP Decker, N; Thoma, D (corresponding author), Med Univ Lubeck, Inst Software Engn & Programming Languages, D-23538 Lubeck, Germany.
EM decker@isp.uni-luebeck.de; leucker@isp.uni-luebeck.de;
   thoma@isp.uni-luebeck.de
OI Leucker, Martin/0000-0002-3696-9222
CR Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   Alur R, 2004, LECT NOTES COMPUT SC, V2988, P467
   [Anonymous], 2001, MODEL CHECKING
   Backasch R, 2013, ACM T DES AUTOMAT EL, V18, DOI 10.1145/2442087.2442089
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Barringer Howard, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P68, DOI 10.1007/978-3-642-32759-9_9
   Barringer H, 2007, LECT NOTES COMPUT SC, V4839, P111
   Basin D, 2010, LECT NOTES COMPUT SC, V6174, P1, DOI 10.1007/978-3-642-14295-6_1
   Bauer A, 2007, LECT NOTES COMPUT SC, V4839, P126
   Bauer A, 2006, LECT NOTES COMPUT SC, V4337, P260
   Bauer A, 2013, LECT NOTES COMPUT SC, V8174, P59, DOI 10.1007/978-3-642-40787-1_4
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Biere A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P60
   Broy M., 2005, Lecture Notes in Computer Science, V3472
   Chen F, 2005, LECT NOTES COMPUT SC, V3440, P546
   Chen F, 2009, LECT NOTES COMPUT SC, V5505, P246, DOI 10.1007/978-3-642-00768-2_23
   Colombo C, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P33, DOI 10.1109/SEFM.2009.13
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   Decker Normann, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P459, DOI 10.1007/978-3-642-38088-4_34
   Decker N, 2014, PROC INT SYMP SOFTW, P235, DOI 10.1109/ISSRE.2014.16
   Decker N, 2013, LECT NOTES COMPUT SC, V8174, P183, DOI 10.1007/978-3-642-40787-1_11
   Decker Normann., 2014, Tools and Algorithms for the Construction and Analysis of Systems, P341, DOI DOI 10.1007/978-3-642-54862-8
   Dong W, 2008, LECT NOTES COMPUT SC, V5311, P386, DOI 10.1007/978-3-540-88387-6_33
   Ebbinghaus H., 1994, Undergraduate texts in mathematics, V2
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Havelund K, 2015, INT J SOFTW TOOLS TE, V17, P143, DOI 10.1007/s10009-014-0309-2
   Havelund K, 2014, LECT NOTES COMPUT SC, V8803, P254, DOI 10.1007/978-3-662-45231-8_18
   Leucker M, 2007, LECT NOTES COMPUT SC, V4711, P291
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   Stolz V, 2006, ELECTRON NOTES THEOR, V144, P109, DOI 10.1016/j.entcs.2006.02.007
   Stolz V, 2010, J LOGIC COMPUT, V20, P743, DOI 10.1093/logcom/exn078
NR 33
TC 19
Z9 21
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2016
VL 18
IS 2
BP 205
EP 225
DI 10.1007/s10009-015-0380-3
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK5QQ
UT WOS:000374975200006
DA 2024-07-18
ER

PT J
AU von Essen, C
   Giannakopoulou, D
AF von Essen, Christian
   Giannakopoulou, Dimitra
TI Probabilistic verification and synthesis of the next generation airborne
   collision avoidance system
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Markov decision processes; Probabilistic verification; Probabilistic
   synthesis; Aircraft collision avoidance
ID CONFLICT-RESOLUTION
AB The next generation airborne collision avoidance system, ACAS X, departs from the traditional deterministic model on which the current system, TCAS, is based. To increase robustness, ACAS X relies on probabilistic models to represent the various sources of uncertainty. The work reported in this paper identifies verification challenges for ACAS X, and studies the applicability of probabilistic verification and synthesis techniques in addressing these challenges. Due to shortcomings of off-the-shelf probabilistic analysis tools, we developed a new framework, named VERICA (Verification for Collision Avoidance). VERICA is a combined probabilistic synthesis and verification framework that is custom designed for ACAS X and systems with similar characteristics. VERICA supports Java as a modeling language, is memory efficient, employs parallelization, and provides an interactive simulator that displays aircraft encounters and the corresponding ACAS X behavior. We describe the application of our framework to ACAS X, together with the results and recommendations that our analysis produced.
C1 [von Essen, Christian] Verimag, Grenoble, France.
   [Giannakopoulou, Dimitra] NASA Ames Res Ctr, Moffett Field, CA USA.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); National Aeronautics & Space
   Administration (NASA); NASA Ames Research Center
RP Giannakopoulou, D (corresponding author), NASA Ames Res Ctr, Moffett Field, CA USA.
EM vonessen.christian@gmail.com; dimitra.giannakopoulou@nasa.gov
CR [Anonymous], FORM ASP COMPUT, DOI DOI 10.1007/BF01211866)
   [Anonymous], 2015, DECISION MAKING UNCE
   Chatterjee K, 2006, LECT NOTES COMPUT SC, V3884, P325
   Forejt Vojtech, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P317, DOI 10.1007/978-3-642-33386-6_25
   Galdino AL, 2007, LECT NOTES COMPUT SC, V4576, P177, DOI 10.1007/978-3-540-73445-1_13
   Ghorbal K, 2014, J AEROSP INFORM SYST, V11, P702, DOI 10.2514/1.I010178
   Jeannin J.-B., 2015, TACAS, P21
   Julier SJ, 2004, P IEEE, V92, P401, DOI 10.1109/JPROC.2003.823141
   Katoen JP, 2011, PERFORM EVALUATION, V68, P90, DOI 10.1016/j.peva.2010.04.001
   Kochenderfer M, 2011, ATC371 MIT LINC LAB
   Kuchar James K., 2007, Lincoln Laboratory Journal, V16, P277
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Loos S. M., 2013, P 16 INT C HYBR SYST, P125, DOI DOI 10.1145/2461328.2461350
   Lygeros J, 1997, IEEE DECIS CONTR P, P1829, DOI 10.1109/CDC.1997.657846
   Platzer A, 2009, LECT NOTES COMPUT SC, V5850, P547, DOI 10.1007/978-3-642-05089-3_35
   Rennen G, 2011, INFORMS J COMPUT, V23, P493, DOI 10.1287/ijoc.1100.0419
   Tomlin C, 1998, IEEE T AUTOMAT CONTR, V43, P509, DOI 10.1109/9.664154
   von Essen C, 2014, LECT NOTES COMPUTER, P620, DOI DOI 10.1007/978-3-642-54862-8_54
   von Essen C., 2014, THESIS U J FOURIER G
   Zuliani P, 2013, FORM METHOD SYST DES, V43, P338, DOI 10.1007/s10703-013-0195-3
NR 20
TC 4
Z9 5
U1 2
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2016
VL 18
IS 2
BP 227
EP 243
DI 10.1007/s10009-015-0388-8
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK5QQ
UT WOS:000374975200007
DA 2024-07-18
ER

PT J
AU Morse, J
   Cordeiro, L
   Nicole, D
   Fischer, B
AF Morse, Jeremy
   Cordeiro, Lucas
   Nicole, Denis
   Fischer, Bernd
TI Applying symbolic bounded model checking to the 2012 RERS greybox
   challenge
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Program verification; Symbolic bounded model checking; Verification
   competition
ID LTL
AB We describe the application of ESBMC, a symbolic bounded model checker for C programs, to the 2012 RERS greybox challenge. We checked the reachability properties via reachability of the error labels, and the behavioral properties via a bounded LTL model checking approach. Our approach could solve about 700 properties for the small and medium problems from the offline phase, and scored overall about 5,000 marks but still ranked last in the competition.
C1 [Morse, Jeremy] Univ Bristol, Dept Comp Sci, Bristol, Avon, England.
   [Cordeiro, Lucas] Univ Fed Amazonas, Elect & Informat Res Ctr, Manaus, Amazonas, Brazil.
   [Nicole, Denis] Univ Southampton, Elect & Comp Sci, Southampton, Hants, England.
   [Fischer, Bernd] Univ Stellenbosch, Div Comp Sci, ZA-7600 Stellenbosch, South Africa.
C3 University of Bristol; Universidade Federal de Amazonas; University of
   Southampton; Stellenbosch University
RP Fischer, B (corresponding author), Univ Stellenbosch, Div Comp Sci, ZA-7600 Stellenbosch, South Africa.
EM jeremy.morse@bristol.ac.uk; lucascordeiro@ufam.edu.br;
   dan@ecs.soton.ac.uk; bfischer@cs.sun.ac.za
RI Cordeiro, Lucas Carvalho/AAQ-9258-2021; Cordeiro, Lucas/IVV-3044-2023
OI Cordeiro, Lucas Carvalho/0000-0002-6235-4272; Fischer,
   Bernd/0000-0002-1815-218X
CR Babiak T, 2012, LECT NOTES COMPUT SC, V7214, P95, DOI 10.1007/978-3-642-28756-5_8
   Bauer A, 2010, FRONT ARTIF INTEL AP, V215, P881, DOI 10.3233/978-1-60750-606-5-881
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   Brummayer R, 2009, LECT NOTES COMPUT SC, V5505, P174, DOI 10.1007/978-3-642-00768-2_16
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke EM, 2007, J UNIVERS COMPUT SCI, V13, P639
   Cordeiro L., 2012, LNCS, V7214, P533
   Cordeiro L, 2012, IEEE T SOFTWARE ENG, V38, P957, DOI 10.1109/TSE.2011.59
   Cordeiro L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P331, DOI 10.1145/1985793.1985839
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Gastin P, 2001, LECT NOTES COMPUT SC, V2102, P53
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Kupferman O, 2001, FORM METHOD SYST DES, V19, P291, DOI 10.1023/A:1011254632723
   Lamport L., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P657
   Ming Chai, 2012, Proceedings of the 2012 International Conference on Computer Science and Information Processing (CSIP), P567, DOI 10.1109/CSIP.2012.6308917
   Morse J., 2013, J SOFTW SYST MODEL
   Morse J, 2011, LECT NOTES COMPUT SC, V7041, P302, DOI 10.1007/978-3-642-24690-6_21
   Pnueli A, 1977, TEMPORAL LOGIC PROGR, P46, DOI 10. 1109/SFCS. 1977. 32
   Steffen B, 2014, INT J SOFTW TOOLS TE, V16, P465, DOI 10.1007/s10009-014-0336-z
   Visser W., 2012, COMMUNICATION
   Xian Li, 2011, 2011 Tenth International Symposium on Autonomous Decentralized Systems (ISADS), P86, DOI 10.1109/ISADS.2011.18
NR 21
TC 7
Z9 7
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2014
VL 16
IS 5
BP 519
EP 529
DI 10.1007/s10009-014-0335-0
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HU
UT WOS:000209673300006
DA 2024-07-18
ER

PT J
AU Fang, HX
   Shi, JQ
   Zhu, HB
   Guo, J
   Larsen, KG
   David, A
AF Fang, Huixing
   Shi, Jianqi
   Zhu, Huibiao
   Guo, Jian
   Larsen, Kim Guldstrand
   David, Alexandre
TI Formal verification and simulation for platform screen doors and
   collision avoidance in subway control systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Hybrid systems; Formal verification and simulation; SpaceEx/PHAVer;
   Matlab Simulink/Stateflow; Subway control systems; Feedback-advancement
   verification
ID HYBRID SYSTEMS
AB For hybrid systems, hybrid automata-based tools are capable of verification, while Matlab Simulink/Stateflow is proficient in simulation. We propose a co-verification procedure, in which the verification tool SpaceEx/PHAVer and simulation tool Matlab are integrated to analyze and verify hybrid systems. For the application of this procedure, a platform screen door system (PSDS, a subsystem of the subway control system), is modeled with hybrid automata and Simulink/Stateflow charts, respectively. The models of PSDS are simulated by Matlab and verified by SpaceEx/PHAVer. The simulation and verification results indicate that the sandwiched situation can be avoided under time interval conditions. We improve the model with four trains and four stations on a subway line and analyze the urgent control scenario for the safety distance requirement. In this paper, the Simulink/Stateflowmodel is a refinement of the SpaceEx/PHAVer model, which is closer to a final implementation. Moreover, the two models are complementary for some features (e.g., visualization of simulation, correctness proving by verification), stressing different aspects of the overall system and permitting complementary analysis techniques, i.e., verification versus simulation. We conclude that this integration procedure is competent in verifying subway control systems.
C1 [Fang, Huixing; Shi, Jianqi; Zhu, Huibiao; Guo, Jian] E China Normal Univ, Inst Software Engn, Shanghai Key Lab Trustworthy Comp, Shanghai 200062, Peoples R China.
   [Larsen, Kim Guldstrand; David, Alexandre] Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
C3 East China Normal University; Aalborg University
RP Guo, J (corresponding author), E China Normal Univ, Inst Software Engn, Shanghai Key Lab Trustworthy Comp, Shanghai 200062, Peoples R China.
EM fang.huixing@gmail.com; jguo@sei.ecnu.edu.cn
OI Guldstrand Larsen, Kim/0000-0002-5953-3384; Fang,
   Huixing/0000-0003-4980-9452
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   ABRIAL JR, 1991, LECT NOTES COMPUT SC, V552, P398
   Accellera Orgnization, 2003, PROP SPEC LANG REF
   Agrawal A., 2004, ELECTRON NOTES THEOR, V109, P43
   Alur R, 1996, IEEE T SOFTWARE ENG, V22, P181, DOI 10.1109/32.489079
   [Anonymous], 1993, Hybrid Systems, DOI [DOI 10.1007/3-540-57318-6_30, DOI 10.1007/3-540, DOI 10.1007/3-540-57318-6, 10.1007/3-540-57318-6_30]
   [Anonymous], 2005, EMSOFT 2005
   [Anonymous], 2005, B BOOK ASSIGNING PRO
   Asarin E, 2000, LECT NOTES COMPUT SC, V1790, P20
   Asarin E, 2010, LECT NOTES COMPUT SC, V6252, P37
   Bagnara R, 2002, LECT NOTES COMPUT SC, V2477, P213
   Bloem R, 2010, LECT NOTES COMPUT SC, V6174, P425, DOI 10.1007/978-3-642-14295-6_37
   Bonnett C.F., 2005, PRACTICAL RAILWAY EN
   ClearSy, 2013, TOOLS APPL CLEARSY
   Doyen L, 2005, LECT NOTES COMPUT SC, V3829, P144
   Ferrari A, 2013, SCI COMPUT PROGRAM, V78, P828, DOI 10.1016/j.scico.2012.04.003
   Frehse G, 2005, LECT NOTES COMPUT SC, V3414, P258
   Frehse G., 2006, LANGUAGE OVERVIEW PH
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Girard A, 2008, LECT NOTES COMPUT SC, V4981, P215
   GRANLUND T, 2001, GNU MULTIPLE PRECISI
   Halbwachs N., 1994, LECT NOTES COMPUTER, V864, P223
   Hamon G., 2007, International Journal on Software Tools for Technology Transfer, V9, P447, DOI 10.1007/s10009-007-0049-7
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Henzinger TA, 1998, J COMPUT SYST SCI, V57, P94, DOI 10.1006/jcss.1998.1581
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   Henzinger TA, 1997, LECT NOTES COMPUT SC, V1254, P460, DOI 10.1007/s100090050008
   Jacky J., 1996, The way of Z: Practical Programming with Formal Methods
   Jo H.-J., 2008, DEV FORMAL METHOD AP
   Kurzhanski AB, 2000, LECT NOTES COMPUT SC, V1790, P202
   Le Guernic C, 2010, NONLINEAR ANAL-HYBRI, V4, P250, DOI 10.1016/j.nahs.2009.03.002
   Lecomte T, 2008, LECT NOTES COMPUT SC, V5014, P430, DOI 10.1007/978-3-540-68237-0_32
   Lecomte T, 2009, LECT NOTES COMPUT SC, V5825, P26, DOI 10.1007/978-3-642-04570-7_3
   Lynch N, 1996, INFORM COMPUT, V128, P1, DOI 10.1006/inco.1996.0060
   Marrone Stefano, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P231, DOI 10.1007/978-3-642-34032-1_23
   Nicollin X., 1993, Hybrid Systems, P149
   Ober I., 2006, International Journal on Software Tools for Technology Transfer, V8, P128, DOI 10.1007/s10009-005-0205-x
   Pinto A, 2005, LECT NOTES COMPUT SC, V3414, P526
   Qu L, 2012, TUNN UNDERGR SP TECH, V30, P1, DOI 10.1016/j.tust.2011.09.003
   Roh JS, 2009, TUNN UNDERGR SP TECH, V24, P447, DOI 10.1016/j.tust.2008.12.003
   Su W., 2012, LNCS, V7635
   Zhao L., 2013, J COMPUT INF SYST, V9, P915
NR 43
TC 6
Z9 7
U1 1
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2014
VL 16
IS 4
BP 339
EP 361
DI 10.1007/s10009-014-0318-1
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HT
UT WOS:000209673200002
DA 2024-07-18
ER

PT J
AU Schmidt, J
   Leuschel, M
AF Schmidt, Joshua
   Leuschel, Michael
TI SMT solving for the validation of B and Event-B models
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE SMT solving; Z3; Constraint logic programming; ProB; B-method; Event-B
ID SAT; CHECKING; SOLVERS; DPLL
AB ProB provides a constraint solver for the B-method written in Prolog and can make use of different backends based on SAT and SMT solving. One such backend translates B and Event-B operators to SMT-LIB using the Z3 solver. This translation uses quantifiers to axiomatize some operators, which are not well-handled by Z3. Several relational constraints such as the transitive closure are not supported by this translation. In this article, we substantially improve the translation to SMT-LIB by employing a more constructive rather than axiomatized style using Z3's lambda function. Thereby, we are able both to translate more B and Event-B operators to SMT-LIB and improve the overall performance. We further extend ProB's interface to Z3 to run different solver configurations in parallel. In addition, we present a direct implementation of SMT solving in Prolog using ProB's constraint solver as a theory solver. We hereby aim to combine the strengths of conflict-driven clause learning for identifying contradictions with ProB's constraint solver for finding solutions. We deem this implementation to be worthwhile since ProB's constraint solver is tailored toward solving B and Event-B constraints, and we herewith avoid the dependency on an external SMT solver. Empirical results show that the new integration of Z3 has improved performance of constraint solving and enables to solve several constraints which cannot be solved by ProB's constraint solver. Furthermore, the direct implementation of SMT solving in ProB shows benefits compared to ProB's constraint solver and the integration of Z3.
C1 [Schmidt, Joshua; Leuschel, Michael] Univ Dusseldorf, Inst Informat, Univ Str 1, D-40225 Dusseldorf, Germany.
C3 Heinrich Heine University Dusseldorf
RP Schmidt, J (corresponding author), Univ Dusseldorf, Inst Informat, Univ Str 1, D-40225 Dusseldorf, Germany.
EM joshua.schmidt@hhu.de; michael.leuschel@hhu.de
OI Schmidt, Joshua/0000-0001-8842-2993
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Abbassi A., 2019, COMPUTING RES REPOSI
   Abrial J.-R., 2002, ZB 2002: Formal Specification and Development in Z and B. 2nd International Conference of B and Z Users. Proceedings (Lecture Notes in Computer Science Vol.2272), P242
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Areces C., 2013, P SMT
   Armando A, 2000, LECT NOTES ARTIF INT, V1809, P97
   Atelier B, 2009, USER REFERENCE MANUA
   Audemard Gilles, 2012, Principles and Practice of Constraint Programming. Proceedings 18th International Conference, CP 2012, P118, DOI 10.1007/978-3-642-33558-7_11
   Audemard G., 2002, Automated Deduction - CADE-18. 18th International Conference on Automated Deduction. Proceedings (Lecture Notes in Artificial Intelligence Vol.2392), P195
   Audemard G, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P399
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Bellman R., 1958, Q APPL MATH, V16, P87
   Biere A, 2008, LECT NOTES COMPUT SC, V4996, P28, DOI 10.1007/978-3-540-79719-7_4
   Biere A, 2015, LECT NOTES COMPUT SC, V9340, P405, DOI 10.1007/978-3-319-24318-4_29
   Boniol F., 2014, CCIS, P1, DOI [10.1007/978-3-319-07512-9_1, DOI 10.1007/978-3-319-07512-9]
   BOUTE RT, 1992, ACM T PROGR LANG SYS, V14, P127, DOI 10.1145/128861.128862
   Bride H, 2016, LECT NOTES COMPUT SC, V9933, P39, DOI 10.1007/978-3-319-45943-1_3
   Carlsson M., 1997, Programming Languages: Implementations, Logics, and Programs. 9th International Symposium, PLILP'97, Including a Special Track on Declarative Programming Languages in Education. Proceedings, P191, DOI 10.1007/BFb0033845
   Carlsson M, 2012, THEOR PRACT LOG PROG, V12, P35, DOI 10.1017/S1471068411000482
   Davidson Ewan, 2020, Principles and Practice of Constraint Programming. 26th International Conference, CP 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12333), P143, DOI 10.1007/978-3-030-58475-7_9
   DAVIS M, 1960, J ACM, V7, P201, DOI 10.1145/321033.321034
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   de Moura Leonardo, 2009, Proceedings of the 2009 9th International Conference Formal Methods in Computer-Aided Design (FMCAD), P45, DOI 10.1109/FMCAD.2009.5351142
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Deharbe David, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P194, DOI 10.1007/978-3-642-30885-7_14
   Déharbe D, 2013, SCI COMPUT PROGRAM, V78, P310, DOI 10.1016/j.scico.2011.03.007
   Déharbe D, 2011, LECT NOTES ARTIF INT, V6803, P222, DOI 10.1007/978-3-642-22438-6_18
   Déharbe D, 2010, LECT NOTES COMPUT SC, V5977, P217, DOI 10.1007/978-3-642-11811-1_17
   DELATOUR TB, 1992, J SYMB COMPUT, V14, P283, DOI 10.1016/0747-7171(92)90009-S
   Dunkelau J., 2020, LNCS, V12071, P107, DOI [10.1007/978-3-030-48077-68, DOI 10.1007/978-3-030-48077-68]
   El Ghazi Aboubakr Achraf, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P133, DOI 10.1007/978-3-642-21437-0_12
   Ford. L. R, 1956, NETWORK FLOW THEORY
   Ganzinger H, 2004, LECT NOTES COMPUT SC, V3114, P175, DOI 10.1007/978-3-540-27813-9_14
   Hansen Dominik, 2012, Integrated Formal Methods. Proceedings 9th International Conference, IFM 2012, P24, DOI 10.1007/978-3-642-30729-4_3
   Hansen D., 2014, ABZ 2014 CCIS, V433, P66, DOI DOI 10.1007/978-3-319-07512-9
   Hansen D, 2014, LECT NOTES COMPUT SC, V8477, P40, DOI 10.1007/978-3-662-43652-3_4
   Healy A, 2017, ELECTRON P THEOR COM, P20, DOI 10.4204/EPTCS.240.2
   Howe JM, 2010, LECT NOTES COMPUT SC, V6009, P165, DOI 10.1007/978-3-642-12251-4_13
   Jovanovic D, 2013, 2013 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P173, DOI 10.1109/FMCAD.2013.7027033
   Junttila T, 2007, SIAM PROC S, P135
   Konnov I, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360549
   Krings S., 2017, THESIS U DUSSELDORF
   Krings S, 2018, SCI COMPUT PROGRAM, V158, P41, DOI 10.1016/j.scico.2017.08.013
   Krings S, 2016, LECT NOTES COMPUT SC, V9681, P361, DOI 10.1007/978-3-319-33693-0_23
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Larsen K. G., 1999, Nordic Journal of Computing, V6, P271
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Leuschel M., 2014, FORMAL METHODS APPL, P427, DOI 10.1002/9781119002727.ch14
   Leuschel M, 2020, LECT NOTES COMPUT SC, V12546, P63, DOI 10.1007/978-3-030-63461-2_4
   LUKS EM, 1982, J COMPUT SYST SCI, V25, P42, DOI 10.1016/0022-0000(82)90009-5
   Mann M., 2020, COMPUTING RES REPOSI
   Marques-Silva J, 2009, FRONT ARTIF INTEL AP, V185, P131, DOI 10.3233/978-1-58603-929-5-131
   Mashkoor A, 2016, LECT NOTES COMPUT SC, V9675, P329, DOI 10.1007/978-3-319-33600-8_29
   Mery D, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2406336.2406351
   Moller J, 1999, LECT NOTES COMPUT SC, V1683, P111
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Nieuwenhuis R, 2005, LECT NOTES COMPUT SC, V3452, P36
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Nonnengart A., 1998, Automated Deduction - CADE-15. 15th International Conference on Automated Deduction. Proceedings, P397, DOI 10.1007/BFb0054274
   Pipatsrisawat K, 2007, LECT NOTES COMPUT SC, V4501, P294
   Plagge Daniel, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P372, DOI 10.1007/978-3-642-32759-9_31
   Schmidt J, 2021, LECT NOTES COMPUT SC, V12863, P107, DOI 10.1007/978-3-030-85248-1_7
   Silva JPM, 1996, IEEE IC CAD, P220, DOI 10.1109/ICCAD.1996.569607
   Hoang TS, 2016, LECT NOTES COMPUT SC, V9675, P360, DOI 10.1007/978-3-319-33600-8_31
   Tinelli C, 2002, LECT NOTES ARTIF INT, V2424, P308, DOI 10.1007/3-540-45757-7_26
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Tseitin G., 1983, AUTOMATION REASONING, P466, DOI [DOI 10.1007/978-3-642-81955-1_28, 10.1007/978-3-642-81955-128, DOI 10.1007/978-3-642-81955-128, 10.1007/978-3-642-81955-1_28]
   Wang C, 2005, LECT NOTES ARTIF INT, V3835, P322, DOI 10.1007/11591191_23
   Weber Tjark, 2011, International Journal on Software Tools for Technology Transfer, V13, P419, DOI 10.1007/s10009-011-0188-8
   Weber Tjark, 2019, J. Satisf. Boolean Model. Comput., V11, P221, DOI [10.3233/SAT190123, DOI 10.3233/SAT190123]
   Yu Y, 1999, LECT NOTES COMPUT SC, V1703, P54
   Zhang LT, 2001, ICCAD 2001: IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, DIGEST OF TECHNICAL PAPERS, P279, DOI 10.1109/ICCAD.2001.968634
NR 73
TC 4
Z9 4
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2022
VL 24
IS 6
SI SI
BP 1043
EP 1077
DI 10.1007/s10009-022-00682-y
EA NOV 2022
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8H5UG
UT WOS:000886418800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Frohme, M
   Steffen, B
AF Frohme, Markus
   Steffen, Bernhard
TI Compositional learning of mutually recursive procedural systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Active automata learning; Procedural systems; Context-free languages;
   Visibly pushdown languages
ID MODEL GENERATION; AUTOMATA
AB This paper presents a compositional approach to active automata learning of Systems of Procedural Automata (SPAs), an extension of Deterministic Finite Automata (DFAs) to systems of DFAs that can mutually call each other. SPAs are of high practical relevance, as they allow one to efficiently learn intuitive recursive models of recursive programs after an easy instrumentation that makes calls and returns observable. Key to our approach is the simultaneous inference of individual DFAs for each of the involved procedures via expansion and projection: membership queries for the individual DFAs are expanded to membership queries of the entire SPA, and global counterexample traces are transformed into counterexamples for the DFAs of concerned procedures. This reduces the inference of SPAs to a simultaneous inference of the DFAs for the involved procedures for which we can utilize various existing regular learning algorithms. The inferred models are easy to understand and allow for an intuitive display of the procedural system under learning that reveals its recursive structure. We implemented the algorithm within the LearnLib framework in order to provide a ready-to-use tool for practical application which is publicly available on GitHub for experimentation.
C1 [Frohme, Markus; Steffen, Bernhard] TU Dortmund, Chair Programming Syst, Fac Comp Sci, Dortmund, Germany.
C3 Dortmund University of Technology
RP Steffen, B (corresponding author), TU Dortmund, Chair Programming Syst, Fac Comp Sci, Dortmund, Germany.
EM markus.frohme@cs.tu-dortmund.de; steffen@cs.tu-dortmund.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Aarts F, 2015, LECT NOTES COMPUT SC, V9399, P165, DOI 10.1007/978-3-319-25150-9_11
   Alur R, 2005, LECT NOTES COMPUT SC, V3580, P1102
   Alur R, 2001, LECT NOTES COMPUT SC, V2102, P207
   Alur R., 2004, P 36 ANN ACM S THEOR, P202, DOI [DOI 10.1145/1007352.1007390, 10.1145/1007352.1007390]
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bertolino A, 2012, ERCIM NEWS, P28
   Bollig Benedikt, 2013, Developments in Language Theory. 17th International Conference, DLT 2013. Proceedings: LNCS 7907, P118, DOI 10.1007/978-3-642-38771-5_12
   Bollig B, 2010, LECT NOTES COMPUT SC, V6174, P360, DOI 10.1007/978-3-642-14295-6_32
   Broy M., 2005, Springer LNCS
   Burkart O., 1995, Nordic Journal of Computing, V2, P89
   BURKART O, 1992, LECT NOTES COMPUT SC, V630, P123
   Cassel S., 2015, DIFTS, V5
   Clarke EM, 1999, MODEL CHECKING, P1
   Drews S, 2017, LECT NOTES COMPUT SC, V10205, P173, DOI 10.1007/978-3-662-54577-5_10
   Frohme M, 2018, LECT NOTES COMPUT SC, V11119, P147, DOI 10.1007/978-3-030-00244-2_10
   GODEFROID P., 2008, AUTOMATED WHITEBOX F
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Hopcroft JE., 2001, INTRO AUTOMATA THEOR
   Howar, 2012, THESIS TU DORTMUND U
   Howar F, 2012, LECT NOTES COMPUT SC, V7148, P251, DOI 10.1007/978-3-642-27940-9_17
   Howar F, 2011, LECT NOTES COMPUT SC, V6538, P263, DOI 10.1007/978-3-642-18275-4_19
   Hungar H, 2003, INT TEST CONF P, P971, DOI 10.1109/TEST.2003.1271084
   Hungar H, 2003, LECT NOTES COMPUT SC, V2725, P315
   Isberner Malte, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P124, DOI 10.1007/978-3-642-38088-4_9
   ISBERNER M, 2013, MACH LEARN
   Isberner M, 2015, LECT NOTES COMPUT SC, V9206, P487, DOI 10.1007/978-3-319-21690-4_32
   Isberner M, 2014, LECT NOTES COMPUT SC, V8734, P307, DOI 10.1007/978-3-319-11164-3_26
   Isberner Malte, 2015, Foundations of active automata learning: an algorithmic perspective
   Issarny V, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P154, DOI 10.1109/ICECCS.2009.44
   Kearns M. J., 1994, An Introduction to Computational Learning Theory
   Kumar V, 2006, LECT NOTES COMPUT SC, V4137, P203
   Lu Feng, 2010, Proceedings of the 2010 Seventh International Conference on the Quantitative Evaluation of Systems (QEST 2010), P133, DOI 10.1109/QEST.2010.24
   Maler O, 2014, LNCS, P485, DOI [DOI 10.1007/978-3-642-54862-8_41, 10.1007]
   Margaria T, 2004, INT HIGH LEVEL DESIG, P95, DOI 10.1109/HLDVT.2004.1431246
   MCNAUGHTON R, 1967, J ACM, V14, P490, DOI 10.1145/321406.321411
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Mitchell J., 2002, CONCEPTS PROGRAMMING
   Nerode Anil, 1958, Proceedings of the American Mathematical Society, V9, P541, DOI [10.1090/S0002-9939-1958-0135681-9, DOI 10.1090/S0002-9939-1958-0135681-9]
   Neubauer J, 2014, INT J SOFTW TOOLS TE, V16, P569, DOI 10.1007/s10009-014-0321-6
   Peled D, 1999, INT FED INFO PROC, V28, P225
   Plotkin GD, 2004, J LOGIC ALGEBR PROGR, V60-1, P17, DOI 10.1016/j.jlap.2004.03.002
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   RIVEST RL, 1993, INFORM COMPUT, V103, P299, DOI 10.1006/inco.1993.1021
   Steffen B, 2011, LECT NOTES COMPUT SC, V6659, P256, DOI 10.1007/978-3-642-21455-4_8
   Vardhan A., 2006, LEVER TOOL LEARNING
   Windmuller S., 2013, P 16 INT ACM SIGS S, P111, DOI [10.1145/2465449.2465469, DOI 10.1145/2465449.2465469]
NR 47
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2021
VL 23
IS 4
SI SI
BP 521
EP 543
DI 10.1007/s10009-021-00634-y
EA OCT 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WK6KY
UT WOS:000703793500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Aceto, L
   Cassar, I
   Francalanza, A
   Ingólfsdóttir, A
AF Aceto, Luca
   Cassar, Ian
   Francalanza, Adrian
   Ingolfsdottir, Anna
TI Comparing controlled system synthesis and suppression enforcement
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime enforcement; Controlled system synthesis; Modal mu-calculus;
   Process algebra
AB Runtime enforcement and control system synthesis are two verification techniques that automate the process of transforming an erroneous system into a valid one. As both techniques can modify the behaviour of a system to prevent erroneous executions, they are both ideal for ensuring safety. In this paper, we investigate the interplay between these two techniques and identify control system synthesis as being the static counterpart to suppression-based runtime enforcement, in the context of safety properties.
C1 [Aceto, Luca] Gran Sasso Sci Inst, Laquila, Italy.
   [Aceto, Luca; Cassar, Ian; Ingolfsdottir, Anna] Reykjavik Univ, Dept Comp Sci, Reykjavik, Iceland.
   [Cassar, Ian; Francalanza, Adrian] Univ Malta, Dept Comp Sci, Msida, Malta.
C3 Gran Sasso Science Institute (GSSI); Reykjavik University; University of
   Malta
RP Cassar, I (corresponding author), Reykjavik Univ, Dept Comp Sci, Reykjavik, Iceland.; Cassar, I (corresponding author), Univ Malta, Dept Comp Sci, Msida, Malta.
EM luca@ru.is; ian.cassar.10@um.edu.mt; adrian.francalanza@um.edu.mt;
   annai@ru.is
FU project "TheoFoMon: Theoretical Foundations for Monitorability" of the
   Icelandic Research Fund [163406-051]; project "Developing Theoretical
   Foundations for Runtime Enforcement" of the Icelandic Research Fund
   [184776-051]; EU H2020 RISE programme under the Marie Sklodowska-Curie
   grant [778233]; Endeavour Scholarship Scheme (Malta) - Endeavour
   Scholarship Scheme (Malta) - European Social Fund (ESF)-Operational
   Programme II-Cohesion Policy 2014-2020
FX This work was partly supported by the projects "TheoFoMon: Theoretical
   Foundations for Monitorability" (nr.163406-051) and "Developing
   Theoretical Foundations for Runtime Enforcement" (nr.184776-051) of the
   Icelandic Research Fund, by the EU H2020 RISE programme under the Marie
   Sklodowska-Curie grant agreement nr. 778233, and by the Endeavour
   Scholarship Scheme (Malta), part-financed by the European Social Fund
   (ESF)-Operational Programme II-Cohesion Policy 2014-2020.
CR ABRAMSKY S, 1987, THEOR COMPUT SCI, V53, P225, DOI 10.1016/0304-3975(87)90065-X
   Aceto L, 1999, LECT NOTES COMPUT SC, V1578, P41
   Aceto L, 2007, REACTIVE SYSTEMS MOD, DOI DOI 10.1017/CBO9780511814105
   Aceto L., 2016, ABS161110212 CORR
   Aceto L., 2018, LIPICS, V118, DOI 10.4230/LIPIcs.CONCUR.2018.34
   Aceto L, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290365
   Aceto L, 2019, LECT NOTES COMPUT SC, V11757, P148, DOI 10.1007/978-3-030-32079-9_9
   Aceto L, 2018, LECT NOTES COMPUT SC, V10803, P203, DOI 10.1007/978-3-319-89366-2_11
   Alur R, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P599, DOI 10.1145/1926385.1926454
   Arnold A, 2008, LOGIC AND AUTOMATA, P29
   Cassar I, 2017, ELECTRON P THEOR COM, P15, DOI 10.4204/EPTCS.254.2
   Clarke EM, 1999, MODEL CHECKING, P1
   Desai A, 2017, LECT NOTES COMPUT SC, V10548, P172, DOI 10.1007/978-3-319-67531-2_11
   Ehlers R., 2014, IFAC Proceedings, V47, P222
   Erlingsson U, 2000, NEW SECURITY PARADIGM WORKSHOP, PROCEEDINGS, P87
   Falcone Ylies, 2012, International Journal on Software Tools for Technology Transfer, V14, P349, DOI 10.1007/s10009-011-0196-8
   Falcone Y, 2013, IEEE DECIS CONTR P, P7271, DOI 10.1109/CDC.2013.6761043
   Francalanza A, 2017, LEIBNIZ INT P INFORM, V85, P81
   Francalanza A, 2017, LECT NOTES COMPUT SC, V10548, P8, DOI 10.1007/978-3-319-67531-2_2
   Francalanza A, 2017, FORM METHOD SYST DES, V51, P87, DOI 10.1007/s10703-017-0273-z
   Francalanza A, 2016, LECT NOTES COMPUT SC, V9634, P145, DOI 10.1007/978-3-662-49630-5_9
   Havelund K, 2004, FORM METHOD SYST DES, V24, P189, DOI 10.1023/B:FORM.0000017721.39909.4b
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Kejstova K., 2017, MODEL CHECKING RUNTI
   Könighofer B, 2017, FORM METHOD SYST DES, V51, P332, DOI 10.1007/s10703-017-0276-9
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Ligatti J., 2005, J. Inf. Secur., V4, P2, DOI [10.1007/s10207-004-0046-8, DOI 10.1007/S10207-004-0046-8]
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   PNUELI A, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P179, DOI 10.1145/75277.75293
   Pugliese R., 2019, COORDINATION 2019 21
   RAMADGE PJ, 1987, SIAM J CONTROL OPTIM, V25, P206, DOI 10.1137/0325013
   Sakarovitch Jacques, 2009, Elements of Automata Theory
   Sangiorgi D, 2011, INTRO BISIMULATION C, DOI [10.1017/CBO9780511792588, DOI 10.1017/CBO9780511792588]
   Schneider F. B., 2000, ACM Transactions on Information and Systems Security, V3, P30, DOI 10.1145/353323.353382
   van Hulst AC, 2017, DISCRETE EVENT DYN S, V27, P109, DOI 10.1007/s10626-016-0231-8
NR 35
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2021
VL 23
IS 4
SI SI
BP 601
EP 614
DI 10.1007/s10009-021-00624-0
EA JUN 2021
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WK6KY
UT WOS:000656929300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Parsai, A
   Demeyer, S
AF Parsai, Ali
   Demeyer, Serge
TI Comparing mutation coverage against branch coverage in an industrial
   setting
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software Testing; Mutation Testing; Branch Coverage; Continuous
   Integration; Industrial Setting
ID DATA-FLOW; ALL-USES; OPERATORS; IMPACT
AB The state-of-the-practice in software development is driven by constant change fueled by continues integration servers. Such constant change demands for frequent and fully automated tests capable to detect faults immediately upon project build. As the fault detection capability of the test suite becomes so important, modern software development teams continuously monitor the quality of the test suite as well. However, it appears that the state-of-the-practice is reluctant to adopt strong coverage metrics (namely mutation coverage), instead relying on weaker kinds of coverage (namely branch coverage). In this paper, we investigate three reasons that prohibit the adoption of mutation coverage in a continuous integration setting: (1) the difficulty of its integration into the build system, (2) the perception that branch coverage is "good enough", and (3) the performance overhead during the build. Our investigation is based on a case study involving four open source systems and one industrial system. We demonstrate that mutation coverage reveals additional weaknesses in the test suite compared to branch coverage and that it is able to do so with an acceptable performance overhead during project build.
C1 [Parsai, Ali; Demeyer, Serge] Univ Antwerp, Middelheimlaan 1, B-2020 Antwerp, Belgium.
   [Parsai, Ali; Demeyer, Serge] Flanders Make, Middelheimlaan 1, B-2020 Antwerp, Belgium.
C3 University of Antwerp
RP Parsai, A (corresponding author), Univ Antwerp, Middelheimlaan 1, B-2020 Antwerp, Belgium.; Parsai, A (corresponding author), Flanders Make, Middelheimlaan 1, B-2020 Antwerp, Belgium.
EM ali.parsai@uantwerpen.be; serge.demeyer@uantwerpen.be
RI Demeyer, Serge/JMQ-7341-2023; Parsai, Ali/T-1379-2018
OI Demeyer, Serge/0000-0002-4463-2945; Parsai, Ali/0000-0001-8525-8198
FU ITEA3 TESTOMAT Project - VINNOVA - Sweden's innovation agency [16032];
   Flanders Make vzw
FX We would like to express our gratitude to the HE/Imaging IT Clinical
   Applications team at Agfa Healthcare, Belgium, for allowing us to
   conduct these analyses on the Segmentation component of the Impax ES
   medical imaging software. This work is sponsored by:; (a) ITEA3 TESTOMAT
   Project (number 16032), sponsored by VINNOVA - Sweden's innovation
   agency;; (b) Flanders Make vzw, the strategic research centre for
   manufacturing industry.
CR Aaltonen Kalle, 2010, P ACM INT C COMPANIO, P153, DOI [10.1145/1869542.1869567, DOI 10.1145/1869542.1869567]
   Abraham R, 2009, IEEE T SOFTWARE ENG, V35, P94, DOI 10.1109/TSE.2008.73
   Ahmed Z, 2010, INT CONF COMPUT AUTO, P614, DOI 10.1109/ICCAE.2010.5451692
   Ammann P., 2016, INTRO SOFTWARE TESTI, DOI [10.1017/9781316771273, DOI 10.1017/9781316771273]
   Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], 1980, THESIS
   [Anonymous], 1980, Order No. 8025191
   [Anonymous], 2011, ROAD VEH FUNCT SAF
   [Anonymous], 1993, GAX9420921 UMI PURD
   [Anonymous], 2010, Analysis of ordinal categorical data
   [Anonymous], 2008, The Concise Encyclopedia of Statistics, P278, DOI [DOI 10.1007/978-0-387-32833-1211, 10.1007/978-0-387-32833-1_211, DOI 10.1007/978-0-387-32833-1_211]
   Assylbekov B, 2013, UKSIM INT CONF COMP, P347, DOI 10.1109/UKSim.2013.28
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Bauersfeld S., 2013, FUTURE INTERNET TEST, P75, DOI [DOI 10.1007/978-3-319-07785-7_5, 10.1007/978-3-319-07785-7, DOI 10.1007/978-3-319-07785-7]
   Beck Kent L., 2003, Test Driven Development By Example
   Bjerke-Gulstuen K, 2015, LECT NOTES BUS INF P, V212, P239, DOI 10.1007/978-3-319-18612-2_23
   Blondeau V, 2017, SOFTWARE QUAL J, V25, P1203, DOI 10.1007/s11219-016-9328-4
   Booch G., 1991, BENJAMIN CUMMINGS SE
   Bradbury JA, 2006, NY TIMES BK REV, P4
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Brosgol BM, 2011, SIGADA 2011: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON ADA AND RELATED TECHNOLOGIES, P5, DOI 10.1145/2070336.2070341
   Chen CY, 2018, INT MICRO PACK ASS, P305
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Derezinska A, 2012, LECT NOTES COMPUT SC, V7304, P42, DOI 10.1007/978-3-642-30561-0_5
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fowler M, 2006, TECH REP
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Garousi V, 2018, IEEE ICST WORKSHOP, P138, DOI 10.1109/ICSTW.2018.00042
   Gay G, 2015, IEEE T SOFTWARE ENG, V41, P803, DOI 10.1109/TSE.2015.2421011
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   Haschemi S, 2010, LECT NOTES COMPUT SC, V6303, P155, DOI 10.1007/978-3-642-15585-7_15
   Hayhurst K., 2001, 20 DASC 20 DIG AV SY, V1, DOI 10.1109/dasc.2001.963305
   Hemmati H, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P151, DOI 10.1109/QRS.2015.30
   Hopkins R., 2008, Eating the it elephant: Moving from greenfield to brownfield
   Hutchins M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P191, DOI 10.1109/ICSE.1994.296778
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Janjic W, 2013, 2013 8TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST (AST), P100, DOI 10.1109/IWAST.2013.6595799
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Kaczanowski T., 2012, Practical Unit Testing with TestNG and Mockito
   Kandl S, 2015, COMPUTING, V97, P261, DOI 10.1007/s00607-014-0418-5
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Kracht JS, 2014, INT CONF QUAL SOFTW, P256, DOI 10.1109/QSIC.2014.33
   Kurtz B, 2014, IEEE ICST WORKSHOP, P176, DOI 10.1109/ICSTW.2014.20
   Lee HJ, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P512
   Li N, 2017, IEEE T SOFTWARE ENG, V43, P372, DOI 10.1109/TSE.2016.2597136
   Li N, 2013, PROC INT SYMP SOFTW, P380, DOI 10.1109/ISSRE.2013.6698891
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   Ma Yu-Seung., 2006, Proceedings of the 28th international conference on Software engineering, P827
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Marick B, 1991, P PAC NW SOFT QUAL C, P147
   Marick B., 1999, 16 INT C EXP TEST CO
   Mathur A. P., 1994, Software Testing, Verification and Reliability, V4, P9, DOI 10.1002/stvr.4370040104
   MCGREGOR JD, 2007, J OBJECT TECHNOL, V6, P7, DOI DOI 10.5381/jot.2007.6.4.c1
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Nan Li, 2015, 2015 IEEE Power & Energy Society General Meeting, P1, DOI 10.1109/PESGM.2015.7286139
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt A. J., 1996, TECH REP
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   OMNRF, 2020, P IFIP C APPROVING S
   Papadakis M, 2018, ADV COMPUT, DOI [10.1016/bs.adcom, DOI 10.1016/BS.ADCOM]
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Parsai A, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915992
   Parsai A, 2018, LECT NOTES COMPUT SC, V11146, P102, DOI 10.1007/978-3-319-99927-2_9
   Parsai A, 2019, LECT NOTES COMPUT SC, V11376, P419, DOI 10.1007/978-3-030-10801-4_33
   Parsai A, 2017, LECT NOTES COMPUT SC, V10522, P148, DOI 10.1007/978-3-319-68972-2_10
   Parsai A, 2014, LECT NOTES BUS INF P, V199, P166
   Rising L, 2000, IEEE SOFTWARE, V17, P26, DOI 10.1109/52.854065
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saleh Iman, 2014, Software Reuse for Dynamic Systems in the Cloud and Beyond 14th International Conference on Software Reuse, ICSR 2015. Proceedings: LNCS 8919, P172, DOI 10.1007/978-3-319-14130-5_13
   Shahriar H, 2008, IEEE HI ASS SYS ENGR, P229, DOI 10.1109/HASE.2008.8
   Silva RA, 2012, P 13 LAT AM TEST WOR, P1, DOI DOI 10.1109/LATW.2012.6261240
   Smith BH, 2009, J SYST SOFTWARE, V82, P1819, DOI 10.1016/j.jss.2009.06.031
   Smith BH, 2009, EMPIR SOFTW ENG, V14, P341, DOI 10.1007/s10664-008-9083-7
   Tengeri D, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P225, DOI 10.1109/SANER.2016.61
   Tengeri D, 2014, IEEE INT WORK C SO, P47, DOI 10.1109/SCAM.2014.38
   Tian J, 2009, SOFTWARE QUALITY ENG
   Wei Y, 2012, LECT NOTES COMPUT SC, V7007, P194
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Xiao Y, 2006, IEEE ICC, P1731
   Yang Q, 2009, COMPUT J, V52, P589, DOI 10.1093/comjnl/bxm021
   Zeng FP, 2009, 2009 5TH INTERNATIONAL CONFERENCE ON WIRELESS COMMUNICATIONS, NETWORKING AND MOBILE COMPUTING, VOLS 1-8, P4416
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
   Zheng H, 2010, 2ND IEEE INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL (ICACC 2010), VOL. 2, P431, DOI 10.1109/ICACC.2010.5486640
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 98
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2020
VL 22
IS 4
SI SI
BP 365
EP 388
DI 10.1007/s10009-020-00567-y
EA MAY 2020
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MH4SO
UT WOS:000533174400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hentschel, M
   Bubel, R
   Hähnle, R
AF Hentschel, Martin
   Bubel, Richard
   Haehnle, Reiner
TI The Symbolic Execution Debugger (SED): a platform for interactive
   symbolic execution, debugging, verification and more
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Symbolic execution; Program understanding; Deductive program
   verification; Debugging; Slicing
ID PROGRAM; GENERATION
AB The Symbolic Execution Debugger (SED), is an extension of the debug platform for interactive debuggers based on symbolic execution. The SED comes with a static symbolic execution engine for sequential programs, but any third-party symbolic execution engine can be integrated into the SED. An interactive debugger based on symbolic execution allows one like a traditional debugger to locate defects in the source code. The difference is that all feasible execution paths are explored at once, and thus there is no need to know input values resulting in an execution that exhibits the failure. In addition, such a debugger can be used in code reviews and to guide and present results of an analysis based on symbolic execution such as, in our case, correctness proofs. Experimental evaluations proved that the SED increases the effectiveness of code reviews and proof understanding tasks.
C1 [Hentschel, Martin; Bubel, Richard; Haehnle, Reiner] Tech Univ Darmstadt, Darmstadt, Germany.
C3 Technical University of Darmstadt
RP Bubel, R (corresponding author), Tech Univ Darmstadt, Darmstadt, Germany.
EM bubel@cs.tu-darmstadt.de
OI Hahnle, Reiner/0000-0001-8000-7613
CR AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Ahrendt W, 2016, LNCS
   Albert E., 2011, 2011 18th Working Conference on Reverse Engineering, P441, DOI 10.1109/WCRE.2011.67
   Anand S, 2007, LECT NOTES COMPUT SC, V4424, P134
   Anderson P., 2001, Proceedings of the 1st Workshop on Inspection in Software Engineering, WISE 2001, P4
   [Anonymous], JML REFERENCE MANUAL
   [Anonymous], 1 INT C SOFTW ENG FO
   [Anonymous], LNCS
   [Anonymous], US VERF WORKSH UV RE
   [Anonymous], P WOKSH BRIDG GAP HM
   [Anonymous], P AADEBUG 2003 SEPT
   [Anonymous], 1952, BIBLIOTHECA MATH
   [Anonymous], 2012, ACM QUEUE, DOI DOI 10.1145/2090147.2094081
   [Anonymous], THESIS
   [Anonymous], 2006, P 13 ACM C COMPUTER
   [Anonymous], 2014, TECHNICAL REPORT
   [Anonymous], THESIS
   [Anonymous], 857 TAND COMP
   Asavoae IM, 2014, LECT NOTES COMPUT SC, V8739, P291, DOI 10.1007/978-3-319-10181-1_18
   Barnett M, 2005, LECT NOTES COMPUT SC, V3362, P49
   Barnett M, 2006, LECT NOTES COMPUT SC, V4111, P364
   Beckert B, 2014, ELECTRON P THEOR COM, P4, DOI 10.4204/EPTCS.167.3
   Beckert B, 2010, KUNSTL INTELL, V24, P57, DOI 10.1007/s13218-010-0005-7
   Belt J, 2011, SIGADA 2011: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON ADA AND RELATED TECHNOLOGIES, P47, DOI 10.1145/2070336.2070357
   Beyer D, 2016, LECT NOTES COMPUT SC, V9952, P195, DOI 10.1007/978-3-319-47166-2_14
   Boyer R. S., 1975, SIGPLAN Notices, V10, P234, DOI 10.1145/390016.808445
   Burstall R., 1974, Information Processing 74, (Stockholm, Sweden), P308
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   de Gouw S, 2015, LECT NOTES COMPUT SC, V9206, P273, DOI 10.1007/978-3-319-21690-4_16
   de Halleux J, 2008, LECT NOTES COMPUT SC, V4966, P171
   Deng XH, 2006, IEEE INT CONF AUTOM, P157
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P, 2007, CONFERENCE RECORD OF POPL 2007: THE 34TH ACM SIGPLAN SIGACT SYMPOSIUM ON PRINCIPLES OF PROGAMMING LANGUAGES, P47
   Grieskamp W, 2006, ELECTRON NOTES THEOR, V144, P3, DOI 10.1016/j.entcs.2006.01.002
   Hahnle R., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, ASE '10, P143, DOI DOI 10.1145/1858996.1859022
   Hall RJ, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P56, DOI 10.1109/ASE.2004.1342724
   Hatcliff J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P222, DOI 10.1109/ICSE.2013.6606568
   Hentschel Martin, 2014, Tests and Proofs. 8th International Conference (TAP 2014). Held as Part of STAF 2014. Proceedings: LNCS 8570, P82, DOI 10.1007/978-3-319-09099-3_7
   Hentschel M, 2016, IEEE INT CONF AUTOM, P846, DOI 10.1145/2970276.2970292
   Hentschel M, 2016, IEEE INT CONF AUTOM, P403, DOI 10.1145/2970276.2970303
   Hentschel M, 2016, LECT NOTES COMPUT SC, V9681, P3, DOI 10.1007/978-3-319-33693-0_1
   Hentschel M, 2014, LECT NOTES COMPUT SC, V8734, P255, DOI 10.1007/978-3-319-11164-3_21
   Hentschel M, 2014, LECT NOTES COMPUT SC, V8739, P55, DOI 10.1007/978-3-319-10181-1_4
   Honfi D., 2015, 2015 IEEE 8 INT C SO, P1, DOI 10.1109/ICST.2015.7102631
   Ibing Andreas, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P196, DOI 10.1007/978-3-642-41707-8_13
   Jacobs B, 2011, LECT NOTES COMPUT SC, V6617, P41, DOI 10.1007/978-3-642-20398-5_4
   Jaffar Joxan, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P758, DOI 10.1007/978-3-642-31424-7_61
   Jamrozik K, 2012, IEEE INT CONF AUTOM, P254, DOI 10.1145/2351676.2351716
   Jayaraman G, 2005, LECT NOTES COMPUT SC, V3442, P269, DOI 10.1007/978-3-540-31984-9_20
   Ji R, 2013, LECT NOTES COMPUT SC, V8137, P289, DOI 10.1007/978-3-642-40561-7_20
   Katz S., 1975, SIGPLAN Notices, V10, P143, DOI 10.1145/390016.808434
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Ko AJ, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1824760.1824761
   Kumericki K, 2011, J HIGH ENERGY PHYS, DOI 10.1007/JHEP07(2011)073
   Le Goues C, 2011, LECT NOTES COMPUT SC, V7041, P407, DOI 10.1007/978-3-642-24690-6_28
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Moskal Michal, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, DOI 10.1007/978-3-642-31424-7_6
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Pasareanu Corina S., 2008, P 2008 INT S SOFTW T, P15, DOI [DOI 10.1145/1390630.1390635, DOI 10.1145/1390630]
   Pothier G, 2009, IEEE SOFTWARE, V26, P78, DOI 10.1109/MS.2009.169
   Do QH, 2015, IFIP ADV INF COMM TE, V455, P401, DOI 10.1007/978-3-319-18467-8_27
   Reif W, 1998, APPL LOG SER, V9, P13
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI DOI 10.1145/1806799.1806864
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Sridharan M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P112, DOI 10.1145/1250734.1250748
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Tschannen Julian, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P566, DOI 10.1007/978-3-662-46681-0_53
   Vanoverberghe D, 2011, LECT NOTES COMPUT SC, V6603, P247, DOI 10.1007/978-3-642-19811-3_18
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Weiser Mark D., 1979, P 5 INT C SOFTW ENG, P439
NR 72
TC 7
Z9 7
U1 1
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2019
VL 21
IS 5
BP 485
EP 513
DI 10.1007/s10009-018-0490-9
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW8PB
UT WOS:000485255000001
DA 2024-07-18
ER

PT J
AU Routhier, M
   St-Denis, R
AF Routhier, Maxime
   St-Denis, Richard
TI A qualitative assessment of αRby in the perspective of the supervisory
   control theory
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Multi-paradigm programming language; SAT solver; Supervisor control
   theory; Alloy; alpha RBY
AB It becomes more and more evident today that SAT-solving approaches have the potential to verify properties and synthesize supervisors of controlled systems described with a high level of abstraction. Such approaches can be particularly appropriate when engineers give more importance to decentralized, hierarchical, and parameterized control paradigms than to centralized ones in the design of systems composed of multiple small agents. One advantage of declarative programming languages, such as relational logic, in specifying control problems, including their underlying properties and reasoning methods, is their proximity to the mathematical objects used in the formulation of the theory itself, which allows for implementing new fragments of it faster. The disadvantage is, however, that SAT-solving approaches do not lend themselves to efficient calculations of auxiliary objects involved in some control problems, even if they can be described with the logic at hand. In some cases, the latter is not sufficiently powerful to express the entire solution logically. Such difficulties can be circumvented with alpha RBY, a fusion of Alloy and Ruby. Based on earlier experiments conducted with Alloy, this paper provides a qualitative assessment of alpha RBY and reports on the results of new experiments with two frag-ments of the supervisory control theory: state-based control and decentralized control.
C1 [Routhier, Maxime; St-Denis, Richard] Univ Sherbrooke, Dept Informat, Sherbrooke, PQ J1K 2R1, Canada.
C3 University of Sherbrooke
RP St-Denis, R (corresponding author), Univ Sherbrooke, Dept Informat, Sherbrooke, PQ J1K 2R1, Canada.
EM Maxime.Routhier@USherbrooke.ca; Richard.St-Denis@USherbrooke.ca
RI St.Denis, Richard D/C-8997-2012
OI St-Denis, Richard/0000-0002-4099-7445
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX The authors would like to thank the Natural Sciences and Engineering
   Research Council of Canada (NSERC) for financial support. They are
   grateful to Aleksandar Milicevic for his prompt and valuable answers to
   numerous requests about alpha RBY They would also like to thank the
   reviewers for their valuable comments and suggestions.
CR Akesson K, 2006, WODES 2006: EIGHTH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, PROCEEDINGS, P384
   Bagheri H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P106, DOI 10.1145/2568225.2568291
   Bagheri H, 2016, FORM ASP COMPUT, V28, P441, DOI 10.1007/s00165-016-0360-8
   Barati M, 2015, IEEE SYS MAN CYBERN, P115, DOI 10.1109/SMC.2015.33
   Cassandras C. G., 2008, INTRO TODISCRETE EVE
   CLAESSEN K, 1980, THEORY APPL, V19, P495, DOI DOI 10.1007/s10626-009-0081-8
   Cote Daniel, 2012, Formal Aspects of Component Software. 7th International Workshop, FACS 2010. Revised Selected Papers, P163, DOI 10.1007/978-3-642-27269-1_10
   Côté D, 2013, IEEE T CONTR SYST T, V21, P1570, DOI 10.1109/TCST.2012.2209178
   Côté D, 2011, LECT NOTES COMPUT SC, V6959, P52, DOI 10.1007/978-3-642-24431-5_6
   Demirezen Z., 2009, 6 INT WORKSH MOD ENG
   Flanagan D.Y. Matsumoto., 2008, The Ruby Programming Language
   Fraikin Benoit, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P94, DOI 10.1007/978-3-642-30885-7_7
   Fraikin B, 2014, SCI COMPUT PROGRAM, V94, P217, DOI 10.1016/j.scico.2014.04.016
   GOMES CP, 2008, ELSEVIER, P89, DOI DOI 10.1016/S1574-6526(07)03002-7
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   kesson K., 2003, 11 MED C CONTR AUT M
   Khoury J, 2010, LECT NOTES COMPUT SC, V5977, P132, DOI 10.1007/978-3-642-11811-1_11
   Kim JS, 2010, J SYST SOFTWARE, V83, P1216, DOI 10.1016/j.jss.2010.01.049
   Kumar R, 2007, IEEE T AUTOMAT CONTR, V52, P1783, DOI 10.1109/TAC.2007.906158
   Leduc R. J, 2003, THESIS
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Liao HW, 2013, IEEE T CONTR SYST T, V21, P2067, DOI 10.1109/TCST.2012.2226034
   Ma C., 2005, NONBLOCKING SUPERVIS
   Maoz Shahar, 2013, EUROPEAN SOFTWARE EN, P444
   Milicevic Aleksandar, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering (ICSE). Proceedings, P609, DOI 10.1109/ICSE.2015.77
   Milicevic A, 2014, LECT NOTES COMPUT SC, V8477, P56, DOI 10.1007/978-3-662-43652-3_5
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Ricker L, 2006, WODES 2006: EIGHTH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, PROCEEDINGS, P392
   Sanchez A., 2003, 2003 EUR CONTR C ECC, P600
   SHAYMAN MA, 1995, SIAM J CONTROL OPTIM, V33, P469, DOI 10.1137/S0363012992239600
   Torlak E, 2013, P 2013 ACM INT S NEW, P135, DOI DOI 10.1145/2509578.2509586
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Tronci E., 1999, Proceedings 4th IEEE International Symposium on High-Assurance Systems Engineering, P151, DOI 10.1109/HASE.1999.809490
   Tronci E, 1998, SECOND INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P134, DOI 10.1109/ICFEM.1998.730577
   Tronci E, 1997, IEEE DECIS CONTR P, P3592, DOI 10.1109/CDC.1997.652410
   Wang X, 2003, P AMER CONTR CONF, P3405
   Wonham W. M, 2013, 1636F1637Z ECE U TOR
   Yadav N., 2013, P 23 INT JOINT C ART, P1176
   YOO T, 1948, THEORY APPL, V12, P335, DOI DOI 10.1023/A:1015625600613
   Yoo TS, 2004, IEEE T AUTOMAT CONTR, V49, P1886, DOI 10.1109/TAC.2004.837595
   Zhang ZH, 2002, SYNTHESIS AND CONTROL OF DISCRETE EVENT SYSTEMS, P77
NR 41
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2019
VL 21
IS 2
BP 121
EP 141
DI 10.1007/s10009-017-0461-6
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS3JE
UT WOS:000463758000001
DA 2024-07-18
ER

PT J
AU Holmes, J
   Groce, A
   Pinto, J
   Mittal, P
   Azimi, P
   Kellar, K
   O'Brien, J
AF Holmes, Josie
   Groce, Alex
   Pinto, Jervis
   Mittal, Pranjal
   Azimi, Pooria
   Kellar, Kevin
   O'Brien, James
TI TSTL: the template scripting testing language
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software testing; Domain-specific languages; Explicit-state model
   checking; End-user testing; Geographic information systems
AB A test harness, in automated test generation, defines the set of valid tests for a system, as well as their correctness properties. The difficulty of writing test harnesses is a major obstacle to the adoption of automated test generation and model checking. Languages for writing test harnesses are usually tied to a particular tool and unfamiliar to programmers, and often limit expressiveness. Writing test harnesses directly in the language of the software under test (SUT) is a tedious, repetitive, and error-prone task, offers little or no support for test case manipulation and debugging, and produces hard-to-read, hard-to-maintain code. Using existing harness languages or writing directly in the language of the SUT also tends to limit users to one algorithm for test generation, with little ability to explore alternative methods. In this paper, we present TSTL, the template scripting testing language, a domain-specific language (DSL) for writing test harnesses. TSTL compiles harness definitions into an interface for testing, making generic test generation and manipulation tools for all SUTs possible. TSTL includes tools for generating, manipulating, and analyzing test cases, including simple model checkers. This paper motivates TSTL via a large-scale testing effort, directed by an end-user, to find faults in the most widely used geographic information systems tool. This paper emphasizes a new approach to automated testing, where, rather than focus on developing a monolithic tool to extend, the aim is to convert a test harness into a language extension. This approach makes testing not a separate activity to be performed using a tool, but as natural to users of the language of the system under test as is the use of domain-specific libraries such as ArcPy, NumPy, or QIIME, in their domains. TSTL is a language and tool infrastructure, but is also a way to bring testing activities under the control of an existing programming language in a simple, natural way.
C1 [Holmes, Josie] Penn State Univ, Dept Geog, State Coll, PA USA.
   [Groce, Alex; Pinto, Jervis; Mittal, Pranjal; Azimi, Pooria; Kellar, Kevin] Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
   [O'Brien, James] Macquarie Univ, Risk Frontiers, Sydney, NSW, Australia.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Oregon State University; Macquarie
   University
RP Groce, A (corresponding author), Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
EM jdh396@psu.edu; agroce@gmail.com; James.OBrien@mq.edu.au
FU NSF [CCF-1054786, CCF-1217824]; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [1054876] Funding
   Source: National Science Foundation
FX The authors would like to thank John Regehr, David R. MacIver, Klaus
   Havelund, our anonymous reviewers, and students in CS362, CS562, and
   CS569, for discussions related to thiswork. A portion of this work was
   funded by NSF Grants CCF-1054786 and CCF-1217824.
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Andrews James H., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P19, DOI 10.1109/ASE.2008.12
   Andrews J. H., P 1 INT WORKSH RAND, P36
   Andrews JH, 2011, IEEE T SOFTWARE ENG, V37, P80, DOI 10.1109/TSE.2010.46
   [Anonymous], 2010, 736 U W ONT DEP COMP
   [Anonymous], WORKSH DYN AN
   [Anonymous], WORKSH CONSTR FORM V
   [Anonymous], 2012, INT WORKSH DYN AN
   [Anonymous], 2014, P FSESDP WORKSHOP FU, DOI [10.1145/2593882.2593896, DOI 10.1145/2593882.2593896]
   [Anonymous], 1994, Encyclopedia of software Engineering
   [Anonymous], 2010, Proceedings of the 19th International Symposium on Software Testing and Analysis, ISSTA'10
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Arcuri Andrea., 2011, ISSTA
   BENTLEY J, 1986, COMMUN ACM, V29, P711, DOI 10.1145/6424.315691
   Burnett M, 2004, COMMUN ACM, V47, P53, DOI 10.1145/1015864.1015889
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Caporaso JG, 2010, NAT METHODS, V7, P335, DOI 10.1038/nmeth.f.303
   Chelimsky D., 2010, RSPEC BOOK BEHAV DRI
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Ciupa I., 2007, P 2007 INT S SOFTWAR, P84, DOI [10.1145/1273463.1273476, DOI 10.1145/1273463.1273476]
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke Edmund M., 2001, Model Checking
   COURCOUBETIS C, 1991, LECT NOTES COMPUT SC, V531, P233, DOI 10.1007/BFb0023737
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Daka Ermira, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P235, DOI 10.1007/978-3-319-22183-0_17
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Edelkamp S., 2004, International Journal on Software Tools for Technology Transfer, V5, P247, DOI 10.1007/s10009-002-0104-3
   Felderer M., 2010, Proceedings 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), P108, DOI 10.1109/VALID.2010.12
   FLOYD RW, 1967, J ACM, V14, P636, DOI 10.1145/321420.321422
   Fowler M., 2010, Domain-specific languages
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Giannakopoulou Dimitra., 2014, Proceedings of the International Conference on Automated Software Engineering (ASE), P373
   Gligoric M., INT C SOFTW ENG, P225
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Groce A., 2002, Software Engineering Notes, V27, P12, DOI 10.1145/566171.566175
   Groce A., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P161, DOI 10.1109/ISSRE.2012.1
   Groce A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P129, DOI 10.1145/1810295.1810314
   Groce A., RAISING ZERO LARGE P
   Groce A., 2012, P INT S SOFTW TEST A, P78, DOI DOI 10.1145/2338965.2336763
   Groce A., LEFT SHIFT ZERO ALLO
   GROCE A, 2015, ACM INT S SOFTW TEST, P414
   Groce A., TSTL TEMPLATE SCRIPT
   Groce A, 2007, PROC INT CONF SOFTW, P621
   Groce A, 2016, SOFTW TEST VERIF REL, V26, P40, DOI 10.1002/stvr.1574
   Groce A, 2015, LECT NOTES COMPUT SC, V9058, P204, DOI 10.1007/978-3-319-17524-9_15
   Groce A, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P243, DOI 10.1109/ICST.2014.37
   Groce A, 2014, ANN MATH ARTIF INTEL, V70, P315, DOI 10.1007/s10472-014-9408-8
   Groce A, 2014, IEEE T SOFTWARE ENG, V40, P307, DOI 10.1109/TSE.2013.59
   Groce Alex, 2012, INT S LEV APPL FORM, P752
   Hamlet Dick., 2006, RT 06, P1
   Holzmann GJ, 2008, AUTOMAT SOFTW ENG, V15, P283, DOI 10.1007/s10515-008-0033-9
   Holzmann GJ, 2004, LECT NOTES COMPUT SC, V2989, P76
   Hu MG, 2009, 2009 WRI WORLD CONGRESS ON SOFTWARE ENGINEERING, VOL 4, PROCEEDINGS, P184, DOI 10.1109/WCSE.2009.94
   Im Kyungsoo., 2008, Proceedings of the 46th Annual Southeast Regional Conference on XX, ACM-SE 46, page, P180
   Kellar K., TSTL JAVA
   Kulesza Todd, 2011, End-User Development. Proceedings Third International Symposium, IS-EUD 2011, P171, DOI 10.1007/978-3-642-21530-8_14
   Lei Y, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P267
   MacIver D. R., HYPOTHESIS TEST FAST
   McCarthy J., 1961, Proceedings of the Western Joint Computer Conference, P225, DOI DOI 10.1145/1460690.1460715
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   Milicevic A, 2007, PROC INT CONF SOFTW, P771
   Nilsson R, SCALACHECK PROPERTY
   Orso A., 2014, P FUTURE SOFTWARE EN, P117, DOI [10.1145/2593882.2593885, DOI 10.1145/2593882.2593885]
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Phalgune A, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P45, DOI 10.1109/VLHCC.2005.40
   Pike L, 2014, ACM SIGPLAN NOTICES, V49, P53, DOI [10.1145/2775050.2633365, 10.1145/2633357.2633365]
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2001, ACM T SOFTW ENG METH, V10, P110, DOI 10.1145/366378.366385
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Rothermel K. J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P230, DOI 10.1109/ICSE.2000.870414
   Santiago D., 2013, CEUR WORKSHOP P, P43
   Segal J, 2007, IEEE S VIS LANG HUM
   Sharma R, 2011, LECT NOTES COMPUT SC, V6603, P262, DOI 10.1007/978-3-642-19811-3_19
   Shinsel A, 2011, S VIS LANG HUM CEN C, P47, DOI 10.1109/VLHCC.2011.6070377
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Visser W., 2006, P ACM SIGSOFT INT S, P37
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   ZHANG C, 2014, INT S SOFTW TEST AN, P160, DOI DOI 10.1145/2610384.2610392
NR 84
TC 12
Z9 13
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2018
VL 20
IS 1
BP 57
EP 78
DI 10.1007/s10009-016-0445-y
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT7PX
UT WOS:000423346100004
DA 2024-07-18
ER

PT J
AU Jacobs, S
   Bloem, R
   Brenguier, R
   Ehlers, R
   Hell, T
   Könighofer, R
   Pérez, GA
   Raskin, JF
   Ryzhyk, L
   Sankur, O
   Seidl, M
   Tentrup, L
   Walker, A
AF Jacobs, Swen
   Bloem, Roderick
   Brenguier, Romain
   Ehlers, Ruediger
   Hell, Timotheus
   Koenighofer, Robert
   Perez, Guillermo A.
   Raskin, Jean-Francois
   Ryzhyk, Leonid
   Sankur, Ocan
   Seidl, Martina
   Tentrup, Leander
   Walker, Adam
TI The first reactive synthesis competition (SYNTCOMP 2014)
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Synthesis; Reactive systems; Competition; Experimental evaluation;
   Benchmarks; Safety games
ID STATE; HARDWARE
AB We introduce the reactive synthesis competition (SYNTCOMP), a long-term effort intended to stimulate and guide advances in the design and application of synthesis procedures for reactive systems. The first iteration of SYNTCOMP is based on the controller synthesis problem for finite-state systems and safety specifications. We provide an overview of this problem and existing approaches to solve it, and report on the design and results of the first SYNTCOMP. This includes the definition of the benchmark format, the collection of benchmarks, the rules of the competition, and the five synthesis tools that participated. We present and analyze the results of the competition and draw conclusions on the state of the art. Finally, we give an outlook on future directions of SYNTCOMP.
C1 [Jacobs, Swen; Bloem, Roderick; Hell, Timotheus; Koenighofer, Robert] Graz Univ Technol, Graz, Austria.
   [Jacobs, Swen; Tentrup, Leander] Saarland Univ, Saarbrucken, Germany.
   [Brenguier, Romain; Perez, Guillermo A.; Raskin, Jean-Francois; Sankur, Ocan] Univ Libre Bruxelles, Brussels, Belgium.
   [Ehlers, Ruediger] Univ Bremen, Bremen, Germany.
   [Ehlers, Ruediger] DFKI GmbH, Bremen, Germany.
   [Ryzhyk, Leonid; Walker, Adam] NICTA, Sydney, NSW, Australia.
   [Ryzhyk, Leonid] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
   [Sankur, Ocan] CNRS, IRISA, Rennes, France.
   [Seidl, Martina] Johannes Kepler Univ Linz, Linz, Austria.
C3 Graz University of Technology; Saarland University; Universite Libre de
   Bruxelles; University of Bremen; German Research Center for Artificial
   Intelligence (DFKI); Australian National University; Carnegie Mellon
   University; Universite de Rennes; Centre National de la Recherche
   Scientifique (CNRS); Johannes Kepler University Linz
RP Jacobs, S (corresponding author), Graz Univ Technol, Graz, Austria.; Jacobs, S (corresponding author), Saarland Univ, Saarbrucken, Germany.
EM jacobs@react.uni-saarland.de
RI Ehlers, Ruediger/B-3213-2018
OI Ehlers, Ruediger/0000-0002-8315-1431; Bloem,
   Roderick/0000-0002-1411-5744; Raskin, Jean-Francois/0000-0002-3673-1097;
   Jacobs, Swen/0000-0002-9051-4050; Perez, Guillermo/0000-0002-1200-4952
FU Austrian Science Fund (FWF) through projects RiSE [S11406-N23]; QUAINT
   [I774-N23]; German Research Foundation (DFG), Transregional
   Collaborative Research Center "Automatic Verification and Analysis of
   Complex Systems" [SFB/TR 14 AVACS]; "Automatic Synthesis of Distributed
   and Parameterized Systems" [JA 2357/2-1]; Institutional Strategy of the
   University of Bremen; German Excellence Initiative; DFG, AVACS [SFB/TR
   14]; Intel Corporation; Australian Government through the Department of
   Communications and the Australian Research Council through the ICT
   Centre of Excellence Program; FWF through projects RiSE [S11406-N23,
   S11408-N23]
FX We thank the anonymous reviewers for their detailed and insightful
   comments on drafts of this article. We thank Armin Biere for his advice
   on running a competition, and Ayrat Khalimov for supplying the reference
   implementationAisy for the competition. The organization of SYNTCOMP
   2014 was supported by the Austrian Science Fund (FWF) through projects
   RiSE (S11406-N23) and QUAINT (I774-N23), by the German Research
   Foundation (DFG) as part of the Transregional Collaborative Research
   Center "Automatic Verification and Analysis of Complex Systems"(SFB/TR
   14 AVACS) and through project "Automatic Synthesis of Distributed and
   Parameterized Systems"(JA 2357/2-1), as well as by the Institutional
   Strategy of the University of Bremen, funded by the German Excellence
   Initiative. The development of AbsSynthe was supported by an F.R.S.-FNRS
   fellowship, and the ERC inVEST (279499) project. The development of
   Basil was supported by the Institutional Strategy of the University of
   Bremen, funded by the German Excellence Initiative. The development of
   Demiurge was supported by the FWF through projects RiSE (S11406-N23,
   S11408-N23) and QUAINT (I774-N23). The development of Realizer was
   supported by the DFG as part of SFB/TR 14 AVACS. The development of
   Simple BDD Solver was supported by a gift from the Intel Corporation,
   and NICTA is funded by the Australian Government through the Department
   of Communications and the Australian Research Council through the ICT
   Centre of Excellence Program.
CR Alir R., 2005, International Journal on Software Tools for Technology Transfer, V7, P118, DOI 10.1007/s10009-004-0179-0
   Alur R, 2015, NATO SCI PEAC SECUR, V40, P1, DOI 10.3233/978-1-61499-495-4-1
   [Anonymous], LNCS
   [Anonymous], 1962, Proc. Internat. Congr. Mathematicians (Stockholm)
   [Anonymous], LNCS
   [Anonymous], 1989, C RECORD 16 ANN ACM, DOI DOI 10.1145/75277.75293
   AZIZ A, 1994, ACM IEEE D, P283
   Balint Adrian, 2011, Learning and Intelligent Optimization. 5th International Conference, LION 5. Selected Papers, P586, DOI 10.1007/978-3-642-25566-3_46
   Barrett C, 2005, J AUTOM REASONING, V35, P373, DOI 10.1007/s10817-006-9026-1
   Beyer D, 2015, LECT NOTES COMPUT SC, V9232, P160, DOI 10.1007/978-3-319-23404-5_12
   Beyer D, 2012, LECT NOTES COMPUT SC, V7214, P504, DOI 10.1007/978-3-642-28756-5_38
   Bloem R, 2007, ELECTRON NOTES THEOR, V190, P3, DOI 10.1016/j.entcs.2007.09.004
   Bloem R, 2007, DES AUT TEST EUROPE, P1188
   Bloem R, 2014, 2014 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P31, DOI 10.1109/FMCAD.2014.6987592
   Bloem R, 2014, LECT NOTES COMPUT SC, V8318, P1, DOI 10.1007/978-3-642-54013-4_1
   Bloem R, 2012, J COMPUT SYST SCI, V78, P911, DOI 10.1016/j.jcss.2011.08.007
   Bloem R, 2010, LECT NOTES COMPUT SC, V6174, P425, DOI 10.1007/978-3-642-14295-6_37
   Bohy Aaron, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P652, DOI 10.1007/978-3-642-31424-7_45
   Bradley AR, 2011, LECT NOTES COMPUT SC, V6538, P70, DOI 10.1007/978-3-642-18275-4_7
   Brayton R, 2010, LECT NOTES COMPUT SC, V6174, P24, DOI 10.1007/978-3-642-14295-6_5
   Brenguier R, 2014, ELECTRON PROC THEOR, P100, DOI 10.4204/EPTCS.157.11
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   BUCHI JR, 1969, T AM MATH SOC, V138, P295, DOI 10.2307/1994916
   Burch Jerry R., 1991, VLSI, P49
   Chiang TW, 2015, ICCAD-IEEE ACM INT, P794, DOI 10.1109/ICCAD.2015.7372652
   Coudert O., 1990, 1990 IEEE International Conference on Computer-Aided Design. Digest of Technical Papers (Cat. No.90CH2924-9), P126, DOI 10.1109/ICCAD.1990.129859
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   de Alfaro L, 2007, LECT NOTES COMPUT SC, V4703, P74
   Ehlers R, 2012, PROCEEDINGS OF THE 12TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2012), P91
   Ehlers R, 2012, FORM METHOD SYST DES, V40, P232, DOI 10.1007/s10703-011-0137-x
   Ehlers R, 2011, LECT NOTES COMPUT SC, V6605, P272, DOI 10.1007/978-3-642-19835-9_25
   Ehlers R, 2011, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.50.1
   EMERSON EA, 1982, SCI COMPUT PROGRAM, V2, P241, DOI 10.1016/0167-6423(83)90017-5
   Filiot Emmanuel, 2013, International Journal on Software Tools for Technology Transfer, V15, P541, DOI 10.1007/s10009-012-0222-5
   Filiot E, 2011, FORM METHOD SYST DES, V39, P261, DOI 10.1007/s10703-011-0115-3
   Finkbeiner Bernd, 2013, International Journal on Software Tools for Technology Transfer, V15, P519, DOI 10.1007/s10009-012-0228-z
   Finkbeiner B, 2012, LECT NOTES COMPUT SC, V7148, P219, DOI 10.1007/978-3-642-27940-9_15
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Henzinger TA, 2003, LECT NOTES COMPUT SC, V2719, P886
   Hong YP, 2000, IEEE T COMPUT AID D, V19, P44, DOI 10.1109/43.822619
   Jacobs S., 2016, CORR
   Jacobs S, 2016, ELECTRON P THEOR COM, P27, DOI 10.4204/EPTCS.202.4
   Jacobs Swen, 2014, CORR
   Jacobs Swen, 2015, CORR
   Järvisalo M, 2012, AI MAG, V33, P89
   Jobstmann B., 2006, LNCS, p[4590, 258]
   Jobstmann B, 2006, PROCEEDINGS OF FORMAL METHODS IN COMPUTER AIDED DESIGN, P117
   Kupferman O, 2005, ANN IEEE SYMP FOUND, P531, DOI 10.1109/SFCS.2005.66
   Kurshan R., 1994, Proceed- ings of the 11th International Conference on Analysis and Optimization of Systems - Discrete Event Systems, V199, P16
   Lecoutre C, 2010, CONSTRAINTS, V15, P317, DOI 10.1007/s10601-010-9092-1
   Mishchenko A., 2005, TECHNICAL REPORT
   Mishchenko A, 2006, DES AUT CON, P532, DOI 10.1109/DAC.2006.229287
   Niemetz Aina, 2012, SAT, volume 7317 of Lecture Notes in Computer Science, V7317, P430
   RABIN MO, 1969, T AM MATH SOC, V141, P1, DOI 10.2307/1995086
   RANJAN RK, 1995, INT WORKSH LOG SYNTH
   Roussel O., 2011, J SATISFIABILITY BOO, V7, P139
   RUDELL R, 1993, 1993 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN - DIGEST OF TECHNICAL PAPERS, P42, DOI 10.1109/ICCAD.1993.580029
   Seidl M., 2014, DATE 14, P1, DOI [10.7873/DATE2014.162, DOI 10.7873/DATE2014.162]
   Sohail Saqib, 2013, International Journal on Software Tools for Technology Transfer, V15, P433, DOI 10.1007/s10009-012-0224-3
   Somenzi F, 1999, NATO ADV SCI I F-COM, V173, P303
   Sutcliffe G, 2006, AI COMMUN, V19, P35
   Sutcliffe G, 2001, ARTIF INTELL, V131, P39, DOI 10.1016/S0004-3702(01)00113-8
   Thomas W., 1995, STACS 95. 12th Annual Symposium on Theoretical Aspects of Computer Science. Proceedings, P1
   van Dijk Tom, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P677, DOI 10.1007/978-3-662-46681-0_60
   Van Dijk T, 2013, ELECTRON NOTES THEOR, V296, P127, DOI 10.1016/j.entcs.2013.07.009
NR 65
TC 16
Z9 16
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2017
VL 19
IS 3
BP 367
EP 390
DI 10.1007/s10009-016-0416-3
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EU4DY
UT WOS:000400981200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hendriks, M
   Basten, T
   Verriet, J
   Brassé, M
   Somers, L
AF Hendriks, Martijn
   Basten, Twan
   Verriet, Jacques
   Brasse, Marco
   Somers, Lou
TI A blueprint for system-level performance modeling of software-intensive
   embedded systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Embedded system; System-level modeling; Performance analysis;
   Simulation; Design space exploration
ID VERIFICATION
AB Exploration of design alternatives and estimation of their key performance metrics such as latency and energy consumption is essential for making the proper design decisions in the early phases of system development. Often, high-level models of the dynamic behavior of the system are used for the analysis of design alternatives. Our work presents a blueprint for building efficient and re-usable models for this purpose. It builds on the well-known Y-chart pattern in that it gives more structure for the proper modeling of interaction on shared resources that plays a prominent role in software-intensive embedded systems. We show how the blueprint can be used to model a small yet illustrative example system with the Uppaal tool, and with the Java general-purpose programming language, and reflect on their respective strengths and weaknesses. The Java-based approach has resulted in a very flexible and fast discrete-event simulator with many re-usable components. It currently is used by TNO-ESI and Oc,-Technologies B.V. for early model-based performance analysis that supports the design process for professional printing systems.
C1 [Hendriks, Martijn; Basten, Twan; Verriet, Jacques] Embedded Syst Innovat TNO, Eindhoven, Netherlands.
   [Basten, Twan; Somers, Lou] Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
   [Brasse, Marco; Somers, Lou] Oce Technol BV, Venlo, Netherlands.
C3 Eindhoven University of Technology; Oce-Technologies BV
RP Hendriks, M (corresponding author), Embedded Syst Innovat TNO, Eindhoven, Netherlands.
EM martijn.hendriks@tno.nl
RI Basten, Twan/ABG-3430-2021
OI Basten, Twan/0000-0002-2274-7274; Verriet, Jacques/0000-0002-8781-3383
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   [Anonymous], 1997, THESIS EINDHOVEN U T
   [Anonymous], 2007, P 6 INT WORKSH SOFTW
   Balarin F., 1997, Hardware-Software Co-Design of Embedded Systems: The POLIS Approach
   Basten T., 2010, LNCS, V6415
   Basten T., 2013, Model-Based Design of Adaptive Embedded Systems, P189
   Behrmann G., 2004, LECT NOTES COMPUTER, V3185
   Behrmann G, 2006, P 3 INT C QUANT EV S, P125
   BERTHOMIEU B, 1991, IEEE T SOFTWARE ENG, V17, P259, DOI 10.1109/32.75415
   Bloch J., 2016, Effective Java
   Brekling A., 2009, MICR ICM 2009 INT C
   Brekling A, 2008, J LOGIC ALGEBR PROGR, V77, P1, DOI 10.1016/j.jlap.2008.05.002
   Cassez F., 2000, P 11 INT C CONC THEO
   Cassidy A.S., 2003, DES AUT TEST EUR C E
   David A., 2009, MODEL BASED DESIGN E
   David A., 2012, LECT NOTES COMPUTER, V7610
   David A., 2011, P 9 INT C FORM MOD A
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   Gamma Erich., 1994, DESIGN PATTERNS
   Gerstlauer A., 2003, DES AUT TEST EUR C E
   Gerstlauer A., 2012, 17 AS S PAC DES AUT
   Goetz B, 2006, JAVA CONCURRENCY PRA
   Grassi V., 2005, P 5 INT WORKSH SOFTW
   Hendriks M., 2012, IEEE 15 INT C COMP S
   Hendriks M., 2011, P 2011 IFIP 9 INT C
   Igna G., 2013, THESIS RADBOUD U NIJ
   Jensen Kurt, 2007, International Journal on Software Tools for Technology Transfer, V9, P213, DOI 10.1007/s10009-007-0038-x
   KIENHUIS B, 1997, P IEEE INT C APPL SP
   Lapalme J., 2009, NOUVELLES APPROCHES
   Le Moigne R., 2004, DESIGN AUTOMATION TE, V3
   Madsen J., 2003, SYST ON CHIP 2003 P
   Mahadevan S, 2007, DES AUTOM EMBED SYST, V11, P285, DOI 10.1007/s10617-007-9007-6
   Martens A, 2010, P 1 JOINT WOSP SIPEW
   Meffert Klaus., JGAP JAVA GENETIC AL
   Panerati J, 2014, ACM T DES AUTOMAT EL, V19, DOI 10.1145/2566669
   Paul J.M., 2003, DES AUT C 2003 P
   Paul JM, 2005, ACM T DES AUTOMAT EL, V10, P431, DOI 10.1145/1080334.1080335
   Pimentel AD, 2006, IEEE T COMPUT, V55, P99, DOI 10.1109/TC.2006.16
   Smith C.U., 2007, LECT NOTES COMPUTER, V4486
   Theelen B. D., 2004, Performance Modelling for System-Level Design
   Trcka N., 2010, ESR201001 EINDH U TE
   Trcka N., 2011, INT C EMB COMP SYST
   Zitzler E., 2002, Technical Report Gloriastrasse
NR 44
TC 8
Z9 8
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2016
VL 18
IS 1
BP 21
EP 40
DI 10.1007/s10009-014-0340-3
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB7SL
UT WOS:000368716200002
DA 2024-07-18
ER

PT J
AU Jarraya, Y
   Debbabi, M
AF Jarraya, Yosr
   Debbabi, Mourad
TI Quantitative and qualitative analysis of SysML activity diagrams
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Probabilistic verification; SysML activity diagrams; Markov decision
   process; Model-driven engineering; Activity calculus
ID UML; VERIFICATION; DESIGN; MODELS
AB Model-driven engineering refers to a range of approaches that uses models throughout systems and software development life cycle. Towards sustaining such a successful approach in practice, we present a model-based verification framework that supports the quantitative and qualitative analysis of SysML activity diagrams. To this end, we propose an algorithm that maps SysML activity diagrams into Markov decision processes expressed using the language of the probabilistic symbolic model checker PRISM. Furthermore, we elaborate on the correctness of our translation algorithm by proving its soundness with respect to a SysML activity diagrams operational semantics that we also present in this work. The generated models can be verified against a set of properties expressed in the probabilistic computation tree logic. To automate our approach, we developed a prototype tool that interfaces a modeling environment and the probabilistic model checker. We also show how to leverage adversary generation to provide the developer with a useful counterexample/witness as a feedback on the verified properties. Finally, the established theoretical foundations are complemented with an illustrative case study that demonstrates the usability and benefit of such a framework.
C1 [Jarraya, Yosr; Debbabi, Mourad] Concordia Univ, CIISE, 1515,Ste Catherine West,EV 7-642, Montreal, PQ H3G 2W1, Canada.
C3 Concordia University - Canada
RP Jarraya, Y (corresponding author), Concordia Univ, CIISE, 1515,Ste Catherine West,EV 7-642, Montreal, PQ H3G 2W1, Canada.
EM y_jarray@encs.concordia.ca
OI Debbabi, Mourad/0000-0003-3015-3043
CR Alur R, 1999, FORM METHOD SYST DES, V15, P7, DOI 10.1023/A:1008739929481
   [Anonymous], 2002, Ph.D. Thesis
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], NEW TECHN DISTR SYST
   [Anonymous], 2005, UML PROF SCHED PERF
   [Anonymous], 1998, THESIS U MANNHEIM
   BEATO ME, 2004, P 12 ACM SIGSOFT S F
   Bock C., 2005, International Journal of Product Development, V2, P123, DOI 10.1504/IJPD.2005.006672
   Canevet C., 2004, Software Engineering Notes, V29, P74, DOI 10.1145/974043.974055
   Cattani S., 2002, CONCUR 2002 - Concurrency Theory. 13th International Conference Proceedings (Lecture Notes in Computer Science Vol.2421), P371
   Chouali S, 2011, INNOV SYST SOFTW ENG, V7, P265, DOI 10.1007/s11334-011-0170-3
   Clarke EM, 2008, LECT NOTES COMPUT SC, V5000, P196
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Debbabi M, 2010, VERIFICATION AND VALIDATION IN SYSTEMS ENGINEERING: ASSESSING UML/SYSML DESIGN MODELS, P1, DOI 10.1007/978-3-642-15228-3_1
   Dubois H., 2010, Proceedings 2010 15th IEEE International Conference on Engineering of Complex Computer Systems (ICECCS 2010), P233, DOI 10.1109/ICECCS.2010.2
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   Gallotti S., 2008, P 4 INT C QUAL SOFTW, P119
   Harper R., 2009, PROGRAMMING STANDARD
   Huang X., 2013, TRUSTWORTHY COMPUTIN, V320, P490, DOI [http://dx.doi.org/10.1007/978-3-642-35795-4_62, DOI 10.1007/978-3-642-35795-4_62.ISBN]
   Jarraya Yosr, 2012, 2012 IEEE Sixth International Symposium on Theoretical Aspects of Software Engineering (TASE 2012), P17, DOI 10.1109/TASE.2012.34
   Jarraya Y, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P515
   Jarraya Y, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P95, DOI 10.1109/ECBS.2009.25
   Kamandi A, 2006, ELECTRON NOTES THEOR, V159, P3, DOI 10.1016/j.entcs.2005.12.059
   Kawahara R, 2009, MBSE: 2009 INTERNATIONAL CONFERENCE ON MODEL-BASED SYSTEMS ENGINEERING, P21, DOI 10.1109/MBSE.2009.5031716
   Kerzhner A. A, 2011, P 4 INT WORKSH MULT, V42
   Knorreck Daniel., 2011, ACM SIGSOFT Software Engineering Notes, V36, P1, DOI [10.1145/1921532.1921556, DOI 10.1145/1921532.1921556]
   Kwiatkowska M., 2005, ACM SIGMETRICS PERFO, V32, P16
   Kwiatkowska M., 2008, PRISM PROBABILISTIC
   Kwiatkowska M, 2006, ELECTRON NOTES THEOR, V153, P5, DOI 10.1016/j.entcs.2005.10.030
   LARSEN KG, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P344, DOI 10.1145/75277.75307
   Leitner-Fischer F., 2011, MBEES, P91
   Lindemann C., 2002, P 3 INT WORKSHOP SOF, P25, DOI DOI 10.1145/584369.584375
   Nianhua Yang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P369, DOI 10.1109/QSIC.2010.26
   Object Management Group (OMG), 2008, UML PROF MARTE MOD A
   OMG, 2007, OMG SYST MOD LANG OM
   OMG, 2011, OMG UN MOD LANG SUP
   OMG, 2012, OMG SYST MOD LANG OM
   Pietriga E, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P145, DOI 10.1109/VLHCC.2005.11
   *PRISM, 2007, PRISM PROB SYMB MOD
   PRISM Team, 2008, PRISM LANG SEM
   Rutten J., 2004, CRM MONOGRAPH SERIES, V23
   Segala R, 1994, LECT NOTES COMPUT SC, V836, P481
   Stoelinga M., 2002, PhD thesis,
   Störrle H, 2005, ELECTRON NOTES THEOR, V127, P35, DOI 10.1016/j.entcs.2004.08.046
   Störrle H, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P235, DOI 10.1109/VLHCC.2004.46
   Storrle H., 2005, Software Engineering, P117
   Storrle H., 2004, 0403 LUDW MAX U MUNC
   Tabuchi N, 2005, LECT NOTES COMPUT SC, V3748, P41
   Tribastone, 2008, P 7 INT WORKSHOP SOF, P67
   Tribastone M, 2008, INT CONF QUANT EVAL, P205, DOI 10.1109/QEST.2008.18
   van Glabbeek R., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P130, DOI 10.1109/LICS.1990.113740
   Vardi M. Y., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P1
NR 52
TC 1
Z9 1
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2014
VL 16
IS 4
BP 399
EP 419
DI 10.1007/s10009-014-0305-6
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HT
UT WOS:000209673200005
DA 2024-07-18
ER

PT J
AU Snyder, J
   Seeralan, D
   Sayed, S
   Wilson, J
   Dietrich, CB
   Edwards, SH
   Reed, JH
AF Snyder, Jason
   Seeralan, Deepan
   Sayed, Shereef
   Wilson, Jeffery
   Dietrich, Carl B.
   Edwards, Stephen H.
   Reed, Jeffrey H.
TI Open source software-defined radio tools for education, research, and
   rapid prototyping
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software-defined radio; Rapid prototyping tools; Education; OSSIE
AB Software-defined radios (SDR) offer several advantages over traditional, hardware-based radios, most notably flexibility and reconfigurability. Developing SDR applications can be a difficult process, however, for several reasons. First, much of the work involved deals with standards compliance, rather than radio functionality. This portion of the work is very detailed and error prone, leading to wasted time and effort. Second, there is little to no support available for the debugging and refinement portions of the development cycle. There is no easy way to monitor or control SDR applications at runtime. The Waveform Workshop was created to address these issues. A part of the OSSIE SDR project, the Waveform Workshop drastically reduces the time and effort involved in SDR development. It automatically generates the portions of the software related to standards compliance, letting developers concentrate on radio functionality. In addition, the Waveform Workshop provides tools for both monitoring and controlling SDR applications at runtime, making debugging much easier.
C1 [Snyder, Jason; Seeralan, Deepan; Sayed, Shereef; Wilson, Jeffery; Dietrich, Carl B.; Edwards, Stephen H.; Reed, Jeffrey H.] Virginia Tech, Blacksburg, VA USA.
C3 Virginia Polytechnic Institute & State University
RP Snyder, J (corresponding author), Virginia Tech, Blacksburg, VA USA.
EM snyder.jason@gmail.com
RI REED, JEFFREY/HLV-9675-2023
OI REED, JEFFREY/0000-0003-3494-1901
CR [Anonymous], 10031 IEEE
   Bard J., 2007, SOFTWARE DEFINED RAD
   Cormier A.R., 2010, PHYS COMMUN-AMST, V3, P73
   Gamma Erich., 1994, DESIGN PATTERNS
   González CRA, 2009, IEEE COMMUN MAG, V47, P48, DOI 10.1109/MCOM.2009.5273808
   González CRA, 2009, IEEE COMMUN MAG, V47, P50, DOI 10.1109/MCOM.2009.5277455
   Guan J., 2009, P 5 INT C WIR COMM N, DOI [10.1109/WICOM.2009.5302559, DOI 10.1109/WICOM.2009.5302559]
   *JOINT TACT RAD SY, 2004, SOFTW COMM ARCH SPEC
   Reed J.H., 2002, SOFTWARE RADIO MODER
   Robert M., 2004, SDR FOR TECHN C
   Singh B, 2009, J POWER ELECTRON, V9, P1
NR 11
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2014
VL 16
IS 1
BP 67
EP 80
DI 10.1007/s10009-012-0241-2
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HQ
UT WOS:000209672900005
DA 2024-07-18
ER

PT J
AU Kaufmann, D
   Biere, A
AF Kaufmann, Daniela
   Biere, Armin
TI Improving AMulet2 for verifying multiplier circuits using SAT solving
   and computer algebra
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Circuit verification; Multipliers; Computer algebra; SAT solving;
   Grobner basis; Proof certificates
AB Verifying arithmetic circuits and most prominently multiplier circuits is an important problem which in practice is still considered to be challenging. One of the currently most successful verification techniques relies on algebraic reasoning. In this article, we present AMulet2, a fully automatic tool for verification of integer multipliers combining SAT solving and computer algebra. Our tool models multipliers given as and-inverter graphs as a set of polynomials and applies preprocessing techniques based on elimination theory of Grobner bases. Finally, it uses a polynomial reduction algorithm to verify the correctness of the given circuit. AMulet2 is a re-factorization and improved re-implementation of our previous verification tool AMulet1 and cannot only be used as a stand-alone tool but also serves as a polynomial reasoning framework. We present a novel XOR-based slicing approach and discuss improvements on the data structures including monomial sharing.
C1 [Kaufmann, Daniela] TU Wien, Vienna, Austria.
   [Biere, Armin] Albert Ludwigs Univ, Freiburg, Germany.
C3 Technische Universitat Wien; University of Freiburg
RP Kaufmann, D (corresponding author), TU Wien, Vienna, Austria.
EM daniela.kaufmann@tuwien.ac.at; biere@informatik.uni-freiburg.de
RI Kaufmann, Daniela/JFB-4022-2023; Biere, Armin/C-4438-2013
OI Kaufmann, Daniela/0000-0002-5645-0292; Biere, Armin/0000-0001-7170-9242
FU TU Wien (TUW)
FX Open access funding provided by TU Wien (TUW).
CR [Anonymous], 1997, Ideals, Varieties, and Algorithms: An Introduction to Computational Algebraic Geometry and Commutative Algebra
   Beame P, 1996, P LOND MATH SOC, V73, P1
   Becker T., 1993, GRADUATE TEXTS MATH, V141
   Biere A., 2011, TECHNICAL REPORT
   Biere Armin, 2020, Department of Computer Science Report Series B, VB- 2020-1, P51
   Biere Armin., 2016, Proc. of SAT Competition 2016 - Solver and Benchmark Descriptions, P65
   Bryant R. E., 2001, International Journal on Software Tools for Technology Transfer, V3, P137, DOI 10.1007/s100090100037
   Buchberger Bruno, 1965, Ein Algorithmus zum Auffinden der Basiselemente des Restklassenringes nach einem nulldimensionalen Polynomideal
   Ciesielski M, 2020, IEEE T COMPUT AID D, V39, P1346, DOI 10.1109/TCAD.2019.2912944
   Fleury, ISABELLE PAC FORMALI
   Granlund T., 2016, GNU MP GNU MULTIPLE
   Heule M J H., 2015, ALL PROOFS PROOFS AL, V55, P1, DOI DOI 10.1017/S1471068415000125
   Hirsch Edward., 2005, Report on the mixed boolean-algebraic solver
   Homma N, 2006, IEICE T FUND ELECTR, VE89A, P3500, DOI 10.1093/ietfec/e89-a.12.3500
   Kaufmann, 2020, ARTIFACT AMULET2 0 V
   Kaufmann, 2022, ARTIFACT AMULET2 1
   Kaufmann, 2021, PRACTICAL ALGEBRAIC
   Kaufmann, 2021, AMULET2 VERIFYING MU
   Kaufmann, 2020, AMULET 1 5
   Kaufmann Daniela, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12652), P357, DOI 10.1007/978-3-030-72013-1_19
   Kaufmann Daniela, 2020, Computer Algebra in Scientific Computing. 22nd International Workshop, CASC 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12291), P368, DOI 10.1007/978-3-030-60026-6_21
   Kaufmann D., 2019, DEP COMPUTER SCI S B, V1, P49
   Kaufmann D., 2020, THESIS J KEPLER U LI
   Kaufmann D, 2020, FORM METHOD SYST DES, V56, P22, DOI 10.1007/s10703-018-00329-2
   Kaufmann D, 2020, DES AUT TEST EUROPE, P654, DOI 10.23919/DATE48585.2020.9116276
   Kaufmann D, 2019, 2019 FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD), P28, DOI [10.23919/FMCAD.2019.8894250, 10.23919/fmcad.2019.8894250]
   Kaufmann Daniela., 2020, Vampire 2018 and Vampire 2019. The 5th and 6th Vampire Workshops, P1
   Kaufmann Daniela., 2020, Formal Methods in Computer-Aided Design, FMCAD 2020, V1, P264
   Kuehlmann A, 2002, IEEE T COMPUT AID D, V21, P1377, DOI 10.1109/TCAD.2002.804386
   Lichtblau D, 2012, ILLINOIS J MATH, V56, P177, DOI 10.1215/ijm/1380287466
   Lv JP, 2013, IEEE T COMPUT AID D, V32, P1409, DOI 10.1109/TCAD.2013.2259540
   Mahzoon A, 2020, DES AUT TEST EUROPE, P544, DOI 10.23919/DATE48585.2020.9116485
   Mahzoon A, 2018, ICCAD-IEEE ACM INT, DOI 10.1145/3240765.3240837
   Mahzoon A, 2019, PROCEEDINGS OF THE 2019 56TH ACM/EDAC/IEEE DESIGN AUTOMATION CONFERENCE (DAC), DOI 10.1145/3316781.3317898
   Parhami B., 2000, Computer Arithmetic: Algorithms and Hardware Designs
   Sharangpani Harsh., 1994, Statistical Analysis of Floating Point Flaw in the Pentium Processor
   Temel M., 2020, MULTGEN
   Temel M, 2020, LECT NOTES COMPUT SC, V12224, P485, DOI 10.1007/978-3-030-53288-8_23
NR 38
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2023
VL 25
IS 2
SI SI
BP 133
EP 144
DI 10.1007/s10009-022-00688-6
EA JAN 2023
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF2J1
UT WOS:000912339600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Biere, A
   Parker, D
AF Biere, Armin
   Parker, David
TI Tools and algorithms for the construction and analysis of systems: a
   special issue for TACAS 2020
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software verification; Theorem proving; Model checking; Static analysis;
   Runtime verification; Probabilistic verification; Compositional
   verification; Symbolic execution; Concurrent systems; Formal
   specification techniques; SAT and SMT solving; Tool environments and
   tool architectures; Software engineering and maintenance
AB This special issue of Software Tools for Technology Transfer comprises extended versions of selected papers from the 26th edition of the International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS 2020). The focus of this conference series is tools and algorithms for the rigorous analysis of software and hardware systems, and the papers in this special cover the spectrum of current work in this field.
C1 [Biere, Armin] Albert Ludwigs Univ, Freiburg, Germany.
   [Parker, David] Univ Birmingham, Sch Comp Sci, Birmingham, W Midlands, England.
C3 University of Freiburg; University of Birmingham
RP Biere, A (corresponding author), Albert Ludwigs Univ, Freiburg, Germany.; Parker, D (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham, W Midlands, England.
EM biere@informatik.uni-freiburg.de; d.a.parker@cs.bham.ac.uk
RI som, nie/JFK-6681-2023
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Badings T, 2022, INT J SOFTW TOOLS TE, V24, P803, DOI 10.1007/s10009-022-00673-z
   Becker B, 2022, INT J SOFTW TOOLS TE, V24, P717, DOI 10.1007/s10009-022-00671-1
   Biere A., 2020, LECT NOTES COMPUTER, V12079, DOI [10.1007/978-3-030-45237-7, DOI 10.1007/978-3-030-45237-7]
   Biere A., 2020, LECT NOTES COMPUTER, V12078, DOI [10.1007/978-3-030-45190-5, DOI 10.1007/978-3-030-45190-5]
   Budde CE, 2022, INT J SOFTW TOOLS TE, V24, P821, DOI 10.1007/s10009-022-00675-x
   Chakraborty S, 2022, INT J SOFTW TOOLS TE, V24, P843, DOI 10.1007/s10009-022-00676-w
   Frenkel H, 2022, INT J SOFTW TOOLS TE, V24, P667, DOI 10.1007/s10009-022-00669-9
   Frohn F, 2022, INT J SOFTW TOOLS TE, V24, P691, DOI 10.1007/s10009-022-00670-2
   Hamers R, 2022, INT J SOFTW TOOLS TE, V24, P757, DOI 10.1007/s10009-022-00674-y
   Hiep HDA, 2022, INT J SOFTW TOOLS TE, V24, P783, DOI 10.1007/s10009-022-00679-7
   Neele T, 2022, INT J SOFTW TOOLS TE, V24, P735, DOI 10.1007/s10009-022-00672-0
NR 11
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2022
VL 24
IS 5
SI SI
BP 663
EP 665
DI 10.1007/s10009-022-00677-9
EA SEP 2022
PG 3
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6I0IB
UT WOS:000858787300001
PM 36186273
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Lehmann, S
   Schupp, S
AF Lehmann, Sascha
   Schupp, Sibylle
TI Bounded DBM-based clock state construction for timed automata in Uppaal
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Clock state construction; Difference bound matrix (DBM); Timed automata;
   DBM overapproximation; Minimal constraint system (MCS)
ID MODEL-CHECKING; SPACE
AB When the simulation of a system, or the verification of its model, needs to be resumed in an online context, we face the problem that a particular starting state needs to be reached or constructed, from which the process is then continued. For timed automata, especially the construction of a desired clock state, represented as a difference bound matrix (DBM), can be problematic, as only a limited set of DBM operations is available, which often does not include the ability to set DBM entries individually to the desired value. In online applications, we furthermore face strict timing requirements imposed on the generation process. In this paper, we present an approach to construct a target clock state in a model via sequences of DBM operations (as supported by the model checker Uppaal), for which we can guarantee bounded lengths, solving the present problem of ever-growing sequences over time. The approach forges new intermediate states and transitions based on an overapproximation of the target state, followed by a constraining phase, until the target state is reached. We prove that the construction sequence lengths are independent of the original trace lengths and are determined by the number of system clocks only, allowing for state construction in bounded time. Furthermore, we implement the (re-)construction routines and an extended Uppaal model simulator which provides the original operation sequences. Applying the approach to a test model suite as well as randomly generated DBM operation sequences, we empirically validate the theoretical result and the implementation.
C1 [Lehmann, Sascha; Schupp, Sibylle] Hamburg Univ Technol, Hamburg, Germany.
C3 Hamburg University of Technology
RP Lehmann, S (corresponding author), Hamburg Univ Technol, Hamburg, Germany.
EM s.lehmann@tuhh.de; schupp@tuhh.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Abdelkrim A, 2012, ACTA CYBERN, V20, P347, DOI 10.14232/actacyb.20.3.2012.1
   Aho A. V., 1972, SIAM Journal on Computing, V1, P131, DOI 10.1137/0201008
   André É, 2019, LECT NOTES COMPUT SC, V11823, P129, DOI 10.1007/978-3-030-31157-5_9
   [Anonymous], THESIS UPPSALA U
   Audemard G, 2002, LECT NOTES COMPUT SC, V2529, P243
   Behrmann G., 2002, Formal Techniques in Real-Time and Fault-Tolerant Systems. 7th International Symposium, FTRTFT 2002. Proceedings (Lecture Notes in Computer Science Vol.2469), P3
   Behrmann G, 2004, LECT NOTES COMPUT SC, V2988, P312
   Behrmann G, 2006, INT CONF QUANT EVAL, P125
   Ben Salah R, 2006, LECT NOTES COMPUT SC, V4137, P465
   Bengtsson J., 2002, THESIS UPPSALA U
   Bucker H.M., 2008, ADV AUTOMATIC DIFFER, P223, DOI DOI 10.1007/978-3-540-6892-3-20
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   David A., 2006, UPPAAL DBM LIB PROGR
   Dubois D, 1996, APPL INTELL, V6, P287, DOI 10.1007/BF00132735
   Ehlers R, 2010, REAL TIM SYST SYMP P, P360, DOI 10.1109/RTSS.2010.36
   Evangelista S, 2005, LECT NOTES COMPUT SC, V3639, P43
   Fages F, 2009, LECT NOTES COMPUT SC, V5732, P319, DOI 10.1007/978-3-642-04244-7_26
   Hertzberg J., 1988, KUNSTL INTELL, P61
   HUANG YN, 1995, DIG PAP INT SYMP FAU, P381, DOI 10.1109/FTCS.1995.466961
   Jagtap P, 2020, ACM TRANS CYBER-PHYS, V4, DOI 10.1145/3407183
   Jensen HE., 1996, BRICS REP SER, V3, P24, DOI 10.7146/brics.v3i24.20005
   Kaplan S.F., 1998, TRACE REDUCTION VIRT
   Kong FX, 2018, ACM IEEE INT CONF CY, P22, DOI 10.1109/ICCPS.2018.00011
   Larsen K. G., 1999, Nordic Journal of Computing, V6, P271
   Larsen KG, 1997, REAL TIM SYST SYMP P, P14, DOI 10.1109/REAL.1997.641265
   Lehmann Sascha, UPPYYL STATE CONSTRU
   Lehmann Sascha, UPPYYL SIMULATOR
   Liu Y, 2005, LECT NOTES COMPUT SC, V3489, P1
   Lonn H, 1997, PACIFIC RIM INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT SYSTEMS, PROCEEDINGS, P235, DOI 10.1109/PRFTS.1997.640153
   Makowsky J. A., 1995, Mathematical Foundations of Computer Science 1995. 20th International Symposium, MFCS '95. Proceedings, P540
   Mohan C., 1993, 19th International Conference on Very Large Data Bases Proceedings, P368
   Rinast J., 2014, INT J ADV SYST MEAS, V7, P91
   Rinast J., 2015, THESIS HAMBURG U TEC
   Rinast Jonas, OMC FRAMEWORK
   Salehi M, 2016, IEEE T VLSI SYST, V24, P2426, DOI 10.1109/TVLSI.2015.2512839
   Sorea M., 2003, ELECT NOTES THEOR CO, V68, P116, DOI [10.1016/S1571-0661(04)80523-1, DOI 10.1016/S1571-0661(04)80523-1]
   Sorin DJ, 2002, CONF PROC INT SYMP C, P123, DOI 10.1109/ISCA.2002.1003568
   Yuhong Zhao, 2012, 2012 IEEE 15th International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing, P154, DOI 10.1109/ISORC.2012.28
   Ziv A, 1997, IEEE T COMPUT, V46, P976, DOI 10.1109/12.620479
NR 39
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2023
VL 25
IS 1
SI SI
BP 19
EP 47
DI 10.1007/s10009-022-00667-x
EA SEP 2022
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9R7IA
UT WOS:000852270900001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Weik, N
   Volk, M
   Katoen, JP
   Niessen, N
AF Weik, Norman
   Volk, Matthias
   Katoen, Joost-Pieter
   Niessen, Nils
TI DFT modeling approach for operational risk assessment of railway
   infrastructure
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Dynamic fault trees; Railways; Risk assessment; Railway infrastructure;
   Routability
ID FAULT-TREE ANALYSIS; FORMAL METHODS; SAFETY; AVAILABILITY; VERIFICATION;
   ALGORITHMS; CHECKING; SYSTEM; STATE
AB Reliability engineering of railway infrastructure aims to understand failure processes and to improve the efficiency and effectiveness of investments and maintenance planning such that a high quality of service is achieved. While formal methods are widely used to verify the design specifications of safety-critical components in train control, quantitative methods to analyze the service reliability associated with specific system designs are only starting to emerge. In this paper, we strive to advance the use of formal fault-tree modeling for providing a quantitative assessment of the railway infrastructure's service reliability in the design phase. While, individually, most subsystems required for route-setting and train control are well understood, the system's reliability to globally provide its designated service capacity is less studied. To this end, we present a framework based on dynamic fault trees that allows to analyze train routability based on train paths projected in the interlocking system. We particularly focus on the dependency of train paths on track-based assets such as switches and crossings, which are particularly prone to failures due to their being subject to weather and heavy wear. By using probabilistic model checking to analyze and verify the reliability of feasible route sets for scheduled train lines, performance metrics for reliability analysis of the system as a whole as well as criticality analysis of individual (sub-)components become available. The approach, which has been previously discussed in our paper at FMICS 2019, is further refined, and additional algorithmic approaches, analysis settings and application scenarios in infrastructure and maintenance planning are discussed.
C1 [Weik, Norman] German Aerosp Ctr DLR, Inst Transportat Syst, Braunschweig, Germany.
   [Volk, Matthias] Univ Twente, Formal Methods & Tools FMT, Enschede, Netherlands.
   [Katoen, Joost-Pieter] Rhein Westfal TH Aachen, Chair Software Modeling & Verificat, Aachen, Germany.
   [Niessen, Nils] Rhein Westfal TH Aachen, Inst Transport Sci, Aachen, Germany.
C3 Helmholtz Association; German Aerospace Centre (DLR); University of
   Twente; RWTH Aachen University; RWTH Aachen University
RP Weik, N (corresponding author), German Aerosp Ctr DLR, Inst Transportat Syst, Braunschweig, Germany.
EM norman.weik@dlr.de; m.volk@utwente.nl; katoen@cs.rwth-aachen.de;
   niessen@via.rwth-aachen.de
RI Weik, Norman/HGD-3572-2022; Niessen, Nils/JPY-3000-2023; Katoen,
   Joost-Pieter/O-3307-2018
OI Weik, Norman/0000-0002-5977-9958; Niessen, Nils/0000-0001-6236-8335; 
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Andrews J, 2014, RELIAB ENG SYST SAFE, V130, P76, DOI 10.1016/j.ress.2014.04.021
   Baier C, 2013, MATH STRUCT COMP SCI, V23, P751, DOI 10.1017/S0960129512000254
   Baier C, 2018, HDB MODEL CHECKING, P963, DOI [DOI 10.1007/978-3-319-10575-8, DOI 10.1007/978-3-319-10575-828, DOI 10.1007/978-3-319-10575-8_28]
   Basile D., 2018, LEVERAGING APPL FORM, V11245, P372
   Basile D, 2018, LECT NOTES COMPUT SC, V11023, P20, DOI 10.1007/978-3-319-98938-9_2
   Beek Maurice H., 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P762, DOI 10.1007/978-3-030-30942-8_46
   Bemment SD, 2018, P I MECH ENG F-J RAI, V232, P1407, DOI 10.1177/0954409717727879
   Besinovic N, 2020, TRANSPORT REV, V40, P457, DOI 10.1080/01441647.2020.1728419
   Biagi M, 2017, TRANSPORT RES C-EMER, V82, P314, DOI 10.1016/j.trc.2017.07.002
   Birnbaum Z.W., 1969, IMPORTANCE DIFFERENT, P581
   Boudali H, 2007, I C DEPEND SYS NETWO, P708, DOI 10.1109/DSN.2007.37
   Budde CE, 2020, LECT NOTES COMPUT SC, V12289, P233, DOI 10.1007/978-3-030-59854-9_17
   Butler M, 2020, LECT NOTES COMPUT SC, V12327, P189, DOI 10.1007/978-3-030-58298-2_8
   CENELEC, 2017, 50129 CENELECEN
   CENELEC, 2018, 501261501262 CENELEC
   CENELEC, 2011, 50128 CENELECEN
   Chen SK, 2007, IET ELECTR POWER APP, V1, P161, DOI 10.1049/iet-epa:20060244
   Cimatti A, 2009, LECT NOTES COMPUT SC, V5643, P188, DOI 10.1007/978-3-642-02658-4_17
   DUGAN JB, 1990, P ANNU REL MAINT SYM, P286
   Dutuit Y, 2001, RELIAB ENG SYST SAFE, V72, P213, DOI 10.1016/S0951-8320(01)00004-7
   Estevan A.M., 2015, THESIS LULEA U TECHN
   Fantechi A, 2014, LECT NOTES COMPUT SC, V8368, P167, DOI 10.1007/978-3-319-05032-4_13
   Ferrari A, 2020, PROC INT CONF SOFTW, P62, DOI 10.1145/3377811.3380373
   Ferrari A, 2011, FORMS/FORMAT 2010: FORMAL METHODS FOR AUTOMATION AND SAFETY IN RAILWAY AND AUTOMOTIVE SYSTEMS, P107, DOI 10.1007/978-3-642-14261-1_11
   Fokkink W., 1998, P FMICS, V98, P171
   Ghadhab M, 2019, RELIAB ENG SYST SAFE, V186, P37, DOI 10.1016/j.ress.2019.02.005
   Guck D, 2014, P RAILWAYS
   Gulati R, 1997, P A REL MAI, P57, DOI 10.1109/RAMS.1997.571665
   Hartonas-Garmhausen V, 2000, SCI COMPUT PROGRAM, V36, P53, DOI 10.1016/S0167-6423(99)00016-7
   Hassankiadeh S.J., 2011, THESIS KTH STOCKHOLM
   Henry J., 1996, THESIS LOUGHBOROUGH
   Hensel C, 2022, INT J SOFTW TOOLS TE, V24, P589, DOI 10.1007/s10009-021-00633-z
   Hermanns H., 2005, P 5 INT WORKSH SOFTW, P13, DOI [10.1145/1071021.1071023, DOI 10.1145/1071021.1071023]
   James P., 2011, ELECT COMMUN EASST, V35
   Junges Sebastian, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P299, DOI 10.1109/DSN.2016.35
   Junges S., 2018, ser. Lecture Notes in Computer Science, V10877, P272, DOI [10.1007/978-3-319-91268-4_14, DOI 10.1007/978-3-319-91268-4_14]
   Junges S, 2017, FORM ASP COMPUT, V29, P651, DOI 10.1007/s00165-016-0412-0
   Kalvakunta R.G., 2017, THESIS NTNU
   Kanso K, 2009, ELECTRON NOTES THEOR, V250, P19, DOI 10.1016/j.entcs.2009.08.015
   Kassa, 2017, P INT S
   Katoen Joost-Pieter, 2017, ModelEd, TestEd, TrustEd - Essays Dedicated to Ed Brinksma on the Occasion of His 60th Birthday. LNCS 10500, P368, DOI 10.1007/978-3-319-68270-9_19
   Katoen JP, 2016, PROCEEDINGS OF THE 31ST ANNUAL ACM-IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE (LICS 2016), P31, DOI 10.1145/2933575.2934574
   Khaled AA, 2015, TRANSPORT RES B-METH, V71, P71, DOI 10.1016/j.trb.2014.10.002
   Luteberget B, 2018, FORM METHOD SYST DES, V52, P1, DOI 10.1007/s10703-017-0281-z
   Morant A, 2017, P I MECH ENG F-J RAI, V231, P226, DOI 10.1177/0954409715624466
   ORR-Office of Road and Rail, 2013, ONL DAT PORT RAIL IN
   Ou Y, 2003, IEEE T RELIAB, V52, P220, DOI 10.1109/TR.2003.809657
   Platzer A, 2009, LECT NOTES COMPUT SC, V5885, P246, DOI 10.1007/978-3-642-10373-5_13
   Prescott D, 2013, 59TH ANNUAL RELIABILITY AND MAINTAINABILITY SYMPOSIUM (RAMS)
   Rama D, 2013, P I MECH ENG F-J RAI, V227, P344, DOI 10.1177/0954409713481725
   RAUZY A, 1993, RELIAB ENG SYST SAFE, V40, P203, DOI 10.1016/0951-8320(93)90060-C
   Ruijters E., 2019, P ESREL, P878, DOI DOI 10.3850/978-981-11-2724-30641-CD
   Ruijters E., 2016, P DSN
   Ruijters E, 2015, COMPUT SCI REV, V15-16, P29, DOI 10.1016/j.cosrev.2015.03.001
   Stenström C, 2016, P I MECH ENG F-J RAI, V230, P1457, DOI 10.1177/0954409715592189
   Vanit-Anunchai S, 2010, LECT NOTES COMPUT SC, V6116, P137, DOI 10.1007/978-3-642-13414-2_10
   Vesely W.E., 1983, MEASURES RISK IMPORT
   Vesely William, 2002, Fault Tree Handbook with Aerospace Applications
   Volk M, 2019, LECT NOTES COMPUT SC, V11687, P40, DOI 10.1007/978-3-030-27008-7_3
   Volk M, 2018, IEEE T IND INFORM, V14, P370, DOI 10.1109/TII.2017.2710316
   Weik N., 2020, THESIS RWTH AACHEN U
   Weik N, 2017, J RAIL TRANSPORT PLA, V7, P114, DOI 10.1016/j.jrtpm.2017.06.001
   Winter K., 2003, 26 AUSTRALASIAN COMP, P309
NR 63
TC 5
Z9 5
U1 0
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2022
VL 24
IS 3
SI SI
BP 331
EP 350
DI 10.1007/s10009-022-00652-4
EA APR 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1D5TB
UT WOS:000779022800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Hansen, RR
   Larsen, KG
   Legay, A
   Jensen, PG
   Poulsen, DB
AF Hansen, Rene Rydhof
   Larsen, Kim Guldstrand
   Legay, Axel
   Jensen, Peter Gjol
   Poulsen, Danny Bogsted
TI ADTLang: a programming language approach to attack defense trees
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Attack-Defense tree; Security; Modelling; UPPAAL
AB The Attack Defense Tree framework was developed to facilitate abstract reasoning about security issues of complex systems. As such, a zoo of techniques and extensions have emerged in an attempt to extend the simple Boolean logic of Attack Defense Trees with behavioral properties and quantities. In this paper we expand the modeling power of Attack Defense Trees by introducing a notion of temporal dependencies between attacks, forcing specific ordering of event in successful attacks. Importantly, we introduce a notion of policy for the defender, facilitating a pseudo-active defender, mechanically reacting to the choices of an attacker. To easen the use of Attack Defense Trees we introduce a domain specific language (DSL) and an accompanying tool. The introduction of the DSL facilitates reuse, modularity, collaborative tree construction and separation of logical properties and quantitative/behavioral elements. The usefulness of our framework is exhibited on a small running example, utilizing the policy-notion to implement a reactive Break The Glass policy. We note that all the implemented analysis techniques use well established tools from the formal methods community to produce the given results, relying on non-trivial and automatic translation to and from the target formalisms. Lastly we present our Open Source prototype-tool, capable of conducting various analysis and visualizing the results.
C1 [Hansen, Rene Rydhof; Larsen, Kim Guldstrand; Jensen, Peter Gjol; Poulsen, Danny Bogsted] Aalborg Univ, Aalborg, Denmark.
   [Legay, Axel] UCLouvain, Louvain La Neuve, Belgium.
C3 Aalborg University; Universite Catholique Louvain
RP Poulsen, DB (corresponding author), Aalborg Univ, Aalborg, Denmark.
EM dannybpoulsen@gmail.com
OI Jensen, Peter Gjol/0000-0002-9320-9991; Poulsen, Danny
   Bogsted/0000-0001-9623-0748; Hansen, Rene Rydhof/0000-0002-5688-6432;
   Guldstrand Larsen, Kim/0000-0002-5953-3384
CR ALUR R, 1990, LECT NOTES COMPUT SC, V443, P322
   Aslanyan Zaruhi, 2015, Principles of Security and Trust. 4th International Conference, POST 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9036, P95, DOI 10.1007/978-3-662-46666-7_6
   Aslanyan Z, 2016, P IEEE CSFW, P105, DOI 10.1109/CSF.2016.15
   David Alexandre Larsen G, 2015, STTT, V17, P397, DOI [10.1007/s10009-014-0361, DOI 10.1007/S10009-014-0361]
   Gadyatskaya O, 2016, LECT NOTES COMPUT SC, V9884, P35, DOI 10.1007/978-3-319-44878-7_3
   Hermanns H, 2016, LECT NOTES COMPUT SC, V9635, P163, DOI 10.1007/978-3-662-49635-0_9
   Johnson P, 2019, 13TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2018), DOI 10.1145/3230833.3232799
   Kordy B, 2014, J LOGIC COMPUT, V24, P55, DOI 10.1093/logcom/exs029
   Kumar R, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1907, DOI 10.1145/3167132.3167336
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Liu P., 2017, GRAPH MOD SEC 4 INT
   Schneier B, 1999, DR DOBBS J, V24, P21
   Younes L S Hakan, 2005, THESIS
NR 13
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2021
VL 23
IS 1
SI SI
BP 89
EP 104
DI 10.1007/s10009-020-00593-w
EA JAN 2021
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PV6IB
UT WOS:000605899200001
DA 2024-07-18
ER

PT J
AU Dghaym, D
   Dalvandi, M
   Poppleton, M
   Snook, C
AF Dghaym, Dana
   Dalvandi, Mohammadsadegh
   Poppleton, Michael
   Snook, Colin
TI Formalising the Hybrid ERTMS Level 3 specification in iUML-B and Event-B
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE ERTMS; Event-B; iUML-B; Refinement; Validation
AB We demonstrate refinement-based formal development of the hybrid, 'fixed virtual block' approach to train movement control for the emerging European Rail Traffic Management System (ERTMS) level 3. Our approach uses iUML-B diagrams as a front end to the Event-B modelling language. We use abstraction to verify the principle of movement authority before gradually developing the details of the Virtual Block Detector component in subsequent refinements, thus verifying that it preserves the safety properties. We animate the refined models to demonstrate their validity using the scenarios from the Hybrid ERTMS Level 3 (HLIII) specification. We reflect on our team-based approach to finding useful modelling abstractions and demonstrate a systematic modelling method based on the state and class diagrams of iUML-B. The component and control flow architectures of the application, its environment and interacting systems emerge through the layered refinement process. The runtime semantics of the specification's state-machine behaviour are modelled in the final refinements. We discuss how the model could be used to generate an implementation using code generation tools and techniques.
C1 [Dghaym, Dana; Poppleton, Michael; Snook, Colin] Univ Southampton, Elect & Comp Sci, Southampton, Hants, England.
   [Dalvandi, Mohammadsadegh] Univ Surrey, Dept Comp Sci, Guildford, Surrey, England.
C3 University of Southampton; University of Surrey
RP Snook, C (corresponding author), Univ Southampton, Elect & Comp Sci, Southampton, Hants, England.
EM dd4g12@ecs.soton.ac.uk; m.dalvandi@surrey.ac.uk; mrp@ecs.soton.ac.uk;
   cfs@soton.ac.uk
OI Snook, Colin/0000-0002-0210-0983; Dalvandi,
   Mohammadsadegh/0000-0001-8813-780X
FU ECSEL Joint Undertaking [692455]; European Union
FX This work has been conducted withi n the ENABLE-S3 project that has
   received funding from the ECSEL Joint Undertaking under Grant Agreement
   no. 692455. This Joint Undertaking receives support from the European
   Union's HORIZON 2020 research and innovation programme and Austria,
   Denmark, Germany, Finland, Czech Republic, Italy, Spain, Portugal,
   Poland, Ireland, Belgium, France, Netherlands, UK, Slovakia, and Norway.
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial Jean-Raymond, 2018, LECT NOTES COMPUTER, P322
   Arcaini Paolo, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P277, DOI 10.1007/978-3-319-91271-4_19
   Beato ME, 2006, MODERN FORMAL METHOD
   Borger E., 2003, ABSTRACT STATE MACHI
   Butler M., 2017, Reliability, Safety, and Security of Railway Systems. Modelling, Analysis, Verification, and Certification. Second International Conference, RSSRail 2017. Proceedings LNCS 10598, P71, DOI 10.1007/978-3-319-68499-4_5
   Butler M, 2013, ELECTRON P THEOR COM, P36, DOI 10.4204/EPTCS.115.3
   Butler M, 2009, LECT NOTES COMPUT SC, V5423, P20
   Cunha Alcino, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P307, DOI 10.1007/978-3-319-91271-4_21
   Dalvandi Mohammadsadegh, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P234, DOI 10.1007/978-3-319-91271-4_16
   Dalvandi M., 2019, WORKSH PRACT FORM VE
   Dalvandi M., 2015, ELECT COMMUNICATIONS, V72
   Dalvandi M., 2018, 7 ROD WORKSH JUN
   Dalvandi M, 2017, SCI COMPUT PROGRAM, V148, P49, DOI 10.1016/j.scico.2017.05.010
   Dghaym Dana, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P338, DOI 10.1007/978-3-319-91271-4_23
   Edmunds A., 2011, PLACES2011 APRIL
   EEIG ERTMS Users Group, 2018, PRINC HYBR ERTMS ETC
   EEIG ERTMS Users Group, PRINC HYBR ERTMS ETC
   Eysholdt M., 2010, P ACM INT C COMPANIO, P307, DOI DOI 10.1145/1869542.1869625
   Fathabadi AS, 2015, FORM ASP COMPUT, V27, P499, DOI 10.1007/s00165-014-0311-1
   Fürst A, 2016, SCI COMPUT PROGRAM, V131, P59, DOI 10.1016/j.scico.2016.04.010
   Hansen Dominik, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P292, DOI 10.1007/978-3-319-91271-4_20
   Hoang T.S., 2018, P 2017 22 INT C ENG
   Hoang T.S., 2013, IND DEPLOYMENT SYSTE, P211
   Hoang TS, 2017, IEEE INT C ENG COMP, P100, DOI 10.1109/ICECCS.2017.27
   Kossak Felix, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P184, DOI 10.1007/978-3-319-05843-6_14
   Ladenberger L, 2009, LECT NOTES COMPUT SC, V5825, P202, DOI 10.1007/978-3-642-04570-7_17
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Mammar Amel, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P353, DOI 10.1007/978-3-319-91271-4_24
   Mashkoor A, 2018, SOFTWARE PRACT EXPER, V48, P2350, DOI 10.1002/spe.2634
   Pang C, 2016, IEEE INTL CONF IND I, P676, DOI 10.1109/INDIN.2016.7819246
   Paul Gibson J, 2012, SIGSOFT SOFTW ENG NO, V37, P32, DOI [10.1145/2237796.2237825, DOI 10.1145/2237796.2237825]
   Platzer A, 2009, LECT NOTES COMPUT SC, V5885, P246, DOI 10.1007/978-3-642-10373-5_13
   Said MY, 2015, SOFTW SYST MODEL, V14, P1557, DOI 10.1007/s10270-013-0391-z
   Snook C, 2006, ACM T SOFTW ENG METH, V15, P92, DOI 10.1145/1125808.1125811
   Snook C, 2014, P ROD WORKSH 2014 TO, P29
   Spivey J. M., 1989, The Z Notation: A Reference Manual
   Tueno Fotso Steve Jeffrey, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P262, DOI 10.1007/978-3-319-91271-4_18
NR 39
TC 9
Z9 9
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2020
VL 22
IS 3
SI SI
BP 297
EP 313
DI 10.1007/s10009-019-00548-w
EA NOV 2019
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE0ZY
UT WOS:000495956000001
OA hybrid, Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Giantamidis, G
   Tripakis, S
   Basagiannis, S
AF Giantamidis, Georgios
   Tripakis, Stavros
   Basagiannis, Stylianos
TI Learning Moore machines from input-output traces
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Finite state machine; Moore machine; Mealy machine; Automata learning;
   Passive learning; Characteristic sample
ID FINITE-STATE MACHINES; IDENTIFICATION; INFERENCE; GENERATION; AUTOMATA;
   SAMPLES
AB The problem of learning automata from example traces (but no equivalence or membership queries) is fundamental in automata learning theory and practice. In this paper, we study this problem for finite-state machines with inputs and outputs, and in particular for Moore machines. We develop three algorithms for solving this problem: (1) the PTAP algorithm, which transforms a set of input-output traces into an incomplete Moore machine and then completes the machine with self-loops; (2) the PRPNI algorithm, which uses the well-known RPNI algorithm for automata learning to learn a product of automata encoding a Moore machine; and (3) the MooreMI algorithm, which directly learns a Moore machine using PTAP extended with state merging. We prove that MooreMI has the fundamental identification in the limit property. We compare the algorithms experimentally in terms of the size of the learned machine and several notions of accuracy, introduced in this paper. We also carry out a performance comparison against two existing tools (LearnLib and flexfringe). Finally, we compare with OSTIA, an algorithm that learns a more general class of transducers and find that OSTIA generally does not learn a Moore machine, even when fed with a characteristic sample.
C1 [Giantamidis, Georgios; Basagiannis, Stylianos] United Technol Res Ctr Ireland, Cork, Ireland.
   [Giantamidis, Georgios] Aalto Univ, Otaniemi, Finland.
   [Tripakis, Stavros] Northeastern Univ, Boston, MA 02115 USA.
C3 Raytheon Technologies; Aalto University; Northeastern University
RP Giantamidis, G (corresponding author), United Technol Res Ctr Ireland, Cork, Ireland.; Giantamidis, G (corresponding author), Aalto Univ, Otaniemi, Finland.
EM GiantaGE@utrc.utc.com
OI Basagiannis, Stylianos/0000-0002-4513-0541
FU Academy of Finland; U.S. National Science Foundation [1329759, 1139138];
   Irish Development Agency (IDA); Direct For Computer & Info Scie & Enginr
   [1329759, 1139138] Funding Source: National Science Foundation; Division
   Of Computer and Network Systems [1329759] Funding Source: National
   Science Foundation; Division of Computing and Communication Foundations
   [1139138] Funding Source: National Science Foundation
FX This work was partially supported by the Academy of Finland and the U.S.
   National Science Foundation (Awards #1329759 and #1139138). This work
   was partially supported by the Irish Development Agency (IDA) for UTRC
   Ireland related to Network of Excellence in Aerospace Cyber Physical
   Systems.
CR Aarts F, 2015, LECT NOTES COMPUT SC, V9399, P165, DOI 10.1007/978-3-319-25150-9_11
   Aarts F, 2010, LECT NOTES COMPUT SC, V6269, P71, DOI 10.1007/978-3-642-15375-4_6
   Akram HI, 2010, LECT NOTES ARTIF INT, V6339, P262, DOI 10.1007/978-3-642-15488-1_22
   Aleksandrov AV, 2013, J COMPUT SYS SC INT+, V52, P410, DOI 10.1134/S1064230713020020
   Alur R., 2017, SIGACT News, V48, P55, DOI [DOI 10.1145/3061640.3061652, 10.1145/3061640.3061652]
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], ICGI 98 CONSIDERING
   [Anonymous], 1 IEEE INT C IND CYB
   [Anonymous], 2010, CORVALLIS
   [Anonymous], 2006, Why programs fail-a guide to systematic debugging
   [Anonymous], GRAMMATICAL INFERENC
   [Anonymous], 2014, LNCS
   [Anonymous], RUNTIME VERIFICATION
   Argyros G, 2016, P IEEE S SECUR PRIV, P91, DOI 10.1109/SP.2016.14
   Berg T, 2005, LECT NOTES COMPUT SC, V3442, P175, DOI 10.1007/978-3-540-31984-9_14
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Brubaker C, 2014, P IEEE S SECUR PRIV, P114, DOI 10.1109/SP.2014.15
   Buzhinsky IP, 2014, J COMPUT SYS SC INT+, V53, P256, DOI 10.1134/S106423071402004X
   Cassel Sofia, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P250, DOI 10.1007/978-3-319-10431-7_18
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Colón MA, 2003, LECT NOTES COMPUT SC, V2725, P420
   De la Higuera Colin, 2010, GRAMMATICAL INFERENC
   Dorofeeva R, 2010, INFORM SOFTWARE TECH, V52, P1286, DOI 10.1016/j.infsof.2010.07.001
   Drews S, 2017, LECT NOTES COMPUT SC, V10205, P173, DOI 10.1007/978-3-662-54577-5_10
   Dupont P., 1996, Grammatical Inference: Learning Syntax from Sentences. Third International Colloquium, ICGI-96 Proceedings, P222, DOI 10.1007/BFb0033357
   Giantamidis G, 2016, LECT NOTES COMPUT SC, V9995, P291, DOI 10.1007/978-3-319-48989-6_18
   GILL A, 1961, INFORM CONTROL, V4, P132, DOI 10.1016/S0019-9958(61)80003-X
   GOLD EM, 1978, INFORM CONTROL, V37, P302, DOI 10.1016/S0019-9958(78)90562-4
   GOLD EM, 1967, INFORM CONTROL, V10, P447, DOI 10.1016/S0019-9958(67)91165-5
   Grinchtein O, 2006, LECT NOTES ARTIF INT, V4201, P344
   Gulwani S, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P317, DOI 10.1145/1926385.1926423
   Gulwani S, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P281, DOI 10.1145/1375581.1375616
   Gupta A, 2009, LECT NOTES COMPUT SC, V5643, P634, DOI 10.1007/978-3-642-02658-4_48
   Heitmeyer CL, 2015, AUTOMAT SOFTW ENG, V22, P159, DOI 10.1007/s10515-014-0157-z
   Heule MJH, 2013, EMPIR SOFTW ENG, V18, P825, DOI 10.1007/s10664-012-9222-z
   Howar F, 2012, LECT NOTES COMPUT SC, V7148, P251, DOI 10.1007/978-3-642-27940-9_17
   Jasper M, 2019, LECT NOTES COMPUT SC, V11429, P101, DOI 10.1007/978-3-030-17502-3_7
   Jin XQ, 2015, IEEE T COMPUT AID D, V34, P1704, DOI 10.1109/TCAD.2015.2421907
   Jonsson B, 2011, LECT NOTES COMPUT SC, V6659, P327, DOI 10.1007/978-3-642-21455-4_10
   Karthik AV, 2014, ASIA S PACIF DES AUT, P250, DOI 10.1109/ASPDAC.2014.6742898
   Kohavi Z, 1978, SWITCHING FINITE AUT, V2
   Lang K. J., 1998, Grammatical Inference. 4th International Colloquium, ICGI-98. Proceedings, P1, DOI 10.1007/BFb0054059
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Lemieux C, 2015, IEEE INT CONF AUTOM, P81, DOI 10.1109/ASE.2015.71
   Leucker Martin, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P524, DOI 10.1007/978-3-642-34026-0_39
   Ljung L, 1999, PRENTICE HALL INFORM, P503
   Lo D., 2006, SIGSOFT FSE, P265
   Medhat R, 2015, 2015 PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT), P177, DOI 10.1109/EMSOFT.2015.7318273
   Meinke K, 2010, LECT NOTES ARTIF INT, V6339, P148, DOI 10.1007/978-3-642-15488-1_13
   Mens IE, 2015, LOG METH COMPUT SCI, V11, DOI 10.2168/LMCS-11(3:13)2015
   Mitchell T. M., 1997, MACHINE LEARNING
   Moore E. F., 1956, Automata studies, V34
   ONCINA J, 1993, IEEE T PATTERN ANAL, V15, P448, DOI 10.1109/34.211465
   Oncina Jose, 1992, Advances in Structural and Syntactic Pattern Recognition, Volume 5 of the Series in Machine Perception and Artificial Intelligence, P99, DOI [10.1142/9789812797919_0007, DOI 10.1142/97898127979190007, DOI 10.1142/9789812797919_0007]
   Raffelt H, 2006, LECT NOTES COMPUT SC, V3922, P377
   Seshia SA, 2012, DES AUT CON, P356
   Shahbaz M, 2009, LECT NOTES COMPUT SC, V5850, P207, DOI 10.1007/978-3-642-05089-3_14
   Solar-Lezama Armando, 2013, International Journal on Software Tools for Technology Transfer, V15, P475, DOI 10.1007/s10009-012-0249-7
   Spichakova M, 2013, P EST ACAD SCI, V62, P39, DOI 10.3176/proc.2013.1.05
   Takahashi K., 2003, Systems and Computers in Japan, V34, P59, DOI 10.1002/scj.1184
   Tsarev Fedor, 2011, P 13 ANN C COMP GEN, P759, DOI DOI 10.1145/2001858
   Ulyantsev Vladimir, 2015, Language and Automata Theory and Applications. 9th International Conference, LATA 2015. Proceedings: LNCS 8977, P611, DOI 10.1007/978-3-319-15579-1_48
   Ulyantsev V, 2018, INT J SOFTW TOOLS TE, V20, P35, DOI 10.1007/s10009-016-0442-1
   Vaandrager F, 2017, COMMUN ACM, V60, P85, DOI 10.1145/2967606
   VEELENTURF LPJ, 1978, IEEE T COMPUT, V27, P167, DOI 10.1109/TC.1978.1675053
   Verwer S, 2017, PROC IEEE INT CONF S, P638, DOI 10.1109/ICSME.2017.58
   Verwer S, 2014, MACH LEARN, V96, P129, DOI 10.1007/s10994-013-5409-9
   Verwer S, 2010, LECT NOTES ARTIF INT, V6339, P203, DOI 10.1007/978-3-642-15488-1_17
   Walkinshaw Neil, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P248, DOI 10.1109/ASE.2008.35
   Walkinshaw N, 2016, EMPIR SOFTW ENG, V21, P811, DOI 10.1007/s10664-015-9367-7
   Walkinshaw N, 2013, EMPIR SOFTW ENG, V18, P791, DOI 10.1007/s10664-012-9210-3
NR 73
TC 7
Z9 8
U1 0
U2 14
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2021
VL 23
IS 1
SI SI
BP 1
EP 29
DI 10.1007/s10009-019-00544-0
EA NOV 2019
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PV6IB
UT WOS:000494800100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hua, JR
   Zhang, YS
   Zhang, YQ
   Khurshid, S
AF Hua, Jinru
   Zhang, Yushan
   Zhang, Yuqun
   Khurshid, Sarfraz
TI EDSKETCH: execution-driven sketching for Java
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Program sketching; Execution-driven synthesis; Backtracking search
AB Sketching is a synthesis approach that allows users to provide high-level insights into a synthesis problem and let synthesis tools complete low-level details. Users write sketches-partial programs that have "holes" and provide test assertions as the correctness criteria. The sketching techniques fill the holes with code fragments such that the complete program satisfies all test assertions. Traditional techniques translate the sketching problem to propositional satisfiability formulas and leverage SAT solvers to generate programs with the desired functionality. While effective for a range of small well-defined domains, such translation-based approaches have a key limitation when applying to real applications: They require either translating all relevant libraries that are invoked directly or indirectly by the given sketch or creating models of those libraries, which requires much manual effort. This paper introduces execution-driven sketching, a novel approach for synthesizing Java programs with on-demand candidate generation. The key novelty of our work is to leverage runtime behavior to prune a large amount of search space. EDSKETCH explores the actual program behaviors in the presence of libraries and sketches small parts of real-world applications, which may use complex constructs of modern languages, such as reflection, native calls and File I/O. We further leverage a set of pruning strategies based on Java syntax to expedite the synthesis process. EDSKETCH embodies our approach in two forms: a stateful search based on the Java PathFinder model checker; and a stateless search based on re-execution inspired by the VERISOFT model checker. Experimental results show that EDSKETCH can complete some sketches that contain complex constructs in the presence of libraries, recursive procedures and advanced features like reflection. Without translating to SAT, EDSKETCH's performance compares well with the SAT-based SKETCH system for a range of small but complex data structure subjects.
C1 [Hua, Jinru; Khurshid, Sarfraz] Univ Texas Austin, Austin, TX 78712 USA.
   [Zhang, Yushan; Zhang, Yuqun] Southern Univ Sci & Technol, Shenzhen, Peoples R China.
C3 University of Texas System; University of Texas Austin; Southern
   University of Science & Technology
RP Zhang, YQ (corresponding author), Southern Univ Sci & Technol, Shenzhen, Peoples R China.
EM lisahua@utexas.edu; zhangysh@mail.sustc.edu.cn; zhangyq@sustc.edu.cn;
   khurshid@utexas.edu
FU National Science Foundation (NSF) [CCF-1319688, CNS-1239498]; Shenzhen
   Peacock Plan [KQT D2016112514355531]; Science and Technology Innovation
   Committee Foundation of Shenzhen [JCYJ2017081 7110848086]
FX This work was funded in part by the National Science Foundation (NSF
   Grant Nos. CCF-1319688 and CNS-1239498), Shenzhen Peacock Plan (Grant
   No. KQT D2016112514355531), the Science and Technology Innovation
   Committee Foundation of Shenzhen (Grant No. JCYJ2017081 7110848086). We
   thank Mukul Prasad, Allison Sullivan and Kaiyuan Wang for discussion and
   comments.
CR Albarghouthi Aws, 2013, INT C COMPUTER AIDED, P934
   Alur R, 2015, NATO SCI PEAC SECUR, V40, P1, DOI 10.3233/978-1-61499-495-4-1
   Barman S, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P339
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Cormen T.H., 2009, INTRO ALGORITHMS
   Elkarablieh B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P855, DOI 10.1145/1368088.1368222
   Feng Y, 2017, ACM SIGPLAN NOTICES, V52, P599, DOI 10.1145/3093333.3009851
   Feser JK, 2015, ACM SIGPLAN NOTICES, V50, P229, DOI [10.1145/2737924.2737977, 10.1145/2813885.2737977]
   FLOYD RW, 1967, J ACM, V14, P636, DOI 10.1145/321420.321422
   Galenson J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P653, DOI 10.1145/2568225.2568250
   Godefroid P., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P174, DOI 10.1145/263699.263717
   Gopinath D, 2011, LECT NOTES COMPUT SC, V6605, P173, DOI 10.1007/978-3-642-19835-9_15
   Gvero Tihomir, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P418, DOI 10.1007/978-3-642-22110-1_33
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Hua JR, 2016, LECT NOTES COMPUT SC, V9938, P463, DOI 10.1007/978-3-319-46520-3_29
   Inala J. P., 2017, TOOLS ALG CONSTR A 1, P247
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jeon JS, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P934, DOI 10.1145/2786805.2803189
   Jha Susmit, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering-Volume 1. ICSE'10, V1, P215, DOI DOI 10.1145/1806799.1806833
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kneuss E, 2013, ACM SIGPLAN NOTICES, V48, P407, DOI [10.1145/2509136.2509555, 10.1145/2544173.2509555]
   Kuncak V, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P316, DOI 10.1145/1806596.1806632
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Malik MZ, 2009, IEEE INT CONF AUTOM, P620, DOI 10.1109/ASE.2009.92
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   Mechtaev S., 2016, ICSE 2016
   Perelman D, 2012, ACM SIGPLAN NOTICES, V47, P275, DOI 10.1145/2345156.2254098
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Singh Rishabh, 2011, FSE, P289, DOI DOI 10.1145/2025113.2025153
   Solar-Lezama Armando, 2013, International Journal on Software Tools for Technology Transfer, V15, P475, DOI 10.1007/s10009-012-0249-7
   Solar-Lezama A, 2006, ACM SIGPLAN NOTICES, V41, P404, DOI 10.1145/1168917.1168907
   Srivastava S, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P313, DOI 10.1145/1706299.1706337
   Ujma M., 2012, ARXIV12050042 CORR
   Visser W, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ASE.2000.873645
   Wang KY, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P916, DOI 10.1145/3236024.3264594
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Yang Z., 2018, 2017 IEEE INT C SOFT
NR 40
TC 6
Z9 6
U1 0
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2019
VL 21
IS 3
SI SI
BP 249
EP 265
DI 10.1007/s10009-019-00512-8
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY4RT
UT WOS:000468116300002
DA 2024-07-18
ER

PT J
AU Hoang, D
   Moy, Y
   Wallenburg, A
   Chapman, R
AF Hoang, Duc
   Moy, Yannick
   Wallenburg, Angela
   Chapman, Roderick
TI SPARK 2014 and GNATprove A competition report from builders of an
   industrial-strength verifying compiler
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE SPARK; Ada; Program verification; Verifying compiler; Deductive
   verification; Static analysis
ID VERIFICATION; SYSTEM
AB Extensive and expensive testing is the method most widely used for gaining confidence in safety-critical software. With a fewexceptions, such as SPARK, formal verification is rarely used in industry due to its high cost and level of skill required. The grand challenge of building a verifying compiler for static formal verification of programs aims at bringing formal verification to non-expert users of powerful programming languages. This challenge has nurtured competition and collaboration among verification tool builders; an example is the VerifyThis competition Huisman et al. (http://digbib.ubka.uni-karlsruhe.de/volltexte/1000034373, 2013). In this paper, we describe our approach to popularising formal verification in the design of the SPARK 2014 language and the associated formal verification tool GNATprove. In particular, we present our solution to combining tests and proofs, which provides a cost-competitive way to develop software to standards such as do-178. At the heart of our technique are executable contracts, and the ability to both test and prove those. We use running examples from the VerifyThis 2012 competition and discuss the results of using our tools on those problems.
C1 [Hoang, Duc] Ecole Polytech Fed Lausanne, Lausanne, Switzerland.
   [Moy, Yannick] AdaCore, Paris, France.
   [Wallenburg, Angela; Chapman, Roderick] Altran UK, Bath, Avon, England.
C3 Swiss Federal Institutes of Technology Domain; Ecole Polytechnique
   Federale de Lausanne
RP Wallenburg, A (corresponding author), Altran UK, Bath, Avon, England.
EM duc.hoang@epfl.ch; yannick.moy@adacore.com;
   angela.wallenburg@altran.com; rod.chapman@altran.com
CR [Anonymous], P 6 INT WORKSH SAT M
   [Anonymous], 2013, HI LITE SIMPLIFYING
   [Anonymous], 1992, DO 178B SOFTW CONS A
   [Anonymous], 2006, P 13 ACM C COMPUTER
   [Anonymous], 2004, J OBJECT TECHNOL
   Barnes J., 2012, SPARK PROVEN APPROAC
   Barnes J., 2012, ADA 2012 RATIONALE
   Barnett M, 2011, COMMUN ACM, V54, P81, DOI 10.1145/1953122.1953145
   Barrett C, 2007, LECT NOTES COMPUT SC, V4590, P298
   Beckert B, 2011, INT J SYST ASSUR ENG, V2, P97, DOI 10.1007/s13198-011-0068-3
   Bobot F., 2011, P 1 INT WORKSH INT V
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Chalin P, 2010, IEEE T SOFTWARE ENG, V36, P275, DOI 10.1109/TSE.2009.59
   Claessen K., 2013, EPIC SERIES, V17, P16
   Claessen K, 2010, LECT NOTES COMPUT SC, V6143, P6, DOI 10.1007/978-3-642-13977-2_3
   Cohen E, 2009, LECT NOTES COMPUT SC, V5674, P23, DOI 10.1007/978-3-642-03359-9_2
   Comar C., 2012, P EMB REAL TIM SOFTW
   Costa, 2012, LEIBNIZ INT P INFORM, V17, P72, DOI 10.4230/LIPIcs.ICLP
   Couchot J.-F., 2009, AFM 09 AUTOMATED FOR, P40
   de Moura L., 2008, CEUR WORKSHOP P, V418
   Dross C, 2014, P ERTS
   Dross C., 2011, 5 INT C TESTS PROOFS
   Dross Claire., 2013, SMT 2012, volume 20 of EPiC Series, V20, P22
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Guitton J., 2011, P BOOG 2011 1 INT WO
   Hatcliff J, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187678
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Hoare T, 2003, J ACM, V50, P63, DOI 10.1145/602382.602403
   HORWITZ S, 1988, SIGPLAN NOTICES, V23, P35
   Huisman M., 2013, 201301 KARLSR I TECH
   Kanig J., 2012, HILT, P27
   Kuhlwein Daniel, 2012, Automated Reasoning. Proceedings 6th International Joint Conference, IJCAR 2012, P378, DOI 10.1007/978-3-642-31365-3_30
   Meyer B., 1988, Object-Oriented Software Construction
   ONeill I., 2012, IND USE FORMAL METHO
   RTCA, 2011, DO-178C Software Considerations in Airborne Systems and Equipment Certification
   Rustan K, 2005, INFORM PROCESS LETT, V93, P281, DOI 10.1016/j.ipl.2004.10.015
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Tschannen J, 2011, LECT NOTES COMPUT SC, V7041, P382, DOI 10.1007/978-3-642-24690-6_26
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
NR 40
TC 8
Z9 8
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2015
VL 17
IS 6
BP 695
EP 707
DI 10.1007/s10009-014-0322-5
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT3DN
UT WOS:000362687300004
DA 2024-07-18
ER

PT J
AU Haber, A
   Hölldobler, K
   Kolassa, C
   Look, M
   Müller, K
   Rumpe, B
   Schaefer, I
   Schulze, C
AF Haber, Arne
   Hoelldobler, Katrin
   Kolassa, Carsten
   Look, Markus
   Mueller, Klaus
   Rumpe, Bernhard
   Schaefer, Ina
   Schulze, Christoph
TI Systematic synthesis of delta modeling languages
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Delta modeling; Modeling; Language engineering; Domain specific
   languages; Generation; Software product line engineering
ID TRANSFORMATION
AB Delta modeling is a modular, yet flexible approach to capture variability by explicitly representing differences between system variants or versions. The conceptual idea of delta modeling is language-independent. But, to apply delta modeling to a concrete language, either a generic transformation language has to be used or the corresponding delta language has to be manually developed for each considered base language. Generic languages and their tool support often lack readability and specific context condition checking, since they are unrelated to the base language. In this paper, we present a process that allows synthesizing a delta language from the grammar of a given base language. Our method relies on an automatically generated language extension that can be manually adapted to meet domain-specific needs. We illustrate our method using delta modeling on a textual variant of architecture diagrams. Furthermore, we evaluate our method using a comparative case study. This case study covers an architectural, a structural, and a behavioral language and compares the preexisting handwritten grammars to the generated grammars as well as the manually tailored grammars. This paper is an extension of Haber et al. (Proceedings of the 17th international software product line conference (SPLC'13), pp 22-31, 2013).
C1 [Haber, Arne; Hoelldobler, Katrin; Kolassa, Carsten; Look, Markus; Mueller, Klaus; Rumpe, Bernhard; Schulze, Christoph] Rhein Westfal TH Aachen, Software Engn, Aachen, Germany.
   [Schaefer, Ina] TU Braunschweig, Software Engn & Automot Informat, Braunschweig, Germany.
C3 RWTH Aachen University; Braunschweig University of Technology
RP Look, M (corresponding author), Rhein Westfal TH Aachen, Software Engn, Aachen, Germany.
EM look@se-rwth.de
RI Kolassa, Carsten/I-5474-2013; Rumpe, Bernhard/S-8216-2016
OI Rumpe, Bernhard/0000-0002-2147-1966
CR Agrawal A., 2003, 37203 TN VAND U I SO
   [Anonymous], AACHENER INFORM BERI
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2012, AGILE MODELLIERUNG U
   [Anonymous], 2012, Technical Report AIB-2012-03
   [Anonymous], 2013, SOFTWARE PRODUCT LIN
   [Anonymous], 2011, MODELLIERUNG MIT UML
   [Anonymous], WORKSH PROD FAM ENG
   Apel S., 2009, INT C MOD TRANSF ICM
   Arne HaberHolger Rendel., 2011, Proceedings of the Dagstuhl Workshop on Model-Based Development of Embedded Systems (MBEES'11), P1
   Baar T., 2007, INT A ERSH MEM C PER
   BASSETT PG, 1987, IEEE SOFTWARE, V4, P9, DOI 10.1109/MS.1987.231057
   Brosch P, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P55, DOI 10.1109/CVSM.2009.5071723
   Campbell D.T., 2001, Experimental and quasiexperimental designs for generalized causal inference
   Clarke D, 2011, ACM SIGPLAN NOTICES, V46, P13, DOI 10.1145/1942788.1868298
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K., 2005, INT C GEN PROGR COMP
   Daniel D., 2013, 13 S PROGR LANG SOFT, P16
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   France R., 2007, FUTURE SOFTWARE ENG
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Gronmo R., 2009, THESIS U OSLO
   Gronmo R., 2009, CONCRETE SYNTAX BASE, P625
   Gronmo R, 2009, LECT NOTES COMPUT SC, V5562, P2
   Gronniger H., 2008, INT C SOFTW ENG ICSE
   Haber A., 2013, INT WORKSH VAR MOD S
   Haber A., 2011, EUR C SOFTW ARCH ECS
   Haugen O., 2008, INT SOFTW PROD LIN C
   HEIDENREICH F, 2007, ASP OR PROD LIN ENG
   Hendrickson S.A., 2007, INT C SOFTW ENG ICSE
   Jarzabek S., 2007, P 11 INT C SOFTW PRO, V2, P13
   JAYARAMAN P, 2007, INT C MOD DRIV ENG L
   Kappel Gerti, 2012, Conceptual Modelling and Its Theoretical Foundations. Essays Dedicated to Bernhard Thalheim on the Occasion of his 60th Birthday, P197, DOI 10.1007/978-3-642-28279-9_15
   Karsai G., 2009, OOPSLA WORKSH DOM SP
   Krahn Holger, 2010, International Journal on Software Tools for Technology Transfer, V12, P353, DOI 10.1007/s10009-010-0142-1
   Krahn H., 2010, THESIS RWTH AACHEN U
   Krahn H., 2008, INT C OBJ MOD COMP P
   Kuhne T., 2010, INT C MOD SOFTW ENG
   Look M., 2013, GEMOC WORKSH 2013 IN
   Loughran N., 2008, LECT NOTES COMPUTER
   Noda N., 2008, INT SOFTW PROD LIN C
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
   SCHAEFER I, 2010, INT WORKSH VAR MOD S
   Schaefer I., 2010, INT C SOFTW PROD LIN
   Schurr A., 1990, INT WORKSH GRAPH GRA
   Sun Y, 2009, LECT NOTES COMPUT SC, V5795, P712, DOI 10.1007/978-3-642-04425-0_58
   Swe S.M., 2002, P 14 INT C SOFTW ENG, P341
   Syriani Eugene., 2013, Domain Engineering, P211, DOI DOI 10.1007/978-3-642-36654-3_9
   Taentzer G., 2003, INT WORKSH APPL GRAP
   Tamzalit D., 2010, INT C WORKSH ENG COM
   Trochim W. M., 2006, RES METHODS KNOWLEDG
   Trujillo S., 2007, INT C SOFTW ENG ICSE
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   Volkel S., 2011, THESIS TU BRAUNSCHWE
   Volter M., 2007, INT C SOFTW PROD LIN
   Weisemoller I., 2012, AACHENER INFORM BERI
   Weisemoller I., 2011, WORKSH MOD EV ME
   Wermelinger M, 2002, SCI COMPUT PROGRAM, V44, P133, DOI 10.1016/S0167-6423(02)00036-9
   Wimmer M., 2007, HAW INT C SYST SCI H
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zhang HY, 2010, LECT NOTES COMPUT SC, V6287, P440, DOI 10.1007/978-3-642-15579-6_33
   Zhang HY, 2004, SCI COMPUT PROGRAM, V53, P381, DOI 10.1016/j.scico.2003.04.007
NR 65
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2015
VL 17
IS 5
BP 601
EP 626
DI 10.1007/s10009-015-0387-9
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8LO
UT WOS:000360859500004
DA 2024-07-18
ER

PT J
AU Chakraborty, S
   Katoen, JP
   Sher, F
   Strelec, M
AF Chakraborty, Souymodip
   Katoen, Joost-Pieter
   Sher, Falak
   Strelec, Martin
TI Modelling and statistical model checking of a microgrid
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Microgrid; Statistical model Checking; UPPAAL
AB This paper reports on the modelling and analysis of a microgrid with wind, microturbines, and the main grid as generation resources. The microgrid is modelled as a parallel composition of various stochastic hybrid automata. Extensive simulation runs of the behaviour of the main individual microgrid components give insight into the complex dynamics of the system and provide useful information to determine adequate parameter settings. The analysis of the microgrid focuses on determining the probability of linear temporal logic properties expressed in the logic LTL, using the statistical model checker Uppaal-SMC.
C1 [Chakraborty, Souymodip; Katoen, Joost-Pieter; Sher, Falak] Rhein Westfal TH Aachen, Aachen, Germany.
   [Strelec, Martin] Univ W Bohemia, NTIS, Plzen, Czech Republic.
C3 RWTH Aachen University; University of West Bohemia Pilsen
RP Chakraborty, S (corresponding author), Rhein Westfal TH Aachen, Aachen, Germany.
EM souymodip@gmail.com
RI Strelec, Martin/G-9266-2016; Katoen, Joost-Pieter/O-3307-2018
OI Strelec, Martin/0000-0001-6328-0271; Katoen,
   Joost-Pieter/0000-0002-6143-1926
CR Abate A., 2010, EUROPEAN J CONTROL, V16, P1
   Abate A, 2011, HSCC 11: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P83
   [Anonymous], 2012, LECT NOTES
   Barringer H, 2010, LECT NOTES COMPUTER, V6418
   Carrillo C, 2013, RENEW SUST ENERG REV, V21, P572, DOI 10.1016/j.rser.2013.01.012
   Cassandras C., 2007, STOCH HYBRID SYST
   David A, 2012, ELECTRON PROC THEOR, P122, DOI 10.4204/EPTCS.92.9
   Gensollen N., 2013, ABS13054096 CORR
   GORDON JM, 1995, INT J HEAT MASS TRAN, V38, P807, DOI 10.1016/0017-9310(94)00208-D
   Hahn EM, 2013, FORM METHOD SYST DES, V43, P191, DOI 10.1007/s10703-012-0167-z
   Hartmanns Arnd, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P420, DOI 10.1007/978-3-642-34026-0_31
   Hartmanns Arnd, 2012, P WINT SIM C WSC 12, P1
   Jegourel Cyrille, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P327, DOI 10.1007/978-3-642-31424-7_26
   Kim Y., 2012, HAIFA VERIFICATION C, P162
   Kostas Margellos TJ, 2011, POW SYST COMP C PSCC, P1
   Lasseter RH, 2011, P IEEE, V99, P1074, DOI 10.1109/JPROC.2011.2114630
   Machowski J., 2020, Power System Dynamics: Stability and Control, Vthird
   MATHISEN KW, 1994, COMPUT CHEM ENG, V18, pS459, DOI 10.1016/0098-1354(94)80075-8
   Mur-Amada J., 2007, 9 INT C ELECT POWER, P1
   PARISIO A, 2011, 50 IEEE C DEC CONTR, P5449
   Philippopoulos K., 2009, Journal Of Energy, V3, P151
   Ramponi F, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P253
   Strelec M, 2012, IEEE PES INNOV SMART, DOI 10.1109/ISGTEurope.2012.6465655
   Tigges M., 2010, THESIS U PADERBORN
   Younes HLS, 2006, INFORM COMPUT, V204, P1368, DOI 10.1016/j.ic.2006.05.002
   Younes Samir, 2005, TECHNICAL REPORT, DOI 10.1.1.68.4454
NR 26
TC 2
Z9 2
U1 0
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2015
VL 17
IS 4
BP 537
EP 554
DI 10.1007/s10009-014-0345-y
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM2BV
UT WOS:000357485500011
DA 2024-07-18
ER

PT J
AU Boronat, A
AF Boronat, Artur
TI Incremental execution of rule-based model transformation Using
   dependency injection and standardized model changes
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Mappings between languages; Traceability; Incremental execution;
   Performance benchmark
AB When model transformations are used to implement consistency relations between very large models, incrementality plays a cornerstone role in detecting and resolving inconsistencies efficiently when models are updated. Given a directed consistency relation between two models, the problem studied in this work consists in propagating model changes from a source model to a target model in order to ensure consistency while minimizing computational costs. The mechanism that enforces such consistency is called consistency maintainer and, in this context, its scalability is a required non-functional requirement. State-of-the-art model transformation engines with support for incrementality normally rely on an observer pattern for linking model changes, also known as deltas, to the application of model transformation rules, in so-called dependencies, at run time. These model changes can then be propagated along an already executed model transformation. Only a few approaches to model transformation provide domain-specific languages for representing and storing model changes in order to enable their use in asynchronous, event-based execution environments. The principal contribution of this work is the design of a forward change propagation mechanism for incremental execution of model transformations, which decouples dependency tracking from change propagation using two innovations. First, the observer pattern-based model is replaced with dependency injection, decoupling domain models from consistency maintainers. Second, a standardized representation of model changes is reused, enabling interoperability with EMF-compliant tools, both for defining model changes and for processing them asynchronously. This procedure has been implemented in a model transformation engine, whose performance has been evaluated experimentally using the VIATRA CPS benchmark. In the experiments performed, the new transformation engine shows gains in the form of several orders of magnitude in the initial phase of the incremental execution of the benchmark model transformation and change propagation is performed in real time for those model sizes that are processable by other tools and, in addition, is able to process much larger models.
C1 [Boronat, Artur] Univ Leicester, Sch Informat, Leicester, Leics, England.
C3 University of Leicester
RP Boronat, A (corresponding author), Univ Leicester, Sch Informat, Leicester, Leics, England.
EM artur.boronat@le.ac.uk
CR [Anonymous], 2019, AUTOSAR DEV PARTN
   [Anonymous], 2016, VIATRA CPS BENCHM GE
   [Anonymous], 2016, VIATRA CPS BENCHM
   [Anonymous], 2016, VIATRA CPS BENCHM CA
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Beaudoux O, 2010, LECT NOTES COMPUT SC, V6394, P91
   Benelallam A, 2018, J SYST SOFTWARE, V142, P1, DOI 10.1016/j.jss.2018.04.014
   Bergmann G, 2015, LECT NOTES COMPUT SC, V9152, P101, DOI 10.1007/978-3-319-21155-8_8
   Bergmann G, 2012, SOFTW SYST MODEL, V11, P431, DOI 10.1007/s10270-011-0197-9
   Biermann E, 2012, SOFTW SYST MODEL, V11, P227, DOI 10.1007/s10270-011-0199-7
   Biermann E, 2008, LECT NOTES COMPUT SC, V5301, P53, DOI 10.1007/978-3-540-87875-9_4
   Boronat A, 2018, YAMTL INCREMENTAL M2
   Boronat A, 2018, YAMTL EVALUATION REP
   Boronat A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P78, DOI 10.1145/3239372.3239386
   Boronat A, 2019, LECT NOTES COMPUT SC, V11424, P134, DOI 10.1007/978-3-030-16722-6_8
   Boronat Artur, 2018, CEUR WORKSHOP P, V2310, P65
   Calvar T.L, 2019, VIATRA CPS BENCHMARK
   Calvar T.L, 2019, ATL SOLUTION VIATRA
   Daniel G, 2017, IEEE INT CONF AUTOM, P462, DOI 10.1109/ASE.2017.8115658
   Dávid I, 2018, SOFTW SYST MODEL, V17, P135, DOI 10.1007/s10270-016-0533-1
   Diskin Z, 2011, LECT NOTES COMPUT SC, V6981, P304, DOI 10.1007/978-3-642-24485-8_22
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Feiler PH., 2012, Model-based engineering with AADL: An introduction to the SAE architecture analysis design language
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Harmath D., 2016, VIATRA QUERY FAQ PER
   Hearnden D, 2006, LECT NOTES COMPUT SC, V4199, P321
   Hinkel G., 2017, CEUR WORKSHOP P, V2026, P13
   Hinkel G, 2017, CEUR WORKSHOP P, V2026, P35
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P3151, DOI 10.1007/s10270-019-00719-y
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P249, DOI 10.1007/s10270-017-0617-6
   Hinkel G, 2015, LECT NOTES COMPUT SC, V9152, P3, DOI 10.1007/978-3-319-21155-8_1
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jouault F., 2016, 16 INT WORKSH OCL TE, P121
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Jouault Frederic, 2015, P 15 INT WORKSH OCL, V1512, P35
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5421, P48, DOI 10.1007/978-3-642-01648-6_5
   Lauder Marius, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P401, DOI 10.1007/978-3-642-33654-6_27
   Le Calvar T, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a2
   Leblebici E, 2017, LECT NOTES COMPUT SC, V10373, P179, DOI 10.1007/978-3-319-61470-0_11
   Martínez S, 2017, SCI COMPUT PROGRAM, V136, P1, DOI 10.1016/j.scico.2016.08.006
   OMG: Meta Object Facility (MOF), 2016, OMG META OBJECT FACI
   Orejas F, 2014, LECT NOTES COMPUT SC, V8568, P74
   Ráth I, 2008, LECT NOTES COMPUT SC, V5063, P107, DOI 10.1007/978-3-540-69927-9_8
   Razavi A, 2012, PROC INT CONF SOFTW, P562, DOI 10.1109/ICSE.2012.6227160
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Tisi M, 2011, LECT NOTES COMPUT SC, V6981, P32, DOI 10.1007/978-3-642-24485-8_4
   VIATRA Team, 2016, VIATRA CPS BENCHM CP
   VIATRA Team, 2016, QUER RES TRAC M2M TR
   VIATRA Team, 2016, EXPL TRAC M2M TRANSF
NR 53
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2021
VL 23
IS 3
SI SI
BP 289
EP 311
DI 10.1007/s10009-020-00583-y
EA SEP 2020
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TS5ZM
UT WOS:000566325900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Jakobs, MC
AF Jakobs, Marie-Christine
TI CoVeriTest: interleaving value and predicate analysis for test-case
   generation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Test-case generation; Software testing; Model checking; Cooperative
   verification; CPAchecker
AB Verification techniques are well-suited for automatic test-case generation. They basically need to check the reachability of every test goal and generate test cases for all reachable goals. This is also the basic idea of ourCoVeriTest submission. However, the set of test goals is not fixed inCoVeriTest , instead we can configure the set of test goals. For Test-Comp'19, we support the set of all __VERIFIER_error() calls as well as the set of all branches. Thus, we can deal with the two test specifications considered in Test-Comp'19. Since the tasks in Test-Comp are diverse and verification techniques have different strengths and weaknesses, we also do not stick to a single verification technique, but use a hybrid approach that combines multiple techniques. More concrete,CoVeriTest interleaves different verification techniques and allows to configure the cooperation (i.e., information exchange and time limits). To choose from a large set of verification techniques,CoVeriTest is integrated into the analysis frameworkCPAchecker. For the competition, we interleaveCPAchecker's value and predicate analysis and let both analyses resume their analysis performed in the previous iteration.
C1 [Jakobs, Marie-Christine] Ludwig Maximilians Univ Munchen, Munich, Germany.
   [Jakobs, Marie-Christine] Tech Univ Darmstadt, Darmstadt, Germany.
C3 University of Munich; Technical University of Darmstadt
RP Jakobs, MC (corresponding author), Ludwig Maximilians Univ Munchen, Munich, Germany.; Jakobs, MC (corresponding author), Tech Univ Darmstadt, Darmstadt, Germany.
EM jakobs@sosy.ifi.lmu.de
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL.
CR Beyer D, 2004, PROC INT CONF SOFTW, P326, DOI 10.1109/ICSE.2004.1317455
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Beyer D., 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P189
   Beyer D., 2012, P FSE ACM, P57, DOI DOI 10.1145/2393596.2393664
   Beyer D, 2007, LECT NOTES COMPUT SC, V4590, P504
   Beyer D, 2019, LECT NOTES COMPUT SC, V11424, P389, DOI 10.1007/978-3-030-16722-6_23
   Beyer D, 2013, LECT NOTES COMPUT SC, V7793, P146, DOI 10.1007/978-3-642-37057-1_11
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Karpenkov EG, 2016, LECT NOTES COMPUT SC, V9971, P139, DOI 10.1007/978-3-319-48869-1_11
NR 10
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2021
VL 23
IS 6
BP 847
EP 851
DI 10.1007/s10009-020-00572-1
EA JUL 2020
PG 5
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XU5UO
UT WOS:000545887600002
OA hybrid
DA 2024-07-18
ER

PT J
AU Lemieux, C
   Sen, K
AF Lemieux, Caroline
   Sen, Koushik
TI FairFuzz-TC: a fuzzer targeting rare branches
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Fuzz testing; Rare branches; Greybox fuzzing; Test-Comp
AB FairFuzzis a coverage-guided mutational fuzzing tool based on AFL, which targets its mutation strategy towards rare branches in the program.FairFuzzwas built to run on command-line C\C++ programs which accept a single file as input. We introduce the modifications toFairFuzzwhich enable it to run on Test-Comp benchmarks; we refer to this altered version asFairFuzz-TC.FairFuzz-TC placed in the middle of the testing competition.FairFuzz-TC had better performance on the error-finding benchmarks than on the branch coverage benchmarks. We analyze the results and find that the benchmarks on whichFairFuzz-TC has the most difficulties are those where (a) most functionality is under hard comparisons (requiring precise input values), (b) getting a seed input on which the program does not crash or time out is difficult, or (c) the program takes too much time to execute.
C1 [Lemieux, Caroline; Sen, Koushik] Univ Calif Berkeley, Berkeley, CA 94709 USA.
C3 University of California System; University of California Berkeley
RP Lemieux, C (corresponding author), Univ Calif Berkeley, Berkeley, CA 94709 USA.
EM clemieux@cs.berkeley.edu; ksen@cs.berkeley.edu
CR Bohme M., 2016, P 2016 ACM SIGSAC C, P1032, DOI DOI 10.1145/2976749.2978428
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Li Y, 2017, IET RADAR SONAR NAV, V11, P171, DOI 10.1049/iet-rsn.2016.0117
   Rawat S, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23404
   Zalewski M, 2014, American fuzzy lop
NR 6
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2021
VL 23
IS 6
BP 863
EP 866
DI 10.1007/s10009-020-00569-w
EA JUL 2020
PG 4
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XU5UO
UT WOS:000545887600001
DA 2024-07-18
ER

PT J
AU Mammar, A
   Frappier, M
   Fotso, SJT
   Laleau, R
AF Mammar, Amel
   Frappier, Marc
   Fotso, Steve Jeffrey Tueno
   Laleau, Regine
TI A formal refinement-based analysis of the hybrid ERTMS/ETCS level 3
   standard
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Hybrid ERTMS; ETCS level 3 standard; Event-B method; Formal modeling and
   verification; Proof
ID TOOL
AB This paper presents a formal model of the case study proposed for the ABZ2018 conference, which concerns the Hybrid ERTMS/ETCS Level 3 Standard. This standard allows trains to communicate with a train supervisor to report their integrity and positions, thanks to an onboard train integrity monitoring system. The supervisor assigns trains a movement authority to control traffic and to avoid collisions. The standard also provides for trains that cannot communicate with the supervisor; these trains are detected by sensors on tracks and obey traffic signals set by the supervisor along the trackside. Using communication allows for a finer grain control of the tracks. Our model is derived using stepwise refinement with the Event-B method. We take into account the main features of the case study (VSS management, timers, ERTMS and non-ERTMS trains). Our model is decomposed into four refinements. All proof obligations have been discharged using the Rodin provers, except those related to the computation of the VSS state machine, which was found to be ambiguous (nondeterministic). Our model has been validated using ProB. The main safety property, which is that ERTMS trains do not collide, is proved. Our model focuses on the discrete control logic aspects of the case study.
C1 [Mammar, Amel] Inst Polytech Paris, Telecom SudParis, SAMOVAR, CNRS,UMR 5157, Evry, France.
   [Frappier, Marc; Fotso, Steve Jeffrey Tueno] Univ Sherbrooke, Fac Sci, Dept Informat, GRIF, Sherbrooke, PQ, Canada.
   [Fotso, Steve Jeffrey Tueno; Laleau, Regine] Univ Paris Est, IUT Senart Fontainebleau, LACL, UPEC, Fontainebleau, France.
C3 Centre National de la Recherche Scientifique (CNRS); IMT - Institut
   Mines-Telecom; Institut Polytechnique de Paris; Telecom SudParis;
   University of Sherbrooke; Universite Paris-Est-Creteil-Val-de-Marne
   (UPEC)
RP Mammar, A (corresponding author), Inst Polytech Paris, Telecom SudParis, SAMOVAR, CNRS,UMR 5157, Evry, France.
EM amel.mammar@telecom-SudParis.eu; stuenofotso@gmail.com
RI Laleau, Regine/ABA-9759-2021
OI Laleau, Regine/0000-0002-2019-4936
FU NSERC (Natural Sciences and Engineering Research Council of Canada) -
   French National Research Agency (ANR)
FX This research was supported in part by NSERC (Natural Sciences and
   Engineering Research Council of Canada) and the FORMOSE project funded
   by the French National Research Agency (ANR).
CR Abrial Jean-Raymond, 2018, LECT NOTES COMPUTER, P322
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], MODELING IN EVENT B
   [Anonymous], 2005, B BOOK ASSIGNING PRO
   Arcaini Paolo, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P277, DOI 10.1007/978-3-319-91271-4_19
   Barrett C, 2007, LECT NOTES COMPUT SC, V4590, P298
   Berger U, 2018, SCI COMPUT PROGRAM, V154, P61, DOI 10.1016/j.scico.2017.10.011
   Bouton T, 2009, LECT NOTES ARTIF INT, V5663, P151, DOI 10.1007/978-3-642-02959-2_12
   Cansell D, 2007, LECT NOTES COMPUT SC, V4355, P140
   Clarke EM, 2008, LECT NOTES COMPUT SC, V5000, P196
   Cunha Alcino, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P307, DOI 10.1007/978-3-319-91271-4_21
   Dghaym Dana, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P338, DOI 10.1007/978-3-319-91271-4_23
   Dutertre B, 2004, LECT NOTES COMPUT SC, V3253, P199
   EEIG ERTMS Users Group, 2018, HYBR ERTMS ETCS LEV
   EEIG ERTMS Users Group, 2017, HYBR ERTMS ETCS LEV
   Fathabadi AS, 2015, FORM ASP COMPUT, V27, P499, DOI 10.1007/s00165-014-0311-1
   Fotso Steve Jeffrey Tueno, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P55, DOI 10.1007/978-3-319-91271-4_5
   Fotso S.J.T., 2018, MODELING HYBRID ERTM
   Hansen Dominik, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P292, DOI 10.1007/978-3-319-91271-4_20
   Iliasov A, 2010, LECT NOTES COMPUT SC, V5977, P174, DOI 10.1007/978-3-642-11811-1_14
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Mammar Amel, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P353, DOI 10.1007/978-3-319-91271-4_24
   Mammar A., 2018, EVENT B MODEL HYBRID
   Mammar A, 2017, INT J SOFTW TOOLS TE, V19, P167, DOI 10.1007/s10009-015-0391-0
   PARNAS DL, 1995, SCI COMPUT PROGRAM, V25, P41, DOI 10.1016/0167-6423(95)96871-J
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Said MY, 2015, SOFTW SYST MODEL, V14, P1557, DOI 10.1007/s10270-013-0391-z
   Sarshogh M.R., 2011, ECEASST, V46, P1
   Silva R, 2011, SOFTWARE PRACT EXPER, V41, P199, DOI 10.1002/spe.1002
   Thai Son Hoang, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P251, DOI 10.1007/978-3-319-91271-4_17
   Tueno Fotso Steve Jeffrey, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P262, DOI 10.1007/978-3-319-91271-4_18
   Voisin L, 2014, LECT NOTES COMPUT SC, V8477, P1, DOI 10.1007/978-3-662-43652-3_1
NR 33
TC 8
Z9 8
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2020
VL 22
IS 3
SI SI
BP 333
EP 347
DI 10.1007/s10009-019-00543-1
EA OCT 2019
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE0ZY
UT WOS:000492646400002
DA 2024-07-18
ER

PT J
AU Aman, B
   Ciobanu, G
AF Aman, Bogdan
   Ciobanu, Gabriel
TI Verification of critical systems described in real-time TIMo
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Timed mobility; Critical systems; Bisimulations; Verification
AB We present a simple prototyping language for describing real-time systems including specific features as timeouts, explicit locations, timed migration and timed communication. The parallel execution of a step is provided by multiset labelled transitions. To illustrate its features, we describe a railway control system, and define some behavioural equivalences matching multisets of actions that could happen in a given interval of time. We define strong time-bounded bisimulation and strong open time-bounded bisimulation, and prove that the latter one is a congruence. By using various bisimulations over the behaviours of real-time systems, we can check which behaviours are closer to an optimal and safe behaviour. Automatic analysis is performed using a verification platform called TiMo@PAT which supports the verification of domain-specific properties like process location reachability, time-bounded properties, as well as optimizing resources.
C1 [Aman, Bogdan; Ciobanu, Gabriel] Romanian Acad, Inst Comp Sci, Blvd Carol 1 11, Iasi 700506, Romania.
C3 Romanian Academy of Sciences
RP Aman, B (corresponding author), Romanian Acad, Inst Comp Sci, Blvd Carol 1 11, Iasi 700506, Romania.
EM baman@iit.tuiasi.ro; gabriel@info.uaic.ro
RI Aman, Bogdan/F-7144-2011; Aman, Bogdan/IYS-3026-2023; Ciobanu,
   Gabriel/C-4860-2011
OI Aman, Bogdan/0000-0001-7649-8181; Aman, Bogdan/0000-0001-7649-8181;
   Ciobanu, Gabriel/0000-0002-8166-9456
CR Aman Bogdan, 2015, Formal Methods for Industrial Critical Systems. 20th International Workshop, FMICS 2015. Proceedings: LNCS 9128, P146, DOI 10.1007/978-3-319-19458-5_10
   Aman Bogdan, 2012, Formal Techniques for Distributed Systems. Joint 14th IFIP WG 6.1 International Conference, FMOODS 2012 and 32nd IFIP WG 6.1 International Conference, FORTE 2012, P52, DOI 10.1007/978-3-642-30793-5_4
   Aman B, 2013, LECT NOTES COMPUT SC, V8137, P31, DOI 10.1007/978-3-642-40561-7_3
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], 1981, Lecture Notes in Computer Science, DOI [10.1007/BFb0017309, DOI 10.1007/BFB0017309]
   Baeten J.C. M., 2002, MONO THEOR COMP SCI
   Ciobanu Gabriel, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P293, DOI 10.1007/978-3-642-21437-0_23
   Ciobanu Gabriel, 2008, Software-Intensive Systems and New Computing Paradigms, P190
   Ciobanu G, 2006, ELECTRON NOTES THEOR, V164, P81, DOI 10.1016/j.entcs.2006.07.013
   Ciobanu G, 2015, COMPUT J, V58, P1041, DOI 10.1093/comjnl/bxu006
   Ciobanu G, 2013, IEEE INT C ENG COMP, P121, DOI 10.1109/ICECCS.2013.25
   Ciobanu G, 2012, CONCURR COMP-PRACT E, V24, P559, DOI 10.1002/cpe.1854
   Ciobanu G, 2011, J LOGIC ALGEBR PROGR, V80, P377, DOI 10.1016/j.jlap.2011.05.002
   GROOTE JF, 1990, LECT NOTES COMPUT SC, V458, P332
   Han TT, 2008, LECT NOTES COMPUT SC, V4981, P244
   HEITMEYER C, 1994, REAL TIM SYST SYMP P, P120, DOI 10.1109/REAL.1994.342724
   Kamide N, 2012, ANN PURE APPL LOGIC, V163, P439, DOI 10.1016/j.apal.2011.12.002
   Sangiorgi Davide, 2011, Introduction to bisimulation and coinduction
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Yi W., 1994, PROC 7 INT C FORMAL, P223, DOI [10.1007/978-0-387-34878-018, DOI 10.1007/978-0-387-34878-018]
NR 20
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2017
VL 19
IS 4
BP 395
EP 408
DI 10.1007/s10009-016-0439-9
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ5UW
UT WOS:000404785500002
DA 2024-07-18
ER

PT J
AU Bolt, A
   de Leoni, M
   van der Aalst, WMP
AF Bolt, Alfredo
   de Leoni, Massimiliano
   van der Aalst, Wil M. P.
TI Scientific workflows for process mining: building blocks, scenarios, and
   implementation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Scientific workflows; Process mining; Large scale process analysis;
   RapidProM
ID PROCESS MODELS; FRAMEWORK; PRECISION; NETS
AB Over the past decade process mining has emerged as a new analytical discipline able to answer a variety of questions based on event data. Event logs have a very particular structure; events have timestamps, refer to activities and resources, and need to be correlated to form process instances. Process mining results tend to be very different from classical data mining results, e.g., process discovery may yield end-to-end process models capturing different perspectives rather than decision trees or frequent patterns. A process-mining tool like ProM provides hundreds of different process mining techniques ranging from discovery and conformance checking to filtering and prediction. Typically, a combination of techniques is needed and, for every step, there are different techniques that may be very sensitive to parameter settings. Moreover, event logs may be huge and may need to be decomposed and distributed for analysis. These aspects make it very cumbersome to analyze event logs manually. Process mining should be repeatable and automated. Therefore, we propose a framework to support the analysis of process mining workflows. Existing scientific workflow systems and data mining tools are not tailored towards process mining and the artifacts used for analysis (process models and event logs). This paper structures the basic building blocks needed for process mining and describes various analysis scenarios. Based on these requirements we implemented RapidProM, a tool supporting scientific workflows for process mining. Examples illustrating the different scenarios are provided to show the feasibility of the approach.
C1 [Bolt, Alfredo; de Leoni, Massimiliano; van der Aalst, Wil M. P.] Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP van der Aalst, WMP (corresponding author), Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
EM w.m.p.v.d.aalst@tue.nl
RI van der Aalst, Wil/G-1248-2011
OI van der Aalst, Wil/0000-0002-0955-6940; de Leoni,
   Massimiliano/0000-0002-8447-5374
CR Adriansyah A, 2015, INF SYST E-BUS MANAG, V13, P37, DOI 10.1007/s10257-014-0234-7
   Adriansyah A, 2013, LECT NOTES BUS INF P, V132, P137
   [Anonymous], 2001, ADAP COMP MACH LEARN
   [Anonymous], 2012, Proc. of the International Journal of Digital CurationIJDC
   [Anonymous], 2009, THESIS
   [Anonymous], 2007, Workflows for E-Science: Scientific Workflows for Grids
   [Anonymous], 2000, Production Workflow: Concepts and Techniques
   [Anonymous], BPI CHALLENGE 2013
   [Anonymous], 2013, RapidMiner: Data Mining Use Cases and Business Analytics Applications
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   [Anonymous], 2007, WORKFLOWS E SCI
   Berthold MR, 2008, STUD CLASS DATA ANAL, P319, DOI 10.1145/1656274.1656280
   Buijs J., 2014, RECEIPT PHASE ENV PE, DOI [10.4121/uuid:a07386a5-7be3-4367-9535-70bc9e77dbe6., DOI 10.4121/UUID:A07386A5-7BE3-4367-9535-70BC9E77DBE6]
   Buijs J.C.A.M., 2014, ENV PERMIT APPL PROC, V4, DOI [10.4121/uuid:e8c3a53d-5301-4afb-9bcd-38e74171ca32, DOI 10.4121/UUID:E8C3A53D-5301-4AFB-9BCD-38E74171CA32]
   Buijs J.C.A.M., 2014, ENV PERMIT APPL PROC, V2, DOI [10.4121/uuid:34b4f6f4-dbe0-4857-bf75-5b9e1138eb87, DOI 10.4121/UUID:34B4F6F4-DBE0-4857-BF75-5B9E1138EB87]
   Buijs J.C.A.M., 2012, On the Move to Meaningful Internet Systems: OTM 2012, P305, DOI DOI 10.1007/978-3-642-33606-5_19
   Buijs J.C.A.M., 2014, ENV PERMIT APPL PROC, V1, DOI [10.4121/uuid:c45dcbe9-557b-43ca-b6d0-10561e13dcb5, DOI 10.4121/UUID:C45DCBE9-557B-43CA-B6D0-10561E13DCB5]
   Buijs J.C.A.M., 2014, ENV PERMIT APPL PROC, V3, DOI [10.4121/uuid:a8ed945d-2ad8-480e-8348-cf7f06c933b3, DOI 10.4121/UUID:A8ED945D-2AD8-480E-8348-CF7F06C933B3]
   Buijs J.C.A.M., 2014, ENV PERMIT APPL PROC, V5, DOI [10.4121/uuid:c399c768-d995-4086-adda-c0bc72ad02bc, DOI 10.4121/UUID:C399C768-D995-4086-ADDA-C0BC72AD02BC]
   de Leoni M, 2015, ROAD TRAFFIC FINE MA, DOI DOI 10.4121/UUID:270FD440-1057-4FB9-89A9-B699B47990F5
   de Leoni M, 2014, LECT NOTES COMPUT SC, V8659, P250, DOI 10.1007/978-3-319-10172-9_16
   Diamantini C., 2012, P 27 ANN ACM S APPL, P152
   Fahland D, 2015, INFORM SYST, V47, P220, DOI 10.1016/j.is.2013.12.007
   Garijo D, 2014, FUTURE GENER COMP SY, V36, P338, DOI 10.1016/j.future.2013.09.018
   Goble CA, 2010, NUCLEIC ACIDS RES, V38, pW677, DOI 10.1093/nar/gkq429
   Goecks J, 2010, GENOME BIOL, V11, DOI 10.1186/gb-2010-11-8-r86
   Gunther CW, 2007, LECT NOTES COMPUT SC, V4714, P328
   Hull D, 2006, NUCLEIC ACIDS RES, V34, pW729, DOI 10.1093/nar/gkl320
   IEEE Task Force on Process Mining, 2013, PROC MIN CAS STUD
   Ihaka R., 1996, J COMPUTATIONAL GRAP, V5, P299, DOI [DOI 10.1080/10618600.1996.10474713, 10.2307/1390807, DOI 10.2307/1390807]
   Keim D, 2008, LECT NOTES COMPUT SC, V4950, P154, DOI 10.1007/978-3-540-70956-5
   Kranjc Janez, 2012, Machine Learning and Knowledge Discovery in Databases. Proceedings of the European Conference (ECML PKDD 2012), P816, DOI 10.1007/978-3-642-33486-3_54
   La Rosa M, 2011, EXPERT SYST APPL, V38, P7029, DOI 10.1016/j.eswa.2010.12.012
   Leemans Sander J. J., 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P311, DOI 10.1007/978-3-642-38697-8_17
   Leemans SJJ, 2015, LECT NOTES BUS INF P, V202, P304, DOI 10.1007/978-3-319-15895-2_26
   Ludäscher B, 2006, CONCURR COMP-PRACT E, V18, P1039, DOI 10.1002/cpe.994
   Mans Ronny., 2014, Online Proceedings of the BPM Demo Track, P56
   Mitchell T.M., 2017, MACH LEARN
   Scheer AW, 2000, LECT NOTES COMPUT SC, V1806, P376
   Song M., 2007, En Proceedings of the 17th annual workshop on information technologies and systems (wits), P139
   Sonntag M., 2010, E-Science 2010. Proceedings 6th IEEE International Conference on E-Science (E-Science 2010), P206, DOI 10.1109/eScience.2010.12
   Steffen B, 2007, LECT NOTES COMPUT SC, V4383, P92
   Turner KJ, 2015, INT J SOFTW TOOLS TE, V17, P321, DOI 10.1007/s10009-014-0315-4
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   van der Aalst WMP, 2011, FORM ASP COMPUT, V23, P333, DOI 10.1007/s00165-010-0161-4
   van der Aalst WMP, 2011, INFORM SYST, V36, P450, DOI 10.1016/j.is.2010.09.001
   van der Aalst W, 2012, WIRES DATA MIN KNOWL, V2, P182, DOI 10.1002/widm.1045
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2012, LECT NOTES COMPUT SC, V7481, P1
   van der Aalst WMP, 2013, DISTRIB PARALLEL DAT, V31, P471, DOI 10.1007/s10619-013-7127-5
   van der Aalst WilM. P., 2012, Application and Theory of Petri Nets - 33rd International Conference, PETRI NETS 2012, Hamburg, Germany, June 25-29, V7347, P72, DOI [10.1007/978-3-642-31131-45, DOI 10.1007/978-3-642-31131-45]
   van der Aalst WMP, 2006, LECT NOTES COMPUT SC, V3812, P512
   van der Aalst WMP, 2005, LECT NOTES COMPUT SC, V3536, P48
   van der Aalst WMP, 2004, LECT NOTES COMPUT SC, V3080, P244
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van der Werf JMEM, 2008, LECT NOTES COMPUT SC, V5062, P368, DOI 10.1007/978-3-540-68746-7_24
   van Dongen B., 2011, **DATA OBJECT**, DOI [10.4121/uuid:d9769f3d-0ab0-4fb8-803b-0d1120ffcf54, DOI 10.4121/UUID:D9769F3D-0AB0-4FB8-803B-0D1120FFCF54]
   van Dongen B., 2012, BPI CHALLENGE 2012, DOI DOI 10.4121/UUID:3926DB30-F712-4394-AEBC-75976070E91F
   van Dongen B.F., 2014, BPI CHALLENGE, V2014, DOI [10.4121/uuid:d5ccb355-ca67-480f-8739-289b9b593aaf, DOI 10.4121/UUID:D5CCB355-CA67-480F-8739-289B9B593AAF]
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3536, P444
   Verbeek HMW, 2001, COMPUT J, V44, P246, DOI 10.1093/comjnl/44.4.246
   Wassink I, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P314, DOI 10.1109/SERVICES-I.2009.48
   Weijters AJMM, 2003, INTEGR COMPUT-AID E, V10, P151
   Wickert A, 2014, LECT NOTES COMPUT SC, V8803, P449, DOI 10.1007/978-3-662-45231-8_35
   Zeng R., 2011, TAPP
NR 65
TC 24
Z9 27
U1 2
U2 28
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2016
VL 18
IS 6
BP 607
EP 628
DI 10.1007/s10009-015-0399-5
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DY5YK
UT WOS:000385180700004
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Eichelberger, H
   Schmid, K
AF Eichelberger, Holger
   Schmid, Klaus
TI Mapping the design-space of textual variability modeling languages: a
   refined analysis
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Variability modeling; Domain-specific languages; Survey; Scalability
AB Variability modeling is a major part of modern product line engineering. Graphical or table-based approaches to variability modeling are focused around abstract models and specialized tools to interact with these models. However, more recently textual variability modeling languages, comparable to some extent to programming languages, were introduced. We consider the recent trend in product line engineering towards textual variability modeling languages as a phenomenon, which deserves deeper analysis. In this article, we report on the results and approach of a literature survey combined with an expert study. In the literature survey, we identified 11 languages, which enable the textual specification of product line variability and which are sufficiently described for an in-depth analysis. We provide a classification scheme, useful to describe the range of capabilities of such languages. Initially, we identified the relevant capabilities of these languages from a literature survey. The result of this has been refined, validated and partially improved by the expert survey. A second recent phenomenon in product line variability modeling is the increasing scale of variability models. Some authors of textual variability modeling languages argue that these languages are more appropriate for large-scale models. As a consequence, we would expect specific capabilities addressing scalability in the languages. Thus, we compare the capabilities of textual variability modeling techniques, if compared to graphical variability modeling approaches and in particular to analyze their specialized capabilities for large-scale models.
C1 [Eichelberger, Holger; Schmid, Klaus] Univ Hildesheim, Software Syst Engn, D-31141 Hildesheim, Germany.
C3 University of Hildesheim
RP Eichelberger, H (corresponding author), Univ Hildesheim, Software Syst Engn, Marienburger Pl 22, D-31141 Hildesheim, Germany.
EM eichelberger@sse.uni-hildesheim.de; schmid@sse.uni-hildesheim.de
RI Schmid, Klaus/AAB-1480-2019
OI Schmid, Klaus/0000-0002-4147-3942
CR Abele Andreas., 2010, Proceedings of the 4th International Workshop on Variability Modelling of Software-Intensive Systems (VaMoS'10), V37, P101
   Acher M., 2009, Composing feature models, P62, DOI [10.1007/978-3-642-12107-46, DOI 10.1007/978-3-642-12107-46]
   Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Ahn H, 2013, IEEE INT C COMPUT, P416, DOI 10.1109/CSE.2013.70
   [Anonymous], 200916 TU BERL
   [Anonymous], 1993, SPC92019CMC
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Antkiewicz M., 2012, DOMAIN CONCEPT MODEL
   Antkiewicz M., 2013, MODELS 2013 CEUR WOR, V1104, P32
   Asikainen T., 2008, THESIS HELSINKI U TE
   Asikainen T, 2007, ADV ENG INFORM, V21, P23, DOI 10.1016/j.aei.2006.11.007
   Asikainen T, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P31, DOI 10.1109/SPLINE.2006.1691575
   Asikainen Timo, 2004, WORKSH SOFTW VAR MAN, P24
   Bak K., 2010, P 3 INT C SOFTW LANG, P102
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   BATORY D, AHEAD TOOL SUITE
   Benavides David, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P160, DOI 10.1007/978-3-642-38977-1_11
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger Thorsten., 2012, Proceedings of the 16th International Software Product Line Conference, V2, P233
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Beuche D, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P358, DOI 10.1109/SPLC.2008.53
   Boucher Q., 2010, Proc. of VaMoS10, P159
   Brummermann H., 2012, P 6 INT WORKSHOP VAR, P11
   Cechticky V, 2004, LECT NOTES COMPUT SC, V3107, P101
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Clarke D., 2011, S FORM METH COMP OBJ, V6957, P204
   Classen A., 2010, SPLBT00000003 PCSTR
   Classen A., 2008, C FUND APPR SOFTW EN
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Cordy M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P472, DOI 10.1109/ICSE.2013.6606593
   CVL group, 2012, COMM VAR LANG CVL OM
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Djebbi O., 2006, Proceedings of IEEE Fourth International Workshop on Comparative Evaluation in Requirements Engineering, P20, DOI DOI 10.1109/CERE.2006.2
   Eichelberger Holger, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P32, DOI 10.1007/978-3-642-38977-1_3
   Eichelberger H, 2012, P 10 INT C SERV OR C, P516, DOI [10.1007/978-3-642-34321-6_35, DOI 10.1007/978-3-642-34321-6_35]
   Eichelberger Holger., 2013, Proceedings of the 17th International Software Product Line Conference (SPLC'13), P12
   El-Sharkawy S., 2011, SOFTW PROD LIN C SPL, V2
   El-Sharkawy Sascha, 2012, P 16 INT SOFTW PROD, P126
   Gunther S., 2012, VARIABILITY MODELING, P157
   Helvensteijn M., 2012, SPLC 12 PROC 16 INT, V2, P127, DOI [10.1145/2364412.2364434, DOI 10.1145/2364412.2364434]
   Hubaux A., 2012, ECAI 2012 WORKSH CON
   INDENICA project consortium, 2012, OP VAR MOD APPR SERV
   Istoan P., 2011, VARY WS VARIABILITY
   IVML team, IVML LANG SPEC VERS
   Kang K., 1990, CMUSEI90TR21ESD90TR2
   Keunecke M., 2013, VARIABILITY MODELLIN, P20
   Liang J., 2012, 20121230 GSBLABTR
   Linux Kernel Team, KCONFIG
   Loughran N, 2008, LECT NOTES COMPUT SC, V4954, P36
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Myllarniemi V., 2005, IJCAI 05 WORKSH CONF
   Myllarniemi V., 2014, CEUR WORKSHOP PROC, V1220, P1
   Object Management Group Inc. (OMG), 2006, V20020060501 OMG
   Olaechea R., 2012, NONFUNCTIONAL SYSTEM
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rosenmuller M, 2011, P 5 INT WORKSH VAR M, P11, DOI DOI 10.1145/1944892.1944894
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Schmid K., 2013, PRODUCT LINE APPROAC
   Schmid K, 2010, LECT NOTES COMPUT SC, V6287, P151, DOI 10.1007/978-3-642-15579-6_11
   Schmid Klaus., 2011, 5 INT WORKSHOP VARIA, P119, DOI [10.1145/1944892.1944907, DOI 10.1145/1944892.1944907]
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Schroter R., 2013, VAMOS
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Staffs Keele, 2007, Tech. Rep.
   Stumptner M, 1997, AI COMMUN, V10, P111
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   van der Storm T, 2004, LECT NOTES COMPUT SC, V3107, P157
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   Voelter Markus, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P70, DOI 10.1109/SPLC.2011.25
   Wong Peter Y. H., 2012, Formal Verification of Object-Oriented Software. International Conference, FoVeOOS 2011. Revised Selected Papers, P49, DOI 10.1007/978-3-642-31762-0_5
   Zhou JG, 2012, STUD COMPUT INTELL, V430, P97
   Zschaler Steffen, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P82
NR 76
TC 15
Z9 15
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2015
VL 17
IS 5
BP 559
EP 584
DI 10.1007/s10009-014-0362-x
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8LO
UT WOS:000360859500002
DA 2024-07-18
ER

PT J
AU David, A
   Larsen, KG
   Legay, A
   Mikuionis, M
   Poulsen, DB
AF David, Alexandre
   Larsen, Kim G.
   Legay, Axel
   Mikuionis, Marius
   Poulsen, Danny Bogsted
TI UPPAAL SMC tutorial
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Uppaal; Timed automata; Model-checking; Statistical model-checking;
   Stochastic; Hybrid; Dynamical; Probabilistic
ID STATISTICAL-MODEL CHECKING
AB This tutorial paper surveys the main features of Uppaal SMC, a model checking approach in Uppaal family that allows us to reason on networks of complex real-timed systems with a stochastic semantic. We demonstrate the modeling features of the tool, new verification algorithms and ways of applying them to potentially complex case studies.
C1 [David, Alexandre; Larsen, Kim G.; Mikuionis, Marius; Poulsen, Danny Bogsted] Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
   [Legay, Axel] INRIA IRISA Rennes, Rennes, France.
C3 Aalborg University; Universite de Rennes
RP Legay, A (corresponding author), INRIA IRISA Rennes, Rennes, France.
EM axel.legay@inria.fr
OI Poulsen, Danny Bogsted/0000-0001-9623-0748; Mikucionis,
   Marius/0000-0001-8157-5428; Guldstrand Larsen, Kim/0000-0002-5953-3384
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   [Anonymous], 2005, THESIS CARNEGIE MELL
   [Anonymous], ELECT NOTES THEORETI
   [Anonymous], P 18 IEEE REAL TIM S
   Behrmann G., 2005, International Journal on Software Tools for Technology Transfer, V7, P19, DOI 10.1007/s10009-003-0111-z
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Behrmann G., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P174
   Behrmann G., 2001, Hybrid Systems: Computation and Control. 4th International Workshop, HSCC 2001. Proceedings (Lecture Notes in Computer Science Vol.2034), P147
   BEHRMANN G, 2000, LECT NOTES COMPUTER
   Behrmann G., 1999, LECT NOTES COMPUTER, V1633
   Behrmann G, 2011, SOFTWARE PRACT EXPER, V41, P133, DOI 10.1002/spe.1006
   Boyer Benoit, 2013, Quantitative Evaluation of Systems. 10th International Conference, QEST 2013. Proceedings: LNCS 8054, P160, DOI 10.1007/978-3-642-40196-1_12
   Broy M., 2005, Lecture Notes in Computer Science, V3472
   Bulychev Peter, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P449, DOI 10.1007/978-3-642-28891-3_39
   Bulychev P., 2012, INT C RUNTIME VERIFI, P260
   Bulychev P, 2012, LECT NOTES COMPUT SC, V7180, P168, DOI 10.1007/978-3-642-28717-6_15
   CHERNOFF H, 1952, ANN MATH STAT, V23, P493, DOI 10.1214/aoms/1177729330
   Clarke EM, 2008, LECT N BIOINFORMAT, V5307, P231, DOI 10.1007/978-3-540-88562-7_18
   Clarke EM, 1999, MODEL CHECKING, P1
   Clopper CJ, 1934, BIOMETRIKA, V26, P404, DOI 10.1093/biomet/26.4.404
   David Alexandre, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P352, DOI 10.1007/978-3-642-38088-4_24
   David Alexandre, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P388, DOI 10.1007/978-3-642-34026-0_29
   David A, 2003, LECT NOTES COMPUT SC, V2648, P225
   David A, 2002, LECT NOTES COMPUT SC, V2306, P218
   David A., TIME MINIAM EXPECTED
   David A, 2012, ELECTRON PROC THEOR, P122, DOI 10.4204/EPTCS.92.9
   David A, 2011, LECT NOTES COMPUT SC, V6919, P80, DOI 10.1007/978-3-642-24310-3_7
   Hartmanns A, 2010, LNCS, p[6957, 372]
   Henriques D., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P84, DOI 10.1109/QEST.2012.19
   Henzinger TA, 1995, LECT NOTES COMPUT SC, V939, P225
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Jegourel Cyrille, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P576, DOI 10.1007/978-3-642-39799-8_38
   Jha SK, 2009, LECT N BIOINFORMAT, V5688, P218, DOI 10.1007/978-3-642-03845-7_15
   Kwiatkowska M, 2004, INT CONF QUANT EVAL, P322
   Larsen K, 2001, LECT NOTES COMPUT SC, V2102, P493
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Sen K, 2004, LECT NOTES COMPUT SC, V3114, P202
   Theelen B. D., 2004, Performance Modelling for System-Level Design
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   Wang Yi, 1995, Formal Description Techniques VII. Proceedings of the 7th IFIP WG 6.1 International Conference on Formal Description Techniques, P243
NR 42
TC 233
Z9 237
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2015
VL 17
IS 4
BP 397
EP 415
DI 10.1007/s10009-014-0361-y
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM2BV
UT WOS:000357485500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cox, A
   Sankaranarayanan, S
   Chang, BYE
AF Cox, Arlen
   Sankaranarayanan, Sriram
   Chang, Bor-Yuh Evan
TI A bit too precise? Verification of quantized digital filters
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 18th International Conference on Tools and Algorithms for the
   Construction and Analysis of Systems (TACAS)
CY MAR 24-APR 01, 2012
CL Tallinn, ESTONIA
DE Verification; Bug finding; Digital Filters; Linear system; Model
   checking
ID STATIC ANALYSIS; OPTIMIZATION
AB Fixed-point digital filters are simple yet ubiquitous components of a wide variety of digital processing and control systems. Common errors in fixed-point filters include arithmetic round-off (truncation) errors, overflows and the presence of limit cycles. These errors can potentially compromise the correctness of the system as a whole. Traditionally, digital filters have been verified using a combination of design techniques from control theory and extensive testing. In this paper, we examine the use of formal verification techniques as part of the design flow for fixed-point digital filters. We study two classes of verification techniques involving bit-precise analysis and real-valued error approximations, respectively. We empirically evaluate several variants of these two fundamental approaches for verifying fixed-point implementations of digital filters. We design our comparison to reveal the best possible approach towards verifying real-world designs of infinite impulse response (IIR) digital filters. Our study compares the strengths and weaknesses of different verification techniques for digital filters and suggests efficient approaches using modern satisfiability-modulo-theories solvers (SMT) and hardware model checkers. This manuscript extends our previous work evaluating bounded verification, where a limited number of iterations of the system are explored, with unbounded verification, where an unlimited number of iterations of the system are considered. Doing so allows us to evaluate techniques that can prove the correctness of fixed-point digital filter implementations.
C1 [Cox, Arlen; Sankaranarayanan, Sriram; Chang, Bor-Yuh Evan] Univ Colorado, Boulder, CO 80309 USA.
C3 University of Colorado System; University of Colorado Boulder
RP Cox, A (corresponding author), Univ Colorado, Boulder, CO 80309 USA.
EM arlen.cox@colorado.edu; sriram.sankaranarayanan@colorado.edu;
   evan.chang@colorado.edu
OI Chang, Bor-Yuh Evan/0000-0002-1954-0774
CR Akbarpour B., 2007, J APPL LOGIC, V5, P651
   Alegre F., 2009, ABS09091977 CORR
   [Anonymous], 1957, J. Symb. Log., DOI DOI 10.2307/2963593
   Barrett C, 2013, J AUTOM REASONING, V50, P243, DOI 10.1007/s10817-012-9246-5
   Biere A, 2007, AIGER AND INVERTER G
   Blanchet Bruno., 2005, The Essence of Computation: Complexity, Analysis, V2566, P85
   Bradley AR, 2011, LECT NOTES COMPUT SC, V6538, P70, DOI 10.1007/978-3-642-18275-4_7
   Brayton R, 2010, LECT NOTES COMPUT SC, V6174, P24, DOI 10.1007/978-3-642-14295-6_5
   Brillout Angelo, 2009, Proceedings of the 2009 9th International Conference Formal Methods in Computer-Aided Design (FMCAD), P69, DOI 10.1109/FMCAD.2009.5351141
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   Cox A, 2012, LECT NOTES COMPUT SC, V7214, P33, DOI 10.1007/978-3-642-28756-5_4
   de Figueiredo L., 1997, BRAZ MATH C MON
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Een N., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P125
   Fang CF, 2003, ICCAD-2003: IEEE/ACM DIGEST OF TECHNICAL PAPERS, P275
   Feret J, 2004, LECT NOTES COMPUT SC, V2986, P33
   Franzle M., 2007, J. Satisf. Boolean Model. Comput., V1, P209
   Goubault E, 2011, LECT NOTES COMPUT SC, V6538, P232, DOI 10.1007/978-3-642-18275-4_17
   Heljanko K., 2011, FMCAD
   Hoder Krystof, 2012, LNCS, P157, DOI [10.1007/978-3-642-31612-8_13, DOI 10.1007/978-3-642-31612-8_13, DOI 10.1007/978-3-642-31612-813]
   Kinsman A.B., 2009, P C DES AUT TEST EUR
   Lee DU, 2006, IEEE T COMPUT AID D, V25, P1990, DOI 10.1109/TCAD.2006.873887
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2725, P1
   Monniaux D, 2005, LECT NOTES COMPUT SC, V3576, P199
   Monniaux D, 2009, LECT NOTES COMPUT SC, V5643, P570, DOI 10.1007/978-3-642-02658-4_42
   Oppenheim A. V., 1997, SIGNALS SYSTEMS
   Pang Y, 2010, IEEE T COMPUT AID D, V29, P1177, DOI 10.1109/TCAD.2010.2049154
   Smith J.O., 2007, Introduction to digital filters: with audio applications
   Sung WY, 1995, IEEE T SIGNAL PROCES, V43, P3087, DOI 10.1109/78.476465
   Yu Pang, 2011, 2011 16th Asia and South Pacific Design Automation Conference, ASP-DAC 2011, P455, DOI 10.1109/ASPDAC.2011.5722233
NR 30
TC 7
Z9 7
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2014
VL 16
IS 2
BP 175
EP 190
DI 10.1007/s10009-013-0279-9
PG 16
WC Computer Science, Software Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HR
UT WOS:000209673000004
DA 2024-07-18
ER

PT J
AU Budde, CE
   D'Argenio, PR
   Monti, RE
   Stoelinga, M
AF Budde, Carlos E.
   D'Argenio, Pedro R.
   Monti, Raul E.
   Stoelinga, Marielle
TI Analysis of non-Markovian repairable fault trees through rare event
   simulation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Rare event simulation; Fault tree analysis; Statistical model checking;
   System reliability
ID RESTART SIMULATION; SYSTEMS; MODELS
AB Dynamic fault trees (DFTs) are widely adopted in industry to assess the dependability of safety-critical equipment. Since many systems are too large to be studied numerically, DFTs dependability is often analysed using Monte Carlo simulation. A bottleneck here is that many simulation samples are required in the case of rare events, e.g. in highly reliable systems where components seldom fail. Rare event simulation (RES) provides techniques to reduce the number of samples in the case of rare events. In this article, we present a RES technique based on importance splitting to study failures in highly reliable DFTs, more precisely, on a variant of repairable fault trees (RFT). Whereas RES usually requires meta-information from an expert, our method is fully automatic. For this, we propose two different methods to derive the so-called importance function. On the one hand, we propose to cleverly exploit the RFT structure to compositionally construct such function. On the other hand, we explore different importance functions derived in different ways from the minimal cut sets of the tree, i.e., the minimal units that determine its failure. We handle RFTs with Markovian and non-Markovian failure and repair distributions-for which no numerical methods exist-and implement the techniques on a toolchain that includes the RES engine FIG, for which we also present improvements. We finally show the efficiency of our approach in several case studies.
C1 [Budde, Carlos E.] Univ Trento, Dept Informat Engn & Comp Sci, Trento, Italy.
   [D'Argenio, Pedro R.] Univ Nacl Cordoba, FAMAF, Cordoba, Argentina.
   [D'Argenio, Pedro R.] Consejo Nacl Invest Cient & Tecn, Cordoba, Argentina.
   [D'Argenio, Pedro R.] Saarland Univ, Dept Comp Sci, Saarbrucken, Germany.
   [Monti, Raul E.; Stoelinga, Marielle] Univ Twente, Formal Methods & Tools, Enschede, Netherlands.
   [Stoelinga, Marielle] Radboud Univ Nijmegen, Dept Software Sci, Nijmegen, Netherlands.
C3 University of Trento; National University of Cordoba; Consejo Nacional
   de Investigaciones Cientificas y Tecnicas (CONICET); Saarland
   University; University of Twente; Radboud University Nijmegen
RP Budde, CE (corresponding author), Univ Trento, Dept Informat Engn & Comp Sci, Trento, Italy.
EM carlosesteban.budde@unitn.it; pedro.dargenio@unc.edu.ar;
   r.e.monti@utwente.nl; m.i.a.stoelinga@utwente.nl
RI D'Argenio, Pedro R./R-7137-2019; Budde, Carlos E./JDC-4950-2023
OI D'Argenio, Pedro R./0000-0002-8528-9215; Budde, Carlos
   E./0000-0001-8807-1548; Stoelinga, Marielle/0000-0001-6793-8165
CR Abate Alessandro., 2018, PHM Society European Conference, V4
   [Anonymous], 2009, Rare Event Simulation Using Monte Carlo methods
   [Anonymous], 2014, P RAILWAYS
   Baier C, 1999, LECT NOTES COMPUT SC, V1664, P146
   Bayes A. J., 1970, Australian Computer Journal, V2, P180
   Beccuti M., 2010, VALUETOOLS 2008, DOI [10.4108/ICST.VALUETOOLS2008.4411, DOI 10.4108/ICST.VALUETOOLS2008.4411]
   Blanchet J., RUBINO TUFFIN, P87, DOI [10.1002/9780470745403.ch5, DOI 10.1002/9780470745403.CH5]
   Bobbio A, 2004, P REL MAINT S, P459, DOI 10.1109/RAMS.2004.1285491
   Boudali H, 2005, P REL MAINT S, P451, DOI 10.1109/RAMS.2005.1408404
   Boudali H, 2008, I C DEPEND SYS NETWO, P512, DOI 10.1109/DSN.2008.4630122
   Boudali H, 2007, I C DEPEND SYS NETWO, P708, DOI 10.1109/DSN.2007.37
   Budde Carlos E., 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12652), P373, DOI 10.1007/978-3-030-72013-1_21
   Budde Carlos E., 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12078), P483, DOI 10.1007/978-3-030-45190-5_27
   Budde Carlos E., 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12078), P463, DOI 10.1007/978-3-030-45190-5_26
   Budde Carlos E., 2020, Measurement, Modelling and Evaluation of Computing Systems. 20th International GI/ITG Conference, MMB 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12040), P259, DOI 10.1007/978-3-030-43024-5_16
   Budde C.E., 2017, VALUETOOLS ICST, P30, DOI [10.4108/eai.25-10-2016.2266501, DOI 10.4108/EAI.25-10-2016.2266501]
   Budde C.E., 2017, THESIS U NACL CORDOB
   Budde C.E., 2021, ANAL NONMARKOVIAN RE, DOI [10.6084/m9.figshare.16907143, DOI 10.6084/M9.FIGSHARE.16907143]
   Budde CE, 2019, SCI COMPUT PROGRAM, V174, P90, DOI 10.1016/j.scico.2019.01.006
   Budde CE, 2017, LECT NOTES COMPUT SC, V10206, P151, DOI 10.1007/978-3-662-54580-5_9
   Budde CE, 2015, LECT NOTES COMPUT SC, V9272, P275, DOI 10.1007/978-3-319-23267-6_18
   Coppit D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P750, DOI 10.1109/ICSE.2000.870487
   Coppit D, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P270, DOI 10.1109/ISSRE.2000.885878
   D'Argenio PR, 2018, LECT NOTES COMPUT SC, V11187, P132, DOI 10.1007/978-3-030-02508-3_8
   Distefano S., 2007, PAR DISTR PROC S 200, P1, DOI [10.1109/IPDPS.2007.370601, DOI 10.1109/IPDPS.2007.370682]
   DUGAN JB, 1990, P REL MAINT S, P286, DOI 10.1109/ARMS.1990.67971
   Garvels M.J.J., 2000, THESIS U TWENTE DEP
   Garvels MJJ, 2002, EUR T TELECOMMUN, V13, P363, DOI 10.1002/ett.4460130408
   GOYAL A, 1992, IEEE T COMPUT, V41, P36, DOI 10.1109/12.123381
   Guck Dennis, 2015, Formal Methods and Software Engineering. 17th International Conference on Formal Engineering Methods (ICFEM 2015). Proceedings: LNCS 9407, P304, DOI 10.1007/978-3-319-25423-4_19
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Heidelberger P., 1995, ACM Transactions on Modeling and Computer Simulation, V5, P43, DOI 10.1145/203091.203094
   Iglewicz B., 1993, Volume 16: How to Detect and Handle Outliers, DOI DOI 10.2307/1269377
   Jegourel Cyrille, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P576, DOI 10.1007/978-3-642-39799-8_38
   Jegourel C., 2015, ECEASST, V72, DOI [10.14279/tuj.eceasst.72.1024, DOI 10.14279/TUJ.ECEASST.72.1024]
   Junges Sebastian, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P299, DOI 10.1109/DSN.2016.35
   Junges S, 2015, LECT NOTES COMPUT SC, V9409, P3, DOI 10.1007/978-3-319-25942-0_1
   Kahn H, 1951, National Bureau of Standards applied mathematics series, V12, P27
   Katoen Joost-Pieter, 2017, ModelEd, TestEd, TrustEd - Essays Dedicated to Ed Brinksma on the Occasion of His 60th Birthday. LNCS 10500, P368, DOI 10.1007/978-3-319-68270-9_19
   Kwiatkowska M, 2002, LECT NOTES COMPUT SC, V2324, P200
   L'Ecuyer P., 2009, Rare Event Simulation Using Monte Carlo Methods, P39
   Law A., 2014, SIMULATION MODELING
   Liu Y, 2017, I C DEPEND SYS NETWO, P511, DOI 10.1109/DSN.2017.50
   Monti R. E., 2020, SER EPIC SERIES COMP, V73, P354, DOI [10.29007/p16v, DOI 10.29007/P16V]
   Monti R.E., 2018, THESIS U NACL CORDOB
   Nicola VF, 2001, IEEE T RELIAB, V50, P246, DOI 10.1109/24.974122
   Raiteri DC, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P659
   Ridder A, 2005, ANN OPER RES, V134, P119, DOI 10.1007/s10479-005-5727-9
   Rubino G., 2009, RARE EVENT SIMULATIO
   Rubino G., RUBINO TUFFIN, P1, DOI [DOI 10.1002/9780470745403.CH1, 10.1002/9780470745403.ch1]
   Ruijters Enno, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P662, DOI 10.1109/DSN.2016.67
   Ruijters E, 2019, RELIAB ENG SYST SAFE, V186, P220, DOI 10.1016/j.ress.2019.02.004
   Ruijters E, 2016, LECT NOTES COMPUT SC, V9826, P331, DOI 10.1007/978-3-319-43425-4_22
   Ruijters E, 2015, COMPUT SCI REV, V15-16, P29, DOI 10.1016/j.cosrev.2015.03.001
   Sullivan Kevin J, 1998, Galileo user's manual & design overview
   Sullivan KJ, 1999, DIG PAP INT SYMP FAU, P232, DOI 10.1109/FTCS.1999.781056
   Vesely William, 2002, Fault Tree Handbook with Aerospace Applications
   Villen-Altamirano J, 1998, AEU-INT J ELECTRON C, V52, P183
   Villén-Altamirano J, 2007, SIMUL-T SOC MOD SIM, V83, P821, DOI 10.1177/0037549707081257
   Villén-Altamirano J, 2019, OPER RES PERSPECT, V6, DOI 10.1016/j.orp.2019.100108
   Villén-Altamirano J, 2018, PERFORM EVALUATION, V121, P38, DOI 10.1016/j.peva.2018.02.002
   Villén-Altamirano M, 2002, EUR T TELECOMMUN, V13, P373, DOI 10.1002/ett.4460130409
   VILLENALTAMIRANO M, 1991, NORTH HOLL STUD TELE, V15, P71
   VillenAltamirano M, 1994, TELETRAF SCI ENG, V1, P797
   Xiao G, 2007, RELIAB ENG SYST SAFE, V92, P293, DOI 10.1016/j.ress.2006.04.004
NR 65
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2022
VL 24
IS 5
SI SI
BP 821
EP 841
DI 10.1007/s10009-022-00675-x
EA NOV 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6I0IB
UT WOS:000878970900001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Kordon, F
   Hillah, LM
   Hulin-Hubard, F
   Jezequel, L
   Paviot-Adet, E
AF Kordon, Fabrice
   Hillah, Lom Messan
   Hulin-Hubard, Francis
   Jezequel, Loig
   Paviot-Adet, Emmanuel
TI Study of the efficiency of model checking techniques using results of
   the MCC from 2015 To 2019
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model checking; Software competition; Formal verification; Concurrent
   systems
ID PETRI NETS; GRAPH
AB In various scientific communities dealing with formal analysis, software competitions have emerged and contributed to fostering progress in state of the art and providing insight into the evolution of the involved technologies. The model checking contest (MCC) is one of them; it focuses on asynchronous concurrent systems. This paper reports what the organizers have observed over five editions of the MCC between 2015 and 2019. It shows the evolution of state-of-the-art model checking tools in performing large and difficult verification tasks by improving existing techniques or designing new and innovative (combinations of) techniques. This paper also shows the impact of such an event on the corresponding scientific community.
C1 [Kordon, Fabrice; Hillah, Lom Messan; Hulin-Hubard, Francis; Paviot-Adet, Emmanuel] Sorbonne Univ, CNRS, LIP66, F-75005 Paris, France.
   [Hillah, Lom Messan] Univ Paris Nanterre, F-92001 Nanterre, France.
   [Jezequel, Loig] Univ Nantes, UMR CNRS 6004, LS2N, F-44321 Nantes, France.
   [Paviot-Adet, Emmanuel] Univ Paris, F-75005 Paris, France.
C3 Centre National de la Recherche Scientifique (CNRS); Sorbonne
   Universite; Nantes Universite; Universite Paris Cite
RP Kordon, F (corresponding author), Sorbonne Univ, CNRS, LIP66, F-75005 Paris, France.
EM Fabrice.Kordon@lip6.fr
CR Amendola G, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P52
   Amparore EG, 2016, SPRINGER SER RELIAB, P227, DOI 10.1007/978-3-319-30599-8_9
   [Anonymous], 2020, INT SAT COMPETITION
   [Anonymous], 2012, SAT, DOI 10.1007/978-3-642-31612-8_18
   [Anonymous], 2020, ENPAC GIT HUG PAGE
   Baarir S, 2015, LECT NOTES COMPUT SC, V9450, P79, DOI 10.1007/978-3-662-48899-7_6
   Babar J, 2010, LECT NOTES COMPUT SC, V6128, P308, DOI 10.1007/978-3-642-13675-7_19
   Balint A., 2012, SAT CHALLENGE 2012
   Barrett C, 2005, LECT NOTES COMPUT SC, V3576, P20
   Berthelot G., 1976, LECT NOTES COMPUTER, V45, P202
   Berthomieu B, 2004, INT J PROD RES, V42, P2741, DOI [10.1080/00207540412331312688, 10.1080/00207540410001705257]
   Berthomieu B, 2018, LECT NOTES COMPUT SC, V10869, P65, DOI 10.1007/978-3-319-94111-0_4
   Beyer Dirk, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12079), P126, DOI 10.1007/978-3-030-45237-7_8
   Beyer D., 2019, TOOLS ALGORITHMS CON, V11429
   Beyer D, 2019, INT J SOFTW TOOLS TE, V21, P1, DOI 10.1007/s10009-017-0469-y
   Biere A, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P9
   Bjorner N., 2020, STAREXEC
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Buchs Didier, 2018, Application and Theory of Petri Nets and Concurrency. 39th International Conference, PETRI NETS 2018. Proceedings: LNCS 10877, P385, DOI 10.1007/978-3-319-91268-4_21
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Chiola G, 1997, THEOR COMPUT SCI, V176, P39, DOI 10.1016/S0304-3975(96)00010-2
   Ciardo Gianfranco, 2009, Performance Evaluation Review, V36, P58, DOI 10.1145/1530873.1530885
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   Clarke E., 2000, Computer Aided Verification, P154
   Colange M., 2012, 17 MONT WORKSH DEV O
   Couvreur J., LECT NOTES COMPUTER, V3731, P443
   Le DT, 2014, LECT NOTES COMPUT SC, V8837, P242, DOI 10.1007/978-3-319-11936-6_18
   Duret-Lutz A, 2016, LECT NOTES COMPUT SC, V9938, P122, DOI 10.1007/978-3-319-46520-3_8
   Dyhr J., 39 INT C APPL THEOR
   Ernst G, 2019, LECT NOTES COMPUT SC, V11429, P176, DOI 10.1007/978-3-030-17502-3_12
   Esparza J., 2001, Correct Hardware Design and Verification Methods. 11th IFIP WG 10.5 Advanced Research Working Conference, CHARME 2001. Proceedings (Lecture Notes in Computer Science Vol.2144), P310
   Esparza J, 2016, LECT NOTES COMPUT SC, V9633, P342, DOI 10.1007/978-3-662-49665-7_20
   Fehling F., 1993, Advances in Petri Nets 1993, P148
   Garavel H, 2019, J LOG ALGEBR METHODS, V104, P60, DOI 10.1016/j.jlamp.2018.11.005
   Garavel H, 2015, LECT NOTES COMPUT SC, V9115, P179, DOI 10.1007/978-3-319-19488-2_9
   Girault C., 2003, Petri Nets for Systems Engineering: A Guide to Modeling, Verification, and Applications, DOI [10.1007/978.3-602-05324-9, DOI 10.1007/978-3-662-05324-9]
   Godefroid P., 1996, ISSTA 96 INT S SOFTW, P261
   Haddad S, 2003, PETRI NETS FOR SYSTEMS ENGINEERING, P183
   Haddad S, 1990, LECT NOTES COMPUT SC, V1989, P209
   Haddad S, 2009, P AMER CONTR CONF, P5018, DOI 10.1109/ACC.2009.5160020
   Hamez A, 2016, LECT NOTES COMPUT SC, V9930, P297, DOI 10.1007/978-3-662-53401-4_15
   Heiner M, 2016, LECT NOTES COMPUT SC, V9930, P286, DOI 10.1007/978-3-662-53401-4_14
   Hillah L., LECT NOTES COMPUTER, V4229, P307
   Hillah L.M., 2009, Petri Net Newsletter, V76, P9
   Hong S, 2012, LECT NOTES COMPUT SC, V6900, P121
   Jasper M, 2019, LECT NOTES COMPUT SC, V11429, P101, DOI 10.1007/978-3-030-17502-3_7
   Jensen JF, 2016, LECT NOTES COMPUT SC, V9930, P307, DOI 10.1007/978-3-662-53401-4_16
   Jensen PG, 2017, LECT NOTES COMPUT SC, V10580, P248, DOI 10.1007/978-3-319-67729-3_15
   Kant Gijs, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P692, DOI 10.1007/978-3-662-46681-0_61
   Kordon Fabrice, 2019, Computing and Software Science: State of the Art and Perspectives. Lecture Notes in Computer Science (LNCS 10000), P393, DOI 10.1007/978-3-319-91908-9_20
   Kordon Fabrice, 2014, 2014 14th International Conference on Application of Concurrency to System Design, P159, DOI 10.1109/ACSD.2014.12
   Kordon F., 2018, LNCS, V11090, P181, DOI [10.1007/978-3-662-58381-4_9, DOI 10.1007/978-3-662-58381-4_9]
   Kordon F., 1991, P 6 INT S COMP INF S
   Kordon  F., 2019, MODEL CHECKING CONTE
   Kordon F., 2019, LOR WORKSH ADV VERF
   Lopez Bobeda Edmundo, 2014, Application and Theory of Petri Nets and Concurrency. 35th International Conference, PETRI NETS 2014. Proceedings: LNCS 8489, P364, DOI 10.1007/978-3-319-07734-5_20
   MANNA Z, 1990, PROCEEDINGS OF THE NINTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P377, DOI 10.1145/93385.93442
   MCMILLAN KL, 1995, FORM METHOD SYST DES, V6, P45, DOI 10.1007/BF01384314
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Narizzano M, 2007, LECT NOTES COMPUT SC, V4733, P97
   Peled D., 1993, Computer Aided Verification. 5th International Conference, CAV '93 Proceedings, P409
   Racordon D, 2016, LECT NOTES COMPUT SC, V9823, P45, DOI 10.1007/978-3-319-45892-2_4
   Rodriguez Cesar, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P492, DOI 10.1007/978-3-319-02444-8_42
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Selman B, 1996, ARTIF INTELL, V81, P17, DOI 10.1016/0004-3702(95)00045-3
   Steffen B, 2017, INT CONF APPL CONCUR, P1, DOI 10.1109/ACSD.2017.24
   Sutcliffe G, 2017, AI COMMUN, V30, P419, DOI 10.3233/AIC-170744
   Thierry-Mieg Yann, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P231, DOI 10.1007/978-3-662-46681-0_20
   Thierry-Mieg Y, 2009, LECT NOTES COMPUT SC, V5505, P1, DOI 10.1007/978-3-642-00768-2_1
   Valk R, 2004, LECT NOTES COMPUT SC, V3098, P819, DOI 10.1007/978-3-540-27755-2_23
   VALMARI A, 1991, LECT NOTES COMPUT SC, V531, P156, DOI 10.1007/BFb0023729
   van Dijk T., 2018, HDB PARALLEL CONSTRA, P509
   Wolf Karsten, 2018, Application and Theory of Petri Nets and Concurrency. 39th International Conference, PETRI NETS 2018. Proceedings: LNCS 10877, P351, DOI 10.1007/978-3-319-91268-4_18
NR 74
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2021
VL 23
IS 6
BP 931
EP 952
DI 10.1007/s10009-021-00615-1
EA JUN 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XU5UO
UT WOS:000656929300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De Nicola, R
   Maggi, A
   Sifakis, J
AF De Nicola, Rocco
   Maggi, Alessandro
   Sifakis, Joseph
TI The DReAM framework for dynamic reconfigurable architecture modelling:
   theory and applications
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Architecture description languages; Software architectures;
   Domain-specific languages; Formal methods; Reconfigurable systems;
   Dynamic systems
AB Modern systems evolve in unpredictable environments and have to continuously adapt their behaviour to changing conditions. The "DReAM" (Dynamic Reconfigurable Architecture Modelling) framework has been designed for modelling reconfigurable dynamic systems. It provides a rule-based language, inspired from Interaction Logic, which is expressive and easy to use encompassing all aspects of dynamicity including parametric multi-modal coordination with creation/deletion of components as well as mobility. Additionally, it allows the description of both endogenous/modular and exogenous/centralized coordination styles and sound transformations from one style to the other. The DReAM framework is implemented in the form of a Java API bundled with an execution engine. It allows us to develop runnable systems combining the expressiveness of the rule-based notation together with the flexibility of this widespread programming language.
C1 [De Nicola, Rocco; Maggi, Alessandro] IMT Sch Adv Studies Lucca, Lucca, Italy.
   [Sifakis, Joseph] Univ Grenoble Alpes, Grenoble, France.
C3 IMT School for Advanced Studies Lucca; Communaute Universite Grenoble
   Alpes; Universite Grenoble Alpes (UGA)
RP Maggi, A (corresponding author), IMT Sch Adv Studies Lucca, Lucca, Italy.
EM alessandro.maggi@imtlucca.it
RI De Nicola, Rocco/B-8584-2012
OI De Nicola, Rocco/0000-0003-4691-7570
CR Alrahman Y.Abd, 2016, P FORM TECHN DISTR O
   [Anonymous], 1980, Lecture Notes in Computer Science
   Bliudze S, 2008, IEEE T COMPUT, V57, P1315, DOI 10.1109/TC.2008.26
   Bozga Marius, 2012, Software Composition. Proceedings 11th International Conference, SC 2012, P1, DOI 10.1007/978-3-642-30564-1_1
   Bradbury J.S, 2004, TECHNICAL REPORT, V477
   BROOKES SD, 1984, J ACM, V31, P560, DOI 10.1145/828.833
   Bruni R., 2007, TR0717 U PIS
   Bruni R, 2009, ELECTRON NOTES THEOR, V238, P45, DOI 10.1016/j.entcs.2009.05.012
   Butting A., 2017, PREP 4 INT WORKSH IN, P13
   El Ballouli R., 2018, ISOLA 2018, V11246
   Garlan D., 2014, WORKSH FUT SOFTW ENG, P29, DOI DOI 10.1145/2593882.2593886
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   Nicola Rocco, 2018, Leveraging Applications of Formal Methods, Verification and Validation Distributed Systems. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11246), P13, DOI 10.1007/978-3-030-03424-5_2
   Oreizy P, 1998, P INT WORKSH ROL SOF, P54
   Pinciroli C., 2015, ARXIV150705946
   Pinciroli C, 2016, 2016 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS (IROS 2016), P3794, DOI 10.1109/IROS.2016.7759558
   Taivalsaari A, 2014, P INT COMP SOFTW APP, P338, DOI 10.1109/COMPSAC.2014.56
NR 19
TC 8
Z9 8
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2020
VL 22
IS 4
SI SI
BP 437
EP 455
DI 10.1007/s10009-020-00555-2
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MH4SO
UT WOS:000546721100005
DA 2024-07-18
ER

PT J
AU Abeywickrama, DB
   Bicocchi, N
   Mamei, M
   Zambonelli, F
AF Abeywickrama, Dhaminda B.
   Bicocchi, Nicola
   Mamei, Marco
   Zambonelli, Franco
TI The SOTA approach to engineering collective adaptive systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Collective adaptive systems; Goal-oriented requirements engineering;
   Context awareness; Architectural patterns; Model checking; Autonomous
   vehicles
AB The emergence of collective adaptive systems-i.e., computational systems made up of an ensemble of autonomous components that have to operate in a coordinated and adaptive way in open-ended and unpredictable environments-calls for innovative modeling and software engineering tools, to support their systematic and rigorous design and development. In this paper, we present a general model for collective adaptive systems called SOTA ("State Of The Affairs"). SOTA brings together the lessons of goal-oriented requirements modeling, context-aware system modeling, and dynamical systems modeling. It has the potential for acting as a general reference model to help tackling some key issues in the design and development of collective adaptive systems. In particular, as we will show with reference to a scenario of collectives of autonomous vehicles, SOTA enables: early verification of requirements, identification of knowledge requirements for self-adaptation, and the identification of the most suitable architectural patterns for self-adaptation.
C1 [Abeywickrama, Dhaminda B.] Univ Warwick, Dept Comp Sci, Coventry, W Midlands, England.
   [Bicocchi, Nicola; Mamei, Marco; Zambonelli, Franco] Univ Modena & Reggio Emilia, Dipartimento Sci & Metodi Ingn, Reggio Emilia, Italy.
C3 University of Warwick; Universita di Modena e Reggio Emilia
RP Zambonelli, F (corresponding author), Univ Modena & Reggio Emilia, Dipartimento Sci & Metodi Ingn, Reggio Emilia, Italy.
EM Dhaminda.Abeywickrama@warwick.ac.uk; Nicola.Bicocchi@unimore.it;
   Marco.Mamei@unimore.it; Franco.Zambonelli@unimore.it
RI Bicocchi, Nicola/L-9416-2015
CR Abbas N, 2016, FIRST WORKSHOP ON QUALITATIVE REASONING ABOUT SOFTWARE ARCHITECTURES: QRASA 2016, P11, DOI 10.1109/QRASA.2016.9
   Abeywickrama Dhaminda B., 2018, Leveraging Applications of Formal Methods, Verification and Validation Distributed Systems. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11246), P79, DOI 10.1007/978-3-030-03424-5_6
   Abeywickrama DB, 2014, SCALABLE COMPUT PRAC, DOI [10.12694/scpe.v15i4.1052, DOI 10.12694/SCPE.V15I4.1052]
   Abeywickrama DB, 2012, 2012 IEEE 19TH INTERNATIONAL CONFERENCE AND WORKSHOPS ON ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS), P33, DOI 10.1109/ECBS.2012.30
   Abeywickrama DB, 2012, IEEE ENABL TECHNOL, P48, DOI 10.1109/WETICE.2012.48
   Bar Yam Y, 2002, DYNAMICS COMPLEX SYS
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Belzner L., 2016, T FDN MASTERING CHAN, V1, P180, DOI [10.1007/978-3-319-46508-1_10, DOI 10.1007/978-3-319-46508-1_10]
   Bencomo Nelly., 2013, Generative and Transformational Techniques in Software Engineering IV: International Summer School, GTTSE 2011, Braga, Portugal, July 3-9, 2011, P271, DOI DOI 10.1007/978-3-642-35992-7_7
   Bicocchi N, 2017, IEEE T INTELL TRANSP, V18, P3328, DOI 10.1109/TITS.2017.2684625
   Bordini RH, 2006, INFORM-J COMPUT INFO, V30, P33
   Borenstein J, 2017, IEEE TECHNOL SOC MAG, V36, P67, DOI 10.1109/MTS.2017.2696600
   Brand T, 2019, INT CONF SELF SELF, P17, DOI 10.1109/SASO.2019.00012
   Brand T, 2018, INT CONF SELF SELF, P156, DOI 10.1109/SASO.2018.00027
   Bures Tomas, 2013, P 16 INT ACM SIGS S, P81, DOI [10.1145/2465449.2465462, DOI 10.1145/2465449.2465462]
   Cabri G., 2011, Proceedings 2011 International Conference on Collaboration Technologies and Systems (CTS 2011), P508, DOI 10.1109/CTS.2011.5928730
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng BHC, 2009, GOAL BASED MODELING, P468
   Dalpiaz F, 2009, LECT NOTES COMPUT SC, V5565, P246, DOI 10.1007/978-3-642-02144-2_22
   de Lemos R., 2014, DAGSTUHL REPORTS, V3, P12
   De Nicola R, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2619998
   GAMMA E, 1995, DESIGN PATTERNS
   Giese Holger, 2017, SELF AWARE COMPUTING, P109
   Glazier T.J., 2019, P 4 ECAS WORKSH ENG
   Goldberg K, 2019, NAT MACH INTELL, V1, P2, DOI 10.1038/s42256-018-0008-x
   Goldsby HJ, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P36, DOI 10.1109/ECBS.2008.22
   Graja Zeineb, 2014, 6th International Conference on Agents and Artificial Intelligence (ICAART 2014). Proceedings, P229
   Harbers M, 2015, LECT NOTES COMPUT SC, V9013, P318, DOI 10.1007/978-3-319-16101-3_23
   Dam HK, 2013, SCI COMPUT PROGRAM, V78, P684, DOI 10.1016/j.scico.2011.12.005
   Hoch N, 2015, E MOBILITY CASE STUD, P513
   Jahnichen Stefan, 2018, Leveraging Applications of Formal Methods, Verification and Validation Distributed Systems. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11246), P109, DOI 10.1007/978-3-030-03424-5_8
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kit M, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P93, DOI 10.1109/SEAMS.2015.28
   Klös V, 2017, 2017 IEEE 2ND INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P13, DOI 10.1109/FAS-W.2017.114
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Lapouchnian Alexei., 2005, DEAS 05, P1
   Letier E, 2008, AUTOMAT SOFTW ENG, V15, P175, DOI 10.1007/s10515-008-0027-7
   Lippi M, 2018, IEEE INTERNET THINGS, V5, P2537, DOI 10.1109/JIOT.2017.2775047
   Macías-Escrivá FD, 2013, EXPERT SYST APPL, V40, P7267, DOI 10.1016/j.eswa.2013.07.033
   Magee Jeff., 2006, CONCURRENCY STATE MO
   Mao XJ, 2017, WEB INTELL, V15, P143, DOI 10.3233/WEB-170357
   Matena Vladimir, 2019, ENG ADAPTIVE SOFTWAR, P149
   Moghaddam FA, 2017, 11TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2017) - COMPANION VOLUME, P23, DOI 10.1145/3129790.3129824
   Morandini M, 2008, SASO 2008: SECOND IEEE INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS, PROCEEDINGS, P469, DOI 10.1109/SASO.2008.67
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Parunak H., 2009, Proceedings of The 8th International Conference on Autonomous Agents and Multiagent Systems-Volume, V1, P473
   Puviani M, 2015, EAI ENDORSED T SELF, V1, pe4, DOI [10.4108/sas.1.1.e4, DOI 10.4108/SAS.1.1.E4]
   Puviani M, 42 TR U MOD REGG EM
   Qureshi Nauman A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P108, DOI 10.1109/RE.2010.23
   Rasch K, 2011, WORLD WIDE WEB, V14, P295, DOI 10.1007/s11280-011-0112-x
   Ricci A, 2016, COMPUT LANG SYST STR, V45, P80, DOI 10.1016/j.cl.2015.12.003
   Sabatucci Luca, 2017, Journal of Reliable Intelligent Environments, V3, P159, DOI 10.1007/s40860-017-0047-9
   Salvaneschi G, 2015, SCI COMPUT PROGRAM, V102, P20, DOI 10.1016/j.scico.2014.11.016
   Schuster D, 2013, ACM T INTEL SYST TEC, V4, DOI 10.1145/2483669.2483679
   Silva Souza V. E., 2012, THESIS
   Tamersoy M, 2017, INT CONF SELF SELF, P41, DOI 10.1109/SASO.2017.13
   Uhlemann E, 2016, IEEE VEH TECHNOL MAG, V11, P25, DOI 10.1109/MVT.2015.2508322
   Viroli M, 2010, INFORM SCIENCES, V180, P1876, DOI 10.1016/j.ins.2009.11.021
   Vogel T, 2014, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2555612
   Weyns D, 2017, Handbook of Software Engineering
   Weyns D, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168268
   Whittle J, 2010, REQUIR ENG, V15, P177, DOI 10.1007/s00766-010-0101-0
   Williams RA, 2018, SIMUL MODEL PRACT TH, V83, P201, DOI 10.1016/j.simpat.2017.11.001
   Yahya MA, 2013, PROCEDIA COMPUT SCI, V20, P235, DOI 10.1016/j.procs.2013.09.267
   Yu E., 2010, SOCIAL MODELING REQU
   Zambonelli F, 2005, LECT NOTES COMPUT SC, V3457, P44
   Zambonelli F., 2011, Proceedings of the 2011 Fifth IEEE Conference on Self-Adaptive and Self-Organizing Systems Workshops (SASOW 2011), P108, DOI 10.1109/SASOW.2011.24
   Zambonelli F, 2003, LECT NOTES ARTIF INT, V2577, P13
   Zambonelli F, 2012, COMPUTER, V45, P76, DOI 10.1109/MC.2012.280
   Zhang YF, 2017, IEEE T IND INFORM, V13, P737, DOI 10.1109/TII.2016.2618892
NR 70
TC 8
Z9 8
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2020
VL 22
IS 4
SI SI
BP 399
EP 415
DI 10.1007/s10009-020-00554-3
EA FEB 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MH4SO
UT WOS:000518372700001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Gurung, A
   Ray, R
   Bartocci, E
   Bogomolov, S
   Grosu, R
AF Gurung, Amit
   Ray, Rajarshi
   Bartocci, Ezio
   Bogomolov, Sergiy
   Grosu, Radu
TI Parallel reachability analysis of hybrid systems in XSpeed
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Hybrid systems; Reachability analysis; Support functions; Parallel
   algorithms; Multi-core processors; Breadth-first-search
ID MODEL CHECKING; SIMULATION
AB Reachability analysis techniques are at the core of the current state-of-the-art technology for verifying safety properties of cyber-physical systems (CPS). The current limitation of such techniques is their inability to scale their analysis by exploiting the powerful parallel multi-core architectures now available in modern CPUs. Here, we address this limitation by presenting for the first time a suite of parallel state-space exploration algorithms that, leveraging multi-core CPUs, enable to scale the reachability analysis for linear continuous and hybrid automaton models of CPS. To demonstrate the achieved performance speedup on multi-core processors, we provide an empirical evaluation of the proposed parallel algorithms on several benchmarks comparing their key performance indicators. This enables also to identify which is the ideal algorithm and the parameters to choose that would maximize the performances for a given benchmark.
C1 [Gurung, Amit; Ray, Rajarshi] Natl Inst Technol Meghalaya, Shillong, Meghalaya, India.
   [Bartocci, Ezio; Grosu, Radu] Vienna Univ Technol, Vienna, Austria.
   [Bogomolov, Sergiy] Australian Natl Univ, Canberra, ACT, Australia.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Meghalaya; Technische Universitat Wien; Australian National
   University
RP Gurung, A (corresponding author), Natl Inst Technol Meghalaya, Shillong, Meghalaya, India.
EM amitgurung@nitm.ac.in; rajarshi.ray@nitm.ac.in;
   ezio.bartocci@tuwien.ac.at; sergiy.bogomolov@anu.edu.au;
   radu.grosu@tuwien.ac.at
RI Bogomolov, Sergiy/AAR-8878-2020
OI Bogomolov, Sergiy/0000-0002-0686-0365; Bartocci,
   Ezio/0000-0002-8004-6601
FU National Institute of Technology Meghalaya, India; DST-SERB, GoI
   [YSS/2014/000623]; Doctoral Program Logical Methods in Computer Science
   - Austrian Science Fund (FWF) [W1255-N23]; Austrian National Research
   Network RiSE/SHiNE project - Austrian Science Fund (FWF) [S11405-N23,
   S11412-N23]; Air Force Office of Scientific Research [FA2386-17-1-4065];
   ARC [DP140104219]
FX The authors would like to thank National Institute of Technology
   Meghalaya, for providing the computational facilities and infrastructure
   for carrying out this work. This work was supported in part by the
   National Institute of Technology Meghalaya, India and DST-SERB, GoI
   under project grant No. YSS/2014/000623. This work was also partially
   supported by the Doctoral Program Logical Methods in Computer Science
   (W1255-N23) and the Austrian National Research Network RiSE/SHiNE
   (S11405-N23 and S11412-N23) project, both funded by the Austrian Science
   Fund (FWF) and by the Air Force Office of Scientific Research under
   award no. FA2386-17-1-4065, and by the ARC project DP140104219 (Robust
   AI Planning for Hybrid Systems).
CR Akkaya I, 2015, POWER SYST, P1, DOI 10.1007/978-3-662-45928-7_1
   Althoff M., 2016, P 3 INT WORKSH APPL, P91, DOI DOI 10.29007/W19B
   [Anonymous], 2001, Contemporary Mathematics, DOI DOI 10.1090/CONM/280/04630
   [Anonymous], 2015, LNCS, DOI [DOI 10.1007/978-3-662-46681-015, DOI 10.1007/978-3-662-46681-0]
   Asarin E., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P365
   Barnat J, 2008, LECT NOTES COMPUT SC, V5311, P234, DOI 10.1007/978-3-540-88387-6_20
   Bartocci E, 2009, THEOR COMPUT SCI, V410, P3149, DOI 10.1016/j.tcs.2009.02.042
   Bartocci E., 2014, P 2014 INT SPIN S MO, P87
   Bartocci E, 2016, PLOS COMPUT BIOL, V12, DOI 10.1371/journal.pcbi.1004591
   Behrmann G., 2005, International Journal on Software Tools for Technology Transfer, V7, P19, DOI 10.1007/s10009-003-0111-z
   Behrmann Gerd., 2000, CAV 00, P216
   Berz M., 1998, Reliable Computing, V4, P361, DOI 10.1023/A:1024467732637
   Bogomolov Sergiy, 2015, Hardware and Software: Verification and Testing. 11th International Haifa Verification Conference, HVC 2015. Proceedings: LNCS 9434, P19, DOI 10.1007/978-3-319-26287-1_2
   Bogomolov Sergiy, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P116, DOI 10.1007/978-3-319-13338-6_10
   Bogomolov S., 2017, EASYCHAIR EPIC SERIE, V43, P36
   Bogomolov S, 2016, INT J SOFTW TOOLS TE, V18, P449, DOI 10.1007/s10009-015-0393-y
   Braberman V, 2006, FORM METHOD SYST DES, V29, P197, DOI 10.1007/s10703-006-0012-3
   Dalsgaard Andreas E., 2012, Formal Modeling and Analysis of Timed Systems. Proceedings of the 10th International Conference, FORMATS 2012, P91, DOI 10.1007/978-3-642-33365-1_8
   Dang T, 2009, LECT N BIOINFORMAT, V5688, P126, DOI 10.1007/978-3-642-03845-7_9
   Dang T, 2009, LECT NOTES COMPUT SC, V5643, P219, DOI 10.1007/978-3-642-02658-4_19
   Duggirala Parasara Sridhar, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P68, DOI 10.1007/978-3-662-46681-0_5
   Evangelista Sami, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P269, DOI 10.1007/978-3-642-33386-6_22
   Fan CC, 2016, LECT NOTES COMPUT SC, V9779, P531, DOI 10.1007/978-3-319-41528-4_29
   Fehnker A, 2004, LECT NOTES COMPUT SC, V2993, P326
   Fränzle M, 2007, FORM METHOD SYST DES, V30, P179, DOI 10.1007/s10703-006-0031-0
   Franzle M., 2007, J. Satisf. Boolean Model. Comput., V1, P209
   Frehse G, 2005, LECT NOTES COMPUT SC, V3414, P258
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Girard A, 2005, LECT NOTES COMPUT SC, V3414, P291
   Girard A., 2008, P IFAC WORLD C, V41, P8966, DOI DOI 10.3182/20080706-5-KR-1001.01514
   Gupta S, 2004, ICCAD-2004: INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, IEEE/ACM DIGEST OF TECHNICAL PAPERS, P210, DOI 10.1109/ICCAD.2004.1382573
   Gurung A, 2016, 2016 ACM/IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR SYSTEM DESIGN (MEMOCODE), P12, DOI 10.1109/MEMCOD.2016.7797741
   Hartmanns Arnd, 2014, LNCS, V8413, P593
   Henzinger T. A., 1995, Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, P373, DOI 10.1145/225058.225162
   Henzinger TA, 1997, LECT NOTES COMPUT SC, V1254, P460, DOI 10.1007/s100090050008
   Holzmann Gerard J., 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P155, DOI 10.1007/978-3-642-31759-0_12
   Johnson T.T., 2015, Proceedings of the 18th International Conference on Hybrid Systems: Computation and Control, P128
   Laarman Alfons, 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P247
   Le Guernic C., 2009, THESIS
   Le Guernic C, 2010, NONLINEAR ANAL-HYBRI, V4, P250, DOI 10.1016/j.nahs.2009.03.002
   Le Guernic C, 2009, LECT NOTES COMPUT SC, V5643, P540, DOI 10.1007/978-3-642-02658-4_40
   Makhlouf Ibtissem Ben, 2014, ARCH CPSWEEK, P37
   Makhorin A., 2009, GNU LINEAR PROGRAMMI, V4
   Ramdani N, 2011, NONLINEAR ANAL-HYBRI, V5, P149, DOI 10.1016/j.nahs.2010.05.010
   Ray Rajarshi, 2015, Hardware and Software: Verification and Testing. 11th International Haifa Verification Conference, HVC 2015. Proceedings: LNCS 9434, P3, DOI 10.1007/978-3-319-26287-1_1
   Rockafellar R. T., 1998, VARIATIONAL ANAL
   Silva B.I., 2000, ADPM
   SKOGESTAD S., 2001, Multivariable Feedback Control-Analysis and Design
   Xin Chen, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P258, DOI 10.1007/978-3-642-39799-8_18
NR 49
TC 4
Z9 5
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2019
VL 21
IS 4
BP 401
EP 423
DI 10.1007/s10009-018-0485-6
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IK4EM
UT WOS:000476539900002
DA 2024-07-18
ER

PT J
AU Bak, S
   Beg, OA
   Bogomolov, S
   Johnson, TT
   Nguyen, LV
   Schilling, C
AF Bak, Stanley
   Beg, Omar Ali
   Bogomolov, Sergiy
   Johnson, Taylor T.
   Luan Viet Nguyen
   Schilling, Christian
TI Hybrid automata: from verification to implementation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Hybrid automata; Model-based design; Simulink; Stateflow
ID INTERCHANGE FORMAT; SYSTEMS; SEMANTICS
AB Hybrid automata are an important formalism for modeling dynamical systems exhibiting mixed discrete-continuous behavior such as control systems and are amenable to formal verification. However, hybrid automata lack expressiveness compared to integrated model-based design frameworks such as the MathWorks' Simulink/Stateflow (SlSf). In this paper, we propose a technique for correct-by-construction compositional design of cyber-physical systems (CPS) by embedding hybrid automata into SlSf models. Hybrid automata are first verified using verification tools such as SpaceEx and then automatically translated to embed the hybrid automata into SlSf models such that the properties verified are transferred and maintained in the translated SlSf model. The resultant SlSf model can then be used for automatic code generation and deployment to hardware, resulting in an implementation. The approach is implemented in a software tool building on the HyST model transformation tool for hybrid systems. We show the effectiveness of our approach on a CPS case studya closed-loop buck converterand validate the overall correct-by-construction methodology: from formal verification to implementation in hardware controlling an actual physical plant.
C1 [Bak, Stanley] Air Force Res Lab, Dayton, OH USA.
   [Beg, Omar Ali; Luan Viet Nguyen] Univ Texas Arlington, Arlington, TX 76019 USA.
   [Bogomolov, Sergiy] Australian Natl Univ, Canberra, ACT, Australia.
   [Johnson, Taylor T.] Vanderbilt Univ, 221 Kirkland Hall, Nashville, TN 37235 USA.
   [Schilling, Christian] Univ Freiburg, Freiburg, Germany.
C3 University of Texas System; University of Texas Arlington; Australian
   National University; Vanderbilt University; University of Freiburg
RP Schilling, C (corresponding author), Univ Freiburg, Freiburg, Germany.
EM schillic@informatik.uni-freiburg.de
RI Beg, Omar A/X-1102-2018; Bogomolov, Sergiy/AAR-8878-2020; Johnson,
   Taylor T/E-8862-2015; Nguyen, Luan/GYA-2927-2022; Nguyen,
   Luan/JAC-8337-2023; johnson, taylor/GRX-4598-2022
OI Beg, Omar A/0000-0002-5353-7616; Bogomolov, Sergiy/0000-0002-0686-0365;
   Johnson, Taylor T/0000-0001-8021-9923; Schilling,
   Christian/0000-0003-3658-1065; Nguyen, Luan/0000-0001-5516-2443
FU Air Force Office of Scientific Research (AFOSR) [FA9550-15-1-0258,
   W911NF-16-1-0534]; AFRL [FA8750-15-1-0105]; National Science Foundation
   (NSF) [CNS 1464311, EPCN 1509804, CCF 1527398]; ARC Project
   [DP140104219]; Direct For Computer & Info Scie & Enginr; Division Of
   Computer and Network Systems [1713253] Funding Source: National Science
   Foundation; Division of Computing and Communication Foundations; Direct
   For Computer & Info Scie & Enginr [1736323] Funding Source: National
   Science Foundation
FX The authors thank the anonymous reviewers for their insightful comments.
   The material presented in this paper is based upon work supported by the
   Air Force Office of Scientific Research (AFOSR), in part under contract
   numbers FA9550-15-1-0258 and W911NF-16-1-0534, by AFRL through contract
   number FA8750-15-1-0105, by the National Science Foundation (NSF) under
   Grant Numbers CNS 1464311, EPCN 1509804, and CCF 1527398, and by the ARC
   Project DP140104219 "Robust AI Planning for Hybrid Systems". Any
   opinions, findings, and conclusions or recommendations expressed in this
   publication are those of the authors and do not necessarily reflect the
   views of AFRL, AFOSR, or NSF.
CR Agrawal A., 2004, ELECTRON NOTES THEOR, V109, P43
   Agut DEN, 2013, J LOGIC ALGEBR PROGR, V82, P1, DOI 10.1016/j.jlap.2012.07.001
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], 1985, NOSTRAND REINHOLD EL
   [Anonymous], 2005, EMSOFT 2005
   [Anonymous], 2008, P 8 ACM IEEE INT C E
   Bak S, 2015, REAL TIM SYST SYMP P, P195, DOI 10.1109/RTSS.2015.26
   Balasubramanian D., 2011, P 2011 INT S SOFTWAR, P45, DOI [10.1145/2001420.2001427, DOI 10.1145/2001420.2001427]
   Bogomolov Sergiy, 2015, Hardware and Software: Verification and Testing. 11th International Haifa Verification Conference, HVC 2015. Proceedings: LNCS 9434, P19, DOI 10.1007/978-3-319-26287-1_2
   Bogomolov Sergiy, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P116, DOI 10.1007/978-3-319-13338-6_10
   Bogomolov Sergiy, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P479, DOI 10.1007/978-3-642-31424-7_35
   Bogomolov S, 2016, INT J SOFTW TOOLS TE, V18, P449, DOI 10.1007/s10009-015-0393-y
   Bouissou O, 2012, ACM SIGPLAN NOTICES, V47, P129, DOI 10.1145/2345141.2248437
   Carloni L. P., 2004, TECH REP
   Carloni LP, 2006, FOUND TRENDS ELECTRO, V1, P1, DOI 10.1561/1000000001
   Chen M., 2016, LNCS, V10134, P65
   Clarke EM, 2011, LECT NOTES COMPUT SC, V6996, P1, DOI 10.1007/978-3-642-24372-1_1
   Donzé A, 2010, LECT NOTES COMPUT SC, V6174, P167, DOI 10.1007/978-3-642-14295-6_17
   Duggirala P.S., 2013, EMSOFT
   FISHER ME, 1991, IEEE T BIO-MED ENG, V38, P57, DOI 10.1109/10.68209
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Hamon G., 2007, International Journal on Software Tools for Technology Transfer, V9, P447, DOI 10.1007/s10009-007-0049-7
   Jiang ZH, 2014, INT J SOFTW TOOLS TE, V16, P191, DOI 10.1007/s10009-013-0289-7
   Johansson KH, 1999, SYST CONTROL LETT, V38, P141, DOI 10.1016/S0167-6911(99)00059-6
   Johnson T.T., 2015, Proceedings of the 18th International Conference on Hybrid Systems: Computation and Control, P128
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   LaValle SM, 2001, ALGORITHMIC AND COMPUTATIONAL ROBOTICS: NEW DIRECTIONS, P293
   Manamcheri K, 2011, HSCC 11: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P317
   Minopoli S, 2016, HSCC'16: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P287, DOI 10.1145/2883817.2883825
   Minopoli S, 2016, HSCC'16: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P93, DOI 10.1145/2883817.2883826
   Nguyen L.V., 2014, ARCH CPSWEEK, P19
   Pajic M, 2014, ACM T EMBED COMPUT S, V13, DOI 10.1145/2584651
   Pajic M, 2014, IEEE T IND INFORM, V10, P3, DOI 10.1109/TII.2012.2226594
   Pajic M, 2012, IEEE REAL TIME, P173, DOI 10.1109/RTAS.2012.25
   Pinto A, 2005, LECT NOTES COMPUT SC, V3414, P526
   Pinto A, 2006, LECT NOTES COMPUT SC, V3927, P491
   Sampath P, 2014, DES AUT CON, DOI 10.1145/2593069.2593237
   Sanfelice R. G., 2013, P HYBR SYST COMP CON, P101
   Schrammel P, 2012, HSCC 12: PROCEEDINGS OF THE 15TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P167
   Tiwari A, 2003, P IEEE, V91, P29, DOI 10.1109/JPROC.2002.805818
   Xin Chen, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P258, DOI 10.1007/978-3-642-39799-8_18
   Yan GG, 2016, LECT NOTES COMPUT SC, V9995, P702, DOI 10.1007/978-3-319-48989-6_43
   Zou L, 2015, LECT NOTES COMPUT SC, V9364, P464, DOI 10.1007/978-3-319-24953-7_33
NR 43
TC 10
Z9 11
U1 0
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2019
VL 21
IS 1
BP 87
EP 104
DI 10.1007/s10009-017-0458-1
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM2LA
UT WOS:000459292700004
DA 2024-07-18
ER

PT J
AU Bartocci, E
   Falcone, Y
   Bonakdarpour, B
   Colombo, C
   Decker, N
   Havelund, K
   Joshi, Y
   Klaedtke, F
   Milewicz, R
   Reger, G
   Rosu, G
   Signoles, J
   Thoma, D
   Zalinescu, E
   Zhang, Y
AF Bartocci, Ezio
   Falcone, Ylies
   Bonakdarpour, Borzoo
   Colombo, Christian
   Decker, Normann
   Havelund, Klaus
   Joshi, Yogi
   Klaedtke, Felix
   Milewicz, Reed
   Reger, Giles
   Rosu, Grigore
   Signoles, Julien
   Thoma, Daniel
   Zalinescu, Eugen
   Zhang, Yi
TI First international Competition on Runtime Verification: rules,
   benchmarks, tools, and final results of CRV 2014
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime Verification; Software competition; Monitoring; Benchmarks
ID EFFICIENT; SYSTEMS
AB The first international Competition on Runtime Verification (CRV) was held in September 2014, in Toronto, Canada, as a satellite event of the 14th international conference on Runtime Verification (RV'14). The event was organized in three tracks: (1) offline monitoring, (2) online monitoring of C programs, and (3) online monitoring of Java programs. In this paper, we report on the phases and rules, a description of the participating teams and their submitted benchmark, the (full) results, as well as the lessons learned from the competition.
C1 [Bartocci, Ezio] TU Wien, Vienna, Austria.
   [Falcone, Ylies] Univ Grenoble Alpes, INRIA, CNRS, Lab Informat Grenoble, F-38000 Grenoble, France.
   [Falcone, Ylies; Rosu, Grigore; Zhang, Yi] Univ Illinois, Champaign, IL USA.
   [Bonakdarpour, Borzoo] McMaster Univ, Hamilton, ON, Canada.
   [Colombo, Christian] Univ Malta, Msida, Malta.
   [Decker, Normann; Thoma, Daniel] Lubeck Univ, Lubeck, Germany.
   [Havelund, Klaus] NASA, Jet Prop Lab, Pasadena, CA USA.
   [Joshi, Yogi] Univ Waterloo, Waterloo, ON, Canada.
   [Klaedtke, Felix] NEC Labs Europe, Heidelberg, Germany.
   [Milewicz, Reed] Univ Alabama Birmingham, Birmingham, AL USA.
   [Reger, Giles] Univ Manchester, Manchester, Lancs, England.
   [Signoles, Julien] CEA, LIST, Software Secur Lab, PC 174, F-91191 Gif Sur Yvette, France.
   [Zalinescu, Eugen] Swiss Fed Inst Technol, Zurich, Switzerland.
C3 Technische Universitat Wien; Communaute Universite Grenoble Alpes;
   Institut National Polytechnique de Grenoble; Universite Grenoble Alpes
   (UGA); Centre National de la Recherche Scientifique (CNRS); Inria;
   University of Illinois System; University of Illinois Urbana-Champaign;
   McMaster University; University of Malta; University of Lubeck; National
   Aeronautics & Space Administration (NASA); NASA Jet Propulsion
   Laboratory (JPL); University of Waterloo; NEC Corporation; University of
   Alabama System; University of Alabama Birmingham; University of
   Manchester; Universite Paris Saclay; CEA; Swiss Federal Institutes of
   Technology Domain; ETH Zurich
RP Bartocci, E (corresponding author), TU Wien, Vienna, Austria.
EM ezio.bartocci@tuwien.ac.at
OI Signoles, Julien/0000-0001-9266-0820; Colombo,
   Christian/0000-0002-2844-5728; Reger, Giles/0000-0001-6353-952X;
   Bartocci, Ezio/0000-0002-8004-6601
FU TU Wien (TUW); Laboratoire d'Informatique de Grenoble; Inria; ICT COST
   Action IC1402 Runtime Verification beyond Monitoring (ARVI); Austrian
   FFG project HARMONIA [845631]; Austrian National Research Network
   [11405-N23]; Austrian Science Fund (FWF); National Aeronautics and Space
   Administration
FX Open access funding provided by TU Wien (TUW). The competition
   organizers, E. Bartocci, B. Bonakdarpour, and Y. Falcone, are grateful
   to many people. The competition organizers would like to warmly thank
   all participants for their hard work, the members of the runtime
   verification community who encouraged them to initiate this work, the
   Laboratoire d'Informatique de Grenoble and its IT team for its support,
   Inria and its GitLab framework, and finally the DataMill team for
   providing us with such a nice experimentation platform to run all
   benchmarks. All the authors acknowledge the support of the ICT COST
   Action IC1402 Runtime Verification beyond Monitoring (ARVI). Ezio
   Bartocci acknowledges also the partial support of the Austrian FFG
   project HARMONIA (No. 845631) and the Austrian National Research Network
   (No. S 11405-N23) SHiNE funded by the Austrian Science Fund (FWF). The
   research performed by Klaus Havelund was carried out at Jet Propulsion
   Laboratory, California Institute of Technology, under a contract with
   the National Aeronautics and Space Administration. The authors are
   grateful to the insightful reviewers who helped improving the quality of
   this paper.
CR Abdulla P. A., 2011, LNCS, V6605
   [Anonymous], 2011, RV. LNCS, DOI DOI 10.1007/978-3-642-29860-815
   [Anonymous], 2012, LNCS, DOI DOI 10.1007/978-3-642-29860-8
   Barrett C, 2013, J AUTOM REASONING, V50, P243, DOI 10.1007/s10817-012-9246-5
   Barringer Howard, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P68, DOI 10.1007/978-3-642-32759-9_9
   Bartocci Ezio, 2014, Formal Modeling and Analysis of Timed Systems. 12th International Conference, FORMATS 2014. Proceedings. LNCS: 8711, P23, DOI 10.1007/978-3-319-10512-3_3
   Bartocci E, 2016, LECT NOTES COMPUT SC, V9953, P333, DOI 10.1007/978-3-319-47169-3_24
   Bartocci E, 2016, PLOS COMPUT BIOL, V12, DOI 10.1371/journal.pcbi.1004591
   Bartocci E, 2014, LECT NOTES COMPUT SC, V8734, P1, DOI 10.1007/978-3-319-11164-3_1
   Bartocci E, 2013, LECT N BIOINFORMAT, V8130, P164, DOI 10.1007/978-3-642-40708-6_13
   Bartocci Ezio., 2012, INT C RUNTIME VERIFI, P168
   Basin D, 2016, FORM METHOD SYST DES, V49, P75, DOI 10.1007/s10703-016-0242-y
   Basin D, 2015, FORM METHOD SYST DES, V46, P262, DOI 10.1007/s10703-015-0222-7
   Basin D, 2015, J ACM, V62, DOI 10.1145/2699444
   Basin D, 2015, INFORM PROCESS LETT, V115, P186, DOI 10.1016/j.ipl.2014.09.009
   Basin D, 2013, IEEE T SOFTWARE ENG, V39, P1403, DOI 10.1109/TSE.2013.18
   Baudin P., 2014, ACSL ANSI ISO C SPEC
   Benameur A., 2013, P 6 C CYB SEC EXP TE
   Berkovich S, 2013, INT PARALL DISTRIB P, P1025, DOI 10.1109/IPDPS.2013.105
   Beyer Dirk, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P401, DOI 10.1007/978-3-662-46681-0_31
   Beyer D., 2014, Tools and Algorithms for the Con- struction and Analysis of Systems, P373
   Beyer D, 2012, LECT NOTES COMPUT SC, V7214, P504, DOI 10.1007/978-3-642-28756-5_38
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Boland T, 2012, COMPUTER, V45, P88, DOI 10.1109/MC.2012.345
   Boulé M, 2005, PR IEEE COMP DESIGN, P221, DOI 10.1109/ICCD.2005.66
   Boule M., ACM T DES AUTOM ELEC, V13
   Boulé M, 2006, INT HIGH LEVEL DESIG, P69
   Bufo S, 2014, LECT NOTES COMPUT SC, V8803, P391, DOI 10.1007/978-3-662-45231-8_30
   CHAOCHEN Z, 1991, INFORM PROCESS LETT, V40, P269, DOI 10.1016/0020-0190(91)90122-X
   Chen F, 2009, IEEE INT CONF AUTOM, P383, DOI 10.1109/ASE.2009.50
   Colombo C., 2012, LECT NOTES COMPUT SC, V7687, P214, DOI DOI 10.1007/978-3-642-35632-2
   Colombo C, 2012, FORM METHOD SYST DES, V41, P269, DOI 10.1007/s10703-012-0142-8
   Colombo C, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P33, DOI 10.1109/SEFM.2009.13
   Colombo C, 2009, LECT NOTES COMPUT SC, V5596, P135, DOI 10.1007/978-3-642-03240-0_13
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Dahan A, 2005, 6th International Symposium on Quality Electronic Design, Proceedings, P310, DOI 10.1109/ISQED.2005.32
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   de Oliveira AugustoBorn., 2013, Proceedings of the 4th ACM/SPEC International Conference on Performance Engineering, ICPE'13, P137
   Decker Normann, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P459, DOI 10.1007/978-3-642-38088-4_34
   Decker N, 2016, INT J SOFTW TOOLS TE, V18, P205, DOI 10.1007/s10009-015-0380-3
   Decker Normann., 2014, Tools and Algorithms for the Construction and Analysis of Systems, P341, DOI DOI 10.1007/978-3-642-54862-8
   Delahaye Mickael., 2013, Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1230, DOI [10.1145/2480362.2480593, DOI 10.1145/2480362.2480593]
   Donze Alexandre, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P92, DOI 10.1007/978-3-642-33386-6_9
   Drago I., 2012, the 2012 ACM conference, P481, DOI [10.1145/2398776.2398827, DOI 10.1145/2398776.2398827]
   Falcone Y., 2015, RUNT VER 15 INT C RV, V9333, P365
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Falcone Y, 2010, LECT NOTES COMPUT SC, V6418, P89, DOI 10.1007/978-3-642-16612-9_9
   Falcone Y, 2009, LECT NOTES COMPUT SC, V5779, P40, DOI 10.1007/978-3-642-04694-0_4
   Finkbeiner B, 2009, LECT NOTES COMPUT SC, V5779, P60, DOI 10.1007/978-3-642-04694-0_5
   FLEMING PJ, 1986, COMMUN ACM, V29, P218, DOI 10.1145/5666.5673
   Gol EA, 2014, IEEE DECIS CONTR P, P108, DOI 10.1109/CDC.2014.7039367
   Havelund K., 2015, FORMAL MODELING VERI
   Havelund Klaus, 2005, LNCS, V4171, P374, DOI [DOI 10.1007/978-3-540-69149-5, 10.1007/978-3-540-69149-540, DOI 10.1007/978-3-540-69149-540]
   Howar Falk, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P608, DOI 10.1007/978-3-642-34026-0_45
   Howar F, 2014, INT J SOFTW TOOLS TE, V16, P457, DOI 10.1007/s10009-014-0337-y
   Huisman M, 2015, INT J SOFTW TOOLS TE, V17, P647, DOI 10.1007/s10009-015-0396-8
   Jakobsson A, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1765, DOI 10.1145/2695664.2695815
   Jaksic S., 2016, LNCS
   Jaksic S, 2015, 2015 ACM/IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR CODESIGN (MEMOCODE), P218, DOI 10.1109/MEMCOD.2015.7340489
   Järvisalo M, 2012, AI MAG, V33, P89
   Jin D, 2012, PROC INT CONF SOFTW, P1427, DOI 10.1109/ICSE.2012.6227231
   Jin D, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P415
   Kalajdzic K, 2013, LECT NOTES COMPUT SC, V8174, P149, DOI 10.1007/978-3-642-40787-1_9
   Kirchner F, 2015, FORM ASP COMPUT, V27, P573, DOI 10.1007/s00165-014-0326-7
   Kosmatov N, 2013, LECT NOTES COMPUT SC, V8174, P167, DOI 10.1007/978-3-642-40787-1_10
   Laurila JK, 2013, PERVASIVE MOB COMPUT, V9, P752, DOI 10.1016/j.pmcj.2013.07.014
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Medhat R., 2014, CORR
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   Milewicz R, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P2107, DOI 10.1145/2695664.2695906
   Navabpour Samaneh., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P603, DOI [10.1145/2491411.2494596, DOI 10.1145/2491411.2494596]
   Pnueli A, 2006, LECT NOTES COMPUT SC, V4085, P573
   Reger Giles, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P596, DOI 10.1007/978-3-662-46681-0_55
   Reinbacher T, 2014, TACAS, V8413, P357
   Reinbacher T, 2014, FORM METHOD SYST DES, V44, P203, DOI 10.1007/s10703-013-0199-z
   Schordan M, 2014, INT J SOFTW TOOLS TE, V16, P493, DOI 10.1007/s10009-014-0338-x
   Selyunin K, 2016, DES AUT TEST EUROPE, P924
   Signoles J., 2014, E ACSL EXECUTABLE AN
   Signoles J, 2014, E ACSL USER MANUAL
   Sokolsky O., 2012, International Journal on Software Tools for Technology Transfer, V14, P243, DOI [10.1007/s10009-011-0218-6, DOI 10.1007/S10009-011-0218-6]
   Sutcliffe G, 2011, AI COMMUN, V24, P75, DOI 10.3233/AIC-2010-0483
   Nguyen T, 2016, LECT NOTES COMPUT SC, V9953, P371, DOI 10.1007/978-3-319-47169-3_28
   Zink M, 2009, COMPUT NETW, V53, P501, DOI 10.1016/j.comnet.2008.09.022
NR 83
TC 26
Z9 26
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2019
VL 21
IS 1
BP 31
EP 70
DI 10.1007/s10009-017-0454-5
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM2LA
UT WOS:000459292700002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Mazzanti, F
   Ferrari, A
   Spagnolo, GO
AF Mazzanti, Franco
   Ferrari, Alessio
   Spagnolo, Giorgio O.
TI Towards formal methods diversity in railways: an experience report with
   seven frameworks
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal methods diversity; Model checking; Deadlock avoidance; Train
   scheduling; Railways; Automatic train protection; CBTC
ID MODEL; REQUIREMENTS; VERIFICATION; LANGUAGE
AB In the ever expanding universe of formal methods, several tools exist that can be exploited to validate early system designs, and that are applicable to problems of the railway domain. In this paper, we present an experience report in formal modelling and verification using seven different formal environments, namely UMC, Promela/SPIN, NuSMV, mCRL2, CPN Tools, FDR4 and CADP. In particular, we model and verify an algorithm that addresses a typical railway problem, namely deadlock avoidance in train scheduling. The algorithm is designed according to a prototypical architecture, the so-called blackboard pattern, in which a set of global data are atomically updated by a set of concurrent guarded agents. Our experience, limited to the specific problem, shows that the design of the algorithm can be translated into the different formalisms with acceptable effort, while deep proficiency with the tools is required to optimise the performance. The current paper establishes the preliminary foundations for the concept of formal methods diversity in the development of railway systems. The concept is based on the idea that if different non-certified formal environments are used to verify the same design, this increases the confidence on the verification results. Furthermore, by checking that the number of states generated during the verification process is the same for each framework, the designer can have an initial indication of the equivalence of the diverse models. The industrial application of this promising concept requires further research, and appropriate guidelines shall be established to identify the proper formal environments to use for a specific railway problem, and to define an industrial process in which formal methods diversity can be exploited at its full benefits. The paper presents the different models developed, compares the tools employed in terms of language features and performance, and discusses the industrial implications of the concept of formal methods diversity in the railway domain.
C1 [Mazzanti, Franco; Ferrari, Alessio; Spagnolo, Giorgio O.] ISTI, CNR, Via G Moruzzi 1, Pisa, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR)
RP Mazzanti, F (corresponding author), ISTI, CNR, Via G Moruzzi 1, Pisa, Italy.
EM franco.mazzanti@isti.cnr.it; alessio.ferrari@isti.cnr.it;
   spagnolo@isti.cnr.it
RI Ferrari, Alessio/J-1155-2019; Spagnolo, Giorgio Oronzo/E-9661-2018;
   Mazzanti, Franco/B-7324-2015
OI Ferrari, Alessio/0000-0002-0636-5663; Mazzanti,
   Franco/0000-0003-4562-8777; Spagnolo, Giorgio Oronzo/0000-0002-7771-0882
FU ASTRail project; Shift2Rail Joint Undertaking under the European Union
   [777561]; H2020 Societal Challenges Programme [777561] Funding Source:
   H2020 Societal Challenges Programme
FX This wok has been partially funded by the ASTRail project. This project
   received funding from the Shift2Rail Joint Undertaking under the
   European Union's Horizon 2020 research and innovation programme under
   Grant Agreement No. 777561. The content of this paper reflects only the
   authors' view, and the Shift2Rail Joint Undertaking is not responsible
   for any use that may be made of the included information.
CR Amrani M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P921, DOI 10.1109/ICST.2012.197
   [Anonymous], 2005, B BOOK ASSIGNING PRO
   [Anonymous], LNCS
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Antoni M, 2008, INT C RAD, P6
   Arnold A, 1995, 5 IFIP WORK C DEP CO, P24
   AVIZIENIS A, 1985, IEEE T SOFTWARE ENG, V11, P1491, DOI 10.1109/TSE.1985.231893
   Barnat Jiri, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P863, DOI 10.1007/978-3-642-39799-8_60
   Behm P, 1999, LECT NOTES COMPUT SC, V1708, P369
   Benaissa N, 2016, LECT NOTES COMPUT SC, V9707, P203, DOI 10.1007/978-3-319-33951-1_15
   Blom S, 2010, LECT NOTES COMPUT SC, V6174, P354
   BRILLIANT SS, 1990, IEEE T SOFTWARE ENG, V16, P238, DOI 10.1109/32.44387
   CENELEC (Comite Europeen de Normalisation Electrotechnique), 2011, 501282011 EN CENELEC
   Chiappini A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P109, DOI 10.1145/1810295.1810312
   Cho CH, 2011, 2011 11TH INTERNATIONAL CONFERENCE ON CONTROL, AUTOMATION AND SYSTEMS (ICCAS), P1089
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Clarke EM, 1999, MODEL CHECKING, P1
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   DaSilva Clara, 1992, P IFIP TC6 WG61 5 IN, V10, P199
   DENICOLA R, 1995, J ACM, V42, P458, DOI 10.1145/201019.201032
   DENICOLA R, 1984, THEOR COMPUT SCI, V34, P83, DOI 10.1016/0304-3975(84)90113-0
   Dong J, 2005, ITCC 2005: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: CODING AND COMPUTING, VOL 2, P379, DOI 10.1109/ITCC.2005.149
   Dormoy Francois-Xavier, 2008, EMB REAL TIM SOFTW S
   Fantechi A, 2014, LECT NOTES COMPUT SC, V8368, P167, DOI 10.1007/978-3-319-05032-4_13
   Fantechi A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211619
   Ferrari Alessio, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P24, DOI 10.1007/978-3-642-28891-3_5
   Ferrari A, 2014, INT J SOFTW TOOLS TE, V16, P647, DOI 10.1007/s10009-013-0298-6
   Ferrari A, 2013, SCI COMPUT PROGRAM, V78, P828, DOI 10.1016/j.scico.2012.04.003
   Ferrari A, 2013, IEEE SOFTWARE, V30, P28, DOI 10.1109/MS.2013.44
   Ferrari A, 2011, FORMS/FORMAT 2010: FORMAL METHODS FOR AUTOMATION AND SAFETY IN RAILWAY AND AUTOMOTIVE SYSTEMS, P107, DOI 10.1007/978-3-642-14261-1_11
   Fitzgerald J, 2007, LECT NOTES COMPUT SC, V4700, P237
   Frappier M, 2010, LECT NOTES COMPUT SC, V6447, P581, DOI 10.1007/978-3-642-16901-4_38
   Garavel Hubert, 2017, ModelEd, TestEd, TrustEd - Essays Dedicated to Ed Brinksma on the Occasion of His 60th Birthday. LNCS 10500, P3, DOI 10.1007/978-3-319-68270-9_1
   Garavel Hubert, 2013, International Journal on Software Tools for Technology Transfer, V15, P89, DOI 10.1007/s10009-012-0244-z
   Gibson-Robinson T., 2014, Lecture Notes in Computer Science, V8413, P187
   Gnesi S., 2012, FORMAL METHODS IND C
   Gnesi S, 2011, LECT NOTES COMPUT SC, V6582, P390, DOI 10.1007/978-3-642-20401-2_18
   Groote JF, 2014, MODELING AND ANALYSIS OF COMMUNICATING SYSTEMS, P1
   Gruner S., 2015, INT WORKSH FORM TECH, P87
   Gunter CA, 2000, IEEE SOFTWARE, V17, P37, DOI 10.1109/52.896248
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Hamon G., 2008, AFM08 3 WORKSH AUT F
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Haxthausen AE, 2014, INT J SOFTW TOOLS TE, V16, P713, DOI 10.1007/s10009-013-0295-9
   Hoare C. A. R., 1978, Communications of the ACM, V21, P666, DOI 10.1145/359576.359585
   Hordvik S., 2016, 11 INT C EV NOV APPR
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   James P., 2013, LNCS, V8368, P253, DOI DOI 10.1007/978-3-319-05032-4_
   JANSEN L, 1998, P WORKSH PRACT US CO, P103
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Latif-Shabgahi G, 2004, IEEE T RELIAB, V53, P319, DOI 10.1109/TR.2004.832819
   Vu LH, 2017, SCI COMPUT PROGRAM, V133, P91, DOI 10.1016/j.scico.2016.05.010
   Magree J., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P634, DOI 10.1109/ICSE.1999.841063
   Mateescu R, 2008, LECT NOTES COMPUT SC, V5014, P148, DOI 10.1007/978-3-540-68237-0_12
   Mazzanti Franco, 2014, Formal Methods for Industrial Critical Systems. 19th International Conference, FMICS 2014. Proceedings: LNCS 8718, P109, DOI 10.1007/978-3-319-10702-8_8
   Mazzanti F., 2017, FORMAL TOOL DIVERSIT
   Mazzanti F, 2016, LECT NOTES COMPUT SC, V9953, P297, DOI 10.1007/978-3-319-47169-3_22
   Mazzanti F, 2016, LECT NOTES COMPUT SC, V9695, P94, DOI 10.1007/978-3-319-39083-3_7
   Mazzanti F, 2014, LECT NOTES COMPUT SC, V8430, P264, DOI 10.1007/978-3-319-06200-6_22
   Miller SP, 2010, COMMUN ACM, V53, P58, DOI 10.1145/1646353.1646372
   OWRE S, 1992, LECT NOTES ARTIF INT, V607, P748
   Powell D, 1999, IEEE T PARALL DISTR, V10, P580, DOI 10.1109/71.774908
   Qian J, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON COMPLEX FAULTS AND FAILURES IN LARGE SOFTWARE SYSTEMS (COUFLESS), P48, DOI 10.1109/COUFLESS.2015.15
   RTCA, 2012, DO178C RTCA
   ter Beek Maurice H., 2015, Software, Services and Systems: Essays Dedicated to Martin Wirsing on the Occasion of his Retirement from the Chair of Programming and Software Engineering: LNCS 8950, P312
   ter Beek MH, 2011, SCI COMPUT PROGRAM, V76, P119, DOI 10.1016/j.scico.2010.07.002
   Vanit-Anunchai S, 2016, LECT NOTES COMPUT SC, V9933, P214, DOI 10.1007/978-3-319-45943-1_15
   Whalen M.W., 2007, FMICS, P68, DOI DOI 10.1007/978-3-540-79707-4_7
   Winter K., 2006, 10 AUSTR WORKSH SAF, V55, P101
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
   Zave P, 2015, FORM ASP COMPUT, V27, P239, DOI 10.1007/s00165-014-0302-2
NR 71
TC 20
Z9 20
U1 0
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2018
VL 20
IS 3
SI SI
BP 263
EP 288
DI 10.1007/s10009-018-0488-3
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GF1BQ
UT WOS:000431667100003
DA 2024-07-18
ER

PT J
AU Boukhari, I
   Jean, S
   Ait-Sadoune, I
   Bellatreche, L
AF Boukhari, Ilyes
   Jean, Stephane
   Ait-Sadoune, Idir
   Bellatreche, Ladjel
TI The role of user requirements in data repository design
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Requirements engineering; Database; Data warehouse; Ontology; B method;
   Query optimization
AB Requirements engineering plays a crucial role in the development process of an information system as it aims at providing a complete and accurate requirement specification. In the life cycle of a Data Repository (DR) such as a database or a data warehouse, the requirements are mainly used to define the conceptual model once they have been identified from the informal specification. In this paper, we study the interest of requirements in the other phases of the DR life cycle. As the data integration problem, handled in the Extract, Transform, Load (ETL) phase, comes from the heterogeneity of requirements, we introduce a requirement integration framework based on ontologies and a generic model to unify the used vocabularies and requirement languages. Then we propose an approach to check the consistency of the requirements, w.r.t. the integrity constraints defined on the logical schema using the formal B method. We also show that requirements help define appropriate access structures such as indexes and materialized views to optimize SQL queries of a DR. Our approach is based on transformation rules that identify important queries that will be executed on a DR directly from the requirements. The experiments conducted on the Star Schema Benchmark (SSB) confirm the interest of this approach for the selection of different optimization structures. Finally, we present the OntoReqTool that implements the previous functionality on top of the OntoDB/OntoQL platform.
C1 [Boukhari, Ilyes; Bellatreche, Ladjel] Mil Polytecn Sch EMP, BP17, Algiers, Algeria.
   [Jean, Stephane] Univ Poitiers, LIAS ISAE ENSMA, 1 Ave Clement Ader, F-86960 Futuroscope, France.
   [Ait-Sadoune, Idir] Univ Paris Saclay, CentraleSupelec, LRI, F-91192 Gif Sur Yvette, France.
C3 Universite de Poitiers; Ecole Nationale Superieure de Mecanique et
   d'Aerotechnique (ISAE-ENSMA); Universite Paris Cite; Universite Paris
   Saclay
RP Jean, S (corresponding author), Univ Poitiers, LIAS ISAE ENSMA, 1 Ave Clement Ader, F-86960 Futuroscope, France.
EM boukhari.ilyes@gmail.com; jean@ensma.fr;
   idir.aitsadoune@centralesupelec.fr; bellatreche@ensma.fr
OI AIT SADOUNE, Idir/0000-0002-6484-8276
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Ait-Anieur Y., 2015, SOFT COMPUT, P1
   Ait-Sadoune I, 2013, LECT NOTES COMPUT SC, V8220, P1, DOI 10.1007/978-3-642-41221-9_1
   [Anonymous], 2009, Data warehouse design: modern principles and methodologies
   [Anonymous], 2013, CLEARSY ATELIER B VE
   [Anonymous], DISCIPLINE PROGRAMMI
   [Anonymous], 2012, ITUT12
   Badia A, 2011, SIGMOD REC, V40, P61, DOI 10.1145/2070736.2070750
   Bellatreche L, 2006, COMPUT IND, V57, P711, DOI 10.1016/j.compind.2006.04.015
   Boukhari Ilyes, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P344, DOI 10.1007/978-3-642-34032-1_35
   Boukhari I., 2013, P INT C INF INT WEB, P686, DOI DOI 10.1145/2539150.2539263
   Boukhari I., 2014, THESIS
   Boukorca Ahcene, 2013, Database and Expert Systems Applications. 24th International Conference, DEXA 2013. Proceedings: LNCS 8055, P278, DOI 10.1007/978-3-642-40285-2_24
   Brottier E, 2007, IEEE INT ENTERP DIST, P390, DOI 10.1109/EDOC.2007.44
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   du Bois P., 1995, THESIS
   Giorgini P., 2004, J DATA SEMANT, V1, P1
   Guo YB, 2005, J WEB SEMANT, V3, P158, DOI 10.1016/j.websem.2005.06.005
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Jean Stephane, 2014, Database and Expert Systems Applications 25th International Conference (DEXA 2014). Proceedings: LNCS 8645, P409, DOI 10.1007/978-3-319-10085-2_37
   Jean S, 2007, LECT NOTES BUS INF P, V1, P238
   Jiménez-Ruiz E, 2008, LECT NOTES COMPUT SC, V5021, P185
   Jovanovic P, 2014, INFORM SYST, V44, P94, DOI 10.1016/j.is.2014.01.004
   Khouri S, 2014, LECT NOTES COMPUT SC, V8803, P588, DOI 10.1007/978-3-662-45231-8_49
   Laleau R, 2010, INNOV SYST SOFTW ENG, V6, P47, DOI 10.1007/s11334-009-0119-y
   Lopez O., 2002, 7 JORN ING SOFTW BAS, P427
   Mammar A., 2006, Automated Software Engineering, V13, P497, DOI 10.1007/s10515-006-0273-5
   Mirbel Isabelle, 2012, Computational Logic in Multi-Agent Systems. Proceedings of the 13th International Workshop, CLIMA XIII, P110, DOI 10.1007/978-3-642-32897-8_9
   Navarro E, 2006, J COMPUT INFORM SYST, V46, P67, DOI 10.1080/08874417.2006.11645925
   Perrouin G, 2009, LECT NOTES COMPUT SC, V5512, P89, DOI 10.1007/978-3-642-02050-6_8
   Nguyen TH, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P328, DOI 10.1109/MODELS.2015.7338264
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   Vicente-Chicote C, 2007, J OBJECT TECHNOL, V6, P437, DOI 10.5381/jot.2007.6.9.a22
   Wieringa R, 1997, LECT NOTES COMPUT SC, V1250, P19
NR 34
TC 2
Z9 2
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2018
VL 20
IS 1
BP 19
EP 34
DI 10.1007/s10009-016-0443-0
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT7PX
UT WOS:000423346100002
DA 2024-07-18
ER

PT J
AU Blom, S
   Huisman, M
AF Blom, Stefan
   Huisman, Marieke
TI Witnessing the elimination of magic wands
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal methods; Program verification; Correctness proofs; Mechanical
   verification; Specification techniques; Separation logic
ID SEPARATION LOGIC; VERIFICATION
AB This paper discusses static verification of programs that have been specified using separation logic with magic wands. Magic wands are used to specify incomplete resources in separation logic, i.e., if missing resources are provided, a magic wand allows one to exchange these for the completed resources. One of the applications of the magic wand operator is to describe loop invariants for algorithms that traverse a data structure, such as the imperative version of the tree delete problem (Challenge 3 from the VerifyThis@FM2012 Program Verification Competition), which is the motivating example for our work. Most separation logic-based static verification tools do not provide support for magic wands, possibly because validity of formulas containing the magic wand is, by itself, undecidable. To avoid this problem, in our approach the program annotator has to provide a witness for the magic wand, thus circumventing undecidability due to the use of magic wands. A witness is an object that encodes both instructions for the permission exchange that is specified by the magic wand and the extra resources needed during that exchange. We show how this witness information is used to encode a specification with magic wands as a specification without magic wands. Concretely, this approach is used in the VerCors tool set: annotated Java programs are encoded as Chalice programs. Chalice then further translates the program to BoogiePL, where appropriate proof obligations are generated. Besides our encoding of magic wands, we also discuss the encoding of other aspects of annotated Java programs into Chalice, and in particular, the encoding of abstract predicates with permission parameters. We illustrate our approach on the tree delete algorithm, and on the verification of an iterator of a linked list.
C1 [Blom, Stefan; Huisman, Marieke] Univ Twente, NL-7500 AE Enschede, Netherlands.
C3 University of Twente
RP Blom, S (corresponding author), Univ Twente, POB 217, NL-7500 AE Enschede, Netherlands.
EM s.c.c.blom@utwente.nl; m.huisman@utwente.nl
OI Huisman, Marieke/0000-0003-4467-072X
CR [Anonymous], CW520 KATH U LEUV
   [Anonymous], 2004, J. Obj. Technol., DOI [10.5381/jot.2004.3.6.a2, DOI 10.5381/JOT.2004.3.6.A2]
   [Anonymous], 1980, Essays on Combinatory Logic, Lambda Calculus and Formalism
   [Anonymous], 2014, TECHNICAL REPORT
   Atkey R, 2010, LECT NOTES COMPUT SC, V6012, P85, DOI 10.1007/978-3-642-11957-6_6
   BARNETT M, 2005, LNCS, V4111, P364, DOI DOI 10.1007/11804192_17
   Berdine J, 2006, LECT NOTES COMPUT SC, V4111, P115
   Blom S, 2014, LECT NOTES COMPUT SC, V8442, P127, DOI 10.1007/978-3-319-06410-9_9
   Bornat R, 2005, ACM SIGPLAN NOTICES, V40, P259, DOI 10.1145/1047659.1040327
   Botincan M., 2011, BOOGIE
   Brochenin R, 2012, INFORM COMPUT, V211, P106, DOI 10.1016/j.ic.2011.12.003
   Calcagno C, 2007, IEEE S LOG, P366, DOI 10.1109/LICS.2007.30
   Calcagno C, 2011, J ACM, V58, DOI 10.1145/2049697.2049700
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Distefano D, 2008, ACM SIGPLAN NOTICES, V43, P213, DOI 10.1145/1449955.1449782
   Ferrara P, 2012, LECT NOTES COMPUT SC, V7148, P202, DOI 10.1007/978-3-642-27940-9_14
   Filliâtre JC, 2007, LECT NOTES COMPUT SC, V4590, P173
   Giacobazzi R., 2013, 40 ANN ACM SIGPLAN S
   Haack C, 2008, LECT NOTES COMPUT SC, V5140, P199
   Haack C, 2009, J OBJECT TECHNOL, V8, P55, DOI 10.5381/jot.2009.8.4.a3
   Hehner Eric C. R., 2005, Verified Software: Theories, Tools, Experiments. First IFIP TC 2/WG 2.3 Conference, VSTTE 2005. (Lecture Notes in Computer Science vol. 4171), P384
   Heule S, 2013, LECT NOTES COMPUT SC, V7920, P451, DOI 10.1007/978-3-642-39038-8_19
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Hobor A, 2013, ACM SIGPLAN NOTICES, V48, P523, DOI 10.1145/2480359.2429131
   Huet G., 1997, Journal of Functional Programming, V7, P549, DOI 10.1017/S0956796897002864
   Huisman M., 2013, 201301 KARLSR I TECH
   Hurlin C., 2009, THESIS U NICE SOPHIA
   Jacobs B., 2010, VSTTE WORKSH TOOLS E
   Jost D., 2013, VERIFIED SOFTWARE TH
   Kassios IT, 2012, LECT NOTES COMPUT SC, V7152, P196, DOI 10.1007/978-3-642-27705-4_16
   Krishnaswami Neelakantan R., 2009, P 4 INT WORKSHOP TYP, P105, DOI [10.1145/1481861.1481874, DOI 10.1145/1481861.1481874]
   Leavens G. T., 2007, JML REFERENCE MANUAL
   Leino KRM, 2009, LECT NOTES COMPUT SC, V5705, P195, DOI 10.1007/978-3-642-03829-7_7
   Maeda Toshiyuki., 2011, Proceedings of the 7th ACM SIGPLAN Workshop on Types in Language Design and Implementation, TLDI'11, P29, DOI DOI 10.1145/1929553.1929559
   Park J, 2013, ACM SIGPLAN NOTICES, V48, P219, DOI 10.1145/2480359.2429095
   Parkinson M, 2005, ACM SIGPLAN NOTICES, V40, P247, DOI 10.1145/1047659.1040326
   Parkinson MJ, 2008, ACM SIGPLAN NOTICES, V43, P75, DOI 10.1145/1328897.1328451
   Parkinson MJ, 2012, LOG METH COMPUT SCI, V8, DOI 10.2168/LMCS-8(3:01)2012
   Reynolds J. C., 1998, Higher-Order and Symbolic Computation, V11, P363, DOI 10.1023/A:1010027404223
   Reynolds J.C., 2008, LECT NOTES 1 PHD FAL
   Reynolds JC, 2002, IEEE S LOG, P55, DOI 10.1109/LICS.2002.1029817
   Rustan K, 2009, LECT NOTES COMPUT SC, V5502, P378, DOI 10.1007/978-3-642-00590-9_27
   Schwerhoff M., 2014, TECHNICAL REPORT
   Smans J, 2012, ACM T PROGR LANG SYS, V34, DOI 10.1145/2160910.2160911
   Tuerk T., 2010, Verified Software-Theories, Tools, Experiments, VSTTE, P29
   [No title captured]
NR 46
TC 7
Z9 7
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2015
VL 17
IS 6
BP 757
EP 781
DI 10.1007/s10009-015-0372-3
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT3DN
UT WOS:000362687300008
PM 27194940
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Wirsing, M
   Jähnichen, S
   De Nicola, R
AF Wirsing, Martin
   Jaehnichen, Stefan
   De Nicola, Rocco
TI Rigorous engineering of collective adaptive systems-2nd special section
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Adaptive systems; Collective adaptive systems; Software engineering;
   Formal methods; Rigorous methods
ID DYNAMIC-SYSTEMS
AB An adaptive system is able to adapt at runtime to dynamically changing environments and to new requirements. Adaptive systems can be single adaptive entities or collective ones that consist of several collaborating entities. Rigorous engineering requires appropriate methods and tools that help guaranteeing that an adaptive system lives up to its intended purpose. This paper introduces the special section on "Rigorous Engineering of Collective Adaptive Systems." It presents the 11 contributions of the section categorizing them into five distinct research lines: correctness by design and synthesis, computing with bio-inspired communication, new system models, machine learning, and programming and analyzing ensembles.
C1 [Wirsing, Martin] Ludwig Maximilians Univ Munchen, Munich, Germany.
   [Jaehnichen, Stefan] TU Berlin, Berlin, Germany.
   [Jaehnichen, Stefan] FZI Forschungszentrum Julich Informat, Berlin, Germany.
   [De Nicola, Rocco] IMT Sch Adv Studies Lucca, Lucca, Italy.
C3 University of Munich; Technical University of Berlin; IMT School for
   Advanced Studies Lucca
RP Wirsing, M (corresponding author), Ludwig Maximilians Univ Munchen, Munich, Germany.
EM wirsing@lmu.de; stefan.jaehnichen@tu-berlin.de;
   rocco.denicola@imtlucca.it
FU As the editors of this special section, we would like to extend our
   heartfelt thanks to all the authors for their valuable contributions and
   to all the reviewers for their careful evaluations and constructive
   comments. We are also grateful to the ISoLA cha
FX As the editors of this special section, we would like to extend our
   heartfelt thanks to all the authors for their valuable contributions and
   to all the reviewers for their careful evaluations and constructive
   comments. We are also grateful to the ISoLA chairs, Tiziana Margaria and
   Bernhard Steffen, for giving us the opportunity to organize this special
   section, and we thank them and <ITALIC>STTT</ITALIC> for providing us
   with the EquiNOCS system, which significantly facilitated the editorial
   process.
CR Abd alrahman Yehia, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P373, DOI 10.1007/978-3-031-19759-8_23
   Abd Alrahman Y., 2023, INT J SOFTW TOOLS TE
   Abd Alrahman Y, 2021, AUTON AGENT MULTI-AG, V35, DOI 10.1007/s10458-021-09521-x
   Alrahman Y.A., 2019, INFORM COMPUT, V268
   Andrade L.F., 2002, LNCS, P1
   Basile Davide, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P142, DOI 10.1007/978-3-031-19759-8_10
   Basile D, 2023, INT J SOFTW TOOLS TE, V25, P641, DOI 10.1007/s10009-023-00730-1
   Basile D, 2022, SCI COMPUT PROGRAM, V221, DOI 10.1016/j.scico.2022.102841
   Belmonte G, 2019, LECT NOTES COMPUT SC, V11427, P281, DOI 10.1007/978-3-030-17462-0_16
   Belzner L., 2016, T FDN MASTERING CHAN, V1, P180, DOI [10.1007/978-3-319-46508-1_10, DOI 10.1007/978-3-319-46508-1_10]
   Belzner L., 2023, AISOLA 2023
   Ben Mahfoudh H, 2020, INT J SOFTW TOOLS TE, V22, P417, DOI 10.1007/s10009-020-00557-0
   Bettini Lorenzo, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P283, DOI 10.1007/978-3-031-19759-8_18
   Bettini Lorenzo, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Engineering Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12477), P361, DOI 10.1007/978-3-030-61470-6_22
   Bettini Lorenzo, 2019, Models, Languages, and Tools for Concurrent and Distributed Programming: Essays Dedicated to Rocco De Nicola on the Occasion of His 65th Birthday. Lecture Notes in Computer Science (LNCS 11665), P115, DOI 10.1007/978-3-030-21485-2_8
   Bettini L., 2004, Global Computing. IST/FET International Workshop, GC 2004. Revised Selected Papers (Lecture Notes in Computer Science Vol.3267), P179
   Bettini L, 1998, SEVENTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WET ICE '98), P110, DOI 10.1109/ENABL.1998.725680
   Bettini L, 2023, INT J SOFTW TOOLS TE, V25, P747, DOI 10.1007/s10009-023-00727-w
   Bialek W, 2012, P NATL ACAD SCI USA, V109, P4786, DOI 10.1073/pnas.1118633109
   Bortolussi L., 2013, 1 FOCAS WORKSH FUND
   Bortolussi L, 2013, PERFORM EVALUATION, V70, P317, DOI 10.1016/j.peva.2013.01.001
   Bozga Marius, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P13, DOI 10.1007/978-3-031-19759-8_2
   Bozga M, 2023, INT J SOFTW TOOLS TE, V25, P625, DOI 10.1007/s10009-023-00723-0
   Broy M, 2014, LECT NOTES COMPUT SC, V8415, P39, DOI 10.1007/978-3-642-54848-2_3
   Bucchiarone A, 2015, 2015 IEEE NINTH INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS WORKSHOPS (SASOW), P43, DOI 10.1109/SASOW.2015.12
   Bures Tomas, 2013, 2013 IEEE 7th International Conference on Self-Adaptation and Self-Organizing Systems Workshops, P71, DOI 10.1109/SASOW.2013.23
   Busch D., 2023, AISOLA 2023
   Cardelli L, 2020, NAT COMPUT, V19, P237, DOI 10.1007/s11047-019-09761-7
   Casalaro GL, 2022, SOFTW SYST MODEL, V21, P19, DOI 10.1007/s10270-021-00908-8
   Chen Y., 2023, INT J SOFTW TOOLS TE
   DAVID R, 1994, AUTOMATICA, V30, P175, DOI 10.1016/0005-1098(94)90024-8
   De Nicola Rocco, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P82, DOI 10.1007/978-3-031-19759-8_6
   De Nicola R, 1998, IEEE T SOFTWARE ENG, V24, P315, DOI 10.1109/32.685256
   De Nicola R., 2018, LECT NOTES COMPUTER, P3
   De Nicola R, 2023, INT J SOFTW TOOLS TE, V25, P675, DOI 10.1007/s10009-023-00731-0
   De Nicola R, 2020, INT J SOFTW TOOLS TE, V22, P437, DOI 10.1007/s10009-020-00555-2
   De Nicola R, 2020, INT J SOFTW TOOLS TE, V22, P389, DOI 10.1007/s10009-020-00565-0
   De Nicola R, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2619998
   Doerr Andreas, 2018, P 35 INT C MACH LEAR
   Dorigo M., 2004, Ant colony optimization, DOI [10.7551/mitpress/1290.001.0001, DOI 10.7551/MITPRESS/1290.001.0001]
   Fettke Peter, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P65, DOI 10.1007/978-3-031-19759-8_5
   Fettke P., 2021, Handbook of Heraklit, V1
   Fettke P., 2023, INT J SOFTW TOOLS TE
   Gheibi O, 2021, ACM T AUTON ADAP SYS, V15, DOI 10.1145/3469440
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   Hölzl M, 2011, LECT NOTES COMPUT SC, V7000, P241, DOI 10.1007/978-3-642-24933-4_12
   Holzl M.M., LECT NOTES COMPUTER, V71, P1
   Horn P., 2001, "Autonomic computing: IBM's perspective on the state of information technology
   Inverso Omar, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Engineering Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12477), P243, DOI 10.1007/978-3-030-61470-6_15
   Jähnichen S, 2016, LECT NOTES COMPUT SC, V9952, P535, DOI 10.1007/978-3-319-47166-2_37
   Kernbach S., 2011, ARXIV11085643 CORR
   Le Boudec JY, 2007, INT CONF QUANT EVAL, P3, DOI 10.1109/QEST.2007.8
   Macenski S, 2022, SCI ROBOT, V7, DOI 10.1126/scirobotics.abm6074
   Margaria T., 2020, LECT NOTES COMPUTER
   Margaria T., 2016, LECT NOTES COMPUTER
   Margaria T., 2018, LECT NOTES COMPUTER
   Margaria T., 2014, TECHN MAST CHANG 6 1
   Margaria T., 2022, LECT NOTES COMPUTER
   Monica Stefania, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P165, DOI 10.1007/978-3-031-19759-8_11
   Monica S, 2023, INT J SOFTW TOOLS TE, V25, P693, DOI 10.1007/s10009-023-00724-z
   Murgia M, 2023, INT J SOFTW TOOLS TE, V25, P785, DOI 10.1007/s10009-023-00728-9
   Olfati-Saber R, 2006, IEEE T AUTOMAT CONTR, V51, P401, DOI 10.1109/TAC.2005.864190
   Pinciroli R, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P104, DOI 10.1109/ICSA51549.2021.00018
   Priami C., 2005, GLOB COMP IST FET IN
   Puviani M., 2013, Proceedings of the International C* Conference on Computer Science and Software Engineering, P77, DOI DOI 10.1145/2494444.2494470
   Radford A., 2019, LANGUAGE MODELS ARE
   Thoppilan R., 2022, ARXIV220108239
   Touvron H., 2023, ARXIV230213971 CORR
   Wirsing Martin, 2023, Analysis, Verification and Transformation for Declarative Programming and Intelligent Systems: Essays Dedicated to Manuel Hermenegildo on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (13160), P281, DOI 10.1007/978-3-031-31476-6_16
   Wirsing Martin, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Engineering Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12477), P161, DOI 10.1007/978-3-030-61470-6_10
   Wirsing M., 2011, International Symposium on Formal Methods for Components and Objects, P1
   Wirsing M., 2008, SOFTWARE INTENSIVE S
   Wirsing M., 2015, SOFTWARE ENG COLLECT
   Wirsing M., 2022, LECT NOTES COMPUTER, P3
   Wirsing M, 2014, LECT NOTES COMPUT SC, V8802, P96
   Yifeng Chen, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P127, DOI 10.1007/978-3-031-19759-8_9
   Zambonelli F, 2011, PROCEDIA COMPUT SCI, V7, P197, DOI 10.1016/j.procs.2011.09.006
NR 77
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2023
VL 25
IS 5-6
BP 617
EP 624
DI 10.1007/s10009-023-00734-x
EA NOV 2023
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Z2HQ2
UT WOS:001101489900002
OA hybrid
DA 2024-07-18
ER

PT J
AU Bettini, L
   Bourr, K
   Pugliese, R
   Tiezzi, F
AF Bettini, Lorenzo
   Bourr, Khalid
   Pugliese, Rosario
   Tiezzi, Francesco
TI Coordinating and programming multiple ROS-based robots with X-KLAIM
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Multi-robot systems; Multiple tuple spaces; X-Klaim; ROS
ID SYSTEMS; FRAMEWORK; LANGUAGE; ACCESS
AB Software development for robotics applications is still a major challenge that becomes even more complex when considering multi-robot systems (MRSs). Such distributed software has to perform multiple cooperating tasks in a well-coordinated manner to avoid unsatisfactory emerging behavior. This paper provides an approach for programming MRSs at a high abstraction level using the programming language X-Klaim. The computation and communication model of X-Klaim, based on multiple distributed tuple spaces, permits coordinating with the same abstractions and mechanisms both intra- and inter-robot interactions of an MRS. This allows developers to focus on MRS behavior, achieving readable, reusable, and maintainable code. The proposed approach can be used in practice by integrating X-Klaim and the popular robotics framework ROS. We demonstrate the feasibility and effectiveness of our approach by (i) showing how it scales when implementing two warehouse scenarios allowing us to reuse most of the code when passing from the simpler to the more enriched scenario and (ii) presenting the results of a few experiments showing that our code introduces a slightly greater but acceptable latency and consumes less memory than the traditional ROS implementation based on Python code.
C1 [Bettini, Lorenzo; Pugliese, Rosario; Tiezzi, Francesco] Univ Firenze, Dipartimento Stat Informat Applicaz, Viale Morgagni 65, I-50134 Florence, Italy.
   [Bourr, Khalid] Univ Camerino, Sch Sci & Technol, Via Madonna Carceri 7, I-62032 Camerino, Italy.
C3 University of Florence; University of Camerino
RP Tiezzi, F (corresponding author), Univ Firenze, Dipartimento Stat Informat Applicaz, Viale Morgagni 65, I-50134 Florence, Italy.
EM lorenzo.bettini@unifi.it; khalid.bourr@unicam.it;
   rosario.pugliese@unifi.it; francesco.tiezzi@unifi.it
RI Pugliese, Rosario/J-3685-2012
OI Pugliese, Rosario/0000-0002-1419-1405
FU We thank the anonymous referees for their useful comments.
FX We thank the anonymous referees for their useful comments.
CR Adam S., 2014, WORKSH DOM SPEC LANG
   Adam S., 2016, J SOFTWARE ENG ROBOT, V7, P121
   [Anonymous], 2010, J. Softw. Eng. Robot
   Basile Davide, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P142, DOI 10.1007/978-3-031-19759-8_10
   Belmonte G, 2019, LECT NOTES COMPUT SC, V11427, P281, DOI 10.1007/978-3-030-17462-0_16
   Bettini Lorenzo, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P283, DOI 10.1007/978-3-031-19759-8_18
   Bettini Lorenzo, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Engineering Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12477), P361, DOI 10.1007/978-3-030-61470-6_22
   Bettini L, 2005, LECT NOTES COMPUT SC, V3543, P181
   Bettini Lorenzo, 2019, Models, Languages, and Tools for Concurrent and Distributed Programming: Essays Dedicated to Rocco De Nicola on the Occasion of His 65th Birthday. Lecture Notes in Computer Science (LNCS 11665), P115, DOI 10.1007/978-3-030-21485-2_8
   Bettini L, 2002, SOFTWARE PRACT EXPER, V32, P1365, DOI 10.1002/spe.486
   Bettini L, 1998, SEVENTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WET ICE '98), P110, DOI 10.1109/ENABL.1998.725680
   Bettini L., 2016, Implementing Domain Specific Languages with Xtext and Xtend
   Bettini L., 2002, P ACM SAC 2002 SPEC, P373, DOI 10.1145/508791.508862
   Brugali D, 2016, STUD COMPUT INTELL, V625, P509, DOI 10.1007/978-3-319-26054-9_20
   Bruyninckx H., 2013, Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1758, DOI [10.1145/2480362.2480693, DOI 10.1145/2480362.2480693]
   Bubeck A., 2014, ISR, P137
   Casalaro GL, 2022, SOFTW SYST MODEL, V21, P19, DOI 10.1007/s10270-021-00908-8
   Ciancia V, 2018, INT J SOFTW TOOLS TE, V20, P289, DOI 10.1007/s10009-018-0483-8
   Ciccozzi F, 2016, IEEE ACCESS, V4, P6451, DOI 10.1109/ACCESS.2016.2613642
   De Nicola R, 1998, IEEE T SOFTWARE ENG, V24, P315, DOI 10.1109/32.685256
   De Nicola R, 2000, THEOR COMPUT SCI, V240, P215, DOI 10.1016/S0304-3975(99)00232-7
   De Nicola R., 2004, ACM Transactions on Computational Logic, V5, P79, DOI 10.1145/963927.963930
   De Nicola R, 2007, THEOR COMPUT SCI, V382, P42, DOI 10.1016/j.tcs.2007.05.008
   De Nicola R, 2007, INFORM COMPUT, V205, P1491, DOI 10.1016/j.ic.2007.03.004
   De Nicola R, 2006, SCI COMPUT PROGRAM, V63, P57, DOI 10.1016/j.scico.2005.07.013
   De Nicola R, 2018, FRONT ROBOT AI, V5, DOI 10.3389/frobt.2018.00094
   De Nicola R, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2619998
   De Nicola R, 2010, SCI COMPUT PROGRAM, V75, P376, DOI 10.1016/j.scico.2009.07.009
   Desai A, 2017, ACM IEEE INT CONF CY, P239, DOI 10.1145/3055004.3055022
   Dhouib Saadia, 2012, Simulation, Modeling, and Programming for Autonomous Robots. Proceedings of the Third International Conference, SIMPAR 2012, P149, DOI 10.1007/978-3-642-34327-8_16
   Doriya R, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION & AUTOMATION (ICCCA), P1014, DOI 10.1109/CCAA.2015.7148524
   Dragule S, 2017, LECT NOTES COMPUT SC, V10479, P45, DOI 10.1007/978-3-319-65948-0_4
   Eckhardt J, 2015, SCI COMPUT PROGRAM, V99, P24, DOI 10.1016/j.scico.2014.10.001
   Efftinge S, 2013, ACM SIGPLAN NOTICES, V48, P112, DOI 10.1145/2480361.2371419
   Estévez E, 2018, INT J ADV MANUF TECH, V97, P1195, DOI 10.1007/s00170-018-1976-z
   Farinelli A, 2004, IEEE T SYST MAN CY B, V34, P2015, DOI 10.1109/TSMCB.2004.832155
   Figat M, 2020, IEEE ACCESS, V8, P71617, DOI 10.1109/ACCESS.2020.2987099
   Frigerio M., 2013, P DSLROB 11
   García S, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P127, DOI 10.1145/3357766.3359535
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   Ghosh R, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428300
   Gjondrekaj E., 2012, SAC, P1522
   Gjondrekaj Edmond, 2012, Formal Methods and Software Engineering, P54
   Gorla D, 2003, LECT NOTES COMPUT SC, V2719, P119
   Gorla D., 2003, SPC, P86
   Harbin J., 2021, 24 INT C MOD DRIV EN
   Hu C, 2020, IEEE T RELIAB, V69, P674, DOI 10.1109/TR.2019.2923681
   Huang J, 2014, LECT NOTES COMPUT SC, V8734, P247, DOI 10.1007/978-3-319-11164-3_20
   Koenig N., 2004, INT ROB SYST 2004 IR, V3, P2149, DOI [DOI 10.1109/IROS.2004.1389727, DOI 10.1109/IR0S.2004.1389727]
   Kumar P., 2015, INT S RAP SYST PROT
   Lomuscio A, 2017, INT J SOFTW TOOLS TE, V19, P9, DOI 10.1007/s10009-015-0378-x
   Luckcuck M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3342355
   Majumdar R, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428202
   Meng WR, 2015, LECT NOTES COMPUT SC, V9058, P248, DOI 10.1007/978-3-319-17524-9_18
   Milner R., 1989, Communication and concurrency
   Miyazawa A, 2019, SOFTW SYST MODEL, V18, P3097, DOI 10.1007/s10270-018-00710-z
   Nordmann A, 2016, Journal of Software Engineering for Robotics, V7, P75
   Nordmann A, 2014, LECT NOTES COMPUT SC, V8810, P195, DOI 10.1007/978-3-319-11900-7_17
   Pinciroli C., 2016, EAI ENDORSED T COLLA, V2
   Quigley M, 2009, IEEE INT CONF ROBOT, P3604
   Ramaswamy A, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON COLLABORATION TECHNOLOGIES AND SYSTEMS (CTS), P131, DOI 10.1109/CTS.2014.6867554
   Rutle A., 2018, P MODELS 2018 WORKSH, P433
   Silva ED, 2021, J COMPUT LANG, V62, DOI 10.1016/j.cola.2020.101021
   St-Onge D., 2017, ARXIV
   Wang R, 2019, IEEE SYST J, V13, P1096, DOI 10.1109/JSYST.2018.2867285
   Yan Z, 2013, INT J ADV ROBOT SYST, V10, DOI 10.5772/57313
NR 66
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2023
VL 25
IS 5-6
BP 747
EP 764
DI 10.1007/s10009-023-00727-w
EA NOV 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AB9N8
UT WOS:001093027600005
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Momtaz, A
   Basnet, N
   Abbas, H
   Bonakdarpour, B
AF Momtaz, Anik
   Basnet, Niraj
   Abbas, Houssam
   Bonakdarpour, Borzoo
TI Predicate monitoring in distributed cyber-physical systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 20th International Conference on Runtime Verification (RV)
CY OCT 06-09, 2020
CL ELECTR NETWORK
SP Toyota Res Inst
DE Runtime verification; Cyber-physical systems; Continuous signals;
   Distributed systems
AB This paper solves the problem of detecting violations of predicates over distributed continuous-time and continuous-valued signals in cyber-physical systems (CPS). CPS often operate in a safety-critical context, where their correctness is crucially important. Large CPS that consist of many autonomous and communicating components distributed across a geographical area must maintain global correctness and safety. We assume a partially synchronous setting, where a clock synchronization algorithm guarantees a bound on clock drifts among all signals. We introduce a novel retiming method that allows reasoning about the correctness of predicates among continuous-time signals that do not share a global view of time. The resulting problem is encoded as an SMT problem and we introduce techniques to solve the SMT encoding efficiently. Leveraging simple knowledge of physical dynamics allows further runtime reductions. We fully implement our approach on three distributed CPS applications: monitoring of a network of autonomous ground vehicles, a network of aerial vehicles, and a water distribution system. The results show that in some cases it is even possible to monitor a distributed CPS sufficiently fast for online deployment on fleets of autonomous vehicles.
C1 [Momtaz, Anik; Bonakdarpour, Borzoo] Michigan State Univ, Dept Comp Sci & Engn, E Lansing, MI 48824 USA.
   [Basnet, Niraj; Abbas, Houssam] Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
C3 Michigan State University; Oregon State University
RP Momtaz, A; Bonakdarpour, B (corresponding author), Michigan State Univ, Dept Comp Sci & Engn, E Lansing, MI 48824 USA.; Abbas, H (corresponding author), Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
EM momtazan@msu.edu; houssam.abbas@oregonstate.edu; borzoo@msu.edu
FU This work is sponsored in part by the United States NSF FMitF-2102106
   and CCF (SHF)-2118356 awards. [FMitF-2102106, -2118356]; United States
   NSF
FX This work is sponsored in part by the United States NSF FMitF-2102106
   and CCF (SHF)-2118356 awards.
CR Abbas Houssam, 2014, 2014 Twelfth ACM/IEEE Conference on Formal Methods and Models for Codesign (MEMOCODE), P155, DOI 10.1109/MEMCOD.2014.6961854
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], 2019, DRONE LIFE FAA UTM P
   Bauer A, 2016, FORM METHOD SYST DES, V48, P46, DOI [10.1007/978-3-642-32759-9_10, 10.1007/s10703-016-0253-8]
   Benndorf M., 2016, 10 INT C SENS TECHN
   Bonakdarpour B., 2016, P 27 INT C CONC THEO
   CHANDY KM, 1985, ACM T COMPUT SYST, V3, P63, DOI 10.1145/214451.214456
   Chauhan H, 2013, SYM REL DIST SYST, P101, DOI 10.1109/SRDS.2013.19
   Cimatti A, 2019, LECT NOTES COMPUT SC, V11757, P165, DOI 10.1007/978-3-030-32079-9_10
   Colombo C, 2016, FORM METHOD SYST DES, V49, P109, DOI 10.1007/s10703-016-0251-x
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Deshmukh JV, 2017, FORM METHOD SYST DES, V51, P5, DOI 10.1007/s10703-017-0286-7
   Dokhanchi A, 2014, LECT NOTES COMPUT SC, V8734, P231, DOI 10.1007/978-3-319-11164-3_19
   Donze Alexandre, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P264, DOI 10.1007/978-3-642-39799-8_19
   Donzé A, 2010, LECT NOTES COMPUT SC, V6246, P92, DOI 10.1007/978-3-642-15297-9_9
   FAA, 2019, DOT UAS IN
   Fainekos GE, 2007, LECT NOTES COMPUT SC, V4763, P147
   Fraigniaud P., 2020, J APPL COMPUT TOPOL, V4, P141, DOI DOI 10.1007/S41468-019-00047-6
   Fraigniaud P, 2013, DISTRIB COMPUT, V26, P223, DOI 10.1007/s00446-013-0188-x
   Ganguly R., 2020, P 24 INT C PRINC DIS
   GARG VK, 1995, INT CON DISTR COMP S, P423, DOI 10.1109/ICDCS.1995.500047
   Hendry-Brogan M., 2019, Global unmanned aerial vehicle (uav) market report
   Kazemlou S, 2018, SYM REL DIST SYST, P207, DOI 10.1109/SRDS.2018.00032
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Medhat R, 2015, ACM T EMBED COMPUT S, V14, DOI 10.1145/2744196
   Danielsson LM, 2019, LECT NOTES COMPUT SC, V11757, P185, DOI 10.1007/978-3-030-32079-9_11
   Mills D, 2010, RFC 5905
   Mittal N, 2005, DISTRIB COMPUT, V17, P251, DOI 10.1007/s00446-004-0117-0
   Momtaz A, 2021, LECT NOTES COMPUT SC, V12974, P3, DOI 10.1007/978-3-030-88494-9_1
   Mostafa M, 2015, INT PARALL DISTRIB P, P494, DOI 10.1109/IPDPS.2015.95
   National Science Foundations, 2014, REV WE KEEP TRACK TI
   Ogale VA, 2007, LECT NOTES COMPUT SC, V4731, P420
   Pant YV, 2017, 2017 IEEE CONFERENCE ON CONTROL TECHNOLOGY AND APPLICATIONS (CCTA 2017), P1235, DOI 10.1109/CCTA.2017.8062628
   Pereira JC, 2020, LECT NOTES COMPUT SC, V12165, P122, DOI 10.1007/978-3-030-50995-8_7
   Quesel J.-D., 2013, THESIS C VONOSSIETZK
   Sen K, 2004, PROC INT CONF SOFTW, P418, DOI 10.1109/ICSE.2004.1317464
   USNRC, 2021, PRESS WAT REACT SYST
   USNRC, 2021, EM COR COOL SYST
   Valapil VT, 2017, LECT NOTES COMPUT SC, V10548, P277, DOI 10.1007/978-3-319-67531-2_17
   Xian Zhang, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P418, DOI 10.1007/978-3-642-28891-3_37
NR 41
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2023
VL 25
IS 4
BP 541
EP 556
DI 10.1007/s10009-023-00718-x
EA NOV 2023
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA X7GZ5
UT WOS:001093027600001
DA 2024-07-18
ER

PT J
AU Jansen, N
   Nolte, G
   Steffen, B
AF Jansen, Nils
   Nolte, Gerrit
   Steffen, Bernhard
TI Explanation Paradigms Leveraging Analytic Intuition (ExPLAIn)
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal methods; Explanation; (Deep) Neural Networks; Deep learning;
   Rigorous analysis; Decision trees; Random forests; Robustness;
   Reliability; Verification; (Statistical) model checking; Testing;
   Competition
AB In this paper, we present the envisioned style and scope of the new topic "Explanation Paradigms Leveraging Analytic Intuition" (ExPLAIn) with the International Journal on Software Tools for Technology Transfer (STTT). Intention behind this new topic is to (1) explicitly address all aspects and issues that arise when trying to, if possible, reveal and then confirm hidden properties of black-box systems, or (2) to enforce vital properties by embedding them into appropriate system contexts. Machine-learned systems, such as Deep Neural Networks, are particularly challenging black-box systems, and there is a wealth of formal methods for analysis and verification waiting to be adapted and applied. The selection of papers of this first Special Section of ExPLAIn, most of which were co-authored by editorial board members, is an illustrative example of the style and scope envisioned: In addition to methodological papers on verification, explanation, and their scalability, case studies, tool papers, literature reviews, and position papers are also welcome.
C1 [Jansen, Nils] Radboud Univ Nijmegen, Nijmegen, Netherlands.
   [Nolte, Gerrit; Steffen, Bernhard] TU Dortmund, Dortmund, Germany.
C3 Radboud University Nijmegen; Dortmund University of Technology
RP Steffen, B (corresponding author), TU Dortmund, Dortmund, Germany.
EM n.jansen@science.ru.nl; gerrit.nolte@tu-dortmund.de;
   steffen@cs.tu-dortmund.de
OI Jansen, Nils/0000-0003-1318-8973
FU As editors of the ExPLAIn theme, we would like to thank all authors for
   their contributions. We would also like to thank all reviewers for their
   insights and helpful comments.
FX As editors of the ExPLAIn theme, we would like to thank all authors for
   their contributions. We would also like to thank all reviewers for their
   insights and helpful comments.
CR Adadi A, 2018, IEEE ACCESS, V6, P52138, DOI 10.1109/ACCESS.2018.2870052
   Amodei Dario, 2016, CONCRETE PROBLEMS AI
   Badings T., CHALLENGES PERSPECTI, DOI [10.1007/s10009-023-00704-3, DOI 10.1007/S10009-023-00704-3]
   Bahar RI, 1997, FORM METHOD SYST DES, V10, P171, DOI 10.1023/A:1008699807402
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Blanchet B, 2003, ACM SIGPLAN NOTICES, V38, P196, DOI 10.1145/780822.781153
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Brix C., 1 3 YEARS INT VERIFI, DOI [10.1007/s10009-023-00703-4, DOI 10.1007/S10009-023-00703-4]
   Brown T., 2020, Advances in Neural Information Processing Systems, V33, P1877, DOI [DOI 10.48550/ARXIV.2005.14165, DOI 10.5555/3495724.3495883]
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Corbett -Davies Sam, 2018, ARXIV
   CRAMER GM, 1978, FOOD COSMET TOXICOL, V16, P255, DOI 10.1016/S0015-6264(76)80522-6
   Dosovitskiy A, 2021, arXiv, DOI [10.48550/ARXIV.2010.11929, DOI 10.48550/ARXIV.2010.11929]
   Ghavamzadeh M, 2015, FOUND TRENDS MACH LE, V8, P360, DOI 10.1561/2200000049
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Gossen F, 2023, INT J SOFTW TOOLS TE, V25, P267, DOI 10.1007/s10009-021-00635-x
   Gros T.P., ANAL NEURAL NETWORK, DOI [10.1007/s10009-022-00685-9, DOI 10.1007/S10009-022-00685-9]
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   inria, ERCIM WORK GROUP FOR
   Jansen N., 2023, LECT NOTES COMPUTER, P26
   Jungermann F., IN PRESS
   Kaelbling LP, 1996, J ARTIF INTELL RES, V4, P237, DOI 10.1613/jair.301
   Khmelnitsky I., 2022, IN PRESS
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kohli Puneet, 2020, Advances in Information and Communication. Proceedings of the 2019 Future of Information and Communication Conference (FICC). Lecture Notes in Networks and Systems (LNNS 69), P261, DOI 10.1007/978-3-030-12388-8_19
   Lee P.M., 1990, Bayesian Statistics, V85, P128
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Manolache, 2022, IN PRESS
   Mehrabi N, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3457607
   MILLER JC, 1963, COMMUN ACM, V6, P58, DOI 10.1145/366246.366248
   Monroe D, 2022, COMMUN ACM, V65, P11, DOI 10.1145/3554918
   Morimoto J, 2005, NEURAL COMPUT, V17, P335, DOI 10.1162/0899766053011528
   Murtovi A., 2022, IN PRESS
   Noble WS, 2006, NAT BIOTECHNOL, V24, P1565, DOI 10.1038/nbt1206-1565
   Nolte G., POWER TYPED AFFINE D, DOI [10.1007/s10009-023-00701-6, DOI 10.1007/S10009-023-00701-6]
   PARNAS DL, 1990, COMMUN ACM, V33, P636, DOI 10.1145/78973.78974
   Rao Qing, 2018, 2018 IEEE/ACM 1st International Workshop on Software Engineering for AI in Autonomous Systems (SEFAIAS). Proceedings, P35, DOI 10.1145/3194085.3194087
   Schluter M., 2022, IN PRESS
   Sieber K., 2013, FDN PROGRAM VERIFICA
   Silver D, 2017, NATURE, V550, P354, DOI 10.1038/nature24270
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Valiant L, 2013, Probably Approximately Correct: Nature's Algorithms for Learning and Prospering in A Complex World
   Varshney KR, 2016, 2016 INFORMATION THEORY AND APPLICATIONS WORKSHOP (ITA)
   Vaswani A, 2017, ADV NEUR IN, V30
NR 45
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2023
VL 25
IS 3
BP 241
EP 247
DI 10.1007/s10009-023-00715-0
EA SEP 2023
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S0IX8
UT WOS:001056293800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Babar, J
   Ciardo, G
   Miner, A
AF Babar, Junaid
   Ciardo, Gianfranco
   Miner, Andrew
TI CESRBDDs: binary decision diagrams with complemented edges and
   edge-specified reductions
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Binary decision diagrams; Canonical forms; Complemented edges
AB We introduce CESRBDDs, a form of binary decision diagrams (BDDs) that can exploit reduction opportunities beyond those allowed by reduced ordered BDDs (elimination of redundant nodes), zero-suppressed BDDs (elimination of "high-zero" nodes), and recent proposals merging the two (chained or tagged BDDs). CESRBDDs also incorporate complemented edges, thus never store both the encoding of a function and of its complement. We prove that CESRBDDs are canonical and show how their storage requirements and computational efficiency compare very favorably against previous alternatives, both theoretically and experimentally, using an extensive set of benchmarks. Another advantage of CESRBDDs over chained or tagged BDDs is that their nodes only require one byte to store reduction and complement information.
C1 [Babar, Junaid] Collins Aerosp, Trusted Syst Grp, Cedar Rapids, IA 52402 USA.
   [Ciardo, Gianfranco; Miner, Andrew] Iowa State Univ, Comp Sci Dept, Ames, IA USA.
C3 Raytheon Technologies; Collins Aerospace; Iowa State University
RP Babar, J (corresponding author), Collins Aerosp, Trusted Syst Grp, Cedar Rapids, IA 52402 USA.
EM junaid.babar@collins.com; ciardo@iastate.edu; asminer@iastate.edu
OI Miner, Andrew/0000-0002-7737-6888
FU National Science Foundation [ACI-1642397]
FX This work was supported in part by National Science Foundation Grant
   ACI-1642397.
CR Akers S. B., 1978, FTCS-8. The Eighth Annual International Conference on Fault-Tolerant Computing, P75
   Amparore EG, 2019, LECT NOTES COMPUT SC, V11428, P285, DOI 10.1007/978-3-030-17465-1_16
   Babar J., 2019, THESIS LOWA STATE U
   Babar J, 2019, LECT NOTES COMPUT SC, V11428, P303, DOI 10.1007/978-3-030-17465-1_17
   Bryant RE, 2018, LECT NOTES COMPUT SC, V10805, P81, DOI 10.1007/978-3-319-89960-2_5
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Denzumi S, 2018, ALGORITHMS, V11, DOI 10.3390/a11080128
   Drechsler R., 2006, T COMPUT INTEGR CIRC, V17, p965 973, DOI 10.1109/43.728917
   FLEMING PJ, 1986, COMMUN ACM, V29, P218, DOI 10.1145/5666.5673
   Karplus K, 1988, REPRESENTING BOOLEAN
   KIMURA S, 1990, 1990 IEEE INTERNATIONAL CONFERENCE ON COMPUTER DESIGN : VLSI IN COMPUTERS & PROCESSORS, P220
   Knuth D. E., 2011, The art of computer programming (second ed.) vol. 1 fundamental algorithms, V4A
   LEE CY, 1959, BELL SYST TECH J, V38, P985, DOI 10.1002/j.1538-7305.1959.tb01585.x
   Madre J.-C., 1988, 25th ACM/IEEE Design Automation Conference. Proceedings 1988 (Cat. No.88CH2540-3), P205, DOI 10.1109/DAC.1988.14759
   Miessler D., SecLists
   Minato S., 1995, THESIS KYOTO U
   Minato S.-I., 2001, International Journal on Software Tools for Technology Transfer, V3, P156, DOI 10.1007/s100090100038
   RUDELL R, 1993, 1993 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN - DIGEST OF TECHNICAL PAPERS, P42, DOI 10.1109/ICCAD.1993.580029
   van Dijk T, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P108, DOI 10.23919/FMCAD.2017.8102248
   Yang S., 1991, LOGIC SYNTHESIS OPTI
NR 20
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2022
VL 24
IS 1
SI SI
BP 89
EP 109
DI 10.1007/s10009-021-00640-0
EA FEB 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZT9UB
UT WOS:000749947200001
DA 2024-07-18
ER

PT J
AU Arras, PA
   Andronidis, A
   Pina, L
   Mituzas, K
   Shu, QY
   Grumberg, D
   Cadar, C
AF Arras, Paul-Antoine
   Andronidis, Anastasios
   Pina, Luis
   Mituzas, Karolis
   Shu, Qianyi
   Grumberg, Daniel
   Cadar, Cristian
TI SaBRe: load-time selective binary rewriting
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Selective binary rewriting; x86_64; RISC-V; System call tracing;
   Multi-version execution; Fault injection
AB Binary rewriting consists in disassembling a program to modify its instructions. However, existing solutions suffer from shortcomings in terms of soundness and performance. We present SaBRe, a load-time system for selective binary rewriting. SaBRe rewrites specific constructs-particularly system calls and functions-when the program is loaded into memory, and intercepts them using plugins through a simple API. We also discuss the theoretical underpinnings of disassembling and rewriting. We developed two backends-for x86_64 and RISC-V-which were used to implement three plugins: a fast system call tracer, a multi-version executor, and a fault injector. Our evaluation shows that SaBRe imposes little overhead, typically below 3%.
C1 [Arras, Paul-Antoine; Andronidis, Anastasios; Pina, Luis; Mituzas, Karolis; Shu, Qianyi; Grumberg, Daniel; Cadar, Cristian] Imperial Coll London, London, England.
   [Pina, Luis] Univ Illinois, Chicago, IL USA.
C3 Imperial College London; University of Illinois System; University of
   Illinois Chicago; University of Illinois Chicago Hospital
RP Cadar, C (corresponding author), Imperial Coll London, London, England.
EM c.cadar@imperial.ac.uk
FU UK Engineering and Physical Sciences Research Council [EP/L002795/1];
   CDT studentships; European Research Council under the European Union's
   Horizon 2020 research and innovation program [819141]; European Research
   Council (ERC) [819141] Funding Source: European Research Council (ERC);
   EPSRC [EP/L002795/1] Funding Source: UKRI
FX This project has received funding from the UK Engineering and Physical
   Sciences Research Council through an Early Career Fellowship
   (EP/L002795/1) and two CDT studentships, and from the European Research
   Council under the European Union's Horizon 2020 research and innovation
   program (grant agreement 819141).
CR Andriesse D, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P583
   Arm Ltd, COND EX THUMB STAT
   Bansal S, 2006, ACM SIGPLAN NOTICES, V41, P394, DOI 10.1145/1168918.1168906
   Bauman E, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23300
   Bernat Andrew R., 2011, P 10 ACM SIGPLAN SIG, P9, DOI 10.1145/2024569.2024572
   Bruening D, 2012, ACM SIGPLAN NOTICES, V47, P133, DOI 10.1145/2365864.2151043
   Buck B, 2000, INT J HIGH PERFORM C, V14, P317, DOI 10.1177/109434200001400404
   Card S., 1986, Handbook of Perception and Human Performance, V2, P45
   Chaignon, 2019, INTRO STRACE SECCOMP
   Chamith B, 2017, ACM SIGPLAN NOTICES, V52, P320, DOI [10.1145/3062341.3062344, 10.1145/3140587.3062344]
   Computer Science Department at University of Wisconsin-Madison and Computer Science Department at University of Maryland, 2019, DYNINST PROGRAMMERS
   Davi L.V., 2013, Proceedings of the 8th ACM Symposium on Information, Computer and Communications Security, ASIACCS '13, P299
   De Sutter B, 2005, ACM T PROGR LANG SYS, V27, P882, DOI 10.1145/1086642.1086645
   Debray S., 2001, SOFTWARE POWER OPTIM
   Dinesh S, 2020, P IEEE S SECUR PRIV, P1497, DOI 10.1109/SP40000.2020.00009
   Duck GJ, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P151, DOI 10.1145/3385412.3385972
   ElWazeer K, 2013, ACM SIGPLAN NOTICES, V48, P51, DOI 10.1145/2499370.2462165
   Fisher JA, 1997, COMPUTER, V30, P40, DOI 10.1109/2.612246
   Gorgovan C, 2016, ACM T ARCHIT CODE OP, V13, DOI 10.1145/2896451
   Hennessy John L, 2011, Computer Architecture: A Quantitative Approach
   HORSPOOL RN, 1980, COMPUT J, V23, P223, DOI 10.1093/comjnl/23.3.223
   Hosek P, 2015, ACM SIGPLAN NOTICES, V50, P339, DOI [10.1145/2775054.2694390, 10.1145/2694344.2694390]
   Hosek P, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P612, DOI 10.1109/ICSE.2013.6606607
   Hunt G, 1999, PROCEEDINGS OF THE 3RD USENIX WINDOWS NT SYMPOSIUM, P135
   Intel Corporation, Intel 64 and IA-32 Architectures Software Developer's Manuals
   Kim T, 2017, ANN COMPUT SECURITY, P412, DOI 10.1145/3134600.3134627
   Koning Koen, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P431, DOI 10.1109/DSN.2016.46
   Kruegel C, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 13TH USENIX SECURITY SYMPOSIUM, P255
   Laurenzano MA, 2010, INT SYM PERFORM ANAL, P175, DOI 10.1109/ISPASS.2010.5452024
   LeDoux C, 2012, PROCEEDINGS OF THE 50TH ANNUAL ASSOCIATION FOR COMPUTING MACHINERY SOUTHEAST CONFERENCE
   Li Tao, 2005, ACM Transactions on Architecture and Code Optimization (TACO), V2, P109
   Linn C., 2003, P 10 ACM C COMP COMM, P290, DOI DOI 10.1145/948109.948149
   Lu H.J, 2018, SYSTEM APPL BINARY I
   Lu JW, 2003, 36TH INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE, PROCEEDINGS, P180
   Lu Zhao, 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P289
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Majlesi-Kupaei A, 2017, FEAST'17: PROCEEDINGS OF THE 2017 WORKSHOP ON FORMING AN ECOSYSTEM AROUND SOFTWARE TRANSFORMATION, P17, DOI 10.1145/3141235.3141245
   Nanda S, 2006, INT SYM CODE GENER, P358
   Nylander E., 2014, THESIS LUND U
   O'Sullivan P, 2011, IFIP ADV INF COMM TE, V354, P154
   Pina L., 2018, P 2018 ACM INT C COM
   Pina L, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P573, DOI 10.1145/3297858.3304063
   Prasad M, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P211
   Ryu H, 2016, PR INT CONGR SOUND V
   Salamat B, 2009, EUROSYS'09: PROCEEDINGS OF THE FOURTH EUROSYS CONFERENCE, P33
   Schwarz B., 2001, PROC 2001 WORKSHOP B
   Schwarz B., 2013, P 9 WORK C REV ENG W
   Shen BY, 2014, ACM T ARCHIT CODE OP, V11, P87, DOI 10.1145/2629335
   Smith J., 2005, VIRTUAL MACHINES VER
   Smithson M, 2013, WORK CONF REVERSE EN, P52, DOI 10.1109/WCRE.2013.6671280
   Van Put L, 2005, 2005 IEEE INTERNATIONAL SYMPOSIUM ON SIGNAL PROCESSING AND INFORMATION TECHNOLOGY (ISSPIT), VOLS 1 AND 2, P7
   Volckaert S, 2016, PROCEEDINGS OF USENIX ATC '16: 2016 USENIX ANNUAL TECHNICAL CONFERENCE, P167
   WALL DW, 1986, SIGPLAN NOTICES, V21, P264, DOI 10.1145/13310.13338
   Wang RY, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23225
   Wartell R., 2012, Proceedings of the 2012 ACM conference on Computer and communications security, P157
   Wenzl M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3316415
   Williams-King D, 2020, TWENTY-FIFTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXV), P133, DOI 10.1145/3373376.3378470
   Xu M, 2017, 2017 USENIX ANNUAL TECHNICAL CONFERENCE (USENIX ATC '17), P271
   Yee B, 2009, P IEEE S SECUR PRIV, P79, DOI 10.1109/SP.2009.25
NR 59
TC 7
Z9 8
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2022
VL 24
IS 2
BP 205
EP 223
DI 10.1007/s10009-021-00644-w
EA JAN 2022
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0F1UH
UT WOS:000745444900001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Bliudze, S
   Katsaros, P
   Bensalem, S
   Wirsing, M
AF Bliudze, Simon
   Katsaros, Panagiotis
   Bensalem, Saddek
   Wirsing, Martin
TI On methods and tools for rigorous system design
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE System design; High-level modelling; Correct-by-construction;
   Domain-specific abstraction
AB Full a posteriori verification of the correctness of modern software systems is practically infeasible due to the sheer complexity resulting from their intrinsic concurrent nature. An alternative approach consists of ensuring correctness by construction. We discuss the Rigorous System Design (RSD) approach, which relies on a sequence of semantics-preserving transformations to obtain an implementation of the system from a high-level model while preserving all the properties established along the way. In particular, we highlight some of the key requirements for the feasibility of such an approach, namely availability of (1) methods and tools for the design of correct-by-construction high-level models and (2) definition and proof of the validity of suitable domain-specific abstractions. We summarise the results of the extended versions of seven papers selected among those presented at the 1st and the 2nd International Workshops on Methods and Tools for Rigorous System Design (MeTRiD 2018-2019), indicating how they contribute to the advancement of the RSD approach.
C1 [Bliudze, Simon] Univ Lille, CNRS, Cent Lille, Inria,UMR 9198, F-59000 Lille, France.
   [Katsaros, Panagiotis] Aristotle Univ Thessaloniki, Sch Informat, Thessaloniki 54124, Greece.
   [Bensalem, Saddek] Univ Grenoble Alpes, CNRS, Grenoble INP, Verimag, F-38000 Grenoble, France.
   [Wirsing, Martin] Ludwig Maximilians Univ Munchen, Munich, Germany.
C3 Inria; Universite de Lille; Centrale Lille; Centre National de la
   Recherche Scientifique (CNRS); CNRS - National Institute for Biology
   (INSB); Aristotle University of Thessaloniki; Communaute Universite
   Grenoble Alpes; Institut National Polytechnique de Grenoble; Universite
   Grenoble Alpes (UGA); Centre National de la Recherche Scientifique
   (CNRS); University of Munich
RP Wirsing, M (corresponding author), Ludwig Maximilians Univ Munchen, Munich, Germany.
EM simon.bliudze@inria.fr; katsaros@csd.auth.gr;
   Saddek.Bensalem@univ-grenoble-alpes.fr; wirsing@ifi.lmu.de
RI Katsaros, Panagiotis/JBR-8825-2023; Bliudze, Simon/ABD-8558-2021
OI Bliudze, Simon/0000-0002-7900-5271
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Attie P, 2016, FORM ASP COMPUT, V28, P207, DOI 10.1007/s00165-015-0349-8
   Ballouli Rim, 2018, Leveraging Applications of Formal Methods, Verification and Validation Distributed Systems. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11246), P304, DOI 10.1007/978-3-030-03424-5_20
   Bartocci E, 2021, INT J SOFTW TOOLS TE, V23, P783, DOI 10.1007/s10009-020-00599-4
   Bartocci E, 2019, LECT NOTES COMPUT SC, V11724, P69, DOI 10.1007/978-3-030-30446-1_4
   Bass L, 2012, SEI SERIES SOFTWARE
   Basu A, 2006, I C SOFTW ENG FORM M, P3
   Basu A, 2008, FRONT ARTIF INTEL AP, V178, P631, DOI 10.3233/978-1-58603-891-5-631
   Bensalem, 2018, P 1 INT WORKSH METH, V272, DOI [10.4204/EPTCS.272, DOI 10.4204/EPTCS.272]
   Benveniste Albert., 2012, Research Report RR-8147, P65
   Bertrand N, 2021, INT J SOFTW TOOLS TE, V23, P797, DOI 10.1007/s10009-020-00603-x
   Bertrand Nathalie, 2019, LIPICS, V33, P1, DOI [10.4230/LIPIcs.CONCUR.2019.33, DOI 10.4230/LIPICS.CONCUR.2019.33]
   Bliudze S, 2019, SOFTW SYST MODEL, V18, P1613, DOI 10.1007/s10270-017-0642-5
   Bloem R., 2015, DECIDABILITY PARAMET, DOI DOI 10.2200/S00658ED1V01Y201508DCT013
   Blom S, 2021, INT J SOFTW TOOLS TE, V23, P741, DOI 10.1007/s10009-020-00601-z
   Blom S, 2015, LECT NOTES COMPUT SC, V9033, P202, DOI 10.1007/978-3-662-46675-9_14
   Darabi S, 2017, LECT NOTES COMPUT SC, V10227, P247, DOI 10.1007/978-3-319-57288-8_17
   El Ballouli Rim, 2018, Formal Aspects of Component Software. 15th International Conference (FACS 2018). Proceedings: Lecture Notes in Computer Science (LNCS 11222), P118, DOI 10.1007/978-3-030-02146-7_6
   El Ballouli R, 2021, INT J SOFTW TOOLS TE, V23, P701, DOI 10.1007/s10009-020-00596-7
   Emerson E. A., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P85, DOI 10.1145/199448.199468
   Gamma Erich., 1994, DESIGN PATTERNS
   Gouglidis A, 2018, ELECTRON P THEOR COM, P52, DOI 10.4204/EPTCS.272.5
   Grompanopoulos C, 2021, INT J SOFTW TOOLS TE, V23, P685, DOI 10.1007/s10009-020-00600-0
   Han PJ, 2021, INT J SOFTW TOOLS TE, V23, P721, DOI 10.1007/s10009-020-00597-6
   Han PJ, 2018, ELECTRON P THEOR COM, P39, DOI 10.4204/EPTCS.272.4
   Konnov Igor, 2014, CONCUR 2014 - Concurrency Theory. 25th International Conference, CONCUR 2014. Proceedings: LNCS 8704, P125, DOI 10.1007/978-3-662-44584-6_10
   Konnov I, 2017, INFORM COMPUT, V252, P95, DOI 10.1016/j.ic.2016.03.006
   Lekidis A, 2021, INT J SOFTW TOOLS TE, V23, P765, DOI 10.1007/s10009-020-00598-5
   Lekidis A, 2018, ELECTRON P THEOR COM, P24, DOI 10.4204/EPTCS.272.3
   Leroy X., 2016, ERTS 2016 EMBEDDED R
   Marmsoler D, 2018, LECT NOTES COMPUT SC, V10802, P149, DOI 10.1007/978-3-319-89363-1_9
   Mavridou A, 2017, LECT NOTES COMPUT SC, V10231, P260, DOI 10.1007/978-3-319-57666-4_16
   Rosen R, 2015, IFAC PAPERSONLINE, V48, P567, DOI 10.1016/j.ifacol.2015.06.141
   Sifakis J, 2012, FOUND TRENDS ELECTRO, V6, P293, DOI 10.1561/1000000034
   Stachtiari E, 2018, J SYST SOFTWARE, V145, P52, DOI 10.1016/j.jss.2018.07.053
NR 34
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2021
VL 23
IS 5
BP 679
EP 684
DI 10.1007/s10009-021-00632-0
EA JUN 2021
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XD7NM
UT WOS:000665576300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Kopetzki, D
   Lybecait, M
   Naujokat, S
   Steffen, B
AF Kopetzki, Dawid
   Lybecait, Michael
   Naujokat, Stefan
   Steffen, Bernhard
TI Towards language-to-language transformation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Multi-level transformations; Model-to-model transformation; Graph
   rewriting; (Typed) structural operational semantics; Abstraction;
   Structural aggregation; Rule systems; Meta language; Model checking;
   Graph pattern
AB This paper proposes a simplicity-oriented approach and framework for language-to-language transformation of, in particular, graphical languages. Key to simplicity is the decomposition of the transformation specification into sub-rule systems that separately specify purpose-specific aspects. We illustrate this approach by employing a variation of Plotkin's Structural Operational Semantics (SOS) for pattern-based transformations of typed graphs in order to address the aspect 'computation' in a graph rewriting fashion. Key to our approach are two generalizations of Plotkin's structural rules: the use of graph patterns as the matching concept in the rules, and the introduction of node and edge types. Types do not only allow one to easily distinguish between different kinds of dependencies, like control, data, and priority, but may also be used to define a hierarchical layering structure. The resulting Type-based Structural Operational Semantics (TSOS) supports a well-structured and intuitive specification and realization of semantically involved language-to-language transformations adequate for the generation of purpose-specific views or input formats for certain tools, like, e.g., model checkers. A comparison with the general-purpose transformation frameworks ATL and Groove, illustrates along the educational setting of our graphical WebStory language that TSOS provides quite a flexible format for the definition of a family of purpose-specific transformation languages that are easy to use and come with clear guarantees.
C1 [Kopetzki, Dawid; Lybecait, Michael; Naujokat, Stefan; Steffen, Bernhard] TU Dortmund Univ, Dept Comp Sci, Chair Programming Syst, D-44227 Dortmund, Germany.
C3 Dortmund University of Technology
RP Naujokat, S (corresponding author), TU Dortmund Univ, Dept Comp Sci, Chair Programming Syst, D-44227 Dortmund, Germany.
EM stefan.naujokat@tu-dortmund.de; dawid.kopetzki@tu-dortmund.de
OI Naujokat, Stefan/0000-0002-6265-6641
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR [Anonymous], 1999, HDB GRAPH GRAMMARS C, DOI DOI 10.1142/9789812815149_0014
   [Anonymous], 2009, HDB RES BUSINESS PRO
   [Anonymous], 2018, CINCO SCCE META TOOL
   [Anonymous], 2015, THE EPSILON BOOK
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Bakera M, 2009, INNOV SYST SOFTW ENG, V5, P211, DOI 10.1007/s11334-009-0091-6
   Balasubramanian D., 2007, Electronic Communications of the EASST, V1
   Bergmayr Alexander, 2014, P 29 ACM IEEE INT C, P647, DOI DOI 10.1145/2642937.2642946
   Brand C., 2011, Eclipse Magazine
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   Clarke EM, 1999, MODEL CHECKING, P1
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Dachis A., 2014, DSC00318 GOLD COINS
   Dmitriev, 2004, ONBOARD ELECT MAGAZI, V1, P1
   Ehrig H, 2005, LECT NOTES COMPUT SC, V3442, P49, DOI 10.1007/978-3-540-31984-9_5
   Ehrig H, 2015, MONOGR THEOR COMPUT, P1, DOI 10.1007/978-3-662-47980-3
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Eysholdt M., 2010, P ACM INT C COMPANIO, P307, DOI DOI 10.1145/1869542.1869625
   Felleisen M, 2018, COMMUN ACM, V61, P62, DOI 10.1145/3127323
   Fowler M, 2005, Language workbenches: The killer-app for domain specific languages?
   Futamura Y., 1999, Higher-Order and Symbolic Computation, V12, P381, DOI 10.1023/A:1010095604496
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Knowles C., 2010, SALMON CABIN SAWTOOT
   Kühne T, 2010, LECT NOTES COMPUT SC, V6002, P240
   Kuperus J., 2009, ECEASST, V18, P4, DOI [10.14279/tuj.eceasst.18.260, DOI 10.14279/TUJ.ECEASST.18.260]
   Lybecait, 2019, THESIS TU DORTMUND U, DOI [10.17877/DE290R-20418, DOI 10.17877/DE290R-20418]
   Lybecait Michael, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Modeling. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11244), P381, DOI 10.1007/978-3-030-03418-4_23
   Lybecait Michael, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Modeling. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11244), P519, DOI 10.1007/978-3-030-03418-4_31
   Margaria Tiziana, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Modeling. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11244), P261, DOI 10.1007/978-3-030-03418-4_16
   Margaria T, 2010, COMPUTER, V43, P90, DOI 10.1109/MC.2010.177
   McAffer Jeff., 2010, Eclipse rich client platform
   Müller-Olm M, 1999, LECT NOTES COMPUT SC, V1694, P330
   Naujokat, 2017, THESIS TU DORTMUND U, DOI [10.17877/DE290R-18076, DOI 10.17877/DE290R-18076]
   Naujokat S, 2018, INT J SOFTW TOOLS TE, V20, P327, DOI 10.1007/s10009-017-0453-6
   Plotkin G.D., 1981, FN19 DAIMI U AARH
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   Rot, 2020, P COMB 27 INT WORKSH
   Sanchez Cuadrado Jesus, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P176, DOI 10.1007/978-3-642-30476-7_12
   Schurr A., 2010, P LECT NOTES COMPUTE, DOI [10.1007/978-3-642-15928-2, DOI 10.1007/978-3-642-15928-2]
   Sierralupe D.G., 2016, MIDDLE FORK BIKE PAT
   Steffen B., 1996, Static Analysis. Third International Symposium, SAS'96 Proceedings, P22
   Steffen B., 2019, LNCS, DOI [10.1007/978-3-319-91908-9_17, DOI 10.1007/978-3-319-91908-9_17]
   Steffen B., 2016, T FOUND MASTERING CH, V1, P22
   Steffen B., 2021, COEVOLUTION LA UNPUB
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   WARD MP, 1994, SOFTWARE-CONC TOOL, V15, P147
   Watson I., 2010, DAY 161 KEYS
   Wing JM, 2006, COMMUN ACM, V49, P33, DOI 10.1145/1118178.1118215
   Zweihoff P., 2015, THESIS TU DORTMUND
   Zweihoff P, 2019, LECT NOTES COMPUT SC, V11424, P101, DOI 10.1007/978-3-030-16722-6_6
NR 52
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2021
VL 23
IS 5
BP 655
EP 677
DI 10.1007/s10009-021-00630-2
EA JUN 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XD7NM
UT WOS:000663230700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Al Ali, R
   Bures, T
   Hnetynka, P
   Matejek, J
   Plasil, F
   Vinarek, J
AF Al Ali, Rima
   Bures, Tomas
   Hnetynka, Petr
   Matejek, Jan
   Plasil, Frantisek
   Vinarek, Jiri
TI Toward autonomically composable and context-dependent access control
   specification through ensembles
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Smart systems; Access control; Autonomic components; Component
   coalitions; Component ensembles; Architecture description language
ID MIDDLEWARE; INTERNET
AB Dynamicity and context dependence are some of the key properties of autonomic component systems that include a large spectrum of today's modern smart systems. In these systems, components dynamically re-group themselves, interact and collaborate in an ad hoc fashion to collectively cope with situations in their environment. Though security and access control become the key concerns of these systems, the high degree of dynamicity and the potential open-endedness is incompatible with the traditional approaches to access control, which typically rely on static hierarchies of roles and a static assignment of roles. To address this problem, we formulate access control rules which allow for dynamic ad hoc collaboration at runtime and which follow the dynamicity and context dependence of the autonomic components. Based on our previous work with autonomic component ensembles, we show how the concepts of ensembles can be extended and exploited to define the access control rule to govern interactions in a system of autonomic components.
C1 [Al Ali, Rima; Bures, Tomas; Hnetynka, Petr; Matejek, Jan; Plasil, Frantisek; Vinarek, Jiri] Charles Univ Prague, Fac Math & Phys, Malostranske Namesti 25, Prague 1, Czech Republic.
RP Bures, T (corresponding author), Charles Univ Prague, Fac Math & Phys, Malostranske Namesti 25, Prague 1, Czech Republic.
EM alali@d3s.mff.cuni.cz; bures@d3s.mff.cuni.cz; hnetynka@d3s.mff.cuni.cz;
   matejek@d3s.mff.cuni.cz; Plasil@d3s.mff.cuni.cz; vinarek@d3s.mff.cuni.cz
RI Hnětynka, Petr/J-1892-2017; Bures, Tomas/G-1821-2014
OI Hnětynka, Petr/0000-0002-1008-6886; Bures, Tomas/0000-0003-3622-9918
CR Abd Alrahman Y, 2016, LECT NOTES COMPUT SC, V9952, P539, DOI 10.1007/978-3-319-47166-2_38
   Al Ali R., 2018, LNCS
   Alturi V., 2011, Encyclopedia of Cryptography and Security, VSecond, P1053, DOI [10.1007/978-1-4419-5906-5_829, DOI 10.1007/978-1-4419-5906-5_829]
   Argento L, 2018, DATA APPL SECURITY P
   Bailey C, 2014, J COMPUT SYST SCI, V80, P935, DOI 10.1016/j.jcss.2014.02.003
   Bure T., 2019, D3STR201901 CHARL U
   Bures T., 2017, D3STR201701 CHARL U
   Bures T, 2016, COMPUTER, V49, P50, DOI 10.1109/MC.2016.377
   Chaisiri S, 2016, IEEE TRUST BIG, P535, DOI 10.1109/TrustCom.2016.0107
   De Nicola R, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2619998
   El Khaddar MA, 2015, INT J PERVASIVE COMP, V11, P43, DOI 10.1108/IJPCC-07-2014-0039
   Hennicker Rolf, 2014, Specification, Algebra, and Software. Essays Dedicated to Kokichi Futatsugi: LNCS 8373, P359, DOI 10.1007/978-3-642-54624-2_18
   Hu VC, 2015, COMPUTER, V48, P85, DOI 10.1109/MC.2015.33
   Laborde R., 2017, CYB SEC NETW C CSNET, P1, DOI 10.1109/CSNET.2017.8241987
   Laborde R., 2005, LNCS, P217, DOI [10.1007/11679219_16, DOI 10.1007/11679219_16]
   Lawall A, 2014, LECT NOTES BUS INF P, V191, P77, DOI 10.1007/978-3-662-44860-1_5
   Li X, 2015, SENSORS-BASEL, V15, P20570, DOI 10.3390/s150820570
   Machara S, 2013, 2013 IEEE 10TH INTERNATIONAL CONFERENCE ON AND 10TH INTERNATIONAL CONFERENCE ON AUTONOMIC AND TRUSTED COMPUTING (UIC/ATC) UBIQUITOUS INTELLIGENCE AND COMPUTING, P557, DOI 10.1109/UIC-ATC.2013.73
   Marie P., 2014, CONTEXT COMPUTING CR, P155
   Nasser B, 2005, LECT NOTES COMPUT SC, V3762, P537
   OASIS, 2013, TOPOLOGY ORCHESTRATI, P11
   Park SH, 2006, LECT NOTES COMPUT SC, V4208, P572
   Pelaez A, 2016, IEEE ACM INT SYMP, P501, DOI 10.1109/CCGrid.2016.64
   Saleemi MM, 2011, LECT NOTES COMPUT SC, V6869, P14, DOI 10.1007/978-3-642-22875-9_2
   Sfar AR, 2018, DIGIT COMMUN NETW, V4, P118, DOI 10.1016/j.dcan.2017.04.003
   Thanigaivelan Nanda Kumar, 2017, Computer Network Security. 7th International Conference on Mathematical Methods, Models, and Architectures for Computer Network Security, MMM-ACNS 2017. Proceedings: LNCS 10446, P171, DOI 10.1007/978-3-319-65127-9_14
   Verma Dinesh C., 2017, 2017 IEEE SMARTWORLD, P1, DOI [10.1109/UIC-ATC.2017.8397410, DOI 10.1109/UIC-ATC.2017.8397410]
   Wu ZP, 2006, P INT COMP SOFTW APP, P215
   Yang Y, 2019, INFORM SCIENCES, V479, P567, DOI 10.1016/j.ins.2018.02.005
NR 29
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2020
VL 22
IS 4
SI SI
BP 511
EP 522
DI 10.1007/s10009-020-00556-1
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MH4SO
UT WOS:000546721100009
DA 2024-07-18
ER

PT J
AU DeFrancisco, R
   Cho, SS
   Ferdman, M
   Smolka, SA
AF DeFrancisco, Richard
   Cho, Shenghsun
   Ferdman, Michael
   Smolka, Scott A.
TI Swarm model checking on the GPU
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE GPU; Model checking; Swarm verification; Grapple
ID ALGORITHMS
AB We present Grapple, a new and powerful framework for explicit-state model checking on GPUs. Grapple is based on swarm verification (SV), a model-checking technique wherein a collection or swarm of small, memory- and time-bounded verification tests (VTs) are run in parallel to perform state-space exploration. SV achieves high state-space coverage via diversification of the search strategies used by constituent VTs. Grapple represents a swarm implementation for the GPU. In particular, it runs a parallel swarm of internally parallel VTs, which are implemented in a manner that specifically targets the GPU architecture and the SIMD parallelism its computing cores offer. Grapple also makes effective use of the GPU shared memory, eliminating costly inter-block communication overhead. We conducted a comprehensive performance analysis of Grapple focused on various design parameters, including the size of the visited-state queue structure, implementation of guard statements, and nondeterministic exploration order. Tests are run with multiple hardware configurations, including on the Amazon cloud. Our results show that Grapple performs favorably compared to the SPIN swarm and a prior non-swarm GPU implementation. Although a recently debuted FPGA swarm is faster, the deployment process to the FPGA is much more complex than Grapple 's.
C1 [DeFrancisco, Richard; Cho, Shenghsun; Ferdman, Michael; Smolka, Scott A.] SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook
RP DeFrancisco, R (corresponding author), SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
EM rdefrancisco@cs.stonybrook.edu
RI Cho, Shenghsun/ABA-7421-2021; Ferdman, Mike/IZD-5758-2023
OI DeFrancisco, Richard/0009-0009-1522-4967
CR Alcantara D. A. F., 2011, EFFICIENT HASH TABLE
   [Anonymous], HASH FUNCTION HASH T
   Barnat J, 2007, LECT NOTES COMPUT SC, V4595, P187
   BARNAT J, 2001, LNCS, V2057, P200
   Barnat J, 2012, J PARALLEL DISTR COM, V72, P1083, DOI 10.1016/j.jpdc.2011.10.015
   Bartocci E., 2014, P 2014 INT SPIN S MO, P87
   BEEM, BENCHMARKS EXPL MOD
   Cassee N., 2017, P 3 WORKSH GRAPHS MO
   Cassee N, 2017, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.263.1
   Ceska M, 2016, LECT NOTES COMPUT SC, V9636, P367, DOI 10.1007/978-3-662-49674-9_21
   Chantem T, 2011, IEEE INT CONF EMBED, P267, DOI 10.1109/RTCSA.2011.63
   Cho S., 2018, 28 INT C FIELD PROGR
   DeFrancisco R, 2019, LECT NOTES COMPUT SC, V11636, P94, DOI 10.1007/978-3-030-30923-7_6
   Edelkamp S, 2010, LECT NOTES COMPUT SC, V6349, P106
   Evangelista Sami, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P269, DOI 10.1007/978-3-642-33386-6_22
   Filippidis I., 2014, Proceedings of the 2014 International SPIN Symposium on Model Checking of Software, P48
   Fuess ME, 2008, ANN IEEE SYM FIELD P, P119, DOI 10.1109/FCCM.2008.36
   Harish P, 2007, LECT NOTES COMPUT SC, V4873, P197
   Holzmann Gerard J., 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P155, DOI 10.1007/978-3-642-31759-0_12
   Holzmann Gerard J., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P1, DOI 10.1109/ASE.2008.9
   Holzmann G.J, 2016, P 2016 INT C VER MOD
   Holzmann GJ, 2007, IEEE T SOFTWARE ENG, V33, P659, DOI 10.1109/TSE.2007.70724
   Holzmann GJ, 2011, IEEE T SOFTWARE ENG, V37, P845, DOI 10.1109/TSE.2010.110
   Kant Gijs, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P692, DOI 10.1007/978-3-662-46681-0_61
   Laarman A, 2011, LECT NOTES COMPUT SC, V6617, P506, DOI 10.1007/978-3-642-20398-5_40
   Luo LJ, 2010, DES AUT CON, P52
   Neele T, 2016, LECT NOTES COMPUT SC, V9938, P357, DOI 10.1007/978-3-319-46520-3_23
   Tie M. E., 2012, THESIS
   Verstoep K, 2009, INT PARALL DISTRIB P, P201
   Wijs Anton, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P368, DOI 10.1007/978-3-662-46681-0_29
   Wijs A., P TACAS 2014 20 INT
   Wijs A, 2016, LECT NOTES COMPUT SC, V9995, P694, DOI 10.1007/978-3-319-48989-6_42
   Wijs A, 2016, LECT NOTES COMPUT SC, V9780, P472, DOI 10.1007/978-3-319-41540-6_26
   Wu ZM, 2015, IEEE INT C ENG COMP, P100, DOI 10.1109/ICECCS.2015.21
   Xiao Shucai., 2010, Proc. of the IEEE Parallel and Distributed Processing Symposium, P1, DOI [DOI 10.1109/IPDPS.2010.5470477, 10.1109/IPDPS.2010.5470477]
   Yangdong Deng, 2009, Proceedings of the 2009 IEEE/ACM International Conference on Computer-Aided Design (ICCAD 2009), P539, DOI 10.1145/1687399.1687501
NR 36
TC 8
Z9 8
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2020
VL 22
IS 5
SI SI
BP 583
EP 599
DI 10.1007/s10009-020-00576-x
EA JUN 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9OM
UT WOS:000540670700001
DA 2024-07-18
ER

PT J
AU Ciancia, V
   Gilmore, S
   Grilletti, G
   Latella, D
   Loreti, M
   Massink, M
AF Ciancia, Vincenzo
   Gilmore, Stephen
   Grilletti, Gianluca
   Latella, Diego
   Loreti, Michele
   Massink, Mieke
TI Spatio-temporal model checking of vehicular movement in public transport
   systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Spatio-temporal model checking; Collective adaptive systems; Smart
   transportation
ID LOGIC
AB We present the use of a novel spatio-temporal model checker to detect problems in the data and operation of a collective adaptive system. Data correctness is important to ensure operational correctness in systems which adapt in response to data. We illustrate the theory with several concrete examples, addressing both the detection of errors in vehicle location data for buses in the city of Edinburgh and the undesirable phenomenon of "clumping" which occurs when there is not enough separation between subsequent buses serving the same route. Vehicle location data are visualised symbolically on a street map, and categories of problems identified by the spatial part of the model checker are rendered by highlighting the symbols for vehicles or other objects that satisfy a property of interest. Behavioural correctness makes use of both the spatial and temporal aspects of the model checker to determine from a series of observations of vehicle locations whether the system is failing to meet the expected quality of service demanded by system regulators.
C1 [Ciancia, Vincenzo; Latella, Diego; Massink, Mieke] CNR, Ist Sci & Tecnol Informaz A Faedo, Pisa, Italy.
   [Loreti, Michele] Univ Camerino, Scuola Sci & Tecnol, Camerino, Italy.
   [Grilletti, Gianluca] Univ Amsterdam, Inst Log Language & Computat, Amsterdam, Netherlands.
   [Gilmore, Stephen] Univ Edinburgh, Lab Fdn Comp Sci, Edinburgh, Midlothian, Scotland.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); University
   of Camerino; University of Amsterdam; University of Edinburgh
RP Ciancia, V (corresponding author), CNR, Ist Sci & Tecnol Informaz A Faedo, Pisa, Italy.
EM vincenzom1@gmail.com; stephen.gilmore@ed.ac.uk;
   grilletti.gianluca@gmail.com; diego.latella@isti.cnr.it;
   michele.loreti@unicam.it; mieke.massink@isti.cnr.it
RI Ciancia, Vincenzo/AAX-7263-2020; Latella, Diego/AAD-5792-2022;
   Grilletti, Gianluca/AAA-4774-2019; Loreti, Michele/J-4350-2012; Massink,
   Mieke/E-1287-2012
OI Ciancia, Vincenzo/0000-0003-1314-0574; Latella,
   Diego/0000-0002-3257-9059; Grilletti, Gianluca/0000-0002-1631-3648;
   Loreti, Michele/0000-0003-3061-863X; Massink, Mieke/0000-0001-5089-002X
FU EU project QUANTICOL: A Quantitative Approach to Management and Design
   of Collective and Adaptive Behaviours [600708]
FX This work is partially supported by the EU project QUANTICOL: A
   Quantitative Approach to Management and Design of Collective and
   Adaptive Behaviours, 600708.
CR [Anonymous], 2002, THESIS
   [Anonymous], 2006, AAAI
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bartholdi JJ, 2012, INT CONF SELF SELF, P66, DOI 10.1109/SASOW.2012.20
   Bartholdi JJ, 2012, TRANSPORT RES B-METH, V46, P481, DOI 10.1016/j.trb.2011.11.001
   Bartocci E., 2016, IEEE T CONTROL NETW, P1
   Belmonte G, 2016, ELECTRON P THEOR COM, P81, DOI 10.4204/EPTCS.217.10
   BENARI M, 1983, ACTA INFORM, V20, P207, DOI 10.1007/BF01257083
   Bortolussi L., 2014, VALUETOOLS
   Buccafurri F, 2001, J COMPUT SYST SCI, V62, P463, DOI 10.1006/jcss.2000.1734
   Caires L, 2004, LECT NOTES COMPUT SC, V2987, P72
   Cardelli L., 2000, Conference Record of POPL'00: 27th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages. Papers Presented at the Symposium, P365, DOI 10.1145/325694.325742
   Cardelli L, 2012, THEOR COMPUT SCI, V431, P40, DOI 10.1016/j.tcs.2011.12.051
   Ciancia Vincenzo, 2014, Theoretical Computer Science. 8th IFIP TC 1/WG 2.2 International Conference, TCS 2014. Proceedings: LNCS 8705, P222, DOI 10.1007/978-3-662-44602-7_18
   Ciancia V, 2016, LOG METH COMPUT SCI, V12, DOI 10.2168/LMCS-12(4:2)2016
   Ciancia V, 2016, LECT NOTES COMPUT SC, V9952, P657, DOI 10.1007/978-3-319-47166-2_46
   Ciancia V, 2015, LECT NOTES COMPUT SC, V9509, P297, DOI 10.1007/978-3-662-49224-6_24
   Clarke E, 2003, LECT NOTES COMPUT SC, V2772, P208
   Clarke E. M., 1986, LECT NOTES COMPUTER, V131, P53
   Daganzo CF, 2011, TRANSPORT RES B-METH, V45, P267, DOI 10.1016/j.trb.2010.06.005
   Daganzo CF, 2009, TRANSPORT RES B-METH, V43, P913, DOI 10.1016/j.trb.2009.04.002
   De Angelis FL, 2015, INT CONF SELF SELF, P174, DOI 10.1109/SASO.2015.32
   De Nicola R, 2007, THEOR COMPUT SCI, V382, P42, DOI 10.1016/j.tcs.2007.05.008
   DELBIMBO A, 1995, IEEE T KNOWL DATA EN, V7, P609, DOI 10.1109/69.404033
   Dobson S, 2016, KNOWL ENG REV, V31, P343, DOI 10.1017/S0269888916000199
   Emerson E. A., 1990, Handbook of Theoretical Computer Science, VB, P995, DOI [10.1016/b978-0-444-88074-1.50021-4, DOI 10.1016/B978-0-444-88074-1.50021-4]
   Fathi A, 2010, LECT NOTES COMPUT SC, V6292, P56, DOI 10.1007/978-3-642-15300-6_5
   Gol EA, 2014, IEEE DECIS CONTR P, P108, DOI 10.1109/CDC.2014.7039367
   Grilletti G., 2016, THESIS
   Grosu R, 2009, COMMUN ACM, V52, P97, DOI 10.1145/1467247.1467271
   John M, 2008, ELECTRON NOTES THEOR, V194, P133, DOI 10.1016/j.entcs.2007.12.010
   Kontchakov R, 2007, HANDBOOK OF SPATIAL LOGICS, P497, DOI 10.1007/978-1-4020-5587-4_9
   Nenzi L, 2015, LECT NOTES COMPUT SC, V9333, P21, DOI 10.1007/978-3-319-23820-3_2
   Newell G., 1964, P 2 AUSTR ROAD RES B, V2, P388
   Ordoñez C, 2011, J SURV ENG-ASCE, V137, P150, DOI 10.1061/(ASCE)SU.1943-5428.0000056
   Reijsbergen Daniel, 2014, Computer Performance Engineering. 11th European Workshop, EPEW 2014. Proceedings: LNCS 8721, P164, DOI 10.1007/978-3-319-10885-8_12
   Ruan Minyan, 2009, TRANSPORT CHICAGO AN, V14
   Strathman JG, 2003, PR126 PORTL STAT U C
   Tsigkanos C, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P38, DOI 10.1145/3106237.3106299
   Tsigkanos C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P729, DOI 10.1109/ICSE.2015.234
   van Benthem J, 2007, HANDBOOK OF SPATIAL LOGICS, P217, DOI 10.1007/978-1-4020-5587-4_5
   Xuan YG, 2011, TRANSPORT RES B-METH, V45, P1831, DOI 10.1016/j.trb.2011.07.009
   Yan ZX, 2010, 3RD ACM SIGSPATIAL INTERNATIONAL WORKSHOP ON COMPUTATIONAL TRANSPORTATION SCIENCE 2010 (CTS'10), P11
   Zhao J, 2006, TRANSPORT SCI, V40, P529, DOI 10.1287/trsc.1060.0170
NR 44
TC 30
Z9 32
U1 0
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2018
VL 20
IS 3
SI SI
BP 289
EP 311
DI 10.1007/s10009-018-0483-8
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GF1BQ
UT WOS:000431667100004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Parizi, RM
   Ghani, AAA
   Lee, SP
   Khan, SUR
AF Parizi, Reza Meimandi
   Ghani, Abdul Azim Abdul
   Lee, Sai Peck
   Khan, Saif Ur Rehman
TI <i>RAMBUTANS</i>: automatic AOP-specific test generation tool
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software testing; Automated test generation; Testing tool;
   Aspect-oriented programming; Object-oriented programming; AspectJ
ID SOFTWARE; ASPECTJ; JAVA
AB Aspect-oriented programming (AOP) is a programmatic methodology to handle better modularized code by separating crosscutting concerns from the traditional abstraction boundaries. Automated testing, as one of the most demanding needs of the software development to reduce both human effort and costs, is a delicate issue in testing aspect-oriented programs. Prior studies in the automated test generation for aspect-oriented programs have been very limited with respect to the need for both adequate tool support and capability concerning effectiveness and efficiency. This paper describes a new AOP-specific tool for testing aspect-oriented programs, called RAMBUTANS. The RAMBUTANS tool uses a directed random testing technique that is especially well suited for generating tests for aspectual features in AspectJ. The directed random aspect of the tool is parameterized by associating weights to aspects, advice, methods, and classes by controlling object and joint point creations during the test generation process. We present a comprehensive empirical evaluation of our tool against the current AOP test generation approaches on three industrial aspect-oriented projects. The results of the experimental and statistical tests showed that RAMBUTANS tool produces test suites that have higher fault-detection capability and efficiency for AspectJ-like programs.
C1 [Parizi, Reza Meimandi] NYIT, Sch Engn & Comp Sci, Nanjing Campus, Nanjing, Jiangsu, Peoples R China.
   [Ghani, Abdul Azim Abdul] Univ Putra Malaysia, Serdang, Malaysia.
   [Lee, Sai Peck; Khan, Saif Ur Rehman] Univ Malaya, Kuala Lumpur, Malaysia.
C3 Universiti Putra Malaysia; Universiti Malaya
RP Parizi, RM (corresponding author), NYIT, Sch Engn & Comp Sci, Nanjing Campus, Nanjing, Jiangsu, Peoples R China.
EM rparizi@nyit.edu; azim@upm.edu.my; saipeck@um.edu.my;
   saif_rehman@siswa.um.edu.my
RI Khan, Saif/IQU-2754-2023; khan, Saif Ur Rehman/F-5841-2011; Parizi,
   Reza/AAF-3813-2019; Khan, Saif Ur Rehman/HKO-1404-2023; Khan, Saif Ur
   Rehman/A-6299-2013; Lee, Sai Peck/B-8841-2010
OI Khan, Saif Ur Rehman/0000-0002-9643-6858; Khan, Saif Ur
   Rehman/0000-0002-9643-6858; Lee, Sai Peck/0000-0002-4551-430X
FU New York Institute of Technology (NYIT); Fundamental Research Grant
   Scheme [FRGS/2/2010 /SG/UPM/01/2]; Ministry of Education, Malaysia
   [UM.C/625/1/HIR/MOHE/FCSIT/13]; Bright Sparks Program at University of
   Malaya, Malaysia [BSP-151(3)-11]
FX R. Meimandi Parizi would like to thank the New York Institute of
   Technology (NYIT) for providing financial support. A. A. A. Ghani's work
   was supported in part by Fundamental Research Grant Scheme with
   reference FRGS/2/2010 /SG/UPM/01/2. S. P. Lee's work was carried out
   within the research project supported by High Impact Research Grant with
   reference UM.C/625/1/HIR/MOHE/FCSIT/13, funded by the Ministry of
   Education, Malaysia. S.U.R. Khan would like to acknowledge the financial
   support of the Bright Sparks Program at University of Malaya, Malaysia
   under reference BSP-151(3)-11.
CR Alexander R. T., CS41052003 COL STAT
   Amar B, 2010, IEEE INT ENTERP DIST, P143, DOI 10.1109/EDOC.2010.12
   Andrews JH, 2011, IEEE T SOFTWARE ENG, V37, P80, DOI 10.1109/TSE.2010.46
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Cleland-Huang J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P39
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Delamare R, 2009, IEEE ICST WORKSHOP, P200, DOI 10.1109/ICSTW.2009.41
   Driver C, 2010, ACM T EMBED COMPUT S, V10, DOI 10.1145/1880050.1880057
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Ferrari F., 2010, P 32 ACMIEEE INT C S, V1, P65
   Ferrari F. C., 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P50, DOI 10.1109/SBES.2010.11
   Ferrari Fabiano Cutigi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P52, DOI 10.1109/ICST.2008.37
   Ferrari FC, 2013, SCI COMPUT PROGRAM, V78, P1639, DOI 10.1016/j.scico.2013.02.011
   Filman RobertE., 2005, ASPECT ORIENTED SOFT, P21
   Garcia A., 2006, ACM SIGSOFT SOFTW EN, V31, P1
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Harman M, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P185
   Hoffman K, 2009, SCI COMPUT PROGRAM, V74, P333, DOI 10.1016/j.scico.2009.01.003
   Kallel S, 2007, LECT NOTES COMPUT SC, V4467, P211
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   KICZALES G, 2002, Patent No. 6467086
   Lemos OAL, 2009, SCI COMPUT PROGRAM, V74, P861, DOI 10.1016/j.scico.2009.05.001
   Lee JS, 2004, INFORM SOFTWARE TECH, V46, P81, DOI 10.1016/S0950-5849(03)00111-3
   Linehan E, 2012, J SYST ARCHITECT, V58, P195, DOI 10.1016/j.sysarc.2011.02.001
   Lopez-Martinez C., 2005, Part I - Tutorial on Radar Polarimetry, P1
   Mets J., 2013, SOFTW QUAL J, V22, P185
   Nakagawa E. Y., 2007, P 19 INT C SOFTW ENG
   Nakagawa EY, 2011, J SYST SOFTWARE, V84, P1670, DOI 10.1016/j.jss.2011.04.052
   Novikov EM, 2013, PROGRAM COMPUT SOFT+, V39, P194, DOI 10.1134/S0361768813040051
   Offutt J, 2011, INFORM SOFTWARE TECH, V53, P1098, DOI 10.1016/j.infsof.2011.03.007
   Oriat C, 2005, LECT NOTES COMPUT SC, V3712, P242
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Parizi R.M, 2010, P ANN INT C SOFTW EN, P11
   Parizi RM, 2015, INFORM SOFTWARE TECH, V57, P463, DOI 10.1016/j.infsof.2014.05.020
   Parizi RM, 2011, INFORM SOFTWARE TECH, V53, P1062, DOI 10.1016/j.infsof.2011.05.004
   Rashid A, 2010, COMPUTER, V43, P19, DOI 10.1109/MC.2010.30
   Soares S, 2006, SOFTWARE PRACT EXPER, V36, P711, DOI 10.1002/spe.715
   TSOUKALAS MZ, 1993, IEEE T SOFTWARE ENG, V19, P687, DOI 10.1109/32.238569
   Voelter M, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P233, DOI 10.1109/SPLINE.2007.23
   Wappler S., 2008, THESIS
   Xie T, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P196
   Xie T., 2005, P 1 WORKSH TEST ASP, P1
   Xie T., 2006, AOSD '06, P190
   Xie T, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P179
   Yamamoto Y, 2005, P AS PAC MICR C P DE, P1
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   [No title captured]
NR 49
TC 2
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2017
VL 19
IS 6
BP 743
EP 761
DI 10.1007/s10009-016-0432-3
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ4TL
UT WOS:000412735100006
DA 2024-07-18
ER

PT J
AU Renault, E
   Duret-Lutz, A
   Kordon, F
   Poitrenaud, D
AF Renault, E.
   Duret-Lutz, A.
   Kordon, F.
   Poitrenaud, D.
TI Variations on parallel explicit emptiness checks for generalized Buchi
   automata
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Emptiness checks; Generalized Buchi; Strongly connected component
ID LTL MODEL-CHECKING; TEMPORAL PROPERTIES; CYCLE DETECTION; VERIFICATION;
   ALGORITHMS
AB We present new parallel explicit emptiness checks for LTL model checking. Unlike existing parallel emptiness checks, these are based on a strongly connected component (SCC) enumeration and support generalized Buchi acceptance, and require no synchronization points or recomputing procedures. A salient feature of our algorithms is the use of a global union-find data structure in which multiple threads share structural information about the automaton checked. Besides these basic algorithms, we present one architectural variant isolating threads that write to the union-find, and one extension that decomposes the automaton based on the strength of its SCCs to use more optimized emptiness checks. The results from an extensive experimentation of our algorithms and their variations show encouraging performances, especially when the decomposition technique is used.
C1 [Renault, E.; Duret-Lutz, A.] EPITA, LRDE, Le Kremlin Bicetre, France.
   [Kordon, F.] UPMC Univ Paris 06, Sorbonne Univ, F-75005 Paris, France.
   [Kordon, F.; Poitrenaud, D.] CNRS, UMR 7606, LIP6, F-75005 Paris, France.
   [Poitrenaud, D.] Univ Paris 05, Paris, France.
C3 Sorbonne Universite; Centre National de la Recherche Scientifique
   (CNRS); Sorbonne Universite; Universite Paris Cite
RP Renault, E (corresponding author), EPITA, LRDE, Le Kremlin Bicetre, France.
EM renault@lrde.epita.fr
RI ; Duret-Lutz, Alexandre/I-6764-2017
OI RENAULT, Etienne/0000-0001-9013-4413; Duret-Lutz,
   Alexandre/0000-0002-6623-2512
CR Anderson R. J., 1994, P 23 ACM S THEOR COM, P370
   [Anonymous], LNCS
   [Anonymous], LECT NOTES COMPUTER
   Barnat J, 2005, ELECTRON NOTES THEOR, V133, P21, DOI 10.1016/j.entcs.2004.08.056
   Barnat J., 2010, International Journal on Software Tools for Technology Transfer, V12, P139, DOI 10.1007/s10009-010-0136-z
   Barnat J, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P106, DOI 10.1109/ASE.2003.1240299
   Barnat J, 2009, LECT NOTES COMPUT SC, V5885, P407, DOI 10.1007/978-3-642-10373-5_21
   Barnat J, 2008, LECT NOTES COMPUT SC, V5311, P234, DOI 10.1007/978-3-540-88387-6_20
   Benedikt M, 2013, LECT NOTES COMPUT SC, V7795, P32, DOI 10.1007/978-3-642-36742-7_3
   Berger ED, 2000, ACM SIGPLAN NOTICES, V35, P117, DOI 10.1145/384264.379232
   Berman I., 2010, THESIS
   Bloemen V., 2016, PPOPP 16
   Bloemen Vincent, 2015, THESIS
   Brim L, 2004, LECT NOTES COMPUT SC, V3312, P352
   Cerná I, 2003, LECT NOTES COMPUT SC, V2747, P318
   Cerná I, 2003, LECT NOTES COMPUT SC, V2648, P49
   COURCOUBETIS C, 1991, LECT NOTES COMPUT SC, V531, P233, DOI 10.1007/BFb0023737
   DIJKSTRA EW, 1973, 376 EWD
   Duret-Lutz A, 2004, IEEE COMPUTER SOCIETY'S 12TH ANNUAL INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS - PROCEEDINGS, P76, DOI 10.1109/MASCOT.2004.1348184
   Evangelista Sami, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P269, DOI 10.1007/978-3-642-33386-6_22
   Evangelista S, 2011, LECT NOTES COMPUT SC, V6996, P381, DOI 10.1007/978-3-642-24372-1_27
   Gaiser A., 2009, OASICS, V13
   Holzmann GJ, 2011, IEEE T SOFTWARE ENG, V37, P845, DOI 10.1109/TSE.2010.110
   Kant Gijs, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P692, DOI 10.1007/978-3-662-46681-0_61
   Kesten Y, 1998, LECT NOTES COMPUT SC, V1443, P1, DOI 10.1007/BFb0055036
   Laarman A, 2011, ELECTRON PROC THEOR, P13, DOI 10.4204/EPTCS.72.2
   Laarman A, 2011, LECT NOTES COMPUT SC, V6996, P321, DOI 10.1007/978-3-642-24372-1_23
   Lowe G., 2015, CONCURRENT DEPTH 1 S, P1
   Michael M. M., 1996, Proceedings of the Fifteenth Annual ACM Symposium on Principles of Distributed Computing, P267, DOI 10.1145/248052.248106
   NUUTILA E, 1994, INFORM PROCESS LETT, V49, P9, DOI 10.1016/0020-0190(94)90047-7
   Patwary MMA, 2010, LECT NOTES COMPUT SC, V6049, P411, DOI 10.1007/978-3-642-13193-6_35
   Pelanek Radek, 2008, International Journal on Software Tools for Technology Transfer, V10, P443, DOI 10.1007/s10009-008-0070-5
   Pelánek R, 2007, LECT NOTES COMPUT SC, V4595, P263
   REIF JH, 1985, INFORM PROCESS LETT, V20, P229, DOI 10.1016/0020-0190(85)90024-9
   Renault Etienne, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P613, DOI 10.1007/978-3-662-46681-0_56
   Renault Etienne, 2013, Logic for Programming, Artificial Intelligence and Reasoning. 19th International Conference, LPAR-19, Proceedings: LNCS 8312, P668, DOI 10.1007/978-3-642-45221-5_44
   Renault E, 2013, LECT NOTES COMPUT SC, V7795, P580, DOI 10.1007/978-3-642-36742-7_42
   SCHWOON S, 2005, LNCS, V3440
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   TARJAN RE, 1975, J ACM, V22, P215, DOI 10.1145/321879.321884
   Tauriainen H, 2004, FOURTH INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEM DESIGN, PROCEEDINGS, P165, DOI 10.1109/CSD.2004.1309129
NR 41
TC 2
Z9 2
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2017
VL 19
IS 6
BP 653
EP 673
DI 10.1007/s10009-016-0422-5
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ4TL
UT WOS:000412735100002
DA 2024-07-18
ER

PT J
AU Gadelha, M
   Ismail, H
   Cordeiro, L
AF Gadelha, Mikhail Y. R.
   Ismail, Hussama I.
   Cordeiro, Lucas C.
TI Handling loops in bounded model checking of C programs via
   <i>k</i>-induction
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software engineering; Formal methods; Verification; Model checking;
   k-induction
ID VERIFICATION
AB The first attempts to apply the k-induction method to software verification are only recent. In this paper, we present a novel proof by induction algorithm, which is built on the top of a symbolic context-bounded model checker and uses an iterative deepening approach to verify, for each step k up to a given maximum, whether a given safety property phi holds in the program. The proposed k-induction algorithm consists of three different cases, called base case, forward condition, and inductive step. Intuitively, in the base case, we aim to find a counterexample with up to k loop unwindings; in the forward condition, we check whether loops have been fully unrolled and that f holds in all states reachable within k unwindings; and in the inductive step, we check that whenever f holds for k unwindings, it also holds after the next unwinding of the system. The algorithm was implemented in two different ways, a sequential and a parallel one, and the results were compared. Experimental results show that both forms of the algorithm can handle a wide variety of safety properties extracted from standard benchmarks, ranging from reachability to time constraints. And by comparison, the parallel algorithm solves more verification tasks in less time. This paper marks the first application of the k-induction algorithm to a broader range of C programs; in particular, we show that our k-induction method outperforms CPAChecker in terms of correct results, which is a state-of-the-art k-induction-based verification tool for C programs.
C1 [Gadelha, Mikhail Y. R.; Ismail, Hussama I.; Cordeiro, Lucas C.] Univ Fed Amazonas, Elect & Informat Res Ctr, Manaus, Amazonas, Brazil.
C3 Universidade Federal de Amazonas
RP Cordeiro, L (corresponding author), Univ Fed Amazonas, Elect & Informat Res Ctr, Manaus, Amazonas, Brazil.
EM lucasccordeiro@gmail.com
RI Cordeiro, Lucas/IVV-3044-2023; Cordeiro, Lucas Carvalho/AAQ-9258-2021
OI Cordeiro, Lucas Carvalho/0000-0002-6235-4272
CR Ancourt C, 2010, ELECTRON NOTES THEOR, V267, P3, DOI 10.1016/j.entcs.2010.09.002
   ARM, 2009, ARM1176JZF S TECHN R
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Beyer Dirk, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P401, DOI 10.1007/978-3-662-46681-0_31
   Beyer Dirk, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P1, DOI 10.1007/978-3-642-34032-1_1
   Beyer D., 2015, ARXIV150200096 CORR
   Beyer D, 2013, LECT NOTES COMPUT SC, V7795, P594
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Bradley Aaron R., 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, DOI 10.1007/978-3-642-31424-7_4
   Brummayer R, 2009, LECT NOTES COMPUT SC, V5505, P174, DOI 10.1007/978-3-642-00768-2_16
   Chaki S, 2003, PROC INT CONF SOFTW, P385, DOI 10.1109/ICSE.2003.1201217
   Cimatti A., 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P51
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Cordeiro Lucas, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P160, DOI 10.1109/ECBS.2010.24
   Cordeiro L., 2011, SMT BASED BOUNDED MO
   Cordeiro L, 2012, IEEE T SOFTWARE ENG, V38, P957, DOI 10.1109/TSE.2011.59
   Cordeiro L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P331, DOI 10.1145/1985793.1985839
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Donaldson AF, 2011, LECT NOTES COMPUT SC, V6887, P351, DOI 10.1007/978-3-642-23702-7_26
   Donaldson AF, 2011, ACM SIGPLAN NOTICES, V46, P311, DOI 10.1145/2038037.1941604
   Een N., 2003, ELECT NOTES THEORETI, V89, P543, DOI 10.1016/s1571-0661(05)82542-3
   Franz A., 2010, THESIS
   Grosse Daniel, 2009, 2009 10th International Workshop on Microprocessor Test and Verification (MTV), P101, DOI 10.1109/MTV.2009.16
   Grosse D., 2013, SEMANTICS BASED TRAN, V29, P685
   Hagen G., 2008, P 2008 INT C FORM ME
   Hassan Z, 2013, 2013 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P157
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Hoder K, 2010, LECT NOTES ARTIF INT, V6173, P188
   Holzmann GJ, 2011, IEEE T SOFTWARE ENG, V37, P845, DOI 10.1109/TSE.2010.110
   Ivancic F, 2005, PR IEEE COMP DESIGN, P297, DOI 10.1109/ICCD.2005.77
   Kahsai T, 2011, ELECTRON PROC THEOR, P55, DOI 10.4204/EPTCS.72.6
   Kahsai T, 2011, LECT NOTES COMPUT SC, V6617, P192, DOI 10.1007/978-3-642-20398-5_15
   Kiepert J., 2013, CREATING RASPBERRY P, P1
   Kroening Daniel, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P557, DOI 10.1007/978-3-642-22110-1_44
   Merz F, 2012, LECT NOTES COMPUT SC, V7152, P146, DOI 10.1007/978-3-642-27705-4_12
   Mitchell M., 2001, ADV LINUX PROGRAMMIN
   Morse J., 2014, TACAS, V8413, P405
   Morse J, 2015, SOFTW SYST MODEL, V14, P65, DOI 10.1007/s10270-013-0366-0
   Morse J, 2013, LECT NOTES COMPUT SC, V7795, P619, DOI 10.1007/978-3-642-36742-7_47
   Muchnick S., 1997, ADV COMPILER DESIGN
   Pacheco P., 1996, Parallel Programming with MPI
   PATTERSON DA, 2007, COMPUTER ORG DESIGN
   Ramalho M, 2013, 2013 20TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS 2013), P147, DOI 10.1109/ECBS.2013.15
   Sankaranarayanan S, 2004, ACM SIGPLAN NOTICES, V39, P318, DOI 10.1145/982962.964028
   Sharma Rahul, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P703, DOI 10.1007/978-3-642-22110-1_57
   Sheeran M, 2000, LECT NOTES COMPUT SC, V1954, P108
   Visser W, 2012, P ACM SIGSOFT 20 INT
   Yang J, 1997, ACM T PROGR LANG SYS, V19, P386, DOI 10.1145/244795.244803
NR 48
TC 34
Z9 34
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2017
VL 19
IS 1
BP 97
EP 114
DI 10.1007/s10009-015-0407-9
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ1AC
UT WOS:000392941500006
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Havelund, K
AF Havelund, Klaus
TI Rule-based runtime verification revisited
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Rule-based systems; Rete algorithm; Internal DSL;
   Scala
ID SYSTEMS; EAGLE
AB Runtime verification (RV) consists in part of checking execution traces against user-provided formalized specifications. Throughout the last decade many new systems have emerged, most of which support specification notations based on state machines, regular expressions, temporal logic, or grammars. The field of artificial intelligence (AI) has for an even longer period of time studied rule-based production systems, which at a closer look appear to be relevant for RV, although seemingly focused on slightly different application domains, such as, for example, business processes and expert systems. The core algorithm in many of these systems is the Rete algorithm. We have implemented a rule-based system, named LOGFIRE, for runtime verification, founded on the Rete algorithm, as an internal DSL in the Scala programming language (in essence a library). Using Scala's support for defining DSLs allows to write rules elegantly as part of Scala programs. This combination appears attractive from a practical point of view. Our contribution is part conceptual in arguing that such rule-based frameworks originating from AI are suited for RV. Our contribution is technical by implementing an internal rule DSL in Scala; by illustrating how specification patterns can easily be encoded that generate rules, and by adapting and optimizing the Rete algorithm for RV purposes. An experimental evaluation is performed comparing to six other trace analysis systems. LogFire is currently being used to process telemetry from the Mars Curiosity rover at NASA's Jet Propulsion Laboratory.
C1 CALTECH, Jet Prop Lab, Lab Reliable Software, Pasadena, CA 91125 USA.
C3 National Aeronautics & Space Administration (NASA); NASA Jet Propulsion
   Laboratory (JPL); California Institute of Technology
RP Havelund, K (corresponding author), CALTECH, Jet Prop Lab, Lab Reliable Software, Pasadena, CA 91125 USA.
EM klaus.havelund@jpl.nasa.gov
CR Allan C., 2005, OOPSLA 05
   [Anonymous], INT C RUNT VER
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Barringer Howard, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P57, DOI 10.1007/978-3-642-21437-0_7
   Barringer H., 1995, Formal Aspects of Computing, V7, P533, DOI 10.1007/BF01211631
   Barringer H., 2012, LNCS, V7436
   Barringer H., 2011, SCALA DAYS 2011
   Barringer H, 2007, LECT NOTES COMPUT SC, V4839, P111
   Barringer H, 2010, J AEROS COMP INF COM, V7, P365, DOI 10.2514/1.49356
   Barringer H, 2010, J LOGIC COMPUT, V20, P675, DOI 10.1093/logcom/exn076
   Barringer H, 2009, LECT NOTES COMPUT SC, V5779, P1, DOI 10.1007/978-3-642-04694-0_1
   Basin D, 2010, LECT NOTES COMPUT SC, V6174, P1, DOI 10.1007/978-3-642-14295-6_1
   Bauer A, 2007, LECT NOTES COMPUT SC, V4839, P126
   Bauer A, 2013, LECT NOTES COMPUT SC, V8174, P59, DOI 10.1007/978-3-642-40787-1_4
   Chen F, 2009, LECT NOTES COMPUT SC, V5505, P246, DOI 10.1007/978-3-642-00768-2_23
   d'Amorim M., 2005, ACM SIGSOFT SOFTWARE, V30, P1
   DOORENBOS RB, 1995, THESIS CARNEGIE MELL
   Drusinsky D, 2000, LECT NOTES COMPUT SC, V1885, P323
   Drusinsky D, 2006, MODELING VERIFICATIO, P400
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Falcone Ylies, 2012, International Journal on Software Tools for Technology Transfer, V14, P349, DOI 10.1007/s10009-011-0196-8
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Falcone Y, 2009, LECT NOTES COMPUT SC, V5779, P40, DOI 10.1007/978-3-642-04694-0_4
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Fowler M., 2010, Domain-specific languages
   Fusco M., 2011, SCALA DAYS 2011
   Garillot F, 2007, LECT NOTES COMPUT SC, V4732, P368
   Gerth R., 1995, INT C PROTOCOL SPECI, P3
   Goubault-Larrecq J, 2008, LECT NOTES COMPUT SC, V5289, P1
   Groce A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P129, DOI 10.1145/1810295.1810314
   Hallé S, 2012, IEEE T SERV COMPUT, V5, P192, DOI 10.1109/TSC.2011.10
   Havelund K., 2004, International Journal on Software Tools for Technology Transfer, V6, P158, DOI 10.1007/s10009-003-0117-6
   Havelund K, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P135, DOI 10.1109/ASE.2001.989799
   Havelund K., 2008, LNCS, V5047
   Havelund K., 2012, LNCS, V7610
   Havelund K, 2008, LECT NOTES COMPUT SC, V4171, P374
   Havelund K, 2013, LECT NOTES COMPUT SC, V8174, P322, DOI 10.1007/978-3-642-40787-1_19
   Herzeel C, 2007, LECT NOTES COMPUT SC, V4839, P51
   Holzmann GJ, 2004, LECT NOTES COMPUT SC, V2989, P76
   Joshi R., 2013, COMMUNICATION
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Lee I, 1999, INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOLS I-V, PROCEEDINGS, P279
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Luckham D., 2002, The Power of Events: An Introduction to Complex Event Processing in Distributed Enterprise Systems
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   Perlin M., 1990, Applied Artificial Intelligence, V4, P155, DOI 10.1080/08839519008927948
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Stolz V, 2007, LECT NOTES COMPUT SC, V4839, P176
   Stolz V, 2006, ELECTRON NOTES THEOR, V144, P109, DOI 10.1016/j.entcs.2006.02.007
   Stolz V, 2005, ELECTRON NOTES THEOR, V113, P201, DOI 10.1016/j.entcs.2004.01.026
NR 50
TC 63
Z9 63
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2015
VL 17
IS 2
BP 143
EP 170
DI 10.1007/s10009-014-0309-2
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7NI
UT WOS:000355682200003
DA 2024-07-18
ER

PT J
AU Scott, J
   Niemetz, A
   Preiner, M
   Nejati, S
   Ganesh, V
AF Scott, Joseph
   Niemetz, Aina
   Preiner, Mathias
   Nejati, Saeed
   Ganesh, Vijay
TI Algorithm selection for SMT MachSMT: Machine Learning Driven Algorithm
   Selection for SMT Solvers
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE SMT solvers; Machine learning; Algorithm selection
ID PORTFOLIO
AB This paper presents MachSMT, an algorithm selection tool for Satisfiability Modulo Theories (SMT) solvers. MachSMT supports the entirety of the SMT-LIB language and standardized SMT-LIB theories, and is easy to extend with support for new theories. MachSMT deploys machine learning methods to construct both empirical hardness models and pairwise ranking comparators over state-of-the-art SMT solvers. Given an input formula in SMT-LIB format, MachSMT leverages these learnt models to output a ranking of solvers based on predicted runtimes. We provide an extensive empirical evaluation of MachSMT to demonstrate the efficiency and efficacy of MachSMT over three broad usage scenarios on theories and theory combinations of practical relevance (e.g., bit-vectors, (non)linear integer and real arithmetic, arrays, and floating-point arithmetic). First, we deploy MachSMT on state-of-the-art solvers in SMT-COMP 2019 and 2020. We observe MachSMT frequently improves on the best performing solvers in the competition, winning 57 divisions outright, with up to a 99.4% improvement in PAR-2 score. Second, we evaluate MachSMT to select configurations from a single underlying solver. We observe that MachSMT solves 898 more benchmarks and up to a 93.4% improvement in PAR-2 score across 23 configurations of the SMT solver cvc5. Last, we evaluate MachSMT on domain-specific problems, namely network verification with simple domain-specific features, and observe an improvement of 77.3% in PAR-2 score.
C1 [Scott, Joseph; Nejati, Saeed; Ganesh, Vijay] 200 Univ Ave, Waterloo, ON, Canada.
   [Niemetz, Aina; Preiner, Mathias] 450 Jane Stanford Way, Stanford, CA 94305 USA.
RP Scott, J (corresponding author), 200 Univ Ave, Waterloo, ON, Canada.
EM joseph.scott@uwaterloo.ca; niemetz@cs.stanford.edu;
   preiner@cs.stanford.edu; snejati@uwaterloo.ca; vijay.ganesh@uwaterloo.ca
OI Preiner, Mathias/0000-0002-7142-6258; Nejati, Saeed/0000-0002-1473-3630;
   Ganesh, Vijay/0000-0002-6029-2047; Scott, Joseph/0000-0002-4145-1612;
   Niemetz, Aina/0000-0003-2600-5283
FU DARPA [FA8650-18-2-7861]; ONR [N68335-17-C-0558]
FX This work was supported in part by DARPA (award no. FA8650-18-2-7861)
   and ONR (award no. N68335-17-C-0558).
CR Agrawal S, 2015, PROCEDIA COMPUT SCI, V60, P708, DOI 10.1016/j.procs.2015.08.220
   Ali S, 2006, APPL SOFT COMPUT, V6, P119, DOI 10.1016/j.asoc.2004.12.002
   Amadini R, 2014, THEOR PRACT LOG PROG, V14, P509, DOI 10.1017/S1471068414000179
   [Anonymous], 2012, SAT, DOI 10.1007/978-3-642-31612-8_18
   [Anonymous], 2022, MACHSMT GITHUB REPOS
   Backes J., 2018, 2018 FORMAL METHODS, P1, DOI DOI 10.23919/FMCAD.2018.8602994
   Baldwin S, 2012, J PHYS CONF SER, V341, DOI 10.1088/1742-6596/341/1/012001
   Balunovic M, 2018, ADV NEUR IN, V31
   Barbosa H., 2020, US
   Barbosa H, 2022, LECT NOTES COMPUT SC, V13243, P415, DOI 10.1007/978-3-030-99524-9_24
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C., 2020, The satisfiability modulo theories library (SMT-LIB)
   Barrett Clark, 2010, P 8 INT WORKSH SAT M
   Ben Khadra MA, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P11, DOI 10.23919/FMCAD.2017.8102235
   Beyer D., 2018, STRATEGY SELECTION S, V11245, P144, DOI [10.1007/978-3-030-03421-4_11, DOI 10.1007/978-3-030-03421-4_11]
   Bhargavan K., 2017, LIPIcs, DOI DOI 10.4230/LIPICS.SNAPL.2017.1
   Brain M, 2019, LECT NOTES COMPUT SC, V11427, P79, DOI 10.1007/978-3-030-17462-0_5
   Brain M, 2014, FORM METHOD SYST DES, V45, P213, DOI 10.1007/s10703-013-0203-7
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Cimatti A., 2013, LECT NOTES COMPUT SC, V7795
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Rodríguez JD, 2010, IEEE T PATTERN ANAL, V32, P569, DOI 10.1109/TPAMI.2009.187
   Drucker H., 1997, P 14 INT C MACH LEAR, P107, DOI DOI 10.5555/645526.657132
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Freund Y., 1999, Journal of Japanese Society for Artificial Intelligence, V14, P771
   Fu ZL, 2016, LECT NOTES COMPUT SC, V9780, P187, DOI 10.1007/978-3-319-41540-6_11
   Gadelha M., LECT NOTES COMPUT SC
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   Gent IP, 2010, FRONT ARTIF INTEL AP, V215, P873, DOI 10.3233/978-1-60750-606-5-873
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Greenland S, 2016, BMJ-BRIT MED J, V353, DOI 10.1136/bmj.i1981
   Grira N., 2004, Rev. Mach. Learn. Techn. Process. Multimedia Content, V1, P9, DOI DOI 10.1145/1101826.1101831
   Guidotti D., VNN LIB STANDARD
   Hadarean L., 2019, US
   Halko N, 2011, SIAM REV, V53, P217, DOI 10.1137/090771806
   Harris CR, 2020, NATURE, V585, P357, DOI 10.1038/s41586-020-2649-2
   Healy A, 2017, ELECTRON P THEOR COM, P20, DOI 10.4204/EPTCS.240.2
   Hula J, 2021, PROC INT C TOOLS ART, P447, DOI 10.1109/ICTAI52525.2021.00072
   Hurley Barry, 2014, Integration of AI and OR Techniques in Constraint Programming. 11th International Conference, CPAIOR 2014. Proceedings: LNCS 8451, P301, DOI 10.1007/978-3-319-07046-9_22
   Jayaraman K., 2014, Microsoft Research, V1, P1
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   KIRA K, 1992, MACHINE LEARNING /, P249
   Kotthoff L, 2016, LECT NOTES COMPUT SC, V10101, P149, DOI 10.1007/978-3-319-50137-6_7
   Kotthoff L, 2012, AI COMMUN, V25, P257, DOI 10.3233/AIC-2012-0533
   Kwon D, 2019, CLUSTER COMPUT, V22, P949, DOI 10.1007/s10586-017-1117-8
   Le Goues C, 2011, LECT NOTES COMPUT SC, V7041, P407, DOI 10.1007/978-3-642-24690-6_28
   Leino KRM, 2013, LECT NOTES COMPUT SC, V7998, P2, DOI 10.1007/978-3-642-39634-2_2
   Li XC, 2005, IEEE IJCNN, P196
   Liang JH, 2016, LECT NOTES COMPUT SC, V9710, P123, DOI 10.1007/978-3-319-40970-2_9
   Lundberg SM, 2017, ADV NEUR IN, V30
   Malitsky Y., 2014, Instance-Specific Algorithm Configuration, DOI [10.1007/978-3-319-11230-5, DOI 10.1007/978-3-319-11230-5]
   MarijnHeule MattiJarvisalo, 2019, US
   Moore A.W., 2001, CROSS VALIDATION DET
   Nejati Saeed, 2020, Principles and Practice of Constraint Programming. 26th International Conference, CP 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12333), P899, DOI 10.1007/978-3-030-58475-7_52
   Niemetz A., 2020, ARXIV
   Niemetz Aina, 2014, J. Satisf. Boolean Model. Comput, V9, P53, DOI [10.3233/sat190101, DOI 10.3233/SAT190101]
   Nötzli A, 2019, LECT NOTES COMPUT SC, V11628, P279, DOI 10.1007/978-3-030-24258-9_20
   O'Mahony E., 2008, Irish conference on artificial intelligence and cognitive science, P210
   Parker David, 2012, Proceedings. Lecture Notes in Computer Science, P248, DOI [10.1007/978-3-642-31759-0_19, DOI 10.1007/978-3-642-31759-0_19, DOI 10.1007/978-3-642-31759-019]
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Paszke A., 2019, ADV NEURAL INFORM PR, P8026, DOI DOI 10.48550/ARXIV.1912.01703
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pimpalkhare N, 2021, LECT NOTES COMPUT SC, V12831, P453, DOI 10.1007/978-3-030-80223-3_31
   Pulina L, 2007, LECT NOTES COMPUT SC, V4741, P574
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Richter C., LECT NOTES COMPUT SC, V11429, P229
   Rintanen J., 2014, P 8 INT PLANN COMP I, P1
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Salvia R, 2019, LECT NOTES COMPUT SC, V11460, P363, DOI 10.1007/978-3-030-20652-9_25
   Scott Joseph, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12652), P303, DOI 10.1007/978-3-030-72013-1_16
   Scott J., 2019, 17 INT WORKSHOP SATI
   Scott J, 2020, AAAI CONF ARTIF INTE, V34, P13909
   Stump A, 2014, LECT NOTES ARTIF INT, V8562, P367, DOI 10.1007/978-3-319-08587-6_28
   Sutcliffe G, 2017, J AUTOM REASONING, V59, P483, DOI 10.1007/s10817-017-9407-7
   Tierney K, 2015, LECT NOTES COMPUT SC, V8994, P17, DOI 10.1007/978-3-319-19084-6_2
   Urban J, 2008, LECT NOTES ARTIF INT, V5195, P441, DOI 10.1007/978-3-540-71070-7_37
   Vallati M, 2015, AI COMMUN, V28, P717, DOI 10.3233/AIC-150671
   Van Der Maaten Laurens, 2009, Journal of Machine Learning Research, V10, P13
   Weber Tjark, 2019, J. Satisf. Boolean Model. Comput., V11, P221, DOI [10.3233/SAT190123, DOI 10.3233/SAT190123]
   Wen S.H., 2019, ENHANCING SYMBOLIC E, DOI [10.14722/bar.2019.23080, DOI 10.14722/BAR.2019.23080]
   Weston J, 2001, ADV NEUR IN, V13, P668
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   Xu L., 2009, SAT, V4, P53
   Xu L, 2007, LECT NOTES COMPUT SC, V4741, P712
   Xu L, 2008, J ARTIF INTELL RES, V32, P565, DOI 10.1613/jair.2490
   Xu LL, 2012, PROCEEDINGS OF THE 8TH EURO-ASIA CONFERENCE ON ENVIRONMENT AND CSR: TOURISM, MICE, HOSPITALITY MANAGEMENT AND EDUCATION SESSION (PT III), P55
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
NR 89
TC 2
Z9 2
U1 2
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2023
VL 25
IS 2
SI SI
BP 219
EP 239
DI 10.1007/s10009-023-00696-0
EA FEB 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L8ZD1
UT WOS:000933642300001
DA 2024-07-18
ER

PT J
AU Enevoldsen, S
   Larsen, KG
   Srba, J
AF Enevoldsen, Soren
   Larsen, Kim Guldstrand
   Srba, Jiri
TI Extended abstract dependency graphs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Dependency graph; Fixed-point computation; Model checking; Bisimulation
   checking; Weighted transition systems
ID MODEL-CHECKING; EFFICIENT; ALGORITHMS
AB Dependency graphs, invented by Liu and Smolka in 1998, are oriented graphs with hyperedges that represent dependencies among the values of the vertices. Numerous model checking problems are reducible to a computation of the minimum fixed-point vertex assignment. Recent works successfully extended the assignments in dependency graphs from the Boolean domain into more general domains in order to speed up the fixed-point computation or to apply the formalism to a more general setting of, for example, weighted logics. All these extensions require separate correctness proofs of the fixed-point algorithm as well as a one-purpose implementation. We suggest the notion of extended abstract dependency graphs where the vertex assignment is defined over an abstract algebraic structure of Noetherian partial orders with the least element, and where we allow both monotonic and non-monotonic functions. We show that existing approaches are concrete instances of our general framework and provide an open-source C++ library that implements the abstract algorithm. We demonstrate that the performance of our generic implementation is comparable to, and sometimes even outperforms, dedicated special-purpose algorithms presented in the literature.
C1 [Enevoldsen, Soren; Larsen, Kim Guldstrand; Srba, Jiri] Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
C3 Aalborg University
RP Enevoldsen, S (corresponding author), Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
EM senevoldsen@cs.aau.dk
OI Srba, Jiri/0000-0001-5551-6547; Guldstrand Larsen,
   Kim/0000-0002-5953-3384
FU Innovation Fund Denmark center DiCyPS; ERC Advanced Grant LASSO; DFF
   project QASNET
FX The work was funded by Innovation Fund Denmark center DiCyPS, ERC
   Advanced Grant LASSO and DFF project QASNET.
CR ANDERSEN HR, 1992, LECT NOTES COMPUT SC, V582, P1
   ANDERSEN HR, 1994, THEOR COMPUT SCI, V126, P3, DOI 10.1016/0304-3975(94)90266-6
   Cassez F, 2005, LECT NOTES COMPUT SC, V3653, P66, DOI 10.1007/11539452_9
   Christoffersen P, 2015, OPEN ACCESS SERIES I, V44, P77, DOI [10.4230/OASIcs.SynCoP.2015.77, DOI 10.4230/OASICS.SYNCOP.2015.77]
   Dalsgaard AE, 2018, FUND INFORM, V161, P351, DOI 10.3233/FI-2018-1707
   Dalsgaard AE, 2017, LECT NOTES COMPUT SC, V10258, P139, DOI 10.1007/978-3-319-57861-3_10
   Dalsgaard AE, 2016, LECT NOTES COMPUT SC, V9984, P197, DOI 10.1007/978-3-319-47677-3_13
   David A, 2012, LECT NOTES COMPUT SC, V7214, P492, DOI 10.1007/978-3-642-28756-5_36
   Enevoldsen S, 2019, LECT NOTES COMPUT SC, V11636, P1, DOI 10.1007/978-3-030-30923-7_1
   Enevoldsen S, 2019, LECT NOTES COMPUT SC, V11427, P316, DOI 10.1007/978-3-030-17462-0_18
   Jensen Jonas Finnemann, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P178, DOI 10.1007/978-3-642-39176-7_12
   Jensen JF, 2016, LECT NOTES COMPUT SC, V9930, P307, DOI 10.1007/978-3-662-53401-4_16
   Jensen JF, 2016, INT J SOFTW TOOLS TE, V18, P409, DOI 10.1007/s10009-014-0359-5
   Joubert C, 2005, 13TH EUROMICRO CONFERENCE ON PARALLEL, DISTRIBUTED AND NETWORK-BASED PROCESSING, PROCEEDINGS, P264, DOI 10.1109/EMPDP.2005.19
   Keiren J.J.A, 2013, ADV REDUCTION TECHNI
   Kordon F., 2019, COMPLETE RESULTS 201
   Larsen K. G., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P108, DOI 10.1109/LICS.1990.113738
   Liu XX, 1998, LECT NOTES COMPUT SC, V1384, P5
   Liu XX, 1998, LECT NOTES COMPUT SC, V1443, P53
   Mader A., 1995, LECT NOTES COMPUT SC, V1019, P72
   Mariegaard A, 2017, LECT NOTES COMPUT SC, V10419, P153, DOI 10.1007/978-3-319-65765-3_9
   Mateescu R, 2000, LECT NOTES COMPUT SC, V1785, P251
   Probst D.K, 1992, LECT NOTES COMPUTER, V663, P30, DOI [10.1007/3-540-56496-9_4, DOI 10.1007/3-540-56496-9_4]
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Wolf K., 2018, COMPLETE RESULTS 201
NR 25
TC 1
Z9 1
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2022
VL 24
IS 1
SI SI
BP 49
EP 65
DI 10.1007/s10009-021-00638-8
EA AUG 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZT9UB
UT WOS:000682638500001
DA 2024-07-18
ER

PT J
AU Kauffman, S
   Havelund, K
   Fischmeister, S
AF Kauffman, Sean
   Havelund, Klaus
   Fischmeister, Sebastian
TI What can we monitor over unreliable channels?
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Monitorability; Unreliable communication; Formal
   methods
ID MODEL CHECKING; SAFETY; VERIFICATION
AB This article addresses the question of what properties can be monitored over an unreliable communication channel. We model unreliable communications as mutations to finite traces and define what it means for a property to be immune to such a mutation. We also introduce the idea of a trustworthy verdict, which is a verdict guaranteed to be correct in the presence of a trace mutation. We show that the trustworthiness of a verdict or immunity of a property for a single mutation is equivalent to the trustworthiness or immunity for any number of mutations. We classify trustworthy verdicts on omega-regular properties by updating a recently proposed monitorability-focused refinement of the safety-liveness taxonomy. The article also includes a fixed-parameter tractable algorithm to test an omega-regular property for immunity to a trace mutation. Our results show that many of the most common properties can be monitored over unreliable channels.
C1 [Kauffman, Sean; Fischmeister, Sebastian] Univ Waterloo, Waterloo, ON, Canada.
   [Havelund, Klaus] CALTECH, Jet Prop Lab, Pasadena, CA USA.
C3 University of Waterloo; National Aeronautics & Space Administration
   (NASA); NASA Jet Propulsion Laboratory (JPL); California Institute of
   Technology
RP Kauffman, S (corresponding author), Univ Waterloo, Waterloo, ON, Canada.
EM skauffma@uwaterloo.ca; klaus.havelund@jpl.nasa.gov;
   sfischme@uwaterloo.ca
RI Kauffman, Sean/HGC-8229-2022
OI Kauffman, Sean/0000-0001-6341-3898
CR Abdulla P., 2000, CONCUR 2000 - Concurrency Theory. 11th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1877), P320
   Abdulla PA, 1996, INFORM COMPUT, V127, P91, DOI 10.1006/inco.1996.0053
   Aceto L, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290365
   Agrawal S, 2016, P IEEE CSFW, P239, DOI 10.1109/CSF.2016.24
   ALPERN B, 1986, INFORM PROCESS LETT, V23, P177, DOI 10.1016/0020-0190(86)90132-8
   [Anonymous], 2011, RV. LNCS, DOI DOI 10.1007/978-3-642-29860-815
   [Anonymous], 1988, FOCS 88
   [Anonymous], 2001, An Automata Theoretic Approach to Branching
   [Anonymous], 2013, PROC IEEE INT C COMP
   ARM Limited, 2019, EMB TRAC MACR ARCH S
   Baader F, 2009, LECT NOTES COMPUT SC, V5457, P105, DOI 10.1007/978-3-642-00982-2_9
   BARTLETT KA, 1969, COMMUN ACM, V12, P260, DOI 10.1145/362946.362970
   Basin D, 2017, LECT NOTES COMPUT SC, V10426, P356, DOI 10.1007/978-3-319-63387-9_18
   Basin David., 2012, INT C RUNTIME VERIFI, P151, DOI [DOI 10.1007/978-3-642-35632-217, 10.1007]
   Bauer A, 2006, LECT NOTES COMPUT SC, V4337, P260
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   Belina F., 1991, SDL APPL PROTOCOL SP
   BRAND D, 1983, J ACM, V30, P323, DOI 10.1145/322374.322380
   BUDKOWSKI S, 1987, COMPUT NETWORKS ISDN, V14, P3, DOI 10.1016/0169-7552(87)90084-5
   Cece G, 1996, INFORM COMPUT, V124, P20, DOI 10.1006/inco.1996.0003
   CHANG E, 1992, LECT NOTES COMPUT SC, V623, P474
   Chen Z, 2018, PROC IEEE ACM INT C, P163, DOI 10.1145/3183440.3195077
   Cimatti A, 2019, LECT NOTES COMPUT SC, V11757, P165, DOI 10.1007/978-3-030-32079-9_10
   Clarkson B., 2014, INT C PRINC SEC TRUS, P265, DOI [10.1007/978-3-642-54792-8_15, DOI 10.1007/978-3-642-54792-8_15]
   d'Amorim M, 2005, LECT NOTES COMPUT SC, V3576, P364
   Diekert V, 2015, LECT NOTES COMPUT SC, V9399, P39, DOI 10.1007/978-3-319-25150-9_3
   Diekert V, 2014, THEOR COMPUT SCI, V537, P29, DOI 10.1016/j.tcs.2014.02.052
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Engelen, 1999, LNCS, V1601, P34, DOI [10.1007/3-540-48778-6_3, DOI 10.1007/3-540-48778-6_]
   Falcone Ylies, 2012, International Journal on Software Tools for Technology Transfer, V14, P349, DOI 10.1007/s10009-011-0196-8
   Falcone Y, 2009, LECT NOTES COMPUT SC, V5779, P40, DOI 10.1007/978-3-642-04694-0_4
   FINKEL A, 1994, DISTRIB COMPUT, V7, P129, DOI 10.1007/BF02277857
   Francalanza A, 2017, FORM METHOD SYST DES, V51, P87, DOI 10.1007/s10703-017-0273-z
   Garg D, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P151
   Gastin, 2008, 1 ORDER DEFINABLE LA, P261, DOI [10.2307/j.ctt46mv83.12, DOI 10.2307/J.CTT46MV83.12]
   Gondi K, 2009, LECT NOTES COMPUT SC, V5403, P105, DOI 10.1007/978-3-540-93900-9_12
   HALBWACHS N, 2000, LNCS, P1, DOI DOI 10.1007/3-540-45352-0_1
   Hopcroft JohnE., 1971, A linear algorithm for testing equivalence of finite automata
   ISO, 2002, 132392002 ISO IEC
   Iyer P., 1997, TAPSOFT '97: Theory and Practice of Software Development. 7th International Joint Conference CAAP/FASE. Proceedings, P667, DOI 10.1007/BFb0030633
   Joshi Yogi., 2017, Proceedings of the Symposium on Applied Computing - SAC'17, P1379, DOI DOI 10.1145/3019612.3019827
   Kauffman S, 2019, LECT NOTES COMPUT SC, V11757, P256, DOI 10.1007/978-3-030-32079-9_15
   Kupferman O, 2001, FORM METHOD SYST DES, V19, P291, DOI 10.1023/A:1011254632723
   Lamport L., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P657
   Leucker M, 2019, LECT NOTES COMPUT SC, V11757, P273, DOI 10.1007/978-3-030-32079-9_16
   Li M., 2007, Proceedings of the 27th International Conference on Distributed Computing Systems Workshops, ICDCSW '07, P67
   LOMUSCIO A, 2010, INT C AUT AG MULT SY, P659, DOI DOI 10.3233/FI-2010-276
   Lozes Etienne, 2012, Web Services and Formal Methods. 8th International Workshop (WS-FM 2011). Revised Selected Papers, P2, DOI 10.1007/978-3-642-29834-9_2
   Peled D, 1997, INFORM PROCESS LETT, V63, P243, DOI 10.1016/S0020-0190(97)00133-6
   Peled Doron, 2019, Models, Mindsets, Meta. The What, the How, and the Why Not? Essays Dedicated to Bernhard Steffen on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 11200), P218, DOI 10.1007/978-3-030-22348-9_14
   Peng WX, 2004, TELECOMMUN SYST, V25, P433, DOI 10.1023/B:TELS.0000014793.19622.0e
   Pnueli A, 2006, LECT NOTES COMPUT SC, V4085, P573
   Prasad Sistla A., 1994, Formal Aspects of Computing, V6, P495, DOI 10.1007/BF01211865
   Purandare R, 2010, ACM SIGPLAN NOTICES, V45, P270, DOI 10.1145/1932682.1869483
   Sen K., 2009, LNCS, V2937, P44
   Sistla A. Prasad, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P720, DOI 10.1007/978-3-642-22110-1_58
   SISTLA AP, 1985, J ACM, V32, P733, DOI 10.1145/3828.3837
   Stucki Sandro, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P406, DOI 10.1007/978-3-030-30942-8_25
   Wang Z., 2009, 2009 INT C INF ENG C, P1, DOI DOI 10.1109/ICIECS.2009.5365996
   Wolper Pierre., 1986, POPL, V86, P184
   Wu E., 2006, P ASS COMP MACH ACM, P407
NR 62
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2021
VL 23
IS 4
SI SI
BP 579
EP 600
DI 10.1007/s10009-021-00625-z
EA JUN 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WK6KY
UT WOS:000668411500001
DA 2024-07-18
ER

PT J
AU Grompanopoulos, C
   Gouglidis, A
   Mavridou, A
AF Grompanopoulos, Christos
   Gouglidis, Antonios
   Mavridou, Anastasia
TI Specifying and verifying usage control models and policies in
   TLA<SUP>+</SUP>
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Authorization models; Concurrency; Model checking; UseCON
ID VERIFICATION
AB Novel computing paradigms, e.g., the Cloud, introduce new requirements with regard to access control such as utilization of historical information and continuity of decision. However, these concepts may introduce an additional level of complexity to the underpinning model, rendering its definition and verification a cumbersome and prone to errors process. Using a formal language to specify a model and formally verify it may lead to a rigorous definition of the interactions amongst its components, and the provision of formal guarantees for its correctness. In this paper, we consider a case study where we specify a formal model in TLA(+) for both a policy-neutral and policy-specific UseCON usage control model. Through that, we anticipate to shed light in the analysis and verification of usage control models and policies by sharing our experience when using TLA(+) specific tools.
C1 [Grompanopoulos, Christos] Univ Western Macedonia, Dept Mech Engn, Kozani, Greece.
   [Gouglidis, Antonios] Univ Lancaster, Sch Comp & Commun, Lancaster, England.
   [Mavridou, Anastasia] NASA, Ames Res Ctr, SGT, Robust Software Engn Grp, Mountain View, CA 94035 USA.
C3 University of Western Macedonia; Lancaster University; National
   Aeronautics & Space Administration (NASA); NASA Ames Research Center
RP Grompanopoulos, C (corresponding author), Univ Western Macedonia, Dept Mech Engn, Kozani, Greece.
EM cgrompanopoulos@uowm.gr; a.gouglidis@lancaster.ac.uk;
   anastasia.mavridou@nasa.gov
CR Allen LR, 2018, TRANSFORMING THE FINANCING OF EARLY CARE AND EDUCATION, P1
   Andoni A., 2003, POPL, V2
   [Anonymous], 2000, P INT SCH FDN SEC AN
   Cau A., 2006, INTERVAL TEMPORAL LO
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   Gouglidis A, 2018, ELECTRON P THEOR COM, P52, DOI 10.4204/EPTCS.272.5
   Gouglidis A, 2014, INT J INF SECUR, V13, P97, DOI 10.1007/s10207-013-0205-x
   Grompanopoulos C., 2020, USECON SPECIFICATION
   Grompanopoulos C., 2012, INT WORKSHOP SECURIT, P81
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Hu V., 2020, TECH REP
   Hu VincentC., 2017, NIST SPECIAL PUBLICA, V800, P192
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Janicke H, 2007, SACMAT'07: PROCEEDINGS OF THE 12TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P163
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Lazouski A, 2010, COMPUT SCI REV, V4, P81, DOI 10.1016/j.cosrev.2010.02.002
   Lu JF, 2012, IEICE T COMMUN, VE95B, P1508, DOI 10.1587/transcom.E95.B.1508
   Macedo N., 2016, ARXIV160303599
   Martinelli F, 2010, FUTURE GENER COMP SY, V26, P1032, DOI 10.1016/j.future.2009.12.005
   Oetsch J., 2012, 13 INT C PRINC KNOWL
   Pretschner A, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P98, DOI 10.1109/ARES.2009.100
   Rajkumar PV, 2010, COMM COM INF SC, V89, P214
   Ranise Silvio, 2012, Network and System Security. 6th International Conference, NSS 2012. Proceedings, P15, DOI 10.1007/978-3-642-34601-9_2
   Xinwen Zhang, 2005, ACM Transactions on Information and Systems Security, V8, P351, DOI 10.1145/1108906.1108908
   Yuan Ding, 2014, 11 USENIX S OPERATIN, P249
   Zave P, 2012, ACM SIGCOMM COMP COM, V42, P50, DOI 10.1145/2185376.2185383
   Zhang X., 2006, FORMAL MODEL ANAL US
   Zhang XW, 2008, ACM T INFORM SYST SE, V11, DOI 10.1145/1330295.1330298
   Zhang Xinwen., 2006, ACM Symposium on Information, Computer and Communications Security (ASIACCS), V6, P243
NR 30
TC 1
Z9 1
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2021
VL 23
IS 5
BP 685
EP 700
DI 10.1007/s10009-020-00600-0
EA JAN 2021
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XD7NM
UT WOS:000606257800002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Berthomieu, B
   Le Botlan, D
   Dal Zilio, S
AF Berthomieu, Bernard
   Le Botlan, Didier
   Dal Zilio, Silvano
TI Counting Petri net markings from reduction equations
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model counting; Model checking; Petri net; Structural reduction
AB We propose a method to count the number of reachable markings of a Petri net without having to enumerate these first. The method relies on a structural reduction system that reduces the number of places and transitions of the net in such a way that we can faithfully compute the number of reachable markings of the original net from the reduced net and the reduction history. The method has been implemented, and computing experiments show that reductions are effective on a large benchmark of models.
C1 [Berthomieu, Bernard; Dal Zilio, Silvano] Univ Toulouse, CNRS, LAAS, Toulouse, France.
   [Le Botlan, Didier] Univ Toulouse, CNRS, INSA, LAAS, Toulouse, France.
C3 Universite de Toulouse; Centre National de la Recherche Scientifique
   (CNRS); Centre National de la Recherche Scientifique (CNRS); Universite
   Federale Toulouse Midi-Pyrenees (ComUE); Universite de Toulouse;
   Institut National des Sciences Appliquees de Toulouse
RP Le Botlan, D (corresponding author), Univ Toulouse, CNRS, INSA, LAAS, Toulouse, France.
EM bernard.berthomieu@laas.fr; didier.le-botlan@insa-toulouse.fr;
   silvano.dal.zilio@laas.fr
RI Dal Zilio, Silvano/AAV-6461-2021
OI Dal Zilio, Silvano/0000-0002-6002-2696
CR [Anonymous], 1976, THESIS
   Behle M., 2007, 9 WORKSH ALG ENG EXP
   BERTHELOT G, 1986, LECT NOTES COMPUT SC, V222, P19
   BERTHELOT G, 1987, LECT NOTES COMPUT SC, V254, P359
   Berthomieu B, 2004, INT J PROD RES, V42, P2741, DOI [10.1080/00207540412331312688, 10.1080/00207540410001705257]
   Berthomieu B, 2018, LECT NOTES COMPUT SC, V10869, P65, DOI 10.1007/978-3-319-94111-0_4
   Commoner F., 1971, Journal of Computer and System Sciences, V5, P511, DOI 10.1016/S0022-0000(71)80013-2
   De Loera JA, 2004, J SYMB COMPUT, V38, P1273, DOI 10.1016/j.jsc.2003.04.003
   De Loera JA, 2013, MOS-SIAM SER OPTIMIZ, V14, P3
   Esparza J., 2001, Correct Hardware Design and Verification Methods. 11th IFIP WG 10.5 Advanced Research Working Conference, CHARME 2001. Proceedings (Lecture Notes in Computer Science Vol.2144), P310
   Hillah L.M., 2017, LNCS, V10258
   Jensen JF, 2016, LECT NOTES COMPUT SC, V9930, P307, DOI 10.1007/978-3-662-53401-4_16
   Kordon F., 2018, LNCS, V11090, P181, DOI [10.1007/978-3-662-58381-4_9, DOI 10.1007/978-3-662-58381-4_9]
   Levy FK, 1963, INTRO CRITICAL PATH
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   Recalde L, 1997, IEEE SYS MAN CYBERN, P3768, DOI 10.1109/ICSMC.1997.633256
   Schmidt K, 2003, LECT NOTES COMPUT SC, V2619, P473
   Silva M., 1996, ADV COURSE PETRI NET, P309
   Stahl C., 2011, 18 GERM WORKSH ALG T
   Thierry-Mieg Y, 2009, LECT NOTES COMPUT SC, V5505, P1, DOI 10.1007/978-3-642-00768-2_1
   Verdoolaege S, 2007, ALGORITHMICA, V48, P37, DOI 10.1007/s00453-006-1231-0
   Wolf K., 2018, COMPLETE RESULTS 201
   Wolf K, 2007, LECT NOTES COMPUT SC, V4546, P29
NR 23
TC 19
Z9 19
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2020
VL 22
IS 2
SI SI
BP 163
EP 181
DI 10.1007/s10009-019-00519-1
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KX0GO
UT WOS:000521561800005
DA 2024-07-18
ER

PT J
AU Damiani, F
   Lienhardt, M
   Paolini, L
AF Damiani, Ferruccio
   Lienhardt, Michael
   Paolini, Luca
TI Automatic refactoring of delta-oriented SPLs to remove-free form and
   replace-free form
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Delta-oriented programming; Featherweight Java; Software product lines;
   Automated refactoring
ID CORE CALCULUS; PRODUCT; CHECKING
AB Delta-oriented programming (DOP) is a flexible transformational approach to implement software product lines (SPLs). In delta-oriented SPLs, variants are generated by applying operations contained in delta modules to a base program. These operations can add, remove or modify named elements in a program (e.g. classes, methods and fields in a Java program). This paper presents two notions of normal form for delta-oriented SPLs. Both normal forms do not contain the remove operation. Additionally, the second normal form enforces a limitation on the use of the method-modify operation. For each of the proposed normal forms an algorithm for refactoring a delta-oriented SPL into one that satisfies that normal form is described. The algorithms are formalized for a core calculus for delta-oriented SPLs of Java programs.
C1 [Damiani, Ferruccio; Paolini, Luca] Univ Turin, Turin, Italy.
   [Lienhardt, Michael] Off Natl Etud & Rech Aerosp, Palaiseau, France.
C3 University of Turin; National Office for Aerospace Studies & Research
   (ONERA); Universite Paris Saclay
RP Damiani, F (corresponding author), Univ Turin, Turin, Italy.
EM damiani@di.unito.it
RI Paolini, Luca/M-8924-2019; Ferruccio, Damiani/D-2383-2011
OI Paolini, Luca/0000-0002-4126-0170; Ferruccio,
   Damiani/0000-0001-8109-1706
CR Albert E, 2014, SERV ORIENTED COMPUT, V8, P323, DOI 10.1007/s11761-013-0148-0
   Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   [Anonymous], 2014, INT C PRINC PRACT PR
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Bettini L, 2013, ACTA INFORM, V50, P77, DOI 10.1007/s00236-012-0173-z
   Borba P, 2012, THEOR COMPUT SCI, V455, P2, DOI 10.1016/j.tcs.2012.01.031
   Capilla R, 2014, J SYST SOFTWARE, V91, P3, DOI 10.1016/j.jss.2013.12.038
   Chesta C, 2016, LECT NOTES COMPUT SC, V9953, P497, DOI 10.1007/978-3-319-47169-3_40
   Clarke D, 2011, LECT NOTES COMPUT SC, V6659, P417, DOI 10.1007/978-3-642-21455-4_13
   Damiani F., 2011, P 15 INT SOFTW PROD, V2, DOI 10.1145/2019136.2019175
   Damiani F, 2018, ACTA INFORM, V55, P269, DOI 10.1007/s00236-017-0293-6
   Damiani F, 2017, SOFTW SYST MODEL, V16, P1223, DOI 10.1007/s10270-016-0516-2
   Damiani F, 2017, LECT NOTES COMPUT SC, V10202, P424, DOI 10.1007/978-3-662-54494-5_25
   Damiani F, 2016, ELECTRON P THEOR COM, P2, DOI 10.4204/EPTCS.206.2
   Damiani F, 2016, LECT NOTES COMPUT SC, V9953, P579, DOI 10.1007/978-3-319-47169-3_45
   Damiani F, 2016, LECT NOTES COMPUT SC, V9681, P47, DOI 10.1007/978-3-319-33693-0_4
   DEROEVER WP, 1998, CAMBRIDGE TRACTS THE
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Faitelson D, 2011, INT J SYST ASSUR ENG, V2, P144, DOI 10.1007/s13198-011-0060-y
   Fowler Martin, 2002, Extreme Programming and Agile Methods-XP/Agile Universe 2002, V2418, P256, DOI DOI 10.1007/3-540-45672-431
   Haber Arne, 2012, Large-Scale Complex IT Systems. Development, Operation and Management. 17th Monterey Workshop 2012. Revised Selected Papers, P183, DOI 10.1007/978-3-642-34059-8_10
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Helvensteijn Michiel, 2012, PROC INT WORKSHOP VA, P139, DOI [10.1145/2110147.2110163, DOI 10.1145/2110147.2110163]
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Jia Liu, 2006, 28th International Conference on Software Engineering Proceedings, P112
   Johansen MF, 2011, LECT NOTES COMPUT SC, V6981, P638, DOI 10.1007/978-3-642-24485-8_47
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Kamburjan E, 2017, COMM COM INF SC, V694, P55, DOI 10.1007/978-3-319-53946-1_4
   Kastner C., 2007, ECOOP WORKSH REF TOO
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   KOWALSKI Michal., 2013, Prawo do samoobrony jako srodek zwalczania terroryzmu miedzynarodowego, P1, DOI [10.1145/2451617.2451619, DOI 10.1145/2451617.2451619]
   Krueger C, 2002, IEEE SOFTWARE, V19, P29, DOI 10.1109/MS.2002.1020284
   Lienhardt Michael, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P178, DOI 10.1007/978-3-642-34026-0_14
   Lienhardt M, 2018, SCI COMPUT PROGRAM, V166, P3, DOI 10.1016/j.scico.2018.05.007
   Lochau M, 2010, ELECTRON NOTES THEOR, V264, P37, DOI 10.1016/j.entcs.2010.12.013
   Lopez-Herrejon RE, 2005, LECT NOTES COMPUT SC, V3586, P169
   Monteiro MP, 2006, LECT NOTES COMPUT SC, V3880, P214
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schaefer Ina, 2010, P 2 INT WORKSH FEAT, P49
   Schulze Sandro., 2012, Proceedings of the 6th International Workshop on Variability Modelling of Software-Intensive Systems (VaMoS'12), P73
   Sorger J, 2013, 2013 IEEE SYMPOSIUM ON BIOLOGICAL DATA VISUALIZATION (BIOVIS), P73, DOI 10.1109/BioVis.2013.6664349
   ter Beek MH, 2020, IEEE T SOFTWARE ENG, V46, P321, DOI 10.1109/TSE.2018.2853726
   Wille D, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P39, DOI 10.1145/3106195.3106202
   Winkelmann Tim, 2016, CEUR WORKSHOP PROCEEDINGS, V1559, P40
NR 48
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2019
VL 21
IS 6
SI SI
BP 691
EP 707
DI 10.1007/s10009-019-00534-2
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JL0QK
UT WOS:000495240000007
DA 2024-07-18
ER

PT J
AU Gibson-Robinson, T
   Lowe, G
AF Gibson-Robinson, Thomas
   Lowe, Gavin
TI Symmetry reduction in CSP model checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model checking; Symmetry reduction; CSP; FDR; Supercombinators;
   Representatives
ID VERIFICATION
AB We present an extension of FDR, the model checker for the process algebra CSP, that exploits symmetry to reduce the size of the state space searched. We define what it means for a process to be symmetric with respect to a group of permutations on the transition labels. We factor the state space of the search by symmetry equivalence, mapping each state to a representative of its equivalence class, thereby considering all symmetric states together. We prove a powerful syntactic result, identifying conditions under which a process will be symmetric in a particular type. We show how to implement such a search using the powerful technique of supercombinators used in the implementation of FDR: we identify conditions on a supercombinator for it to be symmetric and explain how to apply a permutation to a state. Finally, we present a novel efficient technique for calculating representatives of equivalence classes, which normally finds unique representatives; our experiments suggest that this technique typically works faster than other techniques and in particular scales better.
C1 [Gibson-Robinson, Thomas; Lowe, Gavin] Univ Oxford, Dept Comp Sci, Oxford, England.
C3 University of Oxford
RP Gibson-Robinson, T (corresponding author), Univ Oxford, Dept Comp Sci, Oxford, England.
EM thomas.gibson-robinson@cs.ox.ac.uk; gavin.lowe@cs.ox.ac.uk
FU DARPA [FA8750-12-2-0247]; EPSRC [EP/N022777]
FX We would like to thank Bill Roscoe and the anonymous referees for useful
   comments. Research into FDR3 and FDR4 has been partially sponsored by
   DARPA under Agreement Number FA8750-12-2-0247 and EPSRC under Agreement
   Number EP/N022777.
CR Babai L., 1979, 20th Annual Symposium of Foundations of Computer Science, P39, DOI 10.1109/SFCS.1979.8
   Babai L., 1995, Handbook of Combinatorics, V2, P1447
   Bosnacki D., 2002, International Journal on Software Tools for Technology Transfer, V4, P92, DOI 10.1007/s100090200074
   Chen K, 2015, THESIS
   Chiola G, 1997, THEOR COMPUT SCI, V176, P39, DOI 10.1016/S0304-3975(96)00010-2
   Clarke EM, 1996, FORM METHOD SYST DES, V9, P77, DOI 10.1007/BF00625969
   Clarke EM, 1998, LECT NOTES COMPUT SC, V1427, P147, DOI 10.1007/BFb0028741
   Colvin R, 2005, IEEE INT C ENG COMP, P507
   Donaldson A. F., 2007, ELECT NOTES THEOR CO, V185, P63
   Donaldson AF, 2006, LECT NOTES COMPUT SC, V4019, P374
   Emerson EA, 1996, FORM METHOD SYST DES, V9, P105, DOI 10.1007/BF00625970
   Fischer C., 1999, IFM'99. Proceedings of the 1st International Conference on Integrated Formal Methods, P315
   Gibson-Robinson T., 2015, TECHNICAL REPORT
   Gibson-Robinson T, 2016, INT J SOFTW TOOLS TE, V18, P149, DOI 10.1007/s10009-015-0377-y
   Herlihy Maurice, 2012, The Art of Multiprocessor Programming, V1st
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   Iosif R, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P254, DOI 10.1109/ASE.2001.989811
   Ip CN, 1996, FORM METHOD SYST DES, V9, P41, DOI 10.1007/BF00625968
   Janssen R, 2015, THESIS
   Jensen K, 1996, FORM METHOD SYST DES, V9, P7, DOI 10.1007/BF00625967
   Junttila T. A, 2004, P 4 INT C APPL COUNC
   Junttila TA, 2001, J UNIVERS COMPUT SCI, V7, P307
   Lawrence J, 2005, LECT NOTES COMPUT SC, V3525, P151
   Leuschel M., 2006, B 2007: Formal Specification and Development in B. 7th International Conference of B Users. Proceedings (Lecture Notes in Computer Science vol.4355), P79
   Leuschel M, 2010, ANN MATH ARTIF INTEL, V59, P81, DOI 10.1007/s10472-010-9208-8
   Lowe G., 1998, Journal of Computer Security, V6, P53
   Lowe Gavin, 2017, CONCURRENCY SECURITY, P162, DOI [DOI 10.1007/978-3-319-51046, 10.1007/978-3-319-51046-0_9, DOI 10.1007/978-3-319-51046-0_9]
   Lynch N. A., 1996, DISTRIBUTED ALGORITH
   Michael M. M., 1996, Proceedings of the Fifteenth Annual ACM Symposium on Principles of Distributed Computing, P267, DOI 10.1145/248052.248106
   Miller A, 2006, ACM COMPUT SURV, V38, DOI 10.1145/1132960.1132962
   Moffat N., 2008, LECT NOTES COMPUTER, V5256
   Mota A, 2001, SCI COMPUT PROGRAM, V40, P59, DOI 10.1016/S0167-6423(00)00023-X
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Roscoe A. W., 2007, P AVOCS, P177
   ROSCOE AW, 1994, CLASSICAL MIND ESSAY
   Schmidt K, 2000, LECT NOTES COMPUT SC, V1785, P315
   Sistla AP, 2000, ACM T SOFTW ENG METH, V9, P133, DOI 10.1145/350887.350891
   University of Oxford, 2015, FDR DOC
   VALMARI A, 1991, LECT NOTES COMPUT SC, V483, P491
   Wahl T, 2010, SYMMETRY-BASEL, V2, P799, DOI 10.3390/sym2020799
   [No title captured]
NR 41
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2019
VL 21
IS 5
BP 567
EP 605
DI 10.1007/s10009-019-00516-4
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW8PB
UT WOS:000485255000004
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Ratiu, D
   Ulrich, A
AF Ratiu, Daniel
   Ulrich, Andreas
TI An integrated environment for Spin-based C code checking Towards
   bringing model-driven code checking closer to practitioners
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Domain-specific languages; Model checking; Testing; Code verification;
   Code sanitizers
AB Model-driven code checking (MDCC) has been successfully used for the verification of functional requirements of C code. An environment model that describes the context, which a program is expected to run in, is defined in Promela, translated to a model checker program by Spin, and linked with the program acting as system under verification. In this article, we summarise the practical advantages of MDCC which motivate its use in an industrial setting and discuss the challenges to its broader adoption. Environment models exhibit heavily intertwined Promela and C code statements, which make them hard to write and understand. We propose a high-level language for verification harness definition which hides the Spin engine under the hood. A small number of language concepts is sufficient to define verification harnesses for commonly encountered C programs. Widening the scope of the approach, we provide means to verify programs that exhibit internal state and extend the set of checked properties beyond classical assertions to those checked by LLVM/Clang code sanitizers. Thus, a user can focus on finding the best solution to combine exhaustive exploration of the environment with testing strategies. Our approach is prototypically integrated into mbeddr development platform. We present its instantiation on real-world code examples and discuss our experiences gained with the verification of software from the railway domain.
C1 [Ratiu, Daniel; Ulrich, Andreas] Siemens, Corp Technol, Munich, Germany.
C3 Siemens AG; Siemens Germany
RP Ratiu, D (corresponding author), Siemens, Corp Technol, Munich, Germany.
EM daniel.ratiu@siemens.com; andreas.ulrich@siemens.com
CR [Anonymous], 2018, CLANG COMP US MAN
   [Anonymous], 2014, ERTMS ETCS BAS 3 SYS
   [Anonymous], 2013, DSL ENG
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Beyer D., 2016, INT C TOOLS ALG CONS
   Beyer D., 2017, HARDWARE SOFTWARE VE
   Beyer D., 2011, COMPUTER AIDED VERIF
   Brezocnik Z., 2014, INT S MOD CHECK SOFT
   Campagne F., 2014, The MPS Language Workbench, VI.
   Clarke Edmund, 2004, TOOLS ALGORITHMS CON
   de Vos B., 2011, INT WORKSH MOD CHECK
   Donaldson A. F., 2005, WORKSH MOD CHECK SOF
   Felderer M, 2016, ADV COMPUT, V101, P1, DOI 10.1016/bs.adcom.2015.11.003
   GARCIAMOLINA H, 1982, IEEE T COMPUT, V31, P48, DOI 10.1109/TC.1982.1675885
   Groce A., 2008, INT WORKSH DYN AN WO
   Groce A., 2015, NASA FORMAL METHODS
   Holmes J, 2018, INT J SOFTW TOOLS TE, V20, P57, DOI 10.1007/s10009-016-0445-y
   Holzmann G, 2011, The SPIN Model Checker: Primer and Reference Manual
   Holzmann G. J., 2004, WORKSH MOD CHECK SOF
   Holzmann GJ, 2008, AUTOMAT SOFTW ENG, V15, P283, DOI 10.1007/s10515-008-0033-9
   Kuhn DR, 2015, ADV COMPUT, V99, P1, DOI 10.1016/bs.adcom.2015.05.003
   Lattner C., 2004, INT S COD GEN OPT
   Mali Y., 2011, WORKSH MOD CHECK SOF
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Molotnikov Z., 2014, INT C AUT SOFTW ENG
   PierreMeyer RichardChavagnat F. B, 2011, P 9 WORLD C RAILW RE
   Ratiu D., 2017, INT SPIN S MOD CHECK
   Ratiu D., 2013, NASA FORM METH S NFM
   Ruys T. C., 2000, INT WORKSH SPIN MOD
   Serebryany Konstantin, 2012, P USENIX ANN TECHNIC
   Stepanov Evgeniy, 2015, INT S COD GEN OPT CG
   Stephan Horn O. P, 2017, EISENBAHNTECHNISCHE
   Sulzmann M., 2012, INT WORKSH MOD CHECK
   Synopsys Inc., 2018, STAT APPL SEC TEST C
   The MathWorks Inc., 2018, POL MAK CRIT COD SAF
   Voelter M, 2013, AUTOMAT SOFTW ENG, V20, P339, DOI 10.1007/s10515-013-0120-4
   Volter Markus, 2017, SOFTW SYST MODEL, P1
   Yatake K., 2010, INT C MOD CHECK SOFT
   Yu L., 2013, INT C SOFTW TEST VER
   Zalewski M, 2018, American Fuzzy Lop
NR 40
TC 2
Z9 3
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2019
VL 21
IS 3
SI SI
BP 267
EP 286
DI 10.1007/s10009-019-00510-w
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY4RT
UT WOS:000468116300003
DA 2024-07-18
ER

PT J
AU Banach, R
AF Banach, Richard
TI The landing gear system in multi-machine Hybrid Event-B
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 4th International Conference on Abstract State Machines, Alloy, B,
   TLA,VDM, and Z (ABZ)
CY JUN 02-06, 2014
CL Toulouse, FRANCE
SP Airbus, CNES, CNRS, CRITT Informatique, CS, ENSEEIHT Toulouse, FME, INP Toulouse, IRIT, Midi Pyrenees Regi, ONERA, SCCH, Univ Paul Sabatier Toulouse
DE Hybrid Event-B; Landing gear case study; Refinement; Multicomponent
   systems
ID MECHANICAL GENERATION; REACTIVE SYSTEMS; FAULT-TREES; RETRENCHMENT;
   REFINEMENT; CIRCUITS
AB A system development case study problem based on a set of aircraft landing gear is examined in Hybrid Event-B (an extension of Event-B that includes provision for continuously varying behaviour as well as the usual discrete changes of state). Although tool support for Hybrid Event-B is currently lacking, the complexity of the case study provides a valuable challenge for the expressivity and modelling capabilities of the Hybrid Event-B formalism. The size of the case study, and in particular, the number of overtly independent subcomponents that the problem domain contains, both significantly exercise the multi-machine and coordination capabilities of the modelling formalism. These aspects of the case study, vital in the development of realistic cyberphysical systems in general, have contributed significant improvements in the theoretical formulation of multi-machine Hybrid Event-B itself.
C1 [Banach, Richard] Univ Manchester, Sch Comp Sci, Oxford Rd, Manchester M13 9PL, Lancs, England.
C3 University of Manchester
RP Banach, R (corresponding author), Univ Manchester, Sch Comp Sci, Oxford Rd, Manchester M13 9PL, Lancs, England.
EM banach@cs.man.ac.uk
CR Akers A., 2010, HYDRAULIC POWER SYST
   [Anonymous], 2009, VERIFICATION CONTROL
   [Anonymous], 2011, TRUSTW CYB STRAT PLA
   [Anonymous], 2010, LOGICAL ANAL HYBRID
   Banach R, 2008, J LOGIC ALGEBR PROGR, V75, P209, DOI 10.1016/j.jlap.2007.11.001
   Banach R, 2007, SCI COMPUT PROGRAM, V67, P301, DOI 10.1016/j.scico.2007.04.002
   Banach Richard, 2013, Theories of Programming and Formal Methods. Essays Dedicated to Jifeng He on the Occasion of His 70th Birthday. LNCS 8051, P37, DOI 10.1007/978-3-642-39698-4_3
   Banach R, 1998, LECT NOTES COMPUT SC, V1393, P129
   Banach R., 2014, CORE HYBRID EV UNPUB
   Banach R., 2013, LANDING GEAR SYSTEM
   Banach R., 2014, CCIS, V433, P126
   Banach R, 2015, SCI COMPUT PROGRAM, V105, P92, DOI 10.1016/j.scico.2015.02.003
   Banach R, 2015, MATH STRUCT COMP SCI, V25, P135, DOI 10.1017/S0960129514000061
   Banach R, 2014, LECT NOTES COMPUT SC, V8477, P271, DOI 10.1007/978-3-662-43652-3_23
   Banach R, 2013, FORM ASP COMPUT, V25, P573, DOI 10.1007/s00165-011-0202-7
   Banach R, 2013, FORM ASP COMPUT, V25, P609, DOI 10.1007/s00165-011-0203-6
   Banach R, 2011, FORM ASP COMPUT, V23, P113, DOI 10.1007/s00165-009-0139-2
   Barolli L, 2011, J AMB INTEL HUM COMP, V2, P249, DOI 10.1007/s12652-011-0062-2
   Beauquier D., 1997, TRLACL199715 U PAR 1
   Boniol F., 2014, ABZ CASE STUDY COMMU, V433
   Butler M, 2009, LECT NOTES COMPUT SC, V5423, P20
   Carloni LP, 2006, FOUND TRENDS ELECTRO, V1, P1, DOI 10.1561/1000000001
   Davoren JM, 2009, LECT NOTES COMPUT SC, V5469, P135, DOI 10.1007/978-3-642-00602-9_10
   Hallerstede Stefan, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P223, DOI 10.1007/978-3-642-30885-7_16
   Ionel I., 1986, PUMPS AND PUMPING
   Jeffords R, 2009, LECT NOTES COMPUT SC, V5850, P173, DOI 10.1007/978-3-642-05089-3_12
   Le Guilly T., 2014, P FASDS 14 IN PRESS
   Manring N., 2005, HYDRAULIC CONTROL SY
   Quesel JD, 2011, LECT NOTES COMPUT SC, V6919, P160, DOI 10.1007/978-3-642-24310-3_12
   RICHARD BANACH, 2015, THE LANDING
   Silva R, 2011, SOFTWARE PRACT EXPER, V41, P199, DOI 10.1002/spe.1002
   Sztipanovits Janos, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, DOI 10.1007/978-3-642-21437-0_1
   U.S. Department of Transportation Federal Aviation Administration, 2012, FLIGHT STAND SERV AV
NR 33
TC 7
Z9 7
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2017
VL 19
IS 2
BP 205
EP 228
DI 10.1007/s10009-015-0409-7
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA EQ6BQ
UT WOS:000398167200005
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Lamprecht, AL
   Steffen, B
   Margaria, T
AF Lamprecht, Anna-Lena
   Steffen, Bernhard
   Margaria, Tiziana
TI Scientific workflows with the jABC framework
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Scientific workflows; Model-driven design; Workflow modeling; Process
   modeling; Loose programming; Automatic workflow composition
ID WEB SERVICES; BIO-JETI; DESIGN; INTEGRATION; TAVERNA; TOOL; MANAGEMENT;
   ALIGNMENT; SOFTWARE; PLATFORM
AB The jABC is a framework for process modelling and execution according to the XMDD (eXtreme model-driven design) paradigm, which advocates the rigorous use of user-level models in the software development process and software life cycle. We have used the jABC in the domain of scientific workflows for more than a decade now-an occasion to look back and take stock of our experiences in the field. On the one hand, we discuss results from the analysis of a sample of nearly 100 scientific workflow applications that have been implemented with the jABC. On the other hand, we reflect on our experiences and observations regarding the workflow development process with the framework. We then derive and discuss ongoing further developments and future perspectives for the framework, all with an emphasis on simplicity for end users through increased domain specificity. Concretely, we describe how the use of the PROPHETS synthesis plugin can enable a semantics-based simplification of the workflow design process, how with the jABC4 and DyWA frameworks more attention is paid to the ease of data management, and how the Cinco SCCE Meta-Tooling Suite can be used to generate tailored workflow management tools.
C1 [Lamprecht, Anna-Lena; Margaria, Tiziana] Univ Limerick, Lero Irish Software Res Ctr, Limerick, Ireland.
   [Steffen, Bernhard] TU Dortmund Univ, Chair Programming Syst, Dortmund, Germany.
C3 University of Limerick; Dortmund University of Technology
RP Lamprecht, AL (corresponding author), Univ Limerick, Lero Irish Software Res Ctr, Limerick, Ireland.
EM anna-lena.lamprecht@lero.ie; steffen@cs.tu-dortmund.de;
   tiziana.margaria@lero.ie
RI Margaria, Tiziana/AAO-2272-2021
OI Margaria, Tiziana/0000-0002-5547-9739
FU Science Foundation Ireland [13/RC/2094]; European Regional Development
   Fund through the Southern & Eastern Regional Operational Program
FX Many thanks go to our students and cooperation partners for all the
   scientific workflow applications that would not have been implemented
   without them. We also thank Alexander Wickert for his assistance in the
   process modelling courses and for his contributions to the service usage
   analysis functionality of jABC stats. This work was supported, in part,
   by Science Foundation Ireland Grant 13/RC/2094 and co-funded under the
   European Regional Development Fund through the Southern & Eastern
   Regional Operational Program to Lero-the Irish Software Research Centre
   (www.lero.ie).
CR Al-areqi S., 2014, INT ENV MOD SOFTW SO
   [Anonymous], 2012, CONQUERING COMPLEXIT
   [Anonymous], 1993, Technical Report
   [Anonymous], P 6 INT S LEV APPL F
   [Anonymous], 2008, HOLE FILLED SRTM GLO
   [Anonymous], 2004, XP Ser
   [Anonymous], 2013, CONSTRUCTION EVOLUTI
   [Anonymous], 2009, HDB RES BUSINESS PRO
   [Anonymous], 1997, ANN REV COMMUN ACM
   Bajohr M., 2005, MATRICS SERVICE BASE, V2, P99
   Bajohr M, 2008, COMM COM INF SC, V17, P572
   Bakera M, 2009, INNOV SYST SOFTW ENG, V5, P211, DOI 10.1007/s11334-009-0091-6
   Bakera M, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P172, DOI 10.1109/ICECCS.2009.51
   Barnes D., 2009, OBJECTS 1 JAVA PRACT
   Bevan N., 2011, DAGST SEM DEM US EXP
   Bhagat J, 2010, NUCLEIC ACIDS RES, V38, pW689, DOI 10.1093/nar/gkq394
   Blankenberg Daniel, 2010, Curr Protoc Mol Biol, VChapter 19, DOI 10.1002/0471142727.mb1910s89
   Blum Niklas, 2009, 2009 14th IEEE International Conference on Engineering of Complex Computer Systems (ICECCS 2009), P240, DOI 10.1109/ICECCS.2009.34
   Bordihn H., 2015, P 1 WORKSH FORM METH, V1385, P19
   Borner J., 2010, THESIS
   Callahan S.P., 2006, PROC INT C DATA ENG, P71
   CARRIERO NJ, 1994, PARALLEL COMPUT, V20, P633, DOI 10.1016/0167-8191(94)90032-9
   Clarke EM, 1999, MODEL CHECKING, P1
   CLEAVELAND R, 1993, ACM T PROGR LANG SYS, V15, P36, DOI 10.1145/151646.151648
   Curcin V, 2009, CLUSTER COMPUT, V12, P399, DOI 10.1007/s10586-009-0099-6
   Deelman E., 2005, Scientific Programming, V13, P219
   DiBernardo M, 2008, J BIOMED INFORM, V41, P837, DOI 10.1016/j.jbi.2008.02.005
   Ebert BE, 2012, METABOLITES, V2, P872, DOI 10.3390/metabo2040872
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Frohme M., 2013, THESIS
   Garijo D., 2013, FUTURE GENE IN PRESS
   Ghanem M., 2009, BUILDING USING ANAL, P119
   Giegerich R, 1996, Proc Int Conf Intell Syst Mol Biol, V4, P68
   Gil Y., 2007, Proceedings of the National Conference on Artificial Intelligence, V22, P1767
   Goble CA, 2010, NUCLEIC ACIDS RES, V38, pW677, DOI 10.1093/nar/gkq429
   Hagemeier D., 2006, THESIS
   Hörmann M, 2008, COMM COM INF SC, V17, P724
   Huhns MN, 2005, IEEE INTERNET COMPUT, V9, P75, DOI 10.1109/MIC.2005.21
   Hull D, 2006, NUCLEIC ACIDS RES, V34, pW729, DOI 10.1093/nar/gkl320
   Isberner M, 2014, MACH LEARN, V96, P65, DOI 10.1007/s10994-013-5419-7
   Ison J., 2013, BIOINFORMATICS
   Jörges S, 2008, INNOV SYST SOFTW ENG, V4, P361, DOI 10.1007/s11334-008-0071-2
   Jonsson B., 2001, Nordic Journal of Computing, V8, P65
   Jorges Sven, 2012, International Journal on Software Tools for Technology Transfer, V14, P511, DOI 10.1007/s10009-012-0254-x
   Karlsson J, 2010, LECT NOTES COMPUT SC, V6415, P328, DOI 10.1007/978-3-642-16558-0_28
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kriewald S., 2013, SRTMTOOLS SRTM TOOLS
   Kubczak C., 2008, SERVICE ORIENTED MED
   Kubczak C., 2006, P 2 INT S LEV APPL F, P308
   Kubczak C, 2007, PROCEEDING OF THE 2007 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE AND INTELLIGENT AGENT TECHNOLOGY, WORKSHOPS, P144, DOI 10.1109/WI-IATW.2007.27
   Lamprecht Anna-Lena, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P47, DOI 10.1007/978-3-642-34026-0_5
   Lamprecht A.-L., 2010, P 3 INT WORKSH SEM W, V698
   Lamprecht A.-L., 2008, CEUR WORKSHOP P, V435
   Lamprecht A.-L., 2010, ENCY SOFTWARE ENG, V11, P118, DOI [10.1081/E-ESE-120044612, DOI 10.1081/E-ESE-120044612]
   Lamprecht A.-L., 2013, LECT NOTES COMPUTER, V8311
   Lamprecht AL, 2014, COMM COM INF SC, V500, P1, DOI 10.1007/978-3-662-45006-2
   Lamprecht AL, 2008, LECT N BIOINFORMAT, V4983, P445, DOI 10.1007/978-3-540-79450-9_42
   Lamprecht AL, 2015, PROCEDIA COMPUT SCI, V51, P1927, DOI 10.1016/j.procs.2015.05.457
   Lamprecht Anna-Lena, 2011, J Biomed Semantics, V2 Suppl 1, pS5, DOI 10.1186/2041-1480-2-S1-S5
   Lamprecht AL, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P262, DOI 10.1109/QUATIC.2010.53
   Lamprecht AL, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-S10-S8
   Lamprecht AL, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-S4-S13
   Lis M., 2014, CCIS, V500
   Littauer R., 2011, 7 INT DIG CUR C
   Ludäscher B, 2006, CONCURR COMP-PRACT E, V18, P1039, DOI 10.1002/cpe.994
   Margaria T, 2005, LECT NOTES COMPUT SC, V3826, P450
   Margaria T, 2005, LECT NOTES COMPUT SC, V3440, P557
   Margaria T., 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P194, DOI 10.1109/COMPSACW.2011.42
   Margaria T, 1998, LECT NOTES COMPUT SC, V1382, P188, DOI 10.1007/BFb0053591
   Margaria T., 2002, P IFIP C KNOWL SOC E, P497
   Margaria T., 2007, SERVICE IS EYES BEHO
   Margaria T., 2012, CONQUERING COMPLEXIT, P407
   Margaria T., 2014, LNCS, V8803
   Margaria T, 2006, IEEE INT C ENG COMP, P169
   Margaria T, 2010, COMPUTER, V43, P90, DOI 10.1109/MC.2010.177
   Margaria T, 2009, COMPUTER, V42, P106, DOI 10.1109/MC.2009.315
   Margaria T, 2008, COMM COM INF SC, V17, P490
   Margaria T, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-S4-S12
   Martín-Requena V, 2010, BIOINFORMATICS, V26, P553, DOI 10.1093/bioinformatics/btp709
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Migliorini S., 2011, Pattern-based Evaluation of Scientific Workflow Management Systems
   Müller-Olm M, 1999, LECT NOTES COMPUT SC, V1694, P330
   Naujokat S., 2015, CINCO SIMPL IN PRESS
   Naujokat S., 2015, FULL GENERATIO UNPUB
   Naujokat S, 2012, LECT NOTES COMPUT SC, V7212, P94, DOI 10.1007/978-3-642-28872-2_7
   Neubauer J, 2014, TECHNICAL REPORT
   Neubauer J., 2013, FORMAL METHODS IND C, P153
   Neubauer J. W., 2014, THESIS
   Neubauer J, 2014, LECT NOTES COMPUT SC, V8802, P56, DOI 10.1007/978-3-662-45234-9_5
   Neubauer J, 2013, ELECTRON P THEOR COM, P259, DOI 10.4204/EPTCS.129.16
   Oinn T, 2006, CONCURR COMP-PRACT E, V18, P1067, DOI 10.1002/cpe.993
   Pautasso C, 2004, INT J ELECTRON COMM, V9, P107, DOI 10.1080/10864415.2005.11044328
   Qin J., 2012, Scientific Workflows: Programming, Optimization, and Synthesis with ASKALON and AWDL
   Resnick M, 2009, COMMUN ACM, V52, P60, DOI 10.1145/1592761.1592779
   Reso J, 2014, CCIS, V500
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schutt C, 2014, CCIS, V500
   Simon M. H., 2014, THESIS
   Smith CA, 2006, ANAL CHEM, V78, P779, DOI 10.1021/ac051437y
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Steffen B, 1996, SOFTWARE-CONC TOOL, V17, P78
   Steffen B., 1997, International Journal on Software Tools for Technology Transfer, V1, P9, DOI 10.1007/s100090050003
   Steffen B, 1999, LECT NOTES COMPUT SC, V1710, P390
   Steffen B., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P450
   Steffen B., 2010, ROUND TRIP ENG, P1044, DOI [10.1081/E-ESE-120044648, DOI 10.1081/E-ESE-120044648]
   Steffen B, 2007, LECT NOTES COMPUT SC, V4383, P92
   Steffen B, 2011, LECT NOTES COMPUT SC, V6659, P256, DOI 10.1007/978-3-642-21455-4_8
   Steffen Bernhard, 1997, ACM SIGPLAN INT WORK
   Taylor I., 2007, WORK E SCI SCI WORK, P320, DOI DOI 10.1007/978-1-84628-757-2_20
   van der Aalst WMP, 2006, LECT NOTES COMPUT SC, V4184, P1
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Vierheller J., 2014, CCIS, V500
   vonderBeeck M, 1997, LECT NOTES COMPUT SC, V1217, P112, DOI 10.1007/BFb0035384
   Wassink I, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P314, DOI 10.1109/SERVICES-I.2009.48
   Wickert A, 2014, LECT NOTES COMPUT SC, V8803, P449, DOI 10.1007/978-3-662-45231-8_35
   Wiechert W, 2001, METAB ENG, V3, P195, DOI 10.1006/mben.2001.0187
   Wilkinson MD, 2011, J BIOMED SEMANT, V2, DOI 10.1186/2041-1480-2-8
   Wilkinson Mark D, 2002, Brief Bioinform, V3, P331, DOI 10.1093/bib/3.4.331
   Wilkinson MD, 2009, 2009 IEEE ASIA-PACIFIC SERVICES COMPUTING CONFERENCE (APSCC 2009), P13, DOI 10.1109/APSCC.2009.5394148
   Windmuller S., 2013, P 16 INT ACM SIGS S, P111, DOI [10.1145/2465449.2465469, DOI 10.1145/2465449.2465469]
   Wing JM, 2006, COMMUN ACM, V49, P33, DOI 10.1145/1118178.1118215
   Withers D, 2010, LECT NOTES COMPUT SC, V6415, P301, DOI 10.1007/978-3-642-16558-0_26
   Wolstencroft K, 2013, NUCLEIC ACIDS RES, V41, pW557, DOI 10.1093/nar/gkt328
   Wrobel M, 2013, IFIP ADV INF COMM TE, V413, P489
   Yu J, 2005, SIGMOD REC, V34, P44, DOI 10.1145/1084805.1084814
   Zamboni N, 2005, BMC BIOINFORMATICS, V6, DOI 10.1186/1471-2105-6-209
NR 127
TC 4
Z9 4
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2016
VL 18
IS 6
BP 629
EP 651
DI 10.1007/s10009-016-0427-0
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DY5YK
UT WOS:000385180700005
DA 2024-07-18
ER

PT J
AU Kutsuna, T
   Ishii, Y
   Yamamoto, A
AF Kutsuna, Takuro
   Ishii, Yoshinao
   Yamamoto, Akihiro
TI Abstraction and refinement of mathematical functions toward SMT-based
   test-case generation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
AB We propose a novel approach for generating test cases of software that includes mathematical functions, such as trigonometric functions, logarithmic functions, functions implemented as look-up tables with non-linear interpolation, and so on. A satisfiability modulo theories (SMT) solver is iteratively used to generate test cases in the scheme of bounded model checking. In the proposed method, mathematical functions are abstracted so that the derived formula can be easily treated using an SMT solver. The abstraction is refined adaptively based on the previous counterexamples. We also propose a general method to estimate an abstraction of a mathematical function by means of sampling and machine learning. Although the method proposed in this paper addresses mainly the topic of test-case generation, it is also applicable to ordinary bounded model checking under the assumption that the abstraction should be a correct over-approximation. We evaluated the proposed method by applying it to an example of embedded control software taken from the automotive industry. The experimental results show the usefulness of the proposed method.
C1 [Kutsuna, Takuro; Ishii, Yoshinao] Toyota Cent Res & Dev Labs Inc, 41-1 Yokomichi, Nagakute, Aichi, Japan.
   [Yamamoto, Akihiro] Kyoto Univ, Sakyo Ku, Yoshida Honmachi, Kyoto, Japan.
C3 Toyota Central R&D Labs Inc; Kyoto University
RP Kutsuna, T (corresponding author), Toyota Cent Res & Dev Labs Inc, 41-1 Yokomichi, Nagakute, Aichi, Japan.
EM kutsuna@mosk.tytlabs.co.jp
RI Kutsuna, Takuro/Q-5626-2019; Ishii, Yoshinao/ABA-8462-2021
OI Kutsuna, Takuro/0000-0001-6965-1512; Ishii, Yoshinao/0000-0003-4364-3551
CR Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], 2008, P 8 ACM IEEE INT C E
   [Anonymous], MATLAB AND SIM
   Barrett Clark, 2010, P 8 INT WORKSH SAT M
   Barrett Clark., SATISFIABILITY MODUL
   Bengtsson H., 2013, RBASIC R CLASS LIB S
   Bertsekas D. P., 1999, Nonlinear Program, V2nd
   Borges M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P111, DOI 10.1109/ICST.2012.91
   Brady B. A., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P116
   Brady Bryan A., 2010, 2010 8th IEEE/ACM International Conference on Formal Methods and Models for Codesign (MEMOCODE 2010), P31, DOI 10.1109/MEMCOD.2010.5558624
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Clarke E., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P265
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Hayhurst Kelly J., 2001, TECHNICAL REPORT
   He NN, 2011, DES AUT CON, P224
   Jaulin L., 2001, Applied Interval Analysis, DOI 10.1007/978-1-4471-0249-6
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Nedialkov NS, 2004, NUMER ALGORITHMS, V37, P325, DOI 10.1023/B:NUMA.0000049478.42605.cf
   Peranandam P, 2012, DES AUT TEST EUROPE, P308
   R Development Core Team, 2011, R LANG ENV STAT COMP
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Therneau TerryM., 2011, RPART RECURSIVE PART
   Yeolekar A, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P184, DOI 10.1109/ICST.2013.29
NR 27
TC 3
Z9 3
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2016
VL 18
IS 1
BP 109
EP 120
DI 10.1007/s10009-015-0389-7
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB7SL
UT WOS:000368716200007
DA 2024-07-18
ER

PT J
AU Lassaigne, R
   Peyronnet, S
AF Lassaigne, Richard
   Peyronnet, Sylvain
TI Approximate planning and verification for large Markov decision
   processes
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Probabilistic verification; Machine learning; Markov decision processes
ID ALGORITHMS; COMPLEXITY
AB We focus on the planning and verification problems for very large probabilistic systems, such as Markov decision processes (MDPs), from a complexity point of view. More precisely, we deal with the problem of designing an efficient approximation method to compute a near-optimal policy for the planning problem in discounted MDPs and the satisfaction probabilities of interesting properties, like reachability or safety, over the Markov chain obtained by restricting the MDP to the near-optimal policy. In this paper, we present two different approaches. The first one is based on sparse sampling while the second uses a variant of the multiplicative weights update algorithm. The complexity of the first approximation method is independent of the size of the state space and uses only a probabilistic generator of the MDP. We give a complete analysis of this approach, for which the control parameter is mainly the targeted quality of the approximation. The second approach is more prospective and is different in the sense that the method can be controlled dynamically by observing its speed of convergence. Parts of this paper have already been presented in Lassaigne and Peyronnet (in Proceedings of the ACM Symposium on applied computing, SAC 2012, pp 1314-1319, ACM 2012), by the same authors.
C1 [Lassaigne, Richard; Peyronnet, Sylvain] Univ Paris 07, Log Math IMJ, F-75251 Paris, France.
   [Lassaigne, Richard; Peyronnet, Sylvain] CNRS, Paris Ctr, F-75000 Paris, France.
   [Peyronnet, Sylvain] Ix Labs, Rouen, France.
C3 Universite Paris Cite; Centre National de la Recherche Scientifique
   (CNRS)
RP Peyronnet, S (corresponding author), Ix Labs, Rouen, France.
EM sylvain@ix-labs.org
CR Alur R, 1999, FORM METHOD SYST DES, V15, P7, DOI 10.1023/A:1008739929481
   Andrea B., 1995, LECT NOTES COMPUTER, V1026, P499
   [Anonymous], 1994, Markov Decision Processes: Discrete Stochastic Dynamic Programming
   [Anonymous], 1960, DYNAMIC PROGRAMMING
   Arora Sanjeev, 2012, THEORY COMPUTING
   Auer P, 2002, MACH LEARN, V47, P235, DOI 10.1023/A:1013689704352
   Bertsekas DP, 1999, J HEURISTICS, V5, P89, DOI 10.1023/A:1009634810396
   Chang HS, 2007, COMMUN INF SYST, V7, P59
   COURCOUBETIS C, 1995, J ASSOC COMPUT MACH, V42, P857, DOI 10.1145/210332.210339
   Fearnley J, 2010, LECT NOTES COMPUT SC, V6199, P551, DOI 10.1007/978-3-642-14162-1_46
   Friedmann O, 2009, IEEE S LOG, P145, DOI 10.1109/LICS.2009.27
   Guirado G, 2006, ELECTRON NOTES THEOR, V135, P19, DOI 10.1016/j.entcs.2005.10.016
   Hamidouche K., 2010, P PAR DISTR MOD CHEC
   Hansen Thomas Dueholm., 2011, ICS 2011, P253
   Henriques D., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P84, DOI 10.1109/QEST.2012.19
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   Hérault T, 2006, INT CONF QUANT EVAL, P129
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Karp R. M., 1983, 24th Annual Symposium on Foundations of Computer Science, P56, DOI 10.1109/SFCS.1983.35
   Kearns M, 2002, MACH LEARN, V49, P193, DOI 10.1023/A:1017932429737
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lassaigne R., 2012, SAC, P1314
   Lassaigne R, 2008, ANN PURE APPL LOGIC, V152, P122, DOI 10.1016/j.apal.2007.11.006
   Legay A., 2013, ARXIV13103609
   Segala R., 1995, Nordic Journal of Computing, V2, P250
   Tesauro G, 1997, ADV NEUR IN, V9, P1068
   Vardi M. Y., 1984, P 26 FDN COMP SCI FO, P327
   Ye YY, 2005, MATH OPER RES, V30, P733, DOI 10.1287/moor.1050.0149
NR 29
TC 8
Z9 8
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2015
VL 17
IS 4
BP 457
EP 467
DI 10.1007/s10009-014-0344-z
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM2BV
UT WOS:000357485500006
DA 2024-07-18
ER

PT J
AU David, A
   Larsen, KG
   Legay, A
   Mikucionis, M
   Poulsen, DB
   Sedwards, S
AF David, Alexandre
   Larsen, Kim G.
   Legay, Axel
   Mikucionis, Marius
   Poulsen, Danny Bogsted
   Sedwards, Sean
TI Statistical model checking for biological systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Statistical model checking; UPPAAL; Systems biology
ID SIMULATION
AB Statistical Model Checking (SMC) is a highly scalable simulation-based verification approach for testing and estimating the probability that a stochastic system satisfies a given linear temporal property. The technique has been applied to (discrete and continuous time) Markov chains, stochastic timed automata and most recently hybrid systems using the tool UPPAAL SMC. In this paper we enable the application of SMC to complex biological systems, by combining UPPAAL SMC with ANIMO, a plugin of the tool Cytoscape used by biologists, as well as with SimBiology (R), a plugin of MATLAB to simulate reactions. ANIMO and SimBiology (R) are two domain specific tools that have their own user interfaces and formalisms specifically tailored towards the biology domain. However-though providing means for simulation-both tools lack the powerful analytic capabilities offered by SMC, which in previous work have proved very useful for identifying interesting properties of biological systems. Our aim is to offer the best of the two worlds: optimal domain specific interfaces and formalisms suited to biology combined with powerful SMC analysis techniques for stochastic and hybrid systems. This goal is obtained by developing translators from the XGMML and SBML formats used by Cytoscape and SimBiology (R) to stochastic and hybrid automata, allowing UPPAAL SMC to be used as an efficient backend analysis tool, that we demonstrate can handle real-world biological systems by pitting it against the BioModels database. We present detailed analysis on two particular case-studies involving the ANIMO and SimBiology (R) tools.
C1 [David, Alexandre; Larsen, Kim G.; Legay, Axel; Mikucionis, Marius; Poulsen, Danny Bogsted] Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
   [Legay, Axel; Sedwards, Sean] INRIA Rennes Bretagne Atlantique, Rennes, France.
C3 Aalborg University; Universite de Rennes
RP Legay, A (corresponding author), Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
EM axel.legay@inria.fr
RI Mikucionis, Marius/AAF-7969-2020
OI Guldstrand Larsen, Kim/0000-0002-5953-3384; Mikucionis,
   Marius/0000-0001-8157-5428; Poulsen, Danny Bogsted/0000-0001-9623-0748
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], P 2012 IEEE 12 INT C
   [Anonymous], SYST BIOL
   Barkai N, 2000, NATURE, V403, P267, DOI 10.1038/35002258
   Basu A, 2010, LECT NOTES COMPUT SC, V6117, P32, DOI 10.1007/978-3-642-13464-7_4
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Behrmann G, 2011, SOFTWARE PRACT EXPER, V41, P133, DOI 10.1002/spe.1006
   Bergmann FT, 2008, BIOINFORMATICS, V24, P1963, DOI 10.1093/bioinformatics/btn319
   Bulychev P., 2012, INT C RUNTIME VERIFI, P260
   Bulychev P, 2012, ELECTRON PROC THEOR, P1, DOI 10.4204/EPTCS.78.1
   Bulychev P, 2012, LECT NOTES COMPUT SC, V7180, P168, DOI 10.1007/978-3-642-28717-6_15
   David Alexandre, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P293, DOI 10.1007/978-3-642-34032-1_28
   David Alexandre, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P388, DOI 10.1007/978-3-642-34026-0_29
   David A, 2012, ELECTRON PROC THEOR, P122, DOI 10.4204/EPTCS.92.9
   David A, 2012, SCI CHINA INFORM SCI, V55, P2694, DOI 10.1007/s11432-012-4742-0
   David A, 2011, LECT NOTES COMPUT SC, V6919, P80, DOI 10.1007/978-3-642-24310-3_7
   GILLESPIE DT, 1977, J PHYS CHEM-US, V81, P2340, DOI 10.1021/j100540a008
   Hilborn RC, 2008, J THEOR BIOL, V253, P349, DOI 10.1016/j.jtbi.2008.03.012
   Jegourel C, 2012, LECT NOTES COMPUT SC, V7214, P498, DOI 10.1007/978-3-642-28756-5_37
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Schivo S., 2013, IEEE J BIOMED HEALTH, VPP, P1, DOI [10.1109/JBHI.2013, DOI 10.1109/JBHI.2013]
   Sen K, 2004, LECT NOTES COMPUT SC, V3114, P202
   Shannon P, 2003, GENOME RES, V13, P2498, DOI 10.1101/gr.1239303
   Vilar JMG, 2002, P NATL ACAD SCI USA, V99, P5988, DOI 10.1073/pnas.092133899
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
   Younes HLS, 2005, LECT NOTES COMPUT SC, V3576, P253
NR 27
TC 69
Z9 82
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2015
VL 17
IS 3
BP 351
EP 367
DI 10.1007/s10009-014-0323-4
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7NL
UT WOS:000355682600008
DA 2024-07-18
ER

PT J
AU Beyer, D
   Stahlbauer, A
AF Beyer, Dirk
   Stahlbauer, Andreas
TI BDD-based software verification Applications to event-condition-action
   systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Binary decision diagram; BDD; Symbolic model checking; Software model
   checking; Program analysis; Event-condition-action system; RERS
   challenge; Configurable software verification; CPA
ID MODEL-CHECKING; ABSTRACTION REFINEMENT; LANGUAGE; TOOL
AB In software model checking, most successful symbolic approaches use predicates as representation of the state space, and SMT solvers for computations on the state space; BDDs are often used as auxiliary data structure. Although BDDs are applied with great success in hardware verification, BDD representations of software state spaces were not yet thoroughly investigated, mainly because not all operations that are needed in software verification are efficiently supported by BDDs. We evaluate the use of a pure BDD representation of integer values, and focus on a particular class of programs: event-condition-action (ECA) programs with limited operations. A symbolic representation using BDDs seems appropriate for ECA programs under certain conditions. We configure a program analysis based on BDDs and experimentally compare it to four approaches to verify reachability properties of ECA programs: an explicit-value analysis, a symbolic bounded-loops analysis, a predicate-abstraction analysis, and a predicate-impact analysis. The results show that BDDs are efficient for a restricted class of programs, which yields the insight that BDDs could be used selectively for variables that are restricted to certain program operations (according to the variable's domain type), even in general software model checking. We show that even a naive portfolio approach, in which after a pre-analysis either a BDD-based analysis or a predicate-impact analysis is performed, outperforms all above-mentioned analyses.
C1 [Beyer, Dirk; Stahlbauer, Andreas] Univ Passau, D-94032 Passau, Germany.
C3 University of Passau
RP Beyer, D (corresponding author), Univ Passau, D-94032 Passau, Germany.
RI Beyer, Dirk/R-2534-2017
OI Beyer, Dirk/0000-0003-4832-7662
CR Anderson R., 1996, IEEE Transactions on Software Engineering (TSE), V24, P156
   [Anonymous], 1957, J. Symb. Log., DOI DOI 10.2307/2963593
   [Anonymous], 1990, LICS, DOI DOI 10.1109/LICS.1990.113767
   [Anonymous], STTT
   [Anonymous], 1992, CMUCS92131
   Antos D., 2013, LNCS, P1, DOI DOI 10.1007/978-3-642-36046-6
   Apel Sven, 2013, Hardware and Software: Verification and Testing. 9th International Haifa Verification Conference, HVC 2013. Proceedings: LNCS 8244, P262, DOI 10.1007/978-3-319-03077-7_18
   Ball Thomas., 2001, Tools and Algorithms for the Construction and Analysis of Systems, Lecture Notes in Computer Science, V2031, P268, DOI [DOI 10.1007/3-540-45319-9_19, 10.1007/3-540-45319-9_19]
   Berndl M, 2003, ACM SIGPLAN NOTICES, V38, P103, DOI 10.1145/780822.781144
   Beyer D, 2003, LECT NOTES COMPUT SC, V2767, P193
   Beyer Dirk, 2013, Tools and Algorithms for the Construction and Analysis of Systems. 19th International Conference, TACAS 2013 Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2013. Proceedings, P594, DOI 10.1007/978-3-642-36742-7_43
   Beyer D, 2003, LECT NOTES COMPUT SC, V2725, P122
   Beyer D., 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P189
   Beyer Dirk, 2009, Proceedings of the 2009 9th International Conference Formal Methods in Computer-Aided Design (FMCAD), P25, DOI 10.1109/FMCAD.2009.5351147
   Beyer D., 2006, 28th International Conference on Software Engineering Proceedings, P807, DOI 10.1145/1134285.1134420
   Beyer Dirk, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P29, DOI 10.1109/ASE.2008.13
   BEYER D, 2011, LECT NOTES COMPUTER, V6806, P184, DOI DOI 10.1007/978-3-642-22110-1
   Beyer D., 2014, Tools and Algorithms for the Con- struction and Analysis of Systems, P373
   BEYER D, 2001, LNCS, V2021, P318
   Beyer D, 2007, LECT NOTES COMPUT SC, V4590, P504
   Beyer D, 2013, LECT NOTES COMPUT SC, V7793, P146, DOI 10.1007/978-3-642-37057-1_11
   Beyer D, 2012, PROCEEDINGS OF THE 12TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2012), P106
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Blom S, 2010, LECT NOTES COMPUT SC, V6174, P354
   Bollig B, 1996, IEEE T COMPUT, V45, P993, DOI 10.1109/12.537122
   Bozga M, 1998, LECT NOTES COMPUT SC, V1427, P546, DOI 10.1007/BFb0028779
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   BRYANT RE, 1991, IEEE T COMPUT, V40, P205, DOI 10.1109/12.73590
   Burch J. R., 1990, 27th ACM/IEEE Design Automation Conference. Proceedings 1990 (Cat. No.90CH2894-4), P46, DOI 10.1109/DAC.1990.114827
   Campos S, 1997, LECT NOTES COMPUT SC, V1231, P64
   Cimatti Alessandro, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P310, DOI 10.1007/978-3-642-22110-1_24
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   CIMATTI A, 1999, LECT NOTES COMPUTER, V1633, P495, DOI DOI 10.1007/3-540-48683-6_44
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Esparza J, 2006, LECT NOTES COMPUT SC, V3920, P489
   Esparza J., 2008, P FORM LOG METH SYST, P53
   Henzinger TA, 2004, ACM SIGPLAN NOTICES, V39, P232, DOI 10.1145/982962.964021
   Henzinger TA, 2002, ACM SIGPLAN NOTICES, V37, P58, DOI 10.1145/565816.503279
   Howar Falk, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P608, DOI 10.1007/978-3-642-34026-0_45
   Howar F, 2014, INT J SOFTW TOOLS TE, V16, P457, DOI 10.1007/s10009-014-0337-y
   Ivancic F, 2005, PR IEEE COMP DESIGN, P297, DOI 10.1109/ICCD.2005.77
   Lerda F., 2003, Electronic Notes in Theoretical Computer Science, V89, DOI 10.1016/S1571-0661(05)80008-8
   McMillan KL, 2006, LECT NOTES COMPUT SC, V4144, P123
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Steffen Bernhard, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P341, DOI 10.1007/978-3-642-39176-7_21
   Steffen B, 2014, INT J SOFTW TOOLS TE, V16, P465, DOI 10.1007/s10009-014-0336-z
   von Rhein A., 2011, P JAV PATHF WORKSH
NR 48
TC 21
Z9 23
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2014
VL 16
IS 5
BP 507
EP 518
DI 10.1007/s10009-014-0334-1
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HU
UT WOS:000209673300005
DA 2024-07-18
ER

PT J
AU Alnusair, A
   Zhao, T
   Yan, GJ
AF Alnusair, Awny
   Zhao, Tian
   Yan, Gongjun
TI Rule-based detection of design patterns in program code
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Design patterns; Design recovery; Software maintenance; Ontology
   formalisms; Knowledge representation; Semantic inference
AB The process of understanding and reusing software is often time-consuming, especially in legacy code and open-source libraries. While some core code of open-source libraries may be well-documented, it is frequently the case that open-source libraries lack informative API documentation and reliable design information. As a result, the source code itself is often the sole reliable source of information for program understanding activities. In this article, we propose a reverse-engineering approach that can provide assistance during the process of understanding software through the automatic recovery of hidden design patterns in software libraries. Specifically, we use ontology formalism to represent the conceptual knowledge of the source code and semantic rules to capture the structures and behaviors of the design patterns in the libraries. Several software libraries were examined with this approach and the evaluation results show that effective and flexible detection of design patterns can be achieved without using hard-coded heuristics.
C1 [Alnusair, Awny] Indiana Univ, Kokomo, IN 46904 USA.
   [Zhao, Tian] Univ Wisconsin, Milwaukee, WI 53201 USA.
   [Yan, Gongjun] Univ So Indiana, Evansville, IN 47712 USA.
C3 Indiana University System; Indiana University Kokomo; University of
   Wisconsin System; University of Wisconsin Milwaukee; University Southern
   Indiana
RP Alnusair, A (corresponding author), Indiana Univ, Kokomo, IN 46904 USA.
EM alnusair@iuk.edu; tzhao@uwm.edu; gyan@usi.edu
RI Fritola, Renato/AAU-4721-2021; Alnusair, Awny/AAY-5066-2020
OI Alnusair, Awny/0000-0001-9513-3022
CR Alnusair A, 2009, 2 INT WORKSH TRANSF
   Alnusair A., 2012, SOURCE CODE REPRESEN
   Balanyi Z, 2003, PROC IEEE INT CONF S, P305, DOI 10.1109/ICSM.2003.1235436
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Binun A, 2012, EUR CON SFTWR MTNCE, P245, DOI 10.1109/CSMR.2012.82
   Chen L., 2001, IEEE T KNOWL DATA EN, V19, P283
   Cinneide M. O., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P463, DOI 10.1109/ICSM.1999.792644
   De Lucia A, 2010, EUR CON SFTWR MTNCE, P176, DOI 10.1109/CSMR.2010.16
   De Lucia A, 2009, EUR CON SFTWR MTNCE, P99, DOI 10.1109/CSMR.2009.29
   Dietrich J, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P243, DOI 10.1109/ASWEC.2005.6
   Dietrich J., 2005, WORKSH SEM WEB EN SO, P117
   EMAMI M, 1994, SIGPLAN NOTICES, V29, P242, DOI 10.1145/773473.178264
   Falbo R.A., 2002, ACIS INT C COMP SCI, P311
   Ferenc R, 2005, PROC IEEE INT CONF S, P295
   Gamma E., 1995, Addison-Wesley Professional Computing Series
   Gruber T., 1993, KNOWL ACQUIS, V5, P192
   Gueheneuc Y.-G., 2007, P-mart: Pattern-like micro architecture repository
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Horrocks I, 2008, COMMUN ACM, V51, P58, DOI 10.1145/1409360.1409377
   JASPER R, 1999, IJCAI99 WORKSH ONT P
   Kirasic D, 2008, LECT NOTES ARTIF INT, V5177, P384, DOI 10.1007/978-3-540-85563-7_50
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Manola F, 2004, RDF PRIMER
   Motik B., 2009, OWL WEB ONTOLOGY LAN
   Motik B., 2008, Proceedings of the International World Wide Web Conference (WWW'08), P555
   NOY F, 2001, KSL0105
   O'Connor M. J., 2005, P 4 INT SEM WEB C GA
   Olson DL., 2008, Advanced data mining techniques, V1st, P138, DOI [10.1007/978-3-540-76917-0, DOI 10.1007/978-3-540-76917-0]
   Rasool G., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P243, DOI 10.1109/ASE.2011.6100060
   Sartipi K., 2008, P 12 INT C SOFTW ENG, P179
   Seaborne A., 2008, SPARQL Query Language for RDF
   Shi N, 2006, IEEE INT CONF AUTOM, P123
   SIRIN E, 2007, SOFTWARE ENG SEMANTI, V5, P51, DOI DOI 10.1016/J.WEBSEM.2007.03.004
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Uschold M, 1998, FR ART INT, V46, P179
   Wang W, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P165
NR 36
TC 27
Z9 29
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2014
VL 16
IS 3
BP 315
EP 334
DI 10.1007/s10009-013-0292-z
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HS
UT WOS:000209673100007
DA 2024-07-18
ER

PT J
AU Grossmann, J
AF Grossmann, Juergen
TI Testing hybrid systems with <i>TTCN-3 embedded</i>
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Hybrid systems; Testing; Standardization; TTCN-3; Automotive
AB A testing language typically provides a set of test automation statements that allows for a systematic definition and automatic application of stimulation data (i.e. messages or signals) to a system under test. Moreover, it eases the assessment of the system's reaction by providing customizable evaluation statements and functions. TTCN-3, the Testing and Test Control Notation, already provides universal and powerful concepts to describe tests for discrete, message-based systems. However, software-based control systems that are used to control physical processes often show continuous quantities that can be only poorly stimulated and assessed by means of the currently available language constructs in TTCN-3. In this article, we show how this problem can be solved by extending the TTCN-3 language. We introduce an extension of TTCN-3, namely TTCN-3 embedded, that provides concepts and constructs that directly address the specification of tests for continuous and hybrid real time systems. The extension includes the notion of streams that can be used to represent continuous quantities over time. In addition, TTCN-3 has been extended with the concepts of stream-based ports, sampling, equation systems, and with additional control flow structures. The concepts are integrated with standard TTCN-3 and allow for defining test cases that handle continuous quantities, as well as discrete state changes and the exchange of messages within the same concept space. The feasibility of the approach is shown by providing a small example from the automotive industry.
C1 [Grossmann, Juergen] Fraunhofer FOKUS, Berlin, Germany.
C3 Fraunhofer Gesellschaft; Fraunhofer Institute Center Schloss
   Birlinghoven
RP Grossmann, J (corresponding author), Fraunhofer FOKUS, Berlin, Germany.
EM juergen.grossmann@fokus.fraunhofer.de
CR Alur R., 1997, MODULARITY TIMED HYB, P74
   [Anonymous], 1993, Hybrid Systems, DOI [DOI 10.1007/3-540-57318-6_30, DOI 10.1007/3-540, DOI 10.1007/3-540-57318-6, 10.1007/3-540-57318-6_30]
   [Anonymous], 2012, 202786 ETSI ES
   [Anonymous], 2001, Java and the Java Virtual Machine: Definition, Verification, Validation
   Borger E., 1999, FORMAL SYNTAX SEMANT, P353
   Brinkschulte Eva, 2006, SEAS 06, P13
   Broy M, 1997, LECT NOTES COMPUT SC, V1231, P44
   CONRAD M, 2004, THESIS TU BERLIN
   dSpace AG, 2012, DSPACE AUTOMATIONDES
   ETAS Group, 2012, ETAS HARDW LOOP HIL
   ETSI, 2011, 2018731 ETSI ES
   Glasser U., 1999, SDL 99 NEXT MILLENIU
   GroSSmann J., 2006, TestML a language for exchange of tests
   Grossmann J., 2011, MODEL BASED X IN THE
   Gurevich Y., 1993, SPECIFICATION VALIDA, P9
   *IEEE, 1995, 7161995 IEEE
   IEEE, 1999, 107611999 IEEE
   *IEEE, 1993, 10761993 IEEE VHDL
   IEEE: The Institute of Electrical and Electronics Engineers Inc, 1998, US MAN SIGN METH MOD
   Lim J.S., 1987, ADV TOPICS SIGNAL PR
   Liu YL, 2013, IEEE INT WORKS GENET, P1, DOI 10.1109/GEFS.2013.6601048
   Lynch N.A., 1995, HYBRID SYSTEMS, V1066, P496
   Mauel M., 2011, APPL TTCN 3 EMBEDDED
   MBtech Group, 2012, PROVETECH TA UB
   Parker K. P., 1991, Journal of Electronic Testing: Theory and Applications, V2, P43, DOI 10.1007/BF00134943
   *SCC20 ATML GROUP, 2006, IEEE ATML SPEC DRAFT
   Stephens R, 1997, ACTA INFORM, V34, P491, DOI 10.1007/s002360050095
   Suparjo B, 2006, INT TEST CONF P, P152
   TEMEA, 2009, TEMEA PROJ TEST METH
   Wallace C., 1994, Specification and Validation Methods
NR 30
TC 2
Z9 3
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2014
VL 16
IS 3
BP 247
EP 267
DI 10.1007/s10009-013-0283-0
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HS
UT WOS:000209673100003
DA 2024-07-18
ER

PT J
AU Baumeister, J
   Dauer, JC
   Finkbeiner, B
   Schirmer, S
AF Baumeister, Jan
   Dauer, Johann C. C.
   Finkbeiner, Bernd
   Schirmer, Sebastian
TI Monitoring with verified guarantees
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal methods; Cyber-physical systems; Runtime verification; Hoare
   logic
ID VERIFICATION; LANGUAGE
AB Runtime monitoring is generally considered a light-weight alternative to formal verification. In safety-critical systems, however, the monitor itself is a critical component. For example, if the monitor is responsible for initiating emergency protocols, as proposed in a recent aviation standard, then the safety of the entire system critically depends on the correctness of the monitor. In this paper, we present a verification extension to the Lola monitoring language that extends the efficient specification of the monitor with Hoare-style annotations that guarantee the correctness of the monitor specification. We add two new operators, assume and assert, which specify assumptions of the monitor and expectations on its output, respectively. The validity of the annotations is established by an integrated SMT solver. We report on experience in applying the approach to specifications from the avionics domain, where the annotation with assumptions and assertions has lead to the discovery of safety-critical errors in specifications. The errors range from incorrect default values in offset computations to complex algorithmic errors that result in unexpected temporal patterns. We also report how verified specifications can be monitored efficiently at runtime.
C1 [Baumeister, Jan; Finkbeiner, Bernd] Helmholtz Ctr Informat Secur CISPA, Saarbrucken, Germany.
   [Dauer, Johann C. C.; Schirmer, Sebastian] German Aerosp Ctr DLR, Braunschweig, Germany.
C3 Helmholtz Association; German Aerospace Centre (DLR)
RP Schirmer, S (corresponding author), German Aerosp Ctr DLR, Braunschweig, Germany.
EM jan.baumeister@cispa.de; johann.dauer@dlr.de; finkbeiner@cispa.de;
   sebastian.schirmer@dlr.de
FU Projekt DEAL; German Research Foundation (DFG) as part of the
   Collaborative Research Center Foundations of Perspicuous Software
   Systems [TRR 248, 389792660]; European Research Council (ERC) Grant
   OSARES [683300]; Aviation Research Program LuFo of the German Federal
   Ministry for Economic Affairs and Energy as part of "Volocopter
   Sicherheitstechnologie zur robusten eVTOL Flugzustandsabsicherung durch
   formales Monitoring" [20Q1963C]
FX Open Access funding enabled and organized by Projekt DEAL. This work was
   partially supported by the German Research Foundation (DFG) as part of
   the Collaborative Research Center Foundations of Perspicuous Software
   Systems (TRR 248, 389792660), by the European Research Council (ERC)
   Grant OSARES (No. 683300), and by the Aviation Research Program LuFo of
   the German Federal Ministry for Economic Affairs and Energy as part of
   "Volocopter Sicherheitstechnologie zur robusten eVTOL
   Flugzustandsabsicherung durch formales Monitoring" (No. 20Q1963C).
CR [Anonymous], 1993, Program Verification: Fundamental Issues in Computer Science, DOI [10.1090/psapm/019/0235771, DOI 10.1090/PSAPM/019/0235771]
   Baumeister J, 2020, LECT NOTES COMPUT SC, V12399, P451, DOI 10.1007/978-3-030-60508-7_25
   Baumeister J, 2020, LECT NOTES COMPUT SC, V12225, P28, DOI 10.1007/978-3-030-53291-8_3
   Baumeister J, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3358220
   Beckert B., 2007, Verification of Object-Oriented Software. The KeY Approach, P69
   Berry G, 2000, FOUNDAT COMPUT, P425
   Bobot F, 2015, INT J SOFTW TOOLS TE, V17, P709, DOI 10.1007/s10009-014-0314-5
   Cluzeau J. M., 2020, Tech. Rep.
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Dauer JC, 2021, LECT NOTES COMPUT SC, V12974, P62, DOI 10.1007/978-3-030-88494-9_4
   Faymonville P, 2016, LECT NOTES COMPUT SC, V10012, P152, DOI 10.1007/978-3-319-46982-9_10
   Finkbeiner B, 2020, LECT NOTES COMPUT SC, V12399, P431, DOI 10.1007/978-3-030-60508-7_24
   GAUTIER T, 1987, LECT NOTES COMPUT SC, V274, P257
   Hagen G, 2008, 2008 FORMAL METHODS IN COMPUTER-AIDED DESIGN, P109
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Jagadeesan LJ, 1995, LECT NOTES COMPUT SC, V939, P127
   Müller P, 2016, LECT NOTES COMPUT SC, V9583, P41, DOI 10.1007/978-3-662-49122-5_2
   Nagarajan Pranav, 2021, AIAA Scitech 2021 Forum, DOI 10.2514/6.2021-0525
   Nenzi L, 2015, LECT NOTES COMPUT SC, V9333, P21, DOI 10.1007/978-3-319-23820-3_2
   Pike L, 2010, LECT NOTES COMPUT SC, V6418, P345, DOI 10.1007/978-3-642-16612-9_26
   Reactive SystemsGroup C., 2023, RTLOLA
   Reinbacher T, 2014, TACAS, V8413, P357
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Schirmer S., 2016, THESIS SAARLAND U
   Schirmer S., 2018, 2018 AIAA INFORM SYS
   Seto D, 1998, P AMER CONTR CONF, P3504, DOI 10.1109/ACC.1998.703255
   Song YH, 2021, LECT NOTES COMPUT SC, V12597, P417, DOI 10.1007/978-3-030-67067-2_19
NR 28
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2023
VL 25
IS 4
BP 593
EP 616
DI 10.1007/s10009-023-00712-3
EA JUL 2023
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X7GZ5
UT WOS:001026371800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Nxumalo, M
   Timm, N
   Gruner, S
AF Nxumalo, Madoda
   Timm, Nils
   Gruner, Stefan
TI An evaluation of approaches to model checking real-time task
   schedulability analysis
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Timed automata; Model checking; Spotlight abstraction; Schedulability;
   Queues
ID ABSTRACTION; AUTOMATA
AB This article is a follow-up contribution that extends the conference paper (Nxumalo, in: Laarman, Sokolova (eds)Model Checking Software - 27th International Symposium, 2021) which presented the spotlight abstraction method to enable an efficient model checking of schedulability properties of real-time operating systems. Our approach is based on iterative spotlight abstraction whereby the real-time task queue is divided into a so-called spotlight and a shade. Initially, an abstract state space model is generated from the spotlight, which contains a small number of tasks that appear at the front of the queue and the shade contains the remaining tasks. The schedulability of the spotlight tasks is model checked, whereas the behavior of the shade is summarized, and the result is saved for later re-use. If this result is still inconclusive, more tasks are iteratively brought from the shade into the spotlight, with which the model checker can proceed. These steps are repeated until a decisive schedulability result is obtained. In this article, we enrich the encoding of real-time systems into timed automata by separating operations over clock variables from operations based on other variables such as Boolean and integers. We enforce to maintain a reasonable size of the spotlight model by applying counter abstraction to the tasks that were previously confirmed schedulable in the previous iterations. We compare our approach against Timestool and RTLib, an Uppaal template, in the analysis of the schedulability of real-time tasks for the First-In-First-Out and Shortest-Deadline-First scheduling policies. Empirical results show that our approach can handle more tasks than Timestool and RTLib.
C1 [Nxumalo, Madoda; Timm, Nils; Gruner, Stefan] Univ Pretoria, Pretoria, South Africa.
   [Nxumalo, Madoda] Univ Eswatini, Kwaluseni, Eswatini.
C3 University of Pretoria
RP Nxumalo, M (corresponding author), Univ Pretoria, Pretoria, South Africa.; Nxumalo, M (corresponding author), Univ Eswatini, Kwaluseni, Eswatini.
EM mnxumalo@cs.up.ac.za; ntimm@cs.up.ac.za; sg@cs.up.ac.za
CR Abdeddaïm Y, 2002, LECT NOTES COMPUT SC, V2280, P113
   Amnell T, 2003, LECT NOTES COMPUT SC, V2791, P60
   [Anonymous], 2013, THESIS U PADERBORN
   Ball T, 2001, ACM SIGPLAN NOTICES, V36, P203, DOI 10.1145/381694.378846
   Basler G, 2010, FORM METHOD SYST DES, V36, P223, DOI 10.1007/s10703-010-0096-7
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Berard B., 1998, Fundamenta Informaticae, V36, P145
   Bertout A., 2014, 22 INT C REAL TIME N, P23
   Bouyer P., 2018, HDB MODEL CHECKING, P1001, DOI DOI 10.1007/978-3-319-10575-8_29
   Bouyer P, 2022, LECT NOTES COMPUT SC, V13465, P16, DOI 10.1007/978-3-031-15839-1_2
   Clarke E., 2000, Computer Aided Verification, P154
   Dierks H, 2007, LECT NOTES COMPUT SC, V4763, P114
   Fersman E, 2003, LECT NOTES COMPUT SC, V2619, P224
   Fersman E, 2002, LECT NOTES COMPUT SC, V2280, P67
   Govind R., 2019, LEIBNIZ INT P INFORM, V140, DOI DOI 10.4230/LIPICS.CONCUR.2019.16
   Henzinger TA, 1998, J COMPUT SYST SCI, V57, P94, DOI 10.1006/jcss.1998.1581
   Herbreteau Frederic, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P990, DOI 10.1007/978-3-642-39799-8_71
   Herbreteau F, 2016, INFORM COMPUT, V251, P67, DOI 10.1016/j.ic.2016.07.004
   Katoen JP, 2007, LECT NOTES COMPUT SC, V4590, P311
   Kurtin PS, 2017, ACM T EMBED COMPUT S, V16, DOI 10.1145/3126507
   Laroussinie Francois., 1998, P JOINT INT C FORMAL, P439
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   McManis J., 1994, Computer Aided Verification. 6th International Conference, CAV '94. Proceedings, P105
   Nxumalo M, 2021, LECT NOTES COMPUT SC, V12864, P63, DOI 10.1007/978-3-030-84629-9_4
   Roussanaly V, 2019, LECT NOTES COMPUT SC, V11561, P22, DOI 10.1007/978-3-030-25540-4_2
   Schrieb J, 2009, LECT NOTES COMPUT SC, V5850, P106, DOI 10.1007/978-3-642-05089-3_8
   Shan L., 2016, RES REPORT
   Sorea M, 2004, LECT NOTES COMPUT SC, V3253, P363
   Stallings W, 2011, Operating systems: internals and design principles, Vseventh
NR 29
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2023
VL 25
IS 1
SI SI
BP 115
EP 128
DI 10.1007/s10009-022-00693-9
EA JAN 2023
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9R7IA
UT WOS:000916591900001
DA 2024-07-18
ER

PT J
AU Lourenço, CB
   Cousineau, D
   Faissole, F
   Marché, C
   Mentré, D
   Inoue, H
AF Lourenco, Claudio Belo
   Cousineau, Denis
   Faissole, Florian
   Marche, Claude
   Mentre, David
   Inoue, Hiroaki
TI Automated formal analysis of temporal properties of Ladder programs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Ladder language for programming PLCs; Timing charts; Formal
   specification; Deductive verification; Why3 environment
ID VERIFICATION
AB Programmable Logic Controllers are industrial digital computers used as automation controllers in manufacturing processes. The Ladder language is a programming language used to develop software for such controllers. In this work, we consider the description of the expected behaviour of a Ladder program under the form of a timing chart, describing a scenario of execution. Our aim is to prove that the given Ladder program conforms to the expected temporal behaviour given by such a timing chart. Our approach amounts to translating the Ladder code, together with the timing chart, into a program for the Why3 environment for deductive program verification. The verification proceeds with the generation of verification conditions: mathematical formulas to be checked valid using automated theorem provers. The ultimate goal is twofold. On the one hand, by obtaining a complete proof, one verifies the conformity of the Ladder code with respect to the timing chart with a high degree of confidence. On the other hand, in the case the proof is not fully completed, one obtains a counterexample, illustrating a possible execution scenario of the Ladder code which does not conform to the timing chart.
C1 [Lourenco, Claudio Belo; Marche, Claude] Univ Paris Saclay, LMF, INRIA, CNRS, F-91190 Gif Sur Yvette, France.
   [Cousineau, Denis; Faissole, Florian; Mentre, David] Mitsubishi Elect R&D Ctr Europe, Rennes, France.
   [Inoue, Hiroaki] Mitsubishi Electr Corp, Amagasaki, Hyogo, Japan.
C3 Centre National de la Recherche Scientifique (CNRS); Inria; Universite
   Paris Saclay; Universite Paris Cite; Mitsubishi Electric Corporation
RP Marché, C (corresponding author), Univ Paris Saclay, LMF, INRIA, CNRS, F-91190 Gif Sur Yvette, France.
EM Claude.Marche@inria.fr
CR Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Baudin, 2017, DEDUCTIVE VERIFICATI
   Baudin P., 2016, ACSL ANSI ISO C SPEC
   Becker B, 2021, ELECTRON P THEOR COM, P82, DOI 10.4204/EPTCS.338.10
   Biallas S., 2014, P 12 INT WORKSH DISC, P400
   Bobot F., 2011, BOOGIE 2011 1 INT WO, P53
   Bobot F, 2015, INT J SOFTW TOOLS TE, V17, P709, DOI 10.1007/s10009-014-0314-5
   Bolton W., 2015, Programmable Logic Controllers, DOI [10.1016/C2014-0-03884-1, DOI 10.1016/C2014-0-03884-1]
   Conchon S., 2018, SMT WORKSH INT WORKS
   Cousineau D, 2019, ELECTRON P THEOR COM, P7, DOI 10.4204/EPTCS.310.2
   Dailler S, 2018, J LOG ALGEBR METHODS, V99, P97, DOI 10.1016/j.jlamp.2018.05.003
   Darvas D, 2016, LECT NOTES COMPUT SC, V9681, P508, DOI 10.1007/978-3-319-33693-0_32
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DeOliveira S., 2015, JFLA VINGT SIXIEMES
   Drath R, 2008, IEEE INT C EMERG, P616, DOI 10.1109/ETFA.2008.4638461
   Fehnker A, 2009, LECT NOTES COMPUT SC, V5404, P267
   Filliatre Jean-Christophe, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Verification. Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12476), P122, DOI 10.1007/978-3-030-61362-4_7
   Filliâtre JC, 2007, LECT NOTES COMPUT SC, V4590, P173
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   Jeannet B, 2009, LECT NOTES COMPUT SC, V5643, P661, DOI 10.1007/978-3-642-02658-4_52
   John W., 2015, BUILDING HIGH INTEGR
   Kosmatov N, 2016, LECT NOTES COMPUT SC, V9952, P461, DOI 10.1007/978-3-319-47166-2_32
   Lourenço CB, 2021, LECT NOTES COMPUT SC, V12863, P21, DOI 10.1007/978-3-030-85248-1_2
   Mitsubishi Electric Corporation, 2016, MELSEC IQ F FX5 CPU
   Mitsubishi Electric Corporation, 2016, MELSEC IQ R SAF FUNC
   Mitsubishi Electric Corporation, 2016, MITS I MELSEC IQ R S
   Ovatman T, 2016, SOFTW SYST MODEL, V15, P937, DOI 10.1007/s10270-014-0448-7
   Ramanathan Ramakrishnan, 2014, 2014 World Automation Congress (WAC), P598, DOI 10.1109/WAC.2014.6936062
   Roques A, 2009, PLANTUML STANDARD LI
   Stouls N., 2011, RES REPORT
   Nguyen T, 2019, ASIA PAC SOFWR ENG, P86, DOI 10.1109/APSEC48747.2019.00021
NR 31
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2022
VL 24
IS 6
SI SI
BP 977
EP 997
DI 10.1007/s10009-022-00680-0
EA NOV 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8H5UG
UT WOS:000876879500001
DA 2024-07-18
ER

PT J
AU Antonino, P
   Gibson-Robinson, T
   Roscoe, AW
AF Antonino, Pedro
   Gibson-Robinson, Thomas
   Roscoe, A. W.
TI Approximate verification of concurrent systems using token structures
   and invariants
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Reachability approximation; Token structures; Token invariants; Formal
   verification; Model checking; Concurrent systems
ID SYMBOLIC MODEL CHECKING; DEADLOCK-FREEDOM; EFFICIENT VERIFICATION;
   LOCAL-ANALYSIS
AB Distributed systems often rely on token structures to avoid undesired states and behave correctly. While conservative token structures ensure that a fixed number of tokens exist at all times, existential structures guarantee that tokens cannot be completely eliminated. In this paper, we show how a SAT/SMT checker can be used to automatically detect such token structures in concurrent systems and how to derive the natural invariants they preserve. We use these invariants to improve the precision of a deadlock-checking framework that is based on local analysis. Moreover, we conducted some practical experiments to demonstrate that this new framework is as efficient as similar incomplete techniques for deadlock-freedom analysis while handling a different class of systems.
C1 [Antonino, Pedro] Blockhouse Technol Ltd, Oxford, England.
   [Gibson-Robinson, Thomas] Cocotec Ltd, Guildford, Surrey, England.
   [Roscoe, A. W.] Univ Oxford, Dept Comp Sci, Oxford, England.
C3 University of Oxford
RP Antonino, P (corresponding author), Blockhouse Technol Ltd, Oxford, England.
EM pedro@tbtl.com; tom@Cocotec.io; bill.roscoe@cs.ox.ac.uk
OI Ribeiro Goncalves Antonino, Pedro/0000-0002-5627-0910
CR Agerwala T., 1978, Proceedings of the Fifteenth Annual Design Automation Conference, P305
   ANDREWS GR, 1983, COMPUT SURV, V15, P3, DOI 10.1145/356901.356903
   Antonino P., 2018, THESIS U OXFORD
   Antonino P., 2018, EXPT PACKAGE
   Antonino P, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3335149
   Antonino P, 2019, FORM ASP COMPUT, V31, P375, DOI 10.1007/s00165-019-00483-2
   Antonino P, 2017, LECT NOTES COMPUT SC, V10206, P249, DOI 10.1007/978-3-662-54580-5_15
   Antonino P, 2017, LECT NOTES COMPUT SC, V10623, P233, DOI 10.1007/978-3-319-70848-5_15
   Antonino P, 2016, LECT NOTES COMPUT SC, V9995, P43, DOI 10.1007/978-3-319-48989-6_3
   Antonino P, 2016, LECT NOTES COMPUT SC, V9681, P345, DOI 10.1007/978-3-319-33693-0_22
   Antonino P, 2014, LECT NOTES COMPUT SC, V8442, P62, DOI 10.1007/978-3-319-06410-9_5
   Antonino PRG, 2014, LECT NOTES COMPUT SC, V8430, P31, DOI 10.1007/978-3-319-06200-6_3
   Apt K. R., 1980, ACM Transactions on Programming Languages and Systems, V2, P359, DOI 10.1145/357103.357110
   Attie PC, 2013, LECT NOTES COMPUT SC, V7892, P161
   Attie PC, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3152910
   Attie PC, 2005, LECT NOTES COMPUT SC, V3385, P465
   Audemard G, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P399
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Batcher K. E., 1968, P AFIPS SPRING JOINT, P307, DOI [DOI 10.1145/1468075.1468121, 10.1145/1468075. 1468121]
   Bensalem S, 1999, FORM METHOD SYST DES, V15, P75, DOI 10.1023/A:1008744030390
   Bensalem S, 2016, SOFTW SYST MODEL, V15, P427, DOI 10.1007/s10270-014-0410-8
   Bensalem S, 2011, LECT NOTES COMPUT SC, V6617, P453, DOI 10.1007/978-3-642-20398-5_32
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   BROOKES SD, 1991, DISTRIB COMPUT, V4, P209, DOI 10.1007/BF01784721
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Chaki S, 2005, FORM ASP COMPUT, V17, P461, DOI 10.1007/s00165-005-0071-z
   Clarke E., 2000, Computer Aided Verification, P154
   Conserva MS, 2016, LECT NOTES COMPUT SC, V10009, P279, DOI 10.1007/978-3-319-47846-3_18
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P341, DOI 10.1145/363095.363143
   Een N., 2006, J SATISFIABILITY BOO, V2, P1
   Gibson-Robinson T., 2014, Lecture Notes in Computer Science, V8413, P187
   Gibson-Robinson T, 2015, LECT NOTES COMPUT SC, V9058, P188, DOI 10.1007/978-3-319-17524-9_14
   GODEFROID P, 1993, FORM METHOD SYST DES, V2, P149, DOI 10.1007/BF01383879
   Gruner S, 2010, INFORM PROCESS LETT, V110, P539, DOI 10.1016/j.ipl.2010.04.021
   Hoare CAR., 1985, Communicating Sequential Processes, Patent No. [0637.68007, 063768007]
   Lambertz Christian, 2011, FSEN, P64
   LAMPORT L, 1977, IEEE T SOFTWARE ENG, V3, P125, DOI 10.1109/TSE.1977.229904
   Martin J. M. R., 1997, FME '97: Industrial Applications and Strengthened Foundations of Formal Methods. 4th International Symposium of Formal Methods Europe. Proceedings, P418
   MARTIN JMR, 1996, THESIS U BUCKINGHAM
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Oliveira MVM, 2016, FORM ASP COMPUT, V28, P937, DOI 10.1007/s00165-016-0375-1
   Otoni R, 2017, LECT NOTES COMPUT SC, V10623, P107, DOI 10.1007/978-3-319-70848-5_8
   Ouaknine J., 2013, LMCS, V9
   Palikareva H, 2012, SCI COMPUT PROGRAM, V77, P1178, DOI 10.1016/j.scico.2011.07.008
   Peled D., 1993, Computer Aided Verification. 5th International Conference, CAV '93 Proceedings, P409
   PETERSON JL, 1977, COMPUT SURV, V9, P223, DOI 10.1145/356698.356702
   Plotkin G.D., 1981, TECH REP DAIMI FN 19
   Ramos R.T., 2011, THESIS U FEDERAL PER
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Roscoe A.W., 1998, THEORY PRACTICE CONC
   ROSCOE AW, 1987, INFORM COMPUT, V75, P289, DOI 10.1016/0890-5401(87)90004-6
   Roscoe AW., 1995, Tools and Algorithms for the Construction and Analysis of Systems, P133, DOI [10.1007/3-540-60630-0_7, DOI 10.1007/3-540-60630-0]
   Valmari A., 1992, Formal Methods in System Design, V1, P297, DOI 10.1007/BF00709154
   Yeh W.J., 1991, Proceedings of the symposium on Testing, analysis, and verification, P49
NR 55
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2022
VL 24
IS 4
BP 613
EP 633
DI 10.1007/s10009-022-00650-6
EA APR 2022
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3N7AF
UT WOS:000779223200001
DA 2024-07-18
ER

PT J
AU Schneider, S
   Maximova, M
   Sakizloglou, L
   Giese, H
AF Schneider, Sven
   Maximova, Maria
   Sakizloglou, Lucas
   Giese, Holger
TI Formal testing of timed graph transformation systems using metric
   temporal graph logic
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal testing; Typed attributed symbolic graphs; Timed graph
   transformation; Graph conditions; Metric temporal graph logic
ID SYMBOLIC MODEL CHECKING; VERIFICATION; FRAMEWORK; TOOLS
AB Embedded real-time systems generate state sequences where time elapses between state changes. Ensuring that such systems adhere to a provided specification of admissible or desired behavior is essential. Formal model-based testing is often a suitable cost-effective approach. We introduce an extended version of the formalism of symbolic graphs, which encompasses types as well as attributes, for representing states of dynamic systems. Relying on this extension of symbolic graphs, we present a novel formalism of timed graph transformation systems (TGTSs) that supports the model-based development of dynamic real-time systems at an abstract level where possible state changes and delays are specified by graph transformation rules. We then introduce an extended form of the metric temporal graph logic (MTGL) with increased expressiveness to improve the applicability of MTGL for the specification of timed graph sequences generated by a TGTS. Based on the metric temporal operators of MTGL and its built-in graph binding mechanics, we express properties on the structure and attributes of graphs as well as on the occurrence of graphs over time that are related by their inner structure. We provide formal support for checking whether a single generated timed graph sequence adheres to a provided MTGL specification. Relying on this logical foundation, we develop a testing framework for TGTSs that are specified using MTGL. Lastly, we apply this testing framework to a running example by using our prototypical implementation in the tool AutoGraph.
C1 [Schneider, Sven; Maximova, Maria; Sakizloglou, Lucas; Giese, Holger] Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
C3 University of Potsdam
RP Schneider, S (corresponding author), Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
EM sven.schneider@hpi.de; maria.maximova@hpi.de; lucas.sakizloglou@hpi.de;
   holger.giese@hpi.de
RI Giese, Holger/W-5309-2019
OI Giese, Holger/0000-0002-4723-730X; Sakizloglou,
   Lucas/0000-0001-6971-1589
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL.
CR ALUR R, 1994, J ACM, V41, P181, DOI 10.1145/174644.174651
   Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   ALUR R, 1993, INFORM COMPUT, V104, P35, DOI 10.1006/inco.1993.1025
   Alur R., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P414, DOI 10.1109/LICS.1990.113766
   Alur R., 1991, Proceedings of the Tenth Annual ACM Symposium on Principles of Distributed Computing, P139, DOI 10.1145/112600.112613
   ALUR R, 1992, LECT NOTES COMPUT SC, V600, P45, DOI 10.1007/BFb0031987
   [Anonymous], 2017, ATTRIBUTED GRAPH GRA
   [Anonymous], 2017, LECT NOTES COMPUTER
   [Anonymous], 2013, EMF HENSHIN
   [Anonymous], 2011, GRAPHS OBJECT ORIENT
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Baldan P., 2006, Recent Trends in Algebraic Development Techniques. 18th International Workshop, WADT 2006. Revised Selected Papers (Lecture Notes in Computer Science Vol.4409), P1
   Baldan P, 2008, INFORM COMPUT, V206, P869, DOI 10.1016/j.ic.2008.04.002
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P135, DOI 10.1007/978-3-319-75632-5_5
   Basin D, 2018, ACTA INFORM, V55, P309, DOI 10.1007/s00236-017-0295-4
   Basin D, 2015, J ACM, V62, DOI 10.1145/2699444
   Becker B, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P203, DOI 10.1109/ISORC.2008.13
   Beyhl T, 2016, LECT NOTES COMPUT SC, V9761, P170, DOI 10.1007/978-3-319-40530-8_11
   Bi F, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1199, DOI 10.1145/2882903.2915236
   Bohnenkamp H, 2005, LECT NOTES COMPUT SC, V3582, P173
   Bouyer P, 2017, LECT NOTES COMPUT SC, V10460, P211, DOI 10.1007/978-3-319-63121-9_11
   Bozga M, 2012, DES AUT TEST EUROPE, P370
   Búr M, 2015, LECT NOTES COMPUT SC, V9151, P275, DOI 10.1007/978-3-319-21145-9_18
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Courcelle B., 1997, HDB GRAPH GRAMMARS C, V1, P313
   Daws Conrado., 1996, HYBRID SYSTEMS 3, V1066, P208, DOI DOI 10.1007/BFB0020947
   de Lemos R., 2013, LECT NOTES COMPUTER, V7475
   Dyck J, 2017, LECT NOTES COMPUT SC, V10373, P142, DOI 10.1007/978-3-319-61470-0_9
   Ehrig H, 2015, MONOGR THEOR COMPUT, P1, DOI 10.1007/978-3-662-47980-3
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   EHRIG H, 1985, FUNDAMENTALS ALGEBRA
   Ehrig H, 2009, BULL EUR ASSOC THEOR, P139
   Ehrig H, 2014, MATH STRUCT COMP SCI, V24, DOI 10.1017/S0960129512000357
   Ehrig H, 2012, FUND INFORM, V118, P35, DOI 10.3233/FI-2012-705
   Gerhold M, 2018, FORM ASP COMPUT, V30, P77, DOI 10.1007/s00165-017-0440-4
   Ghamarian Amir Hossein, 2012, International Journal on Software Tools for Technology Transfer, V14, P15, DOI 10.1007/s10009-011-0186-x
   Giese Holger, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P137, DOI 10.1007/978-3-642-30982-3_5
   Giese H., 2009, ECEASST, DOI 10.14279/tuj.eceasst.18.268
   GIESE H, 2005, LECT NOTES COMPUTER, V4322, P258
   Giese H, 2019, LECT NOTES COMPUT SC, V11424, P282, DOI 10.1007/978-3-030-16722-6_16
   Gyapay S, 2003, FUND INFORM, V58, P1
   Habel A, 2009, MATH STRUCT COMP SCI, V19, P245, DOI 10.1017/S0960129508007202
   Havelund Klaus, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P61, DOI 10.1007/978-3-319-75632-5_3
   Havelund K, 2018, LECT NOTES COMPUT SC, V10869, P26, DOI 10.1007/978-3-319-94111-0_2
   Heckel R., 2002, Mathematical Structures in Computer Science, V12, P349, DOI 10.1017/S0960129501003553
   Heckel R, 2001, APPL CATEGOR STRUCT, V9, P83, DOI 10.1023/A:1008734426504
   Heckel R., 1998, THESIS TECHNICAL U B
   Heckel R., 1999, HDB GRAPH GRAMMARS C, P639, DOI DOI 10.1142/9789812815149_0016
   Heckel R, 2006, FUND INFORM, V74, P63
   Henzinger T.A., 1991, THESIS STANDFORD U U
   Henzinger TA, 1998, LECT NOTES COMPUT SC, V1443, P580, DOI 10.1007/BFb0055086
   HENZINGER TA, 1992, LECT NOTES COMPUT SC, V623, P545
   Henzinger TA, 1998, LECT NOTES COMPUT SC, V1466, P439, DOI 10.1007/BFb0055640
   HorvuYth, 2007, ECEASST, DOI 10.14279/tuj.eceasst.6.49
   Jakumeit' E, 2014, SCI COMPUT PROGRAM, V85, P41, DOI 10.1016/j.scico.2013.10.009
   Kang EY, 2018, LECT NOTES COMPUT SC, V11023, P236, DOI 10.1007/978-3-319-98938-9_14
   Klein F, 2007, LECT NOTES COMPUT SC, V4422, P185
   König B, 2008, ELECTRON NOTES THEOR, V211, P201, DOI 10.1016/j.entcs.2008.04.042
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Krause Christian, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P311, DOI 10.1007/978-3-642-33654-6_21
   Kwiatkowska M, 2004, LECT NOTES COMPUT SC, V3253, P293
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2007, INFORM COMPUT, V205, P1027, DOI 10.1016/j.ic.2007.01.004
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Matthias B, 2019, LECT NOTES COMPUT SC, V11629, P212, DOI 10.1007/978-3-030-23611-3_13
   Maximova M, 2018, J LOG ALGEBR METHODS, V101, P110, DOI 10.1016/j.jlamp.2018.09.003
   Maximova M, 2017, LECT NOTES COMPUT SC, V10373, P159, DOI 10.1007/978-3-319-61470-0_10
   Microsoft Corporation, Z3
   Neumann Stefan, 2007, Master's Thesis
   Orejas F., 2010, Electron. Commun. Eur. Assoc. Softw. Sci. Technol., V30, DOI [/10.14279/tuj.eceasst.30.405, DOI 10.14279/TUJ.ECEASST.30.405]
   Orejas F, 2008, LECT NOTES COMPUT SC, V4961, P179, DOI 10.1007/978-3-540-78743-3_14
   Orejas F, 2012, FUND INFORM, V118, P65, DOI 10.3233/FI-2012-706
   Orejas F, 2011, J SYMB COMPUT, V46, P294, DOI 10.1016/j.jsc.2010.09.009
   Orejas F, 2008, LECT NOTES COMPUT SC, V5214, P274, DOI 10.1007/978-3-540-87405-8_19
   Ouaknine J, 2005, IEEE S LOG, P188
   Pennemann K.-H., 2009, Ph.D. thesis
   Raskin JF, 1997, LECT NOTES COMPUT SC, V1201, P33, DOI 10.1007/BFb0014711
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P319
   Schneider S, 2019, LECT NOTES COMPUT SC, V11424, P151, DOI 10.1007/978-3-030-16722-6_9
   Schneider S, 2020, LECT NOTES COMPUT SC, V12150, P276, DOI 10.1007/978-3-030-51372-6_16
   Schneider S, 2020, LECT NOTES COMPUT SC, V12150, P257, DOI 10.1007/978-3-030-51372-6_15
   Schneider S, 2018, INT J SOFTW TOOLS TE, V20, P705, DOI 10.1007/s10009-018-0496-3
   Wilke T., 1994, Formal Techniques in Real-Time and Fault-Tolerant Systems. Third International Symposium Proceedings. ProCoS, P694
NR 84
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2021
VL 23
IS 3
SI SI
BP 411
EP 488
DI 10.1007/s10009-020-00585-w
EA JUL 2021
PG 78
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TS5ZM
UT WOS:000673691700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Gorostiaga, F
   Sánchez, C
AF Gorostiaga, Felipe
   Sanchez, Cesar
TI Stream runtime verification of real-time event streams with the Striver
   language
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Stream runtime verification; Formal verification;
   Formal methods; Specification languages
AB In this paper, we study the problem of runtime verification of real-time event streams; in particular, we propose a language to describe monitors for real-time event streams that can manipulate data from rich domains. We propose a solution based on stream runtime verification (SRV), where monitors are specified by describing how output streams of data are computed from input streams of data. SRV enables a clean separation between the temporal dependencies among incoming events and the concrete operations that are performed during the monitoring. Most SRV specification languages assume that all streams share a global synchronous clock and divide time in discrete instants. At each instant every input has a reading, and for every instant the monitor computes an output. In this paper, we generalize the time assumption to cover real-time event streams, but keep the explicit time offsets present in some synchronous SRV languages like Lola. The language we introduce, called Striver, shares with SRV the simplicity and economy of operators, and the separation between the reasoning about time and the computation of data values. The version of Striver in this paper allows expressing future and past dependencies. Striver is a general language that allows expressing for certain time domains other real-time monitoring languages, like TeSSLa, and temporal logics, like STL. We show in this paper translations from other formalisms for (piecewise-constant) real-time signals and timed event streams. Finally, we report an empirical evaluation of an implementation of Striver.
C1 [Gorostiaga, Felipe; Sanchez, Cesar] IMDEA Software Inst, Madrid, Spain.
   [Gorostiaga, Felipe] Univ Politecn Madrid, Madrid, Spain.
   [Gorostiaga, Felipe] CIFASIS, Rosario, Argentina.
C3 IMDEA Software Institute; Universidad Politecnica de Madrid
RP Gorostiaga, F (corresponding author), IMDEA Software Inst, Madrid, Spain.; Gorostiaga, F (corresponding author), Univ Politecn Madrid, Madrid, Spain.; Gorostiaga, F (corresponding author), CIFASIS, Rosario, Argentina.
EM felipe.gorostiaga@imdea.org; cesar.sanchez@imdea.org
RI Gorostiaga, Felipe/KBA-0054-2024
OI Sanchez, Cesar/0000-0003-3927-4773
CR [Anonymous], 2018, Lectures on Runtime Verification
   [Anonymous], 2018, LECT RUNTIME VERIFIC, P135
   Arasu A., 2004, TECHNICAL REPORT 200
   Asarin E, 2002, J ACM, V49, P172, DOI 10.1145/506147.506151
   Babu S, 2001, SIGMOD REC, V30, P109, DOI 10.1145/603867.603884
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Barringer H., LNCS, V7436, P68
   Basin D, 2015, J ACM, V62, DOI 10.1145/2699444
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Bozzelli L, 2014, LECT NOTES COMPUT SC, V8734, P64, DOI 10.1007/978-3-319-11164-3_6
   Convent L., 2018, LNCS
   Cristian F, 1999, IEEE T PARALL DISTR, V10, P642, DOI 10.1109/71.774912
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Eisner C, 2003, LECT NOTES COMPUT SC, V2725, P27
   Goodloe A.E., 2010, TECHNICAL REPORT
   Gorostiaga F., P 18 INT C RUNT VER
   Gortazar F., 2017, 2017 IEEE C NETW FUN, P1
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   Havelund K, 2008, LECT NOTES COMPUT SC, V4171, P374
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Leucker M, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1925, DOI 10.1145/3167132.3167338
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Pike L, 2010, LECT NOTES COMPUT SC, V6418, P345, DOI 10.1007/978-3-642-16612-9_26
   Pnueli A, 2006, LECT NOTES COMPUT SC, V4085, P573
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Rosu G., 2005, Automated Software Engineering, V12, P151, DOI 10.1007/s10515-005-6205-y
   Sánchez C, 2018, LECT NOTES COMPUT SC, V11237, P138, DOI 10.1007/978-3-030-03769-7_9
   Sen Koushik, 2003, Electronic Notes in Theoretical Computer Science, V89, P226, DOI [DOI 10.1016/S1571-0661(04)81051-XRV'2003, 10.1016/S1571-0661(04)81051-X, DOI 10.1016/S1571-0661(04)81051-X]
   Torfah H, P 16 INT C RUNT VER
   Torfah H., 2017, ARXIV171103829
NR 31
TC 6
Z9 6
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2021
VL 23
IS 2
SI SI
BP 157
EP 183
DI 10.1007/s10009-021-00605-3
EA APR 2021
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SU3HE
UT WOS:000644277500001
DA 2024-07-18
ER

PT J
AU Allawi, HM
   Al Manaseer, W
   Al Shraideh, M
AF Allawi, Hamzeh M.
   Al Manaseer, Waref
   Al Shraideh, Mohammad
TI A greedy particle swarm optimization (GPSO) algorithm for testing
   real-world smart card applications
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software testing; Java smart card; Particle swarm optimization
   algorithm; Greedy algorithm; Genetic algorithm
ID GENERATION
AB Software testing continues to be regarded as a necessary and critical step in the software development life cycle. Among the multitudes of existing techniques, particle swarm optimization (PSO) algorithm, in particular, has shown superior merits for automatically generating software test cases for its easy implementation and for relying on fewer parameters that require tuning. Hence, several state-of-the-art PSO-based algorithms have been successfully used as a test data generator. On the other hand, greedy-based algorithms, which are commonly used to solve complex and multi-step combinatorial problems, are starting to gain momentum as a solution for the complexity problem of software testing. Greedy algorithms favored over other techniques when the solution of the problem is guaranteed to be near-optimal. As a result, the utilization of both greedy and PSO algorithms in a single solution for automatically generating test data represents a strong candidate if designed carefully. In this paper, we propose a novel hybrid greedy and PSO algorithm (GPSO) that jointly guarantees the effectiveness and close to optimality results for generating a minimum number of test data. Compared with the widely employed genetic algorithm (GA), our proposed GPSO outperforms the GA in terms of the average number of iterations, execution time, and coverage percentage. Experimental trials with six different typical Java card applications show that the use of the proposed GPSO as a test data generator results in an outstanding performance.
C1 [Allawi, Hamzeh M.; Al Manaseer, Waref; Al Shraideh, Mohammad] Univ Jordan, Dept Comp Sci, Amman, Jordan.
C3 University of Jordan
RP Allawi, HM; Al Manaseer, W; Al Shraideh, M (corresponding author), Univ Jordan, Dept Comp Sci, Amman, Jordan.
EM Hamzehalawi.89@gmail.com; warefalmanaseer@gmail.com; mshridah@ju.edu.jo
RI Alshraideh, Mohammad A/C-8113-2015
OI Alshraideh, Mohammad A/0000-0002-2724-9290
CR Ahmed BS, 2015, INFORM SOFTWARE TECH, V66, P13, DOI 10.1016/j.infsof.2015.05.005
   Almasri Nada, 2016, Journal of Software, V11, P64, DOI 10.17706/jsw.11.1.64-79
   Alshraideh Mohammad, 2008, Journal of Computer Sciences, V4, P1012, DOI 10.3844/jcssp.2008.1012.1019
   Alshraideh M, 2011, SOFTWARE QUAL J, V19, P489, DOI 10.1007/s11219-010-9117-4
   Alshraideh M, 2010, SOFTWARE QUAL J, V18, P109, DOI 10.1007/s11219-009-9083-x
   [Anonymous], 2015, J SOFTWARE ENG APPL, DOI DOI 10.4236/JSEA.2015.812057
   [Anonymous], 2011, Int. J. Adv. Sci. Technol
   [Anonymous], 2007, P 2 INT C INN COMP I, DOI [DOI 10.1109/ICICIC.2007.209, DOI 10.1109/ICICIC.2007.2092-S2.0-39049112925]
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   [Anonymous], 2000, ICSE 00, DOI DOI 10.1145/336512.336551
   Berndt D.J., 2005, P HAWAII INT C SYSTE, P318
   Bouquet F., 2004, INT WORKSH CONSTR AN
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Bryce Renee C., 2007, International Journal of Simulation & Process Modelling, V3, P80, DOI 10.1504/IJSPM.2007.014717
   Bryce RC., 2005, A MOST 05 P 1 INT WO, P1
   Chauhan P, 2013, MEMET COMPUT, V5, P229, DOI 10.1007/s12293-013-0111-9
   Choi B. J., 1989, Proceedings of the Twenty-Second Annual Hawaii International Conference on System Sciences. Vol.II: Software Track (IEEE Cat. No.89TH0243-6), P275, DOI 10.1109/HICSS.1989.48002
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Colbourn CJ, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P345
   Hasan HJ, 2013, I MANAGERS J SOFTW E, V8, P7, DOI [10.26634/jse.8.2.2534, DOI 10.26634/JSE.8.2.2534]
   Khan ME, 2012, INT J ADV COMPUT SC, V3, P12
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lei Y, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P254, DOI 10.1109/HASE.1998.731623
   Li AG, 2009, 2009 WRI WORLD CONGRESS ON SOFTWARE ENGINEERING, VOL 4, PROCEEDINGS, P189, DOI 10.1109/WCSE.2009.98
   Lin SW, 2008, EXPERT SYST APPL, V35, P1817, DOI 10.1016/j.eswa.2007.08.088
   Martin H, 2001, LECT NOTES COMPUT SC, V2041, P121
   Nayak N, 2010, COMM COM INF SC, V95, P1, DOI 10.1007/978-3-642-14825-5_1
   Philipps J., 2003, ELECTRON NOTES THEOR, V80, P170
   Rajpal Mohit, 2017, ARXIV171104596
   Scheller RM, 2010, FRONT ECOL ENVIRON, V8, P253, DOI 10.1890/080141
   Shi Y., 1999, Proceedings of the 1999 Congress on Evolutionary Computation-CEC99 (Cat. No. 99TH8406), P1945, DOI 10.1109/CEC.1999.785511
   Tung YW, 2000, AEROSP CONF PROC, P431, DOI 10.1109/AERO.2000.879426
   Windisch A, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1121
   Zalewski Micha, AM FUZZY LOP
NR 35
TC 4
Z9 4
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2020
VL 22
IS 2
SI SI
BP 183
EP 194
DI 10.1007/s10009-018-00506-y
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KX0GO
UT WOS:000521561800006
DA 2024-07-18
ER

PT J
AU Chalupa, M
   Strejcek, J
   Vitovská, M
AF Chalupa, Marek
   Strejcek, Jan
   Vitovska, Martina
TI Joint forces for memory safety checking revisited
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Memory safety; Instrumentation; Program slicing; Symbolic execution;
   Symbiotic
AB We present an improved version of the memory safety verification approach implemented in Symbiotic 5, the winner of the MemSafety category at the Competition on Software Verification (SV-COMP) 2018. The approach can verify programs for standard errors in memory usage like invalid pointer dereference or memory leaking. It is based on instrumentation, static pointer analysis extended to consider memory deallocations, static program slicing, and symbolic execution. The improved version brings higher precision of the extended pointer analysis and further optimizations in instrumentation. It is implemented in the current version of Symbiotic, which contains also some improvements in program slicing and symbolic execution. We explain the approach in theory, describe implementation of selected components, and provide experimental results showing the impact of particular components.
C1 [Chalupa, Marek; Strejcek, Jan; Vitovska, Martina] Masaryk Univ, Brno, Czech Republic.
C3 Masaryk University Brno
RP Vitovská, M (corresponding author), Masaryk Univ, Brno, Czech Republic.
EM chalupa@fi.muni.cz; strejcek@fi.muni.cz; 409920@mail.muni.cz
RI Strejček, Jan/J-3237-2013; Chalupa, Marek/AAM-3016-2021
OI Strejček, Jan/0000-0001-5873-403X; Chalupa, Marek/0000-0003-1132-5516
FU Czech Science Foundation Grant [GA18-02177S]
FX The research is supported by The Czech Science Foundation Grant
   GA18-02177S. The authors would like to thank three anonymous reviewers
   of STTT for their useful suggestions.
CR [Anonymous], 2018, MAP2CHECK TOOL
   [Anonymous], 1994, Program analysis and specialization for the C programming language
   [Anonymous], 2018, C LANG FAM FRONT LLV
   [Anonymous], 2018, SOFTBOUND CETS COMPL
   Beyer D, 2005, LECT NOTES COMPUT SC, V3442, P2, DOI 10.1007/978-3-540-31984-9_2
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Beyer D, 2015, LECT NOTES COMPUT SC, V9232, P160, DOI 10.1007/978-3-319-23404-5_12
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Carter M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P589, DOI 10.1145/2889160.2889163
   Chalupa M, 2018, LECT NOTES COMPUT SC, V10869, P115, DOI 10.1007/978-3-319-94111-0_7
   Chalupa M, 2018, LECT NOTES COMPUT SC, V10806, P442, DOI 10.1007/978-3-319-89963-3_29
   Chebaro O, 2014, AUTOMAT SOFTW ENG, V21, P107, DOI 10.1007/s10515-013-0127-x
   Chebaro O, 2011, LECT NOTES COMPUT SC, V6706, P78, DOI 10.1007/978-3-642-21768-5_7
   CYTRON R, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P25, DOI 10.1145/75277.75280
   Dhurjati D., 2006, P 28 INT C SOFTW ENG, P162
   Dhurjati D, 2006, ACM SIGPLAN NOTICES, V41, P144, DOI 10.1145/1133981.1133999
   Dor N, 1998, ACM SIGPLAN NOTICES, V33, P27, DOI 10.1145/277633.277637
   Dudka K, 2013, LECT NOTES COMPUT SC, V7935, P215, DOI 10.1007/978-3-642-38856-9_13
   FERRANTE J, 1984, LECT NOTES COMPUT SC, V167, P125
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   Guyer SZ, 2005, SCI COMPUT PROGRAM, V58, P83, DOI 10.1016/j.scico.2005.02.005
   Heizmann Matthias, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P36, DOI 10.1007/978-3-642-39799-8_2
   Hind M, 1999, ACM T PROGR LANG SYS, V21, P848, DOI 10.1145/325478.325519
   Hind M, 2001, ACM SIGPLAN NOTICES, P54
   Holík L, 2016, LECT NOTES COMPUT SC, V10028, P202, DOI 10.1007/978-3-319-49052-6_13
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Jones Richard WM, 1997, AADEBUG, V97, P13
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kroening Daniel, 2014, TOOLS ALGORITHMS CON, P389, DOI [10.1007/978-3-642-54862-8_26, DOI 10.1007/978-3-642-54862-8_26]
   Lattner C, 2005, ACM SIGPLAN NOTICES, V40, P129, DOI 10.1145/1064978.1065027
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Menezes R, 2018, LECT NOTES COMPUT SC, V10806, P437, DOI 10.1007/978-3-319-89963-3_28
   Midi D, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P127, DOI 10.1145/3052973.3053014
   Nagarakatte S, 2010, ACM SIGPLAN NOTICES, V45, P31
   Nagarakatte S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P245, DOI 10.1145/1542476.1542504
   Necula GC, 2002, ACM SIGPLAN NOTICES, V37, P128, DOI 10.1145/565816.503286
   Nutz A., 2015, LNCS, P458, DOI DOI 10.1007/978-3-662-46681-0
   Project T. L, 2017, LLVM COMPILER INFRAS
   Rinetzky N., 2001, Compiler Construction. 10th International Conference, CC 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2027), P133
   Rocha HO, 2016, LECT NOTES COMPUT SC, V9636, P934, DOI 10.1007/978-3-662-49674-9_64
   Rodrigues R.E., 2013, P 2013 IEEE ACM INT, P33
   Ruwase Olatunji, 2004, NDSS, P159
   Saeed A, 2016, PROCEEDINGS OF THE THIRD WORKSHOP ON CRYPTOGRAPHY AND SECURITY IN COMPUTING SYSTEMS (CS2 2016), P31, DOI 10.1145/2858930.2858936
   Serebryany K., 2012, USENIX ATC 2012, P309
   Suan Hsi Yong, 2003, Software Engineering Notes, V28, P307, DOI 10.1145/949952.940113
   Vitovska M., 2018, ARXIV181012617
   Xia YM, 2005, LECT NOTES COMPUT SC, V3820, P320
NR 47
TC 5
Z9 5
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2020
VL 22
IS 2
SI SI
BP 115
EP 133
DI 10.1007/s10009-019-00526-2
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KX0GO
UT WOS:000521561800003
DA 2024-07-18
ER

PT J
AU Abd Alrahman, Y
   Garbi, G
AF Abd Alrahman, Yehia
   Garbi, Giulio
TI A distributed API for coordinating <i>AbC</i> programs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Attribute-based interaction; Semantics; Process calculi; Programming API
ID CALCULUS
AB Collective adaptive systems exhibit a particular notion of interaction where environmental conditions largely influence interactions. Previously, we proposed a calculus, named AbC, to model and reason about CAS. The calculus proved to be effective by naturally modelling essential CAS features. However, the question on the tradeoff between its expressiveness and its efficiency, when implemented to program CAS applications, is to be answered. In this article, we propose an efficient and distributed coordination infrastructure for AbC. We prove its correctness, and we evaluate its performance. The main novelty of our approach is that AbC components are infrastructure agnostic. Thus the code of a component does not specify how messages are routed in the infrastructure but rather what properties a target component must satisfy. We also developed a Go API, named GoAt, and an Eclipse plugin to program in a high-level syntax which can be automatically used to generate matching Go code. We showcase our development through a non-trivial case study.
C1 [Abd Alrahman, Yehia] Univ Gothenburg, Gothenburg, Sweden.
   [Abd Alrahman, Yehia] Chalmers Univ Technol, Gothenburg, Sweden.
   [Garbi, Giulio] IMT Sch Adv Studies Lucca, Lucca, Italy.
C3 University of Gothenburg; Chalmers University of Technology; IMT School
   for Advanced Studies Lucca
RP Abd Alrahman, Y (corresponding author), Univ Gothenburg, Gothenburg, Sweden.; Abd Alrahman, Y (corresponding author), Chalmers Univ Technol, Gothenburg, Sweden.
EM yehia.abd.alrahman@gu.se
RI ALrahman, Yehia Abd/AAF-4033-2019
OI ALrahman, Yehia Abd/0000-0002-4866-6931; Garbi,
   Giulio/0000-0002-2836-4434
FU University of Gothenburg
FX Open access funding provided by University of Gothenburg.
CR Abd Alrahman Yehia, 2019, Models, Languages, and Tools for Concurrent and Distributed Programming: Essays Dedicated to Rocco De Nicola on the Occasion of His 65th Birthday. Lecture Notes in Computer Science (LNCS 11665), P152, DOI 10.1007/978-3-030-21485-2_10
   Abd Alrahman Yehia, 2018, Leveraging Applications of Formal Methods, Verification and Validation Distributed Systems. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11246), P288, DOI 10.1007/978-3-030-03424-5_19
   Abd Alrahman Y., 2017, PROGRAMMING INTERACT
   Abd Alrahman Y, 2019, J LOG ALGEBR METHODS, V109, DOI 10.1016/j.jlamp.2019.100487
   Abd Alrahman Y, 2019, INFORM COMPUT, V268, DOI 10.1016/j.ic.2019.104457
   Abd Alrahman Y, 2018, LECT NOTES COMPUT SC, V10854, P1, DOI 10.1007/978-3-319-92612-4_1
   Abd Alrahman Y, 2016, LECT NOTES COMPUT SC, V9952, P539, DOI 10.1007/978-3-319-47166-2_38
   Abd Alrahman Y, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1840, DOI 10.1145/2695664.2695668
   Abd Alrahman Y, 2016, LECT NOTES COMPUT SC, V9688, P1, DOI 10.1007/978-3-319-39570-8_1
   Agha G., 1986, Actors: a model of concurrent computation in distributed systems
   Alrahman Y.A., 2019, ARXIV190610793 CORR
   [Anonymous], P ACM INT JOINT C PE
   [Anonymous], 2003, PRINCETON STUDIES CO
   Bonabeau Eric, 1997, Artificial Life, V3, P191, DOI 10.1162/artl.1997.3.3.191
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Bures T, 2016, COMPUTER, V49, P50, DOI 10.1109/MC.2016.377
   CHANG JM, 1984, ACM T COMPUT SYST, V2, P251, DOI 10.1145/989.357400
   Cristian F., 1995, Proceedings ISADS 95. Second International Symposium on Autonomous Decentralized Systems (Cat. No.95TH8073), P215, DOI 10.1109/ISADS.1995.398975
   Cristian F., 1991, IBM TECHNICAL DISCLO, V33, P115
   FISCHER MJ, 1985, J ACM, V32, P374, DOI 10.1145/3149.214121
   Hirschfeld R, 2008, J OBJECT TECHNOL, V7, P125, DOI 10.5381/jot.2008.7.3.a4
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Jensen T. R, 1995, GRAPH COLORING PROBL
   Klarl A., 2014, FORM ASP COMP SOFTW, P183, DOI DOI 10.1007/978-3-319-15317-9_11
   Kleiner A., 2013, 12 INT C AUT AG MULT, P1195
   Maggs BM, 2015, ACM SIGCOMM COMP COM, V45, P52, DOI 10.1145/2805789.2805800
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   Mosses PD, 2004, J LOGIC ALGEBR PROGR, V60-1, P195, DOI 10.1016/j.jlap.2004.03.008
   Nicola Rocco, 2015, Software Engineering for Collective Autonomic Systems. The ASCENS Approach: LNCS 8998, P3, DOI 10.1007/978-3-319-16310-9_1
   Parker J, 2016, J FIELD ROBOT, V33, P877, DOI 10.1002/rob.21601
   PRASAD KVS, 1991, LECT NOTES COMPUT SC, V493, P338
   Robertson JB, 1994, SIAM REV, V36, P316, DOI [10.1137/1036084, DOI 10.1137/1036084]
   Schulze TP, 2008, J COMPUT PHYS, V227, P2455, DOI 10.1016/j.jcp.2007.10.021
   VIOTTI P, 2016, OPEN PROBLEMS NETWOR, DOI DOI 10.1145/2911151.2911162
   Wirsing M, 2015, LECT NOTES COMPUTER
NR 35
TC 3
Z9 3
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2020
VL 22
IS 4
SI SI
BP 477
EP 496
DI 10.1007/s10009-020-00553-4
EA FEB 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MH4SO
UT WOS:000517008400001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Finkbeiner, B
   Hahn, C
   Stenger, M
   Tentrup, L
AF Finkbeiner, Bernd
   Hahn, Christopher
   Stenger, Marvin
   Tentrup, Leander
TI Efficient monitoring of hyperproperties using prefix trees
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Monitoring; Hyperproperties
ID DETERMINISM
AB Hyperproperties, such as non-interference and observational determinism, relate multiple computation traces with each other and are thus not monitorable by tools that consider computations in isolation. We present the monitoring approach implemented in the latest version of RVHyper, a runtime verification tool for hyperproperties. The input to the tool are specifications given in the temporal logic HyperLTL, which extends linear-time temporal logic (LTL) with trace quantifiers and trace variables. RVHyper processes execution traces sequentially until a violation of the specification is detected. In this case, a counterexample, in the form of a set of traces, is returned. RVHyper employs a range of optimizations: a preprocessing analysis of the specification and a procedure that minimizes the traces that need to be stored during the monitoring process. In this article, we introduce a novel trace storage technique that arranges the traces in a tree-like structure to exploit partially equal traces. We evaluate RVHyper on existing benchmarks on secure information flow control, error correcting codes, and symmetry in hardware designs. As an example application outside of security, we show how RVHyper can be used to detect spurious dependencies in hardware designs.
C1 [Finkbeiner, Bernd; Hahn, Christopher; Stenger, Marvin; Tentrup, Leander] Saarland Univ, React Syst Grp, Saarbrucken, Germany.
C3 Saarland University
RP Hahn, C (corresponding author), Saarland Univ, React Syst Grp, Saarbrucken, Germany.
EM Finkbeiner@react.uni-saarland.de; Hahn@react.uni-saarland.de;
   Stenger@react.uni-saarland.de; Tentrup@react.uni-saarland.de
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL.
CR Agrawal S, 2016, P IEEE CSFW, P239, DOI 10.1109/CSF.2016.24
   [Anonymous], 1995, Temporal verification of reactive systems-safety
   Askarov A, 2009, PROCEEDINGS OF THE 22ND IEEE COMPUTER SECURITY FOUNDATIONS SYMPOSIUM, P43, DOI 10.1109/CSF.2009.22
   AUSTIN TH, 2010, P 5 ACM SIGPLAN WORK, DOI DOI 10.1145/1814217.1814220
   Bichhawat A, 2014, INT C PRINC SEC TRUS, P159
   Bonakdarpour Borzoo, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Verification. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11245), P8, DOI 10.1007/978-3-030-03421-4_2
   Bonakdarpour B, 2018, P IEEE COMPUT SECUR, P162, DOI 10.1109/CSF.2018.00019
   Brett N, 2017, LECT NOTES COMPUT SC, V10206, P77, DOI 10.1007/978-3-662-54580-5_5
   Chudnov A, 2014, P IEEE CSFW, P48, DOI 10.1109/CSF.2014.12
   Clarkson B., 2014, INT C PRINC SEC TRUS, P265, DOI [10.1007/978-3-642-54792-8_15, DOI 10.1007/978-3-642-54792-8_15]
   Clarkson MR, 2010, J COMPUT SECUR, V18, P1157, DOI 10.3233/JCS-2009-0393
   Coenen N., 2019, P 34 ANN ACM IEEE S, P1
   Coenen N, 2019, LECT NOTES COMPUT SC, V11561, P121, DOI 10.1007/978-3-030-25540-4_7
   d'Amorim M, 2005, LECT NOTES COMPUT SC, V3576, P364
   DArgenio P.R., 2017, LNCS, V10201, P83, DOI [10.1007/978-3-662-54434-14, DOI 10.1007/978-3-662-54434-14]
   Devriese D, 2010, P IEEE S SECUR PRIV, P109, DOI 10.1109/SP.2010.15
   Dimitrova Rayna, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P342, DOI 10.1007/978-3-642-34026-0_26
   Dimitrova R, 2012, LECT NOTES COMPUT SC, V7148, P169, DOI 10.1007/978-3-642-27940-9_12
   Duret-Lutz A, 2016, LECT NOTES COMPUT SC, V9938, P122, DOI 10.1007/978-3-319-46520-3_8
   Finkbeiner Bernd, 2018, Automated Technology for Verification and Analysis. 16th International Symposium, ATVA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11138), P521, DOI 10.1007/978-3-030-01090-4_31
   Finkbeiner B., 2016, INT C CONCURRENCY TH, DOI [DOI 10.4230/LIPICS.CONCUR.2016.13, 10.4230/LIPIcs.CONCUR.2016.13]
   Finkbeiner B, 2019, FORM METHOD SYST DES, V54, P336, DOI 10.1007/s10703-019-00334-z
   Finkbeiner B, 2018, LECT NOTES COMPUT SC, V10981, P289, DOI 10.1007/978-3-319-96145-3_16
   Finkbeiner B, 2018, LECT NOTES COMPUT SC, V10981, P144, DOI 10.1007/978-3-319-96145-3_8
   Finkbeiner B, 2018, LECT NOTES COMPUT SC, V10806, P194, DOI 10.1007/978-3-319-89963-3_11
   Finkbeiner B, 2017, LECT NOTES COMPUT SC, V10427, P564, DOI 10.1007/978-3-319-63390-9_29
   Finkbeiner B, 2015, LECT NOTES COMPUT SC, V9206, P30, DOI 10.1007/978-3-319-21690-4_3
   Hahn C, 2019, LECT NOTES COMPUT SC, V11428, P115, DOI 10.1007/978-3-030-17465-1_7
   Hahn C, 2019, WILEY BLACK COMP ART, P71
   Kovács M, 2012, LECT NOTES COMPUT SC, V7159, P46, DOI 10.1007/978-3-642-28166-2_6
   LAMPORT L, 1974, COMMUN ACM, V17, P453, DOI 10.1145/361082.361093
   Le Guernic G, 2007, LECT NOTES COMPUT SC, V4435, P75
   McLean John., 1992, J COMPUT SECUR, V1, P37, DOI [10.3233/JCS-1992-1103, DOI 10.3233/JCS-1992-1103]
   ROSCOE AW, 1995, P IEEE S SECUR PRIV, P114, DOI 10.1109/SECPRI.1995.398927
   Sabelfeld A, 2003, IEEE J SEL AREA COMM, V21, P5, DOI 10.1109/JSAC.2002.806121
   Smith G, 2009, LECT NOTES COMPUT SC, V5504, P288
   Stucki Sandro, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P406, DOI 10.1007/978-3-030-30942-8_25
   Suh GE, 2004, ACM SIGPLAN NOTICES, V39, P85, DOI 10.1145/1037187.1024404
   Tabakov D, 2012, FORM METHOD SYST DES, V41, P236, DOI 10.1007/s10703-011-0139-8
   Vanhoef M, 2014, P IEEE CSFW, P293, DOI 10.1109/CSF.2014.28
   Yasuoka H, 2010, LECT NOTES COMPUT SC, V6345, P357, DOI 10.1007/978-3-642-15497-3_22
   Zdancewic S, 2003, P IEEE CSFW, P29, DOI 10.1109/CSFW.2003.1212703
NR 42
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2020
VL 22
IS 6
SI SI
BP 729
EP 740
DI 10.1007/s10009-020-00552-5
EA FEB 2020
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OQ9JV
UT WOS:000516285900001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Rivera, V
   Cataño, N
   Wahls, T
   Rueda, C
AF Rivera, Victor
   Catano, Nestor
   Wahls, Tim
   Rueda, Camilo
TI Code generation for Event-B
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Android; Code generation; Event-B; Formal methods; Java; JML;
   EventB2Java; Rodin; Tokeneer
ID REFINEMENT
AB Event-B is a modelling language and a formal methods approach for correct construction of software. This paper presents our work on code generation for Event-B, including the definition of a syntactic translation from Event-B to JML-annotated Java programs, the implementation of the translation as the EventB2Java tool, and two case studies on the use of EventB2Java. The first case study is on implementing an Android application with the aid of the EventB2Java tool, and the second on testing an Event-B specification of the Tokeneer security-critical system. Additionally, we have benchmarked our EventB2Java tool against two other Java code generators for Event-B.
C1 [Rivera, Victor] Innopolis Univ, Software Engn Lab, Kazan, Russia.
   [Catano, Nestor; Rueda, Camilo] Pontificia Univ Javeriana, Dept Comp Sci, Cali, Colombia.
   [Wahls, Tim] Dickinson Coll, Dept Math & Comp Sci, Carlisle, PA 17013 USA.
C3 Innopolis University; Pontificia Universidad Javeriana; Dickinson
   College
RP Cataño, N (corresponding author), Pontificia Univ Javeriana, Dept Comp Sci, Cali, Colombia.
EM v.rivera@innopolis.ru; nestor.catano@gmail.com; wahlst@dickinson.edu;
   crueda@cic.puj.edu.co
RI Rueda, Camilo/HZH-8521-2023
OI Rueda, camilo/0000-0001-8387-9644
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J. R., 1980, On the construction of programs, P343
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial J.-R., 2009, Sequential Program Development: Teaching Resources
   Abrial JR, 2007, FUND INFORM, V77, P1
   [Anonymous], 2012, State-Machines and Code Generation
   [Anonymous], 2003, High Integrity Software: The SPARK Approach to Safety and Security
   BACK RJ, 1991, STRUCT PROGRAM, V12, P17
   BERNOT G, 1991, SOFTWARE ENG J, V6, P387, DOI 10.1049/sej.1991.0040
   Black R., 2009, Managing the testing process: Practical tools and techniques for managing hardware and software testing, V3rd
   Bouquet F, 2005, LECT NOTES COMPUT SC, V3455, P434
   Bouquet F., 2007, LNCS, V4355, P96
   Bouquet F, 2007, LECT NOTES COMPUT SC, V4355, P285
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Butler M, 2009, LECT NOTES COMPUT SC, V5423, P20
   Cataño N, 2003, LECT NOTES COMPUT SC, V2575, P26
   Catano N., 2012, 27 ACM S APPL COMP S
   Catano N., 2010, PORTUGUESE FORUM INF
   Catano N., 2009, LECT NOTES COMPUTER
   Catano N., 2013, ARXIV E PRINTS
   Catano N, 2010, LECT NOTES COMPUT SC, V5977, P259, DOI 10.1007/978-3-642-11811-1_20
   Cavalcanti A, 2013, REAL-TIME SYST, V49, P614, DOI 10.1007/s11241-013-9182-4
   Cok DR, 2011, LECT NOTES COMPUT SC, V6617, P472, DOI 10.1007/978-3-642-20398-5_35
   Damchoom K., 2010, THESIS
   De Moura L., 2010, Z3: An Efficient Solver
   Edmunds A., 2011, Development of a Heating Controller System
   Edmunds A., 2010, WORKSH TOOL BUILD FO
   Edmunds A., 2011, PLACES
   Filliâtre JC, 2007, LECT NOTES COMPUT SC, V4590, P173
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Jin D, 2008, ALPIT 2008: SEVENTH INTERNATIONAL CONFERENCE ON ADVANCED LANGUAGE PROCESSING AND WEB INFORMATION TECHNOLOGY, PROCEEDINGS, P320, DOI 10.1109/ALPIT.2008.25
   Jones C. B., 1990, PRENTICE HALL INT SE
   LAMPORT L, 1974, COMMUN ACM, V17, P453, DOI 10.1145/361082.361093
   Leavens Gary T, 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI [10.1145/1127878.1127884, DOI 10.1145/1127878.1127884]
   Leuchel M., 2003, LECT NOTES COMPUTER
   Link Johannes, 2003, UNIT TESTING IN JAVA
   Locke Dave, 2010, TECHNICAL REPORT
   Mery D, 2011, P 2 S INF COMM TECHN
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Ostroumov S., 2011, Proceedings of the 2011 14th Euromicro Conference on Digital System Design. Architectures, Methods and Tools. (DSD 2011), P127, DOI 10.1109/DSD.2011.20
   Padidar S., 2010, THESIS
   Rivera V., 2012, The Social-Event Planner
   Rivera V., 2014, ACM S APPL COMP SOFT
   Sarshogh M., 2011, ELECT COMMUN EUR ASS, V46
   Sarshogh M., 2012, Extending Event-B with Discrete Timing Properties
   The KeY Project, INT DED SOFTW DES
   Toom A., 2008, Embedded Real Time Software
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   Wellings A., 2004, CONCURRENT REAL TIME
   Woodcock J., 1996, INT SERIES COMPUTER
   Wright S, 2009, WORKSH INT MOD BAS F
NR 51
TC 22
Z9 23
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2017
VL 19
IS 1
BP 31
EP 52
DI 10.1007/s10009-015-0381-2
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ1AC
UT WOS:000392941500003
DA 2024-07-18
ER

PT J
AU Laarman, A
   Pater, E
   van de Pol, J
   Hansen, H
AF Laarman, Alfons
   Pater, Elwin
   van de Pol, Jaco
   Hansen, Henri
TI Guard-based partial-order reduction
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 20th International SPIN Symposium on Model Checking of Software
CY JUL 08-09, 2013
CL Stony Brook, NY
SP SPIN
DE Model checking; Partial order reduction; Stubborn set; Necessary
   disabling set; Heuristic search; Ample set
ID VERIFICATION
AB This paper aims at making partial-order reduction independent of the modeling language. To this end, we present a guard-based method which is a general-purpose implementation of the stubborn set method. We approach the implementation through so-called necessary enabling sets and do-not-accord sets, and give an algorithm suitable for an abstract model checking interface. We also introduce necessary disabling sets and heuristics to produce smaller stubborn sets and thus better reduction at low costs. We explore the effect of these methods using an implementation in the model checker LTSmin. We experiment with partial-order reduction on a number of Promela models, on benchmarks from the BEEM database in the DVE language, and with several with LTL properties. The efficiency of the heuristic algorithm is established by a comparison to the subset-minimal Deletion algorithm and the simple closure algorithm. We also compare our results to the Spin model checker. While the reductions take longer, they are consistently better than Spin 's ample set and often surpass the upper bound for the process-based ample sets, established empirically earlier on BEEM models.
C1 [Laarman, Alfons] Vienna Univ Technol, Formal Methods Syst Engn, Vienna, Austria.
   [Laarman, Alfons; Pater, Elwin; van de Pol, Jaco] Univ Twente, Formal Methods & Tools, Enschede, Netherlands.
   [Hansen, Henri] Tampere Univ Technol, Dept Math, Tampere, Finland.
C3 Technische Universitat Wien; University of Twente; Tampere University
RP Laarman, A (corresponding author), Vienna Univ Technol, Formal Methods Syst Engn, Vienna, Austria.; Laarman, A (corresponding author), Univ Twente, Formal Methods & Tools, Enschede, Netherlands.
EM alfons.laarman@tuwien.ac.at; elwin.pater@gmail.com; vdpol@cs.utwente.nl;
   henri.hansen@tut.fi
RI Hansen, Henri/B-3693-2016
OI Hansen, Henri/0000-0003-4052-6173; Laarman, Alfons/0000-0002-2433-4174
CR Alur R, 1997, LECT NOTES COMPUT SC, V1254, P340
   [Anonymous], 1996, LECT NOTES COMPUTER, DOI DOI 10.1007/3-540-60761-7
   [Anonymous], THESIS
   Blom S, 2010, LECT NOTES COMPUT SC, V6174, P354
   Clarke EM, 2008, LECT NOTES COMPUT SC, V5000, P1
   COURCOUBETIS C, 1990, LNCS, V531, P233
   Dong YF, 1999, LECT NOTES COMPUT SC, V1579, P74
   Duc-Hiep Chu, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P171, DOI 10.1007/978-3-319-13338-6_14
   Evangelista Sami, 2010, International Journal on Software Tools for Technology Transfer, V12, P155, DOI 10.1007/s10009-010-0137-y
   Evangelista Sami, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P269, DOI 10.1007/978-3-642-33386-6_22
   Geldenhuys J, 2009, LECT NOTES COMPUT SC, V5799, P39, DOI 10.1007/978-3-642-04761-9_4
   GODEFROID P, 1991, LECT NOTES COMPUT SC, V531, P176, DOI 10.1007/BFb0023731
   Godefroid P., 1993, Computer Aided Verification. 5th International Conference, CAV '93 Proceedings, P438
   GODEFROID P, 1993, FORM METHOD SYST DES, V2, P149, DOI 10.1007/BF01383879
   Groote J.F., 2008, P INT WORKSH ADV SOF, p5/1
   Hansen H, 2014, LECT NOTES COMPUT SC, V8559, P391, DOI 10.1007/978-3-319-08867-9_26
   Holzmann G., 1996, Proceedings of the 2nd International SPIN Workshop on Model Checking of Software, P23
   Holzmann G. J., 1995, Formal Description Techniques VII. Proceedings of the 7th IFIP WG 6.1 International Conference on Formal Description Techniques, P197
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Kahlon V, 2009, LECT NOTES COMPUT SC, V5643, P398, DOI 10.1007/978-3-642-02658-4_31
   Katz S., 1988, LECTURE NOTES COMPUT, V354, P489
   Kokkarinen I, 1997, LECT NOTES COMPUT SC, V1254, P328
   Konnov I., 2010, INT WORKSH AUT ALG I
   Laarman Alfons, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P267, DOI 10.1007/978-3-319-13338-6_20
   Laarman Alfons, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P968, DOI 10.1007/978-3-642-39799-8_69
   Laarman Alfons, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P227, DOI 10.1007/978-3-642-39176-7_15
   Laarman Alfons, 2011, Model Checking Software. Proceedings 18th International SPIN Workshop, P38, DOI 10.1007/978-3-642-22306-8_4
   Laarman A. W., 2014, THESIS
   Laarman A.W., 2013, LNCS IN PRESS
   Laarman A, 2011, LECT NOTES COMPUT SC, V6617, P506, DOI 10.1007/978-3-642-20398-5_40
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Lehmann A., 2012, LNCS, V7347, P228, DOI [10.1007/978-3-642-31131-413, DOI 10.1007/978-3-642-31131-413]
   Meijer Jeroen, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P204, DOI 10.1007/978-3-319-13338-6_16
   OW PS, 1988, INT J PROD RES, V26, P35, DOI 10.1080/00207548808947840
   Pater E., 2011, THESIS
   Pelánek R, 2007, LECT NOTES COMPUT SC, V4595, P263
   Peled D., 1994, Computer Aided Verification. 6th International Conference, CAV '94. Proceedings, P377
   Peled D., 1993, Computer Aided Verification. 5th International Conference, CAV '93 Proceedings, P409
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Schwoon S, 2005, LECT NOTES COMPUT SC, V3440, P174
   Sharma A., 2013, CORR
   Siegel S.F., 2011, TECHNICAL REPORT
   Siegel SF, 2012, FORM METHOD SYST DES, V40, P1, DOI 10.1007/s10703-011-0126-0
   Valmari A., 1988, Application and Theory of Petri Nets. 9th European Workshop, P95
   VALMARI A, 1991, LECT NOTES COMPUT SC, V531, P156, DOI 10.1007/BFb0023729
   Valmari A., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P429
   VALMARI A, 1989, LNCS, V366, P89
   Valmari A., 1991, ICATPN APN 90, P491
   VALMARI A, 1997, DIMACS SERIES DISCRE, V29, P213
   Valmari A., 1988, Proceedings of the Finish Artificial Intelligence Symposium STeP-88, V2, P640
   Valmari A, 2010, LECT NOTES COMPUT SC, V6128, P43, DOI 10.1007/978-3-642-13675-7_5
   van der Berg F.I., 2012, PDMC 2012
   Vardi M. Y., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P332
   Varpaaniemi K., 1996, Proceedings of the Eleventh International Symposium on Computer and Information Sciences. ISCIS, P133
   Varpaaniemi K., 1998, THESIS
   Wehrle M., 2014, P 24 INT C AUT PLANN
NR 56
TC 8
Z9 9
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2016
VL 18
IS 4
BP 427
EP 448
DI 10.1007/s10009-014-0363-9
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DR2AV
UT WOS:000379708300006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Abrahám, E
   Havelund, K
AF Abraham, Erika
   Havelund, Klaus
TI Some recent advances in automated analysis
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Analysis; Parallel algorithms; Satisfiability modulo theories; Runtime
   verification; Probabilistic systems
ID MODEL CHECKING; PROGRAM; TIME
AB Due to the increasing complexity of software systems, there is a growing need for automated and scalable software synthesis and analysis. In the last decade, active research in the formal methods community brought interesting results and valuable tools. However, there are still challenges to face and hard problems that need to be solved. We briefly outline some recent trends, and review some of the latest achievements, introducing six papers selected from the 20th International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS 2014).
C1 [Abraham, Erika] Rhein Westfal TH Aachen, Aachen, Germany.
   [Havelund, Klaus] CALTECH, Jet Prop Lab, Pasadena, CA USA.
C3 RWTH Aachen University; California Institute of Technology; National
   Aeronautics & Space Administration (NASA); NASA Jet Propulsion
   Laboratory (JPL)
RP Havelund, K (corresponding author), CALTECH, Jet Prop Lab, Pasadena, CA USA.
EM Klaus.Havelund@jpl.nasa.gov
RI Abraham, Erika/G-5259-2012
OI Abraham, Erika/0000-0002-5647-6134
CR Abraham Erika, 2014, Formal Methods for Executable Software Models. 14th International School on Formal Methods for the Design of Computer, Communication, and Software Systems, SFM 2014. Advanced Lectures: LNCS 8483, P65, DOI 10.1007/978-3-319-07317-0_3
   Abraham E, 2014, LNCS, V8413
   Abraham E., 2015, ARXIV150306974 CORR
   Abrahám E, 2015, PROCEEDINGS OF THE 2015 ACM ON INTERNATIONAL SYMPOSIUM ON SYMBOLIC AND ALGEBRAIC COMPUTATION (ISSAC'15), P1, DOI 10.1145/2755996.2756636
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   [Anonymous], INT C RUNT VER
   [Anonymous], 2001, Cambridge Tracts in Theoretical Computer Science
   [Anonymous], TACAS
   ARMANDO A, 2014, LNCS, V8413, P31
   Armando A, 2016, INT J SOFTW TOOLS TE, V18, P187, DOI 10.1007/s10009-015-0385-y
   Artho C, 2003, SOFTW TEST VERIF REL, V13, P207, DOI 10.1002/stvr.281
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Baier C, 2010, COMMUN ACM, V53, P76, DOI 10.1145/1810891.1810912
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Barringer Howard, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P68, DOI 10.1007/978-3-642-32759-9_9
   Barringer Howard, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P57, DOI 10.1007/978-3-642-21437-0_7
   BARRINGER H, 1985, LNCS, V191
   Barringer H, 2010, J LOGIC COMPUT, V20, P675, DOI 10.1093/logcom/exn076
   Basin D, 2010, LECT NOTES COMPUT SC, V6174, P1, DOI 10.1007/978-3-642-14295-6_1
   Bauer A, 2013, LECT NOTES COMPUT SC, V8174, P59, DOI 10.1007/978-3-642-40787-1_4
   Behrmann Gerd., 2000, CAV 00, P216
   Bensalem S, 2006, LECT NOTES COMPUT SC, V3875, P208
   Bensalem S, 2014, INT J SOFTW TOOLS TE, V16, P1, DOI 10.1007/s10009-013-0294-x
   Bouton T, 2009, LECT NOTES ARTIF INT, V5663, P151, DOI 10.1007/978-3-642-02959-2_12
   Bruttomesso R, 2010, LECT NOTES COMPUT SC, V6015, P150, DOI 10.1007/978-3-642-12002-2_12
   Chen F, 2009, LECT NOTES COMPUT SC, V5505, P246, DOI 10.1007/978-3-642-00768-2_23
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   Corzilius F., 2015, LNCS
   DAVIS M, 1960, J ACM, V7, P201, DOI 10.1145/321033.321034
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Decker N., 2014, LNCS, V8413, P341, DOI DOI 10.1007/978-3-642-54862-8
   Decker N, 2016, INT J SOFTW TOOLS TE, V18, P205, DOI 10.1007/s10009-015-0380-3
   Dehnert C, 2015, LECT NOTES COMPUT SC, V9206, P214, DOI 10.1007/978-3-319-21690-4_13
   Drusinsky D, 2000, LECT NOTES COMPUT SC, V1885, P323
   Dutertre B, 2006, LECT NOTES COMPUT SC, V4144, P81, DOI 10.1007/11817963_11
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Falcone Y., 2013, SUMMER SCH MARKTOBER
   Filippidis I., 2014, Proceedings of the 2014 International SPIN Symposium on Model Checking of Software, P48
   Franzle M., 2007, J. Satisf. Boolean Model. Comput., V1, P209
   Garavel H., 2001, Model Checking Software. 8th International SPIN Workshop. Proceedings (Lecture Notes in Computer Science Vol.2057), P217
   Gibson-Robinson T., 2014, Lecture Notes in Computer Science, V8413, P187
   Gibson-Robinson T, 2016, INT J SOFTW TOOLS TE, V18, P149, DOI 10.1007/s10009-015-0377-y
   Giesl J, 2014, LECT NOTES ARTIF INT, V8562, P184, DOI 10.1007/978-3-319-08587-6_13
   Goubault-Larrecq J, 2008, LECT NOTES COMPUT SC, V5289, P1
   Hahn EM, 2010, LECT NOTES COMPUT SC, V6174, P660, DOI 10.1007/978-3-642-14295-6_56
   Hallé S, 2012, IEEE T SERV COMPUT, V5, P192, DOI 10.1109/TSC.2011.10
   Havelund K., 2004, International Journal on Software Tools for Technology Transfer, V6, P158, DOI 10.1007/s10009-003-0117-6
   Havelund Klaus, 2015, International Journal on Software Tools for Technology Transfer, V17, P143, DOI 10.1007/s10009-014-0309-2
   Havelund K, 2008, LECT NOTES COMPUT SC, V4171, P374
   Heyman Tamir., 2000, CAV 00, P20
   Holzmann Gerard J., 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P18, DOI 10.1007/978-3-642-39176-7_2
   Holzmann Gerard J., 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P155, DOI 10.1007/978-3-642-31759-0_12
   Holzmann GJ, 2007, IEEE T SOFTWARE ENG, V33, P659, DOI 10.1109/TSE.2007.70724
   Holzmann GJ, 2011, IEEE T SOFTWARE ENG, V37, P845, DOI 10.1109/TSE.2010.110
   Isberner M, 2014, MACH LEARN, V96, P65, DOI 10.1007/s10994-013-5419-7
   Katoen JP, 2011, PERFORM EVALUATION, V68, P90, DOI 10.1016/j.peva.2010.04.001
   Kwiatkowska M, 2003, IEEE S LOG, P351, DOI 10.1109/LICS.2003.1210075
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2007, LECT NOTES COMPUT SC, V4486, P220
   LAMPORT L, 1977, IEEE T SOFTWARE ENG, V3, P125, DOI 10.1109/TSE.1977.229904
   Lee I, 1999, INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED PROCESSING TECHNIQUES AND APPLICATIONS, VOLS I-V, PROCEEDINGS, P279
   Lerda F, 1999, LECT NOTES COMPUT SC, V1680, P22
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   LEVIN GM, 1981, ACTA INFORM, V15, P281, DOI 10.1007/BF00289266
   Lowe G, 2016, INT J SOFTW TOOLS TE, V18, P129, DOI 10.1007/s10009-015-0382-1
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   Nelson G., 1979, ACM Transactions on Programming Languages and Systems, V1, P245, DOI 10.1145/357073.357079
   OWICKI S, 1976, COMMUN ACM, V19, P279, DOI 10.1145/360051.360224
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   SHOSTAK RE, 1979, J ACM, V26, P351, DOI 10.1145/322123.322137
   Stern U, 1997, LECT NOTES COMPUT SC, V1254, P256
   Stolz V, 2006, ELECTRON NOTES THEOR, V144, P109, DOI 10.1016/j.entcs.2006.02.007
   Tarvo A., 2011, LNCS, V7186, P245
   von Essen C, 2014, LECT NOTES COMPUTER, P620, DOI DOI 10.1007/978-3-642-54862-8_54
   von Essen C, 2016, INT J SOFTW TOOLS TE, V18, P227, DOI 10.1007/s10009-015-0388-8
   Wijs A., 2014, Proc. of TACAS 2014: the 20th International Conference on Tools and Algorithms for the Construction and Analysis of Systems, V8413, P233, DOI DOI 10.1007/978-3-642-54862-816
   Wijs A, 2016, INT J SOFTW TOOLS TE, V18, P169, DOI 10.1007/s10009-015-0379-9
   Zankl H, 2010, LECT NOTES ARTIF INT, V6355, P481, DOI 10.1007/978-3-642-17511-4_27
   Zhang LT, 2001, ICCAD 2001: IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, DIGEST OF TECHNICAL PAPERS, P279, DOI 10.1109/ICCAD.2001.968634
NR 82
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2016
VL 18
IS 2
BP 121
EP 128
DI 10.1007/s10009-015-0403-0
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK5QQ
UT WOS:000374975200001
DA 2024-07-18
ER

PT J
AU Haxthausen, AE
AF Haxthausen, Anne E.
TI Automated generation of formal safety conditions from railway
   interlocking tables
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Railways; Interlocking systems; Formal methods; Safety; Verification;
   Model checking; Interlocking tables; Signal control tables
ID VERIFICATION
AB This paper describes a tool for extracting formal safety conditions from interlocking tables for railway interlocking systems. The tool has been applied to generate safety conditions for the interlocking system at Stenstrup station in Denmark, and the SAL model checker tool has been used to check that these conditions were satisfied by a model of the relay circuits implementing the interlocking system at Stenstrup station.
C1 [Haxthausen, Anne E.] Tech Univ Denmark, DTU Compute, DK-2800 Lyngby, Denmark.
C3 Technical University of Denmark
RP Haxthausen, AE (corresponding author), Tech Univ Denmark, DTU Compute, DK-2800 Lyngby, Denmark.
EM aeha@dtu.dk
RI Haxthausen, Anne E./HSG-1753-2023
OI Haxthausen, Anne E./0000-0001-7349-8872
CR Aanaes M., 2012, IMMMSC201214 TU DENM
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   Banci M., 2005, SOME EXPERIENCES FOR
   Bjorner D., 2003, P S FORM METH RAILW, P3
   Bliguet M. L., 2008, IMMMSC200868 TU DENM
   Clarke EM, 1999, MODEL CHECKING, P1
   de Moura L., 2003, SRICSL0102
   Eriksson L. - H., 2004, LECT NOTES COMPUTER, V3219
   European Committee for Electrotechnical Standardization, 2011, 501282011 EN EUR COM
   Fantechi A, 2012, RAILWAY SAFETY, RELIABILITY, AND SECURITY: TECHNOLOGIES AND SYSTEMS ENGINEERING, P282, DOI 10.4018/978-1-4666-1643-1.ch012
   Ferrari A., 2011, P FORM METH AUT SAF
   Haxthausen Anne E., 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P118, DOI 10.1007/978-3-642-21437-0_11
   Haxthausen A. E., 2011, LECT NOTES COMPUTER, V6662
   Haxthausen AE, 2011, FORM ASP COMPUT, V23, P191, DOI 10.1007/s00165-009-0143-6
   Haxthausen AE, 2010, LECT NOTES COMPUT SC, V6028, P141
   Mirabadi A, 2009, TRANSP PROBL, V4, P103
   Moller F., 2013, LECT NOTES COMPUTER, V7857
   Schnieder E., 2011, P FORM METH AUT SAF
   The RAISEMethod Group, 1995, BCS PRACTITIONERS SE
   Winter Kirsten, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P246, DOI 10.1007/978-3-642-34032-1_24
   Winter K., 2006, 10 AUSTR WORKSH SAF, V55, P101
   Winter K, 2012, RAILWAY SAFETY, RELIABILITY, AND SECURITY: TECHNOLOGIES AND SYSTEMS ENGINEERING, P298, DOI 10.4018/978-1-4666-1643-1.ch013
   Yan Cao, 2011, 2011 Proceedings of IEEE International Conference on Computer Science and Automation Engineering (CSAE), P511, DOI 10.1109/CSAE.2011.5952519
NR 23
TC 15
Z9 15
U1 1
U2 17
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2014
VL 16
IS 6
BP 713
EP 726
DI 10.1007/s10009-013-0295-9
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HV
UT WOS:000209673400005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Crampton, J
   Huth, M
   Kuo, JHP
AF Crampton, Jason
   Huth, Michael
   Kuo, Jim Huan-Pu
TI Authorized workflow schemas: deciding realizability through LTL(F) model
   checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Computer security; Model checking; Business processes; Linear-time
   temporal logic; Abstraction
AB Many business processes are modeled as workflows, which often need to comply with business rules, legal requirements, and authorization policies. Workflow satisfiability is the problem of determining whether there exists a workflow instance that realizes the workflow specification while simultaneously complying with such constraints. This problem has already been studied by the computer security community, with the development of algorithms and the study of their worst-case complexity. These solutions are often tailored to a particular workflow model and are, therefore, of little or no use in analyzing different models; their worst-case complexities are likely to be an unreliable judge of their feasibility; and they lack support for other forms of analysis such as the determination of the smallest number of users required to satisfy a workflow specification. We propose model checking of an NP-complete fragment LTL(F) of propositional linear-time temporal logic as an alternative solution. We report encodings in LTL(F) that can compute a set of solutions (thus deciding satisfiability), compute minimal user bases and a safe bound on the resiliency of satisfiability under the removal of users. These theoretical contributions are validated through detailed experiments whose results attest to the viability of our proposed approach.
C1 [Crampton, Jason] Univ London, Informat Secur Grp, Royal Holloway, Egham TW20 0EX, Surrey, England.
   [Huth, Michael; Kuo, Jim Huan-Pu] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London, England.
C3 University of London; Royal Holloway University London; Imperial College
   London
RP Huth, M (corresponding author), Univ London Imperial Coll Sci Technol & Med, Dept Comp, London, England.
EM m.huth@imperial.ac.uk
CR Ball T., 2003, International Journal on Software Tools for Technology Transfer, V5, P49, DOI 10.1007/s10009-002-0095-0
   Bertino E., 1999, ACM Trans. Inf. Syst. Secur., V2, P65, DOI 10.1145/300830.300837
   Bogudlov I, 2007, LECT NOTES COMPUT SC, V4590, P221
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   Crampton J., 2011, P INT WORKSH VER VAL
   Crampton J., 2005, P SACMAT 05, P38
   Crampton J, 2012, LECT NOTES BUS INF P, V100, P423
   Crampton J, 2008, SACMAT'08: PROCEEDINGS OF THE 13TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P31
   Hildebrandt TT, 2011, ELECTRON PROC THEOR, P59, DOI 10.4204/EPTCS.69.5
   Rozier Kristin Y., 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P417, DOI 10.1007/978-3-642-21437-0_31
   Rozier Kristin Y., 2010, International Journal on Software Tools for Technology Transfer, V12, P123, DOI 10.1007/s10009-010-0140-3
   Russell NC, 2007, THESIS QUEENSLAND U
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Schmidt D, 1998, LECT NOTES COMPUT SC, V1503, P351
   SISTLA AP, 1985, J ACM, V32, P733, DOI 10.1145/3828.3837
   Tan KJ, 2004, P IEEE CSFW, P155
   van der Aalst WMP, 2009, COMPUT SCI-RES DEV, V23, P99, DOI 10.1007/s00450-009-0057-9
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   VARDI MY, 1994, INFORM COMPUT, V115, P1, DOI 10.1006/inco.1994.1092
   Wang Q, 2007, LECT NOTES COMPUT SC, V4734, P90
   Warner J., 2006, SACMAT 2006. Proceedings of Eleventh ACM Symposium on Access Control Models and Technologies, P190
   Westergaard Michael, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P83, DOI 10.1007/978-3-642-23059-2_10
   Winskel G., 1987, LECT NOTES COMPUT SC, V255, P325
NR 23
TC 7
Z9 8
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2014
VL 16
IS 1
BP 31
EP 48
DI 10.1007/s10009-012-0269-3
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HQ
UT WOS:000209672900003
DA 2024-07-18
ER

PT J
AU Schlüter, M
   Nolte, G
   Murtovi, A
   Steffen, B
AF Schlueter, Maximilian
   Nolte, Gerrit
   Murtovi, Alnis
   Steffen, Bernhard
TI Towards rigorous understanding of neural networks via
   semantics-preserving transformations
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE (Rectifier) neural networks; Activation functions; (Piece-wise) affine
   functions; Linear algebra; Typed affine decision structures; Symbolic
   execution; Explainability; Verification; Robustness; Semantics; XOR;
   Diagnostics; Precision; Digit recognition
AB In this paper, we present an algebraic approach to the precise and global verification and explanation of Rectifier Neural Networks, a subclass of Piece-wise Linear Neural Networks (PLNNs), i.e., networks that semantically represent piece-wise affine functions. Key to our approach is the symbolic execution of these networks that allows the construction of semantically equivalent Typed Affine Decision Structures (TADS). Due to their deterministic and sequential nature, TADS can, similarly to decision trees, be considered as white-box models and therefore as precise solutions to the model and outcome explanation problem. TADS are linear algebras, which allows one to elegantly compare Rectifier Networks for equivalence or similarity, both with precise diagnostic information in case of failure, and to characterize their classification potential by precisely characterizing the set of inputs that are specifically classified, or the set of inputs where two network-based classifiers differ. All phenomena are illustrated along a detailed discussion of a minimal, illustrative example: the continuous XOR function.
C1 [Schlueter, Maximilian; Nolte, Gerrit; Murtovi, Alnis; Steffen, Bernhard] TU Dortmund Univ, Dortmund, Germany.
C3 Dortmund University of Technology
RP Steffen, B (corresponding author), TU Dortmund Univ, Dortmund, Germany.
EM maximilian.schlueter@tu-dortmund.de; gerrit.nolte@tu-dortmund.de;
   alnis.murtovi@tu-dortmund.de; bernhard.steffen@tu-dortmund.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Arora R., 2016, ARXIV
   Axler S., 1997, LINEAR ALGEBRA DONE, DOI [DOI 10.1007/B97662, 10.1007/b97662]
   Bach S, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0130140
   Badue C, 2021, EXPERT SYST APPL, V165, DOI 10.1016/j.eswa.2020.113816
   Bahar RI, 1997, FORM METHOD SYST DES, V10, P171, DOI 10.1023/A:1008699807402
   Bak S., 2021, arXiv
   Berner C, 2019, ARXIV191206680
   Brondsted A., 1983, INTRO CONVEX POLYTOP, DOI [10.1007/978-1-4612-1148-8, DOI 10.1007/978-1-4612-1148-8]
   Brown T., 2020, Advances in Neural Information Processing Systems, V33, P1877, DOI [DOI 10.48550/ARXIV.2005.14165, DOI 10.5555/3495724.3495883]
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Chiu CC, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON ACOUSTICS, SPEECH AND SIGNAL PROCESSING (ICASSP), P4774, DOI 10.1109/ICASSP.2018.8462105
   Chu LY, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P1244, DOI 10.1145/3219819.3220063
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   Doran Derek, 2017, arXiv
   Glorot X., 2011, JMLR Proceedings, V15, P315, DOI DOI 10.1002/ECS2.1832
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Goodfellow I. J., 2014, ARXIV
   Gopinath D., 2018, ARXIV
   Gopinath D, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P282, DOI 10.1109/ICSE-Companion.2019.00115
   Gorokhovik V. V., 1994, Optimization, V31, P209, DOI 10.1080/02331939408844018
   Gossen F, 2021, IT PROF, V23, P8, DOI 10.1109/MITP.2021.3123495
   Gossen F, 2023, INT J SOFTW TOOLS TE, V25, P267, DOI 10.1007/s10009-021-00635-x
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Hanin B., 2019, DEEP RELU NETWORKS H
   Hanin B, 2019, PR MACH LEARN RES, V97
   He J., 2018, ARXIV
   Hinz P., 2021, ARXIV
   Hoang-Dung Tran, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P670, DOI 10.1007/978-3-030-30942-8_39
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kingma D. P., 2014, arXiv
   Lee C, 2018, 2018 16TH IEEE INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP, 16TH IEEE INT CONF ON PERVAS INTELLIGENCE AND COMP, 4TH IEEE INT CONF ON BIG DATA INTELLIGENCE AND COMP, 3RD IEEE CYBER SCI AND TECHNOL CONGRESS (DASC/PICOM/DATACOM/CYBERSCITECH), P885, DOI 10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.00-13
   Linardatos P, 2021, ENTROPY-SWITZ, V23, DOI 10.3390/e23010018
   Lundberg SM, 2017, ADV NEUR IN, V30
   Madry A., 2018, ARXIV
   Mahendran A, 2016, INT J COMPUT VISION, V120, P233, DOI 10.1007/s11263-016-0911-8
   Minsky M., 1969, Perceptrons
   Montavon G, 2017, PATTERN RECOGN, V65, P211, DOI 10.1016/j.patcog.2016.11.008
   Montufar G.F., 2014, NUMBER LINEAR REGION
   Mundhenk T.N., 2019, ARXIV
   Murtovi A, 2023, INT J SOFTW TOOLS TE, V25, P287, DOI 10.1007/s10009-023-00702-5
   Nolte G, 2023, INT J SOFTW TOOLS TE, V25, P355, DOI 10.1007/s10009-023-00701-6
   Oh KS, 2004, PATTERN RECOGN, V37, P1311, DOI 10.1016/j.patcog.2004.01.013
   Ovchinnikov S, 2010, EUR J COMBIN, V31, P1283, DOI 10.1016/j.ejc.2009.11.005
   Pascanu R., 2013, ARXIV
   Raghu M, 2017, PR MACH LEARN RES, V70
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Ruder S., 2016, ARXIV
   Selvaraju RR, 2020, INT J COMPUT VISION, V128, P336, DOI [10.1007/s11263-019-01228-7, 10.1109/ICCV.2017.74]
   Serra T, 2018, PR MACH LEARN RES, V80
   Silver D, 2017, NATURE, V550, P354, DOI 10.1038/nature24270
   Simonyan K, 2013, ARXIV
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Sober E., 2015, Ockham's Razors, DOI [DOI 10.1017/CBO9781107705937, 10.1017/CBO9781107705937]
   Sudjianto A, 2020, ARXIV
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Thibault W.C., 1987, SIGGRAPH COMPUT GRAP, P153, DOI [DOI 10.1145/37402.37421, 10.1145/37402.37421, DOI 10.1145/3740137421, 10.1145/37401.37421]
   Tjoa E, 2021, IEEE T NEUR NET LEAR, V32, P4793, DOI 10.1109/TNNLS.2020.3027314
   Tondel P, 2003, AUTOMATICA, V39, P945, DOI 10.1016/S0005-1098(02)00308-4
   Vinyals O, 2019, NATURE, V575, P350, DOI 10.1038/s41586-019-1724-z
   Wang S., 2021, ARXIV
   Zhang X, 2021, AUTOPHAGY, V17, P1519, DOI 10.1080/15548627.2020.1840796
NR 63
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2023
VL 25
IS 3
BP 301
EP 327
DI 10.1007/s10009-023-00700-7
EA MAY 2023
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S0IX8
UT WOS:000998184400003
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Frohn, F
   Fuhs, C
AF Frohn, Florian
   Fuhs, Carsten
TI A calculus for modular loop acceleration and non-termination proofs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT Conference on Tools and Algorithms for Construction and Analysis of
   Systems (TACAS)
CY APR 25-30, 2020
CL Dublin, IRELAND
DE Loop acceleration; Non-termination; Integer transition systems; Program
   verification; Static analysis
ID ABSTRACT ACCELERATION; PROGRAM TERMINATION; AUTOMATA
AB Loop acceleration can be used to prove safety, reachability, runtime bounds, and (non-)termination of programs. To this end, a variety of acceleration techniques have been proposed. However, so far all of them have been monolithic, i.e., a single loop could not be accelerated using a combination of several different acceleration techniques. In contrast, we present a calculus that allows for combining acceleration techniques in a modular way and we show how to integrate many existing acceleration techniques into our calculus. Moreover, we propose two novel acceleration techniques that can be incorporated into our calculus seamlessly. Some of these acceleration techniques apply only to non-terminating loops. Thus, combining them with our novel calculus results in a new, modular approach for proving non-termination. An empirical evaluation demonstrates the applicability of our approach, both for loop acceleration and for proving non-termination.
C1 [Frohn, Florian] Max Planck Inst Informat, Saarland Informat Campus, Saarbrucken, Germany.
   [Frohn, Florian] Rhein Westfal TH Aachen, LuFG Informat 2, Aachen, Germany.
   [Fuhs, Carsten] Birkbeck Univ London, Dept Comp Sci & Informat Syst, London, England.
C3 Max Planck Society; RWTH Aachen University; University of London;
   Birkbeck University London
RP Frohn, F (corresponding author), Max Planck Inst Informat, Saarland Informat Campus, Saarbrucken, Germany.; Frohn, F (corresponding author), Rhein Westfal TH Aachen, LuFG Informat 2, Aachen, Germany.
EM florian.frohn@cs.rwth-aachen.de
OI Frohn, Florian/0000-0003-0902-1994
FU Deutsche Forschungsgemeinschaft (DFG, GermanResearch Foundation)
   [235950644, GI 274/6-2, 389792660]
FX We thank Marcel Hark, Sophie Tourret, and the anonymous reviewers for
   helpful feedback and comments. Moreover, we thank Jera Hensel for her
   help with AProVE, Radu Iosif and Filip Kone.cny for their helpwith
   Flata, Samir Genaim for his help with iRankFinder, Matthias Heizmann for
   his help with Ultimate, Ehsan Goharshady for his help with RevTerm, and
   Albert Rubio for his help with VeryMax. This work has been funded by the
   Deutsche Forschungsgemeinschaft (DFG, GermanResearch
   Foundation)-235950644 (Project GI 274/6-2), and by the Deutsche
   Forschungsgemeinschaft (DFG, GermanResearch Foundation)-389792660 as
   part of TRR248 (see https:// perspicuous- computing.science).
CR Albert Elvira, 2021, Computer Aided Verification: 33rd International Conference, CAV 2021, Proceedings. Lecture Notes in Computer Science, Theoretical Computer Science and General Issues (12760), P863, DOI 10.1007/978-3-030-81688-9_40
   [Anonymous], 1999, THESIS U LIEGE
   [Anonymous], 2022, STAREXEC HARDWARE SP
   Bagnara R., 2005, arXiv
   Bardin S, 2005, LECT NOTES COMPUT SC, V3707, P474
   Bardin Sebastien, 2008, International Journal on Software Tools for Technology Transfer, V10, P401, DOI 10.1007/s10009-008-0064-3
   Ben-Amram AM, 2019, LECT NOTES COMPUT SC, V11822, P459, DOI 10.1007/978-3-030-32304-2_22
   Boigelot B, 2003, THEOR COMPUT SCI, V309, P413, DOI 10.1016/S0304-3975(03)00314-1
   Bozga M, 2014, LOG METH COMPUT SCI, V10, DOI 10.2168/LMCS-10(3:8)2014
   Bozga M, 2010, LECT NOTES COMPUT SC, V6174, P227, DOI 10.1007/978-3-642-14295-6_23
   Bozga M, 2009, LECT NOTES COMPUT SC, V5505, P337, DOI 10.1007/978-3-642-00768-2_29
   Brockschmidt M., 2012, FORMAL VERIFICATION, V7421, P123, DOI 10.1007/978-3
   Brockschmidt M., 2014, TERMCOMP PROPOSAL PU
   Brockschmidt M, 2016, LECT NOTES COMPUT SC, V9636, P387, DOI 10.1007/978-3-662-49674-9_22
   Chatterjee K, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P1033, DOI 10.1145/3453483.3454093
   Chen H.-Y., 2014, International Conference on Tools and Algorithms for the Construction and Analysis of Systems, P156
   Chen YF, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P135, DOI 10.1145/3192366.3192405
   Comon H, 1998, LECT NOTES COMPUT SC, V1427, P268, DOI 10.1007/BFb0028751
   Cook B, 2014, 2014 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P67, DOI 10.1109/FMCAD.2014.6987597
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Farzan A, 2015, PROCEEDINGS OF THE 15TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2015), P57, DOI 10.1109/FMCAD.2015.7542253
   Frohn, 2022, EMPIRICAL EVALUATION
   Frohn Florian, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12078), P58, DOI 10.1007/978-3-030-45190-5_4
   Frohn F, 2016, LECT NOTES ARTIF INT, V9706, P550, DOI 10.1007/978-3-319-40229-1_37
   Frohn F, 2020, LECT NOTES COMPUT SC, V12389, P89, DOI 10.1007/978-3-030-65474-0_5
   Frohn F, 2020, ACM T PROGR LANG SYS, V42, DOI 10.1145/3410331
   Frohn F, 2019, 2019 FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD), P221, DOI [10.23919/FMCAD.2019.8894271, 10.23919/fmcad.2019.8894271]
   Frohn F, 2019, LECT NOTES COMPUT SC, V11562, P426, DOI 10.1007/978-3-030-25543-5_24
   Ganty P, 2017, INT J SOFTW TOOLS TE, V19, P565, DOI 10.1007/s10009-016-0420-7
   Giesl J, 2019, LECT NOTES COMPUT SC, V11429, P156, DOI 10.1007/978-3-030-17502-3_10
   Giesl J, 2017, J AUTOM REASONING, V58, P3, DOI 10.1007/s10817-016-9388-y
   Goharshady E.K, 2021, REVTERM GITHUB
   Gonnord L, 2006, LECT NOTES COMPUT SC, V4134, P144
   Gonnord L, 2014, SCI COMPUT PROGRAM, V93, P125, DOI 10.1016/j.scico.2013.09.016
   Gulwani S, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P281, DOI 10.1145/1375581.1375616
   Gupta AK, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P147, DOI 10.1145/1328438.1328459
   Hark M., 2020, PROC LPAR EPIC 73, V73, P279, DOI DOI 10.29007/NXV1
   Hojjat Hossein, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P187, DOI 10.1007/978-3-642-33386-6_16
   Hojjat Hossein, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P247, DOI 10.1007/978-3-642-32759-9_21
   Hosseini Mehran, 2019, Schloss Dagstuhl-Leibniz-Zentrum fur Informatik, V132, DOI [10.4230/LIPIcs.ICALP.2019.118, DOI 10.4230/LIPICS.ICALP.2019.118]
   Jeannet B, 2014, ACM SIGPLAN NOTICES, V49, P529, DOI 10.1145/2535838.2535843
   Kincaid Z, 2017, ACM SIGPLAN NOTICES, V52, P248, DOI [10.1145/3062341.3062373, 10.1145/3140587.3062373]
   Konecny F, 2016, LECT NOTES COMPUT SC, V9636, P645, DOI 10.1007/978-3-662-49674-9_42
   Kroening D, 2015, FORM METHOD SYST DES, V47, P75, DOI 10.1007/s10703-015-0228-1
   Larraz D, 2014, LECT NOTES COMPUT SC, V8559, P779, DOI 10.1007/978-3-319-08867-9_52
   Leike J, 2018, LECT NOTES COMPUT SC, V10806, P266, DOI 10.1007/978-3-319-89963-3_16
   Madhukar K, 2015, PROCEEDINGS OF THE 15TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2015), P105, DOI 10.1109/FMCAD.2015.7542259
   Ouaknine J., 2015, P 26 ANN ACM SIAM S, P957, DOI [10.1137/1.9781611973730.65, DOI 10.1137/1.9781611973730.65]
   Silverman J, 2019, LECT NOTES COMPUT SC, V11562, P97, DOI 10.1007/978-3-030-25543-5_7
   Strejcek Jan., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ISSTA 2012, P155, DOI DOI 10.1145/2338965.2336772
   Stump A, 2014, LECT NOTES ARTIF INT, V8562, P367, DOI 10.1007/978-3-319-08587-6_28
   termination, TERM PROBL DAT BAS T
   Urban C, 2016, LECT NOTES COMPUT SC, V9636, P54, DOI 10.1007/978-3-662-49674-9_4
   Velroyen H, 2008, LECT NOTES COMPUT SC, V4966, P154
NR 55
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2022
VL 24
IS 5
SI SI
BP 691
EP 715
DI 10.1007/s10009-022-00670-2
EA OCT 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 6I0IB
UT WOS:000864958200001
OA hybrid, Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Huang, S
   Cleaveland, R
AF Huang, Samuel
   Cleaveland, Rance
TI Temporal-logic query checking over finite data streams
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Temporal logic; Query checking; Data mining; Automata
ID LTL
AB This paper describes a technique for solving temporal-logic queries over finite sets of finite-length data streams. Such data streams arise in many domains, including server logs, program testing, and financial and marketing data; temporal-logic formulas that are satisfied by all data streams in a set can provide insight into the underlying dynamics of the system generating the streams. Our approach to finding such formulas is based on solving queries, or formulas that include an unknown, given in a variant of linear temporal logic (LTL). Solving such a query involves computing all propositional formulas that, when substituted for the unknown in the query, yield an LTL formula satisfied by all data streams in the set. We give an automaton-based approach to solving these queries and demonstrate a working implementation via a pilot study.
C1 [Huang, Samuel; Cleaveland, Rance] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Cleaveland, R (corresponding author), Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
EM srhuang@cs.umd.edu; rance@cs.umd.edu
OI Cleaveland, Rance/0000-0002-4952-5380; Huang, Samuel/0000-0002-7209-550X
FU US National Science Foundation [CNS-1446365]; US Office of Naval
   Research [N000141712622]; U.S. Department of Defense (DOD)
   [N000141712622] Funding Source: U.S. Department of Defense (DOD)
FX Research supported by US National Science Foundation Grant CNS-1446365
   and US Office of Naval Research Grant N000141712622. This paper is an
   extended version of [25].
CR Ackermann C, 2010, LECT NOTES COMPUT SC, V6418, P1, DOI 10.1007/978-3-642-16612-9_1
   AGRAWAL R, 1995, PROC INT CONF DATA, P3, DOI 10.1109/ICDE.1995.380415
   Ahlswede R, 1996, EUR J COMBIN, V17, P677, DOI 10.1006/eujc.1996.0059
   Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   [Anonymous], 1971, Theory of Machines and Computations, DOI DOI 10.1016/B978-0-12-417750-5.50022-1
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   BROWNE MC, 1988, THEOR COMPUT SCI, V59, P115, DOI 10.1016/0304-3975(88)90098-9
   Bruns G, 2001, IEEE S LOG, P409, DOI 10.1109/LICS.2001.932516
   Causality workbench team, 2008, PROMO SIMPL CAUS EFF
   Chan W., 2000, LNCS, V1855, P450, DOI DOI 10.1007/10722167
   Chockler H, 2011, LECT NOTES COMPUT SC, V6504, P76, DOI 10.1007/978-3-642-19583-9_11
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Clarke T.A., 2018, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8
   De Giacomo G., 2013, P 23 INT JOINT C ART, P854, DOI DOI 10.5555/2540128.2540252
   De Giacomo G, 2014, AAAI CONF ARTIF INTE, P1027
   Duret-Lutz A, 2016, LECT NOTES COMPUT SC, V9938, P122, DOI 10.1007/978-3-319-46520-3_8
   Eisner C., 2018, FUNCTIONAL SPECIFICA, P795, DOI [10.1007/978-3-319-10575-8_24, DOI 10.1007/978-3-319-10575-8_24]
   Fionda V, 2016, AAAI CONF ARTIF INTE, P971
   Fradkin D, 2015, KNOWL INF SYST, V45, P731, DOI 10.1007/s10115-014-0817-0
   Georgala K, 2016, FRONT ARTIF INTEL AP, V285, P948, DOI 10.3233/978-1-61499-672-9-948
   Gurfinkel A, 2003, IEEE T SOFTWARE ENG, V29, P898, DOI 10.1109/TSE.2003.1237171
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Huang S.H., 2019, ARXIV PREPRINT ARXIV
   Huang S, 2017, LECT NOTES COMPUT SC, V10471, P34, DOI 10.1007/978-3-319-67113-0_3
   Huang S, 2020, LECT NOTES COMPUT SC, V12327, P252, DOI 10.1007/978-3-030-58298-2_11
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Kupferman O., 2018, HDB MODEL CHECKING, V2018, DOI DOI 10.1007/978-3-319-10575-8_4
   Leucker M, 2017, LECT NOTES COMPUT SC, V10215, P151, DOI 10.1007/978-3-319-56841-6_5
   Meurer A, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.103
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Rosu G, 2006, LECT NOTES COMPUT SC, V4144, P263, DOI 10.1007/11817963_25
   Rosu G, 2016, LECT NOTES COMPUT SC, V10012, P333, DOI [10.1007/978-3-319-46982-9_21, 10.1007/s10703-018-0321-3]
   SISTLA AP, 1985, J ACM, V32, P733, DOI 10.1145/3828.3837
   Vardi M. Y., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P332
   Wolper Pierre, 1985, Logique et Analyse, V1985, P119
NR 35
TC 1
Z9 1
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2022
VL 24
IS 3
SI SI
BP 473
EP 492
DI 10.1007/s10009-022-00656-0
EA APR 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1D5TB
UT WOS:000779022800002
DA 2024-07-18
ER

PT J
AU Hensel, C
   Junges, S
   Katoen, JP
   Quatmannl, T
   Volk, M
AF Hensel, Christian
   Junges, Sebastian
   Katoen, Joost-Pieter
   Quatmannl, Tim
   Volk, Matthias
TI The probabilistic model checker Storm
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Verification; Model checking; Probilistic systems; Markov chain; Markov
   decision process
ID FAULT-TREE ANALYSIS; BISIMULATION MINIMIZATION; PARAMETER SYNTHESIS;
   VERIFICATION; SYSTEMS; SAFETY; PRISM
AB We present the probabilistic model checker Storm. Storm supports the analysis of discrete- and continuous-time variants of both Markov chains and Markov decision processes. Storm has three major distinguishing features. It supports multiple input languages for Markov models, including the Jani and Prism modeling languages, dynamic fault trees, generalized stochastic Petri nets, and the probabilistic guarded command language. It has a modular setup in which solvers and symbolic engines can easily be exchanged. Its Python API allows for rapid prototyping by encapsulating Storm's fast and scalable algorithms. This paper reports on the main features of Storm and explains how to effectively use them. A description is provided of the main distinguishing functionalities of Storm. Finally, an empirical evaluation of different configurations of Storm on the QComp 2019 benchmark set is presented.
C1 [Hensel, Christian; Katoen, Joost-Pieter; Quatmannl, Tim; Volk, Matthias] Rhein Westfal TH Aachen, Aachen, Germany.
   [Junges, Sebastian] Univ Calif Berkeley, Berkeley, CA 94720 USA.
C3 RWTH Aachen University; University of California System; University of
   California Berkeley
RP Katoen, JP (corresponding author), Rhein Westfal TH Aachen, Aachen, Germany.
EM dehnert@cs.rwth-aachen.de; sjunges@berkeley.edu;
   katoen@cs.rwth-aachen.de; tim.quatmann@cs.rwth-aachen.de;
   matthias.volk@cs.rwth-aachen.de
RI Katoen, Joost-Pieter/O-3307-2018
OI Junges, Sebastian/0000-0003-0978-8466; Volk,
   Matthias/0000-0002-3810-4185
FU ERC Advanced Grant [787914]; DFG [RTG 2236]; NSF [1545126, 1646208];
   DARPA Assured Autonomy program, Berkeley Deep Drive; Toyota under the
   iCyPhy center; European Research Council (ERC) [787914] Funding Source:
   European Research Council (ERC); Direct For Computer & Info Scie &
   Enginr [1646208] Funding Source: National Science Foundation; Division
   Of Computer and Network Systems [1646208] Funding Source: National
   Science Foundation
FX We would like to thank all additional contributors to Storm, in
   particular PhilippBerger, DavidKorzeniewski, Jip Spel, as well as
   Dimitri Bohlender, Alexander Bork, Harold Bruintjes, Michael Deutschen,
   Timo Gross, Thomas Heinemann, Thomas Henn, Tom Janson, Jan Karuc,
   Joachim Klein, Gereon Kremer, Sascha V. Kurowski, Manuel S. Weiand, and
   LukasWesthofen. We would like to thank Tom van Dijk for his support
   regarding Sylvan. Furthermore, we would like to thank the users for
   being interested, and for the many kind bug-reports that helped us
   improving the tool. This work has been supported by the ERC Advanced
   Grant 787914 (FRAPPANT) and the DFG RTG 2236 "UnRAVeL." S. Junges would
   like to acknowledge funding from NSF grants 1545126 (VeHICaL) and
   1646208, the DARPA Assured Autonomy program, Berkeley Deep Drive, and by
   Toyota under the iCyPhy center.
CR Abraham Erika, 2014, Formal Methods for Executable Software Models. 14th International School on Formal Methods for the Design of Computer, Communication, and Software Systems, SFM 2014. Advanced Lectures: LNCS 8483, P65, DOI 10.1007/978-3-319-07317-0_3
   Agha G, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3158668
   Alur R., 2015, ACM SIGLOG NEWS, V2, P46
   Amato C, 2010, AUTON AGENT MULTI-AG, V21, P293, DOI 10.1007/s10458-009-9103-z
   Andova S, 2003, LECT NOTES COMPUT SC, V2791, P88
   [Anonymous], 1994, 49 UPPS U
   [Anonymous], 2008, Log. Methods Comput. Sci., DOI DOI 10.2168/LMCS-4(4:8)2008
   [Anonymous], 1990, Advances in computational complexity theory
   [Anonymous], 1993, LNCS
   Ashok P, 2017, LECT NOTES COMPUT SC, V10426, P201, DOI 10.1007/978-3-319-63387-9_10
   ASTROM KJ, 1965, J MATH ANAL APPL, V10, P174, DOI 10.1016/0022-247X(65)90154-X
   Aziz Adnan, 2000, ACM Trans. Comput. Logic, V1, P162, DOI DOI 10.1145/343369.343402
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Baier C, 1997, LECT NOTES COMPUT SC, V1256, P430
   Baier C, 2018, HDB MODEL CHECKING, P963, DOI [DOI 10.1007/978-3-319-10575-8, DOI 10.1007/978-3-319-10575-828, DOI 10.1007/978-3-319-10575-8_28]
   Baier C, 2014, LNCS, V8413, P515, DOI DOI 10.1007/978-3-642-54862-8
   Baier C, 2017, LECT NOTES COMPUT SC, V10206, P269, DOI 10.1007/978-3-662-54580-5_16
   Baier C, 2017, LECT NOTES COMPUT SC, V10426, P160, DOI 10.1007/978-3-319-63387-9_8
   Ball T, 2011, COMMUN ACM, V54, P68, DOI 10.1145/1965724.1965743
   Barrett C, 2015, Tech. rep.
   Bauer MS, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P92, DOI 10.23919/FMCAD.2017.8102246
   Bork A., 2020, ABS200700102 CORR
   Boudali H, 2007, LECT NOTES COMPUT SC, V4762, P441
   Boudali H, 2007, I C DEPEND SYS NETWO, P708, DOI 10.1109/DSN.2007.37
   Bozzano M, 2011, COMPUT J, V54, P754, DOI 10.1093/comjnl/bxq024
   Brázdil T, 2014, LECT NOTES COMPUT SC, V8837, P98, DOI 10.1007/978-3-319-11936-6_8
   Braziunas D, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P690
   Budde C.E., 2020, LNCS
   Budde CE, 2017, LECT NOTES COMPUT SC, V10206, P151, DOI 10.1007/978-3-662-54580-5_9
   Butkova Y, 2019, LECT NOTES COMPUT SC, V11785, P52, DOI 10.1007/978-3-030-30281-8_4
   Butkova Y, 2017, LECT NOTES COMPUT SC, V10206, P188, DOI 10.1007/978-3-662-54580-5_11
   Calder M, 2006, LECT NOTES COMPUT SC, V4220, P44
   Ceska Milan, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P101, DOI 10.1007/978-3-030-30942-8_8
   Chadha R, 2010, ACM T COMPUT LOG, V12, DOI 10.1145/1838552.1838553
   Chatterjee K, 2016, AAAI CONF ARTIF INTE, P3225
   Chatterjee K, 2010, LECT NOTES COMPUT SC, V6281, P258, DOI 10.1007/978-3-642-15155-2_24
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   Corzilius F, 2015, LECT NOTES COMPUT SC, V9340, P360, DOI 10.1007/978-3-319-24318-4_26
   Courcoubetis C., 1988, 29th Annual Symposium on Foundations of Computer Science (IEEE Cat. No.88CH2652-6), P338, DOI 10.1109/SFCS.1988.21950
   Daws C, 2005, LECT NOTES COMPUT SC, V3407, P280
   de Alfaro L, 1998, THIRTEENTH ANNUAL IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, PROCEEDINGS, P454
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Dehnert C, 2015, LECT NOTES COMPUT SC, V9206, P214, DOI 10.1007/978-3-319-21690-4_13
   Dehnert C, 2014, LECT NOTES COMPUT SC, V8837, P146, DOI 10.1007/978-3-319-11936-6_11
   Dehnert C, 2013, LECT NOTES COMPUT SC, V7737, P28
   Delgrange Florent, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12078), P346, DOI 10.1007/978-3-030-45190-5_19
   Dräger K, 2015, LOG METH COMPUT SCI, V11, DOI 10.2168/LMCS-11(2:16)2015
   DUGAN JB, 1990, P REL MAINT S, P286, DOI 10.1109/ARMS.1990.67971
   Eisentraut Christian, 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P90, DOI 10.1007/978-3-642-38697-8_6
   Eisentraut C, 2010, IEEE S LOG, P342, DOI 10.1109/LICS.2010.41
   Forejt Vojtech, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P317, DOI 10.1007/978-3-642-33386-6_25
   Forejt V, 2011, LECT NOTES COMPUT SC, V6605, P112, DOI 10.1007/978-3-642-19835-9_11
   Ghadhab M, 2019, RELIAB ENG SYST SAFE, V186, P37, DOI 10.1016/j.ress.2019.02.005
   Gordon Andrew D., 2014, P FUTURE SOFTWARE EN, P167, DOI [10.1145/2593882.2593900, DOI 10.1145/2593882.2593900]
   Guennebaud G., 2010, Eigen
   Gurobi Optimization LLC, 2019, Gurobi Optimizer Reference Manual
   Haddad Serge, 2014, Reachability Problems. 8th International Workshop, RP 2014. Proceedings: LNCS 8762, P125, DOI 10.1007/978-3-319-11439-2_10
   Hahn Ernst Moritz, 2019, Tools and Algorithms for the Construction and Analysis of Systems. 25 Years of TACAS: TOOLympics. Held as Part of ETAPS 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11429), P69, DOI 10.1007/978-3-030-17502-3_5
   Hahn Ernst Moritz, 2011, International Journal on Software Tools for Technology Transfer, V13, P3, DOI 10.1007/s10009-010-0146-x
   Hahn EM, 2016, LECT NOTES COMPUT SC, V9984, P85, DOI 10.1007/978-3-319-47677-3_6
   Hahn EM, 2014, LECT NOTES COMPUT SC, V8442, P312, DOI 10.1007/978-3-319-06410-9_22
   Han T, 2009, IEEE T SOFTWARE ENG, V35, P241, DOI 10.1109/TSE.2009.5
   Hansen E. A., 1998, Uncertainty in Artificial Intelligence. Proceedings of the Fourteenth Conference (1998), P211
   Hansson H., 1989, Proceedings. Real Time Systems Symposium (Cat. No.89CH2803-5), P102, DOI 10.1109/REAL.1989.63561
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hartmanns A., 2020, JAR
   Hartmanns A, 2020, LECT NOTES COMPUT SC, V12225, P488, DOI 10.1007/978-3-030-53291-8_26
   Hartmanns A, 2019, LECT NOTES COMPUT SC, V11427, P344, DOI 10.1007/978-3-030-17462-0_20
   Hartmanns A, 2018, LECT NOTES COMPUT SC, V10806, P320, DOI 10.1007/978-3-319-89963-3_19
   Hartmanns A, 2015, LECT NOTES COMPUT SC, V9364, P131, DOI 10.1007/978-3-319-24953-7_10
   Hartmanns Arnd, 2014, LNCS, V8413, P593
   Hartonas-Garmhausen V., 1999, Formal Methods for Real-Time and Probabilistic Systems. 5th International AMAST Workshop, ARTS'99. Proceedings, P96
   He JF, 1997, SCI COMPUT PROGRAM, V28, P171, DOI 10.1016/S0167-6423(96)00019-6
   Hensel, 2020, PROBABILISTIC MODEL, DOI 10.5281/zenodo.3571209
   Hensel C, 2018, STORM MODEL CHECKER
   Hermanns H, 2000, LECT NOTES COMPUT SC, V1785, P347
   Holzmann GJ, 2014, COMMUN ACM, V57, P64, DOI 10.1145/2560217.2560218
   Horák K, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4764
   Junges S, 2019, ABS190307993 CORR
   Junges S., 2020, ABS200700085 CORR
   Junges S, 2018, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, P519
   Junges S, 2016, LECT NOTES COMPUT SC, V9636, P130, DOI 10.1007/978-3-662-49674-9_8
   Kaelbling LP, 1998, ARTIF INTELL, V101, P99, DOI 10.1016/S0004-3702(98)00023-X
   Katoen JP, 2007, LECT NOTES COMPUT SC, V4424, P87
   Katoen JP, 2016, PROCEEDINGS OF THE 31ST ANNUAL ACM-IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE (LICS 2016), P31, DOI 10.1145/2933575.2934574
   Katoen JP, 2011, PERFORM EVALUATION, V68, P90, DOI 10.1016/j.peva.2010.04.001
   Klein J, 2018, INT J SOFTW TOOLS TE, V20, P179, DOI 10.1007/s10009-017-0456-3
   Kwek S, 2003, INFORM PROCESS LETT, V86, P23, DOI 10.1016/S0020-0190(02)00455-6
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2002, LECT NOTES COMPUT SC, V2280, P52
   Kwiatkowska M, 2001, LECT NOTES COMPUT SC, V2102, P194
   Kwiatkowska M, 2006, INT CONF QUANT EVAL, P157
   Kwiatkowska M, 2012, FORM ASP COMPUT, V24, P661, DOI 10.1007/s00165-012-0227-6
   Lanotte R, 2007, FORM ASP COMPUT, V19, P93, DOI 10.1007/s00165-006-0015-2
   Larsen KG, 2016, LECT NOTES COMPUT SC, V9952, P3, DOI 10.1007/978-3-319-47166-2_1
   LOVEJOY WS, 1991, OPER RES, V39, P162, DOI 10.1287/opre.39.1.162
   Madani O, 2003, ARTIF INTELL, V147, P5, DOI 10.1016/S0004-3702(02)00378-8
   MARSAN MA, 1984, ACM T COMPUT SYST, V2, P93, DOI 10.1145/190.191
   Meuleau N, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P417
   Norman G, 2017, REAL-TIME SYST, V53, P354, DOI 10.1007/s11241-017-9269-4
   Norris J. R., 1998, MARKOV CHAINS
   Olmedo F, 2018, ACM T PROGR LANG SYS, V40, DOI 10.1145/3156018
   Pajarinen JK., 2011, P ADV NEUR INF PROC, V24, P2636
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   Quatmann T, 2018, LECT NOTES COMPUT SC, V10981, P643, DOI 10.1007/978-3-319-96145-3_37
   Quatmann T, 2017, LECT NOTES COMPUT SC, V10426, P140, DOI 10.1007/978-3-319-63387-9_7
   Quatmann T, 2016, LECT NOTES COMPUT SC, V9938, P50, DOI 10.1007/978-3-319-46520-3_4
   Ruijters E, 2015, COMPUT SCI REV, V15-16, P29, DOI 10.1016/j.cosrev.2015.03.001
   Segala R., 1995, Nordic Journal of Computing, V2, P250
   Somenzi F., CUDD 3 0 0
   Spel J, 2019, LECT NOTES COMPUT SC, V11781, P479, DOI 10.1007/978-3-030-31784-3_28
   Sullivan KJ, 1999, DIG PAP INT SYMP FAU, P232, DOI 10.1109/FTCS.1999.781056
   van Dijk, 2016, THESIS U TWENTE ENSC
   van Dijk T, 2018, INT J SOFTW TOOLS TE, V20, P157, DOI 10.1007/s10009-017-0468-z
   Vardi M. Y., 1985, 26th Annual Symposium on Foundations of Computer Science (Cat. No.85CH2224-4), P327, DOI 10.1109/SFCS.1985.12
   Volk M, 2018, IEEE T IND INFORM, V14, P370, DOI 10.1109/TII.2017.2710316
   Wachter, 2011, THESIS SAARLAND U
   Wimmer Ralf, 2013, Quantitative Evaluation of Systems. 10th International Conference, QEST 2013. Proceedings: LNCS 8054, P39, DOI 10.1007/978-3-642-40196-1_4
   Wimmer R., 2011, LNI, VD-12, P271
   Wimmer R, 2008, IEEE INT SYMP DESIGN, P207
   Winkler T., 2019, LIPICS, V140
   Winterer L, 2017, IEEE DECIS CONTR P, DOI 10.1109/CDC.2017.8263971
NR 125
TC 35
Z9 36
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2022
VL 24
IS 4
BP 589
EP 610
DI 10.1007/s10009-021-00633-z
EA JUL 2021
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3N7AF
UT WOS:000670169200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Falcone, Y
   Krstic, S
   Reger, G
   Traytel, D
AF Falcone, Ylies
   Krstic, Srdan
   Reger, Giles
   Traytel, Dmitriy
TI A taxonomy for classifying runtime verification tools
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Taxonomy; Tool; Classification; Mindmap
ID MODEL; MONITORS; SYSTEMS; COST
AB Over the last 20 years, runtime verification (RV) has grown into a diverse and active field, which has stimulated the development of numerous theoretical frameworks and practical tools. Many of the tools are at first sight very different and challenging to compare. Yet, there are similarities. In this work, we classify RV tools within a high-level taxonomy of concepts. We first present this taxonomy and discuss its different dimensions. Then, we survey the existing RV tools and, where possible with the support of tool authors, classify them according to the taxonomy. While the classification continually evolves, this article presents a snapshot with 60 state-of-the-art RV tools. We believe that this work is an important step in establishing a common terminology in RV and enabling a meaningful comparison of existing RV tools.
C1 [Falcone, Ylies] Univ Grenoble Alpes, Lab Informat Grenoble, Grenoble INP, CNRS,Inria, F-38000 Grenoble, France.
   [Krstic, Srdan] Swiss Fed Inst Technol, Dept Comp Sci, Inst Informat Secur, Zurich, Switzerland.
   [Reger, Giles] Univ Manchester, Manchester, Lancs, England.
   [Traytel, Dmitriy] Univ Copenhagen, Dept Comp Sci, Copenhagen, Denmark.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); Inria; Swiss Federal Institutes of
   Technology Domain; ETH Zurich; University of Manchester; University of
   Copenhagen
RP Falcone, Y (corresponding author), Univ Grenoble Alpes, Lab Informat Grenoble, Grenoble INP, CNRS,Inria, F-38000 Grenoble, France.
EM ylies.falcone@univ-grenoble-alpes.fr; srdan.krstic@inf.ethz.ch;
   giles.reger@manchester.ac.uk; traytel@di.ku.dk
RI Traytel, Dmitriy/AAC-6052-2021; Krstic, Srdan/AAB-7936-2021
OI Traytel, Dmitriy/0000-0001-7982-2768; Krstic, Srdan/0000-0001-8314-2589
FU COST (European Cooperation in Science and Technology) [ARVI IC1402];
   Swiss National Science Foundation Grant "Big Data Monitoring" [167162];
   US Air Force Grant "Monitoring at Any Cost" [FA955017-1-0306];
   H2020-ECSEL [CPS4EU2018-IA, 826276]
FX The authors warmly thank Martin Leucker for the early discussions on the
   taxonomy and its mind map representation. This article is based onwork
   from COST Action ARVI IC1402 [2], supported byCOST (European Cooperation
   in Science and Technology). In particular, the taxonomy and
   classification benefited from discussions within working groups one and
   two of this action. We would also like to acknowledge input from
   participants of Dagstuhl seminar 17462 [93]. We thank anonymous RV and
   STTT reviewers for their input that helped us to improve the
   presentation of this work and to refine the taxonomy. Finally, we would
   like to thank all the tool authors who contributed to the tool
   classification. The research is partially supported by the Swiss
   National Science Foundation Grant "Big Data Monitoring" (167162), the US
   Air Force Grant "Monitoring at Any Cost" (FA955017-1-0306), and by
   H2020-ECSEL grantsCPS4EU2018-IA call -Grant Agreement Number 826276.
CR Ahishakiye F, 2019, 2019 13TH INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE 2019), P86, DOI [10.1109/TASE.2019.00-15, 10.1109/TASE.2019.00019]
   Ahrendt W., 2019, ARXIV190203776 CORR
   Akidau T, 2015, PROC VLDB ENDOW, V8, P1792
   Ancona Davide, 2016, Theory and Practice of Formal Methods. Essays Dedicated to Frank de Boer on the Occasion of His 60th Birthday. LNCS 9660, P47, DOI 10.1007/978-3-319-30734-3_6
   Ancona D, 2017, AAMAS'17: PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS AND MULTIAGENT SYSTEMS, P1457
   [Anonymous], 2011, RV. LNCS, DOI DOI 10.1007/978-3-642-29860-815
   [Anonymous], 2012, LNCS, DOI DOI 10.1007/978-3-642-35632-2_17
   [Anonymous], 2017, 1 INT COMPETITION RU
   Artho Cyrille Valentin, 2013, Hardware and Software: Verification and Testing. 9th International Haifa Verification Conference, HVC 2013. Proceedings: LNCS 8244, P112, DOI 10.1007/978-3-319-03077-7_8
   Artho C, 2015, IEEE INT CONF AUTOM, P858, DOI 10.1109/ASE.2015.95
   Attard Duncan Paul, 2017, Software Engineering and Formal Methods. 15th International Conference, SEFM 2017. Proceedings: Lecture Notes in Computer Society (LNCS 10469), P219, DOI 10.1007/978-3-319-66197-1_14
   Attard DP, 2016, LECT NOTES COMPUT SC, V10012, P473, DOI 10.1007/978-3-319-46982-9_31
   Azzopardi S., 2017, RV CUBES 2017, V3, P10
   Babenko A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P237
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Barringer Howard, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P68, DOI 10.1007/978-3-642-32759-9_9
   Barringer Howard, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P57, DOI 10.1007/978-3-642-21437-0_7
   Barringer H., 2009, EPTCS, V20, P16
   Barringer H., 2004, 18 INT PAR LAND DIST
   Barringer H, 2010, J AEROS COMP INF COM, V7, P365, DOI 10.2514/1.49356
   Barringer H, 2010, J LOGIC COMPUT, V20, P675, DOI 10.1093/logcom/exn076
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P1, DOI 10.1007/978-3-319-75632-5_1
   Bartocci E, 2014, LECT NOTES COMPUT SC, V8734, P1, DOI 10.1007/978-3-319-11164-3_1
   Bartocci Ezio, 2018, LECT RUNTIME VERIFIC, V10457
   Basin D., 2011, International Conference on Runtime Verification (RV), volume 7186 of Lecture Notes in Computer Science, P360, DOI [DOI 10.1007/978-3-642-29860-8_27, 10.1007/978-3-642-29860-8_27]
   Basin D.A., 2017, RV-CuBES. Kalpa Publications in Computing, V3, P29
   Basin D, 2019, FORM METHOD SYST DES, V54, P449, DOI 10.1007/s10703-018-00328-3
   Basin D, 2017, LECT NOTES COMPUT SC, V10206, P94, DOI 10.1007/978-3-662-54580-5_6
   Basin D, 2017, LECT NOTES COMPUT SC, V10548, P85, DOI 10.1007/978-3-319-67531-2_6
   Basin D, 2015, FORM METHOD SYST DES, V46, P262, DOI 10.1007/s10703-015-0222-7
   Basin D, 2015, J ACM, V62, DOI 10.1145/2699444
   Basin D, 2014, LECT NOTES COMPUT SC, V8734, P193, DOI 10.1007/978-3-319-11164-3_16
   Basin David A., 2017, RV-CuBES, V3, P19
   Bauer A, 2016, FORM METHOD SYST DES, V48, P46, DOI [10.1007/978-3-642-32759-9_10, 10.1007/s10703-016-0253-8]
   Ben Cheikh A, 2018, LECT NOTES COMPUT SC, V11237, P437, DOI 10.1007/978-3-030-03769-7_26
   Bersani MM, 2016, PROC INT CONF SOFTW, P888, DOI 10.1145/2884781.2884832
   Bersani MM, 2014, LECT NOTES COMPUT SC, V8411, P276
   Bianculli Domenico, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P144, DOI 10.1007/978-3-319-10431-7_11
   BIANCULLI D, 2012, LNCS, V7684, P55
   Bianculli D, 2014, IEEE INT CONF SERV, P9, DOI 10.1109/SOCA.2014.14
   Blein Y, 2018, FME WORKS FORM, P10, DOI 10.1145/3193992.3193998
   Bonakdarpour B, 2013, FORM METHOD SYST DES, V43, P29, DOI 10.1007/s10703-012-0182-0
   Carle P., 2011, Proceedings of the 2011 IEEE 5th International Symposium on Theoretical Aspects of Software Engineering (TASE 2011), P100, DOI 10.1109/TASE.2011.24
   Carle P., 2013, 1 FRENCH SING WORKSH, V31, P86
   Carle P., 2012, FM 2012 FORMAL METHO
   Cassar I., 2017, RV CUBES, V3, P41
   Cassar I., 2017, KALPA PUBLICATIONS C, V3, P48
   Cassar I, 2016, LECT NOTES COMPUT SC, V9681, P176, DOI 10.1007/978-3-319-33693-0_12
   Cassar I, 2015, LECT NOTES COMPUT SC, V9333, P38, DOI 10.1007/978-3-319-23820-3_3
   Cohen S., 2000, JTREK
   Cok DR, 2014, ELECTRON P THEOR COM, P79, DOI 10.4204/EPTCS.149.8
   Colombo C., 2017, RV CUBES 2017 INT WO, V3, P55, DOI [10.29007/n7td, DOI 10.29007/N7TD]
   Colombo C, 2016, FORM METHOD SYST DES, V49, P109, DOI 10.1007/s10703-016-0251-x
   Colombo C, 2016, LECT NOTES COMPUT SC, V10012, P17, DOI 10.1007/978-3-319-46982-9_2
   Colombo C, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P33, DOI 10.1109/SEFM.2009.13
   Colombo C, 2009, LECT NOTES COMPUT SC, V5596, P135, DOI 10.1007/978-3-642-03240-0_13
   DeAntoni J, 2012, LECT NOTES COMPUT SC, V7304, P34, DOI 10.1007/978-3-642-30561-0_4
   Decker Normann, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P459, DOI 10.1007/978-3-642-38088-4_34
   Decker N, 2016, LECT NOTES COMPUT SC, V9636, P868, DOI 10.1007/978-3-662-49674-9_54
   Decker N, 2016, INT J SOFTW TOOLS TE, V18, P205, DOI 10.1007/s10009-015-0380-3
   Delahaye Mickael., 2013, Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1230, DOI [10.1145/2480362.2480593, DOI 10.1145/2480362.2480593]
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   Díaz A, 2011, IEEE COMMUN LETT, V15, P782, DOI 10.1109/LCOMM.2011.060111.102514
   Donze Alexandre, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P264, DOI 10.1007/978-3-642-39799-8_19
   Donzé A, 2010, LECT NOTES COMPUT SC, V6174, P167, DOI 10.1007/978-3-642-14295-6_17
   Dou W., 2017, KALPA PUBLICATIONS C, P64
   Dou W, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P323, DOI 10.1109/MODELS.2017.9
   Drabek C., 2017, RV CUBES, P71
   DRUSINSKY D, 2006, RUNTIME MONITORING E
   El-Hokayem A, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3355181
   El-Hokayem A, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P125, DOI 10.1145/3092703.3092723
   El-Hokayem A, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P372, DOI 10.1145/3092703.3098224
   Ellul J, 2018, 2018 14TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2018), P158, DOI 10.1109/EDCC.2018.00036
   Falcone Ylies, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P103, DOI 10.1007/978-3-319-75632-5_4
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Falcone Y, 2018, LECT NOTES COMPUT SC, V11237, P241, DOI 10.1007/978-3-030-03769-7_14
   Falcone Y, 2018, LECT NOTES COMPUT SC, V11237, P27, DOI 10.1007/978-3-030-03769-7_3
   Falcone Y, 2015, LECT NOTES COMPUT SC, V9333, P405, DOI 10.1007/978-3-319-23820-3_27
   Falcone Y, 2010, LECT NOTES COMPUT SC, V6418, P89, DOI 10.1007/978-3-642-16612-9_9
   Faymonville P, 2019, LECT NOTES COMPUT SC, V11561, P421, DOI 10.1007/978-3-030-25540-4_24
   Finkbeiner B, 2018, LECT NOTES COMPUT SC, V10806, P194, DOI 10.1007/978-3-319-89963-3_11
   Fragoso Santos Jose, 2015, Trustworthy Global Computing. 10th International Symposium (TGC 2015). Revised Selected Papers: LNCS 9533, P63, DOI 10.1007/978-3-319-28766-9_5
   Francalanza Adrian, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P176, DOI 10.1007/978-3-319-75632-5_6
   Francalanza A, 2017, FORM METHOD SYST DES, V51, P87, DOI 10.1007/s10703-017-0273-z
   Goldberg A., 2005, MODELLING SIMULATION
   Gorostiaga F, 2018, LECT NOTES COMPUT SC, V11237, P282, DOI 10.1007/978-3-030-03769-7_16
   Goubault-Larrecq J, 2018, FORM METHOD SYST DES, V53, P6, DOI 10.1007/s10703-017-0303-x
   Goubault-Larrecq J, 2008, LECT NOTES COMPUT SC, V5289, P1
   Groce A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P129, DOI 10.1145/1810295.1810314
   Halle S., 2017, PROC INT WORKSHOP CO, P81, DOI DOI 10.29007/4CTH
   Hallé S, 2016, LECT NOTES COMPUT SC, V10012, P68, DOI 10.1007/978-3-319-46982-9_6
   Havelund K., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00253-1
   Havelund Klaus, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P58, DOI 10.1007/978-3-030-03427-6_8
   Havelund K., 2004, International Journal on Software Tools for Technology Transfer, V6, P158, DOI 10.1007/s10009-003-0117-6
   Havelund K, 2004, FORM METHOD SYST DES, V24, P189, DOI 10.1023/B:FORM.0000017721.39909.4b
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   Havelund K., 2017, DAGSTUHL REP, V7, P59, DOI [10.4230/DagRep.7.11.59, DOI 10.4230/DAGREP.7.11.59]
   Havelund K, 2008, LECT NOTES COMPUT SC, V5047, P7, DOI 10.1007/978-3-540-68524-1_3
   Havelund K, 2018, LECT NOTES COMPUT SC, V11237, P90, DOI 10.1007/978-3-030-03769-7_7
   Havelund K, 2018, 2018 IEEE 3RD WORKSHOP ON MONITORING AND TESTING OF CYBER-PHYSICAL SYSTEMS (MT-CPS 2018), P12, DOI 10.1109/MT-CPS.2018.00013
   Havelund K, 2018, LECT NOTES COMPUT SC, V10869, P26, DOI 10.1007/978-3-319-94111-0_2
   Havelund K, 2017, LECT NOTES COMPUT SC, V10460, P310, DOI 10.1007/978-3-319-63121-9_16
   Havelund K, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P116, DOI 10.23919/FMCAD.2017.8102249
   Havelund K, 2015, INT J SOFTW TOOLS TE, V17, P143, DOI 10.1007/s10009-014-0309-2
   Jakse R, 2017, PROC INT SYMP SOFTW, P182, DOI 10.1109/ISSRE.2017.19
   Jin D, 2012, PROC INT CONF SOFTW, P1427, DOI 10.1109/ICSE.2012.6227231
   Kane A, 2015, THESIS C MELLON U, DOI [10.1184/R1/6721376.v1, DOI 10.1184/R1/6721376.V1]
   Kane A, 2015, LECT NOTES COMPUT SC, V9333, P102, DOI 10.1007/978-3-319-23820-3_7
   Kauffman S, 2019, ACM IEEE INT CONF CY, P332, DOI 10.1145/3302509.3313327
   Kauffman S, 2018, FORM METHOD SYST DES, V53, P54, DOI 10.1007/s10703-018-0317-z
   Kauffman S, 2016, LECT NOTES COMPUT SC, V10012, P235, DOI 10.1007/978-3-319-46982-9_15
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   Leucker M, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1925, DOI 10.1145/3167132.3167338
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Liqiang Wang, 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P137, DOI 10.1145/1122971.1122993
   Lourenco Joao M., 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P34, DOI 10.1007/978-3-319-75632-5_2
   Luo QZ, 2014, LECT NOTES COMPUT SC, V8734, P285, DOI 10.1007/978-3-319-11164-3_24
   Manjunath, 2019, ARXIV190312468 CORR
   Mariani L, 2011, IEEE T SOFTWARE ENG, V37, P486, DOI 10.1109/TSE.2010.93
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   Milewicz R, 2016, COMPUT LANG SYST STR, V45, P191, DOI 10.1016/j.cl.2016.01.001
   Moosbrugger P, 2017, FORM METHOD SYST DES, V51, P31, DOI 10.1007/s10703-017-0275-x
   Navabpour Samaneh., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P603, DOI [10.1145/2491411.2494596, DOI 10.1145/2491411.2494596]
   Olivain J, 2005, LECT NOTES COMPUT SC, V3576, P286
   Pastore F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P91, DOI 10.1109/ISSRE.2012.9
   Pastore F., 2015, VALIDATION EVOLVING, P85
   Pastore F, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P416, DOI 10.1109/ICST.2013.58
   Piel A, 2014, THESIS U VILLETANEUS
   Pinisetty S, 2015, LECT NOTES COMPUT SC, V9333, P306, DOI 10.1007/978-3-319-23820-3_22
   Pinisetty S, 2014, FORM METHOD SYST DES, V45, P381, DOI 10.1007/s10703-014-0215-y
   Pnueli A, 2008, LECT NOTES COMPUT SC, V5000, P172
   Pnueli A, 2006, LECT NOTES COMPUT SC, V4085, P573
   Rapin N., 2017, International Workshop on Competitions, Usability, Benchmarks, Evaluation, and Standardisation for Runtime Verification Tools, P106
   Rapin N, 2016, LECT NOTES COMPUT SC, V10012, P447, DOI 10.1007/978-3-319-46982-9_28
   Raszyk M., 2020, LNCS, V12302
   Raszyk M, 2019, LECT NOTES COMPUT SC, V11781, P151, DOI 10.1007/978-3-030-31784-3_9
   Reger G., 2017, P INT WORKSH COMP US, P1, DOI [10.29007/2496, DOI 10.29007/2496]
   Reger G., 2015, TACAS, volume 9035 of LNCS, P596, DOI [10.1007/978-3-662-46681-055, DOI 10.1007/978-3-662-46681-055]
   Reger G., 2017, RV CUBES 2017 INT WO, V3
   Reger G, 2016, LECT NOTES COMPUT SC, V10012, P498, DOI 10.1007/978-3-319-46982-9_34
   Reger G, 2016, LECT NOTES COMPUT SC, V10012, P21, DOI 10.1007/978-3-319-46982-9_3
   Reinbacher T, 2014, TACAS, V8413, P357
   Renard M, 2017, LECT NOTES COMPUT SC, V10533, P259, DOI 10.1007/978-3-319-67549-7_16
   Riganelli Oliviero, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P51, DOI 10.1007/978-3-030-03427-6_7
   Riganelli Oliviero, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P182, DOI 10.1109/SEAMS.2017.9
   Salmeron A, THESIS
   Sánchez C, 2019, FORM METHOD SYST DES, V54, P279, DOI 10.1007/s10703-019-00337-w
   Sánchez C, 2018, LECT NOTES COMPUT SC, V11237, P138, DOI 10.1007/978-3-030-03769-7_9
   Schumann J, 2016, LECT NOTES COMPUT SC, V10012, P504, DOI 10.1007/978-3-319-46982-9_35
   Serebryany Konstantin, 2012, USENIX, P309
   Seyster J, 2012, FORM METHOD SYST DES, V41, P295, DOI 10.1007/s10703-012-0171-3
   Signoles Julien, 2017, INT WORKSH COMP US B, P164
   Song D., 2018, ARXIV180604355 CORR
   Soueidi C, 2020, LECT NOTES COMPUT SC, V12399, P323, DOI 10.1007/978-3-030-60508-7_18
   Szekeres L, 2013, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2013.13
   Ulus Dogan, 2014, Formal Modeling and Analysis of Timed Systems. 12th International Conference, FORMATS 2014. Proceedings. LNCS: 8711, P222, DOI 10.1007/978-3-319-10512-3_16
   Ulus D., 2019, ARXIV190100175 CORR
   Ulus D., 2018, ARXIV180108979 CORR
   Ulus D, 2017, LECT NOTES COMPUT SC, V10426, P329, DOI 10.1007/978-3-319-63387-9_16
   Ulus D, 2016, LECT NOTES COMPUT SC, V9636, P736, DOI 10.1007/978-3-662-49674-9_47
   van der Veen Victor, 2012, Research in Attacks, Intrusions, and Defenses. Proceedings of the 15th International Symposium, RAID 2012, P86, DOI 10.1007/978-3-642-33338-5_5
   Walkinshaw N, 2016, EMPIR SOFTW ENG, V21, P811, DOI 10.1007/s10664-015-9367-7
   Wang LQ, 2006, IEEE T SOFTWARE ENG, V32, P93, DOI 10.1109/TSE.2006.1599419
NR 163
TC 28
Z9 28
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2021
VL 23
IS 2
SI SI
BP 255
EP 284
DI 10.1007/s10009-021-00609-z
EA MAY 2021
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SU3HE
UT WOS:000651751000001
DA 2024-07-18
ER

PT J
AU Bertrand, N
   Konnov, I
   Lazic, M
   Widder, J
AF Bertrand, Nathalie
   Konnov, Igor
   Lazic, Marijana
   Widder, Josef
TI Verification of randomized consensus algorithms under round-rigid
   adversaries
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Verification; Distributed algorithms; Fault tolerance; Probabilistic;
   Parameterized
ID DISTRIBUTED ALGORITHMS; DECOMPOSITION; COMPLETENESS; REDUCTION;
   AGREEMENT; PROGRAMS; LIVENESS
AB Randomized fault-tolerant distributed algorithms pose a number of challenges for automated verification: (i) parameterization in the number of processes and faults, (ii) randomized choices and probabilistic properties, and (iii) an unbounded number of asynchronous rounds. This combination makes verification hard. Challenge (i) was recently addressed in the framework of threshold automata. We extend threshold automata to model randomized consensus algorithms that perform an unbounded number of asynchronous rounds. For non-probabilistic properties, we show that it is necessary and sufficient to verify these properties under round-rigid schedules, that is, schedules where processes enter round r only after all processes finished round r-1. For almost-sure termination, we analyze these algorithms under round-rigid adversaries, that is, fair adversaries that only generate round-rigid schedules. This allows us to do compositional and inductive reasoning that reduces verification of the asynchronous multi-round algorithms to model checking of a one-round threshold automaton. We apply this framework and automatically verify the following classic algorithms: Ben-Or's and Bracha's seminal consensus algorithms for crashes and Byzantine faults, 2-set agreement for crash faults, and RS-Bosco for the Byzantine case.
C1 [Bertrand, Nathalie] Univ Rennes, INRIA, IRISA, CNRS, Rennes, France.
   [Konnov, Igor; Widder, Josef] Informal Syst, Vienna, Austria.
   [Lazic, Marijana] Tech Univ Munich, Munich, Germany.
C3 Universite de Rennes; Inria; Centre National de la Recherche
   Scientifique (CNRS); Technical University of Munich
RP Lazic, M (corresponding author), Tech Univ Munich, Munich, Germany.
EM igor@informal.systems; lazic@in.tum.de
FU Interchain Foundation, Switzerland; Austrian Science Fund (FWF) [S11403,
   S11405, P27722, W1255-N23]; Vienna Science and Technology Fund (WWTF)
   via project APALACHE [ICT15-103]; European Research Council (ERC) under
   the European Union's Horizon 2020 research and innovation programme
   [787367]; Inria; CNRS; RENATER; Austrian Science Fund (FWF) [P27722]
   Funding Source: Austrian Science Fund (FWF)
FX Supported by Interchain Foundation, Switzerland; by the Austrian Science
   Fund (FWF) via the National Research Network RiSE (S11403, S11405),
   project PRAVDA (P27722), and Doctoral College Log-iCS (W1255-N23); by
   the Vienna Science and Technology Fund (WWTF) via project APALACHE
   (ICT15-103); and by the European Research Council (ERC) under the
   European Union's Horizon 2020 research and innovation programme Under
   Grant Agreement No. 787367 (PaVeS). Experiments presented in this paper
   were carried out using the Grid'5000 testbed, supported by a scientific
   interest group hosted by Inria and including CNRS, RENATER, and others,
   see www.grid5000.fr..
CR Aguilera MK, 2012, DISTRIB COMPUT, V25, P371, DOI 10.1007/s00446-012-0162-z
   APT KR, 1986, INFORM PROCESS LETT, V22, P307, DOI 10.1016/0020-0190(86)90071-2
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Ben-Or M., 1983, P 2 ANN ACM S PRINC, P27, DOI DOI 10.1145/800221.806707
   Berkovits I, 2019, LECT NOTES COMPUT SC, V11562, P245, DOI 10.1007/978-3-030-25543-5_15
   Bertrand N., 2013, IARCS ANN C FDN SOFT, V24, P501
   Bloem Roderick P., 2015, Decidability of parameterized verification.
   Bouajjani A, 2018, LECT NOTES COMPUT SC, V10982, P372, DOI 10.1007/978-3-319-96142-2_23
   BRACHA G, 1987, INFORM COMPUT, V75, P130, DOI 10.1016/0890-5401(87)90054-X
   Chaouch-Saad M, 2009, LECT NOTES COMPUT SC, V5797, P93, DOI 10.1007/978-3-642-04420-5_10
   Charron-Bost B., 2009, INT J SOFTWARE INFOR, V3, P273
   Clarke T.A., 2018, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8
   Damian A, 2019, LECT NOTES COMPUT SC, V11562, P344, DOI 10.1007/978-3-030-25543-5_20
   Dragoi C, 2014, LECT NOTES COMPUT SC, V8318, P161, DOI 10.1007/978-3-642-54013-4_10
   ELRAD T, 1982, SCI COMPUT PROGRAM, V2, P155, DOI 10.1016/0167-6423(83)90013-8
   Emerson E. A., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P85, DOI 10.1145/199448.199468
   FISCHER MJ, 1985, J ACM, V32, P374, DOI 10.1145/3149.214121
   Gleissenthall, 2019, PACMPL, V3
   Grimmet G.R., 1992, PROBABILITY RANDOM P, V2nd
   Hawblitzel C, 2017, COMMUN ACM, V60, P83, DOI 10.1145/3068608
   Henzinger, 2018, CONCUR
   John Annu, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P209, DOI 10.1007/978-3-642-39176-7_14
   Konnov, 2018, CONCUR
   Konnov Igor, 2018, Leveraging Applications of Formal Methods, Verification and Validation Distributed Systems. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11246), P327, DOI 10.1007/978-3-030-03424-5_22
   Konnov I, 2017, FORM METHOD SYST DES, V51, P270, DOI 10.1007/s10703-017-0297-4
   Konnov I, 2017, ACM SIGPLAN NOTICES, V52, P719, DOI 10.1145/3093333.3009860
   Konnov I, 2017, INFORM COMPUT, V252, P95, DOI 10.1016/j.ic.2016.03.006
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2002, LECT NOTES COMPUT SC, V2529, P194
   Kwiatkowska M, 2001, LECT NOTES COMPUT SC, V2102, P194
   Lamport L., 2002, SPECIFYING SYSTEMS T
   LEHMANN D, 1981, P 8 ANN ACM S PRINC, P133, DOI DOI 10.1145/567532.567547
   LENGAL O, 2017, LNCS, P499
   Lin AW, 2016, LECT NOTES COMPUT SC, V9780, P112, DOI 10.1007/978-3-319-41540-6_7
   MARIC O, 2017, LNCS, P217
   McIver Annabelle., 2005, MG COMP SCI
   Mostéfaoui A, 2018, THEOR COMPUT SCI, V709, P80, DOI 10.1016/j.tcs.2017.03.018
   Nestmann U, 2003, LECT NOTES COMPUT SC, V2761, P399
   Padon O, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3140568
   PNUELI A, 1986, DISTRIB COMPUT, V1, P53, DOI 10.1007/BF01843570
   Song YJ, 2008, LECT NOTES COMPUT SC, V5218, P438, DOI 10.1007/978-3-540-87779-0_30
   Steiner W, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P189
   Stoilkovska I, 2019, LECT NOTES COMPUT SC, V11428, P357, DOI 10.1007/978-3-030-17465-1_20
   SUZUKI I, 1988, INFORM PROCESS LETT, V28, P213, DOI 10.1016/0020-0190(88)90211-6
   Swaminathan M, 2012, FORM ASP COMPUT, V24, P477, DOI 10.1007/s00165-012-0231-x
   Tsuchiya T, 2008, LECT NOTES COMPUT SC, V5218, P466, DOI 10.1007/978-3-540-87779-0_32
   Tsuchiya T, 2011, DISTRIB COMPUT, V23, P341, DOI 10.1007/s00446-010-0123-3
   Widder J., 2021, VMCAI
   Widder N., 2019, CONCUR, V140
   Woos D, 2016, PROCEEDINGS OF THE 5TH ACM SIGPLAN CONFERENCE ON CERTIFIED PROGRAMS AND PROOFS (CPP'16), P154, DOI 10.1145/2854065.2854081
   Zuck LD, 2018, LECT NOTES COMPUT SC, V10747, P336, DOI 10.1007/978-3-319-73721-8_16
NR 51
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2021
VL 23
IS 5
BP 797
EP 821
DI 10.1007/s10009-020-00603-x
EA FEB 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XD7NM
UT WOS:000613964400001
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Bartocci, E
   Manjunath, N
   Mariani, L
   Mateis, C
   Nickovic, D
AF Bartocci, Ezio
   Manjunath, Niveditha
   Mariani, Leonardo
   Mateis, Cristinel
   Nickovic, Dejan
TI CPSDebug: Automatic failure explanation in CPS models
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Cyber-physical systems; Testing; Debugging; Model-based development;
   Property mining; Failure explanation
AB Debugging cyber-physical system (CPS) models is a cumbersome and costly activity. CPS models combine continuous and discrete dynamics-a fault in a physical component manifests itself in a very different way than a fault in a state machine. Furthermore, faults can propagate both in time and space before they can be detected at the observable interface of the model. As a consequence, explaining the reason of an observed failure is challenging and often requires domain-specific knowledge. In this paper, we propose approach, a novel CPSDebug that combines testing, specification mining, and failure analysis, to automatically explain failures in Simulink/Stateflow models. In particular, we address the hybrid nature of CPS models by using different methods to infer properties from continuous and discrete state variables of the model. We evaluate CPSDebug on two case studies, involving two main scenarios and several classes of faults, demonstrating the potential value of our approach.
C1 [Bartocci, Ezio; Manjunath, Niveditha] TU Wien, Vienna, Austria.
   [Manjunath, Niveditha; Mateis, Cristinel; Nickovic, Dejan] AIT Austrian Inst Technol, Vienna, Austria.
   [Mariani, Leonardo] Univ Milano Bicocca, Milan, Italy.
C3 Technische Universitat Wien; Austrian Institute of Technology (AIT);
   University of Milano-Bicocca
RP Manjunath, N (corresponding author), TU Wien, Vienna, Austria.; Manjunath, N (corresponding author), AIT Austrian Inst Technol, Vienna, Austria.
EM ezio.bartocci@tuwien.ac.at; niveditha.manjunath@live.com;
   leonardo.mariani@unimib.it; cristinel.mateis@ait.ac.at;
   dejan.nickovic@ait.ac.at
OI Bartocci, Ezio/0000-0002-8004-6601; Mateis,
   Cristinel/0000-0001-7502-0688; Nickovic, Dejan/0000-0001-5468-0396
FU TU Wien (TUW)
FX Open Access funding provided by TU Wien (TUW)
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   Babenko A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P237
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P135, DOI 10.1007/978-3-319-75632-5_5
   Bartocci E, 2019, LECT NOTES COMPUT SC, V11724, P69, DOI 10.1007/978-3-030-30446-1_4
   Bartocci E, 2018, HSCC 2018: PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (PART OF CPS WEEK), P197, DOI 10.1145/3178126.3178131
   Befrouei MT, 2016, FORM METHOD SYST DES, V49, P1, DOI 10.1007/s10703-015-0240-5
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Deshmukh J, 2018, ACM IEEE INT CONF CY, P220, DOI 10.1109/ICCPS.2018.00029
   Ding M, 2013, IEEE INT CON DIS, P303, DOI 10.1109/ICDCSW.2013.45
   Diwakaran RD, 2017, ACM IEEE INT CONF CY, P109, DOI 10.1145/3055004.3055029
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Ferrère T, 2015, LECT NOTES COMPUT SC, V9364, P241, DOI 10.1007/978-3-319-24953-7_20
   Ghidella Jason, 2005, AIAA MOD SIM TECHN C, P5886, DOI DOI 10.2514/6.2005-5886
   Hastie T., 2009, The Elements of Statistical Learning: Data Mining, Inference, and Prediction, DOI DOI 10.1007/978-0-387-84858-7
   Hoxha B., 2015, ARCH14-15. 1st and 2nd International Workshop on Applied veRification for Continuous and Hybrid Systems, V34, P25
   Johnson T.T., 2015, P 6 INT C CYBER PHYS, P208, DOI DOI 10.1145/2735960.2735979.
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Liu B, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P359, DOI 10.1109/SANER.2017.7884636
   Liu B, 2016, SOFTW TEST VERIF REL, V26, P431, DOI 10.1002/stvr.1605
   Liu B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P146, DOI 10.1109/SANER.2016.38
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Maler O., 2013, Int. J. Softw. Tools Technol. Transfer, V15, P247
   Mariani L, 2011, IEEE T SOFTWARE ENG, V37, P486, DOI 10.1109/TSE.2010.93
   Nghiem T, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P211
   Nguyen LV, 2018, ACM TRANS CYBER-PHYS, V2, DOI 10.1145/3170500
   Pastore F, 2017, IEEE INT CONF SOFTW, P401, DOI 10.1109/ICST.2017.43
   Pastore L, 2014, S F-SCIENZAEFILOSOFI, P37
   Sankaranarayanan S, 2012, HSCC 12: PROCEEDINGS OF THE 15TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P125
   Sharma AB, 2013, I C DEPEND SYS NETWO
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
NR 31
TC 11
Z9 11
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2021
VL 23
IS 5
BP 783
EP 796
DI 10.1007/s10009-020-00599-4
EA JAN 2021
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XD7NM
UT WOS:000606257800001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Beyer, D
   Huisman, M
AF Beyer, Dirk
   Huisman, Marieke
TI Tools for the construction and analysis of systems A special issue for
   TACAS 2018
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Safety analysis; Quantitative analysis; Deductive verification;
   Statistical model checking; Runtime analysis; Refinement; Reactive
   system; Cyber-physical system; Weak-memory model; Hyperproperty
AB In order to develop reliable software and systems, we depend on practical techniques for the construction and analysis of such software and systems. This special issue of Software Tools for Technology Transfer presents various tool-supported techniques that can help with the construction and analysis of such reliable software and systems. The papers in this special issue are extended versions of selected conference papers from the proceedings of the 24th International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS 2018).
C1 [Beyer, Dirk] Ludwig Maximilians Univ Munchen, Oettingenstr 67, D-80538 Munich, Germany.
   [Huisman, Marieke] Univ Twente, POB 217, NL-7500 AE Enschede, Netherlands.
C3 University of Munich; University of Twente
RP Beyer, D (corresponding author), Ludwig Maximilians Univ Munchen, Oettingenstr 67, D-80538 Munich, Germany.
EM dirk.beyer@sosy-lab.org
RI ; Beyer, Dirk/R-2534-2017
OI Huisman, Marieke/0000-0003-4467-072X; Beyer, Dirk/0000-0003-4832-7662
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL. We are grateful to all the
   authors for their contributions and to the program committee of TACAS
   2018 for their help in selecting the papers for the conference program,
   including the papers for this issue. We are especially grateful to the
   TACAS 2018 program committee and external referees who reviewed the
   extended versions of the papers that appear in this special issue.
CR Beyer D., 2018, LNCS, DOI [10.1007/978-3-319-89960-2, DOI 10.1007/978-3-319-89960-2]
   Budde CE, 2020, INT J SOFTW TOOLS TE, V22, P759, DOI 10.1007/s10009-020-00563-2
   Dragomir I, 2020, INT J SOFTW TOOLS TE, V22, P689, DOI 10.1007/s10009-020-00561-4
   Finkbeiner B, 2020, INT J SOFTW TOOLS TE, V22, P729, DOI 10.1007/s10009-020-00552-5
   Huisman M., 2018, LNCS, V10806, DOI [10.1007/978-3-319-89963-3, DOI 10.1007/978-3-319-89963-3]
   Nickovic D, 2020, INT J SOFTW TOOLS TE, V22, P741, DOI 10.1007/s10009-020-00582-z
   Summers AJ, 2020, INT J SOFTW TOOLS TE, V22, P709, DOI 10.1007/s10009-020-00559-y
NR 7
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2020
VL 22
IS 6
SI SI
BP 685
EP 687
DI 10.1007/s10009-020-00581-0
EA JUL 2020
PG 3
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OQ9JV
UT WOS:000548105400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Li, Y
   Wu, WY
   Feng, Y
AF Li, Yi
   Wu, Wenyuan
   Feng, Yong
TI On ranking functions for single-path linear-constraint loops
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software reliability; Program termination; Linear ranking functions;
   Farkas' lemma
ID TERMINATION
AB Program termination is a fundamental research topic in program analysis. In this paper, we present a new complete polynomial-time method for the existence problem of linear ranking functions for single-path loops described by a conjunction of linear constraints, when variables range over the reals (or rationals). Unlike existing methods, our method does not depend on Farkas' Lemma and provides us with counterexamples to existence of linear ranking functions, when no linear ranking function exists. In addition, we extend our results established over the rationals to the setting of the integers. This deduces an alternative approach to deciding whether or not a given SLC loop has a linear ranking function over the integers. Finally, we prove that the termination of bounded single-path linear-constraint loops is decidable over the reals (or rationals).
C1 [Li, Yi; Wu, Wenyuan; Feng, Yong] Chinese Acad Sci, Chongqing Inst Green & Intelligent Technol, Chongqing, Peoples R China.
C3 Chinese Academy of Sciences; Chongqing Institute of Green & Intelligent
   Technology, CAS
RP Li, Y (corresponding author), Chinese Acad Sci, Chongqing Inst Green & Intelligent Technol, Chongqing, Peoples R China.
EM zm_liyi@163.com; wuwenyuani@cigit.ac.cn; yongfeng@cigit.ac.cn
FU National Natural Science Foundation of China NNSFC [61572024, 61103110];
   Natural Science Foundation of Chongqing [cstc2019jcyj-msxmX0638]
FX The authors would like to thank the two anonymous reviewers for their
   helpful comments and suggestions. This research is partially supported
   by the National Natural Science Foundation of China NNSFC (61572024,
   61103110) and the Natural Science Foundation of Chongqing
   (cstc2019jcyj-msxmX0638).
CR Alipranties C, 2006, INFINITE DIMENSIONAL
   Bagnara R., 2013, PPDP, P229
   Bagnara R, 2012, INFORM COMPUT, V215, P47, DOI 10.1016/j.ic.2012.03.003
   Ben-Amram AM, 2017, LECT NOTES COMPUT SC, V10427, P601, DOI 10.1007/978-3-319-63390-9_32
   Ben-Amram AM, 2014, J ACM, V61, DOI 10.1145/2629488
   Borwein JM, 2009, J CONVEX ANAL, V16, P699
   Boyd S., 2004, CONVEX OPTIMIZATION
   Bradley AR, 2005, LECT NOTES COMPUT SC, V3576, P491
   Braverman M, 2006, LECT NOTES COMPUT SC, V4144, P372, DOI 10.1007/11817963_34
   Chen YH, 2007, LECT NOTES COMPUT SC, V4711, P34
   Colon M. A., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P67
   Cook B, 2013, LECT NOTES COMPUT SC, V7795, P47, DOI 10.1007/978-3-642-36742-7_4
   Cousot P, 2005, LECT NOTES COMPUT SC, V3385, P1
   Duistermaat J. J., 2004, Multidimensional Real Analysis II, V86
   FEAUTRIER P, 1992, INT J PARALLEL PROG, V21, P313, DOI 10.1007/BF01407835
   Floudas C. A., 2009, Encyclopedia of Optimization, V2nd
   Heizmann Matthias, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P365, DOI 10.1007/978-3-319-02444-8_26
   Jing L, 2017, INTERNATIONAL SYMPOSIUM 2017: INNOVATION OF EDUCATIONAL THEORY AND TEACHING PRACTICE, P225
   Korte B, 2012, ALGORITHMS COMB, V21, P1, DOI 10.1007/978-3-642-24488-9
   Leike J, 2018, LECT NOTES COMPUT SC, V10806, P266, DOI 10.1007/978-3-319-89963-3_16
   Leike J, 2015, LOG METH COMPUT SCI, V11, DOI 10.2168/LMCS-11(1:16)2015
   Li Y, 2017, THEOR COMPUT SCI, V681, P75, DOI 10.1016/j.tcs.2017.03.036
   Li Y, 2016, 2016 10TH INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P30, DOI 10.1109/TASE.2016.8
   Liu J, 2014, J SYST SCI COMPLEX, V27, P1286, DOI 10.1007/s11424-014-2145-6
   Ouaknine J., 2015, SODA 15, P957
   Podelski A, 2004, LECT NOTES COMPUT SC, V2937, P239
   Rebiha R., 2013, SYMBOLIC COMPUTATION, P81
   Schrijver A., 1998, THEORY LINEAR INTEGE
   Sohn K., 1991, Proceedings of the Tenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P216, DOI 10.1145/113413.113433
   Tiwari A, 2004, LECT NOTES COMPUT SC, V3114, P70
NR 30
TC 2
Z9 3
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2020
VL 22
IS 6
SI SI
BP 655
EP 666
DI 10.1007/s10009-019-00549-9
EA NOV 2019
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OQ9JV
UT WOS:000496208800001
DA 2024-07-18
ER

PT J
AU Khamespanah, E
   Sirjani, M
   Mechitov, K
   Agha, G
AF Khamespanah, Ehsan
   Sirjani, Marjan
   Mechitov, Kirill
   Agha, Gul
TI Modeling and analyzing real-time wireless sensor and actuator networks
   using actors and model checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 23rd International SPIN Symposium on Model Checking of Software (SPIN)
CY APR 07-08, 2016
CL Eindhoven, NETHERLANDS
DE Sensor network; Schedulability analysis; Actor; Timed Rebeca; Model
   checking
ID SCHEDULABILITY ANALYSIS; VERIFICATION
AB Programmers often use informal worst-case analysis and debugging to ensure that schedulers satisfy real-time requirements. Not only can this process be tedious and error-prone, it is inherently conservative and thus likely to lead to an inefficient use of resources. We propose to use model checking to find a schedule which optimizes the use of resources while satisfying real-time requirements. Specifically, we represent a Wireless sensor and actuator network (WSAN) as a collection of actors whose behaviors are specified using a Java-based actor language extended with operators for real-time scheduling and delay representation. We show how the abstraction mechanism and the compositionality of actors in the actor model may be used to incrementally build a model of a WSAN's behavior from node-level and network models. We demonstrate the approach with a case study of a distributed real-time data acquisition system for high-frequency sensing using Timed Rebeca modeling language and the Afra model checking tool.
C1 [Khamespanah, Ehsan] Univ Tehran, Sch ECE, Tehran, Iran.
   [Khamespanah, Ehsan; Sirjani, Marjan] Reykjavik Univ, Sch Comp Sci, Reykjavik, Iceland.
   [Khamespanah, Ehsan; Sirjani, Marjan] Reykjavik Univ, CRESS, Reykjavik, Iceland.
   [Sirjani, Marjan] Malardalen Univ, Sch IDT, Vasteras, Sweden.
   [Mechitov, Kirill; Agha, Gul] Univ Illinois, OSL, Champaign, IL USA.
C3 University of Tehran; Reykjavik University; Reykjavik University;
   Malardalen University; University of Illinois System; University of
   Illinois Urbana-Champaign
RP Khamespanah, E (corresponding author), Univ Tehran, Sch ECE, Tehran, Iran.; Khamespanah, E (corresponding author), Reykjavik Univ, Sch Comp Sci, Reykjavik, Iceland.; Khamespanah, E (corresponding author), Reykjavik Univ, CRESS, Reykjavik, Iceland.
EM e.khamespanah@ut.ac.ir
FU project "Self-Adaptive Actors: SEADA" of the Icelandic Research Fund
   [163205-051]; Air Force Research Laboratory [FA8750-11-2-0084]; Air
   Force Office of Scientific Research [FA8750-11-2-0084]; National Science
   Foundation [CCF-1438982]; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [1438982, 1617401]
   Funding Source: National Science Foundation; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1438969] Funding Source: National Science Foundation
FX The work on this paper has been supported in part by the project
   "Self-Adaptive Actors: SEADA" (nr. 163205-051) of the Icelandic Research
   Fund, by Air Force Research Laboratory and the Air Force Office of
   Scientific Research under agreement number FA8750-11-2-0084, and by
   National Science Foundation under grant number CCF-1438982. The US
   Government is authorized to reproduce and distribute reprints for
   Governmental purposes notwithstanding any copyright notation thereon.
CR Agha G.A., 1990, ACTORS-a model of concurrent computation in distributed systems
   Amnell T, 2003, LECT NOTES COMPUT SC, V2791, P60
   Buss AH, 1996, 1996 WINTER SIMULATION CONFERENCE PROCEEDINGS, P153, DOI 10.1145/256562.256597
   Clarke EM, 1999, MODEL CHECKING, P1
   de Boer F, 2010, LECT NOTES COMPUT SC, V5961, P212
   El-Hoiydi A, 2002, IEEE SYMP COMP COMMU, P685, DOI 10.1109/ISCC.2002.1021748
   Fersman E, 2006, THEOR COMPUT SCI, V354, P301, DOI 10.1016/j.tcs.2005.11.019
   Fersman E, 2002, LECT NOTES COMPUT SC, V2280, P67
   Hewitt C., 1973, PROC 3 INT JOINT C A, P235, DOI 10.1145/359545.359563
   Hill J, 2000, ACM SIGPLAN NOTICES, V35, P93, DOI 10.1145/384264.379006
   Jafari A, 2016, SCI COMPUT PROGRAM, V128, P22, DOI 10.1016/j.scico.2016.03.004
   Jaghoori MM, 2017, ACTA INFORM, V54, P343, DOI 10.1007/s00236-015-0254-x
   Jaghoori MM, 2009, J LOGIC ALGEBR PROGR, V78, P402, DOI 10.1016/j.jlap.2009.02.009
   Khamespanah Ehsan, 2016, Model-Checking Software. 23rd International Symposium, SPIN 2016, co-located with ETAPS 2016. Proceedings: LNCS 9641, P165, DOI 10.1007/978-3-319-32582-8_11
   Khamespanah E., 2014, P 4 INT WORKSH PROGR, P55
   Khamespanah E., 2016, LECT NOTES COMPUTER
   Khamespanah E., 2017, SCI COMPUT PROGRAM
   Khamespanah E, 2015, SCI COMPUT PROGRAM, V98, P184, DOI 10.1016/j.scico.2014.07.005
   Levis P., 2003, SENSYS 03, P126, DOI DOI 10.1145/958491.958506
   Linderman LE, 2013, STRUCT CONTROL HLTH, V20, P1007, DOI 10.1002/stc.1514
   Lipari G, 2000, J SYST ARCHITECT, V46, P327, DOI 10.1016/S1383-7621(99)00009-0
   Liu J., 2000, Real-Time Systems
   Norstrom C., 1999, Proceedings Sixth International Conference on Real-Time Computing Systems and Applications. RTCSA'99 (Cat. No.PR00306), P182, DOI 10.1109/RTCSA.1999.811218
   Ölveczky PC, 2009, THEOR COMPUT SCI, V410, P254, DOI 10.1016/j.tcs.2008.09.022
   Polastre J., 2004, SenSys '04, P95, DOI [DOI 10.1145/1031495.1031508, 10.1145/1031495.1031508]
   REN SP, 1995, SIGPLAN NOTICES, V30, P50, DOI 10.1145/216633.216656
   Reynisson AH, 2014, SCI COMPUT PROGRAM, V89, P41, DOI 10.1016/j.scico.2014.01.008
   Sameer S., 2004, P 37 ANN SIM S ANSS, P221
   Sharifi Z., 2013, ECEASST, V66
   Shnayder V., 2004, Proceedings of the 2nd international conference on Embedded Networked Sensor Systems SenSys04, P188, DOI DOI 10.1145/1031495.1031518
   Sirjani M, 2005, J UNIVERS COMPUT SCI, V11, P1695
   Sirjani M, 2004, FUND INFORM, V63, P385
   Sirjani M, 2011, LECT NOTES COMPUT SC, V7000, P20, DOI 10.1007/978-3-642-24933-4_3
   Spencer B. F., 2015, J CIV STRUCT HLTH MO, V6, P1
   Zeinab S., 2013, P PDPTA 13
   [No title captured]
NR 36
TC 14
Z9 14
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2018
VL 20
IS 5
SI SI
BP 547
EP 561
DI 10.1007/s10009-017-0480-3
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GQ7TL
UT WOS:000441949300005
DA 2024-07-18
ER

PT J
AU Farah, Z
   Ait-Ameur, Y
   Ouederni, M
   Tari, K
AF Farah, Zoubeyr
   Ait-Ameur, Yamine
   Ouederni, Meriem
   Tari, Kamel
TI A correct-by-construction model for asynchronously communicating systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Conversation protocols; Correct-byconstruction; realisability;
   Proof-based-formal methods; Event-B; Refinement; Asynchronous
   communication
ID VERIFICATION
AB The design and verification of distributed software systems is often hindered by their ever-increasing complexity and their asynchronous operational semantics. This article considers choreography specifications for distributed systems to reduce that complexity. We use labelled state-transitions systems as ground model for both choreographies and the corresponding distributed systems. Based on Event-B method, we propose a stepwise correct-by-construction model to build asynchronous distributed systems which a priori realise their choreographies. We rely on a sufficient and necessary realisability condition and we apply several refinement steps w.r.t. that condition to generate the distributed peers. The first refinement returns peer behaviours obtained by synchronous projection. The previously computed system is then refined into its asynchronous version using unbounded FIFO buffers. We prove, thanks to invariant preservation, that a sequence of exchanged messages is preserved at each refinement step. We provide a formalised proof of a realisability algorithm for deterministic choreographies. Besides that, our contribution is twofold: the approach is a priori and the problackposed solution scales up to any number of peers communicating with each other.
C1 [Farah, Zoubeyr; Tari, Kamel] Univ Bejaia, Dept Comp Sci, LIMED Lab, Bejaia, Algeria.
   [Ait-Ameur, Yamine; Ouederni, Meriem] Inst Rech Informat Toulouse, IRIT INPT ENSEEIHT, Toulouse, France.
C3 Universite de Bejaia; Universite de Toulouse; Universite Federale
   Toulouse Midi-Pyrenees (ComUE); Universite Toulouse III - Paul Sabatier;
   Institut National Polytechnique de Toulouse; Universite Toulouse 1
   Capitole; Universite de Toulouse - Jean Jaures; Centre National de la
   Recherche Scientifique (CNRS)
RP Ait-Ameur, Y (corresponding author), Inst Rech Informat Toulouse, IRIT INPT ENSEEIHT, Toulouse, France.
EM zoubeyr.farah@gmail.com; yamine@enseeiht.fr; meriem.ouederni@n7.fr;
   tarikamel59@gmail.com
RI AMEUR, Yamine AIT/AAH-6612-2020; farah, zoubeyr/AAF-5800-2019
OI farah, zoubeyr/0000-0003-3316-0601
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial JR, 2007, FUND INFORM, V77, P1
   Ait-Sadoune I, 2010, STUD COMPUT INTELL, V296, P51, DOI 10.1007/978-3-642-13273-5_4
   Ait-Sadoune I, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P1, DOI 10.1109/ICECCS.2009.48
   Alur R, 2005, THEOR COMPUT SCI, V331, P97, DOI 10.1016/j.tcs.2004.09.034
   [Anonymous], LNCS
   [Anonymous], 2010, Business Process Model and Notation (BPMN). Version 2.0
   [Anonymous], P SAC 12
   [Anonymous], P ISSTA 09
   [Anonymous], 1980, Lecture Notes in Computer Science
   [Anonymous], DISCIPLINE PROGRAMMI
   [Anonymous], WEB SERVICE IN PRESS
   [Anonymous], 2010, P 18 ACM SIGSOFT INT, DOI DOI 10.1145/1882291.1882298
   [Anonymous], IEEE DATA ENG B
   [Anonymous], TUCS LECT NOTES
   [Anonymous], P WWW 07
   [Anonymous], RODIN USER MANUAL RO
   Armstrong J., 2002, Proceedings of the 2002 ACM SIGPLAN workshop on Erlang, P64
   Autili M, 2013, LECT NOTES COMPUT SC, V7793, P37, DOI 10.1007/978-3-642-37057-1_4
   Babin G, 2016, IEEE HI ASS SYS ENGR, P31, DOI 10.1109/HASE.2016.47
   Basu S, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P191
   Decker G, 2007, LECT NOTES COMPUT SC, V4714, P305
   Denielou PM, 2010, LECT NOTES COMPUT SC, V6269, P343, DOI 10.1007/978-3-642-15375-4_24
   Fu X, 2004, THEOR COMPUT SCI, V328, P19, DOI 10.1016/j.tcs.2004.07.004
   Graf S, 2016, SOFTW SYST MODEL, V15, P1163, DOI 10.1007/s10270-014-0451-z
   Gudemann Matthias, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P238, DOI 10.1007/978-3-642-33386-6_20
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Kazhamiakin R, 2006, LECT NOTES COMPUT SC, V4229, P61
   Lohmann N, 2010, LECT NOTES COMPUT SC, V6194, P110, DOI 10.1007/978-3-642-14458-5_7
   Mateescu R., 1998, Proceedings of the International Workshop on Software Tools for Technology Transfer. STTT'98, P33
   NEEDHAM RM, 1978, COMMUN ACM, V21, P993, DOI 10.1145/359657.359659
   Salaün G, 2012, IEEE T SERV COMPUT, V5, P290, DOI 10.1109/TSC.2011.9
   Zoubeyr F, 2010, DISTRIB PARALLEL DAT, V27, P255, DOI 10.1007/s10619-010-7061-8
NR 36
TC 15
Z9 15
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2017
VL 19
IS 4
BP 465
EP 485
DI 10.1007/s10009-016-0421-6
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ5UW
UT WOS:000404785500006
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Pulungan, R
   Hermanns, H
AF Pulungan, Reza
   Hermanns, Holger
TI A construction and minimization service for continuous probability
   distributions
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Phase-type distributions; Acyclic; Minimization; Maximum; Minimum;
   Convolution; Erlang
ID PHASE-TYPE DISTRIBUTIONS
AB The universe of acyclic continuous-time Markov chains can provide arbitrarily close approximations of any continuous probability distribution. We span this universe by a compositional construction calculus for acyclic phase-type distributions. The calculus draws its expressiveness from a single operator, yet the calculus is equipped with further convenient operators, namely convolution, maximum, and minimum. However, the size of the chains constructed in this way can grow rapidly. We therefore link our calculus to a compositional minimization algorithm that whenever applied almost surely yields a chain with the least possible size. The entire approach is available in the form of an easy-to-use web service. The paper describes the architecture of this service in detail and reports on experimental evidence demonstrating its usefulness.
C1 [Pulungan, Reza] Univ Gadjah Mada, Fak Matemat Dan Ilmu Pengetahuan Alam, Jurusan Ilmu Komputer Dan Elekt, Yogyakarta, Indonesia.
   [Hermanns, Holger] Univ Saarland, Dept Comp Sci, D-66123 Saarbrucken, Germany.
C3 Gadjah Mada University; Saarland University
RP Pulungan, R (corresponding author), Univ Gadjah Mada, Fak Matemat Dan Ilmu Pengetahuan Alam, Jurusan Ilmu Komputer Dan Elekt, Yogyakarta, Indonesia.
EM pulungan@ugm.ac.id; hermanns@cs.uni-saarland.de
RI Pulungan, Reza/L-2098-2019
OI Pulungan, Reza/0000-0002-5019-1357; Hermanns, Holger/0000-0002-2766-9615
CR Aceto L., 2001, Handbook of Process Algebra, P197, DOI [10.1016/b978-044482830-9/50021-7, DOI 10.1016/B978-044482830-9/50021-7]
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   Bernardo M., 1996, CONCUR '96: Concurrency Theory. 7th International Conference. Proceedings, P315
   BOLOGNESI T, 1987, COMPUT NETWORKS ISDN, V14, P25, DOI 10.1016/0169-7552(87)90085-7
   Boudol G., 1988, Fundamenta Informaticae, V11, P433
   BUCHHOLZ P, 1994, J APPL PROBAB, V31, P59, DOI 10.2307/3215235
   Cardelli L., 2010, Proceedings of the 2010 Seventh International Conference on the Quantitative Evaluation of Systems (QEST 2010), P171, DOI 10.1109/QEST.2010.30
   Cox D.R, 1955, MATH P CAMBRIDGE PHI, V51, P313, DOI DOI 10.1017/S0305004100030231
   CUMANI A, 1982, MICROELECTRON RELIAB, V22, P583, DOI 10.1016/0026-2714(82)90033-6
   David A., 2011, ABS11063961 CORR
   De Nicola R, 2009, LECT NOTES COMPUT SC, V5556, P435, DOI 10.1007/978-3-642-02930-1_36
   Dugan JB, 1996, P ANN REL MAINT S TU, P1
   He QM, 2006, STOCH MODELS, V22, P289, DOI 10.1080/15326340600649045
   Henley E.J., 1992, PROBABILISTIC RISK A
   Hermanns H., 2002, LECT NOTES COMPUTER, V2428
   Hermanns H., 1994, Proc. and Performance Modelling (PAPM) 1994, Regensberg / Erlangen, Germany, July 1994, V27, P71
   Hillston J., 1996, A Compositional Approach to Performance Modelling
   Johnson M. A., 1988, DENSENESS PHASE DIST, P88
   Klin B, 2008, LECT NOTES COMPUT SC, V4962, P428, DOI 10.1007/978-3-540-78499-9_30
   MAIER RS, 1992, J APPL PROBAB, V29, P92, DOI 10.2307/3214794
   Neuts MF., 1981, Matrix-Geometric Solutions in Stochastic Models
   O'Cinneide CA., 1993, STOCH MODELS, V9, P507
   OCinneide C. A., 1990, Stoch. Model, V6, P1, DOI [DOI 10.1080/15326349908807134, 10.1080/15326349908807134.781]
   OCINNEIDE CA, 1991, ADV APPL PROBAB, V23, P515, DOI 10.2307/1427620
   Plotkin GD, 2004, J LOGIC ALGEBR PROGR, V60-1, P17, DOI 10.1016/j.jlap.2004.03.002
   Priami C, 1995, COMPUT J, V38, P578, DOI 10.1093/comjnl/38.7.578
   Pulungan R., 2008, P 14 GI ITG C MEAS M, P207
   PULUNGAN R, 2009, THESIS U SAARLANDES
   Pulungan R, 2009, INT CONF QUANT EVAL, P63, DOI 10.1109/QEST.2009.45
   Timmer M, 2012, LECT NOTES COMPUT SC, V7454, P364, DOI 10.1007/978-3-642-32940-1_26
   Vesely W.E., 1981, Fault tree handbook
NR 31
TC 4
Z9 4
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2015
VL 17
IS 1
BP 77
EP 90
DI 10.1007/s10009-013-0296-8
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7ND
UT WOS:000355681700005
DA 2024-07-18
ER

PT J
AU Guo, HF
   Subramaniam, M
AF Guo, Hai-Feng
   Subramaniam, Mahadevan
TI Model-based test generation using extended symbolic grammars
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model-based test generation; Symbolic grammar; Live sequence chart
AB A novel, model-based test case generation approach for validating reactive systems, especially those supporting richly structured data inputs and/or interactions, is presented. Given an executable system model and an extended symbolic grammar specifying plausible system inputs, the approach performs a model-based simulation to (i) ensure the consistency of the model with respect to the specified inputs, and (ii) generate corresponding test cases for validating the system. The model-based simulation produces a state transition diagram (STD) automatically justifying the model runtime behaviors within the test case coverage. The STD can further be transformed to produce an evolved symbolic grammar, which can then be used to incrementally generate a refined set of test cases. As a case study, we present a live sequence chart (LSC) model-based test generator, named LCT in short, for LSC simulation and consistency testing. The evolved symbolic grammar produced by the simulator can either be used to generate practical test cases for software testing, or be further refined by applying our model-based test generation approach again with additional test coverage criteria. We further show that LSCs can also be used to specify and test certain temporal system properties during the model simulation. Their satisfaction, reflected in the STD, can either be served as a directive for selective test generation, or a basis for further temporal property model checking.
C1 [Guo, Hai-Feng; Subramaniam, Mahadevan] Univ Nebraska, Dept Comp Sci, Omaha, NE 68182 USA.
C3 University of Nebraska System
RP Guo, HF (corresponding author), Univ Nebraska, Dept Comp Sci, Omaha, NE 68182 USA.
EM haifengguo@unomaha.edu; msubramaniam@unomaha.edu
CR [Anonymous], PROCEEDINGS OF THE S
   BERNOT G, 1991, SOFTWARE ENG J, V6, P387, DOI 10.1049/sej.1991.0040
   Bertolino A, 2005, ELECTRON NOTES THEOR, V116, P85, DOI 10.1016/j.entcs.2004.02.084
   Bohn J., 2002, P C INT DES PROC TEC
   Bontemps Y., 2003, P WORKSH SCEN STAT M
   Bontemps Y., 2003, P SCEN STAT MACH MOD
   Broy M, 2005, LNCS, V3472
   Bunker A., 2005, SOFTW TOOLS TECHNOL, V7, P250
   Combes P, 2005, LECT NOTES COMPUT SC, V3707, P414
   Coppit David., PROC 20 IEEEACM INT, DOI [10.1145/1101908.1101969, DOI 10.1145/1101908.1101969]
   Damm W., 1999, IFIP TC6/WG6.1 Third International Conference on Formal Methods for Open Object-Based Distribution Systems (FMOODS), P293
   Engels A, 1997, LECT NOTES COMPUT SC, V1217, P384, DOI 10.1007/BFb0035401
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Goedert J, 2011, AUTOMAT CONSTR, V20, P76, DOI 10.1016/j.autcon.2010.07.002
   Guo H.-F., 2009, 11 INT ACM SIGPLAN S
   Guo H.F., 2014, THE LCT TOOL
   Hai-Feng Guo, 2012, 2012 IEEE Sixth International Symposium on Theoretical Aspects of Software Engineering (TASE 2012), P111, DOI 10.1109/TASE.2012.16
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   Harel D, 2000, LECT NOTES COMPUT SC, V1783, P22
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   Harel D, 2008, LECT NOTES COMPUT SC, V4800, P351, DOI 10.1007/978-3-540-78127-1_19
   Helke S., 1997, ZUM '97: The Z Formal Specification Notation. 10th International Conference of Z Users Proceedings, P52, DOI 10.1007/BFb0027283
   Hong HS, 2002, LECT NOTES COMPUT SC, V2280, P327
   Hong HS, 2003, PROC INT CONF SOFTW, P232
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Klose J, 2006, LECT NOTES COMPUT SC, V4144, P219, DOI 10.1007/11817963_22
   Krenn Willibald, 2009, Proceedings of Formal Methods for Components and Objects. 8th International Symposium (FMCO 2009). Revised Selected Papers, P186, DOI 10.1007/978-3-642-17071-3_10
   Kumar R., 2008, ELECT COMMUN EASST, V10, P1
   Lämmel R, 2006, LECT NOTES COMPUT SC, V3964, P19
   Legeard B, 2004, SOFTW TEST VERIF REL, V14, P81, DOI 10.1002/stvr.287
   Liu SQ, 2012, 2012 IEEE 13TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P17, DOI 10.1109/IRI.2012.6302985
   Nipkow T., 2002, ISABELLE HOL PROOF A, DOI DOI 10.1007/3-540-45949-9
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   *OMG, 2005, UN MOD LANG SUP SPEC
   Pemmasani G, 2004, LECT NOTES COMPUT SC, V2998, P24
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Sirer EG, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P1
   Sun J, 2005, IEEE INT C ENG COMP, P529
   Tan L, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P493
   Toben T., 2006, 32 C CURRENT TRENDS, P33
   Utting M., 2007, PRACTICAL MODEL BASE
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   ZHENG W, 2009, THESIS U NEBRASKA OM
NR 45
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2014
VL 16
IS 4
BP 437
EP 455
DI 10.1007/s10009-014-0316-3
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HT
UT WOS:000209673200007
DA 2024-07-18
ER

PT J
AU Alrahman, YA
   Azzopardi, S
   Di Stefano, L
   Piterman, N
AF Alrahman, Yehia Abd
   Azzopardi, Shaun
   Di Stefano, Luca
   Piterman, Nir
TI Language support for verifying reconfigurable interacting systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model checking; Agent theories and models; Verification of multi-agent
   systems
AB Reconfigurable interacting systems consist of a set of autonomous agents, with integrated interaction capabilities that feature opportunistic interaction. Agents seemingly reconfigure their interaction interfaces by forming collectives and interact based on mutual interests. Finding ways to design and analyse the behaviour of these systems is a vigorously pursued research goal. In this article, we provide a modelling and analysis environment for the design of such system. Our tool offers simulation and verification to facilitate native reasoning about the domain concepts of such systems. We present our tool named R-CHECK (please find the associated toolkit repository here: https://github.com/dsynma/recipe). R-CHECK supports a high-level input language with matching enumerative and symbolic semantics and provides modelling convenience for features such as reconfiguration, coalition formation, and self-organisation. For analysis, users can simulate the designed system and explore arising traces. Our included model checker permits reasoning about interaction protocols and joint missions.
C1 [Alrahman, Yehia Abd; Azzopardi, Shaun; Di Stefano, Luca; Piterman, Nir] Univ Gothenburg, Gothenburg, Sweden.
C3 University of Gothenburg
RP Alrahman, YA (corresponding author), Univ Gothenburg, Gothenburg, Sweden.
EM yehia.abd.alrahman@gu.se; shaun.azzopardi@gu.se; luca.di.stefano@gu.se;
   nir.piterman@gu.se
OI Abd Alrahman, Yehia/0000-0002-4866-6931; Azzopardi,
   Shaun/0000-0002-2165-3698
FU University of Gothenburg; ERC consolidator grant D-SynMA [772459];
   Swedish research council [2020-03401, 2020-04963]; Swedish Research
   Council [2020-04963, 2020-03401] Funding Source: Swedish Research
   Council; European Research Council (ERC) [772459] Funding Source:
   European Research Council (ERC)
FX Open access funding provided by University of Gothenburg. This work was
   funded by the ERC consolidator grant D-SynMA (No. 772459) and the
   Swedish research council grants SynTM (No. 2020-03401) and VR project
   (No. 2020-04963)
CR Abd alrahman Yehia, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P373, DOI 10.1007/978-3-031-19759-8_23
   Abd Alrahman Y., 2022, P 21 INT C AUT AG MU, P1518, DOI [10.5555/3535850.3536020, DOI 10.5555/3535850.3536020]
   Abd Alrahman Y., 2020, P 19 INT C AUT AG MU, P7, DOI [DOI 10.5555/3398761.3398768, 10.5555/3398761.3398768]
   Abd Alrahman Y., 2022, THEORETICAL ASPECTS, P42, DOI 10.1007/978-3-031-17715-6_5
   Abd Alrahman Y, 2021, AUTON AGENT MULTI-AG, V35, DOI 10.1007/s10458-021-09521-x
   Abd Alrahman Y, 2020, SCI COMPUT PROGRAM, V192, DOI 10.1016/j.scico.2020.102428
   Abd Alrahman Y, 2019, J LOG ALGEBR METHODS, V109, DOI 10.1016/j.jlamp.2019.100487
   Abd Alrahman Y, 2019, INFORM COMPUT, V268, DOI 10.1016/j.ic.2019.104457
   Aceto L, 2007, REACTIVE SYSTEMS MOD, DOI DOI 10.1017/CBO9780511814105
   Alur R, 2002, J ACM, V49, P672, DOI 10.1145/585265.585270
   Alur R, 1999, FORM METHOD SYST DES, V15, P7, DOI 10.1023/A:1008739929481
   Basu A, 2006, I C SOFTW ENG FORM M, P3
   Bliudze S, 2008, IEEE T COMPUT, V57, P1315, DOI 10.1109/TC.2008.26
   Bunte Olav, 2019, Tools and Algorithms for the Construction and Analysis of Systems. 25th International Conference, TACAS 2019. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2019. Proceedings: Lecture Notes in Computer Science (11428), P21, DOI 10.1007/978-3-030-17465-1_2
   Cimatti Alessandro, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P277, DOI 10.1007/978-3-642-31424-7_23
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   Clarke Edmund M., 2001, Model Checking
   COHEN PR, 1990, ARTIF INTELL, V42, P213, DOI 10.1016/0004-3702(90)90055-5
   D'Ippolito Nicolas, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P475, DOI 10.1109/ASE.2008.78
   De Nicola Rocco, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Engineering Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12477), P261, DOI 10.1007/978-3-030-61470-6_16
   Fagin R, 1995, Reasoning about knowledge
   Garavel Hubert, 2013, International Journal on Software Tools for Technology Transfer, V15, P89, DOI 10.1007/s10009-012-0244-z
   Giannakopoulou D., 2003, P 9 EUR SOFTW ENG 11, P257, DOI DOI 10.1145/949952.940106
   Gutierrez J, 2017, ARTIF INTELL-AMST, V248, P123, DOI 10.1016/j.artint.2017.04.003
   Hoare C. A. R., 2021, THEORIES PROGRAMMING, P157, DOI DOI 10.1145/3477355.3477364
   Inverso Omar, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Engineering Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12477), P243, DOI 10.1007/978-3-030-61470-6_15
   Kant Gijs, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P692, DOI 10.1007/978-3-662-46681-0_61
   Legay A., 2019, STAT MODEL CHECKING, P478, DOI DOI 10.1007/978-3-319-91908-9_23
   Lomuscio A, 2017, INT J SOFTW TOOLS TE, V19, P9, DOI 10.1007/s10009-015-0378-x
   Loreti M, 2016, LECT NOTES COMPUT SC, V9700, P83, DOI 10.1007/978-3-319-34096-8_4
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   Nenzi L., 2016, P VALUETOOLS 2016 10, DOI [10.4108/eai.25-10-2016.2266978, DOI 10.4108/EAI.25-10-2016.2266978]
   Nicola Rocco, 2018, Leveraging Applications of Formal Methods, Verification and Validation Distributed Systems. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11246), P13, DOI 10.1007/978-3-030-03424-5_2
   Nicola Rocco, 2015, Software Engineering for Collective Autonomic Systems. The ASCENS Approach: LNCS 8998, P3, DOI 10.1007/978-3-319-16310-9_1
   Piterman N., 2018, Handbook of Model Checking, P27, DOI [DOI 10.1007/978-3-319-10575-8_2, 10.1007/978-3-319-10575-8_2]
   Wooldridge M., 2009, An introduction to multiagent systems
   Zon N, 2016, LECT NOTES COMPUT SC, V9952, P674, DOI 10.1007/978-3-319-47166-2_47
NR 37
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2023
VL 25
IS 5-6
BP 765
EP 784
DI 10.1007/s10009-023-00729-8
EA NOV 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AB9N8
UT WOS:001093027600002
OA hybrid
DA 2024-07-18
ER

PT J
AU De Nicola, R
   Di Stefano, L
   Inverso, O
   Valiani, S
AF De Nicola, Rocco
   Di Stefano, Luca
   Inverso, Omar
   Valiani, Serenella
TI Modelling flocks of birds and colonies of ants from the bottom up
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Agent-based models; Collective behaviour; Flocks of birds; Foraging; Ant
   colonies; Simulation; Formal verification
ID FORAGING STRATEGIES; BEHAVIOR; ALGORITHMS; SYSTEMS
AB This paper advocates the use of compositional specifications based on formal languages as a means of modelling and analysing sophisticated collective behaviour in natural systems. With the use of appropriate linguistic constructs, models can be developed that are both compact and intuitive, and can be easily refined and extended in small steps. Automated workflows can be implemented on top of this methodology to provide quick feedback, enabling rapid design iterations. To support our argument, we present three examples from the natural world, focusing on flocks of birds and colonies of ants, which feature well-known examples of emergent behaviour in collective adaptive systems. We use an agent-based language to develop simple models that aim at capturing these collective phenomena, and discuss the specific language constructs that we use in the process. Then, we adapt an existing verification tool for the language to simulate our models, and show that our simulations do display emergent behaviour.
C1 [De Nicola, Rocco; Valiani, Serenella] IMT Sch Adv Studies, Lucca, Italy.
   [Di Stefano, Luca] Univ Gothenburg, Gothenburg, Sweden.
   [Inverso, Omar] Gran Sasso Sci Inst GSSI, Laquila, Italy.
C3 IMT School for Advanced Studies Lucca; University of Gothenburg; Gran
   Sasso Science Institute (GSSI)
RP Valiani, S (corresponding author), IMT Sch Adv Studies, Lucca, Italy.
EM serenella.valiani@imtlucca.it
FU Scuola IMT Alti Studi Lucca within the CRUI-CARE Agreement; MIUR project
   PRIN [2017FTXR7S]; ERC [772459]
FX Open access funding provided by Scuola IMT Alti Studi Lucca within the
   CRUI-CARE Agreement. Work partially funded by MIUR project PRIN
   2017FTXR7S IT MATTERS (Methods and Tools for Trustworthy Smart Systems),
   ERC consolidator grant no. 772459 D-SynMA (Distributed Synthesis: from
   Single to Multiple Agents), and PRO3 MUR project Software Quality.
CR Antuña L, 2015, LECT NOTES ARTIF INT, V9287, P26, DOI 10.1007/978-3-319-22416-9_4
   Bajec IL, 2005, J THEOR BIOL, V233, P199, DOI 10.1016/j.jtbi.2004.10.003
   Ballerini M, 2008, P NATL ACAD SCI USA, V105, P1232, DOI 10.1073/pnas.0711437105
   BECKERS R, 1992, INSECT SOC, V39, P59, DOI 10.1007/BF01240531
   BECKERS R, 1990, INSECT SOC, V37, P258, DOI 10.1007/BF02224053
   BERNSTEIN RA, 1975, ECOLOGY, V56, P213, DOI 10.2307/1935314
   Bialek W, 2012, P NATL ACAD SCI USA, V109, P4786, DOI 10.1073/pnas.1118633109
   Brambilla M, 2013, SWARM INTELL-US, V7, P1, DOI 10.1007/s11721-012-0075-2
   Cederman LE, 2002, P NATL ACAD SCI USA, V99, P7296, DOI 10.1073/pnas.082081099
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   De Nicola Rocco, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P82, DOI 10.1007/978-3-031-19759-8_6
   De Nicola R, 2020, SCI COMPUT PROGRAM, V187, DOI 10.1016/j.scico.2019.102345
   Demsar J, 2014, ARTIF LIFE, V20, P343, DOI 10.1162/ARTL_a_00135
   DENEUBOURG JL, 1983, J THEOR BIOL, V105, P259, DOI 10.1016/S0022-5193(83)80007-1
   Desai A, 2017, ACM IEEE INT CONF CY, P239, DOI 10.1145/3055004.3055022
   Di Stefano Luca, 2020, Coordination Models and Languages. 22nd IFIP WG 6.1 International Conference, COORDINATION 2020. Held as Part of the 15th International Federated Conference on Distributed Computing Techniques, DisCoTec 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12134), P370, DOI 10.1007/978-3-030-50029-0_23
   Di Stefano L, 2021, LNCS, V13036, P473, DOI [10.1007/978-3-030-89159-6_29, DOI 10.1007/978-3-030-89159-6_29]
   Di Stefano L, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3490387
   Dorigo M, 2000, FUTURE GENER COMP SY, V16, P851, DOI 10.1016/S0167-739X(00)00042-X
   Dussutour A, 2004, NATURE, V428, P70, DOI 10.1038/nature02345
   Dussutour A, 2006, BEHAV ECOL SOCIOBIOL, V61, P17, DOI 10.1007/s00265-006-0233-x
   EMLEN J. T., 1952, AUK, V69, P160
   Fettke Peter, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P65, DOI 10.1007/978-3-031-19759-8_5
   Finkelshtein D, 2009, SIAM J MATH ANAL, V41, P297, DOI 10.1137/080719376
   Francalanza A, 2015, LECT NOTES COMPUT SC, V9333, P71, DOI 10.1007/978-3-319-23820-3_5
   GOSS S, 1989, NATURWISSENSCHAFTEN, V76, P579, DOI 10.1007/BF00462870
   Inverso O, 2020, PROCEEDINGS OF THE 25TH ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING (PPOPP '20), P202, DOI 10.1145/3332466.3374529
   Koenig N., 2004, INT ROB SYST 2004 IR, V3, P2149, DOI [DOI 10.1109/IROS.2004.1389727, DOI 10.1109/IR0S.2004.1389727]
   Kouvaros P, 2015, AAAI CONF ARTIF INTE, P2081
   Kuylen E, 2020, LECT NOTES COMPUT SC, V12137, P385, DOI 10.1007/978-3-030-50371-0_28
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Lomuscio A, 2017, INT J SOFTW TOOLS TE, V19, P9, DOI 10.1007/s10009-015-0378-x
   Mehmood U, 2020, LECT NOTES COMPUT SC, V12077, P1, DOI 10.1007/978-3-030-45231-5_1
   Monmarché N, 2000, FUTURE GENER COMP SY, V16, P937, DOI 10.1016/S0167-739X(00)00047-9
   Olfati-Saber R, 2006, IEEE T AUTOMAT CONTR, V51, P401, DOI 10.1109/TAC.2005.864190
   Pinciroli C, 2016, 2016 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS (IROS 2016), P3794, DOI 10.1109/IROS.2016.7759558
   Pinciroli C, 2012, SWARM INTELL-US, V6, P271, DOI 10.1007/s11721-012-0072-5
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Quigley M, 2009, IEEE INT CONF ROBOT, P3604
   Resnick M., 1998, Turtles, Termites, and Traffic Jams-Explorations in Massively Parallel Microworlds
   Reynolds CW., 1987, SIGGRAPH Comput. Graph., V21, P25, DOI [10.1145/37402.37406, DOI 10.1145/37402.37406]
   Rohmer E, 2013, IEEE INT C INT ROBOT, P1321, DOI 10.1109/IROS.2013.6696520
   Sen K, 2004, LECT NOTES COMPUT SC, V3114, P202
   Shi H, 2009, INT J CONTROL, V82, P43, DOI 10.1080/00207170801983091
   Stiglitz JE, 2011, EAST ECON J, V37, P6, DOI 10.1057/eej.2010.33
   Sumpter DJT, 2001, B MATH BIOL, V63, P951, DOI 10.1006/bulm.2001.0252
   Sumpter DJT, 2003, ANIM BEHAV, V66, P273, DOI 10.1006/anbe.2003.2224
   TOFTS C, 1992, J THEOR BIOL, V157, P71, DOI 10.1016/S0022-5193(05)80757-X
   Tofts C., 1992, Transactions of the Society for Computer Simulation, V9, P227
   Toner J, 1998, PHYS REV E, V58, P4828, DOI 10.1103/PhysRevE.58.4828
   TRANIELLO JFA, 1989, ANNU REV ENTOMOL, V34, P191, DOI 10.1146/annurev.en.34.010189.001203
   Vásárhelyi G, 2014, IEEE INT C INT ROBOT, P3866, DOI 10.1109/IROS.2014.6943105
   Wilensky U., 2001, EUROLOGO
   Winfleld Alan F. T., 2008, Swarm Intelligence, V2, P241, DOI 10.1007/s11721-008-0018-0
NR 55
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2023
VL 25
IS 5-6
BP 675
EP 691
DI 10.1007/s10009-023-00731-0
EA NOV 2023
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AB9N8
UT WOS:001093027600010
OA hybrid
DA 2024-07-18
ER

PT J
AU Kueffner, K
   Lukina, A
   Schilling, C
   Henzinger, TA
AF Kueffner, Konstantin
   Lukina, Anna
   Schilling, Christian
   Henzinger, Thomas A.
TI Into the unknown: active monitoring of neural networks (extended
   version)
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Monitoring; Neural networks; Novelty detection
ID CLASSIFICATION
AB Neural-network classifiers achieve high accuracy when predicting the class of an input that they were trained to identify. Maintaining this accuracy in dynamic environments, where inputs frequently fall outside the fixed set of initially known classes, remains a challenge. We consider the problem of monitoring the classification decisions of neural networks in the presence of novel classes. For this purpose, we generalize our recently proposed abstraction-based monitor from binary output to real-valued quantitative output. This quantitative output enables new applications, two of which we investigate in the paper. As our first application, we introduce an algorithmic framework for active monitoring of a neural network, which allows us to learn new classes dynamically and yet maintain high monitoring performance. As our second application, we present an offline procedure to retrain the neural network to improve the monitor's detection performance without deteriorating the network's classification accuracy. Our experimental evaluation demonstrates both the benefits of our active monitoring framework in dynamic scenarios and the effectiveness of the retraining procedure.
C1 [Kueffner, Konstantin; Henzinger, Thomas A.] IST Austria, Campus 1, A-3400 Klosterneuburg, Austria.
   [Lukina, Anna] Delft Univ Technol, Mourik Broekmanweg 6, NL-2628 XE Delft, Netherlands.
   [Schilling, Christian] Aalborg Univ, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
C3 Institute of Science & Technology - Austria; Delft University of
   Technology; Aalborg University
RP Lukina, A (corresponding author), Delft Univ Technol, Mourik Broekmanweg 6, NL-2628 XE Delft, Netherlands.; Schilling, C (corresponding author), Aalborg Univ, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
EM konstantin.kueffner@ist.ac.at; a.lukina@tudelft.nl;
   christianms@cs.aau.dk; tah@ist.ac.at
OI Lukina, Anna/0000-0001-9525-0333; Schilling,
   Christian/0000-0003-3658-1065
FU ERC-2020 [AdG101020093]; DIREC - Digital Research Centre Denmark; Villum
   Investigator Grant S4OS
FX This work was supported in part by the ERC-2020-AdG101020093, by DIREC -
   Digital Research Centre Denmark, and by the Villum Investigator Grant
   S4OS
CR [Anonymous], 2010, P 27 INT C MACH LEAR, DOI DOI 10.1145/2505515.2505603
   Bendale A, 2016, PROC CVPR IEEE, P1563, DOI 10.1109/CVPR.2016.173
   Bendale A, 2015, PROC CVPR IEEE, P1893, DOI 10.1109/CVPR.2015.7298799
   Bendre N, 2020, ARXIV
   Bottou L, 2010, COMPSTAT'2010: 19TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL STATISTICS, P177, DOI 10.1007/978-3-7908-2604-3_16
   Chen Y., 2021, ARXIV
   Cheng CH, 2019, DES AUT TEST EUROPE, P300, DOI [10.23919/DATE.2019.8714971, 10.23919/date.2019.8714971]
   Chuanqi Tan, 2018, Artificial Neural Networks and Machine Learning - ICANN 2018. 27th International Conference on Artificial Neural Networks. Proceedings: Lecture Notes in Computer Science (LNCS 11141), P270, DOI 10.1007/978-3-030-01424-7_27
   Cohen G, 2017, IEEE IJCNN, P2921, DOI 10.1109/IJCNN.2017.7966217
   COHN D, 1994, MACH LEARN, V15, P201, DOI 10.1023/A:1022673506211
   Das S, 2016, IEEE DATA MINING, P853, DOI [10.1109/ICDM.2016.164, 10.1109/ICDM.2016.0102]
   Fan JM, 2021, AAAI CONF ARTIF INTE, V35, P7367
   Gal Y, 2016, PR MACH LEARN RES, V48
   Geifman Y, 2017, ADV NEUR IN, V30
   Griewank A, 2008, OTHER TITL APPL MATH, V105, P1
   Guerriero Samantha, 2018, INT C LEARN REPR WOR
   Guo CA, 2017, PR MACH LEARN RES, V70
   Gupta A, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294609
   Hashemi V, 2021, LECT NOTES COMPUT SC, V12974, P254, DOI 10.1007/978-3-030-88494-9_14
   Hendrycks D., 2017, ICLR OPENREVIEWNET
   Henzinger TA, 2020, FRONT ARTIF INTEL AP, V325, P2433, DOI 10.3233/FAIA200375
   Ibrahim S.H., 2021, ARXIV210704764 CORR
   Jolliffe I.T., 1986, Principal component analysis, DOI DOI 10.1016/0169-7439(87)80084-9
   Knorr E. M., 1997, Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, P219
   Krizhevsky A., 2009, LEARNING MULTIPLE LA, DOI DOI 10.1145/3065386
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Liu WB, 2017, NEUROCOMPUTING, V234, P11, DOI 10.1016/j.neucom.2016.12.038
   LLOYD SP, 1982, IEEE T INFORM THEORY, V28, P129, DOI 10.1109/TIT.1982.1056489
   Lu J, 2020, ARXIV
   Lukina A, 2021, LECT NOTES COMPUT SC, V12974, P42, DOI 10.1007/978-3-030-88494-9_3
   Mancini M, 2019, IEEE INT CONF ROBOT, P9537, DOI [10.1109/icra.2019.8793803, 10.1109/ICRA.2019.8793803]
   Mandelbaum A., 2017, ARXIV170909844 CORR
   McCloskey M., 1989, PSYCHOL LEARN MOTIV, V24, P109, DOI [10.1016/S0079-7421(08)60536-8, DOI 10.1016/S0079-7421(08)60536-8]
   Mensink T, 2013, IEEE T PATTERN ANAL, V35, P2624, DOI 10.1109/TPAMI.2013.83
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Parisi GI, 2019, NEURAL NETWORKS, V113, P54, DOI 10.1016/j.neunet.2019.01.012
   Pimentel MAF, 2014, SIGNAL PROCESS, V99, P215, DOI 10.1016/j.sigpro.2013.12.026
   Rahman QM, 2021, IEEE ACCESS, V9, P20067, DOI 10.1109/ACCESS.2021.3055015
   Rebuffi Sylvestre-Alvise, 2017, P IEEE C COMP VIS PA, DOI DOI 10.1109/CVPR.2017.587
   Redko I., 2019, Advances in domain adaption theory, DOI [10.1016/C2016-0-05108-2, DOI 10.1016/C2016-0-05108-2]
   Royer A, 2015, PROC CVPR IEEE, P1401, DOI 10.1109/CVPR.2015.7298746
   Scholkopf B., 1997, Artificial Neural Networks - ICANN '97. 7th International Conference Proceedings, P583, DOI 10.1007/BFb0020217
   Schultheiss A, 2017, LECT NOTES COMPUT SC, V10496, P226, DOI 10.1007/978-3-319-66709-6_19
   Settles B., 2012, Active Learning, V6, DOI DOI 10.2200/S00429ED1V01Y201207AIM018
   Stallkamp J, 2011, 2011 INTERNATIONAL JOINT CONFERENCE ON NEURAL NETWORKS (IJCNN), P1453, DOI 10.1109/IJCNN.2011.6033395
   Sun R, 2020, INT J COMPUT VISION, V128, P970, DOI 10.1007/s11263-019-01232-x
   Tobin Josh, 2017, 2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), P23, DOI 10.1109/IROS.2017.8202133
   Wagstaff K. L., 2020, WORKSH REAL WORLD EX
   Wu C., 2021, ARXIV210414435 CORR
   Xiao H., 2017, ARXIV170807747
   Zeiler MD, 2014, LECT NOTES COMPUT SC, V8689, P818, DOI 10.1007/978-3-319-10590-1_53
   Zhang P, 2014, PROC CVPR IEEE, P3566, DOI 10.1109/CVPR.2014.456
   Zhang XY, 2016, IEEE T PATTERN ANAL, V38, P1943, DOI 10.1109/TPAMI.2015.2502579
   Zhang Z, 2021, PROC INT SYMP SOFTW, P150, DOI 10.1109/ISSRE52982.2021.00027
NR 54
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2023
VL 25
IS 4
BP 575
EP 592
DI 10.1007/s10009-023-00711-4
EA JUN 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X7GZ5
UT WOS:001020160000001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU De Sanctis, M
   Di Salle, A
   Iovino, L
   Rossi, MT
AF De Sanctis, Martina
   Di Salle, Amleto
   Iovino, Ludovico
   Rossi, Maria Teresa
TI A technology transfer journey to a model-driven access control system
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Access control system (ACS); MDE; Near-field communication (NFC); IoT
AB In the model-driven security domain, access control systems provide an application for handling access of persons through controlled gates. A gate, such as a door, can have a lock mechanism for securing the area from unauthorized access. Most commercial solutions for access control management offer pre-packaged software systems where customization of the authorization logic is either not allowed or subject to payment. Moreover, cross-platform development is a barrier for solution providers due to the high cost of development and maintenance that it implies. To overcome these limitations and further optimize the entire access control systems development process, we propose a model-driven approach that supports automatic code generation to enable communication between an IoT infrastructure and platforms for Facility Access Management. Specifically, the approach combines the benefits of Near-Field Communication (NFC) and Tinkerforge (i.e., an open-source hardware platform) with model-driven techniques. This allows the approach to exploit both behavioral and structural models for the modeling and the consequent code generation of part of the authorization mechanism, thus providing complete coverage of the code generated for the whole system. We implemented and evaluated our approach in a real-world case study within the premises of a fitness center with an IoT infrastructure consisting of several heterogeneous sensors by showing its practical applicability. Experimental results demonstrate the effectiveness of our approach in supporting abstraction and automation concerning traditional code-centric development through code generation features. Consequently, our approach makes the whole development process less time-consuming and error-prone, thus reducing the system's time to market.
C1 [De Sanctis, Martina; Iovino, Ludovico; Rossi, Maria Teresa] Gran Sasso Sci Inst, Comp Sci Sci Area, I-67100 Laquila, Italy.
   [Di Salle, Amleto] European Univ Rome, Human Sci Dept, I-00163 Rome, Italy.
C3 Gran Sasso Science Institute (GSSI); European University of Rome
RP Iovino, L (corresponding author), Gran Sasso Sci Inst, Comp Sci Sci Area, I-67100 Laquila, Italy.
EM martina.desanctis@gssi.it; amleto.disalle@unier.it;
   ludovico.iovino@gssi.it; mariateresa.rossi@gssi.it
OI Rossi, Maria Teresa/0000-0003-0273-7324; Iovino,
   Ludovico/0000-0001-6552-2609; DI SALLE, AMLETO/0000-0002-0163-9784
FU Gran Sasso Science Institute- GSSI within the CRUI-CARE Agreement
FX Open access funding provided by Gran Sasso Science Institute- GSSI
   within the CRUI-CARE Agreement.
CR Amrani M, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P569, DOI 10.5220/0006285405690576
   Anwar Shaik, 2016, INT J ENG RES TECHNO, V5, P504
   Arrhioui K., 2017, T MACH LEARN ARTIF I, DOI [10.14738/tmlai.54.3189, DOI 10.14738/TMLAI.54.3189]
   BenFadhel A., 2016, P 21 ACM S ACC CONTR, P179, DOI DOI 10.1145/2914642.2914656
   Benouda Hanane, 2016, International Conference on Mobile and Wireless Technologies (ICMWT2016). LNEE 391, P241, DOI 10.1007/978-981-10-1409-3_27
   Bhatt K., 2012, International Journal of Emerging Technology and Advanced Engineering, V2, P150
   Blythe P., 1999, IEE Colloquium. RFID Technology (Ref. No.1999/123), p8/1
   Bosselmann S., LECT NOTES COMPUT SC
   Bravo Jose, 2008, 2008 Conference on Human System Interactions, P743, DOI 10.1109/HSI.2008.4581534
   Cicchetti A, 2013, SOFTW SYST MODEL, V12, P53, DOI 10.1007/s10270-011-0193-0
   Coskun V, 2013, WIRELESS PERS COMMUN, V71, P2259, DOI 10.1007/s11277-012-0935-5
   Del Fabro M. D., 2006, ECLIPSE MODELING S, P37
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Di Rocco Juri., 2014, MiSE at ICSE, P55, DOI DOI 10.1145/2593770.2593774
   Di Ruscio D, 2017, PROC IEEE ACM INT C, P219, DOI 10.1109/ICSE-C.2017.143
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Gaouar L., 2015, INT C INT INF PROC S, P1
   Gherbi T, 2009, UKSIM INT CONF COMP, P152, DOI 10.1109/UKSIM.2009.13
   Gossen F, 2016, COMM COM INF SC, V683, P97, DOI 10.1007/978-3-319-51641-7_6
   Groenewegen, 2008, WEBDSL DOMAIN SPECIF, P779
   Groenewegen DM, 2013, SOFTW SYST MODEL, V12, P35, DOI 10.1007/s10270-010-0173-9
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D., 1998, MODELING REACTIVE SY
   Harrand N, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P125, DOI 10.1145/2976767.2976812
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Ihirwe F., 2020, P 23 ACMIEEE INT C M, P1, DOI [10.1145/3417990.3420208, DOI 10.1145/3417990.3420208]
   Iovino L., 2019, MDE4IOT WORKSHOP MOD, P31
   KHOSHGOFTAAR TM, 1990, PROCEEDINGS : THE FOURTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P408, DOI 10.1109/CMPSAC.1990.139396
   Kolovos D., 2010, STRUCTURE, V178, P1
   Langlois B., 2007, DSL CLASSIFICATION
   Lúcio L, 2014, ADV COMPUT, V93, P103, DOI 10.1016/B978-0-12-800162-2.00003-8
   Marah H.M., 2018, INT WORKSH MOD DRIV, P509
   Morin B, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.11
   Munante Denisse, 2013, 2013 International Conference on Availability, Reliability and Security (ARES), P324, DOI 10.1109/ARES.2013.44
   Nguyen PH, 2015, INFORM SOFTWARE TECH, V68, P62, DOI 10.1016/j.infsof.2015.08.006
   Nguyen XT, 2015, 2015 IEEE 2ND WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P387, DOI 10.1109/WF-IoT.2015.7389085
   Pantelimon SG, 2019, 2019 IEEE 5TH WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P566, DOI [10.1109/wf-iot.2019.8767313, 10.1109/WF-IoT.2019.8767313]
   Pham, 2017, MODELSWARD
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Prehofer C, 2015, P INT COMP SOFTW APP, P499, DOI 10.1109/COMPSAC.2015.263
   Rehman S, 2018, 2018 IEEE 9TH ANNUAL INFORMATION TECHNOLOGY, ELECTRONICS AND MOBILE COMMUNICATION CONFERENCE (IEMCON), P1152, DOI 10.1109/IEMCON.2018.8615013
   Rutle A., 2010, THESIS U BERGEN
   Sahadat M. N., 2015, 2015 IEEE Biomedical Circuits and Systems Conference (BioCAS), P1, DOI 10.1109/BioCAS.2015.7348317
   Salay Rick., 2016, ME@MODELS, P50
   Salihbegovic A, 2015, 2015 8TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P996, DOI 10.1109/MIPRO.2015.7160420
   Salman AJ, 2016, INT CONF INTERNET, P301, DOI 10.1109/ICITST.2016.7856718
   Sanchis R, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10010012
   Schmid Klaus., 2011, 5 INT WORKSHOP VARIA, P119, DOI [10.1145/1944892.1944907, DOI 10.1145/1944892.1944907]
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Shao W, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON INTERNET OF THINGS (ITHINGS) AND IEEE GREEN COMPUTING AND COMMUNICATIONS (GREENCOM) AND IEEE CYBER, PHYSICAL AND SOCIAL COMPUTING (CPSCOM) AND IEEE SMART DATA (SMARTDATA), P68, DOI 10.1109/iThings-GreenCom-CPSCom-SmartData.2017.16
   Sicari S, 2016, COMPUT NETW, V108, P133, DOI 10.1016/j.comnet.2016.08.014
   Sunitha EV, 2019, IEEE ACCESS, V7, P8591, DOI 10.1109/ACCESS.2018.2890791
   Syriani E, 2018, COMPUT LANG SYST STR, V52, P43, DOI 10.1016/j.cl.2017.11.003
   Thomas Donald, 2008, VERILOG HARDWARE DES
   Tinkerforge, 2011, TINK
   Moreno MV, 2014, 2014 28TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA), P791, DOI 10.1109/WAINA.2014.160
   von der Beeck M., 1994, Formal Techniques in Real-Time and Fault-Tolerant Systems. Third International Symposium Proceedings. ProCoS, P128
   Wolny S., 2018, MDE4IOT 2 INT WORKSH, P524
NR 58
TC 0
Z9 0
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2023
VL 25
IS 1
SI SI
BP 49
EP 74
DI 10.1007/s10009-023-00697-z
EA FEB 2023
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9R7IA
UT WOS:000931842000001
PM 36817285
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Frenkel, H
   Grumberg, O
   Pasareanu, CS
   Sheinvald, S
AF Frenkel, Hadar
   Grumberg, Orna
   Pasareanu, Corina S.
   Sheinvald, Sarai
TI Assume, guarantee or repair: a regular framework for non regular
   properties
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT Conference on Tools and Algorithms for Construction and Analysis of
   Systems (TACAS)
CY APR 25-30, 2020
CL Dublin, IRELAND
DE Compositional verification; Repair; Automata learning; Assume-guarantee
   reasoning; Concurrent systems
ID PROGRAM REPAIR
AB We present Assume-Guarantee-Repair (AGR)-a novel framework which verifies that a program satisfies a set of properties and also repairs the program in case the verification fails. We consider communicating programs-these are simple C-like programs, extended with synchronous actions over communication channels. Our method, which consists of a learning-based approach to assume-guarantee reasoning, performs verification and repair simultaneously: in every iteration, AGR either makes another step towards proving that the (current) system satisfies the required properties, or alters the system in a way that brings it closer to satisfying the properties. To handle infinite-state systems we build finite abstractions, for which we check the satisfaction of complex properties that contain first-order constraints, using both syntactic and semantic-aware methods. We implemented AGR and evaluated it on various communication protocols. Our experiments present compact proofs of correctness and quick repairs.
C1 [Frenkel, Hadar] CISPA Helmholtz Ctr Informat Secur, Saarbrucken, Germany.
   [Grumberg, Orna] Technion, Dept Comp Sci, Haifa, Israel.
   [Pasareanu, Corina S.] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
   [Pasareanu, Corina S.] NASA, Ames Res Ctr, Mountain View, CA USA.
   [Sheinvald, Sarai] ORT Braude Coll, Dept Software Engn, Karmiel, Israel.
C3 Technion Israel Institute of Technology; Carnegie Mellon University;
   National Aeronautics & Space Administration (NASA); NASA Ames Research
   Center; Braude Academic College of Engineering
RP Frenkel, H (corresponding author), CISPA Helmholtz Ctr Informat Secur, Saarbrucken, Germany.
EM hadar.frenkel@cispa.de
FU ISRAEL SCIENCE FOUNDATION (ISF) [346/17]
FX This research was partially supported by the ISRAEL SCIENCE FOUNDATION
   (ISF) Grant No. 346/17.
CR Abd Elkader K, 2016, LECT NOTES COMPUT SC, V9779, P329, DOI 10.1007/978-3-319-41528-4_18
   Elkader KA, 2015, LECT NOTES COMPUT SC, V9109, P23, DOI 10.1007/978-3-319-19249-9_3
   Albarghouthi A, 2016, ACM SIGPLAN NOTICES, V51, P789, DOI 10.1145/2914770.2837628
   Alpern B., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P1, DOI 10.1145/73560.73561
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], 2012, HVC, DOI DOI 10.1007/978-3-642-39611-3_24
   Argyros G, 2018, LECT NOTES COMPUT SC, V10981, P427, DOI 10.1007/978-3-319-96145-3_23
   Chaki S, 2007, LECT NOTES COMPUT SC, V4424, P276
   Chen YF, 2010, LECT NOTES COMPUT SC, V6174, P511, DOI 10.1007/978-3-642-14295-6_44
   Chen YF, 2009, LECT NOTES COMPUT SC, V5505, P31, DOI 10.1007/978-3-642-00768-2_3
   Cobleigh JM, 2003, LECT NOTES COMPUT SC, V2619, P331
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dillig Isil, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P684, DOI 10.1007/978-3-642-39799-8_46
   Fisman Dana, 2022, CSL, DOI DOI 10.4230/LIPICS.CSL.2022.21
   Frenkel Hadar, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12078), P211, DOI 10.1007/978-3-030-45190-5_12
   Frenkel H., 2022, ARXIV, DOI DOI 10.48550/ARXIV.2207.10534
   Frenkel H., 2021, THESIS
   Gheorghiu M, 2007, LECT NOTES COMPUT SC, V4424, P292
   Giannakopoulou D., 2005, Automated Software Engineering, V12, P297, DOI 10.1007/s10515-005-2641-y
   Giannakopoulou D, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P3, DOI 10.1109/ASE.2002.1114984
   Gupta A, 2008, FORM METHOD SYST DES, V32, P285, DOI 10.1007/s10703-008-0050-0
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Howar F, 2011, LECT NOTES COMPUT SC, V6538, P263, DOI 10.1007/978-3-642-18275-4_19
   Jobstmann B, 2005, LECT NOTES COMPUT SC, V3576, P226
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Li BY, 2013, LECT NOTES COMPUT SC, V7795, P370, DOI 10.1007/978-3-642-36742-7_26
   Lin SW, 2014, LECT NOTES COMPUT SC, V8442, P416, DOI 10.1007/978-3-319-06410-9_29
   Magee J., 1999, CONCURRENCY STATE MO
   Maler O, 2014, LNCS, P485, DOI [DOI 10.1007/978-3-642-54862-8_41, 10.1007]
   McMillan KL, 1999, LECT NOTES COMPUT SC, V1703, P342
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   MISRA J, 1981, IEEE T SOFTWARE ENG, V7, P417, DOI 10.1109/TSE.1981.230844
   Namjoshi K.S., 2000, CAV, DOI [10.1007/10722167_14, DOI 10.1007/10722167_14]
   Nguyen TT, 2019, LECT NOTES COMPUT SC, V11388, P70, DOI 10.1007/978-3-030-11245-5_4
   Pasareanu CS, 2008, FORM METHOD SYST DES, V32, P175, DOI 10.1007/s10703-008-0049-6
   Peirce Charles, 1932, COLLECTED PAPERS CS
   PNUELI A, 1984, LOGIC MODELS CONCURR, V13, P123
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Rothenberg B.-C., 2016, INT S FORM METH SPRI, P593, DOI DOI 10.1007/978-3-319-48989-6_36
   Rothenberg BC, 2020, LECT NOTES COMPUT SC, V12225, P658, DOI 10.1007/978-3-030-53291-8_33
   Sheinvald S., 2019, INT S FORM METH, P633, DOI [10.1007/978-3-030-30942-8_37, DOI 10.1007/978-3-030-30942-8_37]
   Singh R, 2010, LECT NOTES COMPUT SC, V6174, P527, DOI 10.1007/978-3-642-14295-6_45
   WEISPFENNING V, 1984, LECT NOTES MATH, V1103, P419
   US
NR 46
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2022
VL 24
IS 5
SI SI
BP 667
EP 689
DI 10.1007/s10009-022-00669-9
EA SEP 2022
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 6I0IB
UT WOS:000863163300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Hamers, R
   Horlings, E
   Jongmans, SS
AF Hamers, Ruben
   Horlings, Erik
   Jongmans, Sung-Shik
TI The Discourje project: run-time verification of communication protocols
   in Clojure
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Multiparty session types; Concurrency
ID INFORMATION-FLOW; TEMPORAL LOGIC; BRANCHING TIME; SESSION TYPES; ACCESS
AB To simplify shared-memory concurrent programming, languages have started to offer core support for high-level communications primitives, in the form of message passing though channels, in addition to lower-level synchronisation primitives. Yet, a growing body of evidence suggests that channel-based programming abstractions also have their issues. The Discourje project aims to help programmers cope with channels and concurrency bugs in Clojure programs, based on dynamic analysis. The idea is that programmers write not only implementations of communication protocols in their Clojure programs, but also specifications. Discourje then offers a run-time verification library to ensure that channel actions in implementations are safe relative to specifications. The aim of this paper is to provide a comprehensive overview of the current state of Discourje, including case studies, theoretical foundations, and practical aspects.
C1 [Hamers, Ruben; Horlings, Erik; Jongmans, Sung-Shik] Open Univ Netherlands, Dept Comp Sci, Valkenburgerweg 177, NL-6419 AT Heerlen, Limburg, Netherlands.
   [Jongmans, Sung-Shik] Ctr Wiskunde & Informat CWI, Stichting Nederlandse Wetenschappelijk Onderzoek, Sci Pk 123, NL-1098 XG Amsterdam, North Holland, Netherlands.
C3 Open University Netherlands
RP Jongmans, SS (corresponding author), Open Univ Netherlands, Dept Comp Sci, Valkenburgerweg 177, NL-6419 AT Heerlen, Limburg, Netherlands.; Jongmans, SS (corresponding author), Ctr Wiskunde & Informat CWI, Stichting Nederlandse Wetenschappelijk Onderzoek, Sci Pk 123, NL-1098 XG Amsterdam, North Holland, Netherlands.
EM ssj@ou.nl
FU Netherlands Organisation of Scientific Research (NWO)
   [016.Veni.192.103]; SURF Cooperative
FX Funded by the Netherlands Organisation of Scientific Research (NWO):
   016.Veni.192.103. This work was carried out on the Dutch national
   e-infrastructure with the support of SURF Cooperative.
CR Ancona D, 2016, FOUND TRENDS PROGRAM, V3, pI, DOI 10.1561/2500000031
   [Anonymous], 2019, STACK OV DEV SURV 20
   [Anonymous], 2000, INTRO PROCESS ALGEBR, DOI [DOI 10.1007/978-3-662-04293-9, 10.1007/978-3-662-04293-9]
   Baeten JCM, 2008, MATH STRUCT COMP SCI, V18, P1057, DOI 10.1017/S0960129508007111
   Barnett M, 2006, LECT NOTES COMPUT SC, V4111, P364
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P1, DOI 10.1007/978-3-319-75632-5_1
   Bettini L, 2008, LECT NOTES COMPUT SC, V5201, P418, DOI 10.1007/978-3-540-85361-9_33
   Blog G.O., 2012, Introducing the Knowledge Graph: things, not strings
   Bocchi Laura, 2014, CONCUR 2014 - Concurrency Theory. 25th International Conference, CONCUR 2014. Proceedings: LNCS 8704, P419, DOI 10.1007/978-3-662-44584-6_29
   Bocchi L, 2010, LECT NOTES COMPUT SC, V6269, P162, DOI 10.1007/978-3-642-15375-4_12
   Bocchi L, 2017, THEOR COMPUT SCI, V669, P33, DOI 10.1016/j.tcs.2017.02.009
   Bonnaire-Sergeant A, 2016, LECT NOTES COMPUT SC, V9632, P68, DOI 10.1007/978-3-662-49498-1_4
   Capecchi S, 2016, MATH STRUCT COMP SCI, V26, P1352, DOI 10.1017/S0960129514000619
   Capecchi S, 2014, INFORM COMPUT, V238, P68, DOI 10.1016/j.ic.2014.07.005
   Capecchi S, 2010, LECT NOTES COMPUT SC, V6269, P237, DOI 10.1007/978-3-642-15375-4_17
   Castagna G, 2012, LOG METH COMPUT SCI, V8, DOI 10.2168/LMCS-8(1:24)2012
   Castellani I, 2016, FORM ASP COMPUT, V28, P669, DOI 10.1007/s00165-016-0381-3
   Castro David, 2019, Proceedings of the ACM on Programming Languages, V3, DOI 10.1145/3290342
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   CLARKE EM, 1995, DES AUT CON, P427
   Clojure Team, 2019, CLOJ STAT CLOJ 2019
   Clojure Team, 2013, CLOJ CLOJ COR AS CHA
   Cohen E, 2009, LECT NOTES COMPUT SC, V5674, P23, DOI 10.1007/978-3-642-03359-9_2
   Demangeon R, 2015, FORM METHOD SYST DES, V46, P197, DOI 10.1007/s10703-014-0218-8
   Deniélou PM, 2012, LOG METH COMPUT SCI, V8, DOI 10.2168/LMCS-8(4:6)2012
   EMERSON EA, 1982, SCI COMPUT PROGRAM, V2, P241, DOI 10.1016/0167-6423(83)90017-5
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   Frumkin M.A., 2003, 17 INT S PAR DISTR P, P139
   Go M, 2017, MIO GO
   Go Team, 2009, EFF GO THE GO PROGR
   Go Team, 2019, GO 2018 SURV RES GO
   Go Team, 2018, GO 2017 SURV RES GO
   Halloway S., 2009, Programming Clojure
   Hamers Ruben, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Verification. Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12476), P489, DOI 10.1007/978-3-030-61362-4_28
   Hamers Ruben, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12078), P266, DOI 10.1007/978-3-030-45190-5_15
   Hickey R, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3386321
   Hickey Rich, 2008, P DYN LANG S DLS 08
   Honda K, 2008, ACM SIGPLAN NOTICES, V43, P273, DOI 10.1145/1328897.1328472
   Honda K, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P273, DOI 10.1145/2827695
   Horlings E, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1590, DOI 10.1145/3468264.3473127
   Hu R, 2017, LECT NOTES COMPUT SC, V10202, P116, DOI 10.1007/978-3-662-54494-5_7
   Hu R, 2016, LECT NOTES COMPUT SC, V9633, P401, DOI 10.1007/978-3-662-49665-7_24
   Hu R, 2013, LECT NOTES COMPUT SC, V8174, P130, DOI 10.1007/978-3-642-40787-1_8
   Hüttel H, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2873052
   Jongmans SS, 2020, LECT NOTES COMPUT SC, V12075, P251, DOI 10.1007/978-3-030-44914-8_10
   KUPFERMAN O, 1995, IEEE S LOG, P25
   Lange J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1137, DOI 10.1145/3180155.3180157
   Lange J, 2017, ACM SIGPLAN NOTICES, V52, P748, DOI 10.1145/3093333.3009847
   López HA, 2015, ACM SIGPLAN NOTICES, V50, P280, DOI [10.1145/2858965.2814302, 10.1145/2814270.2814302]
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Neykova R, 2018, CC'18: PROCEEDINGS OF THE 27TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION, P128, DOI 10.1145/3178372.3179495
   Neykova R, 2017, CC'17: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION, P98, DOI 10.1145/3033019.3033031
   Neykova R, 2017, FORM ASP COMPUT, V29, P877, DOI 10.1007/s00165-017-0420-8
   Ng N, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P174, DOI 10.1145/2892208.2892232
   Ng N, 2015, SERV ORIENTED COMPUT, V9, P269, DOI 10.1007/s11761-014-0172-8
   Parlett D., 2008, PENGUIN BOOK CARD GA
   Pinzaru Gheorghe, 2019, Software Technology: Methods and Tools. 51st International Conference, TOOLS 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11771), P73, DOI 10.1007/978-3-030-29852-4_5
   Reynolds M, 2001, J SYMBOLIC LOGIC, V66, P1011, DOI 10.2307/2695091
   Santos C, 2015, ELECTRON P THEOR COM, P128, DOI 10.4204/EPTCS.189.11
   Scalas A., 2017, 31stEuropeanConferenceonObject-OrientedProgramming, ECOOP 2017, June 19-23, 2017, V74, DOI [DOI 10.4230/LIPICS.ECOOP.2017.24, 10.4230/LIPICS.ECOOP.2017.24, 10.4230/LIPIcs.ECOOP.2017.24]
   Stadtmuller Kai, 2016, Programming Languages and Systems. 14th Asian Symposium, APLAS 2016. Proceedings: LNCS 10017, P116, DOI 10.1007/978-3-319-47958-3_7
   Tasharofi S, 2013, LECT NOTES COMPUT SC, V7920, P302, DOI 10.1007/978-3-642-39038-8_13
   Tu TF, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P865, DOI 10.1145/3297858.3304069
   VanGlabbeek RJ, 1996, J ACM, V43, P555, DOI 10.1145/233551.233556
   Victorian Auditor-General's Office (VAGO), 2020, RES 2019 AUD U
NR 65
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2022
VL 24
IS 5
SI SI
BP 757
EP 782
DI 10.1007/s10009-022-00674-y
EA SEP 2022
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6I0IB
UT WOS:000855618000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Gossen, F
   Steffen, B
AF Gossen, Frederik
   Steffen, Bernhard
TI Algebraic aggregation of random forests: towards explainability and
   rapid evaluation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Random forest; Algebraic decision diagram; Aggregation; Explainability;
   Interpretability; Running time optimisation; Memory optimisation
ID DECISION TREES
AB Random Forests are one of the most popular classifiers in machine learning. The larger they are, the more precise the outcome of their predictions. However, this comes at a cost: it is increasingly difficult to understand why a Random Forest made a specific choice, and its running time for classification grows linearly with the size (number of trees). In this paper, we propose a method to aggregate large Random Forests into a single, semantically equivalent decision diagram which has the following two effects: (1) minimal, sufficient explanations for Random Forest-based classifications can be obtained by means of a simple three step reduction, and (2) the running time is radically improved. In fact, our experiments on various popular datasets show speed-ups of several orders of magnitude, while, at the same time, also significantly reducing the size of the required data structure.
C1 [Gossen, Frederik; Steffen, Bernhard] TU Dortmund Univ, Chair Programming Syst, Dortmund, Germany.
C3 Dortmund University of Technology
RP Steffen, B (corresponding author), TU Dortmund Univ, Chair Programming Syst, Dortmund, Germany.
EM frederik.gossen@tu-dortmund.de; bernhard.steffen@tu-dortmund.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR [Anonymous], 2017, TREELITE TREELITE MO
   Bonfietti A, 2015, LECT NOTES COMPUT SC, V9075, P74, DOI 10.1007/978-3-319-18008-3_6
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Browne, 2019, FOREST PACKING FAST
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Chipman, 1999, MAKING SENSE FOREST
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Deng HT, 2019, INT J DATA SCI ANAL, V7, P277, DOI 10.1007/s41060-018-0144-8
   Domingos P., 1998, Intell. Data Anal., V2, P187, DOI [10.1016/S1088-467X(98)00023-7, 10.1016/S1088-467X(98)00023-7 ala, DOI 10.1016/S1088-467X(98)00023-7ALA]
   Dua D., 2017, UCI MACHINE LEARNING
   Facebook, 2017, EVAL BOOS DEC TREES
   Fisher RA, 1936, ANN EUGENIC, V7, P179, DOI 10.1111/j.1469-1809.1936.tb02137.x
   Gossen, JAVA LIB ALG DEC DIA
   Gossen, 2019, ABS191210934 CORR
   Gossen Frederik, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Modeling. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11244), P546, DOI 10.1007/978-3-030-03418-4_33
   Gossen F, 2020, IT PROF, V22, P8, DOI 10.1109/MITP.2020.3005640
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Hara S, 2018, PR MACH LEARN RES, V84
   IrisBahar, 1993, P 1993 IEEE ACM INT
   Kargupta H, 2004, IEEE T KNOWL DATA EN, V16, P216, DOI 10.1109/TKDE.2004.1269599
   Lou Y., 2012, P 18 ACM SIGKDD INT, P150, DOI 10.1145/2339530.2339556
   MulvaneyR, 2003, IEEE T PAM
   Nakahara H, 2017, INT SYM MVL, P266, DOI 10.1109/ISMVL.2017.40
   Painsky A, 2019, J COMPUT SCI TECH-CH, V34, P494, DOI 10.1007/s11390-019-1921-0
   Peterson AH, 2009, INT J ARTIF INTELL T, V18, P613, DOI 10.1142/S0218213009000305
   Philippe, 2015, CORR
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Samek W, 2019, Learning, V11700, DOI DOI 10.1007/978-3-030-28954-6
   Shotton J., 2013, Advances in Neural Information Processing Systems, V26, P234
   Somenzi F., 2001, International Journal on Software Tools for Technology Transfer, V3, P171, DOI 10.1007/s100090100042
   Steffen B., 2019, LANGUAGE DRIVEN ENG, P311, DOI [10.1007/978-3-319-91908-9_17, DOI 10.1007/978-3-319-91908-9_17]
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Van Assche A, 2007, LECT NOTES ARTIF INT, V4701, P418
   Winham SJ, 2013, STAT ANAL DATA MIN, V6, P496, DOI 10.1002/sam.11196
   Witten I.H., 2016, DATA MINING 4 EDITIO
   Zhou Y., 2016, INTERPRETING MODELS
NR 37
TC 9
Z9 9
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2023
VL 25
IS 3
BP 267
EP 285
DI 10.1007/s10009-021-00635-x
EA SEP 2021
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S0IX8
UT WOS:000701369100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Back, CO
   Slaats, T
   Hildebrandt, TT
   Marquard, M
AF Back, Christoffer Olling
   Slaats, Tijs
   Hildebrandt, Thomas Troels
   Marquard, Morten
TI DisCoveR: accurate and efficient discovery of declarative process models
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Process discovery; Declarative process models; Process mining; DCR
   graphs
ID BUSINESS PROCESS MODELS; CONFORMANCE CHECKING
AB Declarative process modeling formalisms-which capture high-level process constraints-have seen growing interest, especially for modeling flexible processes. This paper presents DisCoveR, an efficient and accurate declarative miner for learning Dynamic Condition Response (DCR) Graphs from event logs. We present a precise formalization of the algorithm, describe a highly efficient bit vector implementation and present a preliminary evaluation against five other miners, representing the state-of-the-art in declarative and imperative mining. DisCoveR performs competitively with each of these w.r.t. a fully automated binary classification task, achieving an average accuracy of 96.1% in the Process Discovery Contest 2019 (Results are available at https://icpmconference.org/2019/process-discovery-contest). We appeal to computational learning theory to gain insight into its performance as a classifier. Due to its linear time complexity, DisCoveR also achieves much faster run times than other declarative miners. Finally, we show how the miner has been integrated in a state-of-the-art declarative process modeling framework as a model recommendation tool and discuss how discovery can play an integral part of the modeling task and report on how the integration has improved the modeling experience of end-users.
C1 [Back, Christoffer Olling; Slaats, Tijs; Hildebrandt, Thomas Troels] Univ Copenhagen, Dept Comp Sci, Copenhagen, Denmark.
   [Marquard, Morten] DCR Solut, Copenhagen, Denmark.
C3 University of Copenhagen
RP Back, CO (corresponding author), Univ Copenhagen, Dept Comp Sci, Copenhagen, Denmark.
EM back@di.ku.dk; slaats@di.ku.dk; hilde@di.ku.dk; mm@dcrsolutions.net
RI Back, Christoffer Olling/HZL-0254-2023
OI Back, Christoffer Olling/0000-0001-7998-7167; Hildebrandt,
   Thomas/0000-0002-7435-5563
FU Innovation Fund Denmark project EcoKnow [7050-00034A]; Danish Council
   for Independent Research project Hybrid Business Process Management
   Technologies [DFF-6111-00337]
FX Work supported by the Innovation Fund Denmark project EcoKnow
   (7050-00034A) and the Danish Council for Independent Research project
   Hybrid Business Process Management Technologies (DFF-6111-00337).
CR Abu-Mostafa Y. S., 2012, Learning from Data: A Short Course
   Adriansyah A, 2013, LECT NOTES BUS INF P, V132, P137
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Andaloussi Amine Abbad, 2019, Business Process Management Workshops. BPM 2018 International Workshops. Revised Papers. Lecture Notes in Business Information Processing (LNBIP 342), P475, DOI 10.1007/978-3-030-11641-5_37
   Andaloussi AA, 2020, INFORM SYST, V91, DOI 10.1016/j.is.2020.101505
   Andaloussi AA, 2019, LECT NOTES COMPUT SC, V11788, P162, DOI 10.1007/978-3-030-33223-5_14
   Andaloussi AA, 2019, LECT NOTES BUS INF P, V352, P69, DOI 10.1007/978-3-030-20618-5_5
   [Anonymous], 2002, Workflow management: models, methods, and systems
   Back CO, 2019, LECT NOTES COMPUT SC, V11158, P191, DOI 10.1007/978-3-030-01391-2_24
   Bhattacharya K, 2007, LECT NOTES COMPUT SC, V4714, P288
   Burattin A, 2016, EXPERT SYST APPL, V65, P194, DOI 10.1016/j.eswa.2016.08.040
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   de Carvalho H, 2018, ARXIV PREPRINT ARXIV
   De Giacomo G, 2015, LECT NOTES COMPUT SC, V9097, P84, DOI 10.1007/978-3-319-19069-3_6
   De Masellis R., 2014, Proceedings of the 2014 International Conference on Software and System Process, P134
   De Smedt J, 2016, BUS INFORM SYST ENG+, V58, P19, DOI 10.1007/s12599-015-0416-y
   De Smedt J, 2015, DECIS SUPPORT SYST, V77, P123, DOI 10.1016/j.dss.2015.06.002
   Debois S., 2018, HYBRID PROCESS TECHN, P397, DOI [10.1007/978-3-319-58307-5, DOI 10.1007/978-3-319-58307-5]
   Debois S, 2018, ACTA INFORM, V55, P489, DOI 10.1007/s00236-017-0303-8
   Debois S, 2017, RIV PUBL SER AUTOMAT, P99
   Debois S, 2015, LECT NOTES COMPUT SC, V9109, P143, DOI 10.1007/978-3-319-19249-9_10
   Debois S, 2014, IEEE INT ENTERP, P126, DOI 10.1109/EDOCW.2014.27
   Debois S, 2014, LECT NOTES COMPUT SC, V8659, P18, DOI 10.1007/978-3-319-10172-9_2
   Debois Soren., 2017, Proceedings of the Symposium on Applied Computing, P759
   Di Ciccio Claudio, 2015, ACM Transactions on Management Information Systems, V5, DOI 10.1145/2629447
   Di Ciccio C, 2018, INFORM SYST, V78, P144, DOI 10.1016/j.is.2018.01.011
   Di Ciccio C, 2017, INFORM SYST, V64, P425, DOI 10.1016/j.is.2016.09.005
   Di Ciccio C, 2016, INFORM SYST, V56, P258, DOI 10.1016/j.is.2015.06.009
   Di Ciccio C, 2015, J DATA SEMANT, V4, P29, DOI 10.1007/s13740-014-0038-4
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   França JBD, 2015, SOFTW SYST MODEL, V14, P1127, DOI 10.1007/s10270-014-0397-1
   Dumas M., 2013, Fundamentals of Business Process Management, DOI [10.1007/978-3-642-33143-5, DOI 10.1007/978-3-642-33143-5]
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Fleuriot J., 2018, INT S LOG BAS PROGR, P77
   Fu J, 2015, IEEE DECIS CONTR P, P7440, DOI 10.1109/CDC.2015.7403395
   Goedertier S, 2008, LECT NOTES COMPUT SC, V4928, P42
   Goedertier S, 2009, J MACH LEARN RES, V10, P1305
   Herzberg N, 2015, LECT NOTES BUS INF P, V202, P3, DOI 10.1007/978-3-319-15895-2_1
   Hildebrandt T., 2011, P FUND SOFTW ENG FSE
   Hildebrandt T, 2013, J LOGIC ALGEBR PROGR, V82, P164, DOI 10.1016/j.jlap.2013.05.005
   Hildebrandt T, 2011, IEEE INT ENTERP DIST, P161, DOI 10.1109/EDOC.2011.35
   Hildebrandt TT, 2011, ELECTRON PROC THEOR, P59, DOI 10.4204/EPTCS.69.5
   Hull R, 2011, LECT NOTES COMPUT SC, V6551, P1, DOI 10.1007/978-3-642-19589-1_1
   Kong ZD, 2017, IEEE T AUTOMAT CONTR, V62, P1210, DOI 10.1109/TAC.2016.2585083
   Kurz M., 2015, P 7 INT C SUBJECT OR, DOI [10.1145/2723839.2723843, DOI 10.1145/2723839.2723843]
   La Rosa M, 2011, EXPERT SYST APPL, V38, P7029, DOI 10.1016/j.eswa.2010.12.012
   Madsen M.F., 2018, FAB, P8
   Maggi Fabrizio M., 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P270, DOI 10.1007/978-3-642-31095-9_18
   Maggi F. M., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM 2011), P192, DOI 10.1109/CIDM.2011.5949297
   Maggi FM, 2018, INFORM SYST, V74, P136, DOI 10.1016/j.is.2017.12.002
   Maggi FM, 2014, LECT NOTES COMPUT SC, V8659, P392, DOI 10.1007/978-3-319-10172-9_27
   Manataki A, 2017, IEEE J BIOMED HEALTH, V21, P1156, DOI 10.1109/JBHI.2016.2579881
   Marquard M, 2015, LECT NOTES COMPUT SC, V9253, P209, DOI 10.1007/978-3-319-23063-4_15
   Montali M., 2010, LECT NOTES BUSINESS, V56
   Montali M, 2010, ACM T WEB, V4, DOI 10.1145/1658373.1658376
   Mukkamala Raghava Rao, 2010, Proceedings of the 2010 4th IEEE International Symposium on Theoretical Aspects of Software Engineering (TASE 2010), P187, DOI 10.1109/TASE.2010.22
   Mukkamala R.R., 2011, ARXIV PREPRINT ARXIV
   Mukkamala R.R., 2008, 2008 12th Enterprise Distributed Object Computing Conference Workshops, Munich, Germany, P135, DOI [DOI 10.1109/EDOCW.2008.57, DOI 10.1109/ED0CW.2008.57]
   Mukkamala R.R., 2012, A formal model for declarative workflows: dynamic condition response graphs
   Nielsen M., 1979, Semantics of Concurrent Computations, P266, DOI 10.1007/BFb0022474
   Object Management Group, 2014, CASE MAN MOD NOT VER
   Object Management Group BPMN Technical Committee, 2011, BUSINESS PROCESS MOD
   Papapanagiotou P, 2017, LECT NOTES ARTIF INT, V10395, P357, DOI 10.1007/978-3-319-63046-5_22
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Polyvyanyy A, 2012, LECT NOTES COMPUT SC, V7481, P335, DOI 10.1007/978-3-642-32885-5_26
   Popova V, 2015, INT J COOP INF SYST, V24, DOI 10.1142/S021884301550001X
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   Sadiq S., 2001, CONCEPTUAL MODELING, P513
   Schönig S, 2016, DECIS SUPPORT SYST, V89, P87, DOI 10.1016/j.dss.2016.06.012
   Schunselaar DMM, 2018, LECT NOTES BUS INF P, V320, P190, DOI 10.1007/978-3-319-93931-5_14
   Seco JC, 2018, IEEE INT ENTERP DIST, P75, DOI 10.1109/EDOC.2018.00020
   Shalev-Shwartz S., 2015, UNDERSTANDING MACHIN
   Slaats Tijs, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P339, DOI 10.1007/978-3-642-40176-3_28
   Slaats T., 2015, Ph.D. thesis
   Slaats T, 2020, J DATA SEMANT, V9, P3, DOI 10.1007/s13740-020-00112-9
   Slaats T, 2018, LECT NOTES COMPUT SC, V11080, P31, DOI 10.1007/978-3-319-98648-7_3
   Slaats T, 2016, LECT NOTES COMPUT SC, V10033, P531, DOI 10.1007/978-3-319-48472-3_32
   Slaats Tijs, 2020, DISCOVER
   Slaats V, 2019, P 31 INT C ADV INF S
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   van der Aalst WMP, 2006, LECT NOTES COMPUT SC, V4184, P1
   van der Aalst W.M.P., 2011, LECT NOTES COMPUTER, V6896, P32, DOI [10.1007/978-3-642-23059-13, DOI 10.1007/978-3-642-23059-13]
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst Wil M. P., 2010, DECLARE
   Völzer H, 2010, LECT NOTES BUS INF, V67, P14
   Westergaard Michael, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P283, DOI 10.1007/978-3-642-40176-3_24
   Westergaard M., 2012, OTM Confederated International Conferences: On the Move to Meaningful Internet Systems, P250
   Westergaard M., 2013, UNCONSTRAINEDMINER E
   Wiemuth M, 2017, INT J COMPUT ASS RAD, V12, P1439, DOI 10.1007/s11548-017-1608-3
   Zeising M., 2015, BPM DEMOS, V1418, P125
   Zeising M, 2014, 2014 INTERNATIONAL CONFERENCE ON COLLABORATIVE COMPUTING: NETWORKING, APPLICATIONS AND WORKSHARING (COLLABORATECOM), P94, DOI 10.4108/icst.collaboratecom.2014.257269
   Zugal S, 2015, SOFTW SYST MODEL, V14, P1081, DOI 10.1007/s10270-013-0356-2
NR 92
TC 5
Z9 5
U1 2
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2022
VL 24
IS 4
BP 563
EP 587
DI 10.1007/s10009-021-00616-0
EA JUN 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3N7AF
UT WOS:000667592000001
DA 2024-07-18
ER

PT J
AU Botella, J
   Capuron, JF
   Dadeau, F
   Fourneret, E
   Legeard, B
   Schadle, F
AF Botella, Julien
   Capuron, Jean-Francois
   Dadeau, Frederic
   Fourneret, Elizabeta
   Legeard, Bruno
   Schadle, Florence
TI Complementary test selection criteria for model-based testing of
   security components
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model-based testing; Structural coverage; Test scenarios; Temporal
   properties; Security components
ID TEST-GENERATION; SPECIFICATION
AB This article presents a successful industrial application of a model-based testing approach to the validation of security components. We present a smart combination of three test selection criteria applied to testing security requirements of components such as Hardware Security Modules. This combination relies on the use of static test selection criteria, namely structural model coverage, complemented by dynamic test selection criteria, based on abstract test scenarios or temporal properties, designed to target corner cases of security functional requirements. Our approach is implemented in an industrial and scalable MBT tool. We evaluated and successfully applied it on three real-world security components. The outcome of these experiences showed that the three test selection criteria target distinct kinds of errors in the software and are able to reveal inconsistencies in the specification. Moreover, a 5-year experience of working with both manufacturers and evaluators of security components, along with other industrial collaborations, showed that the approach is easy to adopt in the industry and the time spent to learn the methodology is negligible with respect to its benefits. Finally, the approach can be completely applied in a more general context on systems that underlay thorough validation of compliance to specifications or audits.
C1 [Botella, Julien; Fourneret, Elizabeta; Legeard, Bruno] Smartesting Solut & Serv, 18 Rue Alain Savary, F-25000 Besancon, France.
   [Capuron, Jean-Francois; Schadle, Florence] DGA Informat Super, Bruz, France.
   [Dadeau, Frederic; Legeard, Bruno] Univ Bourgogne Franche Comte, FEMTO ST Inst, CNRS, UMR 6174, Besancon, France.
C3 Universite de Franche-Comte; Centre National de la Recherche
   Scientifique (CNRS); CNRS - Institute for Engineering & Systems Sciences
   (INSIS); Universite de Technologie de Belfort-Montbeliard (UTBM)
RP Dadeau, F (corresponding author), Univ Bourgogne Franche Comte, FEMTO ST Inst, CNRS, UMR 6174, Besancon, France.
EM frederic.dadeau@femto-st.fr
FU French ANR ASTRID Maturation MBT_Sec project [ANR-13-ASMA-0003]; Agence
   Nationale de la Recherche (ANR) [ANR-13-ASMA-0003] Funding Source:
   Agence Nationale de la Recherche (ANR)
FX This research was supported by the French ANR ASTRID Maturation MBT_Sec
   project (ANR-13-ASMA-0003).
CR Ammann P, 2001, IEEE INT C ENG COMP, P212, DOI 10.1109/ICECCS.2001.930180
   Anisetti M, 2013, LECT NOTES COMPUT SC, V8185, P434, DOI 10.1007/978-3-642-41030-7_31
   Anisetti M, 2013, ACM T WEB, V7, DOI 10.1145/2460383.2460384
   [Anonymous], 2014, AS PAC WORKSH SYST A
   [Anonymous], 2009, COMMON CRITERIA FOR
   Baker P., 2007, Model Driven Testing - Using the UML Testing Profile, VFirst
   BASILI VR, 1991, SOFTWARE ENG J, V6, P303, DOI 10.1049/sej.1991.0032
   Beizer Boris, 1995, Black-box testing: techniques for functional testing of software and systems
   Bernabeu G, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P66, DOI 10.1109/ISSREW.2014.91
   Bernet J., 2012, TECHNICAL REPORT
   Bigot C, 2003, LECT NOTES COMPUT SC, V2619, P591
   Bortolozzo M, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P260, DOI 10.1145/1866307.1866337
   Botella J, 2014, LECT NOTES COMPUT SC, V8803, P337, DOI 10.1007/978-3-662-45231-8_24
   Botella J, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P192, DOI 10.1109/ICST.2013.42
   Bouquet F., 2007, Proceedings of the 3rd International Workshop on Advances in Modelbased Testing, P95
   Castillos K.C., 2014, PROCEEDINGS NINTH WO, P29
   Clarke D., 2001, Software Engineering Notes, V26, P301, DOI 10.1145/503271.503252
   Cortier V, 2006, J COMPUT SECUR, V14, P1, DOI 10.3233/JCS-2006-14101
   Dadeau F, 2015, SOFTW TEST VERIF REL, V25, P684, DOI 10.1002/stvr.1531
   Dias-Neto AC, 2014, IEEE T SOFTWARE ENG, V40, P1025, DOI 10.1109/TSE.2014.2312915
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Falcone Y, 2008, ELECTRON NOTES THEOR, V220, P29, DOI 10.1016/j.entcs.2008.11.004
   Felderer M., 2011, Advances in System Testing and Validation Lifecycle (VALID 2011), P109
   Felderer M, 2016, SOFTW TEST VERIF REL, V26, P119, DOI 10.1002/stvr.1580
   Fourneret E., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P272, DOI 10.1109/ARES.2011.46
   Fraser G, 2008, SOFTWARE QUAL J, V16, P161, DOI 10.1007/s11219-007-9031-6
   Gargantini A., 1999, P JOINT 7 EUR SOFTW
   Global Platform Consortium, 2008, GLOBAL PLATFORM UICC
   Global Platform Device Commitee, 2013, GLOB PLATF TEE PROT
   Graettinger C. P., 2002, TECHNICAL REPORT CMU
   Gu Tian-yang, 2010, World Acadmeny of Science, Engineering and Technology, V70, P647
   Hemmati H., 2015, PROCEEDINGS OF THE I
   Huber F, 1998, SOFTWARE ENGINEERING FOR PARALLEL AND DISTRIBUTED SYSTEMS - INTERNATIONAL SYMPOSIUM PROCEEDINGS, P155, DOI 10.1109/PDSE.1998.668174
   International Software Testing Qualifications Board, 2015, STANDARD GLOSSARY OF
   Jard C., 2005, International Journal on Software Tools for Technology Transfer, V7, P297, DOI 10.1007/s10009-004-0153-x
   Johansson W, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P323, DOI 10.1109/ICST.2014.45
   Julliand J, 2011, FORM ASP COMPUT, V23, P3, DOI 10.1007/s00165-009-0132-9
   Jürjens J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P408, DOI 10.1109/ASE.2001.989840
   Jurjens Jan, 2010, Secure Systems Development with UML
   Le Traon Yves, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P238
   Mallouli W., 2010, WEB BASED INFORM TEC, V2, P207
   MASSON Pierre-Alain., 2010, JIAS, Journal of Information Assurance and Security, V5, P335
   Mouelhi T, 2008, LECT NOTES COMPUT SC, V5301, P537, DOI 10.1007/978-3-540-87875-9_38
   Pretschner Alexander, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P338, DOI 10.1109/ICST.2008.44
   Rosenzweig D, 2005, LECT NOTES COMPUT SC, V3705, P33, DOI 10.1007/11580850_4
   Rouillard D., 2012, TECHNICAL REPORT
   RSA Laboratories, 2004, PKCS 11 SPECIFICATIO
   Rusu V., 2005, LNCS
   Schneider M, 2013, IEEE ICST WORKSHOP, P469, DOI 10.1109/ICSTW.2013.61
   Tan L, 2004, IRI 2004 IEEE INT C, P413, DOI DOI 10.1109/IRI.2004.1431509
   Tretmans J, 2003, 1 EUR C MOD DRIV SOF, P31
   Utting M, 2006, PRACTICAL MODEL BASE, P550
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Vegas S, 2005, EMPIR SOFTW ENG, V10, P437, DOI 10.1007/s10664-005-3862-1
   Victor M, 2011, COMM COM INF SC, V204, P453
   Wimmel G, 2002, LECT NOTES COMPUT SC, V2495, P471
   Wojcicki Margaret A., 2007, Fifth International Workshop on Software Quality (WoSQ'07: ICSE Workshops 2007), DOI 10.1109/WOSQ.2007.4
   Xu D., 2012, P 17 ACM S ACC CONTR, P209, DOI DOI 10.1145/2295136.2295173
NR 58
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2019
VL 21
IS 4
BP 425
EP 448
DI 10.1007/s10009-018-0489-2
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IK4EM
UT WOS:000476539900003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Schneider, S
   Lambers, L
   Orejas, F
AF Schneider, Sven
   Lambers, Leen
   Orejas, Fernando
TI Automated reasoning for attributed graph properties
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Attributed graphs; Nested graph conditions; Model generation; Tableau
   method; Graph queries
ID TRANSFORMATION SYSTEMS; MODEL; LOGIC
AB Graphs are ubiquitous in computer science. Moreover, in various application fields, graphs are equipped with attributes to express additional information such as names of entities or weights of relationships. Due to the pervasiveness of attributed graphs, it is highly important to have the means to express properties on attributed graphs to strengthen modeling capabilities and to enable analysis. Firstly, we introduce a new logic of attributed graph properties, where the graph part and attribution part are neatly separated. The graph part is equivalent to first-order logic on graphs as introduced by Courcelle. It employs graph morphisms to allow the specification of complex graph patterns. The attribution part is added to this graph part by reverting to the symbolic approach to graph attribution, where attributes are represented symbolically by variables whose possible values are specified by a set of constraints making use of algebraic specifications. Secondly, we extend our refutationally complete tableau-based reasoning method as well as our symbolic model generation approach for graph properties to attributed graph properties. Due to the new logic mentioned above, neatly separating the graph and attribution parts, and the categorical constructions employed only on a more abstract level, we can leave the graph part of the algorithms seemingly unchanged. For the integration of the attribution part into the algorithms, we use an oracle, allowing for flexible adoption of different available SMT solvers in the actual implementation. Finally, our automated reasoning approach for attributed graph properties is implemented in the tool AutoGraph integrating in particular the SMT solver Z3 for the attribute part of the properties. We motivate and illustrate our work with a particular application scenario on graph database query validation.
C1 [Schneider, Sven; Lambers, Leen] Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
   [Orejas, Fernando] Univ Politecn Cataluna, Dept LSI, Barcelona, Spain.
C3 University of Potsdam; Universitat Politecnica de Catalunya
RP Schneider, S (corresponding author), Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
EM sven.schneider@hpi.de
RI Orejas, Fernando/K-8630-2017
CR Abiteboul Serge, 1995, FDN DATABASES LOGICA
   Angles R, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1322432.1322433
   Angles Renzo, 2016, ABS161006264 CORR
   Bak K, 2016, SOFTW SYST MODEL, V15, P811, DOI 10.1007/s10270-014-0441-1
   Baudry Benoit, 2013, MODEL DRIVEN ENG DIS, P43
   Beyhl T, 2016, LECT NOTES COMPUT SC, V9761, P170, DOI 10.1007/978-3-319-40530-8_11
   Blanco Raquel, 2015, P 6 INT WORKSHOP AUT, P8, DOI [10.1145/2804322.2804324, DOI 10.1145/2804322.2804324]
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   Courcelle B., 1997, HDB GRAPH GRAMMARS C, V1, P313
   Daniel G, 2016, LECT NOTES COMPUT SC, V9974, P430, DOI 10.1007/978-3-319-46397-1_33
   Deckwerth F., 2017, THESIS
   Echahed R., 2016, GRAPH TRANSFORMATION, V9761
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H., 2008, LECT NOTES COMPUTER, V5214
   EHRIG H, 1985, EATCS MONOGRAPHS THE
   Ehrig H, 2012, FUND INFORM, V118, P35, DOI 10.3233/FI-2012-705
   Giese H., 2014, LECT NOTES COMPUTER, V8571
   González CA, 2014, LECT NOTES COMPUT SC, V8568, P25
   Habel A., 1996, Fundamenta Informaticae, V26, P287
   Habel A, 2009, MATH STRUCT COMP SCI, V19, P245, DOI 10.1017/S0960129508007202
   Hahnle R, 2001, HDB AUTOMATED REASON, V2, P100, DOI [DOI 10.1016/b978-044450813-3/50005-9, 10.1016/b978-044450813-3/50005-9, DOI 10.1016/B978-044450813-3/50005-9]
   Heckel Reiko, 1995, ELECT NOTES THEOR CO, V2, P118, DOI [10.1016/S1571-0661(05)80188-4, DOI 10.1016/S1571-0661(05)80188-4]
   Jackson EK, 2007, LECT NOTES COMPUT SC, V4735, P405
   Jackson EK, 2011, LECT NOTES COMPUT SC, V6981, P653, DOI 10.1007/978-3-642-24485-8_48
   Krause C, 2016, LECT NOTES COMPUT SC, V9761, P153, DOI 10.1007/978-3-319-40530-8_10
   Lambers L, 2014, LECT NOTES COMPUT SC, V8571, P17
   Milicevic Aleksandar, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering (ICSE). Proceedings, P609, DOI 10.1109/ICSE.2015.77
   Mougenot A, 2009, LECT NOTES COMPUT SC, V5562, P130, DOI 10.1007/978-3-642-02674-4_10
   Nelson T, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P232, DOI 10.1109/ICSE.2013.6606569
   Oberweis A., 2016, P MOD 2016 KARLSR GE, P205
   Orejas F, 2008, LECT NOTES COMPUT SC, V4961, P179, DOI 10.1007/978-3-540-78743-3_14
   Orejas F, 2012, FUND INFORM, V118, P65, DOI 10.3233/FI-2012-706
   Orejas F, 2011, J SYMB COMPUT, V46, P294, DOI 10.1016/j.jsc.2010.09.009
   Orejas F, 2010, FORM ASP COMPUT, V22, P385, DOI 10.1007/s00165-009-0116-9
   Pennemann K. H., 2009, THESIS
   Pennemann KH, 2008, ELECTRON NOTES THEOR, V213, P75, DOI 10.1016/j.entcs.2008.04.075
   Poskitt CM, 2014, LECT NOTES COMPUT SC, V8571, P33
   Radke H., 2013, ECEASST, V61, DOI [10. 14279/tuj. eceasst. 61. 831. 831, DOI 10.14279/TUJ.ECEASST.61.831.831]
   Radke H, 2015, LECT NOTES COMPUT SC, V9151, P155, DOI 10.1007/978-3-319-21145-9_10
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P319
   Rozenberg G., 1997, HDB GRAPH GRAMMARS C
   Salay R, 2015, LECT NOTES COMPUT SC, V9033, P133, DOI 10.1007/978-3-662-46675-9_9
   Schneider S., 2017, TECHNISCHE BERICHTE, P2
   Schneider S, 2017, LECT NOTES COMPUT SC, V10202, P226, DOI 10.1007/978-3-662-54494-5_13
   Schweikardt N, 2010, ALGORITHMS THEORY CO, P1
   Semeráth O, 2017, LECT NOTES COMPUT SC, V10374, P138, DOI 10.1007/978-3-319-61473-1_10
   Semeráth O, 2016, LECT NOTES COMPUT SC, V9633, P87, DOI 10.1007/978-3-662-49665-7_6
   The Linked Data Benchmark Council (LDBC), SOC NETW BENCHM
   The World Wide Web Consortium (W3C), 2012, W3C XML SCHEMA DEF 1
   Wood PT, 2012, SIGMOD REC, V41, P50, DOI 10.1145/2206869.2206879
NR 50
TC 24
Z9 25
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2018
VL 20
IS 6
SI SI
BP 705
EP 737
DI 10.1007/s10009-018-0496-3
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GV9OI
UT WOS:000446488000006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Wang, JY
   Sun, J
   Yuan, QX
   Pang, J
AF Wang, Jingyi
   Sun, Jun
   Yuan, Qixia
   Pang, Jun
TI Learning probabilistic models for model checking: an evolutionary
   approach and an empirical study
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Probabilistic model checking; Model learning; Genetic algorithm;
   Abstraction
ID AUTOMATA; STATE
AB Many automated system analysis techniques (e.g., model checking, model-based testing) rely on first obtaining a model of the system under analysis. System modeling is often done manually, which is often considered as a hindrance to adopt model-based system analysis and development techniques. To overcome this problem, researchers have proposed to automatically "learn" models based on sample system executions and shown that the learned models can be useful sometimes. There are however many questions to be answered. For instance, how much shall we generalize from the observed samples and how fast would learning converge? Or, would the analysis result based on the learned model be more accurate than the estimation we could have obtained by sampling many system executions within the same amount of time? Moreover, how well does learning scale to real-world applications? If the answer is negative, what are the potential methods to improve the efficiency of learning? In this work, we first investigate existing algorithms for learning probabilistic models for model checking and propose an evolution-based approach for better controlling the degree of generalization. Then, we present existing approaches to learn abstract models to improve the efficiency of learning for scalability reasons. Lastly, we conduct an empirical study in order to answer the above questions. Our findings include that the effectiveness of learning may sometimes be limited and it is worth investigating how abstraction should be done properly in order to learn abstract models.
C1 [Wang, Jingyi; Sun, Jun] Singapore Univ Technol & Design, Singapore, Singapore.
   [Yuan, Qixia; Pang, Jun] Univ Luxembourg, Luxembourg, Luxembourg.
C3 Singapore University of Technology & Design; University of Luxembourg
RP Wang, JY (corresponding author), Singapore Univ Technol & Design, Singapore, Singapore.
EM wangjyee@gmail.com
RI WANG, JINGYI/ABB-1698-2020
OI Pang, Jun/0000-0002-4521-4112
CR ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], ARXIV161107100
   [Anonymous], 1998, ACM Trans Inform Syst Secur TISSEC, DOI DOI 10.1145/290163.290168
   [Anonymous], 1988, YALEUDCSRR614
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bauer A, 2006, LECT NOTES COMPUT SC, V4337, P260
   Bianco A., 1995, Foundations of Software Technology and Theoretical Computer Science. 15th Conference. Proceedings, P499
   Brázdil T, 2014, LECT NOTES COMPUT SC, V8837, P98, DOI 10.1007/978-3-319-11936-6_8
   Carrasco R. C., 1994, Grammatical Inference and Applications. Second International Colloquium, ICGI-94 Proceedings, P139
   Carrasco RC, 1999, RAIRO-INF THEOR APPL, V33, P1, DOI 10.1051/ita:1999102
   Clark A, 2004, J MACH LEARN RES, V5, P473
   Clarke EM, 2011, LECT NOTES COMPUT SC, V6996, P1, DOI 10.1007/978-3-642-24372-1_1
   Clarke EM, 1999, MODEL CHECKING, P1
   De la Higuera Colin, 2010, GRAMMATICAL INFERENC
   Denis F, 2006, LECT NOTES ARTIF INT, V4005, P274, DOI 10.1007/11776420_22
   Dyer D., WATCHMAKER FRAMEWORK
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Guédon Y, 2003, J COMPUT GRAPH STAT, V12, P604, DOI 10.1198/1061860032030
   Guttman O, 2005, LECT NOTES ARTIF INT, V3734, P171
   Habrard A, 2003, LECT NOTES ARTIF INT, V2837, P169
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   He F, 2010, IEEE T COMPUT, V59, P116, DOI 10.1109/TC.2009.105
   HERMAN T, 1990, INFORM PROCESS LETT, V35, P63, DOI 10.1016/0020-0190(90)90107-9
   Heule MJH, 2010, LECT NOTES ARTIF INT, V6339, P66, DOI 10.1007/978-3-642-15488-1_7
   Holland I.H., 1975, ADAPTATION NATURAL A
   Hua Mao, 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P111, DOI 10.1109/QEST.2011.21
   ITAI A, 1990, INFORM COMPUT, V88, P60, DOI 10.1016/0890-5401(90)90004-2
   Kermorvant C, 2002, LECT NOTES ARTIF INT, V2484, P149
   Kwiatkowsa M., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P203, DOI 10.1109/QEST.2012.14
   Kwiatkowska M, 2002, LECT NOTES COMPUT SC, V2324, P200
   Leen H, 1994, PROOF CHECKING DATA
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Mao H, 2012, ARXIV12123873
   Mao H, 2016, MACH LEARN, V105, P255, DOI 10.1007/s10994-016-5565-9
   Mediouni BL, 2017, LECT NOTES COMPUT SC, V10227, P178, DOI 10.1007/978-3-319-57288-8_13
   Mizera A, 2015, LECT NOTES COMPUT SC, V9364, P214, DOI 10.1007/978-3-319-24953-7_16
   Norman G, 2005, IEEE T COMPUT AID D, V24, P1629, DOI 10.1109/TCAD.2005.852033
   Norman G, 2006, J COMPUT SECUR, V14, P561, DOI 10.3233/JCS-2006-14604
   NOURI A, 2014, INT C RUNT VER, V8734, P340
   Parker D., PRISM DTMC BENCHMARK
   Rohr C, 2013, LECT NOTES COMPUT SC, V8100, P142
   Ron D, 1996, MACH LEARN, V25, P117, DOI 10.1007/BF00114008
   Ron D., 1995, Proceedings of the Eighth Annual Conference on Computational Learning Theory, P31, DOI 10.1145/225298.225302
   Sen K, 2004, LECT NOTES COMPUT SC, V3114, P202
   Sen K, 2004, INT CONF QUANT EVAL, P146
   Shmulevich I, 2002, P IEEE, V90, P1778, DOI 10.1109/JPROC.2002.804686
   SUTD, SEC WAT TREATM TESTB
   Tabakov D, 2005, LECT NOTES ARTIF INT, V3835, P396, DOI 10.1007/11591191_28
   VALIANT LG, 1984, COMMUN ACM, V27, P1134, DOI 10.1145/1968.1972
   Verwer S, 2010, LECT NOTES ARTIF INT, V6339, P203, DOI 10.1007/978-3-642-15488-1_17
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   Wang J., 2016, ARXIV171204155
   Wang J, 2016, ARXIV161006371, parXiv preprint arXiv
   Wang J., ZIQIAN EVALUATION
   Wang JY, 2017, LECT NOTES COMPUT SC, V10610, P379, DOI 10.1007/978-3-319-68690-5_23
   Wikipedia, GOLD SECT SEARCH
   Yingke Chen, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P216, DOI 10.1007/978-3-642-28891-3_22
   Younes H. L, 2005, DTIC DOCUMENT
   Younes H. L. S., 2006, International Journal on Software Tools for Technology Transfer, V8, P216, DOI 10.1007/s10009-005-0187-8
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
   Younes HLS, 2006, INFORM COMPUT, V204, P1368, DOI 10.1016/j.ic.2006.05.002
   Younes HLS, 2011, LECT NOTES COMPUT SC, V6527, P144, DOI 10.1007/978-3-642-19829-8_10
NR 62
TC 3
Z9 3
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2018
VL 20
IS 6
SI SI
BP 689
EP 704
DI 10.1007/s10009-018-0492-7
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GV9OI
UT WOS:000446488000005
DA 2024-07-18
ER

PT J
AU Ballarini, P
AF Ballarini, Paolo
TI Analysing oscillatory trends of discrete-state stochastic processes
   through HASL statistical model checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Statistical model checking; Hybrid automata stochastic logic;
   Oscillation analysis; Confidence-interval estimates; Discrete event
   stochastic processes
AB The application of formal methods to the analysis of stochastic oscillators has been at the focus of several research works in recent times. In this paper, we provide insights on the application of an expressive temporal logic formalism, namely the hybrid automata stochastic logic (HASL), to that issue. We show how one can take advantage of the expressive power of the HASL logic to define and assess relevant characteristics of (stochastic) oscillators.
C1 Cent Supelec, F-92295 Chatenay Malabry, France.
C3 Universite Paris Saclay
RP Ballarini, P (corresponding author), Cent Supelec, F-92295 Chatenay Malabry, France.
EM paolo.ballarini@centralesupelec.fr
RI Ballarini, Paolo/JNT-4441-2023
OI Ballarini, Paolo/0000-0002-4652-3953
CR Alur R., 1991, LNCS, V510
   Andrei Oana, 2012, Transactions on Computational Systems Biology XIV. Special Issue on Computational Models for Cell Processes, P1, DOI 10.1007/978-3-642-35524-0_1
   [Anonymous], P 10 WORKSH QUANT AS
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Ballarini P., 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P143, DOI 10.1109/QEST.2011.24
   Ballarini P., 2011, P VAL
   Ballarini P, 2010, THEOR COMPUT SCI, V411, P2019, DOI 10.1016/j.tcs.2010.02.010
   Chen T., 2009, P LICS 09
   David Alexandre, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P388, DOI 10.1007/978-3-642-34026-0_29
   Donatelli S, 2009, IEEE T SOFTWARE ENG, V35, P224, DOI 10.1109/TSE.2008.108
   Glynn P. W., 1983, P C WINT SIM
   Herault T., 2006, P QEST 06
   Ihekwaba AEC, 2011, BMC SYST BIOL, V5, DOI 10.1186/1752-0509-5-203
   Jegourel C, 2012, LECT NOTES COMPUT SC, V7214, P498, DOI 10.1007/978-3-642-28756-5_37
   Julvez J., 2012, INT J COMPUT APPL IJ, V19, P101
   Katoen J.-P., 2009, P QEST 09
   Knuth D. E., ART COMPUTER PROGRAM, V2
   Kwiatkowska M, 2007, LECT NOTES COMPUT SC, V4486, P220
   Marsan M.A., 1995, MODELLING GEN STOCHA
   Sen K., 2005, P QEST 05
   Spieler D., 2009, THESIS SAARLAND U
   Spieler D., 2013, P QEST 13
   Vilar JMG, 2002, P NATL ACAD SCI USA, V99, P5988, DOI 10.1073/pnas.092133899
   Ymer H. L. Younes, 2005, COMPUTER AIDED VERIF, P429
NR 24
TC 2
Z9 2
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2015
VL 17
IS 4
BP 505
EP 526
DI 10.1007/s10009-015-0370-5
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM2BV
UT WOS:000357485500009
DA 2024-07-18
ER

PT J
AU Hallé, S
   Vallet, J
   Tremblay-Lessard, R
AF Halle, Sylvain
   Vallet, Jason
   Tremblay-Lessard, Raphael
TI On piggyback runtime monitoring of object-oriented programs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime monitoring; Preconditions; Interface contract; Object-oriented
   programming
ID SYSTEMS
AB A runtime monitor enforcing a constraint on sequences of method calls on an object involves the implementation of an independent piece of code called a monitor. This monitor intercepts relevant events in the program and must keep track of the state of the sequence by updating an appropriate state machine. The present paper stems from the observation that an object's member fields must already contain an encoding of that state machine and that a monitor essentially duplicates operations that the object performs internally. Rather than maintaining a state machine in parallel, the paper puts forward the concept of "piggyback" runtime monitoring, where the monitor relies as much as possible on the object's own state variables to perform its task. Experiments on real-world benchmarks show that this approach greatly simplifies the monitoring process and drastically reduces the incurred runtime overhead compared to classical solutions.
C1 [Halle, Sylvain; Vallet, Jason; Tremblay-Lessard, Raphael] Univ Quebec Chicoutimi, Lab Informat Formelle, Chicoutimi, PQ, Canada.
C3 University of Quebec; University of Quebec Chicoutimi
RP Hallé, S (corresponding author), Univ Quebec Chicoutimi, Lab Informat Formelle, Chicoutimi, PQ, Canada.
EM shalle@acm.org
RI Hallé, Sylvain/H-4153-2019
OI Hallé, Sylvain/0000-0002-4406-6154
CR Ahrendt W., 2005, Softw. Syst. Model., V4, P32
   Avgustinov P, 2007, ACM SIGPLAN NOTICES, V42, P589, DOI 10.1145/1297105.1297070
   Barringer H, 2010, J LOGIC COMPUT, V20, P675, DOI 10.1093/logcom/exn076
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bodden E, 2007, LECT NOTES COMPUT SC, V4609, P525
   Bodden E, 2010, J LOGIC COMPUT, V20, P707, DOI 10.1093/logcom/exn077
   Bodden E, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P3
   Chein M, 2009, ADV INFORM KNOWL PRO, P1
   Chen F, 2009, IEEE INT CONF AUTOM, P383, DOI 10.1109/ASE.2009.50
   Colombo C, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P33, DOI 10.1109/SEFM.2009.13
   Erlingsson U, 2000, P IEEE S SECUR PRIV, P246, DOI 10.1109/SECPRI.2000.848461
   Erlingsson U., 2008, P 2008 WORKSH PROGR
   Hallé S, 2012, IEEE T SERV COMPUT, V5, P192, DOI 10.1109/TSC.2011.10
   Jin DY, 2011, ACM SIGPLAN NOTICES, V46, P415, DOI 10.1145/1993316.1993547
   Johnson RalphE., 2005, P 20 ANN ACM SIGPLAN
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Le N. M., 2010, CONTRACTS JAVA PRACT
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   Meredith PO, 2010, AUTOMAT SOFTW ENG, V17, P149, DOI 10.1007/s10515-010-0063-y
   O'Hair K., 2004, HPROF HEAP CPU PROFI
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Stolz V, 2006, ELECTRON NOTES THEOR, V144, P109, DOI 10.1016/j.entcs.2006.02.007
   Wasylkowski A, 2011, AUTOMAT SOFTW ENG, V18, P263, DOI 10.1007/s10515-011-0084-1
NR 24
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2015
VL 17
IS 2
BP 125
EP 142
DI 10.1007/s10009-014-0326-1
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7NI
UT WOS:000355682200002
DA 2024-07-18
ER

PT J
AU Wong, PYH
   Bubel, R
   de Boer, FS
   Gómez-Zamalloa, M
   de Gouw, S
   Hähnle, R
   Meinke, K
   Sindhu, MA
AF Wong, Peter Y. H.
   Bubel, Richard
   de Boer, Frank S.
   Gomez-Zamalloa, Miguel
   de Gouw, Stijn
   Hahnle, Reiner
   Meinke, Karl
   Sindhu, Muddassar Azam
TI Testing abstract behavioral specifications
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Automated testing; Industrial case study; Black-box testing; Glass-box
   testing; Runtime assertion checking
AB We present a range of testing techniques for the Abstract Behavioral Specification (ABS) language and apply them to an industrial case study. ABS is a formal modeling language for highly variable, concurrent, component-based systems. The nature of these systems makes them susceptible to the introduction of subtle bugs that are hard to detect in the presence of steady adaptation. While static analysis techniques are available for an abstract language such as ABS, testing is still indispensable and complements analytic methods. We focus on fully automated testing techniques including black-box and glass-box test generation as well as runtime assertion checking, which are shown to be effective in an industrial setting.
C1 [Wong, Peter Y. H.] SDL, Amsterdam, Netherlands.
   [Bubel, Richard; Hahnle, Reiner] Tech Univ Darmstadt, Dept Comp Sci, Darmstadt, Germany.
   [de Boer, Frank S.; de Gouw, Stijn] CWI, NL-1009 AB Amsterdam, Netherlands.
   [Gomez-Zamalloa, Miguel] Univ Complutense Madrid, DSIC, Madrid, Spain.
   [Meinke, Karl] KTH Royal Inst Technol, Sch Comp Sci & Commun, Stockholm, Sweden.
   [Sindhu, Muddassar Azam] Quaid I Azam Univ, Dept Comp Sci, Islamabad, Pakistan.
C3 Technical University of Darmstadt; Complutense University of Madrid;
   Royal Institute of Technology; Quaid I Azam University
RP Wong, PYH (corresponding author), SDL, Amsterdam, Netherlands.
EM pwong@sdl.com
RI Sindhu, Muddassar Azam/GXF-0221-2022; Sindhu, Muddassar Azam/O-3216-2013
OI Sindhu, Muddassar Azam/0000-0002-3411-9224; Sindhu, Muddassar
   Azam/0000-0002-3411-9224; Hahnle, Reiner/0000-0001-8000-7613;
   /0000-0002-9706-5008; de Gouw, Stijn/0000-0003-2964-6844; GOMEZ-ZAMALLOA
   GIL, MIGUEL/0000-0003-1557-689X
CR Albert E., 2012, LEIBNIZ INT P INFORM, V17, P98
   Albert E., 2011, LNCS, V6564
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   [Anonymous], 2012, ANAL FINAL REPORT DE
   Bartetzko D., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00247-6
   Chen F, 2007, ACM SIGPLAN NOTICES, V42, P569, DOI 10.1145/1297105.1297069
   Cimatti A., 1999, LNCS, V1633
   Clarke D, 2011, LECT NOTES COMPUT SC, V6659, P417, DOI 10.1007/978-3-642-21455-4_13
   Colombo C, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P33, DOI 10.1109/SEFM.2009.13
   de Boer FS, 2013, LECT NOTES COMPUT SC, V8137, P259, DOI 10.1007/978-3-642-40561-7_18
   Gómez-Zamalloa M, 2010, THEOR PRACT LOG PROG, V10, P659, DOI 10.1017/S1471068410000347
   Hahnle Reiner, 2013, Formal Methods for Components and Objects. 11th International Symposium, FMCO 2012. Revised Lectures: LNCS 7866, P1, DOI 10.1007/978-3-642-40615-7_1
   Hamill Paul, 2004, Unit Test Frameworks: Tools for High-quality Software Development
   Johnsen E.B., 2011, Lecture Notes in Computer Science, V6957, P142, DOI [10.1007/978- 3- 642-25271-6 8, DOI 10.1007/978-3-642-25271-6]
   Johnsen E. B., 2013, LNCS T ASPECT ORIENT
   Johnsen EB, 2007, SOFTW SYST MODEL, V6, P39, DOI 10.1007/s10270-006-0011-2
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Klint P, 2009, IEEE INT WORK C SO, P168, DOI 10.1109/SCAM.2009.28
   Lei Feng, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P164, DOI 10.1007/978-3-642-41707-8_11
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   Meinke K, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P447, DOI 10.1109/ICST.2013.62
   Meinke K, 2012, COMM COM INF SC, V336, P200
   Meinke K, 2011, LECT NOTES COMPUT SC, V6706, P134, DOI 10.1007/978-3-642-21768-5_11
   Nobakht B., 2012, Formal Aspects of Component Software. 7th International Workshop, FACS 2010. Revised Selected Papers, P53, DOI 10.1007/978-3-642-27269-1_4
   Pohl, 2005, Software Product Line Engineering Foundations, Principles, and Techniques
   Schaefer I., 2010, P 14 SOFTW PROD LIN
   Schäfer J, 2010, LECT NOTES COMPUT SC, V6183, P275, DOI 10.1007/978-3-642-14107-2_13
   Terrence P., 2007, The Definitive ANTLR Reference
   Vinju J., 2010, P 12 WORKSH FORM TEC
   Wong Peter Y. H., 2012, International Journal on Software Tools for Technology Transfer, V14, P567, DOI 10.1007/s10009-012-0250-1
   Wong P. Y. H., 2012, LNCS, V7421
NR 31
TC 5
Z9 5
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2015
VL 17
IS 1
BP 107
EP 119
DI 10.1007/s10009-014-0301-x
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7ND
UT WOS:000355681700007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Galler, SJ
   Aichernig, BK
AF Galler, Stefan J.
   Aichernig, Bernhard K.
TI Survey on test data generation tools An evaluation of white- and
   gray-box testing tools for C#, C++, Eiffel, and Java
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Test data generation; Tool evaluation; Java; C++; C#; Eiffel
AB Automating the process of software testing is a very popular research topic and of real interest to industry. Test automation can take part on different levels, e.g., test execution, test case generation, test data generation. This survey gives an overview of state-of-the art test data generation tools, either academic or commercial. The survey focuses on white-and gray-box techniques. The list of existing tools was filtered with respect to their public availability, their maturity, and activity. The remaining seven tools, i.e., AgitarOne, CodePro AnalytiX, AutoTest, C++ test, Jtest, RANDOOP, and PEX, are briefly introduced and their evaluation results are summarized. For the evaluation we defined 31 benchmark tests, which check the tools capabilities to generate test data that satisfies a given specification: 24 primitive type benchmarks and 7 non-primitive type and more complex with respect to the specification benchmarks. Most of the commercial tools implement a test data strategy that uses constant values found in the method under test or values that are slightly modified by means of mathematical operations. This strategy turns out to be very effective. In general, all tools that combine multiple techniques perform very well. For example PEX uses constraint solving techniques, but in cases where the constraint solver reaches its limitations it uses random based techniques to overcome those limitations. Especially, the two commercial tools AgitarOne and PEX that combine multiple approaches to test data generation are able to pass all 31 tests. This survey reflects the status in 2011.
C1 [Galler, Stefan J.; Aichernig, Bernhard K.] Graz Univ Technol, Inffeldgase 16b-2, A-8010 Graz, Austria.
C3 Graz University of Technology
RP Galler, SJ (corresponding author), Graz Univ Technol, Inffeldgase 16b-2, A-8010 Graz, Austria.
EM stefan.galler@ist.tugraz.at; bernhard.aichernig@ist.tugraz.at
OI Aichernig, Bernhard/0000-0002-3484-5584
CR Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2005, E~ective C++: 55 Speci~c Ways to Improve Your Programs and Designs
   [Anonymous], 2008, ISSTA
   Barnett M, 2005, LECT NOTES COMPUT SC, V3362, P49
   Barnett M., 2009, P 31 INT C SOFTW ENG
   Boshernitsan M., 2006, ISSTA, P169
   Bourdonov I. B., 2002, LECT NOTES COMPUTER, V2391, P121
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Brat G, 2004, FORM METHOD SYST DES, V25, P167, DOI 10.1023/B:FORM.0000040027.28662.a4
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2008, ACM T INFORM SYST SE, V12, P322
   Campbell C., 2005, TECHNICAL REPORT
   Ciupa I., 2005, Proceedings of Net.ObjectDays 2005 6th Annual International Conference on Object-Oriented and Internet-based Technologies, Concepts, and Applications for a Networked World, P545
   CIUPA I, 2008, 30 INT C SOFTW ENG, P71
   Csallner C, 2005, PROC INT CONF SOFTW, P422
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   de Halleux J, 2010, LECT NOTES COMPUT SC, V6141, P253, DOI 10.1007/978-3-642-13953-6_14
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Ernst M. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P213, DOI 10.1109/ICSE.1999.841011
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Freese T, 2002, P 3ND INT C EXTREME, P2
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Grieskamp W, 2006, LECT NOTES COMPUT SC, V4262, P1
   Grieskamp W, 2009, LECT NOTES COMPUT SC, V5826, P97, DOI 10.1007/978-3-642-05031-2_7
   Huima A, 2007, LECT NOTES COMPUT SC, V4581, P1
   Jaffuel E, 2007, LECT NOTES COMPUT SC, V4355, P277
   KULIAMIN VV, 2003, 1 EUR C MOD DRIV SOF, P55
   Legeard B., 2002, FME 2002 FORMAL METH, V2391, P221
   Meyer B, 2007, LECT NOTES COMPUT SC, V4362, P114
   Microsoft Research, 2010, ADV CONC PAR UN TEST
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Parasoft, 2010, PAR C TEST US GUID
   Parasoft, US DES CONTR AUT JAV
   Penix J, 2005, FORM METHOD SYST DES, V26, P103, DOI 10.1007/s10703-005-1490-4
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   SMTCOMP, 2010, CALL FOR ENTR
   Thomas A., 2006, 2006 ACM SIGPLAN WOR
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Tillmann Nikolai., 2005, SIGSOFT Softw. Eng. Notes, V30, P253
   Veanes Margus, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P498, DOI 10.1109/ICST.2010.15
   Veanes M., 2008, Formal methods and testing, chapter Model-based testing of object-oriented reactive systems with spec explorer, P39, DOI DOI 10.1007/978-3-540-78917-8
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Wei Y., 2010, 3 INT C SOFTW TEST V, P1
NR 48
TC 18
Z9 25
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2014
VL 16
IS 6
BP 727
EP 751
DI 10.1007/s10009-013-0272-3
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HV
UT WOS:000209673400006
DA 2024-07-18
ER

PT J
AU Erdogan, G
   Li, Y
   Runde, RK
   Seehusen, F
   Stolen, K
AF Erdogan, Gencer
   Li, Yan
   Runde, Ragnhild Kobro
   Seehusen, Fredrik
   Stolen, Ketil
TI Approaches for the combined use of risk analysis and testing: a
   systematic literature review
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Review
DE Risk-based testing; Test-based risk analysis; Literature survey
AB Risk analysis and testing are conducted for different purposes. Risk analysis and testing nevertheless involve processes that may be combined to the benefit of both. We may use testing to support risk analysis and risk analysis to support testing. This paper surveys literature on the combined use of risk analysis and testing. First, the existing approaches are identified through a systematic literature review. The identified approaches are then classified and discussed with respect to main goal, context of use and maturity level. The survey highlights the need for more structure and rigor in the definition and presentation of approaches. Evaluations are missing in most cases. The paper may serve as a basis for examining approaches for the combined use of risk analysis and testing, or as a resource for identifying the adequate approach to use.
C1 [Erdogan, Gencer; Li, Yan; Seehusen, Fredrik; Stolen, Ketil] SINTEF ICT, Oslo, Norway.
   [Erdogan, Gencer; Li, Yan; Runde, Ragnhild Kobro; Stolen, Ketil] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 SINTEF; University of Oslo
RP Runde, RK (corresponding author), Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
EM ragnhild.runde@ifi.uio.no
CR Alam M., 2013, INT J COMPUTER APPL, V65, P33
   Amland S, 2000, J SYST SOFTWARE, V53, P287, DOI 10.1016/S0164-1212(00)00019-4
   [Anonymous], 2005, P 2005 ACM S APPL CO
   [Anonymous], 2012, 7 INT C SOFTW ENG AD
   [Anonymous], 2009, 310002009 ISO
   [Anonymous], 2008, AST, DOI DOI 10.1145/1370042.1370057
   [Anonymous], 2013, P 17 INT C EVALUATIO
   Bai XY, 2012, INT J SOFTW ENG KNOW, V22, P595, DOI 10.1142/S0218194012500167
   Casado R., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P443, DOI 10.1109/ICST.2011.44
   Casado R., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P337, DOI 10.1109/QSIC.2010.46
   Charters S., 2007, 2007001 EBSE
   Chen Y., 2003, P 14 IEEE INT S SOFT, P305
   Chen Yanping., 2002, P 2002 C CTR ADV STU, P1
   Entin V., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P43, DOI 10.1109/IWAST.2012.6228989
   Felderer M, 2013, LECT NOTES BUS INF P, V133, P10
   Felderer M, 2012, LECT NOTES BUS INF P, V94, P159
   Gleirscher M., 2011, AUTOMATION SOFTWARE, P64, DOI DOI 10.1145/1982595.1982609
   Gleirscher M, 2013, LECT NOTES BUS INF P, V133, P104
   Hosseingholizadeh A., 2010, 2010 2nd International Conference on Computer Engineering and Technology (ICCET), P601, DOI 10.1109/ICCET.2010.5485639
   International Standards Organization, 2012, 29119 ISO 2
   Kloos J., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P26, DOI 10.1109/ICSTW.2011.90
   Kumar N, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P197
   MURTHY KK, 2009, P 1 INT C EM NETW IN, P111
   Nazier R, 2012, PROC INT SYMP SOFTW, P213, DOI 10.1109/ISSREW.2012.22
   Ray M, 2013, IET SOFTW, V7, P29, DOI 10.1049/iet-sen.2011.0081
   Redmill F, 2005, SOFTW TEST VERIF REL, V15, P3, DOI 10.1002/stvr.310
   Redmill F, 2004, SOFTW TEST VERIF REL, V14, P3, DOI 10.1002/stvr.288
   Rosenberg L., 1999, P AH HUL HAW WINT WO, P1
   Schneidewind NF, 2007, INT J RELIAB QUAL SA, V14, P99, DOI 10.1142/S0218539307002532
   Souza Ellen, 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P1032, DOI 10.1109/ITNG.2010.203
   Souza E., 2009, 10 LAT AM TEST WORKS, P1
   Xiaoying Bai, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P485, DOI 10.1109/COMPSAC.2009.180
   Xu DX, 2012, IEEE T DEPEND SECURE, V9, P526, DOI 10.1109/TDSC.2012.24
   Yoon H, 2011, INT J SOFTW ENG KNOW, V21, P191, DOI 10.1142/S0218194011005220
   Zech P., 2012, 2012 International Conference on Software Security and Reliability Companion, P47, DOI 10.1109/SERE-C.2012.11
   Zech P., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P411, DOI 10.1109/ICST.2011.23
   Zimmerman F., 2009, Panel Data Models Lecture: Panel Data February 16 2009, P1
NR 37
TC 23
Z9 24
U1 1
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2014
VL 16
IS 5
BP 627
EP 642
DI 10.1007/s10009-014-0330-5
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HU
UT WOS:000209673300013
DA 2024-07-18
ER

PT J
AU Bozga, M
   Sifakis, J
AF Bozga, Marius
   Sifakis, Joseph
TI Correct by design coordination of autonomous driving systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE autonomous driving systems; traffic rule specification; map
   specification; collision avoidance policy; assume-guarantee contract;
   correctness by design
AB The paper proposes a method for the correct by design coordination of autonomous driving systems (ADS). It builds on previous results on collision avoidance policies and the modeling of ADS by combining descriptions of their static environment in the form of maps, and the dynamic behavior of their vehicles. An ADS is modeled as a dynamic system involving a set of vehicles coordinated by a Runtime that based on vehicle positions on a map and their kinetic attributes, computes free spaces for each vehicle. Vehicles are bounded to move within the corresponding allocated free spaces. We provide a correct by design safe control policy for an ADS, if its vehicles and the Runtime respect corresponding assume-guarantee contracts. The result is established by showing that the composition of assume-guarantee contracts is an inductive invariant that entails ADS safety. We show that it is practically possible to define speed control policies for vehicles that comply with their contracts. Furthermore, we show that traffic rules can be specified in a linear-time temporal logic as a class of formulas that constrain vehicle speeds. The main result is that, given a set of traffic rules, it is possible to derive free-space policies of the Runtime such that the resulting system behavior is safe by design with respect to the rules.
C1 [Bozga, Marius; Sifakis, Joseph] Univ Grenoble Alpes, VERIMAG, Grenoble INP, CNRS, F-38000 Grenoble, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS)
RP Bozga, M (corresponding author), Univ Grenoble Alpes, VERIMAG, Grenoble INP, CNRS, F-38000 Grenoble, France.
EM marius.bozga@univ-grenoble-alpes.fr;
   joseph.sifakis@univ-grenoble-alpes.fr
CR [Anonymous], 2020, ASAM OPENDRIVE OP DY
   Bagschik G, 2018, IEEE INT VEH SYM, P1813, DOI 10.1109/IVS.2018.8500632
   Beetz J, 2018, LECT NOTES COMPUT SC, V10864, P245, DOI 10.1007/978-3-319-91638-5_13
   Benveniste A, 2018, FOUND TRENDS ELECTRO, V12, pI, DOI 10.1561/1000000053
   Bozga Marius, 2022, Principles of Systems Design: Essays Dedicated to Thomas A. Henzinger on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (13660), P85, DOI 10.1007/978-3-031-22337-2_5
   Bozga Marius, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P13, DOI 10.1007/978-3-031-19759-8_2
   Butz M, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294438
   Chatterjee K, 2007, LECT NOTES COMPUT SC, V4424, P261
   El-Hokayem A, 2020, LECT NOTES COMPUT SC, V12310, P284, DOI 10.1007/978-3-030-58768-0_16
   Esterle K., 2020, 2020 IEEE 3 CONNECTE, P1
   Hilscher M, 2011, LECT NOTES COMPUT SC, V6991, P404, DOI 10.1007/978-3-642-24559-6_28
   Karimi A, 2020, ACM IEEE INT CONF CY, P41, DOI 10.1109/ICCPS48487.2020.00012
   Kress-Gazit H, 2008, IEEE INT CON AUTO SC, P766, DOI 10.1109/COASE.2008.4626549
   Mavridou A, 2021, LECT NOTES COMPUT SC, V13047, P503, DOI 10.1007/978-3-030-90870-6_27
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Poggenhans F, 2018, IEEE INT C INTELL TR, P1672, DOI 10.1109/ITSC.2018.8569929
   Rizaldi Albert, 2017, Integrated Formal Methods. 13th International Conference, IFM 2017. Proceedings: LNCS 10510, P50, DOI 10.1007/978-3-319-66845-1_4
   Rizaldi A, 2018, LECT NOTES COMPUT SC, V11138, P75, DOI 10.1007/978-3-030-01090-4_5
   Rizaldi A, 2015, IEEE INT C INTELL TR, P1658, DOI 10.1109/ITSC.2015.269
   Saoud A, 2021, AUTOMATICA, V134, DOI 10.1016/j.automatica.2021.109910
   Schwarting W, 2018, ANNU REV CONTR ROBOT, V1, P187, DOI 10.1146/annurev-control-060117-105157
   Sharf M., 2020, ARXIV
   Sun M., 2019, ARXIV
   Wang Q., 2020, MEMOCODE, P1
   Wang Q., 2021, ARXIV
   Waqas M., 2022, ARXIV
   Wongpiromsarn T, 2012, IEEE T AUTOMAT CONTR, V57, P2817, DOI 10.1109/TAC.2012.2195811
   Wongpiromsarn T, 2011, IEEE INT C INTELL TR, P1168, DOI 10.1109/ITSC.2011.6083056
NR 28
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2023
VL 25
IS 5-6
BP 625
EP 639
DI 10.1007/s10009-023-00723-0
EA NOV 2023
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AB9N8
UT WOS:001093027600008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Binder, B
   Asavoae, M
   Brandner, F
   Ben Hedia, B
   Jan, M
AF Binder, Benjamin
   Asavoae, Mihail
   Brandner, Florian
   Ben Hedia, Belgacem
   Jan, Mathieu
TI Formal modeling and verification for amplification timing anomalies in
   the superscalar TriCore architecture
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Timing anomalies; TriCore architecture; Model checking; SMT solving
AB Static worst-case timing analyses compute safe timing bounds of applications running in real-time systems. These bounds are necessary to evaluate the strict timing constraints of real-time systems. Moreover, the inherent complexity of such systems demands that their timing analyses are able to cope with the large resulting state space. In this direction, a potential solution is to perform compositional timing analysis, where the system-level timing is obtained from component-level timings. Undesired timing phenomena, called timing anomalies, threaten the soundness of (compositional) timing analyses. In this work, we investigate how the industrial superscalar TriCore architecture is amenable for compositional timing analyses via a formal evaluation of amplification timing anomalies. Firstly, we adapt and extend a specialized abstraction, called canonical pipeline model, to capture the amplification effects in a formal model of the TriCore architecture. Then, we use model checking to efficiently detect amplification timing anomalies and report the associated complexity results. Finally, we aim for better precision as we design and implement counterexample-based methods so as to uncover patterns leading to such anomalies.
C1 [Binder, Benjamin; Asavoae, Mihail; Ben Hedia, Belgacem; Jan, Mathieu] Univ Paris Saclay, CEA, List, F-91120 Palaiseau, France.
   [Brandner, Florian] Inst Polytech Paris, Telecom Paris, LTCI, F-91120 Palaiseau, France.
C3 Universite Paris Cite; Universite Paris Saclay; CEA; IMT - Institut
   Mines-Telecom; Institut Polytechnique de Paris; Telecom Paris
RP Binder, B (corresponding author), Univ Paris Saclay, CEA, List, F-91120 Palaiseau, France.
EM benjamin.binder@cea.fr; mihail.asavoae@cea.fr;
   florian.brandner@telecom-paris.fr; belgacem.ben-hedia@cea.fr;
   mathieu.jan@cea.fr
RI Brandner, Florian/KBD-3418-2024
OI Brandner, Florian/0000-0002-2493-7864; BEN HEDIA,
   Belgacem/0000-0003-1367-8542
CR Abate A, 2018, LECT NOTES COMPUT SC, V10981, P270, DOI 10.1007/978-3-319-96145-3_15
   Asavoae M., 2018, 18 INT WORKSH WORST
   Ballabriga C, 2010, LECT NOTES COMPUT SC, V6399, P35, DOI 10.1007/978-3-642-16256-5_6
   Barrett C.W., 2018, Handbook of Model Checking, P305, DOI DOI 10.1007/978-3-319-10575-8_11
   Binder B, 2020, LECT NOTES COMPUT SC, V12327, P151, DOI 10.1007/978-3-030-58298-2_6
   Bjorner N., 2019, Programming Z3
   Bryan A, 2011, POLICY PRACT, P1
   de Dinechin BD, 2014, DES AUT TEST EUROPE
   Eisinger J, 2006, IEEE INT SYMP DESIGN, P13
   Hahn S., 2015, ACM SIGBED Review, V12, P28
   Hahn S, 2018, REAL TIM SYST SYMP P, P469, DOI 10.1109/RTSS.2018.00060
   Hahn S, 2016, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON REAL-TIME NETWORKS AND SYSTEMS PROCEEDINGS (RTNS 2016), P299, DOI 10.1145/2997465.2997471
   Hennessy J. L., 2012, Computer Architecture A Quantitative Approach, V5th
   Infineon Technologies AG, 2014, AURIX TC21X TC22X TC
   Infineon Technologies AG, 2004, TRICORE 1 PIP BEH IN
   Infineon Technologies AG, 2002, ARCH OV HDB
   Jan M., 2020, ASP DAC
   Lahiri SK, 2002, LECT NOTES COMPUT SC, V2517, P142
   Lauterbach GmbH, 2021, SIM TRICORE
   Liu I, 2010, CONF REC ASILOMAR C, P2111, DOI 10.1109/ACSSC.2010.5757922
   Lundqvist T., 1999, Proceedings 20th IEEE Real-Time Systems Symposium (Cat. No.99CB37054), P12, DOI 10.1109/REAL.1999.818824
   Reineke J., 2006, WCET
   Schoeberl M, 2015, J SYST ARCHITECT, V61, P449, DOI 10.1016/j.sysarc.2015.04.002
   Seshia SA, 2018, PROCEEDINGS OF THE 2018 16TH ACM/IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR SYSTEM DESIGN (MEMOCODE), P1
   Sun W.T., 2020, 10 EUR C EMB REAL TI
   Ungerer T, 2010, IEEE MICRO, V30, P66, DOI 10.1109/MM.2010.78
   Nguyen VT, 2021, ENVIRON SCI POLLUT R, V28, P63558, DOI 10.1007/s11356-020-10837-6
   Wenzel I, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P295
   Wilhelm S., 2007, 7 INT WORKSH WORST C
NR 29
TC 2
Z9 2
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2022
VL 24
IS 3
SI SI
BP 415
EP 440
DI 10.1007/s10009-022-00655-1
EA APR 2022
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1D5TB
UT WOS:000780757500001
DA 2024-07-18
ER

PT J
AU Shakhov, V
   Koo, I
AF Shakhov, Vladimir
   Koo, Insoo
TI Graph-based technique for survivability assessment and optimization of
   IoT applications
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Internet of Things; Network topology; Intrusion models; System
   survivability
ID INTRUSION DETECTION; TOPOLOGY DESIGN; RELIABILITY; INTERNET
AB The Internet of Things (IoT) has evolved from theoretical research to market deployment. The IoT will enable a plethora of new applications in various areas of human activity and will provide tremendous opportunities for societies around the world. However, implementation is hampered by fears that the societal costs of the IoT outweigh its benefits. Failure of, or hacking into, IoT applications can, for example, disable home security systems, destroy crops, and destabilize hospitals. To unlock the IoT's potential, it needs to provide application survivability. For this purpose, it needs a tradeoff between IoT resources and system survivability. In previous works, there has been a lack of quantitative methods considering this problem, which combines specificity of network topology, intrusion details, and properties of intrusion detection/prevention system. In this work, we offer a corresponding approach that combines graph theory and stochastic process-based models. The network topology is described as a probabilistic graph. To address the properties of intrusions and defense mechanisms, we use basic survivability models, that generate the probabilities for graph elements. Therefore, the criterion of system survivability is a function defined on the created graph. An approach for deduction and computation of this survivability metric is discussed. Survivability optimization problems are formulated. In some important practical cases, closed-form solutions are offered.
C1 [Shakhov, Vladimir; Koo, Insoo] Univ Ulsan, Ulsan, South Korea.
C3 University of Ulsan
RP Shakhov, V; Koo, I (corresponding author), Univ Ulsan, Ulsan, South Korea.
EM shakhov@mail.ulsan.ac.kr; iskoo@ulsan.ac.kr
FU National Research Foundation (NRF) of Korea - MEST
   [NRF-2017R1D1A3B03030386]
FX This research was supported by the National Research Foundation (NRF) of
   Korea, funded by MEST (NRF-2017R1D1A3B03030386).
CR Ciftcioglu EN, 2017, IEEE J SEL AREA COMM, V35, P628, DOI 10.1109/JSAC.2017.2659582
   Couto RD, 2016, J NETW SYST MANAG, V24, P346, DOI 10.1007/s10922-015-9354-8
   Elshqeirat B, 2015, IEEE T RELIAB, V64, P118, DOI 10.1109/TR.2014.2338253
   Enoch SY, 2019, J NETW COMPUT APPL, V148, DOI 10.1016/j.jnca.2019.102448
   Frey C, 2018, IEEE T KNOWL DATA EN, V30, P880, DOI 10.1109/TKDE.2017.2780123
   Heegaard PE, 2009, COMPUT NETW, V53, P1215, DOI 10.1016/j.comnet.2009.02.014
   Jan SU, 2019, IEEE ACCESS, V7, P42450, DOI 10.1109/ACCESS.2019.2907965
   Kamgueu PO, 2018, COMPUT COMMUN, V120, P10, DOI 10.1016/j.comcom.2018.02.011
   Kamysz, 2018, P IEEE 2 RUSS PAC C, P1
   Khan A, 2018, IEEE T KNOWL DATA EN, V30, P2078, DOI 10.1109/TKDE.2018.2816653
   Khouzani MHR, 2012, IEEE ACM T NETWORK, V20, P1347, DOI 10.1109/TNET.2012.2183642
   Kuipers FA, 2012, ISRN COMMUN NETW, DOI [10.5402/2012/932456, DOI 10.5402/2012/932456]
   Lima MN, 2009, IEEE COMMUN SURV TUT, V11, P66, DOI 10.1109/SURV.2009.090106
   Liu JJ, 2016, IEEE COMMUN SURV TUT, V18, P1045, DOI 10.1109/COMST.2015.2500960
   Meyerson A, 2009, LECT NOTES COMPUT SC, V5687, P272, DOI 10.1007/978-3-642-03685-9_21
   Migov D, 2019, VESTN TOMSK GOS U, V47, P159
   Migov Denis A., 2014, Multiple-Access Communications. 7th International Workshop (MACOM 2014). Proceedings: LNCS 8715, P49, DOI 10.1007/978-3-319-10262-7_5
   Shakhov Vladimir, 2016, International Conference on Mobile and Wireless Technologies (ICMWT2016). LNEE 391, P127, DOI 10.1007/978-981-10-1409-3_14
   Shakhov V, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18061849
   Shakhov V, 2016, 2016 39TH INTERNATIONAL CONFERENCE ON TELECOMMUNICATIONS AND SIGNAL PROCESSING (TSP), P56, DOI 10.1109/TSP.2016.7760828
   Shakhov V, 2014, 2014 22ND TELECOMMUNICATIONS FORUM TELFOR (TELFOR), P292, DOI 10.1109/TELFOR.2014.7034408
   Stern RE, 2017, RELIAB ENG SYST SAFE, V164, P1, DOI 10.1016/j.ress.2017.01.021
   Uckelmann D, 2011, ARCHITECTING THE INTERNET OF THINGS, P1, DOI 10.1007/978-3-642-19157-2
   Wang Z, 2018, IEEE ACCESS, V6, P38367, DOI [10.1109/ACCESS.2018.2854599, 10.1109/access.2018.2854599]
   WATANABE T, 1987, J COMPUT SYST SCI, V35, P96, DOI 10.1016/0022-0000(87)90038-9
   Xie L, 2017, COMPUT NETW, V128, P28, DOI 10.1016/j.comnet.2017.03.023
   Yin Y, 2019, PHYSICA A, V531, DOI 10.1016/j.physa.2019.04.193
   Zarpelao BB, 2017, J NETW COMPUT APPL, V84, P25, DOI 10.1016/j.jnca.2017.02.009
NR 28
TC 7
Z9 7
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2021
VL 23
IS 1
SI SI
BP 105
EP 114
DI 10.1007/s10009-020-00594-9
EA NOV 2020
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PV6IB
UT WOS:000593404900001
DA 2024-07-18
ER

PT J
AU Lemberger, T
AF Lemberger, Thomas
TI Plain random test generation with PRTest
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Random testing; Software engineering; Software testing; Software
   verification; Test-Comp
AB Automatic test-suite generation tools are often complex and their behavior is not predictable. To provide a minimum baseline that test-suite generators should be able to surpass, we presentPRTest, a random black-box test-suite generator for C programs: To create a test,PRTestnatively executes the program under test and creates a new, random test value whenever an input value is required. After execution,PRTestchecks whether any new program branches were covered and, if this is the case, the created test is added to the test suite. This way, tests are rapidly created either until a crash is found, or until the user aborts the creation. While this naive mechanism is not competitive with more sophisticated, state-of-the-art test-suite generation tools, it is able to provide a good baseline for Test-Comp and a fast alternative for automatic test-suite generation for programs with simple control flow.PRTestis publicly available and open source.
C1 [Lemberger, Thomas] Ludwig Maximilians Univ Munchen, Munich, Germany.
C3 University of Munich
RP Lemberger, T (corresponding author), Ludwig Maximilians Univ Munchen, Munich, Germany.
EM thomas.lemberger@sosy.ifi.lmu.de
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL.
CR Beyer Dirk., 2017, HARDWARE SOFTWARE VE, P99
   BIRD DL, 1983, IBM SYST J, V22, P229, DOI 10.1147/sj.223.0229
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Rojas JM, 2016, SOFTW TEST VERIF REL, V26, P366, DOI 10.1002/stvr.1601
NR 4
TC 6
Z9 6
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2021
VL 23
IS 6
BP 871
EP 873
DI 10.1007/s10009-020-00568-x
EA JUL 2020
PG 3
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XU5UO
UT WOS:000545887600003
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Cadar, C
   Nowack, M
AF Cadar, Cristian
   Nowack, Martin
TI KLEE symbolic execution engine in 2019
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Dynamic symbolic execution; Bug finding; Test generation
AB KLEE is a popular dynamic symbolic execution engine, initially designed at Stanford University and now primarily developed and maintained by the Software Reliability Group at Imperial College London. KLEE has a large community spanning both academia and industry, with over 60 contributors on GitHub, over 350 subscribers on its mailing list, and over 80 participants to a recent dedicated workshop. KLEE has been used and extended by groups from many universities and companies in a variety of different areas such as high-coverage test generation, automated debugging, exploit generation, wireless sensor networks, and online gaming, among many others.
C1 [Cadar, Cristian; Nowack, Martin] Imperial Coll London, Dept Comp, London, England.
C3 Imperial College London
RP Cadar, C (corresponding author), Imperial Coll London, Dept Comp, London, England.
EM c.cadar@imperial.ac.uk; m.nowack@imperial.ac.uk
RI Nowack, Martin/AAB-3129-2020
OI Nowack, Martin/0000-0002-1177-0233
CR [Anonymous], 2006, P 13 ACM C COMPUTER
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Boyer R.S., 1975, P INT C REL SOFTW IC
   Brummayer R., 2009, P 15 INT C TOOLS ALG
   Bucur S., 2011, P 6 EUR C COMP SYST
   Cadar C, 2005, LECT NOTES COMPUT SC, V3639, P2
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Clarke LoriA., 1976, Proc. of the 1976 annual conference, P488, DOI [10.1145/800191.805647, DOI 10.1145/800191.805647]
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dutertre B, 2014, P 26 INT C COMP AID
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Haedicke F., 2011, P INT WORKSH DES IMP
   King J. C., 1975, Programming Methodology, P278, DOI 10.1145/390016.808444
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Li G., 2012, P 17 ACM S PRINC PRA
   Li G., 2011, P 23 INT C COMP AID
   Liew D, 2017, IEEE INT CONF AUTOM, P601, DOI 10.1109/ASE.2017.8115670
   Palikareva Hristina, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P53, DOI 10.1007/978-3-642-39799-8_3
   Perry DM, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P68, DOI 10.1145/3092703.3092728
   Sasnauskas R., 2010, P 9 ACM IEEE INT C I
NR 22
TC 12
Z9 13
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2021
VL 23
IS 6
BP 867
EP 870
DI 10.1007/s10009-020-00570-3
EA JUN 2020
PG 4
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XU5UO
UT WOS:000537357300001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Chalupa, M
   Vitovská, M
   Jasek, T
   Simácek, M
   Strejcek, J
AF Chalupa, Marek
   Vitovska, Martina
   Jasek, Tomas
   Simacek, Michael
   Strejcek, Jan
TI Symbiotic 6: generating test cases by slicing and symbolic execution
   Competition Contribution
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Symbiotic; Program slicing; Symbolic execution; Klee
AB Symbiotic is a bug-finding and verification tool that integrates light-weight static analyses and instrumentation with program slicing and symbolic execution. The techniques are suitably combined according to a given goal. The paper describes a particular configuration competing in Test-Comp 2019. We also provide a brief analysis of Symbiotic 's results achieved in the competition. As our tool uses a fork of the open-source symbolic executor Klee, we focus on comparison with mainstream Klee that also participated in the competition this year.
C1 [Chalupa, Marek; Vitovska, Martina; Jasek, Tomas; Simacek, Michael; Strejcek, Jan] Masaryk Univ, Brno, Czech Republic.
C3 Masaryk University Brno
RP Chalupa, M (corresponding author), Masaryk Univ, Brno, Czech Republic.
EM chalupa@fi.muni.cz; vitoma@mail.muni.cz
RI Strejček, Jan/J-3237-2013; Chalupa, Marek/AAM-3016-2021
OI Strejček, Jan/0000-0001-5873-403X; Chalupa, Marek/0000-0003-1132-5516
FU Czech Science Foundation [GA18-02177S]
FX The research is supported by The Czech Science Foundation grant
   GA18-02177S.
CR Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Chalupa M, 2020, INT J SOFTW TOOLS TE, V22, P115, DOI 10.1007/s10009-019-00526-2
   Chalupa M, 2018, LECT NOTES COMPUT SC, V10806, P442, DOI 10.1007/978-3-319-89963-3_29
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   FERRANTE J, 1984, LECT NOTES COMPUT SC, V167, P125
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Slaby J, 2013, LECT NOTES COMPUT SC, V7795, P630, DOI 10.1007/978-3-642-36742-7_50
   Vitovska M., 2018, ARXIV181012617 CORR
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
NR 11
TC 5
Z9 5
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2021
VL 23
IS 6
BP 875
EP 877
DI 10.1007/s10009-020-00573-0
EA MAY 2020
PG 3
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XU5UO
UT WOS:000533802500002
DA 2024-07-18
ER

PT J
AU Buonamici, FB
   Belmonte, G
   Ciancia, V
   Latella, D
   Massink, M
AF Buonamici, Fabrizio
   Belmonte, Gina
   Ciancia, Vincenzo
   Latella, Diego
   Massink, Mieke
TI Spatial logics and model checking for medical imaging
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Spatial logics; Closure spaces; Model checking; Medical imaging;
   Segmentation; Magnetic resonance imaging; Distance transform;
   Statistical texture analysis
ID DISTANCE TRANSFORM ALGORITHMS; FORMAL METHODS APPROACH; OF-THE-ART;
   TEXTURAL FEATURES; MR-IMAGES; SEGMENTATION; DIFFUSION; CLASSIFICATION;
   DIAGNOSIS; NETWORKS
AB Recent research on spatial and spatio-temporal model checking provides novel image analysis methodologies, rooted in logical methods for topological spaces. Medical imaging (MI) is a field where such methods show potential for ground-breaking innovation. Our starting point is SLCS, the Spatial Logic for Closure Spaces-closure spaces being a generalisation of topological spaces, covering also discrete space structures-and topochecker, a model checker for SLCS (and extensions thereof). We introduce the logical language ImgQL ("Image Query Language"). ImgQL extends SLCS with logical operators describing distance and region similarity. The spatio-temporal model checker topochecker is correspondingly enhanced with state-of-the-art algorithms, borrowed from computational image processing, for efficient implementation of distance-based operators, namely distance transforms. Similarity between regions is defined by means of a statistical similarity operator, based on notions from statistical texture analysis. We illustrate our approach by means of an example of analysis of Magnetic Resonance images: segmentation of glioblastoma and its oedema.
C1 [Buonamici, Fabrizio; Belmonte, Gina] Azienda Osped Univ Senese, Siena, Italy.
   [Ciancia, Vincenzo; Latella, Diego; Massink, Mieke] CNR, Ist Sci & Tecnol Informaz A Faedo, Pisa, Italy.
C3 University of Siena; University Hospital of Siena; Consiglio Nazionale
   delle Ricerche (CNR); Istituto di Scienza e Tecnologie dell'Informazione
   "Alessandro Faedo" (ISTI-CNR)
RP Ciancia, V (corresponding author), CNR, Ist Sci & Tecnol Informaz A Faedo, Pisa, Italy.
EM F.Banci@ao-siena.toscana.it; G.Belmonte@ao-siena.toscana.it;
   Vincenzo.Ciancia@cnr.it; Diego.Latella@cnr.it; Mieke.Massink@cnr.it
RI Latella, Diego/AAD-5792-2022; Ciancia, Vincenzo/AAX-7263-2020; Massink,
   Mieke/E-1287-2012
OI Latella, Diego/0000-0002-3257-9059; Ciancia,
   Vincenzo/0000-0003-1314-0574; Massink, Mieke/0000-0001-5089-002X
CR ADAMS R, 1994, IEEE T PATTERN ANAL, V16, P641, DOI 10.1109/34.295913
   Aiello M, 2007, HANDBOOK OF SPATIAL LOGICS, P1, DOI 10.1007/978-1-4020-5587-4
   Akkus Z, 2017, J DIGIT IMAGING, V30, P449, DOI 10.1007/s10278-017-9983-4
   [Anonymous], 2017, MAGN RESON MAT PHYS, DOI DOI 10.1007/S10334-017-0634-Z
   [Anonymous], 2002, THESIS
   [Anonymous], 8 INT C PERF EV METH
   [Anonymous], LOGICAL METHODS COMP
   [Anonymous], 2015, HSCC 15, DOI [10.1145/2728606.2728633, DOI 10.1145/2728606.2728633]
   Bartocci E., 2015, LNCS, P156, DOI [10.1007/978-3-319-26916-0_9, DOI 10.1007/978-3-319-26916-0]
   Bartocci E, 2017, MEMOCODE 2017: PROCEEDINGS OF THE 15TH ACM-IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR SYSTEM DESIGN, P147, DOI 10.1145/3127041.3127050
   Bartocci E, 2018, IEEE T CONTROL NETW, V5, P308, DOI 10.1109/TCNS.2016.2609138
   Bauer S, 2013, PHYS MED BIOL, V58, pR97, DOI 10.1088/0031-9155/58/13/R97
   Belmonte G, 2016, ELECTRON P THEOR COM, P81, DOI 10.4204/EPTCS.217.10
   Brock KK, 2014, IMAG MED DIAGN THER, P1
   BROWN LG, 1992, COMPUT SURV, V24, P325, DOI 10.1145/146370.146374
   Brown R. W., 2014, Magnetic Resonance Imaging: Physical Principles and Sequence Design, V2nd, DOI DOI 10.1002/9781118633953
   Burnet Neil G, 2004, Cancer Imaging, V4, P153, DOI 10.1102/1470-7330.2004.0054
   Castellano G, 2004, CLIN RADIOL, V59, P1061, DOI 10.1016/j.crad.2004.07.008
   CHEN CC, 1989, IEEE T MED IMAGING, V8, P133, DOI 10.1109/42.24861
   Chetelat G, 2003, NEUROIMAGE, V18, P525, DOI 10.1016/S1053-8119(02)00026-5
   Ciancia Vincenzo, 2014, Theoretical Computer Science. 8th IFIP TC 1/WG 2.2 International Conference, TCS 2014. Proceedings: LNCS 8705, P222, DOI 10.1007/978-3-662-44602-7_18
   Ciancia V, 2018, INT J SOFTW TOOLS TE, V20, P289, DOI 10.1007/s10009-018-0483-8
   Ciancia V, 2016, LOG METH COMPUT SCI, V12, DOI 10.2168/LMCS-12(4:2)2016
   Ciancia V, 2016, LECT NOTES COMPUT SC, V9952, P657, DOI 10.1007/978-3-319-47166-2_46
   Ciancia V, 2016, LECT NOTES COMPUT SC, V9700, P156, DOI 10.1007/978-3-319-34096-8_6
   Ciancia V, 2015, LECT NOTES COMPUT SC, V9509, P297, DOI 10.1007/978-3-662-49224-6_24
   Ciancia V, 2015, 2015 IEEE NINTH INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS WORKSHOPS (SASOW), P74, DOI 10.1109/SASOW.2015.17
   Ciancia V, 2014, INT CONF SELF SELF, P32, DOI 10.1109/SASOW.2014.16
   Ciesielski KC, 2011, J MATH IMAGING VIS, V39, P193, DOI 10.1007/s10851-010-0232-4
   Clarke EM, 2008, LECT NOTES COMPUT SC, V5000, P196
   Clarke EM, 1999, MODEL CHECKING, P1
   Davnall F, 2012, INSIGHTS IMAGING, V3, P573, DOI 10.1007/s13244-012-0196-6
   De Nicola R, 2007, THEOR COMPUT SCI, V382, P42, DOI 10.1016/j.tcs.2007.05.008
   De Santis S, 2014, NEUROIMAGE, V89, P35, DOI 10.1016/j.neuroimage.2013.12.003
   Despotovic I, 2015, COMPUT MATH METHOD M, V2015, DOI 10.1155/2015/450341
   Doi K, 2007, COMPUT MED IMAG GRAP, V31, P198, DOI 10.1016/j.compmedimag.2007.02.002
   Dupont C, 2016, IRBM, V37, P131, DOI 10.1016/j.irbm.2015.12.004
   Fabbri R, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1322432.1322434
   Fyllingen EH, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0164891
   Galton A, 2003, THEOR COMPUT SCI, V305, P111, DOI 10.1016/S0304-3975(02)00701-6
   Galton A, 1999, LECT NOTES COMPUT SC, V1661, P251
   Galton A., 2014, Mereology and the Sciences, V371, P293
   Gol EA, 2014, IEEE DECIS CONTR P, P108, DOI 10.1109/CDC.2014.7039367
   Gordillo N, 2013, MAGN RESON IMAGING, V31, P1426, DOI 10.1016/j.mri.2013.05.002
   Grevera GJ, 2007, TOP BIOMED ENG, P33, DOI 10.1007/978-0-387-68413-0_2
   Grosu R, 2009, COMMUN ACM, V52, P97, DOI 10.1145/1467247.1467271
   Gutierrez DR, 2014, AM J NEURORADIOL, V35, P1009, DOI 10.3174/ajnr.A3784
   Han FF, 2015, J DIGIT IMAGING, V28, P99, DOI 10.1007/s10278-014-9718-8
   HARALICK RM, 1973, IEEE T SYST MAN CYB, VSMC3, P610, DOI 10.1109/TSMC.1973.4309314
   Heinonen T, 2009, IFMBE PROC, V25, P274, DOI 10.1007/978-3-642-03879-2_77
   Kassner A, 2010, AM J NEURORADIOL, V31, P809, DOI 10.3174/ajnr.A2061
   Kimmel R, 1996, J MATH IMAGING VIS, V6, P223, DOI 10.1007/BF00119840
   Kontchakov R, 2007, HANDBOOK OF SPATIAL LOGICS, P497, DOI 10.1007/978-1-4020-5587-4_9
   Kutz O., 2003, ACM Transactions on Computational Logic, V4, P260, DOI 10.1145/635499.635504
   Lemieux L, 1999, MAGN RESON MED, V42, P127, DOI 10.1002/(SICI)1522-2594(199907)42:1<127::AID-MRM17>3.0.CO;2-O
   Li CX, 2015, AIDS RES HUM RETROV, V31, P335, DOI 10.1089/aid.2014.0166
   Lopes R, 2011, MED PHYS, V38, P83, DOI 10.1118/1.3521470
   Madabhushi A, 2006, MED PHYS, V33, P3426, DOI 10.1118/1.2335487
   Maurer CR, 2003, IEEE T PATTERN ANAL, V25, P265, DOI 10.1109/TPAMI.2003.1177156
   Mazzara GP, 2004, INT J RADIAT ONCOL, V59, P300, DOI 10.1016/j.ijrobp.2004.01.026
   Menze BH, 2015, IEEE T MED IMAGING, V34, P1993, DOI 10.1109/TMI.2014.2377694
   Meshgi K, 2015, 2015 14TH IAPR INTERNATIONAL CONFERENCE ON MACHINE VISION APPLICATIONS (MVA), P475, DOI 10.1109/MVA.2015.7153234
   Mohan G, 2018, BIOMED SIGNAL PROCES, V39, P139, DOI 10.1016/j.bspc.2017.07.007
   Nenzi L, 2018, LOG METH COMPUT SCI, V14, DOI 10.23638/LMCS-14(4:2)2018
   Nenzi L, 2015, LECT NOTES COMPUT SC, V9333, P21, DOI 10.1007/978-3-319-23820-3_2
   Pârvu O, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0154847
   REIF J, 1985, J COMPUT SYST SCI, V30, P41, DOI 10.1016/0022-0000(85)90003-0
   Rengier F, 2010, INT J COMPUT ASS RAD, V5, P335, DOI 10.1007/s11548-010-0476-x
   Sharma N, 2008, J MED PHYS, V33, P119, DOI 10.4103/0971-6203.42763
   Sheremet M, 2010, ANN PURE APPL LOGIC, V161, P534, DOI 10.1016/j.apal.2009.04.001
   Simi VR, 2015, EGYPT J RADIOL NUC M, V46, P1105, DOI 10.1016/j.ejrnm.2015.08.001
   Srinivasan G.N., 2012, P WORLD AC SCI ENG T, V36, P1264
   Sundstrom A, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0153623
   Thorup M, 1999, J ACM, V46, P362, DOI 10.1145/316542.316548
   Tijms BM, 2012, CEREB CORTEX, V22, P1530, DOI 10.1093/cercor/bhr221
   Toosy AT, 2003, J NEUROL NEUROSUR PS, V74, P1250, DOI 10.1136/jnnp.74.9.1250
   van Benthem J, 2007, HANDBOOK OF SPATIAL LOGICS, P217, DOI 10.1007/978-1-4020-5587-4_5
   Woods BJ, 2007, J MAGN RESON IMAGING, V25, P495, DOI 10.1002/jmri.20837
   Zhu Y, 2012, ACAD RADIOL, V19, P977, DOI 10.1016/j.acra.2012.03.026
NR 79
TC 17
Z9 17
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2020
VL 22
IS 2
SI SI
BP 195
EP 217
DI 10.1007/s10009-019-00511-9
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KX0GO
UT WOS:000521561800007
OA Bronze
DA 2024-07-18
ER

PT J
AU Pedro, AD
   Pinto, JS
   Pereira, D
   Pinho, LM
AF Pedro, Andre de Matos
   Pinto, Jorge Sousa
   Pereira, David
   Pinho, Luis Miguel
TI Runtime verification of autopilot systems using a fragment of MTL-
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT Joint 21st International Workshop on Formal Methods for Industrial
   Critical Systems (FMICS) / 16th International Workshop on Automated
   Verification of Critical Systems (AVoCS)
CY SEP 26-28, 2016
CL Pisa, ITALY
SP European Res Consortium Informat & Math, Formal Methods Europe, Springer Intl Publishing AG
DE Runtime verification; Metric temporal logic; Durations; Resource model;
   Hard real time system; Polynomial inequality
AB Current real-time embedded systems development frameworks lack support for the verification of properties using explicit time where counting time (i.e., durations) may play an important role in the development process. Focusing on the real-time constraints inherent to these systems, we present a framework that addresses the specification of duration properties for runtime verification by employing a fragment of metric temporal logic with durations. We also provide an overview of the framework, the synthesis tools, and the library to support monitoring properties for real-time systems developed in C++11. The results obtained provide clear evidence of the feasibility and advantages of employing a duration-sensitive formalism to increase the dependability of avionic controller systems such as the PX4 and the Ardupilot flight stacks.
C1 [Pedro, Andre de Matos; Pereira, David; Pinho, Luis Miguel] Polytech Inst Porto, CISTER, INESC TEC, ISEP, Porto, Portugal.
   [Pinto, Jorge Sousa] INESC TEC, HASLab, Braga, Portugal.
   [Pinto, Jorge Sousa] Univ Minho, Braga, Portugal.
C3 INESC TEC; Instituto Politecnico do Porto; INESC TEC; Universidade do
   Minho
RP Pedro, AD (corresponding author), Polytech Inst Porto, CISTER, INESC TEC, ISEP, Porto, Portugal.
EM anmap@isep.ipp.pt; jsp@di.uminho.pt; dmrpe@isep.ipp.pt; lmp@isep.ipp.pt
RI Pinto, Jorge Sousa/P-4312-2019; Pinto, Jorge S/B-9851-2008; Pereira,
   David/X-6401-2019; Pinho, Luis Miguel/M-3416-2013; de Matos Pedro,
   André/B-3717-2019
OI Pinto, Jorge Sousa/0000-0002-0892-3577; Pereira,
   David/0000-0002-7561-6649; de Matos Pedro, André/0000-0001-9452-0995
CR [Anonymous], 2000, Proceedings of the 11th International Conference on Concurrency Theory, CONCUR 00
   [Anonymous], 2001, Cambridge Tracts in Theoretical Computer Science
   [Anonymous], 2015, ACM SIGBED REV
   Barringer H., 2007, RULE SYSTEMS RUN TIM
   Bauer A., 2013, PROPOSITIONAL 1 ORDE
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Bouyer P, 2010, INFORM COMPUT, V208, P97, DOI 10.1016/j.ic.2009.10.004
   Chen Y.-S., 2005, P 20 ACM S APPL COMP, P897
   Cimatti A, 2009, LECT NOTES COMPUT SC, V5643, P188, DOI 10.1007/978-3-642-02658-4_17
   Clarke EM, 1999, MODEL CHECKING, P1
   Collins GE, 1976, SIGSAM B, V10, P10, DOI [10.1145/1093390.1093393, DOI 10.1145/1093390.1093393]
   Coombes M., 2012, 2012 UKACC International Conference on Control (CONTROL), P292, DOI 10.1109/CONTROL.2012.6334645
   Decker Normann., 2014, Tools and Algorithms for the Construction and Analysis of Systems, P341, DOI DOI 10.1007/978-3-642-54862-8
   Harrison J, 2009, Handbook of Practical Logic and Automated Reasoning
   Hunter P., IEEE COMPUTER SOC, P349
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   LAKHNECHE Y, 1995, THEOR COMPUT SCI, V138, P169, DOI 10.1016/0304-3975(94)00151-8
   LIU JWS, 1994, P IEEE, V82, P83, DOI 10.1109/5.259428
   Meier L, 2015, IEEE INT CONF ROBOT, P6235, DOI 10.1109/ICRA.2015.7140074
   Mizotani K., 2015, P 30 INT C COMP THEI, P63
   Mueller MW, 2014, IEEE INT CONF ROBOT, P45, DOI 10.1109/ICRA.2014.6906588
   Navabpour S., 2015, RV
   Nelissen Geoffrey, 2015, Reliable Software Technologies - Ada-Europe 2015. 20th Ada-Europe International Conference on Reliable Software Technologies. Proceedings: LNCS 9111, P66, DOI 10.1007/978-3-319-19584-1_5
   Nutt G, 2007, NUTTX REAL TIME OPER
   Ouaknine J, 2008, LECT NOTES COMPUT SC, V5215, P1, DOI 10.1007/978-3-540-85778-5_1
   Pedro A. M., 2016, VERSION 0 1 ALPHA
   Pedro A. M., 2016, USE CASE 1 USE CASE
   Pedro AD, 2015, LECT NOTES COMPUT SC, V9333, P169, DOI 10.1007/978-3-319-23820-3_11
   Pike L., RV 10, P345
   Pike L, 2007, FMCAD 2007: FORMAL METHODS IN COMPUTER AIDED DESIGN, PROCEEDINGS, P231
   Platzer A, 2008, LECT NOTES COMPUT SC, V5123, P176
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Ranjbaran M, 2010, IEEE DECIS CONTR P, P4385, DOI 10.1109/CDC.2010.5718140
   Sammapun U, 2005, 11TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P147, DOI 10.1109/RTCSA.2005.84
   Schumann J, 2015, LECT NOTES COMPUT SC, V9333, P233, DOI 10.1007/978-3-319-23820-3_15
   Shin I, 2003, RTSS 2003: 24TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P2, DOI 10.1109/REAL.2003.1253249
   The OCaml Development Team, 2013, OC PROGR LANG
NR 37
TC 2
Z9 3
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2018
VL 20
IS 4
SI SI
BP 379
EP 395
DI 10.1007/s10009-017-0470-5
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GL5XP
UT WOS:000437248300003
DA 2024-07-18
ER

PT J
AU Huisman, M
   Klebanov, V
   Monahan, R
   Tautschnig, M
AF Huisman, Marieke
   Klebanov, Vladimir
   Monahan, Rosemary
   Tautschnig, Michael
TI VerifyThis 2015 A program verification competition
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Deductive verification; Program Verification; Tools; Competition;
   VerifyThis
AB VerifyThis 2015 was a one-day program verification competition which took place on April 12th, 2015 in London, UK, as part of the European Joint Conferences on Theory and Practice of Software (ETAPS 2015). It was the fourth instalment in the VerifyThis competition series. This article provides an overview of the VerifyThis 2015 event, the challenges that were posed during the competition, and a high-level overview of the solutions to these challenges. It concludes with the results of the competition and some ideas and thoughts for future instalments of VerifyThis.
C1 [Huisman, Marieke] Univ Twente, Enschede, Netherlands.
   [Klebanov, Vladimir] Karlsruhe Inst Technol, Karlsruhe, Germany.
   [Monahan, Rosemary] Maynooth Univ, Maynooth, Kildare, Ireland.
   [Tautschnig, Michael] Queen Mary Univ London, London, England.
C3 University of Twente; Helmholtz Association; Karlsruhe Institute of
   Technology; Maynooth University; University of London; Queen Mary
   University London
RP Huisman, M (corresponding author), Univ Twente, Enschede, Netherlands.
EM m.huisman@utwente.nl; klebanov@kit.edu; Rosemary.Monahan@nuim.ie;
   michael.tautschnig@qmul.ac.uk
OI Monahan, Rosemary/0000-0003-3886-4675; Huisman,
   Marieke/0000-0003-4467-072X
FU Formal Methods Europe; Galois, Inc.; Microsoft Research
FX The organisers would like to thank Wojciech Mostowski and Radu Grigore
   for their feedback and support prior to the competition. The organisers
   also thank the competition's sponsors: Formal Methods Europe, Galois,
   Inc., and Microsoft Research. Their contributions helped us to support
   participants with travel grants, and to finance the various prizes.
CR Ahrendt Wolfgang, 2014, Verified Software: Theories, Tools and Experiments. 6th International Conference, VSTTE 2014. Revised Selected Papers: LNCS 8471, P55, DOI 10.1007/978-3-319-12154-3_4
   Beyer Dirk, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P401, DOI 10.1007/978-3-662-46681-0_31
   Blom S, 2014, LECT NOTES COMPUT SC, V8442, P127, DOI 10.1007/978-3-319-06410-9_9
   Bormer T., 2011, INT C FORMAL VERIFIC, P3, DOI 10.1007/978-3-642-31762-0_2
   Cranen S, 2013, LECT NOTES COMPUT SC, V7795, P199, DOI 10.1007/978-3-642-36742-7_15
   Ernst G, 2015, INT J SOFTW TOOLS TE, V17, P677, DOI 10.1007/s10009-014-0308-3
   Filliatre J.- C., 2012, CEUR WORKSHOP P, V873
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   HITOTUMATU H, 1979, INFORM PROCESS LETT, V8, P174, DOI 10.1016/0020-0190(79)90016-4
   Howar F, 2014, INT J SOFTW TOOLS TE, V16, P457, DOI 10.1007/s10009-014-0337-y
   Huisman M., 2012, CEUR WORKSHOP P, V873
   Huisman M, 2015, INT J SOFTW TOOLS TE, V17, P647, DOI 10.1007/s10009-015-0396-8
   Kirchner F, 2015, FORM ASP COMPUT, V27, P573, DOI 10.1007/s00165-014-0326-7
   Klebanov V., 2012, CEUR WORKSHOP P, V873
   Klebanov V., 2011, LNCS, V6664, P154, DOI [10.1007/978-3-642-21437-0_14, DOI 10.1007/978-3-642-21437-0_14]
   Knuth Donald E., 2000, ARXIVCS0011047
   Kobayashi N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P222
   Kroening Daniel, 2014, TOOLS ALGORITHMS CON, P389, DOI [10.1007/978-3-642-54862-8_26, DOI 10.1007/978-3-642-54862-8_26]
   Penninckx W, 2015, LECT NOTES COMPUT SC, V9032, P158, DOI 10.1007/978-3-662-46669-8_7
   Polikarpova N, 2014, LECT NOTES COMPUT SC, V8442, P514, DOI 10.1007/978-3-319-06410-9_35
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Sedjelmaci SM, 2008, J DISCRET ALGORITHMS, V6, P526, DOI 10.1016/j.jda.2006.12.009
   Swamy N, 2013, J FUNCT PROGRAM, V23, P402, DOI 10.1017/S0956796813000142
   Tschannen Julian, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P566, DOI 10.1007/978-3-662-46681-0_53
NR 24
TC 4
Z9 5
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2017
VL 19
IS 6
BP 763
EP 771
DI 10.1007/s10009-016-0438-x
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ4TL
UT WOS:000412735100007
OA hybrid
DA 2024-07-18
ER

PT J
AU Abdulla, P
   Haziza, F
   Holík, L
   Jonsson, B
   Rezine, A
AF Abdulla, Parosh Aziz
   Haziza, Frederic
   Holik, Lukas
   Jonsson, Bengt
   Rezine, Ahmed
TI An integrated specification and verification technique for highly
   concurrent data structures for highly concurrent data structures
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Verification; Pointer programs; Explicit memory allocation; Queue;
   Stack; Unbounded; Concurrency; Specification; Linearizability
ID VERIFYING LINEARIZABILITY; FORMAL VERIFICATION; MODEL CHECKING;
   ABSTRACTION; IMPLEMENTATIONS; ALGORITHM; PROGRAMS
AB We present a technique for automatically verifying safety properties of concurrent programs, in particular programs that rely on subtle dependencies of local states of different threads, such as lock-free implementations of stacks and queues in an environment without garbage collection. Our technique addresses the joint challenges of infinite-state specifications, an unbounded number of threads, and an unbounded heap managed by explicit memory allocation. Our technique builds on the automata-theoretic approach to model checking, in which a specification is given by an automaton that observes the execution of a program and accepts executions that violate the intended specification. We extend this approach by allowing specifications to be given by a class of infinite-state automata. We show how such automata can be used to specify queues, stacks, and other data structures, by extending a data-independence argument. For verification, we develop a shape analysis, which tracks correlations between pairs of threads, and a novel abstraction to make the analysis practical. We have implemented our method and used it to verify programs, some of which have not been verified by any other automatic method before.
C1 [Abdulla, Parosh Aziz; Haziza, Frederic; Holik, Lukas; Jonsson, Bengt] Uppsala Univ, Uppsala, Sweden.
   [Holik, Lukas] Brno Univ Technol, Brno, Czech Republic.
   [Rezine, Ahmed] Linkoping Univ, Linkoping, Sweden.
C3 Uppsala University; Brno University of Technology; Linkoping University
RP Rezine, A (corresponding author), Linkoping Univ, Linkoping, Sweden.
EM ahmed.rezine@liu.se
OI Holik, Lukas/0000-0001-6957-1651
FU Uppsala Programming for Multicore Architectures Research Center
   (UPMARC); Czech Science Foundation [13-37876P]; Brno University of
   Technology [FIT-S-12-1, FIT-S-14-2486]; CENIIT research organization at
   Linkoping [12.04]
FX F. Haziza and L. Holik were in part supported by the Uppsala Programming
   for Multicore Architectures Research Center (UPMARC). L. Holik was in
   part supported by the Czech Science Foundation (project 13-37876P), the
   internal projects of Brno University of Technology FIT-S-12-1 and
   FIT-S-14-2486. A. Rezine was in part supported by the CENIIT research
   organization at Linkoping (project 12.04).
CR Abdulla Parosh Aziz, 2012, International Journal on Software Tools for Technology Transfer, V14, P223, DOI 10.1007/s10009-011-0212-z
   Abdulla PA, 2013, LECT NOTES COMPUT SC, V7737, P476
   Abdulla PA, 2013, LECT NOTES COMPUT SC, V7795, P324, DOI 10.1007/978-3-642-36742-7_23
   Amit D, 2007, LECT NOTES COMPUT SC, V4590, P477
   Berdine J, 2008, LECT NOTES COMPUT SC, V5123, P399
   Bingham J, 2006, LECT NOTES COMPUT SC, V3855, P207
   Burckhardt S, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P330, DOI 10.1145/1806596.1806634
   Cerny P, 2010, LECT NOTES COMPUT SC, V6174, P465, DOI 10.1007/978-3-642-14295-6_41
   Colvin R, 2006, LECT NOTES COMPUT SC, V4144, P475, DOI 10.1007/11817963_44
   DILL D, 1989, LNCS, V407
   Doherty S, 2004, LECT NOTES COMPUT SC, V3235, P97
   Doherty Simon, 2004, SPAA 2004, P216, DOI [10.1145/1007912.1007945, DOI 10.1145/1007912.1007945]
   Elmas T, 2010, LECT NOTES COMPUT SC, V6015, P296, DOI 10.1007/978-3-642-12002-2_25
   Emmi M, 2009, LECT NOTES COMPUT SC, V5505, P352, DOI 10.1007/978-3-642-00768-2_30
   Flanagan C, 2008, SCI COMPUT PROGRAM, V71, P89, DOI 10.1016/j.scico.2007.12.001
   Habermehl P., 2012, FORM METHOD SYST DES, P1
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   IBM, 1983, SYST 370 PRINC OP
   Kidd Nicholas, 2011, International Journal on Software Tools for Technology Transfer, V13, P495, DOI 10.1007/s10009-011-0197-7
   Michael M., 1995, TR599 U ROCH
   Michael M. M., 1996, Proceedings of the Fifteenth Annual ACM Symposium on Principles of Distributed Computing, P267, DOI 10.1145/248052.248106
   Michael Maged M., 2002, P 21 ANN S PRINC DIS, P21, DOI [10.1145/571825.571829, DOI 10.1145/571825.571829]
   Naik M, 2006, ACM SIGPLAN NOTICES, V41, P308, DOI 10.1145/1133981.1134018
   Naik M, 2009, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2009.5070538
   Segalov M, 2009, LECT NOTES COMPUT SC, V5904, P30, DOI 10.1007/978-3-642-10672-9_5
   Shacham O, 2012, THESIS
   Treiber R.K., 1986, parallelism. Technical Systems programming: Coping with Report RJ 5118
   Vafeiadis V, 2010, LECT NOTES COMPUT SC, V6174, P450, DOI 10.1007/978-3-642-14295-6_40
   Vafeiadis V, 2010, LECT NOTES COMPUT SC, V5944, P345, DOI 10.1007/978-3-642-11319-2_25
   Vafeiadis V, 2009, LECT NOTES COMPUT SC, V5403, P335, DOI 10.1007/978-3-540-93900-9_27
   Vardi M. Y., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P332
   Vechev M, 2009, LECT NOTES COMPUT SC, V5578, P261, DOI 10.1007/978-3-642-02652-2_21
   Vechev M, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P125, DOI 10.1145/1375581.1375598
   WANG L, 2005, PPOPP 05, P61
   Wolper Pierre., 1986, POPL, V86, P184
   YAHAV E, 2003, ELECT NOTES THEOR CO, V89
NR 36
TC 6
Z9 6
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2017
VL 19
IS 5
BP 549
EP 563
DI 10.1007/s10009-016-0415-4
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FF8VL
UT WOS:000409295800004
DA 2024-07-18
ER

PT J
AU Katz, G
   Peled, D
AF Katz, Gal
   Peled, Doron
TI Synthesizing, correcting and improving code, using model checking-based
   genetic programming
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Genetic programming; Model checking; Synthesis
ID ALGORITHM; SOFTWARE
AB We show here how the use of genetic programming in combination of model checking provides a powerful way to synthesize programs. Whereas classical algorithmic synthesis provides alarming high complexity and undecidability results, the genetic approach provides a surprisingly successful heuristics. We describe several versions of a method for synthesizing sequential and concurrent systems. We show several examples where we used our approach to synthesize, improve and correct code.
C1 [Katz, Gal; Peled, Doron] Bar Ilan Univ, Dept Comp Sci, IL-52900 Ramat Gan, Israel.
C3 Bar Ilan University
RP Peled, D (corresponding author), Bar Ilan Univ, Dept Comp Sci, IL-52900 Ramat Gan, Israel.
EM doron.peled@gmail.com
FU ISF [1262/09]
FX The research of the 2nd author was supported in part by ISF grant
   1262/09 "Synthesis of programs using combination of verification and
   genetic programming.
CR [Anonymous], P 31 IEEE S FDN COMP
   [Anonymous], 1990, HDB THEORETICAL COMP
   [Anonymous], 1989, C RECORD 16 ANN ACM, DOI DOI 10.1145/75277.75293
   APT KR, 1986, INFORM PROCESS LETT, V22, P307, DOI 10.1016/0020-0190(86)90071-2
   BANZHAF W, 2001, GENETIC PROGRAMMING
   BARDAVID Y, 2003, P S PRINC DISTR COMP, P305
   Burke DS, 1998, EVOL COMPUT, V6, P387, DOI 10.1162/evco.1998.6.4.387
   BURNS JE, 1993, INFORM COMPUT, V107, P171, DOI 10.1006/inco.1993.1065
   CHANG E, 1979, COMMUN ACM, V22, P281, DOI 10.1145/359104.359108
   Chellapilla K., 1997, IEEE Transactions on Evolutionary Computation, V1, P209, DOI 10.1109/4235.661552
   Clarke E. M., 1999, International Journal on Software Tools for Technology Transfer, V2, P279, DOI 10.1007/s100090050035
   Clarke Edmund M., 2001, Model Checking
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   COURCOUBETIS C, 1995, J ASSOC COMPUT MACH, V42, P857, DOI 10.1145/210332.210339
   Couvreur JM, 2003, LECT NOTES ARTIF INT, V2850, P361, DOI 10.1007/978-3-540-39813-4_26
   DIJKSTRA EW, 1965, COMMUN ACM, V8, P569, DOI 10.1145/365559.365617
   DOLEV D, 1982, J ALGORITHM, V3, P245, DOI 10.1016/0196-6774(82)90023-2
   EMERSON EA, 1995, POPL, P85
   Fearnley John, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P208, DOI 10.1007/978-3-642-33386-6_18
   Gerth R., 1995, INT C PROTOCOL SPECI, P3
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P905, DOI 10.1016/S0950-5849(01)00196-3
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Holland I.H., 1975, ADAPTATION NATURAL A
   Johnson CG, 2007, LECT NOTES COMPUT SC, V4445, P114
   Katz C, 2008, LECT NOTES COMPUT SC, V4963, P141, DOI 10.1007/978-3-540-78800-3_11
   Katz G., 2010, CODE MUTATION VERIFI, P435
   Katz G., 2009, SYNTHESIZING SOLUTIO
   Katz G, 2010, LECT NOTES COMPUT SC, V6252, P359
   Katz G, 2008, LECT NOTES COMPUT SC, V5311, P33, DOI 10.1007/978-3-540-88387-6_5
   Katz Gal., 2009, HAIFA VERIFICATION C, P117, DOI DOI 10.1007/978-3-642-19237-1_13
   KESSELS JLW, 1982, ACTA INFORM, V17, P135, DOI 10.1007/BF00288966
   Koza J.R., 1992, GENETIC PROGRAMMING, VVolume 1
   Koza JR, 2010, GENET PROGRAM EVOL M, V11, P251, DOI 10.1007/s10710-010-9112-3
   Kupferman O, 2001, IEEE S LOG, P389, DOI 10.1109/LICS.2001.932514
   Kupferman O, 2001, FORM METHOD SYST DES, V19, P291, DOI 10.1023/A:1011254632723
   Langdon WB, 2015, IEEE T EVOLUT COMPUT, V19, P118, DOI 10.1109/TEVC.2013.2281544
   Lehmann D., 1981, Automata, Languages and Programming. Eighth Colloquium, P264
   Lichtenstein O., 1985, P 12 ACM SIGACT SIGP, P97, DOI DOI 10.1145/318593.318622
   MANNA Z, 1984, ACM T PROGR LANG SYS, V6, P68, DOI 10.1145/357233.357237
   Manna Z., 1983, P S PRINCIPLES PROGR, P141, DOI [10.1145/567067.567082, DOI 10.1145/567067.567082]
   Montana DJ, 1995, EVOL COMPUT, V3, P199, DOI 10.1162/evco.1995.3.2.199
   Niebert P, 2008, LECT NOTES COMPUT SC, V5123, P504
   Pérez JA, 2004, CONCURR COMP-PRACT E, V16, P1173, DOI 10.1002/cpe.903
   PETERSON F, 1977, STOC
   PETERSON GL, 1982, ACM T PROGR LANG SYS, V4, P758, DOI 10.1145/69622.357194
   Poli R., 2008, A Field Guide to Genetic Programming
   Safra S., 1988, 29th Annual Symposium on Foundations of Computer Science (IEEE Cat. No.88CH2652-6), P319, DOI 10.1109/SFCS.1988.21948
   Schwefel H.-P.P., 1993, Evolution and Optimum Seeking: The Sixth Generation
   Tsay YK, 1998, LECT NOTES COMPUT SC, V1499, P393, DOI 10.1007/BFb0056497
   Vardi M. Y., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P332
   Vardi M. Y., 1999, Formal Methods for Real-Time and Probabilistic Systems. 5th International AMAST Workshop, ARTS'99. Proceedings, P265
   Zuck L, 2004, COMPUT LANG SYST STR, V30, P139, DOI 10.1016/j.cl.2004.02.006
NR 53
TC 7
Z9 7
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2017
VL 19
IS 4
BP 449
EP 464
DI 10.1007/s10009-016-0418-1
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ5UW
UT WOS:000404785500005
DA 2024-07-18
ER

PT J
AU Abdulla, P
   Haziza, F
   Holík, L
AF Abdulla, Parosh
   Haziza, Frederic
   Holik, Lukas
TI Parameterized verification through view abstraction
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Parameterized systems; Safety; Small model properties; View abstraction
ID THREAD-MODULAR VERIFICATION; REGULAR MODEL CHECKING; EFFICIENT
   VERIFICATION; SYSTEMS; TRANSDUCERS; PROGRAMS; ENLARGE; EXPAND; WSTS;
   WELL
AB We present a simple and efficient framework for automatic verification of systems with a parametric number of communicating processes. The processes may be organized in various topologies such as words, multisets, rings, or trees. Our method needs to inspect only a small number of processes in order to show correctness of the whole system. It relies on an abstraction function that views the system from the perspective of a fixed number of processes. The abstraction is used during the verification procedure in order to dynamically detect cut-off points beyond which the search of the state space need not continue. We show that the method is complete for a large class of well quasi-ordered systems including Petri nets. Our experimentation on a variety of benchmarks demonstrate that the method is highly efficient and that it works well even for classes of systems with undecidable verification problems. In particular, the method handles the fine-grained and full version of Szymanski's mutual exclusion protocol, whose correctness, to the best of our knowledge, has not been proven automatically by any other existing methods.
C1 [Abdulla, Parosh; Haziza, Frederic] Uppsala Univ, Uppsala, Sweden.
   [Holik, Lukas] Brno Univ Technol, Brno, Czech Republic.
C3 Uppsala University; Brno University of Technology
RP Haziza, F (corresponding author), Uppsala Univ, Uppsala, Sweden.
EM frederic.haziza@it.uu.se
OI Holik, Lukas/0000-0001-6957-1651
FU Uppsala Programming for Multicore Architectures Research Center
   (UPMARC); Czech Science Foundation [13-37876P]
FX P. Abdulla and F. Haziza: supported in part by the Uppsala Programming
   for Multicore Architectures Research Center (UPMARC). L. Holik:
   supported by the Czech Science Foundation (project 13-37876P).
CR Abdulla P., 1993, Proceedings of Eighth Annual IEEE Symposium on Logic in Computer Science (Cat. No.93CH3328-2), P160, DOI 10.1109/LICS.1993.287591
   Abdulla P., 1996, LICS, P313
   Abdulla PA, 2000, INFORM COMPUT, V160, P109, DOI 10.1006/inco.1999.2843
   ABDULLA PA, 2002, LECT NOTES COMPUTER, V2421, P116
   Abdulla PA, 2008, LECT NOTES COMPUT SC, V4905, P22, DOI 10.1007/978-3-540-78163-9_7
   Abdulla PA, 2007, LECT NOTES COMPUT SC, V4424, P721
   Abdulla PA, 2014, LECT NOTES COMPUT SC, V8723, P1, DOI 10.1007/978-3-319-10936-7_1
   Abdulla PA, 2013, LECT NOTES COMPUT SC, V7737, P476
   Abdulla PA, 2013, LECT NOTES COMPUT SC, V7795, P324, DOI 10.1007/978-3-642-36742-7_23
   Abdulla PA, 2010, B SYMB LOG, V16, P457, DOI 10.2178/bsl/1294171129
   Abdulla PA, 2009, LECT NOTES COMPUT SC, V5522, P41, DOI 10.1007/978-3-642-02138-1_3
   Alberti F., 2014, P 29 IT C COMP LOG C, V1195, P303
   Arons T, 2001, LECT NOTES COMPUT SC, V2102, P221
   Ball T., 2003, International Journal on Software Tools for Technology Transfer, V5, P49, DOI 10.1007/s10009-002-0095-0
   BAUKUS K, 2002, LNCS, V2294, P317
   Bingham J, 2005, LECT NOTES COMPUT SC, V3440, P77
   Boigelot B, 2003, LECT NOTES COMPUT SC, V2725, P223
   Bouajjani A, 2004, LECT NOTES COMPUT SC, V3114, P372
   Clarke E, 2006, LECT NOTES COMPUT SC, V3855, P126
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   DAMS D, 2001, LNCS, V2102
   Delzanno G, 2000, LECT NOTES COMPUT SC, V1785, P426
   Delzanno G., 2001, SOFTWARE TOOLS TECHN
   Delzanno G., 2000, Computer Aided Verification, V1855, P53
   Delzanno G., 2000, FORTE 2000, V183, P171
   Emerson EA, 2000, LECT NOTES ARTIF INT, V1831, P236
   EMERSON EA, 1995, POPL, P85
   Esparza J., 1999, LICS 99
   Flanagan C, 2003, LECT NOTES COMPUT SC, V2648, P213
   Ganty P, 2006, LECT NOTES COMPUT SC, V3855, P49
   Ganty Pierre, 2007, 570 U LIBR BRUX
   Geeraerts G, 2006, J COMPUT SYST SCI, V72, P180, DOI 10.1016/j.jcss.2005.09.001
   Geeraerts G, 2005, LECT NOTES COMPUT SC, V3576, P394
   GERMAN SM, 1992, J ACM, V39, P675, DOI 10.1145/146637.146681
   Ghilardi S, 2008, LECT NOTES ARTIF INT, V5195, P67, DOI 10.1007/978-3-540-71070-7_6
   Haziza F., 2013, EXPT PARAMETERIZED V
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   IEEE Computer Society, 1996, 13941995 IEEE COMP S
   Kaiser A, 2010, LECT NOTES COMPUT SC, V6174, P645
   Kesten Y, 2001, THEOR COMPUT SCI, V256, P93, DOI 10.1016/S0304-3975(00)00103-1
   Lynch N.A., 1993, MITLCSRSS20
   Malkis A, 2007, LECT NOTES COMPUT SC, V4634, P218
   Malkis A, 2006, LECT NOTES COMPUT SC, V4281, P183
   Namjoshi KS, 2007, LECT NOTES COMPUT SC, V4349, P299
   Pnueli A., 2002, LNCS, V2404
   Pnueli A., 2001, LNCS, V2031, P82
   QUEILLE JP, 1982, P 5 C INT S PROGR, P337
   Szymanski B. K., 1990, Proceedings of the 5th Jerusalem Conference on Information Technology (JCIT). Next Decade in Information Technology (Cat. No.90TH0326-9), P110, DOI 10.1109/JCIT.1990.128275
   Vojnar T., 1993, COMMUNICATION
   [No title captured]
   [No title captured]
NR 51
TC 27
Z9 29
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2016
VL 18
IS 5
BP 495
EP 516
DI 10.1007/s10009-015-0406-x
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU1ZY
UT WOS:000382011100003
DA 2024-07-18
ER

PT J
AU Jensen, JF
   Larsen, KG
   Srba, J
   Oestergaard, LK
AF Jensen, Jonas Finnemann
   Larsen, Kim Guldstrand
   Srba, Jiri
   Oestergaard, Lars Kaerlund
TI Efficient model-checking of weighted CTL with upper-bound constraints
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 20th International SPIN Symposium on Model Checking of Software
CY JUL 08-09, 2013
CL Stony Brook, NY
SP SPIN
DE Weighted CTL; Weighted automata; Model checking; On-the-fly methods
ID ALGORITHMS; AUTOMATA
AB We present a symbolic extension of dependency graphs by Liu and Smolka in to model-check weighted Kripke structures against the computation tree logic with upper-bound weight constraints. Our extension introduces a new type of edges into dependency graphs and lifts the computation of fixed-points from boolean domain to nonnegative integers to cope with the weights. We present both global and local algorithms for the fixed-point computation on symbolic dependency graphs and argue for the advantages of our approach compared to the direct encoding of the model-checking problem into dependency graphs. We implement all algorithms in a publicly available tool and evaluate them on several experiments. The principal conclusion is that our local algorithm is the most efficient one with an order of magnitude improvement for model checking problems with a high number of "witnesses".
C1 [Jensen, Jonas Finnemann; Larsen, Kim Guldstrand; Srba, Jiri; Oestergaard, Lars Kaerlund] Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
C3 Aalborg University
RP Srba, J (corresponding author), Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
EM jopsen@gmail.com; kgl@cs.aau.dk; srba@cs.aau.dk; larsko@gmail.com
OI Guldstrand Larsen, Kim/0000-0002-5953-3384; Srba,
   Jiri/0000-0001-5551-6547
CR ALUR R, 1990, LECT NOTES COMPUT SC, V443, P322, DOI 10.1007/BFb0032042
   ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   Alur R, 2004, THEOR COMPUT SCI, V318, P297, DOI 10.1016/j.tcs.2003.10.038
   ANDERSEN HR, 1994, THEOR COMPUT SCI, V126, P3, DOI 10.1016/0304-3975(94)90266-6
   [Anonymous], 1980, LNCS
   BARTLETT KA, 1969, COMMUN ACM, V12, P260, DOI 10.1145/362946.362970
   Behrmann G., 2001, Hybrid Systems: Computation and Control. 4th International Workshop, HSCC 2001. Proceedings (Lecture Notes in Computer Science Vol.2034), P147
   Bouyer P, 2008, LOG METH COMPUT SCI, V4, DOI 10.2168/LMCS-4(2:9)2008
   Brihaye T, 2004, LECT NOTES COMPUT SC, V3253, P277
   Buchholz P, 2010, DISCRETE EVENT DYN S, V20, P103, DOI 10.1007/s10626-008-0057-0
   Cassez F, 2005, LECT NOTES COMPUT SC, V3653, P66, DOI 10.1007/11539452_9
   CHANG E, 1979, COMMUN ACM, V22, P281, DOI 10.1145/359104.359108
   Droste M, 2009, MONOGR THEOR COMPUT, P1, DOI 10.1007/978-3-642-01492-5
   Droste M, 2007, THEOR COMPUT SCI, V380, P69, DOI 10.1016/j.tcs.2007.02.055
   Kasahara Laboratory at Waseda University, STAND TASK GRAPH SET
   Knaster B., 1928, Ann. Soc. Polon. Math., V6, P133
   Kwok YK, 1999, J PARALLEL DISTR COM, V59, P381, DOI 10.1006/jpdc.1999.1578
   Laroussinie F, 2006, LECT NOTES COMPUT SC, V4202, P245
   Liu XX, 1998, LECT NOTES COMPUT SC, V1384, P5
   Liu XX, 1998, LECT NOTES COMPUT SC, V1443, P53
   Martello Silvano, 1990, Knapsack Problems: Algorithms and Computer Implementations
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
NR 23
TC 11
Z9 11
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2016
VL 18
IS 4
BP 409
EP 426
DI 10.1007/s10009-014-0359-5
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DR2AV
UT WOS:000379708300005
DA 2024-07-18
ER

PT J
AU Faria, JP
   Paiva, ACR
AF Faria, Joao Pascoal
   Paiva, Ana C. R.
TI A toolset for conformance testing against UML sequence diagrams based on
   event-driven colored Petri nets
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Sequence diagrams; Conformance testing; Petri nets
ID SEMANTICS; SOFTWARE
AB Novel techniques and a toolset are presented for automatically testing the conformance of software implementations against partial behavioral models constituted by a set of parameterized UML sequence diagrams, describing both external interactions with users or client applications and internal interactions between objects in the system. Test code is automatically generated from the sequence diagrams and executed on the implementation under test, and test results and coverage information are presented back visually in the model. A runtime test library handles internal interaction checking, test stubs, and user interaction testing, taking advantage of aspect-oriented programming techniques. Incremental conformance checking is achieved by first translating sequence diagrams to Extended Petri Nets that combine the characteristics of Colored Petri Nets and Event-Driven Petri Nets.
C1 [Faria, Joao Pascoal; Paiva, Ana C. R.] Univ Porto, Fac Engn, INESC TEC, Rua Campo Alegre 823, P-4100 Oporto, Portugal.
   [Faria, Joao Pascoal; Paiva, Ana C. R.] Univ Porto, Fac Engn, Dept Informat Engn, Rua Campo Alegre 823, P-4100 Oporto, Portugal.
C3 INESC TEC; Universidade do Porto; Universidade do Porto
RP Paiva, ACR (corresponding author), Univ Porto, Fac Engn, INESC TEC, Rua Campo Alegre 823, P-4100 Oporto, Portugal.; Paiva, ACR (corresponding author), Univ Porto, Fac Engn, Dept Informat Engn, Rua Campo Alegre 823, P-4100 Oporto, Portugal.
EM jpf@fe.up.pt; apaiva@fe.up.pt
RI Paiva, Ana/B-1136-2014; Faria, Joao/B-5496-2012
OI Paiva, Ana/0000-0003-3431-8060; Faria, Joao/0000-0003-3825-3954
CR Ambler S., 2014, EFFECTIVE PRACTICES
   [Anonymous], 2008, E INFORM
   [Anonymous], 2007, J SOFTW TOOLS TECHNO
   Benattou M., 2002, ECOOP WORKSH INT TRA
   Boroday S, 2009, LECT NOTES COMPUT SC, V5826, P49, DOI 10.1007/978-3-642-05031-2_4
   Bouabana-Tebibel T, 2013, INFORM SCIENCES, V232, P276, DOI 10.1016/j.ins.2012.12.024
   Briand LC, 2006, IEEE T SOFTWARE ENG, V32, P642, DOI 10.1109/TSE.2006.96
   Castro M. V., 2013, THESIS FEUP
   Engels G, 2007, LECT NOTES COMPUT SC, V4364, P182
   Faria Joao Pascoal, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P180, DOI 10.1007/978-3-642-41707-8_12
   Faria JP, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P245, DOI 10.1109/QUATIC.2012.57
   FERNANDES JM, 2007, SCESM 07
   Gamma Erich., 1994, DESIGN PATTERNS
   Hallal HH, 2006, FORM ASP COMPUT, V18, P63, DOI 10.1007/s00165-005-0082-8
   Harel D, 2008, SOFTW SYST MODEL, V7, P237, DOI 10.1007/s10270-007-0054-z
   IBM Rational Rhapsody, 2013, IBM RAT RHAPS AUT TE
   Javed A., 2007, 2 INT WORKSH AUT SOF
   Jorgensen P.C., 2009, MODELING SOFTWARE BE, P137
   Kansomkeat S, 2008, PROCEEDINGS OF NINTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING, P867, DOI 10.1109/SNPD.2008.48
   Knapp A, 2007, LECT NOTES COMPUT SC, V4364, P42
   Legeard B., 2007, PRACTICAL MODEL BASE
   Leonhardt T., 2002, P 17 IEEE INT C AUT
   Mellor S.J., 2003, IEEE SOFTW MAG, V20, P1418
   Micskei Z, 2011, SOFTW SYST MODEL, V10, P489, DOI 10.1007/s10270-010-0157-9
   Nayak A, 2010, J OBJECT TECHNOL, V9, P115, DOI 10.5381/jot.2010.9.2.a2
   OMG, 2011, OMG UN MOD LANG OMG
   Paiva A.C.R., 2013, TRSDBT201304 FEUP
   Samuel P, 2008, PROCEEDINGS OF NINTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING, P879, DOI 10.1109/SNPD.2008.100
   STOTTS PD, 1994, J SYST SOFTWARE, V27, P27, DOI 10.1016/0164-1212(94)90112-0
   Wittevrongel J., 2007, 2 INT WORKSH AUT SOF
NR 30
TC 7
Z9 9
U1 2
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2016
VL 18
IS 3
BP 285
EP 304
DI 10.1007/s10009-014-0354-x
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK5QH
UT WOS:000374974200004
DA 2024-07-18
ER

PT J
AU Song, F
   Touili, T
AF Song, Fu
   Touili, Tayssir
TI Pushdown model checking for malware detection
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 18th International Conference on Tools and Algorithms for the
   Construction and Analysis of Systems (TACAS)
CY MAR 24-APR 01, 2012
CL Tallinn, ESTONIA
DE Pushdown Systems; Model Checking; CTL; Malware Detection
AB The number of malware is growing extraordinarily fast. Therefore, it is important to have efficient malware detectors. Malware writers try to obfuscate their code by different techniques. Many well-known obfuscation techniques rely on operations on the stack such as inserting dead code by adding useless push and pop instructions, or hiding calls to the operating system, etc. Thus, it is important for malware detectors to be able to deal with the program's stack. In this study, we propose a new model-checking approach for malware detection that takes into account the behavior of the stack. Our approach consists in: (1) Modeling the program using a pushdown system (PDS). (2) Introducing a new logic, called stack computation tree predicate logic (SCTPL), to represent the malicious behavior. SCTPL can be seen as an extension of the branching-time temporal logic CTL with variables, quantifiers, and predicates over the stack. (3) Reducing the malware detection problem to the model-checking problem of PDSs against SCTPL formulas. We show how our new logic can be used to precisely express malicious behaviors that could not be specified by existing specification formalisms. We then consider the model checking problem of PDSs against SCTPL specifications. We reduce this problem to emptiness checking in Symbolic Alternating Buchi Pushdown Systems, and we provide an algorithm to solve this problem. We implemented our techniques in a tool and applied it to detect several viruses. Our results are encouraging.
C1 [Song, Fu] E China Normal Univ, Shanghai Key Lab Trustworthy Comp, Shanghai 200062, Peoples R China.
   [Touili, Tayssir] CNRS, Liafa, F-75205 Paris 13, France.
   [Touili, Tayssir] Univ Paris Diderot, F-75205 Paris 13, France.
C3 East China Normal University; Universite Paris Cite; Centre National de
   la Recherche Scientifique (CNRS); Universite Paris Cite
RP Song, F (corresponding author), E China Normal Univ, Shanghai Key Lab Trustworthy Comp, Shanghai 200062, Peoples R China.
EM fsong@sei.ecnu.edu.cn; touili@liafa.univ-paris-diderot.fr
CR [Anonymous], 2011, COMPUTER AIDED VERIF
   Balakrishnan G, 2005, LECT NOTES COMPUT SC, V3443, P250, DOI 10.1007/978-3-540-31985-6_19
   Balakrishnan G, 2005, LECT NOTES COMPUT SC, V3576, P158
   Bergeron J., 2001, Proc. Int.'l Symp. Requirements Engineering for Information Security, P1
   Bonfante G, 2009, J COMPUT VIROL HACKI, V5, P263, DOI 10.1007/s11416-008-0102-4
   BOUAJJANI A, 1997, LNCS, V1243
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   Christodorescu M, 2005, P IEEE S SECUR PRIV, P32, DOI 10.1109/SP.2005.20
   Christodorescu M, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P169
   Christodorescu Mihai, 2008, 1st India Software Engineering Conference. ISEC 2008, P5
   Eric S., 2010, 10 MOST DESTRUCTIVE
   Esparza J, 2003, INFORM COMPUT, V186, P355, DOI 10.1016/S0890-5401(03)00139-1
   Esparza J, 2001, LECT NOTES COMPUT SC, V2102, P324
   Gostev A., 2011, KASPERSKY SECURITY B
   Hex-Rays, 2011, IDAPRO
   Holzer A, 2007, LECT NOTES COMPUT SC, V4739, P497
   Kinder J, 2005, LECT NOTES COMPUT SC, V3548, P174
   Kinder J, 2008, LECT NOTES COMPUT SC, V5123, P423
   Kinder J, 2010, IEEE T DEPEND SECURE, V7, P424, DOI 10.1109/TDSC.2008.74
   Lakhotia A, 2005, IEEE T SOFTWARE ENG, V31, P955, DOI 10.1109/TSE.2005.120
   Lakhotia A, 2010, PEPM '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P131, DOI 10.1145/1706356.1706381
   Singh PK, 2003, IEEE SYSTEMS, MAN AND CYBERNETICS SOCIETY INFORMATION ASSURANCE WORKSHOP, P298, DOI 10.1109/SMCSIA.2003.1232440
   Song F, 2011, CONCUR
   Song F, 2012, LECT NOTES COMPUT SC, V7214, P110, DOI 10.1007/978-3-642-28756-5_9
   Suwimonteerabuth D, 2006, LECT NOTES COMPUT SC, V4218, P141
   Uezato Y., 2013, ATVA 13 IN PRESS
NR 26
TC 23
Z9 24
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2014
VL 16
IS 2
BP 147
EP 173
DI 10.1007/s10009-013-0290-1
PG 27
WC Computer Science, Software Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HR
UT WOS:000209673000003
DA 2024-07-18
ER

PT J
AU Razavi, N
   Farzan, A
   McIlraith, SA
AF Razavi, Niloofar
   Farzan, Azadeh
   McIlraith, Sheila A.
TI Generating effective tests for concurrent programs via AI automated
   planning techniques
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Concurrent programs; Testing; AI planning
ID DYNAMIC ATOMICITY CHECKER; EFFICIENT; FF
AB Testing concurrent programs is a challenging problem due to interleaving explosion: even for a fixed set of inputs, there is a huge number of concurrent runs that need to be tested to account for scheduler behavior. Testing all possible schedules is not practical. Consequently, most effective testing algorithms only test a select subset of runs. For example, limiting testing to runs that contain data races or atomicity violations has been shown to capture a large proportion of concurrency bugs. In this paper we present a general approach to concurrent program testing that is based on techniques from artificial intelligence (AI) automated planning. We propose a framework for predicting concurrent program runs that violate a collection of generic correctness specifications for concurrent programs, namely runs that contain data races, atomicity violations, or null-pointer dereferences. Our prediction is based on observing an arbitrary run of the program, and using information collected from this run to model the behavior of the program, and to predict new runs that contain bugs with one of the above noted violation patterns. We characterize the problem of predicting such new runs as an AI sequential planning problem with the temporally extended goal of achieving a particular violation pattern. In contrast to many state-of-the-art approaches, in our approach feasibility of the predicted runs is guaranteed and, therefore, all generated runs are fully usable for testing. Moreover, our planning-based approach has the merit that it can easily accommodate a variety of violation patterns which serve as the selection criteria for guiding search in the state space of concurrent runs. This is achieved by simply modifying the planning goal. We have implemented our approach using state-of-the-art AI planning techniques and tested it within the Penelope concurrent program testing framework [35]. Nevertheless, the approach is general and is amenable to a variety of program testing frameworks. Our experiments with a benchmark suite showed that our approach is very fast and highly effective, finding all known bugs.
C1 [Razavi, Niloofar; Farzan, Azadeh; McIlraith, Sheila A.] Univ Toronto, Dept Comp Sci, Toronto, ON, Canada.
C3 University of Toronto
RP Razavi, N (corresponding author), Univ Toronto, Dept Comp Sci, Toronto, ON, Canada.
EM razavi@cs.toronto.edu; azadeh@cs.toronto.edu; sheila@cs.toronto.edu
CR Baier J. A., 2006, P 21 NATL C ARTIFICI, P788
   Chen F, 2007, LECT NOTES COMPUT SC, V4590, P240
   Chen F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P221, DOI 10.1145/1368088.1368119
   Christiaens M., 2001, JVM 01, P15
   DINNING A, 1990, SIGPLAN NOTICES, V25, P1, DOI 10.1145/99164.99165
   Farzan Azadeh, 2012, P ACM SIGSOFT 20 INT, P47, DOI [10.1145/2393596.2393651, DOI 10.1145/2393596.2393651]
   Flanagan C, 2004, ACM SIGPLAN NOTICES, V39, P256, DOI 10.1145/982962.964023
   Flanagan C, 2008, ACM SIGPLAN NOTICES, V43, P293, DOI 10.1145/1379022.1375618
   Flanagan C, 2010, COMMUN ACM, V53, P93, DOI 10.1145/1839676.1839699
   Gerevini AE, 2009, ARTIF INTELL, V173, P619, DOI 10.1016/j.artint.2008.10.012
   Gregory Peter, 2012, Proceedings of the International Conference on Automated Planning and Scheduling, V22, P65, DOI DOI 10.1609/ICAPS.V22I1.13505
   Groce A., 2002, Software Engineering Notes, V27, P12, DOI 10.1145/566171.566175
   Haslum P., 2011, 5 SCHED PLANN APPL W, P37
   Hoffmann J, 2003, J ARTIF INTELL RES, V20, P291, DOI 10.1613/jair.1144
   Hoffmann J, 2001, AI MAG, V22, P57
   Hoffmann J, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1918
   Kautz H, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P318
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Liqiang Wang, 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P137, DOI 10.1145/1122971.1122993
   Marino D, 2009, ACM SIGPLAN NOTICES, V44, P134, DOI 10.1145/1543135.1542491
   McDermott Drew V., 1998, TR98003DCSTR1165 YAL
   Musuvathi M, 2007, LECT NOTES COMPUT SC, V4407, P15, DOI 10.1007/978-3-540-71410-1_2
   Nau D, 2004, AUTOMATED PLANNING T
   O'Callahan R., 2003, SIGPLAN Notices, V38, P166, DOI 10.1145/966049.781528
   Park C.-S., 2008, FSE, P135
   Park S, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1508284.1508249
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Pozniansky E, 2007, CONCURR COMP-PRACT E, V19, P327, DOI 10.1002/cpe.1064
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Rintanen Jussi., 2011, P 25 AAAI C ARTIFICI, P1563
   Said M, 2011, LECT NOTES COMPUT SC, V6617, P313, DOI 10.1007/978-3-642-20398-5_23
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Serbanuta T., 2012, LECT NOTES COMPUTER
   Sinha N, 2010, PROCEEDINGS OF THE ASME TURBO EXPO 2010, VOL 1, P47
   Sinha N, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P423, DOI 10.1145/1926385.1926433
   Sorrentino Francesco, 2010, P 18 ACM SIGSOFT INT, P37, DOI DOI 10.1145/1882291.1882300
   von Praun C, 2001, ACM SIGPLAN NOTICES, V36, P70, DOI 10.1145/504311.504288
   Wang C, 2010, LECT NOTES COMPUT SC, V6015, P328, DOI 10.1007/978-3-642-12002-2_27
   Wang LQ, 2006, IEEE T SOFTWARE ENG, V32, P93, DOI 10.1109/TSE.2006.1599419
   Yi J., 2009, P 7 WORKSH PAR DISTR
   Yu Y., 2005, P 20 ACM S OP SYST P, P221
NR 41
TC 5
Z9 6
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2014
VL 16
IS 1
BP 49
EP 65
DI 10.1007/s10009-013-0277-y
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HQ
UT WOS:000209672900004
DA 2024-07-18
ER

PT J
AU Kosinska, J
   Broton, G
   Tobiasz, M
AF Kosinska, Joanna
   Broton, Grzegorz
   Tobiasz, Maciej
TI Knowledge representation of the state of a cloud-native application
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Cloud-native; Cluster computing; Knowledge representation; Microservice;
   Semantic computing; Ontology
AB Cloud Computing has revolutionized the way applications are developed, deployed, and maintained. Over the past decade, we have observed dynamically growing interest in Cloud Computing. The benefits of the cloud approach caused the increasing popularity of Cloud-native applications. Cloud-native is an approach to developing and deploying applications according to the concepts of DevOps, Continuous Integration/Continuous Delivery (CI/CD), containers and microservices. The knowledge about Cloud Computing has become extensive and complex. Fortunately, before Cloud-native applications development, there was a great deal of effort to develop tools for effective knowledge representation. Ontologies are a convenient way to show the relations between domain-specific concepts. In this paper, we propose an ontology named CNOnt that describes the state-of-the-art of Cloud-native applications. CNOnt covers aspects from the clusterization perspective. First, this paper presents the engineering perspective of building the CNOnt ontology. Second, we demonstrate a use case of our ontology that proves the correctness of CNOnt development. This ontology is exhausted in CNOnt Broker. It is a system that applies the information in the OWL file into the Kubernetes cluster and in reverse. The knowledge representation makes Cloud-native applications understandable to third-party systems and increases interoperability between different microservices.
C1 [Kosinska, Joanna; Broton, Grzegorz; Tobiasz, Maciej] AGH Univ Sci & Technol, Inst Comp Sci, Fac Comp Sci Elect & Telecommun, Al A Mickiewicza 30, PL-30059 Krakow, Poland.
C3 AGH University of Krakow
RP Kosinska, J (corresponding author), AGH Univ Sci & Technol, Inst Comp Sci, Fac Comp Sci Elect & Telecommun, Al A Mickiewicza 30, PL-30059 Krakow, Poland.
EM kosinska@agh.edu.pl; gbroton@student.agh.edu.pl;
   mtobiasz@student.agh.edu.pl
OI Kosinska, Joanna/0000-0001-6037-9970
FU Polish Ministry of Science and Higher Education; PLGrid infrastructure
FX The research presented in this paper was supported by funds assigned to
   AGH University of Science and Technology by the Polish Ministry of
   Science and Higher Education. This research was supported in part by
   PLGrid infrastructure.
CR 12factor, 12 FACTOR APP
   Abul Bashar M, 2018, DATA MIN KNOWL DISC, V32, P849, DOI 10.1007/s10618-018-0556-z
   Achilleos AP, 2019, J CLOUD COMPUT-ADV S, V8, DOI 10.1186/s13677-019-0138-7
   Al-Ruithe Majid, 2019, Personal and Ubiquitous Computing, V23, P839, DOI 10.1007/s00779-017-1104-3
   Alreshidi A, 2019, FUTURE INTERNET, V11, DOI 10.3390/fi11070153
   [Anonymous], 2011, Distributed and Cloud Computing: From Parallel Processing to the Internet of Things
   Armbrust, 2009, UCBEECS200928, V53, P50
   Bergmayr A, 2014, IEEE INT CONF SERV, P137, DOI 10.1109/SOCA.2014.56
   Brunner S, 2015, INT CONF UTIL CLOUD, P488, DOI 10.1109/UCC.2015.87
   Cardoso J, 2006, SEMANTIC WEB BEYOND, V3, P3, DOI 10.1007/978-0-387-34685-4_1
   Chung A, 2018, PROCEEDINGS OF THE 2018 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '18), P121, DOI 10.1145/3267809.3267819
   Cloud Native Computing Foundation, US
   cncf, 2019 CNCF SURVEY RES
   code.google, UN CLOUD INT PROJ
   Currie A., 2017, CLOUD NATIVE ATTITUD
   Davies J., 2006, SEMANTIC WEB TECHNOL, DOI [10.1002/047003033X, DOI 10.1002/047003033X]
   Davis C., 2019, Cloud Native Patterns
   Deguchi A., 2020, Society, V5, P1, DOI [10.1007/978-981-15-2989-4_1, DOI 10.1007/978-981-15-2989-4_1, 10.1007/978-981-15-2989-4]
   devops, WORLD MEETS DEV
   Ding W, 2014, INFORM SOFTWARE TECH, V56, P545, DOI 10.1016/j.infsof.2014.01.008
   Docker, What is a Container?
   Dou DJ, 2015, IEEE INT C SEMANT CO, P244, DOI 10.1109/ICOSC.2015.7050814
   Edelstein E, 2020, NEW GENERAT COMPUT, V38, P397, DOI 10.1007/s00354-020-00087-y
   Eiter T, 2006, LECT NOTES COMPUT SC, V4126, P93
   Elçi A, 2020, EXPERT SYST, V37, DOI 10.1111/exsy.12518
   Fowler M., CONTINUOUS INTEGRATI
   Fowler M., 2013, Continuous Delivery
   Galante G, 2012, INT CONF UTIL CLOUD, P263, DOI 10.1109/UCC.2012.30
   Gannon D, 2017, IEEE CLOUD COMPUT, V4, P16, DOI 10.1109/MCC.2017.4250939
   github, CLOUD NAT LANDSC
   Goncalves G., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P399, DOI 10.1109/CloudCom.2011.60
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Hamdaqa Mohammad, 2016, 2016 IEEE 10th International Symposium on the Maintenance and Evolution of Service-Oriented and Cloud-Based Environments (MESOCA). Proceedings, P24, DOI 10.1109/MESOCA.2016.13
   Hamdaqa M., 2016, THESIS U WATERLOO ON
   Han J, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9060969
   Hernandez N, 2007, INFORM RETRIEVAL, V10, P143, DOI 10.1007/s10791-006-9018-0
   Ibryam Bilgin, 2019, Kubernetes Patterns
   Imam F.T., 2016, ARXIV
   Jamsa Kris., 2012, Cloud Computing, V1st
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kosinska J, 2020, J GRID COMPUT, V18, P779, DOI 10.1007/s10723-020-09532-0
   Koulopoulos T.M., 2012, Cloud Surfing: A New Way to Think About Risk, Innovation, Scale and Success
   Kratzke N., 2017, ARXIV
   Kratzke N, 2017, J SYST SOFTWARE, V126, P1, DOI 10.1016/j.jss.2017.01.001
   kubernetes, Production-Grade Container Orchestration
   Lu W, 2016, PERS UBIQUIT COMPUT, V20, P311, DOI 10.1007/s00779-016-0921-0
   Marks EricA., 2006, SERVICE ORIENTED ARC
   Martins J, 2008, LECT NOTES COMPUT SC, V5071, P153, DOI 10.1007/978-3-540-70504-8_14
   Mell P., 2011, The NIST definition of cloud computing, P20899
   microservices-demo.github, SOCK SHOP MICROSERVI
   Nandhini J.M., 2019, PERS UBIQUIT COMPUT
   Noy N., 2001, ONTOLOGY DEV
   oasis-open, OAS TOP ORCH SPEC CL
   Opara-Martins J, 2016, J CLOUD COMPUT-ADV S, V5, DOI 10.1186/s13677-016-0054-z
   pivotal, CLOUD NATIVE APPS
   protege.stanford, FREE OPEN SOURCE ONT
   Quinton C, 2013, P 2013 INT WORKSHOP, P21, DOI [10.1145/2462326.2462332, DOI 10.1145/2462326.2462332]
   Rajendran V., 2014, NOVEL APPROACH SEMAN, DOI [10.13140/2.1.4022.6085, DOI 10.13140/2.1.4022.6085]
   Rani D., 2014, Int. J. Adv. Res. Comput. Sci. Softw. Eng., V4
   reactjs, JAVASCRIPT LIB BUILD
   Rettinger A, 2012, DATA MIN KNOWL DISC, V24, P613, DOI 10.1007/s10618-012-0253-2
   Rockwell J., 1970, ASME DES ENG TECH C, V3, P671, DOI [10.1115/DETC2008-50086, DOI 10.1115/DETC2008-50086]
   Rudolph S., 2009, Foundations of Semantic Web Technologies, DOI [10.1201/9781420090512, DOI 10.1201/9781420090512]
   Stein M., 2015, MIGRATING CLOUD NATI
   Sundaram S. S., 2015, P 12 INT C NAT LANG, P394
   Sundaram SS, 2019, NEW GENERAT COMPUT, V37, P429, DOI 10.1007/s00354-019-00069-9
   technet.microsoft, ORCH TECHN MICR
   Thinakaran P, 2018, PROCEEDINGS OF THE 2018 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '18), P524, DOI 10.1145/3267809.3275466
   Toffetti G, 2017, FUTURE GENER COMP SY, V72, P165, DOI 10.1016/j.future.2016.09.002
   Uschold M., 2018, DEMYSTIFYING OWL ENT, DOI [10.2200/S00824ED1V01Y201801WBE017, DOI 10.2200/S00824ED1V01Y201801WBE017]
   Velasquez K, 2018, J INTERNET SERV APPL, V9, DOI 10.1186/s13174-018-0086-3
   Voorsluys W, 2009, LECT NOTES COMPUT SC, V5931, P254, DOI 10.1007/978-3-642-10665-1_23
   w3, OWL SEM WEB STAND WO
   w3, STRUCT SPEC FUNCT ST
   w3, OWL Web Ontology Language Reference
NR 75
TC 1
Z9 1
U1 4
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2024
VL 26
IS 1
BP 21
EP 32
DI 10.1007/s10009-023-00705-2
EA JUN 2023
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW1A5
UT WOS:001014509900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Badings, T
   Simao, TD
   Suilen, M
   Jansen, N
AF Badings, Thom
   Simao, Thiago D.
   Suilen, Marnix
   Jansen, Nils
TI Decision-making under uncertainty: beyond probabilities Challenges and
   perspectives
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Decision-making under uncertainty; Markov decision process; Partially
   observable Markov decision process; Formal abstractions; Reinforcement
   learning; Epistemic uncertainty; Aleatoric uncertainty
ID VALUE-ITERATION; ROBUST-CONTROL; DISCRETE-TIME; SYSTEMS; APPROXIMATION;
   OPTIMIZATION; VERIFICATION; SEARCH
AB This position paper reflects on the state-of-the-art in decision-making under uncertainty. A classical assumption is that probabilities can sufficiently capture all uncertainty in a system. In this paper, the focus is on the uncertainty that goes beyond this classical interpretation, particularly by employing a clear distinction between aleatoric and epistemic uncertainty. The paper features an overview of Markov decision processes (MDPs) and extensions to account for partial observability and adversarial behavior. These models sufficiently capture aleatoric uncertainty, but fail to account for epistemic uncertainty robustly. Consequently, we present a thorough overview of so-called uncertainty models that exhibit uncertainty in a more robust interpretation. We show several solution techniques for both discrete and continuous models, ranging from formal verification, over control-based abstractions, to reinforcement learning. As an integral part of this paper, we list and discuss several key challenges that arise when dealing with rich types of uncertainty in a model-based fashion.
C1 [Badings, Thom; Simao, Thiago D.; Suilen, Marnix; Jansen, Nils] Radboud Univ Nijmegen, Dept Software Sci, Nijmegen, Netherlands.
C3 Radboud University Nijmegen
RP Badings, T (corresponding author), Radboud Univ Nijmegen, Dept Software Sci, Nijmegen, Netherlands.
OI Jansen, Nils/0000-0003-1318-8973
FU ERC [101077178]; NWO [NWA.1160.18.238, OCENW.KLEIN.187]; European
   Research Council (ERC) [101077178] Funding Source: European Research
   Council (ERC)
FX This work was funded by the ERC Starting Grant 101077178(DEUCE), and the
   NWO grants NWA.1160.18.238 (PrimaVera)and OCENW.KLEIN.187 (Provably
   Correct Policies for UncertainPOMDPs).
CR Achiam J, 2017, PR MACH LEARN RES, V70
   Alegre Lucas N., 2021, P 20 INT C AUT AG MU, P97
   Alshiekh M, 2018, AAAI CONF ARTIF INTE, P2669
   ALTMAN E, 1999, STOCH MODEL SER, P1, DOI 10.1201/9781315140223
   Alur R, 2000, P IEEE, V88, P971, DOI 10.1109/5.871304
   Amato C, 2010, AUTON AGENT MULTI-AG, V21, P293, DOI 10.1007/s10458-009-9103-z
   Anderson B., 1990, OPTIMAL CONTROL LINE
   Andrés I, 2018, LECT NOTES ARTIF INT, V11238, P277, DOI 10.1007/978-3-030-03928-8_23
   [Anonymous], 2016, NIPS
   Antsaklis PJ., 2006, LINEAR SYSTEMS
   ARGOTE L, 1982, ADMIN SCI QUART, V27, P420, DOI 10.2307/2392320
   Arrowsmith D.K., 1990, An introduction to dynamical systems
   As Yarden, 2022, ARXIV220109802
   Ashok P, 2019, LECT NOTES COMPUT SC, V11561, P497, DOI 10.1007/978-3-030-25540-4_29
   Azizzadenesheli E., 2018, ITA, P1
   Badings T.S., 2023, AAAI
   Badings T, 2023, J ARTIF INTELL RES, V76, P341
   Badings T, 2023, Arxiv, DOI arXiv:2103.02398
   Badings T, 2022, INT J SOFTW TOOLS TE, V24, P803, DOI 10.1007/s10009-022-00673-z
   Badings TS, 2022, AAAI CONF ARTIF INTE, P9669
   Badings TS, 2022, Arxiv, DOI arXiv:2205.08300
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   BELLMAN R, 1966, SCIENCE, V153, P34, DOI 10.1126/science.153.3731.34
   Belta C, 2017, STUD SYST DECIS CONT, V89, P1, DOI 10.1007/978-3-319-50763-7
   BenTal A, 2009, PRINC SER APPL MATH, P1
   Bertsimas D, 2011, SIAM REV, V53, P464, DOI 10.1137/080734510
   Blondel VD, 2000, AUTOMATICA, V36, P1249, DOI 10.1016/S0005-1098(00)00050-9
   Boutilier C, 2000, ARTIF INTELL, V121, P49, DOI 10.1016/S0004-3702(00)00033-3
   Boyd S., 2004, CONVEX OPTIMIZATION
   Brin M., 2002, INTRO DYNAMICAL SYST, DOI DOI 10.1017/CBO9780511755316
   Bry Adam, 2011, IEEE International Conference on Robotics and Automation, P723
   Burns B, 2007, IEEE INT CONF ROBOT, P3313, DOI 10.1109/ROBOT.2007.363984
   Carr S., 2023, AAAI
   Carr S, 2021, J ARTIF INTELL RES, V72, P819
   Carr S, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5532
   Carr S, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4121
   Carr S, 2021, ROBOT SCI SYS
   Cauchi N, 2019, LECT NOTES COMPUT SC, V11428, P247, DOI 10.1007/978-3-030-17465-1_14
   Chades I., 2012, P AAAI C ARTIFICIAL, P267, DOI [10.1609/aaai.v26i1.8171, DOI 10.1609/AAAI.V26I1.8171]
   Chatterjee K., 2020, ICAPS, P48
   Chatterjee K, 2016, J COMPUT SYST SCI, V82, P878, DOI 10.1016/j.jcss.2016.02.009
   Chen M, 2016, IEEE INT CONF ROBOT, P5427, DOI 10.1109/ICRA.2016.7487754
   Chen T, 2013, LECT NOTES COMPUT SC, V7795, P185, DOI 10.1007/978-3-642-36742-7_13
   Cheung Wang Chi, 2020, P MACHINE LEARNING R, P1843
   Chow Y, 2018, J MACH LEARN RES, V18
   Clarke Edmund M., 2009, 2009 24th Annual IEEE Symposium on Logic In Computer Science (LICS), DOI 10.1109/LICS.2009.42
   Clarke E.M., 2016, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8_8
   Clements W.R., 2019, arXiv
   Coraluppi SP, 1999, AUTOMATICA, V35, P301, DOI 10.1016/S0005-1098(98)00153-8
   Cubuktepe M, 2021, AAAI CONF ARTIF INTE, V35, P11792
   Depeweg S., 2018, ICML, P1192
   Di Castro D., 2012, ICML
   Duff M. O., 2002, PhD Thesis
   Dulac-Arnold G, 2021, MACH LEARN, V110, P2419, DOI 10.1007/s10994-021-05961-4
   Emery-Montemerlo R., 2004, AAMAS, P136
   Eysenbach Benjamin, 2022, INT C LEARN REPR
   Fan CC, 2022, IEEE T AUTOMAT CONTR, V67, P1713, DOI 10.1109/TAC.2021.3069723
   Fisac JF, 2019, IEEE T AUTOMAT CONTR, V64, P2737, DOI 10.1109/TAC.2018.2876389
   Fox Craig R., 2011, Perspectives on thinking, judging, and decision making
   Gajane P, 2018, Arxiv, DOI arXiv:1805.10066
   Garatti S, 2018, Introduction to the Scenario Approach, DOI [10.1137/1.9781611975444, DOI 10.1137/1.9781611975444]
   García J, 2015, J MACH LEARN RES, V16, P1437
   Ghavamzadeh M, 2015, FOUND TRENDS MACH LE, V8, P360, DOI 10.1561/2200000049
   Girard A, 2007, IEEE T AUTOMAT CONTR, V52, P782, DOI 10.1109/TAC.2007.895849
   Givan R, 2000, ARTIF INTELL, V122, P71, DOI 10.1016/S0004-3702(00)00047-3
   Goodess CM., 2007, Built Environment, V33, P10, DOI DOI 10.2148/BENV.33.1.10
   Goyal V., 2020, ROBUST MARKOV DECISI
   Hansen EA, 1998, ADV NEUR IN, V10, P1015
   Hansen EA, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P709
   Hausknecht Matthew, 2015, AAAI fall Symp. Series
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Horak Karel, 2017, Decision and Game Theory for Security. 8th International Conference, GameSec 2017. Proceedings: LNCS 10575, P273, DOI 10.1007/978-3-319-68711-7_15
   Horák K, 2017, AAAI CONF ARTIF INTE, P558
   Hüllermeier E, 2021, MACH LEARN, V110, P457, DOI 10.1007/s10994-021-05946-3
   Itoh H, 2007, ARTIF INTELL, V171, P453, DOI 10.1016/j.artint.2007.03.004
   Jaeger Manfred, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Verification. Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12476), P275, DOI 10.1007/978-3-030-61362-4_15
   Jaksch T, 2010, J MACH LEARN RES, V11, P1563
   Jansen N., 2020, Safe reinforcement learning using probabilistic shields
   Jin Y., 2021, INT C MACH LEARN, P5084
   Johan Astrom K., 2021, FEEDBACK SYSTEMS INT
   Junges S, 2018, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, P519
   Kaelbling LP, 1998, ARTIF INTELL, V101, P99, DOI 10.1016/S0004-3702(98)00023-X
   Kalman R E., 1960, J BASIC ENG, V82, P35, DOI DOI 10.1115/1.3662552
   Kamran D, 2022, IEEE INT C INTELL TR, P4017, DOI 10.1109/ITSC55140.2022.9921907
   Katt S, 2019, AAMAS '19: PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS AND MULTIAGENT SYSTEMS, P7
   Kochenderfer MJ, 2015, MIT LINCOLN LAB, P1
   Kress-Gazit H, 2009, IEEE T ROBOT, V25, P1370, DOI 10.1109/TRO.2009.2030225
   Kumar A., 2009, FLAIRS C
   Kumar Aviral, 2020, NEURIPS
   Kwiatkowska M, 2020, LECT NOTES COMPUT SC, V12225, P475, DOI 10.1007/978-3-030-53291-8_25
   Lahijanian M, 2015, IEEE T AUTOMAT CONTR, V60, P2031, DOI 10.1109/TAC.2015.2398883
   Laroche R., 2019, P 36 INT C MACH LEAR
   Lathi B.P., 1998, Signal Processing and Linear Systems, ser. Oxford series in electrical and computer engineering
   Lavaei A., 2022, ARXIV, parXiv
   Lavaei A., 2021, arXiv
   Levine S, 2020, Arxiv, DOI arXiv:2005.01643
   Liu JS, 1998, J AM STAT ASSOC, V93, P1032, DOI 10.2307/2669847
   Madani O, 2003, ARTIF INTELL, V147, P5, DOI 10.1016/S0004-3702(02)00378-8
   Mallik K, 2019, IEEE T AUTOMAT CONTR, V64, P2629, DOI 10.1109/TAC.2018.2869740
   Mannor S, 2007, MANAGE SCI, V53, P308, DOI 10.1287/mnsc.1060.0614
   Meuleau N, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P417
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Modares H, 2022, Arxiv, DOI arXiv:2202.04495
   Moerland T M, 2020, arXiv
   Moos J, 2022, MACH LEARN KNOW EXTR, V4, P276, DOI 10.3390/make4010013
   Munos R, 2014, FOUND TRENDS MACH LE, V7, P1, DOI 10.1561/2200000038
   Nadjahi K., 2019, ECML PKDD, P53
   Nilim A, 2005, OPER RES, V53, P780, DOI 10.1287/opre.1050.0216
   Osogami T, 2015, PR MACH LEARN RES, V37, P106
   Panaganti K, 2022, Arxiv, DOI arXiv:2208.05129
   Park S, 2013, IEEE SIGNAL PROC MAG, V30, P183, DOI 10.1109/MSP.2013.2238691
   Pattanaik A, 2017, Arxiv, DOI [arXiv:1712.03632, 10.48550/ARXIV.1712.03632]
   Pineau J., 2003, P 18 INT JOINT C ART
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Ponnambalam C.T., 2021, ICAPS, P560
   Prentice S., 2007, Springer Tracts in Advanced Robotics, P293
   Puggelli Alberto, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P527, DOI 10.1007/978-3-642-39799-8_35
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   Raskin J., 2014, LIPIcs, P531
   Reissig G, 2017, IEEE T AUTOMAT CONTR, V62, P1781, DOI 10.1109/TAC.2016.2593947
   Rigter M, 2021, ADV NEUR IN, V34
   Rockafellar R, 2000, J RISK, V2, P21, DOI [DOI 10.21314/JOR.2000.038, 10.21314/JOR.2000.038]
   Ross Stephane, 2008, Uncertain Artif Intell, V2008, P476
   Ross Stephane, 2007, Advances in neural information processing systems, P1225
   Rostampour V, 2020, ENERGIES, V13, DOI 10.3390/en13246532
   Roy J., 2022, ICML, P18828
   Russel R.H., 2019, NEURIPS, P7047
   Russell S., 2016, Artificial intelligence a modern approach
   Sarkar P., 2003, TECHNOMETRICS, V45, P106, DOI [10.1198/tech.2003.s23, DOI 10.1198/TECH.2003.S23]
   Schulman J., 2016, ICLR POSTER
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Simao T. D., 2020, P 19 INT C AUTONOMOU
   Simao T.D., 2023, AAAI
   Simao TD, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3453
   Simao TD, 2019, AAAI CONF ARTIF INTE, P4967
   SMALLWOOD RD, 1973, OPER RES, V21, P1071, DOI 10.1287/opre.21.5.1071
   Smith R.-C., 2013, UNCERTAINTY QUANTIFI
   Sniazhko S, 2019, COGENT BUS MANAG, V6, DOI 10.1080/23311975.2019.1650692
   Soize Christian, 2017, UNCERTAINTY QUANTIFI, DOI DOI 10.1007/978-3-319-54339-0
   Soudjani SEZ, 2013, SIAM J APPL DYN SYST, V12, P921, DOI 10.1137/120871456
   Spaan MTJ, 2005, J ARTIF INTELL RES, V24, P195, DOI 10.1613/jair.1659
   Suilen M, 2022, Arxiv, DOI arXiv:2205.15827
   Suilen M, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4113
   Sullivan T. J., 2015, Introduction to uncertainty quantification
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Tabuada P., 2009, VERIFICATION CONTROL
   Tan KL, 2020, P AMER CONTR CONF, P3959, DOI [10.23919/acc45564.2020.9147846, 10.23919/ACC45564.2020.9147846]
   Tappler M, 2021, LECT NOTES COMPUT SC, V13085, P481, DOI 10.1007/978-3-030-92124-8_27
   Tappler M, 2021, FORM ASP COMPUT, V33, P575, DOI 10.1007/s00165-021-00536-5
   Thiebes S, 2021, ELECTRON MARK, V31, P447, DOI 10.1007/s12525-020-00441-4
   Thomas PS, 2015, PR MACH LEARN RES, V37, P2380
   Thrun S, 2002, COMMUN ACM, V45, P52, DOI 10.1145/504729.504754
   Trentelman H. L.., 2012, Control Theory for Linear Systems
   Uehara M., 2022, ICLR
   Urpi N.A., 2021, ICLR
   Vaandrager F, 2017, COMMUN ACM, V60, P85, DOI 10.1145/2967606
   Vlassis N, 2012, ACM T COMPUT THEORY, V4, DOI 10.1145/2382559.2382563
   Vlassis N, 2012, ADAPT LEARN OPTIM, V12, P359
   Walraven E, 2019, J ARTIF INTELL RES, V65, P307, DOI 10.1613/jair.1.11324
   Watkins C. J. C. H., 1989, Learning from Delayed Rewards
   Wiesemann W, 2014, OPER RES, V62, P1358, DOI 10.1287/opre.2014.1314
   Wolff EM, 2012, IEEE DECIS CONTR P, P3372, DOI 10.1109/CDC.2012.6426174
   Wooldridge M., 2020, The road to conscious machines, V1st
   Xu H, 2012, MATH OPER RES, V37, P288, DOI 10.1287/moor.1120.0540
   Yang Q., 2022, MACH LEARN, P1
   Yang QS, 2021, AAAI CONF ARTIF INTE, V35, P10639
   Zak S.H., 2003, SYSTEMS AND CONTROL
   Zhao XY, 2020, IEEE INT CONF AUTOM, P163, DOI 10.1145/3324884.3416565
NR 168
TC 3
Z9 3
U1 4
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2023
VL 25
IS 3
BP 375
EP 391
DI 10.1007/s10009-023-00704-3
EA MAY 2023
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S0IX8
UT WOS:000998184400004
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Khmelnitsky, I
   Neider, D
   Roy, R
   Xie, X
   Barbot, B
   Bollig, B
   Finkel, A
   Haddad, S
   Leucker, M
   Ye, LN
AF Khmelnitsky, Igor
   Neider, Daniel
   Roy, Rajarshi
   Xie, Xuan
   Barbot, Benoit
   Bollig, Benedikt
   Finkel, Alain
   Haddad, Serge
   Leucker, Martin
   Ye, Lina
TI Analysis of recurrent neural networks via property-directed verification
   of surrogate models
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Explainable AI; Neural network verification; Active learning
ID CHECKING
AB This paper presents a property-directed approach to verifying recurrent neural networks (RNNs). To this end, we learn a deterministic finite automaton as a surrogate model from a given RNN using active automata learning. This model may then be analyzed using model checking as a verification technique. The term property-directed reflects the idea that our procedure is guided and controlled by the given property rather than performing the two steps separately. We show that this not only allows us to discover small counterexamples fast, but also to generalize them by pumping toward faulty flows hinting at the underlying error in the RNN. We also show that our method can be efficiently used for adversarial robustness certification of RNNs.
C1 [Khmelnitsky, Igor; Bollig, Benedikt; Finkel, Alain; Haddad, Serge; Ye, Lina] Univ Paris Saclay, LMF, ENS Paris Saclay, CNRS, Gif Sur Yvette, France.
   [Khmelnitsky, Igor; Haddad, Serge; Ye, Lina] INRIA, Paris, France.
   [Roy, Rajarshi] Max Planck Inst Software Syst, Kaiserslautern, Germany.
   [Barbot, Benoit] Univ Paris Est Creteil, Creteil, France.
   [Leucker, Martin] Univ Lubeck, Inst Software Engn & Programming Languages, Lubeck, Germany.
   [Ye, Lina] Univ Paris Saclay, Cent Supelec, Gif Sur Yvette, France.
   [Finkel, Alain] Inst Univ France, Paris, France.
   [Neider, Daniel] Carl von Ossietzky Univ Oldenburg, Safety & Explainabil Learning Syst Grp, Oldenburg, Germany.
   [Xie, Xuan] Univ Alberta, Edmonton, AB, Canada.
C3 Centre National de la Recherche Scientifique (CNRS); Universite Paris
   Saclay; Universite Paris Cite; Inria; Max Planck Society; Universite
   Paris-Est-Creteil-Val-de-Marne (UPEC); University of Lubeck; Universite
   Paris Saclay; Universite Paris Cite; Institut Universitaire de France;
   Carl von Ossietzky Universitat Oldenburg; University of Alberta
RP Leucker, M (corresponding author), Univ Lubeck, Inst Software Engn & Programming Languages, Lubeck, Germany.
EM leucker@isp.uni-luebeck.de
RI Neider, Daniel/ADV-0056-2022
OI Neider, Daniel/0000-0001-9276-6342; Xie, Xuan/0000-0003-3981-8515;
   Barbot, Benoit/0000-0003-2417-3064
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Aichernig BK, 2020, LECT NOTES COMPUT SC, V12165, P3, DOI 10.1007/978-3-030-50995-8_1
   Akintunde ME, 2022, AUTON AGENT MULTI-AG, V36, DOI 10.1007/s10458-021-09529-3
   Akintunde ME, 2019, AAAI CONF ARTIF INTE, P6006
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   Ayache Stephane, 2018, P MACHINE LEARNING R, V93, P81
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Barbot B, 2021, PR MACH LEARN RES, V153, P113
   BENGIO Y, 1995, NEURAL COMPUT, V7, P1289, DOI 10.1162/neco.1995.7.6.1289
   Bernardi O, 2012, ALGORITHMICA, V62, P130, DOI 10.1007/s00453-010-9446-5
   Bollig B, 2014, LOG METH COMPUT SCI, V10, DOI 10.2168/LMCS-10(4:19)2014
   Cho K., 2014, ARXIV14061078
   Clarke E., 2000, Computer Aided Verification, P154
   De Giacomo G, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P1558
   Decker Normann, 2014, Application and Theory of Petri Nets and Concurrency. 35th International Conference, PETRI NETS 2014. Proceedings: LNCS 8489, P130, DOI 10.1007/978-3-319-07734-5_8
   Du XN, 2020, IEEE INT CONF AUTOM, P423, DOI 10.1145/3324884.3416564
   Elboher YY, 2020, LECT NOTES COMPUT SC, V12224, P43, DOI 10.1007/978-3-030-53288-8_3
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Holme P, 2014, ENCY SOCIAL NETWORK, P2119
   Howar Falk, 2019, Computing and Software Science: State of the Art and Perspectives. Lecture Notes in Computer Science (LNCS 10000), P563, DOI 10.1007/978-3-319-91908-9_26
   Isberner M, 2014, LECT NOTES COMPUT SC, V8734, P307, DOI 10.1007/978-3-319-11164-3_26
   Jacoby Y., 2020, ARXIV
   Karna AK, 2018, FRONT COMPUT SCI-CHI, V12, P642, DOI 10.1007/s11704-016-6192-0
   Kearns M. J., 1994, An Introduction to Computational Learning Theory
   Keck C., 2002, CENGAGE LEARNING
   Khmelnitsky I, 2021, LECT NOTES COMPUT SC, V12971, P364, DOI 10.1007/978-3-030-88885-5_24
   Kwiatkowska M.Z., 2019, LIPIcs, V140
   Legay Axel, 2019, Computing and software science: state of the art and perspectives, P478
   Leucker Martin, 2020, Formal Methods: Foundations and Applications. 23rd Brazilian Symposium, SBMF 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12475), P3, DOI 10.1007/978-3-030-63882-5_1
   Lippmann RP, 1989, NEURAL COMPUT, V1, P1, DOI 10.1162/neco.1989.1.1.1
   Liu B, 2015, SENTIMENT ANALYSIS: MINING OPINIONS, SENTIMENTS, AND EMOTIONS, P1
   Mayr Franz, 2020, Machine Learning and Knowledge Extraction. 4th IFIP TC 5, TC 12, WG 8.4, WG 8.9, WG 12.9. International Cross-Domain Conference, CD-MAKE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12279), P343, DOI 10.1007/978-3-030-57321-8_19
   Mayr F, 2021, MACH LEARN KNOW EXTR, V3, P205, DOI 10.3390/make3010010
   Mayr F, 2018, LECT NOTES COMPUT SC, V11015, P350, DOI 10.1007/978-3-319-99740-7_25
   Merten M., 2013, THESIS DORTMUND U TE
   Okudono T, 2020, AAAI CONF ARTIF INTE, V34, P5306
   Omlin CW, 1996, NEURAL NETWORKS, V9, P41, DOI 10.1016/0893-6080(95)00086-0
   Peled D, 1999, INT FED INFO PROC, V28, P225
   RIVEST RL, 1993, INFORM COMPUT, V103, P299, DOI 10.1006/inco.1993.1021
   Ryou W., 2020, ARXIV
   Schulz K. U., 2002, International Journal on Document Analysis and Recognition, V5, P67, DOI 10.1007/s10032-002-0082-8
   Vaandrager F, 2017, COMMUN ACM, V60, P85, DOI 10.1145/2967606
   Valiant L. G., 1984, Communications of the ACM, V27, P1134, DOI 10.1145/1968.1972
   Weiss G, 2018, PR MACH LEARN RES, V80
NR 44
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2023
VL 25
IS 3
BP 341
EP 354
DI 10.1007/s10009-022-00684-w
EA NOV 2022
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S0IX8
UT WOS:000884606600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Mohammed, MA
   Hassine, J
   Alshayeb, M
AF Mohammed, Mawal A.
   Hassine, Jameleddine
   Alshayeb, Mohammad
TI GSDetector: a tool for automatic detection of bad smells in GRL goal
   models
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Bad smells; Goal models; GRL; GSDetector
ID DEFECT DETECTION; CODE-SMELLS; REQUIREMENTS; QUALITY; FRAMEWORK;
   IDENTIFICATION; IMPACT; RULES
AB Goal models play a significant role in the early stages of the requirements engineering process. These models are subject to quality problems (a.k.a., bad smells) that may disseminate to the later stages of the requirements engineering process and even to the other stages in software development. To avoid this negative impact, it is important to detect and correct these problems as early as possible. However, the manual detection of these smells is generally tedious, cumbersome, and error-prone. In this paper, we report on an Eclipse plugin tool, called GSDetector (GRL Smells Detector), that automates the detection of Goal-oriented Requirements Language (GRL) bad smells. We first introduce and articulate four new GRL-based bad smells. To detect the instances of these smells, a set of metric-based rules is introduced. Factors that affect setting thresholds are also presented and explained to help modelers specify these rules by setting effective thresholds. GSDetector was evaluated using 5 case studies of different sizes that consider the different scenarios in building GRL models. The obtained results show that GSDetector was able to detect all the existing instances of bad smells with respect to the specified thresholds. The manual inspection of these instances revealed that the modelers were giving the system to be developed more attention than the strategic needs of the stakeholder leading to the appearance of these instances. In conclusion, the proposed bad smells and developed tool provide a useful approach to help identify and analyze quality improvement opportunities in GRL models.
C1 [Mohammed, Mawal A.; Hassine, Jameleddine; Alshayeb, Mohammad] King Fand Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Alshayeb, M (corresponding author), King Fand Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
EM g201102570@kfupm.edu.sa; jhassine@kfupm.edu.sa; alshayeb@kfupm.edu.sa
RI Alshayeb, Mohammad/B-5941-2015; Mohammed, Mawal/IAO-6654-2023; Hassine,
   Jameleddine/E-5940-2015
OI Moahmmed, Mawal/0000-0003-4419-1454
FU King Fahd University of Petroleum and Minerals
FX The authors acknowledge the support of King Fahd University of Petroleum
   and Minerals in the development of this work.
CR AbuHassan A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2320
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Alkharabsheh Khalid, 2016, International Journal of Advanced Studies in Computer Science and Engineering, V5, P120
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Alqmase M, 2019, J COMPUT SCI TECH-CH, V34, P1063, DOI 10.1007/s11390-019-1960-6
   Amyot D., 2011, iStar, V766, P160
   [Anonymous], 2011, P 2011 C CTR ADV STU
   [Anonymous], 2018, 151 US REQ NOT URN L
   [Anonymous], 2009, P 24 ACM SIGPLAN C C
   [Anonymous], 2006, ECL SUMM EUR ECL MOD
   Arcelli D, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P639, DOI [10.1109/saner.2019.8667967, 10.1109/SANER.2019.8667967]
   Arendt T., 2011, SYNTACTICAL MODEL QU
   Asano K, 2017, LECT NOTES COMPUT SC, V10651, P122, DOI 10.1007/978-3-319-70625-2_12
   Baqais AAB, 2020, SOFTWARE QUAL J, V28, P459, DOI 10.1007/s11219-019-09477-y
   Bertran IM, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1090, DOI 10.1145/1985793.1986003
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Bubenko J. A.  Jr., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P160, DOI 10.1109/ISRE.1995.512557
   Cabot Jordi, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P58, DOI 10.1007/978-3-642-30982-3_3
   Chung L, 2012, Non-Functional Requirements in Software Engineering, V5
   Clements P., 2010, Relating Business Goals to Architecturally Significant Requirements for Software Systems
   Czibula G, 2015, KNOWL INF SYST, V42, P545, DOI 10.1007/s10115-013-0721-z
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Denger C, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P163, DOI 10.1007/3-540-28244-0_8
   Dexun J., 2013, International Journal of Software Engineering Applications, V4, P1, DOI DOI 10.5121/ijsea.2013.4501
   El-Attar M, 2012, REQUIR ENG, V17, P187, DOI 10.1007/s00766-011-0135-y
   El-Attar M, 2010, SOFTW SYST MODEL, V9, P141, DOI 10.1007/s10270-009-0112-9
   Femmer H., 2017, Requirements engineering artifact quality: definition and control
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fokaefs M, 2007, PROC IEEE INT CONF S, P467
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2011, IEEE ANNU SOFTW ENG, P48, DOI 10.1109/SEW.2011.13
   Fourati R, 2011, STUD COMPUT INTELL, V364, P17
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Frederick P., 1997, IEEE T COMPUT, V20
   Hassaine S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P343, DOI 10.1109/QUATIC.2010.61
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hozano M, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P474, DOI 10.5220/0006338804740482
   Jacobs S., 1995, Conference on Organizational Computing Systems, P96, DOI 10.1145/224019.224029
   Jiang DX, 2012, PROCEEDINGS OF THE 2012 SECOND INTERNATIONAL CONFERENCE ON INSTRUMENTATION & MEASUREMENT, COMPUTER, COMMUNICATION AND CONTROL (IMCCC 2012), P299, DOI 10.1109/IMCCC.2012.74
   Jiang YA, 2011, J COMPUT SCI TECH-CH, V26, P328, DOI 10.1007/s11390-011-9439-0
   Kaiya H, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/ICRE.2002.1048501
   Kaur K, 2017, ADV INTELL SYST, V515, P561, DOI 10.1007/978-981-10-3153-3_56
   Kessentini M, 2011, EUR CON SFTWR MTNCE, P241, DOI 10.1109/CSMR.2011.30
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim DK, 2008, IEEE HI ASS SYS ENGR, P293, DOI 10.1109/HASE.2008.10
   Kim T.-W., 2013, International Journal of Software Engineering and Its Applications, V7, P35
   김태웅, 2008, [The KIPS Transactions : Part D, 정보처리학회논문지D], V15, P825
   Knauss E, 2009, LECT NOTES BUS INF P, V32, P28
   Lee SJ, 2016, EXPERT SYST APPL, V45, P185, DOI 10.1016/j.eswa.2015.09.023
   Lima Paulo, 2016, CLEIej, V19, P7
   Macia I., 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P60, DOI 10.1109/SBES.2010.14
   Maddeh M, 2015, IFIP ADV INF COMM TE, V456, P574, DOI 10.1007/978-3-319-19578-0_47
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Maneerat N., 2011, Proceedings of the Eighth International Joint Conference on Computer Science and Software Engineering (JCSSE 2011), P331, DOI 10.1109/JCSSE.2011.5930143
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Marinescu R, 2001, TOOLS, V39, P173, DOI 10.1109/TOOLS.2001.941671
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mohamed M., 2011, ARPN J SYSTEMS SOFTW, V1, P117
   Mohammed MA, 2022, SOFTW SYST MODEL, V21, P2007, DOI 10.1007/s10270-021-00965-z
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   Neace K, 2018, REQUIR ENG, V23, P509, DOI 10.1007/s00766-017-0278-6
   Nongpong K, 2015, INT CONF KNOWL SMART, P7, DOI 10.1109/KST.2015.7051460
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Oliveto R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P820, DOI 10.1145/1985793.1985913
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Pacheco C, 2012, J SYST SOFTWARE, V85, P2171, DOI 10.1016/j.jss.2012.04.075
   Padilha J., 2013, LAT AM WORKSH ASP OR
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Ruhroth T, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P360, DOI 10.1109/SEAA.2009.39
   Saeki M, 2009, IEEE INT CONF AUTOM, P674, DOI 10.1109/ASE.2009.34
   Salehie M, 2006, INT C PROGRAM COMPRE, P159, DOI 10.1109/ICPC.2006.6
   Salger F, 2013, S VIS LANG HUM CEN C, P250, DOI 10.1109/RE.2013.6636725
   Serikawa MA, 2016, P BRAZ SYMP SOFTW, P51, DOI 10.1109/SBCARS.2016.19
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   SINGH S, 2011, ACM SIGSOFT SOFTW EN, V36, P1, DOI DOI 10.1145/2020976.2020994
   Srivisut K, 2007, 6TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, PROCEEDINGS, P1060, DOI 10.1109/ICIS.2007.68
   Stolc M, 2010, 2010 IEEE 8TH INTERNATIONAL SYMPOSIUM ON APPLIED MACHINE INTELLIGENCE AND INFORMATICS, P77
   Tahvildari L, 2004, J SOFTW MAINT EVOL-R, V16, P331, DOI 10.1002/smr.299
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   van Lamsweerde A, 2004, LECT NOTES COMPUT SC, V2941, P325
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Voigt H, 2008, LECT NOTES COMPUT SC, V5231, P526, DOI 10.1007/978-3-540-87877-3_44
   Xu J, 2012, PERFORM EVALUATION, V69, P525, DOI 10.1016/j.peva.2009.11.003
   Yan J. B., 2008, Static Semantics Checking Tool for jUCMNav
   Yang LM, 2009, ASIA PAC SOFWR ENG, P43, DOI 10.1109/APSEC.2009.20
   Yu Eric., 2011, SOCIAL MODELING REQU, V11, P2011, DOI DOI 10.7551/MITPRESS/7549.003.0005
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   YU ESK, 1995, INT J COOP INF SYST, V4, P125, DOI 10.1142/S0218843095000056
   Zelkowitz M. V., 1983, The Software Industry: A State of the Art Survey
NR 96
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2022
VL 24
IS 6
SI SI
BP 889
EP 910
DI 10.1007/s10009-022-00662-2
EA AUG 2022
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8H5UG
UT WOS:000840279600001
DA 2024-07-18
ER

PT J
AU Hansen, D
   Leuschel, M
   Körner, P
   Krings, S
   Naulin, T
   Nayeri, N
   Schneider, D
   Skowron, F
AF Hansen, Dominik
   Leuschel, Michael
   Koerner, Philipp
   Krings, Sebastian
   Naulin, Thomas
   Nayeri, Nader
   Schneider, David
   Skowron, Frank
TI Validation and real-life demonstration of ETCS hybrid level 3 principles
   using a formal B model
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE B-method; Animation; Model-based testing; Model checking; ETCS
ID PROB
AB In this article, we present a concrete realisation of the ETCS hybrid level 3 concept, whose practical viability was evaluated in a field demonstration in 2017. Hybrid level 3 introduces virtual subsections as sub-divisions of classical track sections with trackside train detection. Our approach introduces an add-on for the radio block centre (RBC) of Thales, called virtual block function (VBF), which computes the occupation states of the virtual subsections using the train position reports, train integrity information, and the track occupation states. From the perspective of the RBC, the VBF behaves as an interlocking that transmits all signal aspects for virtual signals introduced for each virtual subsection to the RBC. We report on the development of the VBF, implemented as a formal B model executed at runtime using ProB and successfully used in a field demonstration to control real trains.
C1 [Hansen, Dominik; Leuschel, Michael; Koerner, Philipp; Krings, Sebastian; Schneider, David] Univ Dusseldorf, Inst Informat, Dusseldorf, Germany.
   [Hansen, Dominik; Naulin, Thomas; Nayeri, Nader; Skowron, Frank] Thales Deutschland GmbH, Berlin, Germany.
C3 Heinrich Heine University Dusseldorf
RP Leuschel, M (corresponding author), Univ Dusseldorf, Inst Informat, Dusseldorf, Germany.
EM dominik.hansen@hhu.de; michael.leuschel@hhu.de; p.koerner@hhu.de;
   sebastian.krings@hhu.de; thomas.naulin@thalesgroup.com;
   nader.nayeri@thalesgroup.com; david.schneider@hhu.de;
   frank.skowron@thalesgroup.com
RI Krings, Sebastian/X-1199-2019
OI Krings, Sebastian/0000-0001-6712-9798; Korner,
   Philipp/0000-0001-7256-9560
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL. We thank Jens Bendisposto,
   David Gelessus, Christoph Heinzen, Antonia Putz, Yumiko Takahashi,
   Fabian Vu and Michelle Werth for all the work that went into the ProB
   Java API and the new ProB-Animator UI. We thank MirkoAigner,
   StefanoAllrath, Burkhard Borner, Joachim Jost, Editha Nentzl, Sebastian
   Neuhauss, Michael Schilling, Wilfried Seibt, Tom Seidel and Tino Wegner
   from Thales as well as the staff from ClearSy for their work and support
   on the demonstrator. Moreover, we are thankful to the authors of the HL3
   specification and the reviewers ofABZ and STTT for their very useful
   feedback and patience.
CR Abrial J.R., 2018, LNCS, V10817, P31, DOI [10.1007/978-3-319-91271-4, DOI 10.1007/978-3-319-91271-4]
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial J-R., 1996, The B Book
   Abrial JR, 2006, LECT NOTES COMPUT SC, V4260, P588
   Abrial Jean-Raymond, 2018, LECT NOTES COMPUTER, P322
   [Anonymous], 1992, The Z Notation
   [Anonymous], 2017, HYBR ERTMS ETCS LEV, P123
   [Anonymous], 2012, P DS EV B 2012 KYOT
   [Anonymous], 2008, SUBSET0263 EEIG ERTM, P123
   Arcaini Paolo, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P277, DOI 10.1007/978-3-319-91271-4_19
   Comptier Mathieu, 2017, Reliability, Safety, and Security of Railway Systems. Modelling, Analysis, Verification, and Certification. Second International Conference, RSSRail 2017. Proceedings LNCS 10598, P148, DOI 10.1007/978-3-319-68499-4_10
   Cunha Alcino, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P307, DOI 10.1007/978-3-319-91271-4_21
   Dghaym Dana, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P338, DOI 10.1007/978-3-319-91271-4_23
   Dolle D., 2003, Technique et Science Informatiques, V22, P11, DOI 10.3166/tsi.22.11-32
   Essame D., 2007, LNCS, V4355, P252
   Essamée D, 2007, LECT NOTES COMPUT SC, V4355, P252
   Hansen Dominik, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P292, DOI 10.1007/978-3-319-91271-4_20
   Hansen D, 2016, LECT NOTES COMPUT SC, V9675, P167, DOI 10.1007/978-3-319-33600-8_10
   Jiang ZH, 2012, LECT NOTES COMPUT SC, V7214, P188, DOI 10.1007/978-3-642-28756-5_14
   Ladenberger L, 2017, THESIS
   Ladenberger L, 2017, INT J SOFTW TOOLS TE, V19, P187, DOI 10.1007/s10009-015-0395-9
   Ladenberger L, 2009, LECT NOTES COMPUT SC, V5825, P202, DOI 10.1007/978-3-642-04570-7_17
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Leuschel M, 2011, FORM ASP COMPUT, V23, P683, DOI 10.1007/s00165-010-0172-1
   Mammar Amel, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P353, DOI 10.1007/978-3-319-91271-4_24
   Reichl K, 2016, LECT NOTES COMPUT SC, V9762, P3, DOI 10.1007/978-3-319-41135-4_1
   Sabatier Denis, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P369, DOI 10.1007/978-3-642-30885-7_34
   Sabatier D, 2016, LECT NOTES COMPUT SC, V9707, P20, DOI 10.1007/978-3-319-33951-1_2
   Schneider D, 2015, LECT NOTES COMPUT SC, V9109, P487, DOI 10.1007/978-3-319-19249-9_30
   Snook C, 2018, LECT NOTES COMPUT SC, V11232, P21, DOI 10.1007/978-3-030-02450-5_2
   Tueno Fotso Steve Jeffrey, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P262, DOI 10.1007/978-3-319-91271-4_18
NR 32
TC 13
Z9 13
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2020
VL 22
IS 3
SI SI
BP 315
EP 332
DI 10.1007/s10009-020-00551-6
EA FEB 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE0ZY
UT WOS:000516155100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Semeráth, O
   Farkas, R
   Bergmann, G
   Varró, D
AF Semerath, Oszkar
   Farkas, Rebeka
   Bergmann, Gabor
   Varro, Daniel
TI Diversity of graph models and graph generators in mutation testing
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Graph diversity metrics; Model diversity; Model generators; Mutation
   testing; Shape analysis
AB When custom modeling tools are used for designing complex safety-critical systems (e.g., critical cyber-physical systems), the tools themselves need to be validated by systematic testing to prevent tool-specific bugs reaching the system. Testing of such modeling tools relies upon an automatically generated set of models as a test suite. While many software testing practices recommend that this test suite should be diverse, model diversity has not been studied systematically for graph models. In the paper, we propose different diversity metrics for models by generalizing and exploiting neighborhood and predicate shapes as abstraction. We evaluate such shape-based diversity metrics using various distance functions in the context of mutation testing of graph constraints and access policies for two separate industrial DSLs. Furthermore, we evaluate the quality (i.e., bug detection capability) of different (random and consistent) model generation techniques for mutation testing purposes.
C1 [Semerath, Oszkar; Farkas, Rebeka; Bergmann, Gabor; Varro, Daniel] MTA BME Lendulet Cyber Phys Syst Res Grp, Budapest, Hungary.
   [Semerath, Oszkar; Farkas, Rebeka; Bergmann, Gabor; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Budapest, Hungary.
   [Varro, Daniel] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
C3 Budapest University of Technology & Economics; Budapest University of
   Technology & Economics; McGill University
RP Semeráth, O (corresponding author), MTA BME Lendulet Cyber Phys Syst Res Grp, Budapest, Hungary.; Semeráth, O (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Budapest, Hungary.
EM semerath@mit.bme.hu; farkas@mit.bme.hu; bergmann@mit.bme.hu;
   varro@mit.bme.hu
RI Varro, Daniel/AAC-4234-2022; Semeráth, Oszkár/AAD-2125-2022
OI Varro, Daniel/0000-0002-8790-252X; Semeráth, Oszkár/0000-0002-3592-5105;
   Perez del Campo, Lorenzo/0000-0002-4647-5453
FU Budapest University of Technology and Economics (BME)
FX Open access funding provided by Budapest University of Technology and
   Economics (BME). We would like to thank Timea Balogh and Csaba Debreceni
   for providing us with their access control policy evaluator, to Aren
   Babikian, Boqi Chen, Chuning Li and Zoltan Micskei for their detailed
   review of the paper, as well as the anonymous reviewers for their
   constructive criticism that contributed to a better explanation of our
   setting.
CR Al-Refai M, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P55, DOI 10.1109/MODELS.2017.17
   Almendros-Jiménez JM, 2016, LECT NOTES COMPUT SC, V9893, P16, DOI 10.1007/978-3-319-45547-1_2
   Anderson Anne., 2003, OASIS
   [Anonymous], 2010, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190075
   [Anonymous], OBJ CONSTR LANG V2 0
   Aranega V, 2015, SOFTW TEST VERIF REL, V25, P653, DOI 10.1002/stvr.1532
   Arkhangel'skii A, 2012, GEN TOPOLOGY
   AtlanMod Team (Inria Mines-Nantes Lina), EMF RAND INST
   Batot E, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P374, DOI 10.1145/2976767.2976785
   Baudry B, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P395, DOI 10.1109/CSMR-WCRE.2014.6747203
   Bergmann G, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P351, DOI 10.1145/2976767.2976793
   Bertolino A, 2015, INFORM SOFTWARE TECH, V58, P355, DOI 10.1016/j.infsof.2014.07.003
   Bertolino A, 2013, IEEE ICST WORKSHOP, P28, DOI 10.1109/ICSTW.2013.11
   Bordbar B., 2005, IADIS AC, P209
   Brottier E, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Cabot Jordi, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P73, DOI 10.1109/ICSTW.2008.54
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Darabos Andrea., 2006, GTVMT, ENTCS
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Debreceni C, 2019, SOFTW SYST MODEL, V18, P1737, DOI 10.1007/s10270-017-0631-8
   Ehrig K, 2009, SOFTW SYST MODEL, V8, P479, DOI 10.1007/s10270-008-0095-y
   Eunsuk Kang, 2010, Foundations of Computer Software. Modeling, Development, and Verification of Adaptive Systems. 16th Monterey Workshop 2010. Revised Selected Papers, P33, DOI 10.1007/978-3-642-21292-5_3
   Fleurey F, 2009, SOFTW SYST MODEL, V8, P185, DOI 10.1007/s10270-007-0074-8
   Gogolla M, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P312, DOI 10.1109/MODELS.2015.7338262
   Gómez A, 2017, LECT NOTES COMPUT SC, V10376, P300, DOI 10.1007/978-3-319-61482-3_18
   González CA, 2014, LECT NOTES COMPUT SC, V8568, P25
   Guerra E, 2015, SOFTW SYST MODEL, V14, P623, DOI 10.1007/s10270-013-0369-x
   Hilken F, 2018, SOFTW SYST MODEL, V17, P885, DOI 10.1007/s10270-016-0568-3
   Hu C.T., 2017, SPECIAL PUBLICATION, V800-192
   Iyengar S.S, 2005, METADATA DRIVEN SYST
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson E.K., 2013, EMSOFT, P11
   Jackson EK, 2011, LECT NOTES COMPUT SC, V6981, P653, DOI 10.1007/978-3-642-24485-8_48
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Martin E., 2007, P 16 INT C WORLD WID, P667, DOI DOI 10.1145/1242572.1242663
   Micskei Zoltan, 2012, Agent and Multi-Agent Systems. Technologies and Applications. Proceedings 6th KES International Conference, KES-AMSTA 2012, P504, DOI 10.1007/978-3-642-30947-2_55
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Mottu JM, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P88, DOI 10.1109/ISSRE.2015.7381802
   Ratiu D, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P15, DOI [10.1109/AST.2016.011, 10.1145/2896921.2896922]
   Reid SC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P64, DOI 10.1109/METRIC.1997.637166
   Rensink A, 2006, ELECT COMMUN EUR ASS, DOI [10.14279/tuj.eceasst.1.77.84, DOI 10.14279/TUJ.ECEASST.1.77.84]
   Rensink A, 2006, ELECTRON NOTES THEOR, V157, P39, DOI 10.1016/j.entcs.2006.01.022
   Reps TW, 2004, LECT NOTES COMPUT SC, V3114, P15
   Scheidgen M., 2015, PROC 3 WORKSHOP SCAL, P1
   Schönböck J, 2013, ASIA PAC SOFWR ENG, P75, DOI 10.1109/APSEC.2013.21
   Semeráth O, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P969, DOI 10.1145/3180155.3180186
   Semeráth O, 2018, LECT NOTES COMPUT SC, V10802, P227, DOI 10.1007/978-3-319-89363-1_13
   Semeráth O, 2017, LECT NOTES COMPUT SC, V10374, P138, DOI 10.1007/978-3-319-61473-1_10
   Semeráth O, 2017, SOFTW SYST MODEL, V16, P357, DOI 10.1007/s10270-015-0485-x
   Semeráth O, 2016, LECT NOTES COMPUT SC, V9633, P87, DOI 10.1007/978-3-662-49665-7_6
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   The Eclipse Project, EMF DIFFMERGE
   The Eclipse Project, MDT PAP
   The Eclipse Project, ECLIPSE MODELING FRA
   Torrini P, 2010, LECT NOTES COMPUT SC, V6013, P154
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Vallecillo Antonio, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P399, DOI 10.1007/978-3-642-30982-3_11
   Varro D., 2018, Graph Transformation, Specifications, and Nets, P285
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Wang JH, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P270
NR 62
TC 12
Z9 13
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2020
VL 22
IS 1
SI SI
BP 57
EP 78
DI 10.1007/s10009-019-00530-6
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS8XB
UT WOS:000518590800005
OA hybrid
DA 2024-07-18
ER

PT J
AU Nikravan, E
   Parsa, S
AF Nikravan, Esmaeel
   Parsa, Saeed
TI A reasoning-based approach to dynamic domain reduction in test data
   generation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Random testing; Test data generation; Euler/Venn diagram; Reasoning;
   Directed acyclic graph
AB In this article, a new criterion, domain coverage, for white box testing is introduced. In search of the biggest subdomains for input variables exercising a given path, the variable domains are broken down into overlapping subregions in such a way that the resultant subregions either exercise or deviate from the path. To this aim, an incremental method is applied to detect the subregions, covering the longest subpaths from the start of the given path. The detected subdomain is further subdivided, and this process is repeated as far as the path is fully covered. If no subdomain is detected, the method is backtracked. The backtrack begins with the subdomain covering the longest subpath at the beginning of the given path, but this time the subdomain is divided into relatively smaller subregions, compared with the last time. A directed acyclic graph representation of each input variable domain is used to ignore re-examination of those subdomains which deviate from the path. Conducted experiments reveal that our proposed domain-oriented algorithm outperforms the existing path-oriented test data generation algorithms.
C1 [Nikravan, Esmaeel; Parsa, Saeed] Iran Univ Sci & Technol, Sch Comp Engn, Tehran, Iran.
C3 Iran University Science & Technology
RP Parsa, S (corresponding author), Iran Univ Sci & Technol, Sch Comp Engn, Tehran, Iran.
EM nikravan@comp.iust.ac.ir; Parsa@iust.ac.ir
RI parsa, saeed/S-9536-2018; parsa, Saeed/S-8982-2019
OI parsa, saeed/0000-0003-4381-2773; 
CR Ali S, 2016, EMPIR SOFTW ENG, V21, P2459, DOI 10.1007/s10664-015-9392-6
   Alshahwan N., 2014, P 2014 INT S SOFTW T
   Anand S, 2007, LECT NOTES COMPUT SC, V4424, P134
   [Anonymous], QUAL SOFTW QSIC 2011
   [Anonymous], 2004, J SOFTWARE SYSTEM MO
   [Anonymous], 2014, INT J COMPUT APPL
   [Anonymous], P 1 INT WORKSH RAND
   [Anonymous], 2016, ARXIV PREPRINT ARXIV
   [Anonymous], ACM SIGSOFT SOFTWARE
   Bottaci L, 2002, P 4 ANN C GEN EV COM
   Bueno PMS, 2014, INFORM SCIENCES, V259, P490, DOI 10.1016/j.ins.2011.01.025
   Chow S., 2003, INT S GRAPH DRAW, V2912
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   Feyzi F, 2018, IET SOFTW
   Feyzi F, 2018, COMPUTING
   Feyzi F, 2019, FRONT COMPUT SCI-CHI, V13, P735, DOI 10.1007/s11704-017-6512-z
   Feyzi F, 2018, J SYST SOFTWARE, V136, P39, DOI 10.1016/j.jss.2017.11.002
   Galeotti J. P., 2013, SOFTW REL ENG ISSRE
   Godefroid P., 2005, ACM SIGPLAN NOTICES, V40
   Gotlieb A., 2008, COMP SOFTW APPL 2008
   Gotlieb A, 2010, J SYST SOFTWARE, V83, P2618, DOI 10.1016/j.jss.2010.08.021
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Hermadi I, 2014, INFORM SOFTWARE TECH, V56, P395, DOI 10.1016/j.infsof.2014.01.001
   HUANG JC, 1979, IEEE T SOFTWARE ENG, V5, P226, DOI 10.1109/TSE.1979.234184
   Jussien Narendra, 2008, CPAIOR 08 WORKSH OP
   Kempka J, 2015, THEOR COMPUT SCI, V605, P1, DOI 10.1016/j.tcs.2014.12.009
   Korel B., 1992, Software Testing, Verification and Reliability, V2, P203, DOI 10.1002/stvr.4370020405
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Nikravan E., 2015, KNOWL BAS ENG INN KB
   OFFUTT AJ, 1925, SPE, V29, P167, DOI DOI 10.1002/(SICI)1097-024X(199902)29:2
   Stapleton G, 2005, ELECTRON NOTES THEOR, V134, P127, DOI 10.1016/j.entcs.2005.02.022
   Su T, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3020266
   Suresh Y, 2014, ARXIV14015165
   Swoboda N, 2000, DIAGRAMMATIC REPRESENTATION AND REASONING, P371
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Varshney Sapna, 2013, Software Engineering Notes, V38, P146, DOI 10.1145/2492248.2492277
   Varshney S., 2016, COMP COMM AUT ICCCA
   Zhang ZY, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-015-0450-5
   Zhao RL, 2010, SOFTW TEST VERIF REL, V20, P209, DOI 10.1002/stvr.414
NR 39
TC 2
Z9 2
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2019
VL 21
IS 3
SI SI
BP 351
EP 364
DI 10.1007/s10009-018-0493-6
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY4RT
UT WOS:000468116300007
DA 2024-07-18
ER

PT J
AU Uva, M
   Ponzio, P
   Regis, G
   Aguirre, N
   Frias, MF
AF Uva, Marcelo
   Ponzio, Pablo
   Regis, German
   Aguirre, Nazareno
   Frias, Marcelo F.
TI Automated workarounds from Java program specifications based on SAT
   solving
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime recovery; Workarounds; SAT Solving
ID VERIFICATION; DYNALLOY
AB The failures that bugs in software lead to can sometimes be bypassed by the so-called workarounds: when a (faulty) routine fails, alternative routines that the system offers can be used in place of the failing one, to circumvent the failure. Existing approaches to workaround-based system recovery consider workarounds that are produced from equivalent method sequences, automatically computed from user-provided abstract models, or directly produced from user-provided equivalent sequences of operations. In this paper, we present two techniques for computing workarounds from Java code equipped with formal specifications, that improve previous approaches in two respects. First, the particular state where the failure originated is actively involved in computing workarounds, thus leading to repairs that are more state specific. Second, our techniques automatically compute workarounds on concrete program state characterizations, avoiding abstract software models and user-provided equivalences. The first technique uses SAT solving to compute a sequence of methods that is equivalent to a failing method on a specific failing state, but which can also be generalized to schemas for workaround reuse. The second technique directly exploits SAT to circumvent a failing method, building a state that mimics the (correct) behaviour of a failing routine, from a specific program state too. We perform an experimental evaluation based on case studies involving implementations of collections and a library for date arithmetic, showing that the techniques can effectively compute workarounds from complex contracts in an important number of cases, in time that makes them feasible to be used for run-time repairs. Our results also show that our state-specific workarounds enable us to produce repairs in many cases where previous workaround-based approaches are inapplicable.
C1 [Uva, Marcelo; Ponzio, Pablo; Regis, German; Aguirre, Nazareno] Univ Nacl Rio Cuarto, Rio Cuarto, Argentina.
   [Frias, Marcelo F.] ITBA, Buenos Aires, DF, Argentina.
   [Ponzio, Pablo; Aguirre, Nazareno; Frias, Marcelo F.] Consejo Nacl Invest Cient & Tecn, Consejo Nacl Invest Cient & Tecn, Buenos Aires, DF, Argentina.
C3 Universidad Nacional Rio Cuarto; Consejo Nacional de Investigaciones
   Cientificas y Tecnicas (CONICET)
RP Aguirre, N (corresponding author), Univ Nacl Rio Cuarto, Rio Cuarto, Argentina.; Aguirre, N (corresponding author), Consejo Nacl Invest Cient & Tecn, Consejo Nacl Invest Cient & Tecn, Buenos Aires, DF, Argentina.
EM uva@dc.exa.unrc.edu.ar; pponzio@dc.exa.unrc.edu.ar;
   gregis@dc.exa.unrc.edu.ar; naguirre@dc.exa.unrc.edu.ar;
   mfrias@itba.edu.ar
CR Abad P, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P21, DOI 10.1109/ICST.2013.46
   Belt J, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P355, DOI 10.1145/1595696.1595762
   Carzaniga A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P321, DOI 10.1145/1810295.1810371
   Carzaniga A., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering, P237
   Carzaniga A, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2755970
   Carzaniga A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P782, DOI 10.1109/ICSE.2013.6606624
   Carzaniga Antonio., 2008, Proceedings of the 2008 International Workshop on Software Engineering for Adaptive and Self-Managing Systems. Seams'08, P17
   Chalin P, 2006, LECT NOTES COMPUT SC, V4111, P342
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   Demsky B, 2003, ACM SIGPLAN NOTICES, V38, P78, DOI 10.1145/949343.949314
   Dennis Greg, 2006, ISSTA, P109, DOI [10.1145/1146238.1146251, DOI 10.1145/1146238.1146251]
   Frias MF, 2005, PROC INT CONF SOFTW, P442
   Galeotti JP, 2006, INT FED INFO PROC, V227, P249
   Galeotti JP, 2013, IEEE T SOFTWARE ENG, V39, P1283, DOI 10.1109/TSE.2013.15
   Galeotti Juan P., 2010, Proceedings of the Nineteenth International Symposium on Software Testing and Analysis, ISSTA 2010, Trento, Italy, July 12-16, 2010, P25, DOI [DOI 10.1145/1831708.1831712, 10.1145/1831708.1831712]
   Geldenhuys Jaco, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P229, DOI 10.1007/978-3-642-38088-4_16
   Goffi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P366, DOI 10.1145/2635868.2635888
   Hussain I., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P215, DOI 10.1145/1810295.1810333
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Khurshid S, 2005, LECT NOTES COMPUT SC, V3639, P123
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Liskov Barbara., 2001, Program Development in Java: Abstraction, Specification, and Object-Oriented Design
   Loncaric C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P958, DOI 10.1145/3180155.3180211
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Polikarpova N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P262, DOI 10.1109/ICSE.2013.6606572
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Rosner N, 2015, IEEE T SOFTWARE ENG, V41, P639, DOI 10.1109/TSE.2015.2389225
   Rosner N, 2014, ACM SIGPLAN NOTICES, V49, P655, DOI [10.1145/2714064.2660232, 10.1145/2660193.2660232]
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Samimi H, 2010, LECT NOTES COMPUT SC, V6183, P552, DOI 10.1007/978-3-642-14107-2_26
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Visser W., 2006, P ACM SIGSOFT INT S, P37
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Zaeem RN, 2012, LECT NOTES COMPUT SC, V7214, P2, DOI 10.1007/978-3-642-28756-5_2
   Zaeem RN, 2010, LECT NOTES COMPUT SC, V6183, P577, DOI 10.1007/978-3-642-14107-2_27
   Zemín L, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P14, DOI 10.1109/SBST.2017.12
NR 37
TC 1
Z9 1
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2018
VL 20
IS 6
SI SI
BP 665
EP 688
DI 10.1007/s10009-018-0503-8
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GV9OI
UT WOS:000446488000004
OA Green Published
DA 2024-07-18
ER

PT J
AU Gallardo, MD
   Merino, P
   Panizo, L
   Salmerón, A
AF del Mar Gallardo, Maria
   Merino, Pedro
   Panizo, Laura
   Salmeron, Alberto
TI Integrating river basin DSSs with model checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 23rd International SPIN Symposium on Model Checking of Software (SPIN)
CY APR 07-08, 2016
CL Eindhoven, NETHERLANDS
DE Decision support system; Basin management; Formal methods
ID MANAGEMENT; SYSTEM
AB This paper presents a decision support system (DSS) based on formal methods for the management of complex river basins in flood scenarios. The DSS is the result of integrating two different DSSs: first, a DSS for dam management that uses the Spin model checker to produce the manoeuvres and the discharged water over time to satisfy user-defined constraints; second, a DSS that performs numeric simulations of rainfall and water flow along the river basin, taking into account the water discharged by dams. By integrating these two DSSs, the user can define constraints over the parameters of the river basin and all the dams. We use Spin to find the sequences of dam manoeuvres that mitigate the effect of floods along the river basin, according to these constraints. This work is part of the SAID project, a European demonstration project whose main goal is to smartly manage river basins by means of the integration of different DSSs. The demonstrator basin is the Guadalhorce river basin, located in the south of Spain. We apply the method to develop a DSS for this river basin in particular, but the approach is general enough that it can be applied to any river basin.
C1 [del Mar Gallardo, Maria; Merino, Pedro; Panizo, Laura; Salmeron, Alberto] Univ Malaga, Dept Lenguajes & Ciencias Comp, Andalucia Tech, Malaga, Spain.
C3 Universidad de Malaga
RP Panizo, L (corresponding author), Univ Malaga, Dept Lenguajes & Ciencias Comp, Andalucia Tech, Malaga, Spain.
EM gallardo@lcc.uma.es; pedro@lcc.uma.es; laurapanizo@lcc.uma.es;
   salmeron@lcc.uma.es
RI Panizo Jaime, Laura/H-6283-2015; Gallardo, Maria-del-Mar/G-4371-2014;
   Merino-Gomez, Pedro/L-4518-2014
OI Panizo Jaime, Laura/0000-0002-6399-6162; Merino-Gomez,
   Pedro/0000-0003-2456-4946
FU Spanish Minisitry of Innovation and Science [TIN2015-67083-R]; European
   Commission under FP7 Environment project SAID [619132]; European
   Commission under FEDER
FX This work has been partially funded by the Spanish Minisitry of
   Innovation and Science under Grant TIN2015-67083-R (DADIoT) and the
   European Commission under FP7 Environment project SAID, Grant agreement
   619132, and FEDER.
CR Ahmad S, 2006, WATER RESOUR MANAG, V20, P391, DOI 10.1007/s11269-006-0326-3
   Alur R., 1991, LNCS, P45
   [Anonymous], 2015, SAID PROJECT
   [Anonymous], 2000, ARCHITECTURAL STYLES
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Avila A., 2010, GUADALFORTRAN NO STA
   Cheng CT, 2004, ENVIRON MODELL SOFTW, V19, P1141, DOI 10.1016/j.envsoft.2003.12.004
   Diaz M., 2016, P INT C EXH HYDR DAM
   Gallardo Maria-del-Mar, 2016, Model-Checking Software. 23rd International Symposium, SPIN 2016, co-located with ETAPS 2016. Proceedings: LNCS 9641, P78, DOI 10.1007/978-3-319-32582-8_5
   Gallardo MM, 2011, SOFTWARE PRACT EXPER, V41, P1329, DOI 10.1002/spe.1048
   Gallardo M, 2009, LECT NOTES COMPUT SC, V5825, P210, DOI 10.1007/978-3-642-04570-7_20
   Polo MJ, 2010, ENVIRONMENTAL HYDRAULICS: THEORETICAL, EXPERIMENTAL AND COMPUTATIONAL SOLUTIONS, P225
   Karbowski A., 1991, Environmental Software, V6, P11, DOI 10.1016/0266-9838(91)90012-F
   Kars P., 1998, Lectures on Embedded Systems. European Educational Forum School on Embedded Systems, P353
   Labadie JW, 2004, J WATER RES PLAN MAN, V130, P93, DOI 10.1061/(ASCE)0733-9496(2004)130:2(93)
   McCartney M.P., 2007, DECISION SUPPORT SYS
   Panizo L., 2010, 8 INT C SOFTW ENG FO, P9
   Pottinger L., 2010, FLOOD DAM SAFETY PRO
   SAID Consortium, 2016, DEC SUPP SYST FLOOD
NR 19
TC 2
Z9 2
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2018
VL 20
IS 5
SI SI
BP 499
EP 514
DI 10.1007/s10009-017-0478-x
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GQ7TL
UT WOS:000441949300002
DA 2024-07-18
ER

PT J
AU Bride, H
   Kouchnarenko, O
   Peureux, F
   Voiron, G
AF Bride, Hadrien
   Kouchnarenko, Olga
   Peureux, Fabien
   Voiron, Guillaume
TI Assessing SMT and CLP approaches for workflow nets verification
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT Joint 21st International Workshop on Formal Methods for Industrial
   Critical Systems (FMICS) / 16th International Workshop on Automated
   Verification of Critical Systems (AVoCS)
CY SEP 26-28, 2016
CL Pisa, ITALY
SP European Res Consortium Informat & Math, Formal Methods Europe, Springer Intl Publishing AG
DE Workflow nets; Modal specifications; Verification method; Experimental
   comparison; Satisfiability modulo theory; Constraint solving problem
ID STEPWISE REFINEMENT; BUSINESS PROCESSES; PETRI NETS; SOUNDNESS;
   CHECKING; SYSTEMS
AB In the actual business world, companies rely more and more on workflows to model the core of their business processes. In this context, the focus of workflow analysts is made on the verification of workflows specifications, in particular of modal specifications that allow the description of necessary or admissible behaviors. The design and the analysis of business processes commonly relies on workflow nets, a suited class of Petri nets. The goal of this paper is to evaluate and compare in a deep way two resolution methods-satisfiability modulo theory and constraint logic programming-applied to the verification of modal specifications over workflow nets. Firstly, it provides a concise description of the verification methods based on constraint solving. Secondly, it introduces the toolchain developed to automate the full verification process. Thirdly, it describes the experimental protocol designed to evaluate and compare the scalability and efficiency of both resolution approaches and reports on the obtained results. Finally, these obtained results are discussed in detail, lessons learned from these experiments are given, and, on the basis of experiments feedback, directions for improvement and future work are suggested.
C1 [Bride, Hadrien; Kouchnarenko, Olga; Peureux, Fabien; Voiron, Guillaume] Univ Bourgogne Franche Comte, Inst FEMTO, ST, UMR CNRS 6174, 16,Route Gray, F-25030 Besancon, France.
   [Bride, Hadrien] Ecole Cent Nantes, LS2N, UMR CNRS 6004, 1 Rue No, F-44300 Nantes, France.
C3 Universite de Franche-Comte; Centre National de la Recherche
   Scientifique (CNRS); CNRS - Institute for Engineering & Systems Sciences
   (INSIS); Nantes Universite; Ecole Centrale de Nantes
RP Peureux, F (corresponding author), Univ Bourgogne Franche Comte, Inst FEMTO, ST, UMR CNRS 6174, 16,Route Gray, F-25030 Besancon, France.
EM hbride@femto-st.fr; okouchna@femto-st.fr; fabien.peureux@femto-st.fr;
   gvoiron@femto-st.fr
RI Kouchnarenko, Olga/AFY-4564-2022
OI Kouchnarenko, Olga/0000-0003-1482-9015
CR [Anonymous], 1962, Schriften des IIM
   Bellegarde F., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P2
   Bi H. H., 2004, Information Technology & Management, V5, P293, DOI 10.1023/B:ITEM.0000031583.16306.0f
   Bride H., 2016, ACT 15 JOURN APPR FO, P11
   Bride H., 2016, LNCS, V9933, P1
   Bride H., 2015, LNCS, P75
   Bride H, 2017, LECT NOTES COMPUT SC, V10145, P91, DOI 10.1007/978-3-319-52234-0_6
   Bride H, 2014, LECT NOTES COMPUT SC, V8739, P171, DOI 10.1007/978-3-319-10181-1_11
   Carlsson M., 2012, SICSTUS PROLOG USERS
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   Edward P. K. T., 1993, FDN CONSTRAINT SATIS
   Elhog-Benzina D, 2012, LECT NOTES COMPUT SC, V6900, P96
   Fahland D, 2011, DATA KNOWL ENG, V70, P448, DOI 10.1016/j.datak.2011.01.004
   Goedertier S, 2006, LECT NOTES COMPUT SC, V4103, P5
   Governatori G, 2006, IEEE INT ENTERP DIST, P221
   Haddad S., 2009, PETRI NETS FUNDAMENT, P87
   Kleine Moritz, 2010, Proceedings of the 2010 4th IEEE International Symposium on Theoretical Aspects of Software Engineering (TASE 2010), P145, DOI 10.1109/TASE.2010.26
   Kordon F., 2017, COMPLETE RESULTS 201
   Kouchnarenko O., 2009, WORKSH CONC SPEC PRO, V1
   Larsen K. G., 1990, P INT WORKSH AUT VER, P232
   Larsen U, 1988, Eur J Popul, V3, P203, DOI 10.1109/LICS.1988.5119
   MAYR EW, 1984, SIAM J COMPUT, V13, P441, DOI 10.1137/0213029
   Monakova G., 2009, LNI, V147, P81
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Pólrola A, 2014, FUND INFORM, V135, P467, DOI 10.3233/FI-2014-1135
   Salimifard K, 2001, EUR J OPER RES, V134, P664, DOI 10.1016/S0377-2217(00)00292-7
   Schmidt K, 2000, LECT NOTES COMPUT SC, V1825, P465
   Soliman S., 2008, P 4 WORKSH CONSTR BA, V8
   SUZUKI I, 1983, J COMPUT SYST SCI, V27, P51, DOI 10.1016/0022-0000(83)90029-6
   Espada MV, 2006, LECT NOTES COMPUT SC, V4019, P338
   van der Aalst WMP, 2011, FORM ASP COMPUT, V23, P333, DOI 10.1007/s00165-010-0161-4
   Van Der Aalst W. M. P., P INT WORK C INF PRO, P179
   van der Aalst: W.M.P., 1999, Systems Analysis Modeling Simulation, Volume, V35, Pages, P345
   van der Aalst WMP, 1997, LECT NOTES COMPUT SC, V1248, P407
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   van Hee K, 2003, LECT NOTES COMPUT SC, V2679, P337
   van Hee K. M., 2010, CEUR, V827, P403
   Wimmel H, 2012, LOG METH COMPUT SCI, V8
   Wong PYH, 2007, LECT NOTES COMPUT SC, V4829, P51
NR 41
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2018
VL 20
IS 4
SI SI
BP 467
EP 491
DI 10.1007/s10009-018-0486-5
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GL5XP
UT WOS:000437248300007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU van Dijk, T
   van de Pol, J
AF van Dijk, Tom
   van de Pol, Jaco
TI Multi-core symbolic bisimulation minimisation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Bisimulation minimisation; Interactive Markov chains; Binary decision
   diagrams; Parallel algorithms
ID MODEL CHECKING; ALGORITHM; VERIFICATION; REACHABILITY; REDUCTION
AB We introduce parallel symbolic algorithms for bisimulation minimisation, to combat the combinatorial state space explosion along three different paths. Bisimulation minimisation reduces a transition system to the smallest system with equivalent behaviour. We consider strong and branching bisimilarity for interactive Markov chains, which combine labelled transition systems and continuous-time Markov chains. Large state spaces can be represented concisely by symbolic techniques, based on binary decision diagrams. We present specialised BDD operations to compute the maximal bisimulation using signature-based partition refinement. We also study the symbolic representation of the quotient system and suggest an encoding based on representative states, rather than block numbers. Our implementation extends the parallel, shared memory, BDD library Sylvan, to obtain a significant speedup on multi-core machines. We propose the usage of partial signatures and of disjunctively partitioned transition relations, to increase the parallelisation opportunities. Also our new parallel data structure for block assignments increases scalability. We provide SIGREFMC, a versatile tool that can be customised for bisimulation minimisation in various contexts. In particular, it supports models generated by the high-performance model checker LTSMIN, providing access to specifications in multiple formalisms, including process algebra. The extensive experimental evaluation is based on various benchmarks from the literature. We demonstrate a speedup up to 95 for computing the maximal bisimulation on one processor. In addition, we find parallel speedups on a 48-core machine of another 17 for partition refinement and 24 for quotient computation. Our new encoding of the reduced state space leads to smaller BDD representations, with up to a 5162-fold reduction.
C1 [van Dijk, Tom] Johannes Kepler Univ Linz, Inst Formal Methods & Verificat, Linz, Austria.
   [van de Pol, Jaco] Univ Twente, Formal Methods & Tools, Enschede, Netherlands.
C3 Johannes Kepler University Linz; University of Twente
RP van Dijk, T (corresponding author), Johannes Kepler Univ Linz, Inst Formal Methods & Verificat, Linz, Austria.
EM t.vandijk@gmail.com; J.C.vandePol@utwente.nl
OI van Dijk, Tom/0000-0002-5366-1051
FU Johannes Kepler University Linz
FX Open access funding provided by Johannes Kepler University Linz.
CR [Anonymous], 2002, LECT NOTES COMPUTER
   [Anonymous], LECT NOTES COMPUTER
   Badban B, 2005, FORM ASP COMPUT, V17, P342, DOI 10.1007/s00165-004-0070-0
   BAHAR RI, 1993, 1993 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN - DIGEST OF TECHNICAL PAPERS, P188, DOI 10.1109/ICCAD.1993.580054
   Bakhshi R, 2008, INT FED INFO PROC, V273, P57
   Blom S., 2003, ELECT NOTES THEORETI, V89, P99, DOI DOI 10.1016/S1571-0661(05)80099-4
   Blom S, 2010, LECT NOTES COMPUT SC, V6174, P354
   Blom S, 2008, ELECTRON NOTES THEOR, V220, P35, DOI 10.1016/j.entcs.2008.11.012
   Blumofe R. D., 1999, Journal of the ACM, V46, P720, DOI [10.1109/SFCS.1994.365680, 10.1145/324133.324234]
   Bouali A., 1992, LECT NOTES COMPUTER, V663, P96, DOI [10.1007/3-540-56496-9_9, DOI 10.1007/3-540-56496-9_9]
   Brace K. S., 1990, 27th ACM/IEEE Design Automation Conference. Proceedings 1990 (Cat. No.90CH2894-4), P40, DOI 10.1109/DAC.1990.114826
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   BURCH JR, 1994, IEEE T COMPUT AID D, V13, P401, DOI 10.1109/43.275352
   CLARKE EM, 1993, ACM IEEE D, P54
   Cranen S, 2013, LECT NOTES COMPUT SC, V7795, P199, DOI 10.1007/978-3-642-36742-7_15
   DENICOLA R, 1995, J ACM, V42, P458, DOI 10.1145/201019.201032
   Derisavi S, 2007, INT CONF QUANT EVAL, P141, DOI 10.1109/QEST.2007.27
   Derisavi S, 2007, LECT NOTES COMPUT SC, V4424, P139
   DOLEV D, 1982, J ALGORITHM, V3, P245, DOI 10.1016/0196-6774(82)90023-2
   FRANKLIN WR, 1982, COMMUN ACM, V25, P336, DOI 10.1145/358506.358517
   Hermanns Holger, 2009, Proceedings of Formal Methods for Components and Objects. 8th International Symposium (FMCO 2009). Revised Selected Papers, P311, DOI 10.1007/978-3-642-17071-3_16
   Hesselink WH, 1998, INFORM PROCESS LETT, V68, P173, DOI 10.1016/S0020-0190(98)00158-6
   Kant Gijs, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P692, DOI 10.1007/978-3-662-46681-0_61
   Kulakowski K., 2013, CORR
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Meijer Jeroen, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P204, DOI 10.1007/978-3-319-13338-6_16
   Mumme M, 2013, INT J FOUND COMPUT S, V24, P263, DOI 10.1142/S012905411340011X
   PAIGE R, 1987, SIAM J COMPUT, V16, P973, DOI 10.1137/0216062
   PUGH W, 1990, COMMUN ACM, V33, P668, DOI 10.1145/78973.78977
   Remenska D., 2012, Proceedings of the 2012 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2012), P335, DOI 10.1109/CCGrid.2012.90
   van de Pol J, 2009, LECT NOTES COMPUT SC, V5799, P54
   van Dijk Tom, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P677, DOI 10.1007/978-3-662-46681-0_60
   van Dijk T., 2016, THESIS
   van Dijk T, 2016, LECT NOTES COMPUT SC, V9636, P332, DOI 10.1007/978-3-662-49674-9_19
   Van Dijk T, 2013, ELECTRON NOTES THEOR, V296, P127, DOI 10.1016/j.entcs.2013.07.009
   van Dijk T, 2014, LECT NOTES COMPUT SC, V8806, P206, DOI 10.1007/978-3-319-14313-2_18
   Wijs Anton, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P368, DOI 10.1007/978-3-662-46681-0_29
   Wimmer R., 2007, 14 SFBTR AVACS
   Wimmer R, 2006, LECT NOTES COMPUT SC, V4218, P477
   Wimmer R, 2010, PERFORM EVALUATION, V67, P816, DOI 10.1016/j.peva.2009.12.008
   Wimmer R, 2010, LECT NOTES COMPUT SC, V5987, P287
   Wimmer R, 2007, GLSVLSI'07: PROCEEDINGS OF THE 2007 ACM GREAT LAKES SYMPOSIUM ON VLSI, P405
NR 42
TC 5
Z9 5
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2018
VL 20
IS 2
SI SI
BP 157
EP 177
DI 10.1007/s10009-017-0468-z
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA6HE
UT WOS:000428433000004
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Amighi, A
   Gomes, PD
   Gurov, D
   Huisman, M
AF Amighi, Afshin
   Gomes, Pedro de Carvalho
   Gurov, Dilian
   Huisman, Marieke
TI Provably correct control flow graphs from Java bytecode programs with
   exceptions
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software verification; Static analysis; Program models
AB We present an algorithm for extracting control flow graphs from Java bytecode that captures normal as well as exceptional control flow. We prove its correctness, in the sense that the behaviour of the extracted control flow graph is a sound over-approximation of the behaviour of the original program. This makes control flow graphs suitable for performing various static analyses, such as model checking of temporal safety properties. Analysing exceptional control flow for Java bytecode is difficult because of the stack-based nature of the language. We therefore develop the extraction in two stages. In the first, we abstract away from the complications arising from exceptional flows, and relativize the extraction on an oracle that is able to look into the stack and predict the exceptions that can be raised at each instruction. This idealized algorithm provides a specification for concrete extraction algorithms, which have to provide a suitable implementation for the oracle. We prove correctness of the idealized algorithm by means of behavioural simulation. In the second stage, we develop a concrete extraction algorithm that consists of two phases. In the first phase, the program is transformed into a BIR program, a stack-less intermediate representation of Java bytecode, from which the control flow graph is extracted in the second phase. We use this intermediate format because it provides the information needed to implement the oracle, and since it gives rise to more compact graphs. We show that the behaviour of the control flow graph extracted via the intermediate representation is a sound over-approximation of the behaviour of the graph extracted by the direct, idealized algorithm, and thus of the original program. The concrete extraction algorithm is implemented as the ConFlEx tool. A number of test cases are performed to evaluate the efficiency of the algorithm.
C1 [Amighi, Afshin; Huisman, Marieke] Univ Twente, Enschede, Netherlands.
   [Gomes, Pedro de Carvalho; Gurov, Dilian] KTH Royal Inst Technol, Stockholm, Sweden.
C3 University of Twente; Royal Institute of Technology
RP Gomes, PD (corresponding author), KTH Royal Inst Technol, Stockholm, Sweden.
EM a.amighi@utwente.nl; pedrodcg@csc.kth.se; dilian@csc.kth.se;
   m.huisman@utwente.nl
OI Huisman, Marieke/0000-0003-4467-072X; Gurov, Dilian/0000-0002-0074-8786
CR Amighi Afshin, 2012, Software Engineering and Formal Methods. Proceedings of the 10th International Conference, SEFM 2012, P33, DOI 10.1007/978-3-642-33826-7_3
   Amighi A., 2011, THESIS
   [Anonymous], 1970, ACM SIGPLAN NOTICES, DOI DOI 10.1145/390013.808479
   Armando Alessandro., 2014, Proceedings of the 2014 ACM conference on Security and privacy in wireless mobile networks, P219, DOI DOI 10.1145/2627393.2627410
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Barre N., 2011, SAWJA API DOCUMENTAT
   Burke M. G., 1999, Proceedings of the ACM 1999 Java Grande Conference, P129, DOI 10.1145/304065.304113
   Castro Gomes P.C. e, 2012, THESIS
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Demange D., 2009, 7021 INRIA RENN
   Dwyer MB, 2001, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.2001.919092
   Freund SN, 2003, J AUTOM REASONING, V30, P271, DOI 10.1023/A:1025011624925
   Gomes P.D.C, 2012, CONFIEX
   Gomes PD, 2014, LECT NOTES COMPUT SC, V8411, P215
   Graa M, 2013, 2013 INTERNATIONAL CONFERENCE ON SIGNAL-IMAGE TECHNOLOGY & INTERNET-BASED SYSTEMS (SITIS), P293, DOI 10.1109/SITIS.2013.56
   Gurov D, 2008, INFORM COMPUT, V206, P840, DOI 10.1016/j.ic.2008.03.003
   Hubert L., 2010, LNCS, V6528, P92
   Huisman M, 2011, LECT NOTES COMPUT SC, V6528, P107
   Huisman M, 2008, LECT NOTES COMPUT SC, V5256, P147, DOI 10.1007/978-3-540-88194-0_11
   Jiang SJ, 2007, ACM SIGPLAN NOTICES, V42, P3, DOI 10.1145/1288258.1288259
   Jo JW, 2004, LECT NOTES COMPUT SC, V3043, P106
   Jong-Deok Choi, 1999, Software Engineering Notes, V24, P21, DOI 10.1145/381788.316171
   Kiefer S., 2005, MOPED MODEL CHECKER
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Lindholm T., 2012, JSR000924
   Mihancea PF, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P450, DOI 10.1109/CSMR-WCRE.2014.6747216
   Milner R., 1999, COMMUNICATING MOBILE
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Schwoon S., 2002, THESIS TU MUNICH GER
   Sinha S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P265, DOI 10.1109/ICSM.1999.792624
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   Soleimanifard S., 2014, LECT NOTES COMPUTER, V8997
   Soleimanifard S., 2012, PROMOVER WEB INTERFA
   Soleimanifard S, 2015, SOFTW SYST MODEL, V14, P83, DOI 10.1007/s10270-013-0321-0
   Spoto F, 2011, SOFTW SYST MODEL, V10, P219, DOI 10.1007/s10270-009-0132-5
   Sundaresan V, 2000, ACM SIGPLAN NOTICES, V35, P264, DOI 10.1145/354222.353189
   Vallee-Rai R., 1999, CASCON 1999, P125
   Watson T.J., 2012, IBM LIB ANAL WALA
   ZHAO J, 1999, P 16 C JAP SOC SOFTW, P313
NR 41
TC 1
Z9 2
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2016
VL 18
IS 6
BP 653
EP 684
DI 10.1007/s10009-015-0375-0
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DY5YK
UT WOS:000385180700006
OA Green Published
DA 2024-07-18
ER

PT J
AU Enoiu, EP
   Causevic, A
   Ostrand, TJ
   Weyuker, EJ
   Sundmark, D
   Pettersson, P
AF Enoiu, Eduard P.
   Causevic, Adnan
   Ostrand, Thomas J.
   Weyuker, Elaine J.
   Sundmark, Daniel
   Pettersson, Paul
TI Automated test generation using model checking: an industrial evaluation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Automated test generation; Software testing; Model checking; UPPAAL;
   Logic coverage safety-critical systems; IEC 1131-3; FBD; Function Block
   Diagram; Structured Text; PLC; Programmable Logic Controllers;
   Model-based testing
AB In software development, testers often focus on functional testing to validate implemented programs against their specifications. In safety-critical software development, testers are also required to show that tests exercise, or cover, the structure and logic of the implementation. To achieve different types of logic coverage, various program artifacts such as decisions and conditions are required to be exercised during testing. Use of model checking for structural test generation has been proposed by several researchers. The limited application to models used in practice and the state space explosion can, however, impact model checking and hence the process of deriving tests for logic coverage. Thus, there is a need to validate these approaches against relevant industrial systems such that more knowledge is built on how to efficiently use them in practice. In this paper, we present a tool-supported approach to handle software written in the Function Block Diagram language such that logic coverage criteria can be formalized and used by a model checker to automatically generate tests. To this end, we conducted a study based on industrial use-case scenarios from Bombardier Transportation AB, showing how our toolbox CompleteTest can be applied to generate tests in software systems used in the safety-critical domain. To evaluate the approach, we applied the toolbox to 157 programs and found that it is efficient in terms of time required to generate tests that satisfy logic coverage and scales well for most of the programs.
C1 [Enoiu, Eduard P.; Causevic, Adnan; Weyuker, Elaine J.; Sundmark, Daniel; Pettersson, Paul] Malardalen Univ, Vasteras, Sweden.
   [Sundmark, Daniel] Swedish Inst Comp Sci, Stockholm, Sweden.
   [Ostrand, Thomas J.] Software Engn Res Consultant, Vasteras, Sweden.
C3 Malardalen University
RP Enoiu, EP (corresponding author), Malardalen Univ, Vasteras, Sweden.
EM eduard.paul.enoiu@mdh.se
RI Enoiu, Eduard/N-6496-2015
OI Enoiu, Eduard/0000-0003-2416-4205
CR ALUR R, 1990, LECT NOTES COMPUT SC, V443, P322, DOI 10.1007/BFb0032042
   ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   Alur R., 1999, Computer Aided Verification, V1633, P688
   AMMANN P, 2002, 6777 NISTIR
   Ammann Paul, 2008, Introduction to software testing, V1st
   Behrmann G., 2001, Model-Based Validation of Intelligence. Papers from the 2001 AAAI Symposium, P66
   Black P. E., 2000, 19 DASC 19 DIG AV SY, V1, p1B3/1
   CENELEC, 2001, 50128 CENELEC
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Dierks H, 2001, THEOR COMPUT SCI, V253, P61, DOI 10.1016/S0304-3975(00)00089-X
   Enoiu Eduard Paul, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P1, DOI 10.1007/978-3-642-41707-8_1
   Enoiu EP, 2013, IEEE ICST WORKSHOP, P158, DOI 10.1109/ICSTW.2013.27
   Fraser G, 2009, SOFTW TEST VERIF REL, V19, P215, DOI 10.1002/stvr.402
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   Hessel A, 2004, LECT NOTES COMPUT SC, V2931, P114
   Hessel Anders, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P77, DOI 10.1007/978-3-540-78917-8_3
   Hong HS, 2002, LECT NOTES COMPUT SC, V2280, P327
   Jee E, 2010, LECT NOTES COMPUT SC, V6351, P223
   Jee E, 2009, INFORM SOFTWARE TECH, V51, P1131, DOI 10.1016/j.infsof.2009.01.003
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   Lakehal A, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/ISSRE.2005.26
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Ohman M, 1998, CONTROL ENG PRACT, V6, P547, DOI 10.1016/S0967-0661(98)00054-9
   Rayadurgam S, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P83, DOI 10.1109/ECBS.2001.922409
   Rayadurgam S, 2003, SEW, P91
   Seppi K, 2006, FUND INFORM, V70, P111
   Thieme J, 2002, ISIE 2002: PROCEEDINGS OF THE 2002 IEEE INTERNATIONAL SYMPOSIUM ON INDUSTRIAL ELECTRONICS, VOLS 1-4, P199, DOI 10.1109/ISIE.2002.1026065
   Whalen M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P102, DOI 10.1109/ICSE.2013.6606556
NR 28
TC 27
Z9 32
U1 0
U2 16
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2016
VL 18
IS 3
BP 335
EP 353
DI 10.1007/s10009-014-0355-9
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK5QH
UT WOS:000374974200007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lowe, G
AF Lowe, Gavin
TI Concurrent depth-first search algorithms based on Tarjan's Algorithm
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Depth-first search; Concurrent algorithm; Strongly connected components;
   Tarjan's Algorithm; Model checking
ID STRONGLY CONNECTED COMPONENTS
AB We present concurrent algorithms, based on depth-first search, for three problems relevant to model checking: given a state graph, to find its strongly connected components, which states are in loops, and which states are in "lassos". Each algorithm is a variant of Tarjan's Algorithm. Our algorithms typically exhibit a three-or four-fold speed-up over the corresponding sequential algorithms on an eight-core machine.
C1 [Lowe, Gavin] Univ Oxford, Dept Comp Sci, Oxford, England.
C3 University of Oxford
RP Lowe, G (corresponding author), Univ Oxford, Dept Comp Sci, Oxford, England.
EM gavin.lowe@cs.ox.ac.uk
CR [Anonymous], 2008, Programming in Scala
   [Anonymous], 2007, JAVAONE C
   Armstrong P., 2012, P HOWARD 60
   Barnat J, 2011, J LOGIC COMPUT, V21, P23, DOI 10.1093/logcom/exp003
   COURCOUBETIS C, 1990, LNCS, V531, P233
   Dijkstra E.W., 1973, EWD 376 FINDING MAXI
   Evangelista Sami, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P269, DOI 10.1007/978-3-642-33386-6_22
   Evangelista S, 2011, LECT NOTES COMPUT SC, V6996, P381, DOI 10.1007/978-3-642-24372-1_27
   Fleischer LK, 2000, LECT NOTES COMPUT SC, V1800, P505
   Georges A, 2007, ACM SIGPLAN NOTICES, V42, P57, DOI 10.1145/1297105.1297033
   Gibson-Robinson T., 2014, Lecture Notes in Computer Science, V8413, P187
   Holzmann Gerard J., 2007, 2007 IEEE International Parallel and Distributed Processing Symposium, P1
   Laarman A., 2010, P 10 INT C FORM METH
   Laarman A, 2011, ELECTRON PROC THEOR, P13, DOI 10.4204/EPTCS.72.2
   Laarman A, 2011, LECT NOTES COMPUT SC, V6996, P321, DOI 10.1007/978-3-642-24372-1_23
   Lowe G., 2011, COMMUNICATING PROCES
   Lowe G., 2014, TECHNICAL REPORT
   McLendon W, 2005, J PARALLEL DISTR COM, V65, P901, DOI 10.1016/j.jpdc.2005.03.007
   ORZAN S, 2004, THESIS FREE U AMSTER
   REIF JH, 1985, INFORM PROCESS LETT, V20, P229, DOI 10.1016/0020-0190(85)90024-9
   Renault E., 2015, P TOOLS ALG IN PRESS
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Roscoe A.W., 1998, THEORY PRACTICE CONC
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Tomkins D., 2014, P ACM SIGPLAN S PRIN
   University of Oxford, 2013, FAIL DIV REF FDR 3 U
   VARDI MY, 1986, P LOG COMP SCI
NR 27
TC 13
Z9 17
U1 6
U2 28
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2016
VL 18
IS 2
BP 129
EP 147
DI 10.1007/s10009-015-0382-1
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK5QQ
UT WOS:000374975200002
DA 2024-07-18
ER

PT J
AU Refsdal, A
   Solhaug, B
   Stolen, K
AF Refsdal, Atle
   Solhaug, Bjornar
   Stolen, Ketil
TI Security risk analysis of system changes exemplified within the oil and
   gas domain
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Security; Risk analysis; Change; Oil and gas
AB Changes, such as the introduction of new technology, may have considerable impact on the risk to which a system or organization is exposed. For example, in the oil and gas domain, introduction of technology that allows offshore installations to be operated from onshore means that fewer people are exposed to risk on the installation, but it also introduces new risks and vulnerabilities. We need suitable methods and techniques to understand how a change will affect the risk picture. This paper presents an approach that offers specialized support for analysis of risk with respect to change. The approach allows links between elements of the target of analyses and the related parts of the risk model to be explicitly captured, which facilitates tool support for identifying the parts of a risk model that need to be reconsidered when a change is made to the target. Moreover, the approach offers language constructs for capturing the risk picture before and after a change. The approach is demonstrated on a case concerning new software technology to support decision making on petroleum installations.
C1 [Refsdal, Atle; Solhaug, Bjornar; Stolen, Ketil] SINTEF ICT, Oslo, Norway.
   [Stolen, Ketil] Univ Oslo, Dept Informat, Oslo, Norway.
C3 SINTEF; University of Oslo
RP Solhaug, B (corresponding author), SINTEF ICT, Oslo, Norway.
EM bjors@sintef.no
CR [Anonymous], METH REP 2005 2012 I
   [Anonymous], 18 ANN INT S INT COU
   [Anonymous], INF SEC S AFR C ISSA
   [Anonymous], 1990, IEC 61025 FAULT TREE
   [Anonymous], INT J ADV LIFE SCI
   [Anonymous], 2007, BAYESIAN NETWORKS
   Aven T, 2006, J HAZARD MATER, V137, P681, DOI 10.1016/j.jhazmat.2006.03.049
   Bergomi Franco, 2013, 2013 International Conference on Availability, Reliability and Security (ARES), P814, DOI 10.1109/ARES.2013.109
   Gigerenzer G., 2002, Calculated risks: How to know when numbers deceive you
   Hogganvik I, 2005, 2005 International Symposium on Empirical Software Engineering (ISESE), Proceedings, P13, DOI 10.1109/ISESE.2005.1541810
   Hogganvik I, 2006, LECT NOTES COMPUT SC, V4199, P574
   Howard R, 2005, Decision Analysis, V2, P127, DOI [10.1287/deca.1050.0020, DOI 10.1287/DECA.1050.0020]
   Howard R.A., 1971, SEMIMARKOV DECISION, V1
   International Electrotechnical Commission, 1995, IEC 61165 APPL MARK
   International Organization for Standardization, 2009, ISO 31000 RISK MAN P
   Lund Mass Soldal, 2011, Foundations of Security Analysis and Design VI. FOSAD Tutorial Lectures: LNCS 6858, P231, DOI 10.1007/978-3-642-23082-0_9
   Lund MS, 2011, MODEL-DRIVEN RISK ANALYSIS: THE CORAS APPROACH, P3, DOI 10.1007/978-3-642-12323-8
   Object Management Group, 2009, FORMAL20090202 OMG
   Seehusen Fredrik, 2012, Multidisciplinary Research and Practice for Information Systems. International Cross-Domain Conference and Workshop on Availability, Reliability and Security (CD-ARES 2012). Proceedings, P562, DOI 10.1007/978-3-642-32498-7_43
   Solhaug B., 2013, P 11 INT C STRUCT SA, P3155
   Solhaug B, 2014, J AMB INTEL HUM COMP, V5, P187, DOI 10.1007/s12652-013-0179-6
   Tran L.M.S., 2013, A24343 SINTEF ICT
NR 22
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2015
VL 17
IS 3
BP 251
EP 266
DI 10.1007/s10009-014-0351-0
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7NL
UT WOS:000355682600002
DA 2024-07-18
ER

PT J
AU Zeiss, B
   Kovacs, A
   Pakulin, N
   Stanca-Kaposta, B
AF Zeiss, Benjamin
   Kovacs, Andras
   Pakulin, Nikolay
   Stanca-Kaposta, Bogdan
TI A conformance test suite for TTCN-3 tools Black-Box functional testing
   of TTCN-3 syntax and semantics
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE TTCN-3; Syntax tests; Semantics tests; Conformance testing; Compiler
   testing
AB With more than 10 years of maturing through industrial use and standardization, the Testing and Test Control Notation (TTCN-3) has become a widely used technology that many businesses depend upon for ensuring their product quality. With the rising number of supporters and tools, the demand for a means to assess the standards compliance of TTCN-3 tools has increased. In this article, we describe the motivation, approach, methodology, and results of the still ongoing project to develop a standardized conformance test suite for TTCN-3 tools. We discuss the challenges involved in creating such a test suite, the way to deal with imposed resource limitations of the project, and where we think the effort is heading.
C1 [Zeiss, Benjamin] T Syst Int GmbH, Darmstadt, Germany.
   [Kovacs, Andras] BroadBit, Komarno, Slovakia.
   [Pakulin, Nikolay] Russian Acad Sci ISPRAS, Inst Syst Programming, Moscow, Russia.
   [Stanca-Kaposta, Bogdan] Testing Technol IST GmbH, Berlin, Germany.
C3 Ivannikov Institute for System Programming of the RAS; IST GmbH -
   Innovation Systems Technology
RP Zeiss, B (corresponding author), T Syst Int GmbH, Darmstadt, Germany.
EM Benjamin.Zeiss@t-systems.com; andras.kovacs@broadbit.com;
   npak@ispras.ru; stanca@testingtech.com
RI Kovacs, Andras/K-3382-2013; Pakulin, Nikolay/P-6104-2015
OI Pakulin, Nikolay/0000-0003-1266-7737
CR [Anonymous], 2011, 148822011 ISOIEC
   Esin A., 2004, EXPT SEMANTICS BASED
   European Telecommunications Standards Institute (ETSI), 2010, 201873 ETSI ES
   European Telecommunications Standards Institute (ETSI), 2012, 102950 ETSI ES
   European Telecommunications Standards Institute (ETSI), 2011, 102950 ETSI ES
   Hall P., PLUM HALL VALIDATION
   ISO, 1999, 98991999 ISO ISOIEC
   Xavier L., 2006, SIGPLAN NOTICES, V41, P42
   Zelenov S, 2007, LECT NOTES COMPUT SC, V4581, P365
NR 9
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2014
VL 16
IS 3
BP 285
EP 294
DI 10.1007/s10009-013-0285-y
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HS
UT WOS:000209673100005
DA 2024-07-18
ER

PT J
AU Abbasi, R
   Schiffl, J
   Darulova, E
   Ulbrich, M
   Ahrendt, W
AF Abbasi, Rosa
   Schiffl, Jonas
   Darulova, Eva
   Ulbrich, Mattias
   Ahrendt, Wolfgang
TI Combining rule- and SMT-based reasoning for verifying floating-point
   Java programs in KeY
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Deductive verification; Floating-point arithmetic; Transcendental
   functions
ID LIBRARY
AB Deductive verification has been successful in verifying interesting properties of real-world programs. One notable gap is the limited support for floating-point reasoning. This is unfortunate, as floating-point arithmetic is particularly unintuitive to reason about due to rounding as well as the presence of the special values infinity and 'Not a Number' (NaN). In this article, we present the first floating-point support in a deductive verification tool for the Java programming language. Our support in the KeY verifier handles floating-point arithmetics, transcendental functions, and potentially rounding-type casts. We achieve this with a combination of delegation to external SMT solvers on the one hand, and KeY-internal, rule-based reasoning on the other hand, exploiting the complementary strengths of both worlds. We evaluate this integration on new benchmarks and show that this approach is powerful enough to prove the absence of floating-point special values-often a prerequisite for correct programs-as well as functional properties, for realistic benchmarks.
C1 [Abbasi, Rosa; Darulova, Eva] MPI SWS, Saarbrucken, Germany.
   [Schiffl, Jonas; Ulbrich, Mattias] Karlsruhe Inst Technol, Karlsruhe, Germany.
   [Darulova, Eva] Uppsala Univ, Uppsala, Sweden.
   [Ahrendt, Wolfgang] Chalmers Univ Technol, Gothenburg, Sweden.
C3 Helmholtz Association; Karlsruhe Institute of Technology; Uppsala
   University; Chalmers University of Technology
RP Abbasi, R (corresponding author), MPI SWS, Saarbrucken, Germany.
EM rosaabbasi@mpi-sws.org; jonas.schiffl@kit.edu; eva@mpi-sws.org;
   ulbrich@kit.edu; ahrendt@chalmers.se
RI Darulova, Eva/AAV-5935-2021
OI Darulova, Eva/0000-0002-6848-3163; Ahrendt,
   Wolfgang/0000-0002-5671-2555; Schiffl, Jonas/0000-0002-9882-8177;
   Abbasi, Rosa/0000-0003-1495-3470; Ulbrich, Mattias/0000-0002-2350-1831
FU Deutsche Forschungsgemeinschaft (DFG, German Research Foundation)
   [387674182]
FX This research was partially funded by the Deutsche
   Forschungsgemeinschaft (DFG, German Research Foundation) project
   387674182. The authors would like to thank Daniel Eddeland, who together
   with co-author W. Ahrendt performed prestudies which impacted the
   current work.
CR Abbasi R., 2021, TOOLS ALGORITHMS CON
   Ahrendt Wolfgang, 2016, LNCS, V10001
   Akbarpour B, 2010, J AUTOM REASONING, V44, P175, DOI 10.1007/s10817-009-9149-2
   [Anonymous], 2008, INT S SOFTWARE TESTI
   [Anonymous], 2019, SLOW VERIFICATION PR
   [Anonymous], 2019, QF FP SMT BENCHMARKS
   Astrauskas V, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360573
   Barr E.T., 2013, PRINCIPLES PROGRAMMI
   BARRETT C., 2011, Computer Aided Verification
   Barrett Clark, 2010, P 8 INT WORKSH SAT M
   Beckert B., 2018, ARXIV
   Benz F., 2012, PROGRAMMING LANGUAGE
   Beyer Dirk, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12079), P347, DOI 10.1007/978-3-030-45237-7_21
   Blanchet B., 2003, PROGRAMMING LANGUAGE
   Boldo S., 2009, INTELLIGENT COMPUTER
   Boldo S, 2013, J AUTOM REASONING, V50, P423, DOI 10.1007/s10817-012-9255-4
   Boldo S, 2011, P S COMP ARITHM, P243, DOI 10.1109/ARITH.2011.40
   Brain M., 2019, TOOLS ALGORITHMS CON
   Brain M, 2015, P S COMP ARITHM, P160, DOI 10.1109/ARITH.2015.26
   Chapman R., 2014, INTERACTIVE THEOREM
   Chen L., 2008, ASIAN S PROGRAMMING
   Chiang W.F., 2014, PRINCIPLES PRACTICE
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   Cok DR, 2011, LECT NOTES COMPUT SC, V6617, P472, DOI 10.1007/978-3-642-20398-5_35
   Cordeiro L.C., 2018, LECT NOTES COMPUT SC
   Cuoq P., 2012, SOFTWARE ENG FORMAL
   Darulova E., 2018, LECT NOTES COMPUT SC
   Darulova E, 2017, ACM T PROGR LANG SYS, V39, DOI 10.1145/3014426
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Eilers M., 2018, LECT NOTES COMPUT SC
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   Fox A., 2017, FORMAL MODEL IEEE FL
   Fumex C., 2017, VERIFIED SOFTWARE TH
   Ge Y., 2009, LECT NOTES COMPUT SC
   Gosling J., 2000, The Java Language Specification
   Goubault Eric, 2013, Programming Languages and Systems. 11th Asian Symposium, APLAS 2013. Proceedings: LNCS 8301, P50, DOI 10.1007/978-3-319-03542-0_4
   Goubault E, 2011, LECT NOTES COMPUT SC, V6538, P232, DOI 10.1007/978-3-642-18275-4_17
   Harel David, 2001, Handbook of philosophical logic, V4, P99, DOI 10.1007/978-94-017-0456-4_2
   Harrison J, 2000, FORM METHOD SYST DES, V16, P271, DOI 10.1023/A:1008712907154
   IEEE C.S., 2008, 7542008 IEEE
   Izycheva A., 2020, STATIC ANAL S SAS
   Jacobs B, 2011, LECT NOTES COMPUT SC, V6617, P41, DOI 10.1007/978-3-642-20398-5_4
   Jacobsen C, 2015, ELECTRON NOTES THEOR, V317, P101, DOI 10.1016/j.entcs.2015.10.010
   Jeannet B, 2009, LECT NOTES COMPUT SC, V5643, P661, DOI 10.1007/978-3-642-02658-4_52
   Lam MO, 2013, PARALLEL COMPUT, V39, P146, DOI 10.1016/j.parco.2012.08.002
   Leavens G. T., 2006, Design by Contract with JML
   Leavens Gary T, 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI [10.1145/1127878.1127884, DOI 10.1145/1127878.1127884]
   Leino K.R.M., 2008, THIS IS BOOGIE, V2
   Magron V, 2017, ACM T MATH SOFTWARE, V43, DOI 10.1145/3015465
   Marché C, 2004, J LOGIC ALGEBR PROGR, V58, P89, DOI 10.1016/j.jlap.2003.07.006
   McCormick JohnW., 2015, BUILDING HIGH INTEGR
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Moscato M, 2017, LECT NOTES COMPUT SC, V10488, P213, DOI 10.1007/978-3-319-66266-4_14
   Müller P, 2016, LECT NOTES COMPUT SC, V9583, P41, DOI 10.1007/978-3-662-49122-5_2
   Muller JM, 2010, HANDBOOK OF FLOATING-POINT ARITHMETIC, P1, DOI 10.1007/978-0-8176-4705-6
   Sicun Gao, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P208, DOI 10.1007/978-3-642-38574-2_14
   Siegel S.F., 2006, INT S SOFTWARE TESTI
   Solovyev A, 2019, ACM T PROGR LANG SYS, V41, DOI 10.1145/3230733
NR 58
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2023
VL 25
IS 2
SI SI
BP 185
EP 204
DI 10.1007/s10009-022-00691-x
EA MAR 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF2J5
UT WOS:000945784800001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Bortolussi, L
   Cairoli, F
   Paoletti, N
   Smolka, SA
   Stoller, SD
AF Bortolussi, Luca
   Cairoli, Francesca
   Paoletti, Nicola
   Smolka, Scott A.
   Stoller, Scott D.
TI Neural predictive monitoring and a comparison of frequentist and
   Bayesian approaches
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Predictive monitoring; Runtime verification; Hybrid automata
   reachability; Neural networks; Conformal prediction; Bayesian inference
ID VERIFICATION; NETWORKS
AB Neural state classification (NSC) is a recently proposed method for runtime predictive monitoring of hybrid automata (HA) using deep neural networks (DNNs). NSC trains a DNN as an approximate reachability predictor that labels an HA state x as positive if an unsafe state is reachable from x within a given time bound, and labels x as negative otherwise. NSC predictors have very high accuracy, yet are prone to prediction errors that can negatively impact reliability. To overcome this limitation, we present neural predictive monitoring (NPM), a technique that complements NSC predictions with estimates of the predictive uncertainty. These measures yield principled criteria for the rejection of predictions likely to be incorrect, without knowing the true reachability values. We also present an active learning method that significantly reduces the NSC predictor's error rate and the percentage of rejected predictions. We develop two versions of NPM based, respectively, on the use of frequentist and Bayesian techniques to learn the predictor and the rejection rule. Both versions are highly efficient, with computation times on the order of milliseconds, and effective, managing in our experimental evaluation to successfully reject almost all incorrect predictions. In our experiments on a benchmark suite of six hybrid systems, we found that the frequentist approach consistently outperforms the Bayesian one. We also observed that the Bayesian approach is less practical, requiring a careful and problem-specific choice of hyperparameters.
C1 [Bortolussi, Luca; Cairoli, Francesca] Univ Trieste, Dept Math & Geosci, Trieste, Italy.
   [Bortolussi, Luca] Univ Saarland, Modelling & Simulat Grp, Saarbrucken, Germany.
   [Paoletti, Nicola] Royal Holloway Univ London, Dept Comp Sci, London, England.
   [Smolka, Scott A.; Stoller, Scott D.] SUNY Stony Brook, Dept Comp Sci, New York, NY USA.
C3 University of Trieste; Saarland University; University of London; Royal
   Holloway University London; State University of New York (SUNY) System;
   State University of New York (SUNY) Stony Brook
RP Paoletti, N (corresponding author), Royal Holloway Univ London, Dept Comp Sci, London, England.
EM nclpltt@gmail.com
RI Paoletti, Nicola/AAM-2322-2020
OI Paoletti, Nicola/0000-0002-4723-5363; Smolka, Scott/0000-0002-7348-630X
FU UK NCSC project "PM-CPS" [4217549]; Italian PRIN project "SEDUCE"
   [2017TWRCNB]; German DFG "multimode" project; U.S. ONR
   [N00014-20-1-2751]; U.S. NSF [CCF-1954837, CPS-1446832, CCF-1918225]
FX This work has been partially supported by the UK NCSC project "PM-CPS"
   n. 4217549, the Italian PRIN project "SEDUCE" n. 2017TWRCNB, the German
   DFG "multimode" project, U.S. ONR grant N00014-20-1-2751 and U.S. NSF
   grants CCF-1954837, CPS-1446832, and CCF-1918225.
CR Abadi M, 2016, ACM SIGPLAN NOTICES, V51, P1, DOI [10.1145/3022670.2976746, 10.1145/2951913.2976746]
   Althoff M., 2015, P WORKSH APPL VER CO, P120, DOI DOI 10.29007/ZBKV
   Alur R., 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P273
   [Anonymous], 2011, Optimal Experimental Design with R
   Babaee R, 2019, LECT NOTES COMPUT SC, V11757, P111, DOI 10.1007/978-3-030-32079-9_7
   Babaee R, 2018, LECT NOTES COMPUT SC, V11237, P187, DOI 10.1007/978-3-030-03769-7_11
   Bak S, 2019, INT J SOFTW TOOLS TE, V21, P87, DOI 10.1007/s10009-017-0458-1
   Bak S, 2014, REAL TIM SYST SYMP P, P138, DOI 10.1109/RTSS.2014.21
   Balasubramanian VN, 2009, COMPUT CARDIOL, V36, P5
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P135, DOI 10.1007/978-3-319-75632-5_5
   Batuwita R, 2013, IMBALANCED LEARNING: FOUNDATIONS, ALGORITHMS, AND APPLICATIONS, P83
   Bingham E, 2019, J MACH LEARN RES, V20
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   Bogomolov S, 2019, PROCEEDINGS OF THE 2019 22ND ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC '19), P39, DOI 10.1145/3302504.3311804
   Bortolussi Luca, 2019, From Reactive Systems to Cyber-Physical Systems. Essays Dedicated to Scott A. Smolka on the Occasion of His 65th Birthday. Lecture Notes in Computer Science (LNCS 11500), P225, DOI 10.1007/978-3-030-31514-6_13
   Bortolussi L, 2019, LECT NOTES COMPUT SC, V11757, P129, DOI 10.1007/978-3-030-32079-9_8
   Bortolussi L, 2016, INFORM COMPUT, V247, P235, DOI 10.1016/j.ic.2016.01.004
   Boughorbel S, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177678
   Brefeld U, 2003, LECT NOTES ARTIF INT, V2837, P23
   Chen X, 2017, REAL TIM SYST SYMP P, P297, DOI 10.1109/RTSS.2017.00035
   Chollet F., 2018, DEEP LEARNING WITH R
   Dayoub F, 2017, IEEE COMPUT SOC CONF, P498, DOI 10.1109/CVPRW.2017.75
   Deshmukh JV, 2017, FORM METHOD SYST DES, V51, P5, DOI 10.1007/s10703-017-0286-7
   Djeridane B, 2006, IEEE DECIS CONTR P, P3034, DOI 10.1109/CDC.2006.377184
   Dokhanchi A, 2014, LECT NOTES COMPUT SC, V8734, P231, DOI 10.1007/978-3-319-11164-3_19
   Gal Y, 2017, PR MACH LEARN RES, V70
   Gal Yarin, 2016, Uncertainty in deep learning
   Gammerman A, 2007, COMPUT J, V50, P151, DOI [10.1093/comjnl/bxl065, 10.1093/comjnl/bx1065]
   Guo CA, 2017, PR MACH LEARN RES, V70
   Henzinger TA, 1998, J COMPUT SYST SCI, V57, P94, DOI 10.1006/jcss.1998.1581
   HORNIK K, 1989, NEURAL NETWORKS, V2, P359, DOI 10.1016/0893-6080(89)90020-8
   Ivanov R, 2019, PROCEEDINGS OF THE 2019 22ND ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC '19), P169, DOI 10.1145/3302504.3311806
   Jordan MI, 1999, MACH LEARN, V37, P183, DOI 10.1023/A:1007665907178
   Jordaney R, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P625
   MACKAY DJC, 1992, NEURAL COMPUT, V4, P415, DOI [10.1162/neco.1992.4.3.415, 10.1162/neco.1992.4.3.448]
   Makili LE, 2012, FUSION SCI TECHNOL, V62, P347, DOI 10.13182/FST12-A14626
   MASSART P, 1990, ANN PROBAB, V18, P1269, DOI 10.1214/aop/1176990746
   Neal RM, 2011, CH CRC HANDB MOD STA, P113
   Paoletti N, 2017, LECT N BIOINFORMAT, V10545, P214, DOI 10.1007/978-3-319-67471-1_13
   Papadopoulos Harris, 2008, Tools in Artificial Intelligence, P315
   Paszke A, 2019, ADV NEUR IN, V32
   Phan D, 2018, LECT NOTES COMPUT SC, V11138, P422, DOI 10.1007/978-3-030-01090-4_25
   Pop Remus, 2018, ARXIV PREPRINT ARXIV
   Qin X, 2019, PROCEEDINGS OF THE 2019 22ND ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC '19), P266, DOI 10.1145/3302504.3313353
   Rasmussen CE, 2005, ADAPT COMPUT MACH LE, P1
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Sauter G., 2009, P 21 NORD WORKSH PRO, P20
   Sha L, 2001, IEEE SOFTWARE, V18, P20
   Shafer G, 2008, J MACH LEARN RES, V9, P371
   Sicun Gao, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P208, DOI 10.1007/978-3-642-38574-2_14
   Stoller S.D., 2018, NEURAL STATE CLASSIF
   Toccaceli P, 2019, MACH LEARN, V108, P489, DOI 10.1007/s10994-018-5754-9
   Tomlin C. J., 2018, ARXIV PREPRINT ARXIV
   Tran Dustin, 2016, Edward: A library for probabilistic modeling, inference, and criticism
   Van der Vaart A. W., 2000, ASYMPTOTIC STAT
   Vladimir, 2014, NEWNES
   Vovk Vladimir, 2005, Algorithmic Learning in a Random World
   Xin Chen, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P258, DOI 10.1007/978-3-642-39799-8_18
   Yel E, 2020, IEEE ROBOT AUTOM MAG, V27, P102, DOI 10.1109/MRA.2020.2981114
   Yoon H, 2019, LECT NOTES COMPUT SC, V11757, P349, DOI 10.1007/978-3-030-32079-9_20
   Zhang X., 2019, BAYESIAN NEURAL NETW
NR 61
TC 4
Z9 4
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2021
VL 23
IS 4
SI SI
BP 615
EP 640
DI 10.1007/s10009-021-00623-1
EA MAY 2021
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WK6KY
UT WOS:000653614600001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU El Ballouli, R
   Bensalem, S
   Bozga, M
   Sifakis, J
AF El Ballouli, Rim
   Bensalem, Saddek
   Bozga, Marius
   Sifakis, Joseph
TI Programming dynamic reconfigurable systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Architectural motifs; Components; Reconfigurable systems
ID SPECIFICATION; CONNECTORS
AB DR-BIP is an extension of the BIP component framework intended for programming reconfigurable systems encompassing various aspects of dynamism. It relies on architectural motifs to structure the architecture of a system and to coordinate its reconfiguration at runtime. An architectural motif defines a set of interacting components that evolve according to reconfiguration rules. With DR-BIP, the dynamism can be captured as the inter-play of dynamic changes in three independent directions: (1) the organization of interactions between instances of components in a given configuration; (2) the reconfiguration mechanisms allowing creation/deletion of components and management of their interaction according to a given architectural motif; and (3) the migration of components between predefined architectural motifs which characterizes dynamic execution environments. The paper lays down the formal foundation of DR-BIP, illustrates its expressiveness on few examples and discusses avenues for dynamic reconfigurable system design.
C1 [El Ballouli, Rim; Bensalem, Saddek; Bozga, Marius; Sifakis, Joseph] Univ Grenoble Alpes, Grenoble INP, VERIMAG, CNRS,Inst Engn, F-38000 Grenoble, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS)
RP Bozga, M (corresponding author), Univ Grenoble Alpes, Grenoble INP, VERIMAG, CNRS,Inst Engn, F-38000 Grenoble, France.
EM Marius.Bozga@univ-grenoble-alpes.fr
FU European Union [700665]
FX The research leading to these results has received funding from the
   European Union Horizon 2020 research and innovation programme under
   grant agreement no. 700665 CITADEL (Critical Infrastructure Protection
   using Adaptive MILS).
CR Abdellatif T., 2010, Proceedings of the tenth ACM international conference on Embedded software, P229
   Aguirre N, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P271, DOI 10.1109/ASE.2002.1115028
   Allen R, 1998, LECT NOTES COMPUT SC, V1382, P21, DOI 10.1007/BFb0053581
   [Anonymous], 2010, P INT WORKSH FORM AS
   Ballouli Rim, 2018, Leveraging Applications of Formal Methods, Verification and Validation Distributed Systems. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11246), P304, DOI 10.1007/978-3-030-03424-5_20
   Basu A, 2006, I C SOFTW ENG FORM M, P3
   Basu A, 2011, IEEE SOFTWARE, V28, P41, DOI 10.1109/MS.2011.27
   Bergenhem C, 2015, IEEE INT C INTELL TR, P1989, DOI 10.1109/ITSC.2015.322
   Bliudze S, 2008, IEEE T COMPUT, V57, P1315, DOI 10.1109/TC.2008.26
   Bonakdarpour B, 2012, DISTRIB COMPUT, V25, P383, DOI 10.1007/s00446-012-0168-6
   Bozga Marius, 2012, Software Composition. Proceedings 11th International Conference, SC 2012, P1, DOI 10.1007/978-3-642-30564-1_1
   Bozga M, 2019, LECT NOTES COMPUT SC, V11428, P3, DOI 10.1007/978-3-030-17465-1_1
   Bradbury J.S., 2004, Proceedings of the 1st ACM SIGSOFT Workshop on Self-managed Systems. WOSS '04, P28, DOI [10.1145/1075405.1075411, DOI 10.1145/1075405.1075411]
   Butting Arvid, 2017, CEUR WORKSHOP P, V2019, P10
   Canal C, 1999, INT FED INFO PROC, V12, P107
   Cavalcante E, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P31, DOI 10.1109/WICSA.2015.21
   Cimatti A, 2019, LECT NOTES COMPUT SC, V11698, P200, DOI 10.1007/978-3-030-26601-1_14
   De Nicola R, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2619998
   Edelmann R, 2017, J LOG ALGEBR METHODS, V92, P19, DOI 10.1016/j.jlamp.2017.06.003
   El Ballouli Rim, 2018, Formal Aspects of Component Software. 15th International Conference (FACS 2018). Proceedings: Lecture Notes in Computer Science (LNCS 11222), P118, DOI 10.1007/978-3-030-02146-7_6
   Endler M., 1992, International Workshop on Configurable Distributed Systems, P68
   Garlan D., 2014, WORKSH FUT SOFTW ENG, P29, DOI DOI 10.1145/2593882.2593886
   Heim R., 2016, SOFTW ARCH 10 EUR C
   Kimmell TA, 2019, CONSEN STUDY REPORTS, P40
   Le Metayer D., 1996, Software Engineering Notes, V21, P15, DOI 10.1145/250707.239105
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P336, DOI 10.1109/32.385971
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Mavridou A, 2017, LECT NOTES COMPUT SC, V10487, P39, DOI 10.1007/978-3-319-68034-7_3
   Mavridou A, 2017, J LOG ALGEBR METHODS, V86, P2, DOI 10.1016/j.jlamp.2016.05.002
   Medvidovic N., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P44, DOI 10.1109/ICSE.1999.840994
   Nicola Rocco, 2018, Leveraging Applications of Formal Methods, Verification and Validation Distributed Systems. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11246), P13, DOI 10.1007/978-3-030-03424-5_2
   Nouri Ayoub, 2018, International Journal of Critical Computer-Based Systems, V8, P340
   Nouyan S, 2009, IEEE T EVOLUT COMPUT, V13, P695, DOI 10.1109/TEVC.2008.2011746
   Quintero C.E.C., 2001, P 2001 ACM S APPL CO, P134
   Sanchez A, 2015, COMPUT LANG SYST STR, V44, P218, DOI 10.1016/j.cl.2015.07.001
   Taentzer G, 2000, LECT NOTES COMPUT SC, V1764, P179
   Taivalsaari A, 2014, P INT COMP SOFTW APP, P338, DOI 10.1109/COMPSAC.2014.56
   Verimag, 2018, DR BIP PROT
   WERMELINGER M, 1998, IEE P-SOFTW, P111
NR 40
TC 9
Z9 9
U1 2
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2021
VL 23
IS 5
BP 701
EP 719
DI 10.1007/s10009-020-00596-7
EA JAN 2021
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XD7NM
UT WOS:000605119500001
DA 2024-07-18
ER

PT J
AU Charvát, L
   Smrcka, A
   Vojnar, T
AF Charvat, Lukas
   Smrcka, Ales
   Vojnar, Tomas
TI Utilizing parametric systems for detection of pipeline hazards
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Microprocessor; Data hazard; Control hazard; Formal methods; Parametric
   systems
ID SOLVER
AB The current stress on having a rapid development cycle for microprocessors featuring pipeline-based execution leads to a high demand of automated techniques supporting the design, including a support for its verification. We present an automated approach that combines static analysis of data paths, SMT solving, and formal verification of parametric systems in order to discover flaws caused by improperly handled data and control hazards between pairs of instructions. In particular, we concentrate on synchronous, single-pipelined microprocessors with in-order execution of instructions. The paper unifies and better formalizes our previous works on read-after-write, write-after-read, and write-after-write hazards and extends them to be able to handle control hazards in microprocessors with a single pipeline too. The approach has been implemented in a tool called Hades, and we present promising experimental results obtained using the tool on multiple pipelined microprocessors.
C1 [Charvat, Lukas; Smrcka, Ales; Vojnar, Tomas] Brno Univ Technol, Fac Informat Technol, Bozetechova 2, Brno 61266, Czech Republic.
C3 Brno University of Technology
RP Charvát, L (corresponding author), Brno Univ Technol, Fac Informat Technol, Bozetechova 2, Brno 61266, Czech Republic.
EM icharvat@fit.vutbr.cz; smrcka@fit.vutbr.cz; vojnar@fit.vutbr.cz
RI Vojnar, Tomas/K-5057-2015; Smrcka, Ales/L-9746-2015
OI Vojnar, Tomas/0000-0002-2746-8792; Smrcka, Ales/0000-0002-3638-6916
FU Czech Science Foundation [20-07487S]
FX This work was supported by the Czech Science Foundation under the
   project 20-07487S.
CR Aagaard MD, 2003, LECT NOTES COMPUT SC, V2860, P66
   Abdulla PA, 2013, LECT NOTES COMPUT SC, V7737, P476
   [Anonymous], 2019, CODAL ARCHITECTURE D
   [Anonymous], 2014, CADENCE TENSILICA SO
   [Anonymous], 2019, CODASIP STUDIO RAPID
   [Anonymous], 2018, SYNOPSYS ASIP DESIGN
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Bouajjani A., 2004, LNCS, V3114, P197, DOI DOI 10.1007/978-3-540-30579-8
   Brummayer R, 2009, LECT NOTES COMPUT SC, V5505, P174, DOI 10.1007/978-3-642-00768-2_16
   Bryant R.E., 2018, CMUCS18122
   Burch J. R., 1994, Computer Aided Verification. 6th International Conference, CAV '94. Proceedings, P68
   Charvat L., 2014, HADES HADES HARDWARE
   Charvát L, 2016, ELECTRON P THEOR COM, P87, DOI 10.4204/EPTCS.233.9
   Charvát L, 2015, INT WORKSHOP MICROPR, P83, DOI 10.1109/MTV.2014.21
   Charvát L, 2012, INT WORKSHOP MICROPR, P6, DOI 10.1109/MTV.2012.19
   Clarke E, 2006, LECT NOTES COMPUT SC, V3855, P126
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Hao K., P DES AUT TEST EUR D
   Jones RB, 1996, LECT NOTES COMPUT SC, V1166, P159, DOI 10.1007/BFb0031806
   Koelbl A, 2009, DES AUT TEST EUROPE, P196
   Kuhne Ulrich, 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P129
   Mishra P, 2002, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, 2002 PROCEEDINGS, P36, DOI 10.1109/DATE.2002.998247
   Namjoshi KS, 2007, LECT NOTES COMPUT SC, V4349, P299
   Nguyen MD, 2008, IEEE T COMPUT AID D, V27, P2068, DOI 10.1109/TCAD.2008.2006092
   Patterson DavidA., 2012, Computer Organization and Design - The Hardware / Software Interface, V4th
   Van Praet J, 2008, MORG KAUF SER SYST, P65, DOI 10.1016/B978-012374287-2.50007-0
   Velev MN, 2011, ICCAD-IEEE ACM INT, P679, DOI 10.1109/ICCAD.2011.6105403
NR 27
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2022
VL 24
IS 1
SI SI
BP 1
EP 28
DI 10.1007/s10009-020-00591-y
EA SEP 2020
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZT9UB
UT WOS:000574070100001
DA 2024-07-18
ER

PT J
AU Usman, M
   Wang, WX
   Wang, KY
   Yelen, C
   Dini, N
   Khurshid, S
AF Usman, Muhammad
   Wang, Wenxi
   Wang, Kaiyuan
   Yelen, Cagdas
   Dini, Nima
   Khurshid, Sarfraz
TI A study of learning likely data structure properties using machine
   learning models
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Data structure invariants; Machine learning; Korat; Learnability
AB Data structure properties are important for many testing and analysis tasks. For example, model checkers use these properties to find program faults. These properties are often written manually which can be error prone and lead to false alarms. This paper presents the results of controlled experiments performed using existing machine learning (ML) models on various data structures. These data structures are dynamic and reside on the program heap. We use ten data structure subjects and ten ML models to evaluate the learnability of data structure properties. The study reveals five key findings. One, most of the ML models perform well in learning data structure properties, but some of the ML models such as quadratic discriminant analysis and Gaussian naive Bayes are not suitable for learning data structure properties. Two, most of the ML models have high performance even when trained on just 1% of data samples. Three, certain data structure properties such as binary heap and red black tree are more learnable than others. Four, there are no significant differences between the learnability of varied-size (i.e., up to a certain size) and fixed-size data structures. Five, there can be significant differences in performance based on the encoding used. These findings show that using machine learning models to learn data structure properties is very promising. We believe that these properties, once learned, can be used to provide a run-time check to see whether a program state at a particular point satisfies the learned property. Learned properties can also be employed in the future to automate static and dynamic analysis, which would enhance software testing and verification techniques.
C1 [Usman, Muhammad; Wang, Wenxi; Wang, Kaiyuan; Yelen, Cagdas; Dini, Nima; Khurshid, Sarfraz] Univ Texas Austin, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Usman, M (corresponding author), Univ Texas Austin, Austin, TX 78712 USA.
EM muhammadusman@utexas.edu; wenxiw@utexas.edu; kaiyuanw@utexas.edu;
   cagdas@utexas.edu; nima.dini@utexas.cdu; khurshid@utexas.edu
RI Wang, Wenxi/L-8805-2019; usman, muhammad/KMX-2101-2024
FU US National Science Foundation [CCF-1704790, CCF-1718903]
FX We thank Rohan Garg, Emily Ginsburg, Michael Herrington, Tara Kuruvilla,
   Raghav Prakash and the anonymous reviewers for helpful feedback and
   comments. This research was partially supported by the US National
   Science Foundation under Grant Nos. CCF-1704790 and CCF-1718903.
CR ALTMAN NS, 1992, AM STAT, V46, P175, DOI 10.2307/2685209
   [Anonymous], 2016, ARXIV160406737
   [Anonymous], 2018, Advances in Neural Information Processing Systems
   Bacaer N, 2011, VERHULST LOGISTIC EQ, V01, P1838
   Bodik R, 2015, PROCEEDINGS OF THE 20TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING (ICFP'15), P1, DOI 10.1145/2784731.2789052
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Briand LC, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ISSRE.2007.31
   Brouwer AE, 2012, UNIVERSITEXT, P1, DOI 10.1007/978-1-4614-1939-6
   Celik A, 2017, PACMPL, V1
   Chen YF, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P76, DOI 10.23919/FMCAD.2017.8102244
   Clarke E., 2003, Proceedings 2003. Design Automation Conference (IEEE Cat. No.03CH37451), P368
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Csallner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P281, DOI 10.1145/1368088.1368127
   de Moura L, 2015, LECT NOTES ARTIF INT, V9195, P378, DOI 10.1007/978-3-319-21401-6_26
   Demsky B, 2003, ACM SIGPLAN NOTICES, V38, P78, DOI 10.1145/949343.949314
   Dillig I, 2013, ACM SIGPLAN NOTICES, V48, P443, DOI [10.1145/2509136.2509511, 10.1145/2544173.2509511]
   Dini N, 2019, IEEE INT CONF SOFTW, P25, DOI 10.1109/ICST.2019.00013
   Dini N, 2017, SPIN'17: PROCEEDINGS OF THE 24TH ACM SIGSOFT INTERNATIONAL SPIN SYMPOSIUM ON MODEL CHECKING OF SOFTWARE, P182, DOI 10.1145/3092282.3092293
   Dini N, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1934, DOI 10.1145/3167132.3167339
   Elkarablieh Bassem., 2007, ASE 07 P 22 IEEEACM, P64
   Ernst M. D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P449, DOI 10.1109/ICSE.2000.870435
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Garg P, 2016, ACM SIGPLAN NOTICES, V51, P499, DOI 10.1145/2914770.2837664
   Godefroid P., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P174, DOI 10.1145/263699.263717
   Gomes Carla P., 2008, MODEL COUNTING
   Gulwani Sumit, 2010, P 12 INT ACM SIGPLAN, P13, DOI [DOI 10.1145/1836089.1836091, 10.1145/1836089.1836091]
   Hernández J, 2016, SBORNIK PRISPEVKU Z MEZINARODNI VEDECKE KONFERENCE: REGION V ROZVOJI SPOLECNOSTI 2016, P261
   Ho T K, 1995, INT C DOC AN REC
   Hoder K, 2011, LECT NOTES COMPUT SC, V6605, P60, DOI 10.1007/978-3-642-19835-9_7
   Jackson D., 2000, Software Engineering Notes, V25, P14, DOI 10.1145/347636.383378
   Jha S., 2010, P 32 ACM IEEE INT C, V1, P215, DOI DOI 10.1145/1806799.1806833
   Jump M, 2009, ISMM'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P119
   Kazemi S.M, 2017, RELNN DEEP NEURAL MO
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Liskov Barbara., 2001, Program Development in Java: Abstraction, Specification, and Object-Oriented Design
   Malik MZ, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P952, DOI 10.1145/1985793.1985956
   Malik MZ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P859, DOI 10.1145/1368088.1368223
   Manna Z., 1980, ACM Transactions on Programming Languages and Systems, V2, P90, DOI 10.1145/357084.357090
   McMillan KL, 2008, LECT NOTES COMPUT SC, V4963, P413, DOI 10.1007/978-3-540-78800-3_31
   Mera E, 2009, LECT NOTES COMPUT SC, V5649, P281, DOI 10.1007/978-3-642-02846-5_25
   Meyer B, 2016, ARXIV160807637
   Misailovic S., 2007, P FSE ACM, P135
   Molina F, 2019, PROC INT CONF SOFTW, P759, DOI 10.1109/ICSE.2019.00084
   Moller A, 2001, ACM SIGPLAN NOTICES, V36, P221, DOI 10.1145/381694.378851
   Murtagh F., 1991, NEUROCOMPUTING, V2, P183
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Provost F., 2000, Learning from Imbalanced Data Sets. Papers from the AAAI Workshop (Technical Report WS-00-05), P1
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Reynolds JC, 2002, IEEE S LOG, P55, DOI 10.1109/LICS.2002.1029817
   Rish I, 2001, IJCAI, P3
   ROBBINS H, 1951, ANN MATH STAT, V22, P400, DOI 10.1214/aoms/1177729586
   Sagiv M., 1999, Conference Record of POPL '99. 26th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P105, DOI 10.1145/292540.292552
   Sankaranarayanan S, 2004, ACM SIGPLAN NOTICES, V39, P318, DOI 10.1145/982962.964028
   Si X., 2018, P INT C ADV NEURAL I, V31, P7751
   Siddiqui JH, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P250, DOI 10.1109/ICST.2009.48
   Singh S, 2019, LECT NOTES COMPUT SC, V11636, P172, DOI 10.1007/978-3-030-30923-7_10
   Solar-Lezama Armando, 2008, THESIS
   Usman Muhammad, 2019, Model Checking Software. 26th International Symposium, SPIN 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11636), P226, DOI 10.1007/978-3-030-30923-7_13
   Usman M, 2020, 41 ACM SIGPLAN C PRO
   Valiant L.G, 1984, CACM, V27
   Vapnik V.N., 2015, MEASURES COMPLEXITY, P11
   Visser W, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ASE.2000.873645
   Wu W, 1996, ANAL CHIM ACTA, V329, P257, DOI 10.1016/0003-2670(96)00142-0
   Zee K, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P349, DOI 10.1145/1375581.1375624
NR 67
TC 1
Z9 2
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2020
VL 22
IS 5
SI SI
BP 601
EP 615
DI 10.1007/s10009-020-00577-w
EA JUN 2020
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9OM
UT WOS:000538700800001
DA 2024-07-18
ER

PT J
AU Dragomir, I
   Preoteasa, V
   Tripakis, S
AF Dragomir, Iulia
   Preoteasa, Viorel
   Tripakis, Stavros
TI The Refinement Calculus of Reactive Systems Toolset
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Block diagrams; Compositionality; Refinement; Contract synthesis; Formal
   verification; Theorem proving; Isabelle; Simulink
ID SIMULINK MODELS
AB We present the Refinement Calculus of Reactive Systems Toolset, an environment for compositional formal modeling and reasoning about reactive systems, built around Isabelle, Simulink, and Python. The toolset implements the Refinement Calculus of Reactive Systems (RCRS), a contract-based refinement framework inspired by the classic refinement calculus and interface theories. The toolset formalizes the entire RCRS theory in about 30000 lines of Isabelle code. The toolset also contains a translator of Simulink diagrams and a formal analyzer implemented on top of Isabelle. We present the main functionalities of the RCRS Toolset via a series of pedagogical examples and also describe a larger case study from the automotive domain.
C1 [Dragomir, Iulia] GMV Aerosp & Def SAU, Madrid, Spain.
   [Preoteasa, Viorel] Huld, Espoo, Finland.
   [Tripakis, Stavros] Northeastern Univ, Boston, MA 02115 USA.
C3 Northeastern University
RP Tripakis, S (corresponding author), Northeastern Univ, Boston, MA 02115 USA.
EM idragomir@gmv.com; viorel.preoteasa@gmail.com; stavros@northeastern.edu
OI Dragomir, Iulia/0000-0002-5529-6094
FU Academy of Finland; US National Science Foundation [1329759, 1801546];
   European Union's Horizon 2020 Research and Innovation Programme
   [730080]; ECSEL JU MegaM@Rt2 project [737494]; Direct For Computer &
   Info Scie & Enginr; Division Of Computer and Network Systems [1801546]
   Funding Source: National Science Foundation
FX This work has been supported by the Academy of Finland and the US
   National Science Foundation (Awards 1329759 and 1801546). Dragomir was
   partially supported by the European Union's Horizon 2020 Research and
   Innovation Programme under Grant Agreement #730080 (ESROCOS). Preoteasa
   was partially supported by the ECSEL JU MegaM@Rt2 project under Grant
   Agreement #737494.
CR Agrawal A., 2004, ELECTRON NOTES THEOR, V109, P43
   Alur R., 2001, Hybrid Systems: Computation and Control. 4th International Workshop, HSCC 2001. Proceedings (Lecture Notes in Computer Science Vol.2034), P33
   Alur R, 1999, FORM METHOD SYST DES, V15, P7, DOI 10.1023/A:1008739929481
   [Anonymous], 2001, Specification and Development of Interactive Systems: FOCUS on Streams, Interfaces, and Refinement
   [Anonymous], 2019, LCP ISABELLE 2019
   [Anonymous], 1989, CWI Q.
   [Anonymous], 2006, Technical Report
   Back R.-J., 1998, Refinement Calculus
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   BOULTON RJ, 1992, IFIP TC10 WG 10 2 IN, P129
   Chen CQ, 2009, FORM ASP COMPUT, V21, P451, DOI 10.1007/s00165-009-0108-9
   de Alfaro L, 2001, INTERFACE AUTOMATA
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DIJKSTRA EW, 1975, COMMUN ACM, V18, P453, DOI [10.1145/360933.360975, 10.1145/390016.808417]
   Dill D.L., 1987, Trace Theory for Automatic Hierarchical Verification of Speed-independent Circuits
   Dragomir I, 2016, SPIN, P38
   Dragomir I., 2018, REFINEMENT CALCULUS, DOI [10.6084/m9.figshare. 5900911, DOI 10.6084/M9.FIGSHARE.5900911]
   Fan CC, 2016, LECT NOTES COMPUT SC, V9779, P531, DOI 10.1007/978-3-319-41528-4_29
   FREEMAN T, 1991, SIGPLAN NOTICES, V26, P268, DOI 10.1145/113446.113468
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Fritzson P., 2014, PRINCIPLES OBJECT OR, DOI DOI 10.1002/9781118989166
   HENZINGER TA, 1997, SOFTWARE TOOLS TECHN, V1
   Hongwei Xu, 1999, Conference Record of POPL '99. 26th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P214
   Jin X., 2014, P 17 INT C HYBR SYST, P253
   MALIK S, 1994, IEEE T COMPUT AID D, V13, P950, DOI 10.1109/43.293952
   Meenakshi B, 2006, LECT NOTES COMPUT SC, V4260, P606
   Milner R., 1990, The Definition of Standard ML
   Minopoli S., 2016, 19 ACM INT C HYBR SY
   Preoteasa V., 2017, FORTE
   Preoteasa V., 2019, VMCAI 2019 20 INT C
   Preoteasa V., 2014, P EMSOFT 14, P1
   Preoteasa V., 2016, 31 ANN ACM IEEE S LO
   Preoteasa V., 2018, ARXIV171003979 CORR
   Preoteasa V, 2019, LECT NOTES COMPUT SC, V11388, P577, DOI 10.1007/978-3-030-11245-5_27
   Quesel JD, 2016, INT J SOFTW TOOLS TE, V18, P67, DOI 10.1007/s10009-015-0367-0
   Reicherdt Robert, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P190, DOI 10.1007/978-3-319-10431-7_14
   Rondon PM, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P159, DOI 10.1145/1375581.1375602
   Roy P, 2011, INNOV SYST SOFTW ENG, V7, P73, DOI 10.1007/s11334-011-0145-4
   Sfyrla Vassiliki, 2010, 2010 International Symposium on Industrial Embedded Systems (SIES 2010), P217, DOI 10.1109/SIES.2010.5551374
   SISTLA AP, 1987, THEOR COMPUT SCI, V49, P217, DOI 10.1016/0304-3975(87)90008-9
   Tripakis Stavros, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P358, DOI 10.1007/978-3-642-39176-7_22
   Tripakis S., 2005, ACM T EMBED COMPUT S, V4, P779, DOI DOI 10.1145/1113830.1113834
   Tripakis S, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1985342.1985345
   Yang CH, 2012, CONTROL ENG PRACT, V20, P1259, DOI 10.1016/j.conengprac.2012.06.008
   Zhou CY, 2012, DISCRETE EVENT DYN S, V22, P223, DOI 10.1007/s10626-010-0096-1
   Zou L., 2013, EMBEDDED SOFTWARE EM
NR 46
TC 7
Z9 7
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2020
VL 22
IS 6
SI SI
BP 689
EP 708
DI 10.1007/s10009-020-00561-4
EA APR 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OQ9JV
UT WOS:000524630000001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Bloemen, V
   Duret-Lutz, A
   van de Pol, J
AF Bloemen, Vincent
   Duret-Lutz, Alexandre
   van de Pol, Jaco
TI Model checking with generalized Rabin and Fin-less automata
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model checking; Explicit state; LTL; omega-Automata; On-the-fly;
   Generalized; Buchi; Rabin; Multi-core; Parallel
ID LTL
AB In the automata theoretic approach to explicit state LTL model checking, the synchronized product of the model and an automaton that represents the negated formula is checked for emptiness. In practice, a (transition-based generalized) Buchi automaton (TGBA) is used for this procedure. This paper investigates whether using a more general form of acceptance, namely a transition-based generalized Rabin automaton (TGRA), improves the model checking procedure. TGRAs can have significantly fewer states than TGBAs; however, the corresponding emptiness checking procedure is more involved. With recent advances in probabilistic model checking and LTL to TGRA translators, it is only natural to ask whether checking a TGRA directly is more advantageous in practice. We designed a multi-core TGRA checking algorithm and performed experiments on a subset of the models and formulas from the 2015 Model Checking Contest and generated LTL formulas for models from the BEEM database. While we found little to no improvement by checking TGRAs directly, we show how various aspects of a TGRA's structure influences the model checking performance. In this paper, we also introduce a Fin-less acceptance condition, which is a disjunction of TGBAs. We show how to convert TGRAs into automata with Fin-less acceptance and show how a TGBA emptiness procedure can be extended to check Fin-less automata.
C1 [Bloemen, Vincent] Univ Twente, Enschede, Netherlands.
   [Duret-Lutz, Alexandre] LRDE, EPITA, Le Kremlin Bicetre, France.
   [van de Pol, Jaco] Univ Aarhus, Aarhus, Denmark.
C3 University of Twente; Aarhus University
RP Bloemen, V (corresponding author), Univ Twente, Enschede, Netherlands.
EM v.bloemen@utwente.nl; adl@lrde.epita.fr; jaco@cs.au.dk
RI ; Duret-Lutz, Alexandre/I-6764-2017
OI van de Pol, J.C./0000-0003-4305-0625; Duret-Lutz,
   Alexandre/0000-0002-6623-2512
FU 3TU
FX This work is supported by the 3TU.BSR project.
CR [Anonymous], LECT NOTES COMPUTER
   [Anonymous], PPOPP 2016
   [Anonymous], 1986, P 1 S LOG COMP SCI I
   Babiak Tomas, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P24, DOI 10.1007/978-3-319-02444-8_4
   Babiak T, 2015, LECT NOTES COMPUT SC, V9206, P479, DOI 10.1007/978-3-319-21690-4_31
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Ben A. E. Salem, 2014, LNCS, V8413, P440
   Blahoudek Frantisek, 2013, Logic for Programming, Artificial Intelligence and Reasoning. 19th International Conference, LPAR-19, Proceedings: LNCS 8312, P164, DOI 10.1007/978-3-642-45221-5_12
   Bloemen V, 2017, SPIN'17: PROCEEDINGS OF THE 24TH ACM SIGSOFT INTERNATIONAL SPIN SYMPOSIUM ON MODEL CHECKING OF SOFTWARE, P50, DOI 10.1145/3092282.3092288
   Bloemen V, 2016, LECT NOTES COMPUT SC, V10028, P18, DOI 10.1007/978-3-319-49052-6_2
   Chatterjee Krishnendu, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P559, DOI 10.1007/978-3-642-39799-8_37
   Dijkstra E. W., 1982, TEXTS MONOGRAPHS COM, P22
   Duret-Lutz A, 2016, LECT NOTES COMPUT SC, V9938, P122, DOI 10.1007/978-3-319-46520-3_8
   Duret-Lutz A, 2009, LECT NOTES COMPUT SC, V5799, P213, DOI 10.1007/978-3-642-04761-9_17
   Emerson E.A., 1985, PROC 12 ACM S PRINCI, P84
   Esparza J, 2016, FORM METHOD SYST DES, V49, P219, DOI 10.1007/s10703-016-0259-2
   Evangelista Sami, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P269, DOI 10.1007/978-3-642-33386-6_22
   Faragó D, 2009, LECT NOTES COMPUT SC, V5578, P50, DOI 10.1007/978-3-642-02652-2_8
   Filippidis I., 2014, Proceedings of the 2014 International SPIN Symposium on Model Checking of Software, P48
   Holzmann Gerard J., 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P155, DOI 10.1007/978-3-642-31759-0_12
   Holzmann GJ, 2011, IEEE T SOFTWARE ENG, V37, P845, DOI 10.1109/TSE.2010.110
   Kant Gijs, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P692, DOI 10.1007/978-3-662-46681-0_61
   Ketinsky J., 2018, P CAV 18 JUL
   Komárková Z, 2014, LECT NOTES COMPUT SC, V8837, P235, DOI 10.1007/978-3-319-11936-6_17
   Kordon F., 2015, COMPLETE RESULTS 201
   Laarman Alfons, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P32, DOI 10.1007/978-3-642-38088-4_3
   Laarman A, 2011, LECT NOTES COMPUT SC, V6617, P506, DOI 10.1007/978-3-642-20398-5_40
   Liu Y, 2009, LECT NOTES COMPUT SC, V5885, P426
   Lowe G., 2015, INT J SOFTW TOOLS TE, P1
   Manna Z., 1987, P PODC 87, P205
   Müller D, 2017, ELECTRON P THEOR COM, P180, DOI 10.4204/EPTCS.256.13
   Pelanek R, 2007, BEEM BENCHMARKS EXPL, P263
   Renault E, 2016, INT J SOFTW TOOLS TE, V19, P1
   Schwoon S, 2005, LECT NOTES COMPUT SC, V3440, P174
   Wijs A, 2016, LECT NOTES COMPUT SC, V9780, P472, DOI 10.1007/978-3-319-41540-6_26
NR 35
TC 4
Z9 4
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2019
VL 21
IS 3
SI SI
BP 307
EP 324
DI 10.1007/s10009-019-00508-4
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY4RT
UT WOS:000468116300005
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Zech, P
   Felderer, M
   Breu, R
AF Zech, Philipp
   Felderer, Michael
   Breu, Ruth
TI Knowledge-based security testing of web applications by logic
   programming
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Security testing; Model-based testing; Risk-based testing; Test data
   generation; Logic programming; Web applications; Knowledge management
ID TEST-GENERATION; SPECIFICATION; VERIFICATION; TAXONOMY
AB This article introduces a new method for knowledge-based security testing by logic programming and the related tool implementation for model-based non-functional security testing of web applications. Our method helps to overcome the current prevalent focus on functional instead of non-functional (or negative) requirements as well as the required high level of security knowledge when performing non-functional security testing. It addresses issues like considering non-functional requirements for testing, managing the virtually infinite amount of negative security test cases, advancing non-functional security testing away from its prevalent penetration testing-like style, and making non-functional security testing feasible for testers that are not experts in security via a security knowledge base. The method and its model-based tool implementation are evaluated in two studies, which show the method's effectiveness in detecting vulnerabilities in web applications and thus, also its value in making software system more secure.
C1 [Zech, Philipp; Felderer, Michael; Breu, Ruth] Univ Innsbruck, Inst Comp Sci, Innsbruck, Austria.
C3 University of Innsbruck
RP Felderer, M (corresponding author), Univ Innsbruck, Inst Comp Sci, Innsbruck, Austria.
EM Michael.Felderer@uibk.ac.at
RI Felderer, Michael/AAF-4909-2020
OI Zech, Philipp/0000-0002-4952-4337
FU University of Innsbruck; Medical University of Innsbruck; Project
   MOBSTECO [FWF P 26194-N15]; Austrian Science Fund (FWF) [P26194] Funding
   Source: Austrian Science Fund (FWF)
FX Open access funding provided by University of Innsbruck and Medical
   University of Innsbruck. This research was partially supported by the
   research Project MOBSTECO (FWF P 26194-N15).
CR Amland S, 2000, J SYST SOFTWARE, V53, P287, DOI 10.1016/S0164-1212(00)00019-4
   [Anonymous], 2008, AST, DOI DOI 10.1145/1370042.1370057
   [Anonymous], 2008, Fuzzing for Software Security
   [Anonymous], 2012, P 7 WORKSH MOD BAS T
   Arkin B, 2005, IEEE SECUR PRIV, V3, P84, DOI 10.1109/MSP.2005.23
   Avancini A., 2010, Proceedings of the 2010 ICSE Workshop on Software Engineering for Secure Systems. Cape Town, South Africa, P65, DOI DOI 10.1145/1809100.1809110
   B?chler M., 2012, 2012 IEEE 6 INT C SO, P253, DOI DOI 10.1109/SERE.2012.38
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   BIEKER U, 1995, DES AUT CON, P605
   Bishop M, 2007, IEEE SECUR PRIV, V5, P84, DOI 10.1109/MSP.2007.159
   Blackburn M., 2001, P QUAL WEEK 2001
   Bo Song, 2011, Proceedings of the 2011 Seventh International Conference on Computational Intelligence and Security (CIS 2011), P568, DOI 10.1109/CIS.2011.131
   Breu M., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P290, DOI 10.1109/ICSEA.2010.51
   Breu R., 2011, INT J, V5, P267
   Buchler M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P858, DOI 10.1109/ICST.2012.187
   Caballero R, 2010, LECT NOTES COMPUT SC, V6009, P191, DOI 10.1007/978-3-642-12251-4_15
   Cenzic, 2014, APPL SEC TRENDS REP
   Chen SB, 2007, CIS WORKSHOPS 2007: INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY WORKSHOPS, P881, DOI 10.1109/CIS.Workshops.2007.203
   DENNEY R, 1991, IEEE SOFTWARE, V8, P49, DOI 10.1109/52.73749
   Diaz D, 1999, GNU PROLOG
   Felderer M., 2010, Proceedings 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), P108, DOI 10.1109/VALID.2010.12
   Felderer M., 2009, 9 INT C QUAL SOFTW Q
   Felderer M, 2016, ADV COMPUT, V101, P1, DOI 10.1016/bs.adcom.2015.11.003
   Felderer M, 2016, SOFTW TEST VERIF REL, V26, P119, DOI 10.1002/stvr.1580
   Felderer M, 2014, INT J SOFTW TOOLS TE, V16, P559, DOI 10.1007/s10009-014-0332-3
   Felderer M, 2011, LECT NOTES COMPUT SC, V6542, P181, DOI 10.1007/978-3-642-19125-1_14
   Ganjisaffar Y, 2014, CRAWLER4J
   GOMEZZAMALLOA M, 2009, PROGRAM, V10, P659, DOI DOI 10.1017/S1471068410000347
   GORLICK MM, 1990, J LOGIC PROGRAM, V8, P95, DOI 10.1016/0743-1066(90)90053-8
   Gotlieb A., 1998, Software Engineering Notes, V23, P53, DOI 10.1145/271775.271790
   Hartman A, 2007, LECT NOTES COMPUT SC, V4383, P204
   Jasper R., 1994, SIGSOFT Software Engineering Notes, P95
   Jürjens J, 2008, ELECTRON NOTES THEOR, V220, P93, DOI 10.1016/j.entcs.2008.11.008
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Jurjens Jan., 2001, REVISED PAPERS 4 INT, P308
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   Legeard B, 2010, PRACTICAL MODEL BASE
   LOTZBEYER H, 2000, 2 WORKSH RUL BAS CON
   Marback A, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P62, DOI 10.1109/IWAST.2009.5069042
   Meudec C, 2001, SOFTW TEST VERIF REL, V11, P81, DOI 10.1002/stvr.225
   Michael C.C., 2005, RISK BASED FUNCTIONA
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Moors A., 2008, CW REPORTS
   Mouelhi T, 2008, LECT NOTES COMPUT SC, V5301, P537, DOI 10.1007/978-3-540-87875-9_38
   Offutt J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P187, DOI 10.1109/ISSRE.2004.13
   Potter B, 2004, IEEE SECUR PRIV, V2, P81, DOI 10.1109/MSP.2004.84
   RandomStorm, 2014, DAMN VULN WEB APPL D
   Schieferdecker I, 2012, IEEE SOFTWARE, V29, P14, DOI 10.1109/MS.2012.13
   T. OWASP, 2013, 10 10 MOST CRITICAL
   Tappenden A, 2005, AGILE 2005, Proceedings, P29, DOI 10.1109/ADC.2005.11
   VEMURI R, 1995, IEEE T VLSI SYST, V3, P201, DOI 10.1109/92.386221
   Wang L., 2007, Proceedings of the Third International Workshop on Software Engi- neering for Secure Systems, SESS '07, P10
   Wassermann G., 2008, P 2008 INT S SOFTW T, P249, DOI DOI 10.1145/1390630.1390661
   Wimmel G, 2002, LECT NOTES COMPUT SC, V2495, P471
   Wysopal C., 2006, ART SOFTWARE SECURIT
   Xiong PL, 2010, ANN CONF PRIV SECUR, P173, DOI 10.1109/PST.2010.5593250
   Xu DX, 2012, IEEE T DEPEND SECURE, V9, P526, DOI 10.1109/TDSC.2012.24
   Xu DX, 2006, IEEE T SOFTWARE ENG, V32, P265, DOI 10.1109/TSE.2006.40
   Zech Philipp, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P112, DOI 10.1007/978-3-642-34026-0_9
   Zech P., 2012, P 1 INT WORKSH MOD D, P5
   Zech P., 2014, 2014 IEEE 8 INT C SO
   Zech P., 2014, 1 INT WORKSH RISK AS
   Zech P, 2017, INT J SOFTW TOOLS TE, V19, P115, DOI 10.1007/s10009-015-0408-8
   Zech P, 2013, 2013 IEEE 7TH INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY - COMPANION (SERE-C), P54, DOI 10.1109/SERE-C.2013.16
   Zech P, 2012, INT CONF QUAL SOFTW, P140, DOI 10.1109/QSIC.2012.31
NR 65
TC 6
Z9 6
U1 0
U2 12
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2019
VL 21
IS 2
BP 221
EP 246
DI 10.1007/s10009-017-0472-3
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS3JE
UT WOS:000463758000006
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Huisman, M
   Rubin, J
AF Huisman, Marieke
   Rubin, Julia
TI Software quality tools and techniques presented in FASE'17
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software engineering; Software foundations; Software quality
AB Software quality assurance aims to ensure that the software product meets the quality standards expected by the customer. This special issue of Software Tools for Technology Transfer is concerned with the foundations on which software quality assurance is built. It introduces the papers that focus on this topic and that have been selected from the 20th International Conference on Fundamental Approaches to Software Engineering (FASE'17).
C1 [Huisman, Marieke] Univ Twente, Enschede, Netherlands.
   [Rubin, Julia] Univ British Columbia, Vancouver, BC, Canada.
C3 University of Twente; University of British Columbia
RP Huisman, M (corresponding author), Univ Twente, Enschede, Netherlands.
EM Marieke.Huisman@ewi.utwente.nl; mjulia@ece.ubc.ca
OI Huisman, Marieke/0000-0003-4467-072X
CR Asavoae IM, 2018, INT J SOFTW TOOLS TE, V20, P739, DOI 10.1007/s10009-018-0500-y
   Cheng Z, 2018, INT J SOFTW TOOLS TE, V20, P645, DOI 10.1007/s10009-018-0491-8
   Courcelle B., 1997, HDB GRAPH GRAMMARS C, V1, P313
   Huisman Marieke, 2017, FUNDAMENTAL APPROACH
   Müller A, 2018, INT J SOFTW TOOLS TE, V20, P615, DOI 10.1007/s10009-018-0502-9
   Schneider S, 2018, INT J SOFTW TOOLS TE, V20, P705, DOI 10.1007/s10009-018-0496-3
   Uva M, 2018, INT J SOFTW TOOLS TE, V20, P665, DOI 10.1007/s10009-018-0503-8
   Wang JY, 2018, INT J SOFTW TOOLS TE, V20, P689, DOI 10.1007/s10009-018-0492-7
NR 8
TC 0
Z9 1
U1 3
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2018
VL 20
IS 6
SI SI
BP 611
EP 613
DI 10.1007/s10009-018-0504-7
PG 3
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GV9OI
UT WOS:000446488000001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Damouche, N
   Martel, M
   Chapoutot, A
AF Damouche, Nasrine
   Martel, Matthieu
   Chapoutot, Alexandre
TI Improving the numerical accuracy of programs by automatic transformation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Program transformation; Floating-point numbers; Static analysis; IEEE754
   standard; Numerical accuracy
AB The dangers of programs performing floating-point computations are well known. This is due to the sensitivity of the results to the way formul' are written. These last years, several techniques have been proposed concerning the transformation of arithmetic expressions in order to improve their numerical accuracy and, in this article, we go one step further by automatically transforming larger pieces of code containing assignments and control structures. We define a set of transformation rules allowing the generation, under certain conditions and in polynomial time, of larger expressions by performing limited formal computations, possibly among several iterations of a loop. These larger expressions are better suited to improve, by reparsing, the numerical accuracy of the program results. We use abstract interpretation-based static analysis techniques to over-approximate the round-off errors in programs and during the transformation of expressions. A tool has been implemented and experimental results are presented concerning classical numerical algorithms and algorithms for embedded systems.
C1 [Damouche, Nasrine; Martel, Matthieu] Univ Perpignan, LAMPS Lab, Via Domitia, Perpignan, France.
   [Chapoutot, Alexandre] Univ Paris Saclay, U2IS, ENSTA ParisTech, 828 Bd Marechaux, F-91762 Palaiseau, France.
C3 Universite Perpignan Via Domitia; Universite Paris Saclay; Institut
   Polytechnique de Paris; ENSTA Paris; Universite Paris Cite
RP Damouche, N (corresponding author), Univ Perpignan, LAMPS Lab, Via Domitia, Perpignan, France.
EM nasrine.damouche@univ-perp.fr; matthieu.martel@univ-perp.fr;
   alexandre.chapoutot@ensta-paristech.fr
OI Damouche, Nasrine/0000-0001-7953-4790; Chapoutot,
   Alexandre/0000-0002-7230-0710
CR Almagor L, 2004, ACM SIGPLAN NOTICES, V39, P231, DOI 10.1145/998300.997196
   [Anonymous], 1989, INTRO NUMERICAL ANAL
   [Anonymous], CF 15
   [Anonymous], 1998, Modern Compiler Implementation in C
   *ANSI IEEE, 2008, 7542008 ANSIIEEE
   Barr ET, 2013, ACM SIGPLAN NOTICES, V48, P549, DOI 10.1145/2480359.2429133
   Benz F, 2012, ACM SIGPLAN NOTICES, V47, P453, DOI 10.1145/2345156.2254118
   Bertrane J., 2011, ACM SIGSOFT Softw. Eng. Notes, V36, P1, DOI DOI 10.1145/1921532.1921553
   Cooper KD, 2002, J SUPERCOMPUT, V23, P7, DOI 10.1023/A:1015729001611
   Cousot P, 2002, ACM SIGPLAN NOTICES, V37, P178, DOI 10.1145/565816.503290
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   CYTRON R, 1993, PLDI 93, P36
   Damouche N, 2015, ELECTRON NOTES THEOR, V317, P47, DOI 10.1016/j.entcs.2015.10.006
   Damouche Nasrine, 2015, Formal Methods for Industrial Critical Systems. 20th International Workshop, FMICS 2015. Proceedings: LNCS 9128, P31, DOI 10.1007/978-3-319-19458-5_3
   Damouche N, 2015, LECT NOTES COMPUT SC, V9527, P143, DOI 10.1007/978-3-319-27436-2_9
   Darulova E, 2014, ACM SIGPLAN NOTICES, V49, P235, DOI 10.1145/2535838.2535874
   Delmas D, 2009, LECT NOTES COMPUT SC, V5825, P53
   Feret J, 2004, LECT NOTES COMPUT SC, V2986, P33
   Feron E, 2010, IEEE CONTR SYST MAG, V30, P50, DOI 10.1109/MCS.2010.938196
   Gao XT, 2013, PROCEEDINGS OF THE 2013 INTERNATIONAL CONFERENCE ON FIELD-PROGRAMMABLE TECHNOLOGY (FPT), P112, DOI 10.1109/FPT.2013.6718340
   Goubault E, 2013, LECT NOTES COMPUT SC, V7935, P1, DOI 10.1007/978-3-642-38856-9_1
   Goubault E, 2011, LECT NOTES COMPUT SC, V6538, P232, DOI 10.1007/978-3-642-18275-4_17
   Hankin E., 1994, LAMBDA CALCULI GUIDE
   Huet G., 2004, COQ PROOFASSISTANT A
   Ioualalen A, 2012, LECT NOTES COMPUT SC, V7460, P75, DOI 10.1007/978-3-642-33125-1_8
   Jones ND, 1996, ACM COMPUT SURV, V28, P480, DOI 10.1145/243439.243447
   KNOOP J, 1994, ACM T PROGR LANG SYS, V16, P1117, DOI 10.1145/183432.183443
   Langlois P., 2010, Proc. of the 4th International Workshop on Par- allel and Symbolic Computation PASCO, P121
   Lerner S, 2002, ACM SIGPLAN NOTICES, V37, P270, DOI 10.1145/565816.503298
   Martel M., 2006, Higher-Order and Symbolic Computation, V19, P7, DOI 10.1007/s10990-006-8608-2
   Martel M, 2012, ELECTRON NOTES THEOR, V287, P3, DOI 10.1016/j.entcs.2012.09.002
   Miné A, 2004, LECT NOTES COMPUT SC, V2986, P3
   Monniaux D, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1353445.1353446
   Muller JM, 2010, HANDBOOK OF FLOATING-POINT ARITHMETIC, P1, DOI 10.1007/978-0-8176-4705-6
   Panchekha P, 2015, ACM SIGPLAN NOTICES, V50, P1, DOI 10.1145/2737924.2737959
   Solovyev A, 2015, LECT NOTES COMPUT SC, V9109, P532, DOI 10.1007/978-3-319-19249-9_33
   STEFFEN B, 1990, LECT NOTES COMPUT SC, V432, P389
   Tate R, 2011, LOG METH COMPUT SCI, V7, DOI 10.2168/LMCS-7(1:10)2011
   Tate R, 2009, ACM SIGPLAN NOTICES, V44, P264, DOI 10.1145/1594834.1480915
   Whitfield DL, 1997, ACM T PROGR LANG SYS, V19, P1053, DOI 10.1145/267959.267960
   Winskel G., 1993, FDN COMPUTING SERIES
NR 41
TC 14
Z9 16
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2017
VL 19
IS 4
BP 427
EP 448
DI 10.1007/s10009-016-0435-0
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ5UW
UT WOS:000404785500004
DA 2024-07-18
ER

PT J
AU Arcaini, P
   Gargantini, A
   Riccobene, E
AF Arcaini, Paolo
   Gargantini, Angelo
   Riccobene, Elvinia
TI Rigorous development process of a safety-critical system: from ASM
   models to Java code
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 4th International Conference on Abstract State Machines, Alloy, B,
   TLA,VDM, and Z (ABZ)
CY JUN 02-06, 2014
CL Toulouse, FRANCE
SP Airbus, CNES, CNRS, CRITT Informatique, CS, ENSEEIHT Toulouse, FME, INP Toulouse, IRIT, Midi Pyrenees Regi, ONERA, SCCH, Univ Paul Sabatier Toulouse
DE Abstract State Machines; Landing Gear System; Refinement; Validation and
   verification; Model based testing; Runtime verification
ID VERIFICATION; SIMULATION; LANGUAGE
AB The paper presents an approach for rigorous development of safety-critical systems based on the Abstract State Machine formal method. The development process starts from a high level formal view of the system and, through refinement, derives more detailed models till the desired level of specification. Along the process, different validation and verification activities are available, as simulation, model review, and model checking. Moreover, each refinement step can be proved correct using an SMT-based approach. As last step of the refinement process, a Java implementation can be developed and linked to the formal specification. The correctness of the implementation w.r.t. its formal specification can be proved by means of model-based testing and runtime verification. The process is exemplified by using a Landing Gear System as case study.
C1 [Arcaini, Paolo] Charles Univ Prague, Fac Math & Phys, Prague, Czech Republic.
   [Gargantini, Angelo] Univ Bergamo, Dept Management Informat & Prod Engn, Bergamo, Italy.
   [Riccobene, Elvinia] Univ Milan, Dept Comp Sci, Milan, Italy.
C3 Charles University Prague; University of Bergamo; University of Milan
RP Arcaini, P (corresponding author), Charles Univ Prague, Fac Math & Phys, Prague, Czech Republic.
EM arcaini@d3s.mff.cuni.cz; angelo.gargantini@unibg.it;
   elvinia.riccobene@unimi.it
RI Gargantini, Angelo/E-6060-2012; Riccobene, Elvinia/B-7517-2013; Arcaini,
   Paolo/J-3616-2017
OI Gargantini, Angelo/0000-0002-4035-0131; Arcaini,
   Paolo/0000-0002-6253-4062
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial Jean-Raymond, 2014, AIRCRAFT LANDING GEA, P19
   [Anonymous], 2014, ABZ 2014 LANDING GEA
   [Anonymous], 2001, Java and the Java Virtual Machine: Definition, Verification, Validation
   [Anonymous], 2014, CCIS, DOI DOI 10.1007/978-3-319-07512-9
   Arcaini P, 2014, CCIS, P95, DOI DOI 10.1007/978-3-319-07512-9_7
   Arcaini P., 2014, INT C ABSTRACT STATE, P36, DOI [10.1007/978-3-319-07512-9_3, DOI 10.1007/978-3-319-07512-9_3]
   Arcaini P., 2012, LNCS, V7186, P223, DOI [10.1007/978-3-642-29860-817, DOI 10.1007/978-3-642-29860-817]
   Arcaini P., 2014, ECE ASST, V70
   Arcaini P, 2013, IEEE ICST WORKSHOP, P178, DOI 10.1109/ICSTW.2013.29
   Arcaini P, 2011, SOFTWARE PRACT EXPER, V41, P155, DOI 10.1002/spe.1019
   Arcaini P, 2010, LECT NOTES COMPUT SC, V5977, P61, DOI 10.1007/978-3-642-11811-1_6
   Arcaini Paolo., 2010, NASA Formal Methods Symposium, P4
   Banach R., 2014, CCIS, V433, P126
   Barnett M, 2003, J SYST SOFTWARE, V65, P199, DOI 10.1016/S0164-1212(02)00041-9
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Berthomieu B., 2014, CCIS, V433, P110, DOI [10.1007/978-3-319-07512, DOI 10.1007/978-3-319-07512, 10.1007/978-3-319-07512-9_8]
   Boniol F., 2014, ABZ 2014 LAND GEAR C
   Boniol F., 2014, CCIS, P1, DOI [10.1007/978-3-319-07512-9_1, DOI 10.1007/978-3-319-07512-9]
   Börger E, 2005, LECT NOTES COMPUT SC, V3717, P264
   Borger E., 2003, Formal Aspects of Computing, V15, P237, DOI 10.1007/s00165-003-0012-7
   Borger E., 2003, ABSTRACT STATE MACHI
   Carioni A, 2008, LECT NOTES COMPUT SC, V5238, P71
   Chen F, 2004, LECT NOTES COMPUT SC, V3308, P357
   Clarke EM, 1999, MODEL CHECKING, P1
   Dausend M., 2012, P TOOL DEM SESS IFM, P21
   Dausend M, 2014, LECT NOTES COMPUT SC, V8477, P174, DOI 10.1007/978-3-662-43652-3_15
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Farahbod R, 2011, SOFTWARE PRACT EXPER, V41, P167, DOI 10.1002/spe.1029
   Gargantini A, 2003, LECT NOTES COMPUT SC, V2589, P263
   Gargantini A, 2001, J UNIVERS COMPUT SCI, V7, P1050
   Gargantini A, 2008, J UNIVERS COMPUT SCI, V14, P1949
   Glasser U., 2013, DAGSTUHL REP, V3, P74
   Hansen D., 2014, ABZ 2014 CCIS, V433, P66, DOI DOI 10.1007/978-3-319-07512-9
   Hierons R, 2000, SOFTW TEST VERIF BEH, V10, P201, DOI 10.1002/1099-1689(200012)10:4<201::AID-STVR214>3.3.CO;2-Q
   Laddad R., 2003, ASPECTJ ACTION PRACT
   Liang H, 2009, INNOV SYST SOFTW ENG, V5, P231, DOI 10.1007/s11334-009-0096-1
   Mammar A., 2014, CCIS, P80
   Mery D., 2014, COMMUN COMPUT PHYS, V433, P154, DOI DOI 10.1007/978-3-319-07512-9_
   PAOLO ARCAINI, 2015, RIGOROUS
   Schellhorn G, 2001, J UNIVERS COMPUT SCI, V7, P952
   Slissenko A, 2008, J UNIVERS COMPUT SCI, V14, P1984
   Utting M., 2006, Practical Model-Based Testing
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
NR 45
TC 16
Z9 17
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2017
VL 19
IS 2
BP 247
EP 269
DI 10.1007/s10009-015-0394-x
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA EQ6BQ
UT WOS:000398167200007
DA 2024-07-18
ER

PT J
AU Ranise, S
   Truong, A
   Traverso, R
AF Ranise, Silvio
   Anh Truong
   Traverso, Riccardo
TI Parameterized model checking for security policy analysis
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Parameterized model checking; Automated security analysis; Backward
   reachability; Access control; Administration
AB We explain how a parameterized model checking technique can be exploited to mechanize the analysis of access control policies. The main advantage of the approach is to reason regardless of the number of users of the system in which the policy is enforced. This permits to obtain more useful results from the analysis; for instance, ensuring that sensitive permissions cannot be leaked regardless of the number of users in the system. We also briefly discuss how some heuristics make the technique scalable to handle (very) large policies. This is demonstrated by a comparative experimental evaluation with state-of-the-art tools for the analysis of access control policies.
C1 [Ranise, Silvio; Anh Truong; Traverso, Riccardo] FBK ST, Via Sommarive 18, I-38123 Trento, Italy.
C3 Fondazione Bruno Kessler
RP Ranise, S (corresponding author), FBK ST, Via Sommarive 18, I-38123 Trento, Italy.
EM ranise@fbk.eu; tatruong@fbk.eu; rtraverso@fbk.eu
OI Ranise, Silvio/0000-0001-7269-9285
CR Abdulla PA, 1996, IEEE S LOG, P313, DOI 10.1109/LICS.1996.561359
   Alberti F., 2011, ASIACCS
   Alberti F, 2011, LECT NOTES ARTIF INT, V6803, P26, DOI 10.1007/978-3-642-22438-6_4
   [Anonymous], 2005, P 12 ACM C COMP COMM
   [Anonymous], 2010, LMCS
   Armando A, 2012, J COMPUT SECUR, V20, P309, DOI 10.3233/JCS-2012-0461
   Beckert B, 2006, IEEE INTELL SYST, V21, P71, DOI 10.1109/MIS.2006.117
   Biere A, 2003, ADV COMPUT, V58, P117
   di Vimercati SD, 2007, INT J COMPUT SCI ENG, V3, P94
   Enderton H. B., 2001, A mathematical introduction to logic
   EROL K, 1995, ARTIF INTELL, V76, P75, DOI 10.1016/0004-3702(94)00080-K
   Ferrara A. L., 2013, TACAS
   FIKES RE, 1971, ARTIF INTELL, V2, P189, DOI 10.1016/0004-3702(71)90010-5
   Ghilardi S., 2010, LNCS
   Gofman M., 2014, INT J SOFTW INF
   Gofman MI, 2010, LECT NOTES COMPUT SC, V6345, P455, DOI 10.1007/978-3-642-15497-3_28
   Gofman MI, 2009, LECT NOTES COMPUT SC, V5505, P46, DOI 10.1007/978-3-642-00768-2_4
   HARRISON MA, 1976, COMMUN ACM, V19, P461, DOI 10.1145/360303.360333
   Jayaraman K., 2011, CCS
   Jayaraman K., 2013, ACM TISSEC, V15
   Jha S, 2008, IEEE T DEPEND SECURE, V5, P242, DOI 10.1109/TDSC.2007.70225
   Li N., 2004, ACM SACMAT, P126
   Ninghui Li, 2006, ACM Transactions on Information and Systems Security, V9, P391, DOI 10.1145/1187441.1187442
   Piskac R, 2010, J AUTOM REASONING, V44, P401, DOI 10.1007/s10817-009-9161-6
   Ramsey FP, 1930, P LOND MATH SOC, V30, P264, DOI 10.1112/plms/s2-30.1.264
   Ranise S., 2015, 30 ACM SIGAPP SAC SA
   Ranise S., 2012, LNCS, P273
   Ranise S, 2014, PROCEEDINGS OF THE 19TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES (SACMAT'14), P103, DOI 10.1145/2613087.2613102
   Ranise S, 2014, LECT NOTES COMPUT SC, V8743, P146, DOI 10.1007/978-3-319-11851-2_10
   Ranise S, 2014, LECT NOTES COMPUT SC, V8566, P260, DOI 10.1007/978-3-662-43936-4_17
   Ranise S, 2013, FORM METHOD SYST DES, V42, P24, DOI 10.1007/s10703-012-0157-1
   SANDHU R., 1999, ACM T INFORM SYST SE, V2, P105, DOI [10.1145/300830.300839, DOI 10.1145/300830.300839]
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Sasturkar A., 2006, CSF
   Sasturkar A, 2011, THEOR COMPUT SCI, V412, P6208, DOI 10.1016/j.tcs.2011.05.009
   Stoller S. D., 2007, CCS
   Tripunitara MV, 2013, IEEE T DEPEND SECURE, V10, P28, DOI 10.1109/TDSC.2012.77
   Uzun Emre., 2012, P 17 ACM S ACCESS CO, P177, DOI 10.1145/2295136.2295169
   Yang P., 2014, J COMPUT SECUR
NR 39
TC 5
Z9 5
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2016
VL 18
IS 5
BP 559
EP 573
DI 10.1007/s10009-015-0410-1
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU1ZY
UT WOS:000382011100006
DA 2024-07-18
ER

PT J
AU Bobot, F
   Filliâtre, JC
   Marché, C
   Paskevich, A
AF Bobot, Francois
   Filliatre, Jean-Christophe
   Marche, Claude
   Paskevich, Andrei
TI Let's verify this with Why3
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal specification; Deductive verification; Automated theorem proving;
   Case study
ID SYSTEM
AB We present solutions to the three challenges of the VerifyThis competition held at the 18th FM symposium in August 2012. These solutions use the Why3 environment for deductive program verification.
C1 [Bobot, Francois] CEA, LIST, Software Reliabil Lab, F-91191 Gif Sur Yvette, France.
   [Filliatre, Jean-Christophe; Marche, Claude; Paskevich, Andrei] CNRS, Rech Informat Lab, UMR 8623, F-91405 Orsay, France.
   [Filliatre, Jean-Christophe; Marche, Claude; Paskevich, Andrei] Inria Saclay Ile de France, Palaiseau, France.
   [Filliatre, Jean-Christophe; Marche, Claude; Paskevich, Andrei] Univ Paris 11, Orsay, France.
C3 Universite Paris Saclay; CEA; Centre National de la Recherche
   Scientifique (CNRS); Universite Paris Saclay; Universite Paris Saclay
RP Marché, C (corresponding author), CNRS, Rech Informat Lab, UMR 8623, F-91405 Orsay, France.
EM Claude.Marche@inria.fr
RI ; Bobot, Francois/S-1579-2018
OI Marche, Claude/0000-0003-3035-1269; Bobot, Francois/0000-0002-6756-0788
CR [Anonymous], 2008, FRAMA C PLATFORM STA
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C, 2007, LECT NOTES COMPUT SC, V4590, P298
   Bertot Y., 2004, TEXT THEORET COMP S
   Bobot F., 2014, LNCS, V8164, P191, DOI [10.1007/978-3-642-54108-710, DOI 10.1007/978-3-642-54108-710]
   Bobot F., 2011, BOOGIE 2011 1 INT WO, P53
   Bobot F., 2013, WHY3 PLATFORM VERSIO
   Bobot Francois, 2008, The Alt-Ergo automated theorem prover
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   Huet G., 1997, Journal of Functional Programming, V7, P549, DOI 10.1017/S0956796897002864
   Leino K.R.M., 2010, P TOOLS EXP WORKSH V
   MARCHE C, 2009, KRAKATOA TOOL DEDUCT
   Moy Y., 2011, JESSIE PLUGIN DEDUCT
   OWRE S, 1992, LECT NOTES ARTIF INT, V607, P748
   Riazanov A., 1999, Automated Deduction - CADE-16. 16th International Conference on Automated Deduction. Proceedings (Lecture Notes in Artificial Intelligence Vol.1632), P292
   Schulz S, 2004, LECT NOTES ARTIF INT, V3097, P223
   Summers AJ, 2011, ACM SIGPLAN NOTICES, V46, P1013, DOI 10.1145/2076021.2048142
   Weidenbach C, 2009, LECT NOTES ARTIF INT, V5663, P140, DOI 10.1007/978-3-642-02959-2_10
NR 19
TC 31
Z9 33
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2015
VL 17
IS 6
BP 709
EP 727
DI 10.1007/s10009-014-0314-5
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT3DN
UT WOS:000362687300005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ferreira, JB
   Barais, O
   Acher, M
   Le Noir, J
   Legay, A
   Baudry, B
AF Ferreira Filho, Joao Bosco
   Barais, Olivier
   Acher, Mathieu
   Le Noir, Jerome
   Legay, Axel
   Baudry, Benoit
TI Generating counterexamples of model-based software product lines
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software product lines; Model-based engineering; Counterexamples
AB In a model-based software product line (MSPL), the variability of the domain is characterized in a variability model and the core artifacts are base models conforming to a modeling language (also called metamodel). A realization model connects the features of the variability model to the base model elements, triggering operations over these elements based on a configuration. The design space of an MSPL is extremely complex to manage for the engineer, since the number of variants may be exponential and the derived product models have to be conforming to numerous well-formedness and business rules. In this paper, the objective is to provide a way to generate MSPLs, called counterexamples (also called antipatterns), that can produce invalid product models despite a valid configuration in the variability model. We describe the foundations and motivate the usefulness of counterexamples (e.g., inference of guidelines or domain-specific rules to avoid earlier the specification of incorrect mappings; testing oracles for increasing the robustness of derivation engines given a modeling language). We provide a generic process, based on the common variability language (CVL) to randomly search the space of MSPLs for a specific modeling language. We develop LineGen a tool on top of CVL and modeling technologies to support the methodology and the process. LineGen targets different scenarios and is flexible to work either with just a domain metamodel as input or also with pre-defined variability models and base models. We validate the effectiveness of this process for three formalisms at different scales (up to 247 metaclasses and 684 rules). We also apply the approach in the context of a real industrial scenario involving a large-scale metamodel.
C1 [Ferreira Filho, Joao Bosco; Barais, Olivier; Acher, Mathieu; Legay, Axel] Univ Rennes 1, INRIA, Rennes, France.
   [Ferreira Filho, Joao Bosco; Barais, Olivier; Acher, Mathieu; Legay, Axel] Univ Rennes 1, IRISA, Rennes, France.
   [Baudry, Benoit] INRIA, Rennes, France.
   [Baudry, Benoit] Simula Res Lab, Lysaker, Norway.
   [Le Noir, Jerome] Thales Res & Technol, Palaiseau, France.
C3 Universite de Rennes; Inria; Universite de Rennes; Inria; Thales Group
RP Ferreira, JB (corresponding author), Univ Rennes 1, INRIA, Rennes, France.
EM joao.ferreira_filho@inria.fr; barais@irisa.fr
RI Barais, Olivier/KIH-2583-2024
OI Barais, Olivier/0000-0002-4551-8562
CR Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Alferez Mauricio, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P20, DOI 10.1007/978-3-642-21347-2_3
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482, DOI 10.1109/ICSE.2013.6606594
   Apel S, 2009, LECT NOTES COMPUT SC, V5563, P4, DOI 10.1007/978-3-642-02408-5_2
   Asirelli Patrizia, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P130, DOI 10.1109/SPLC.2011.34
   Baudry B, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1743546.1743583
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Clarke D, 2011, ACM SIGPLAN NOTICES, V46, P13, DOI 10.1145/1942788.1868298
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Clements P., 2011, SOFTWARE PRODUCT LIN
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2487, P156
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2006, GPCE, P211
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Dhungana D, 2010, J SYST SOFTWARE, V83, P1108, DOI 10.1016/j.jss.2010.02.018
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   Ferreira Filho Joao Bosco, 2012, VARIABILITY YOU WORK, P3
   Filho J. B. F., 2012, 2012 Proceedings of the 3rd International Workshop on Product LinE Approaches in Software Engineering (PLEASE 2012), P5, DOI 10.1109/PLEASE.2012.6229774
   Filho J. B. F., 2013, 17 INT SOFTW PROD LI, P72
   Fleurey Franck, 2011, SDL 2011: Integrating System and Software Modeling. 15th International SDL Forum. Revised Papers, P233, DOI 10.1007/978-3-642-25264-8_18
   Gomez Juan Jose Cadavid, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P131, DOI 10.1109/ICST.2012.93
   Gotlieb A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P773, DOI 10.1109/ICST.2012.174
   Group O., 2007, TECHNICAL REPORT
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139, DOI 10.1109/SPLC.2008.25
   Heidenreich F, 2010, LECT NOTES COMPUT SC, V6210, P69
   ISO, 2010, 42010 ISOIEC FCD
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Perrouin G, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P339, DOI 10.1109/SPLC.2008.38
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Svendsen A., 2011, LNCS, V7167, P187
   Svendsen A, 2010, LECT NOTES COMPUT SC, V6287, P106, DOI 10.1007/978-3-642-15579-6_8
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Thum T., 2014, COMPUTING S IN PRESS
   Voelter M, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P233, DOI 10.1109/SPLINE.2007.23
   Voirin J. L., 2008, 18 INT S INCOSE INT
   Zhang X., 2012, LECT NOTES COMPUTER, V7744, P179
   Ziadi Tewfik., 2006, SOFTWARE PRODUCT LIN, P557, DOI DOI 10.1007/978-3-540-33253-4_15
NR 44
TC 3
Z9 4
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2015
VL 17
IS 5
BP 585
EP 600
DI 10.1007/s10009-014-0341-2
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CQ8LO
UT WOS:000360859500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Felderer, M
   Fourneret, E
AF Felderer, Michael
   Fourneret, Elizabeta
TI A systematic classification of security regression testing approaches
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Regression testing; Security testing; Security regression testing;
   Software evolution; Security engineering; Software testing;
   Classification; Survey
ID TEST SELECTION; PRIORITIZATION
AB The openness of modern IT systems and their permanent change make it challenging to keep these systems secure. A combination of regression and security testing called security regression testing, which ensures that changes made to a system do not harm its security, are therefore of high significance and the interest in such approaches has steadily increased. In this article we present a systematic classification of available security regression testing approaches based on a solid study of background and related work to sketch which parts of the research area seem to be well understood and evaluated, and which ones require further research. For this purpose we extract approaches relevant to security regression testing from computer science digital libraries based on a rigorous search and selection strategy. Then, we provide a classification of these according to security regression approach criteria: abstraction level, security issue, regression testing techniques, and tool support, as well as evaluation criteria, for instance evaluated system, maturity of the system, and evaluation measures. From the resulting classification we derive observations with regard to the abstraction level, regression testing techniques, tool support as well as evaluation, and finally identify several potential directions of future research.
C1 [Felderer, Michael] Univ Innsbruck, A-6020 Innsbruck, Austria.
   [Fourneret, Elizabeta] Univ Franche Comte, DISC, FEMTO ST, F-25030 Besancon, France.
C3 University of Innsbruck; Universite de Franche-Comte
RP Felderer, M (corresponding author), Univ Innsbruck, A-6020 Innsbruck, Austria.
EM Michael.Felderer@uibk.ac.at
RI Felderer, Michael/AAF-4909-2020
FU Austrian Science Fund (FWF) [P26194] Funding Source: Austrian Science
   Fund (FWF)
CR Alnatheer A., 2010, P 2010 ACM IEEE INT, P58
   Ammann Paul, 2008, Introduction to software testing, V1st
   Anisetti M., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P122, DOI 10.1109/ICWS.2012.53
   [Anonymous], 1990, STAND GLOSS SOFTW EN
   [Anonymous], 2011, P 8 WORKSH ASS SELF
   [Anonymous], 2006, PROC COMPANION 21 AC, DOI [10.1145/1176617.1176727, DOI 10.1145/1176617.1176727]
   [Anonymous], 2003, 4009 NAT INF ASS GLO
   [Anonymous], 2011, P 5 INT C RES CHALL
   [Anonymous], SOFTW TEST VERIF REL
   [Anonymous], P 1 EUR WORKSH SYST
   [Anonymous], 1992, C SOFTW MAINT, P282
   [Anonymous], 2012, P 7 WORKSH MOD BAS T
   Arkin B, 2005, IEEE SECUR PRIV, V3, P84, DOI 10.1109/MSP.2005.23
   Biswas S, 2011, INFORM-J COMPUT INFO, V35, P289
   Botella J, 2014, LECT NOTES COMPUT SC, V8803, P337, DOI 10.1007/978-3-662-45231-8_24
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P16, DOI 10.1016/j.infsof.2008.09.010
   Bruno M, 2005, LECT NOTES COMPUT SC, V3826, P87
   Chen Yanping., 2002, P 2002 C CTR ADV STU, P1
   Chen Yanping., 2007, 3rd international workshop on Advances in model-based testing, P54, DOI 10.1145/1291535.1291541
   DINARDO D, 2013, ICST, P302, DOI DOI 10.1109/ICST.2013.27
   Dupuis R., 2004, SOFTWARE ENG BODY KN
   Engström E, 2010, LECT NOTES COMPUT SC, V6156, P3, DOI 10.1007/978-3-642-13792-1_3
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Fahad M, 2008, INT FED INFO PROC, P200
   Felderer Michael, 2014, International Journal of Secure Software Engineering, V5, P48, DOI 10.4018/ijsse.2014100103
   Felderer M., 2011, Advances in System Testing and Validation Lifecycle (VALID 2011), P109
   Felderer M., 2011, TECHNICAL REPORT
   Felderer M, 2014, INT J SOFTW TOOLS TE, V16, P559, DOI 10.1007/s10009-014-0332-3
   Felderer M, 2011, LECT NOTES COMPUT SC, V6542, P181, DOI 10.1007/978-3-642-19125-1_14
   Fink G., 1997, Software Engineering Notes, V22, P74, DOI 10.1145/263244.263267
   Fourneret E., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P125, DOI 10.1109/ICSTW.2011.95
   Fourneret E, 2014, INT CONF SOFTW SECUR, P147, DOI 10.1109/SERE.2014.28
   Frankl PG, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P195, DOI 10.1109/ISESE.2003.1237978
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Gu Tian-yang, 2010, World Acadmeny of Science, Engineering and Technology, V70, P647
   Harrold MJ, 2001, ACM SIGPLAN NOTICES, V36, P312, DOI 10.1145/504311.504305
   Huang C, 2009, LECT NOTES COMPUT SC, V5576, P70, DOI 10.1007/978-3-642-02617-1_8
   Huang YC, 2012, J SYST SOFTWARE, V85, P626, DOI 10.1016/j.jss.2011.09.063
   Hwang J., SELECTION REGRESSION
   *ISO IEC, 1994, 9646 ISOIEC
   Jaeger T., 2004, ACM Transactions on Information and Systems Security, V7, P175, DOI 10.1145/996943.996944
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Kim Taesoo., 2012, USENIX OSDI, P193
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Korel B., 2002, IEEE ICSM 02 10, P10
   Lehman MM, 1998, IEEE SOFTWARE, V15, P40, DOI 10.1109/MS.1998.646878
   Leung H. K. N., 1989, Proceedings: Conference on Software Maintenance (Cat. No.89CH2744-1), P60, DOI 10.1109/ICSM.1989.65194
   Mansour N., 2009, ADV SOFT ENG, V2009, P1
   Mehta D., 2007, Effective software security management
   Mosterman P, 2011, Model-based testing for embedded systems
   Petersen K., 2008, EASE
   Potter B, 2004, IEEE SECUR PRIV, V2, P81, DOI 10.1109/MSP.2004.84
   Pretschner A., 2013, P ACM IEEE 16 INT C
   Qi DW, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211622
   Qi DW, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P33, DOI 10.1145/1595696.1595704
   Raji F., 1981, Proceedings of the National Telecommunications Conference, VB-6-3, P1
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Rothermel G, 2000, SOFTW TEST VERIF REL, V10, P77, DOI 10.1002/1099-1689(200006)10:2<77::AID-STVR197>3.0.CO;2-E
   Singh Y, 2012, INFORM-J COMPUT INFO, V36, P379
   Tahat LH, 2001, P INT COMP SOFTW APP, P489, DOI 10.1109/CMPSAC.2001.960658
   Tian H, 2009, 2009 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND INFORMATION TECHNOLOGY, VOL 2, P237, DOI 10.1109/ICCSIT.2009.5234394
   Utting M., 2007, PRACTICAL MODEL BASE
   Vetterling M., 2002, Software Engineering Notes, V27, P129, DOI 10.1145/605466.605486
   Viennot N., 2013, P 18 INT C ARCH SUPP, P112
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   Windmuller S., 2013, P 16 INT ACM SIGS S, P111, DOI [10.1145/2465449.2465469, DOI 10.1145/2465449.2465469]
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yu YT, 2012, INFORM SOFTWARE TECH, V54, P179, DOI 10.1016/j.infsof.2011.09.005
   Zech Philipp, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P112, DOI 10.1007/978-3-642-34026-0_9
NR 72
TC 24
Z9 26
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2015
VL 17
IS 3
BP 305
EP 319
DI 10.1007/s10009-015-0365-2
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7NL
UT WOS:000355682600005
DA 2024-07-18
ER

PT J
AU Steffen, B
   Isberner, M
   Naujokat, S
   Margaria, T
   Geske, M
AF Steffen, Bernhard
   Isberner, Malte
   Naujokat, Stefan
   Margaria, Tiziana
   Geske, Maren
TI Property-driven benchmark generation: synthesizing programs of realistic
   structure
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Benchmark generation; LTL synthesis; Model checking; Property-oriented
   expansion; Path condition extraction; Theorem proving; SAT solving; Code
   motion
ID CODE MOTION
AB We present a systematic approach to the automatic generation of platform-independent benchmarks of realistic structure and tailored complexity for evaluating verification tools for reactive systems. The idea is to mimic a systematic constraint-driven software development process by automatically transforming randomly generated temporal-logic-based requirement specifications on the basis of a sequence of property-preserving, randomly generated structural design decisions into executable source code of a chosen target language or platform. Our automated transformation process steps through dedicated representations in terms of Buchi automata, Mealy machines, decision diagram models, and code models. It comprises LTL synthesis, model checking, property-oriented expansion, path condition extraction, theorem proving, SAT solving, and code motion. This setup allows us to address different communities via a growing set of programming languages, tailored sets of programming constructs, different notions of observation, and the full variety of LTL properties-ranging from mere reachability over general safety properties to arbitrary liveness properties. The paper illustrates the corresponding tool chain along accompanying examples, emphasizes the current state of development, and sketches the envisioned potential and impact of our approach.
C1 [Steffen, Bernhard; Isberner, Malte; Naujokat, Stefan; Geske, Maren] Tech Univ Dortmund, Chair Programming Syst, D-44227 Dortmund, Germany.
   [Margaria, Tiziana] Univ Potsdam, Chair Serv & Software Engn, D-14482 Potsdam, Germany.
C3 Dortmund University of Technology; University of Potsdam
RP Naujokat, S (corresponding author), Tech Univ Dortmund, Chair Programming Syst, D-44227 Dortmund, Germany.
EM steffen@cs.tu-dortmund.de; malte.isberner@cs.tu-dortmund.de;
   stefan.naujokat@cs.tu-dortmund.de; margaria@cs.uni-potsdam.de;
   maren.geske@cs.tu-dortmund.de
RI Isberner, Malte/AAF-7893-2020; Margaria, Tiziana/AAO-2272-2021
OI Margaria, Tiziana/0000-0002-5547-9739; Naujokat,
   Stefan/0000-0002-6265-6641; Isberner, Malte/0000-0002-7704-5173
CR Almeida EE, 2007, IEEE T AUTOM SCI ENG, V4, P167, DOI 10.1109/TASE.2006.880857
   [Anonymous], 1989, PRENTICE HALL INT SE
   [Anonymous], 2001, Handbook of automated reasoning
   [Anonymous], 2001, MODEL CHECKING
   APT KR, 1991, TEXTS MONOGRAPHS COM
   Bauer O., 2014, SOFTW TOOLS TECHNOL, DOI [10.1007/s10009-014-0333-2, DOI 10.1007/S10009-014-0333-2(2014)]
   Beyer D, 2014, INT J SOFTW TOOLS TE, V16, P507, DOI 10.1007/s10009-014-0334-1
   Beyer D, 2012, LECT NOTES COMPUT SC, V7214, P504, DOI 10.1007/978-3-642-28756-5_38
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Blom S, 2010, LECT NOTES COMPUT SC, V6174, P354
   BRIGGS P, 1994, SIGPLAN NOTICES, V29, P159, DOI 10.1145/773473.178257
   Burkart O, 1997, LECT NOTES COMPUT SC, V1256, P419
   Combe D, 2010, LECT NOTES ARTIF INT, V6062, P139, DOI 10.1007/978-3-642-14684-8_15
   DHAMDHERE DM, 1989, INT J COMPUT MATH, V27, P1, DOI 10.1080/00207168808803702
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Floyd R.W., 1967, P S APPL MATH, V19, P19
   Gastin P, 2001, LECT NOTES COMPUT SC, V2102, P53
   Giannakopoulou D, 2002, LECT NOTES COMPUT SC, V2529, P308
   HAYESROTH F, 1985, COMMUN ACM, V28, P921, DOI 10.1145/4284.4286
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Howar Falk, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P608, DOI 10.1007/978-3-642-34026-0_45
   Howar F, 2014, INT J SOFTW TOOLS TE, V16, P457, DOI 10.1007/s10009-014-0337-y
   Huth M., 2002, Verification, Model Checking, and Abstract Interpretation. Third International Workshop, VMCAI 2002. Revised Papers (Lecture Notes in Computer Science Vol.2294), P302
   Kaynar DK, 2003, RTSS 2003: 24TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P166, DOI 10.1109/REAL.2003.1253264
   Klebanov V., 2011, LNCS, V6664, P154, DOI [10.1007/978-3-642-21437-0_14, DOI 10.1007/978-3-642-21437-0_14]
   KNOOP J, 1994, SIGPLAN NOTICES, V29, P147
   KNOOP J, 1992, SIGPLAN NOTICES, V27, P224, DOI 10.1145/143103.143136
   KNOOP J, 1994, ACM T PROGR LANG SYS, V16, P1117, DOI 10.1145/183432.183443
   Knoop J, 1999, LECT NOTES COMPUT SC, V1575, P91
   KNOOP J, 1993, J PROGRAM LANG, V1, P71
   Knoop J., 1995, P ACM SIGPLAN 95 C P
   Lamport L., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P657
   LARSEN KG, 1990, LECT NOTES COMPUT SC, V407, P232
   Margaria T, 2009, COMPUTER, V42, P106, DOI 10.1109/MC.2009.315
   MCCARTHY DR, 1989, SIGMOD REC, V18, P215, DOI 10.1145/66926.66946
   MEALY GH, 1955, AT&T TECH J, V34, P1045, DOI 10.1002/j.1538-7305.1955.tb03788.x
   MOREL E, 1979, COMMUN ACM, V22, P96, DOI 10.1145/359060.359069
   Morse J, 2014, INT J SOFTW TOOLS TE, V16, P519, DOI 10.1007/s10009-014-0335-0
   Rosen B.K., 1988, 15 ANN ACM S PRINC P
   Ruthing O., 2000, Conference Record of POPL'00: 27th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages. Papers Presented at the Symposium, P170, DOI 10.1145/325694.325715
   Schordan M, 2014, INT J SOFTW TOOLS TE, V16, P493, DOI 10.1007/s10009-014-0338-x
   Snelting G, 2006, ACM T SOFTW ENG METH, V15, P410, DOI 10.1145/1178625.1178628
   STEFFEN B, 1990, LECT NOTES COMPUT SC, V432, P389
   STEFFEN B, 1991, LECT NOTES COMPUT SC, V494, P394
   STEFFEN B, 1989, LECT NOTES COMPUT SC, V379, P481
   STEFFEN B, 1989, LECT NOTES COMPUT SC, V372, P723
   Steffen Bernhard, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P341, DOI 10.1007/978-3-642-39176-7_21
   Steffen B, 1997, LECT NOTES COMPUT SC, V1200, P1, DOI 10.1007/BFb0023444
   Steffen B., 1996, Static Analysis. Third International Symposium, SAS'96 Proceedings, P22
   STEFFEN B, 1995, LECT NOTES COMPUTER, V962, P72
   Steffen B, 2007, LECT NOTES COMPUT SC, V4383, P92
   Steffen B, 2007, COMPUTER, V40, P64, DOI 10.1109/MC.2007.386
   Steffen B, 2014, INT J SOFTW TOOLS TE, V16, P543, DOI 10.1007/s10009-014-0339-9
   Steffen B, 2011, LECT NOTES COMPUT SC, V6538, P23, DOI 10.1007/978-3-642-18275-4_4
   van de Pol J, 2014, INT J SOFTW TOOLS TE, V16, P481, DOI 10.1007/s10009-014-0324-3
   Yang Xuejun, 2011, P 32 ACM SIGPLAN C P
NR 57
TC 24
Z9 25
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2014
VL 16
IS 5
BP 465
EP 479
DI 10.1007/s10009-014-0336-z
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HU
UT WOS:000209673300002
DA 2024-07-18
ER

PT J
AU Stepien, B
   Peyton, L
AF Stepien, Bernard
   Peyton, Liam
TI Innovation and evolution in integrated web application testing with
   TTCN-3
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE TTCN-3; Web applications; Test specification language; Unit test
   framework; Service-oriented architecture; Security; Penetration testing
AB Over the last 10 years there has been continuous innovation and evolution in the technology of web applications. While originally designed as a telecom testing platform, TTCN-3 has proven to be a flexible and powerful platform for web application testing throughout this period. Major challenges to testing have been integration with unit test frameworks, service-oriented architecture, rich client interfaces, and security vulnerabilities. Through careful analysis and practical experience in industrial projects we have developed mechanisms to address each of these aspects of web application testing in TCN-3. These mechanisms are summarized here with examples drawn from our industrial experience to show how TTCN-3 provides significant advantages for testing web applications in comparison to other tools typically used in industry. We also present a significant extension to the model architecture for TTCN-3 which greatly facilitates web application testing that has been implemented by a major vendor and is now under consideration by the ETSI standards committee.
C1 [Stepien, Bernard; Peyton, Liam] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
C3 University of Ottawa
RP Peyton, L (corresponding author), Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
EM bernard@eecs.uottawa.ca; lpeyton@uottawa.ca
CR [Anonymous], 2004, Service-oriented architecture
   [Anonymous], 2011, 2018731 ETSI ES
   [Anonymous], 2011, 2018736 ETSI ES
   [Anonymous], 2011, 2018735 ETSI ES
   Arkin B, 2005, IEEE SECUR PRIV, V3, P84, DOI 10.1109/MSP.2005.23
   BAI XY, 2006, P 4 IEEE WORKSH SOFT
   Bertolino A., 2006, LNCS, V3938
   Bishop M, 2007, IEEE SECUR PRIV, V5, P84, DOI 10.1109/MSP.2007.159
   Manzuik S., 2007, Network Security Assessment: From Vulnerability to Patch
   Mesbah A., 2007, P 6 WORK IEEE IFIP C
   Peyton L., 2008, P 41 HAW INT C SYST
   Rankin C., 2002, IBM SYST J SOFTW TES, V41
   Rentea C., 2009, ICWE 2009
   Stepien Bernard, 2008, International Journal on Software Tools for Technology Transfer, V10, P371, DOI 10.1007/s10009-008-0082-1
   Stepien B., 2012, INT J ELECT BUS INDE
   Stepien B, 2011, LECT NOTES BUS INF P, V78, P1
   Tan R.P., 2004, ACM SIGSOFT SOFTWARE, V29
   Tsai WT, 2006, INT CONF QUAL SOFTW, P313
   W3C Working Group: Web services architecture, NOT 11 FEBR 2004
   Xiong P., 2005, EFFICIENT FORMAL TES
NR 20
TC 5
Z9 5
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2014
VL 16
IS 3
BP 269
EP 283
DI 10.1007/s10009-013-0278-x
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HS
UT WOS:000209673100004
DA 2024-07-18
ER

PT J
AU Deshmukh, J
   Nickovic, D
AF Deshmukh, Jyotirmoy
   Nickovic, Dejan
TI Introduction to the Special Issue on Runtime Verification
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 20th International Conference on Runtime Verification (RV)
CY OCT 06-09, 2020
CL ELECTR NETWORK
SP Toyota Res Inst
DE Runtime verification; Program instrumentation; Empirical abstractions;
   Spatial-temporal specifications
AB Runtime verification (RV) refers to methods for formal reasoning about all aspects of the dynamic execution of systems, including hardware, software, and cyber-physical systems. RV includes techniques to assess and enforce correctness of a system against systemic bugs or extrinsic uncertainties. These methods are typically considered lightweight as they may not involve exhaustive verification or proofs, but they provide a higher level of rigor and versatility compared to conventional testing methods. This article introduces the extended versions of selected papers from the peer-reviewed proceedings of the 20th International Conference on Runtime Verification (RV 2020). RV 2020 was supposed to be held in Los Angeles, California, USA in July 2020, but was instead held virtually due to the global Covid-19 pandemic.
C1 [Deshmukh, Jyotirmoy] Univ Southern Calif, Dept Comp Sci, 941 Bloom Walk, Los Angeles, CA 90089 USA.
   [Nickovic, Dejan] Austrian Inst Technol, Ctr Digital Safety & Secur, Giefinggasse 4, A-1210 Vienna, Austria.
C3 University of Southern California; Austrian Institute of Technology
   (AIT)
RP Nickovic, D (corresponding author), Austrian Inst Technol, Ctr Digital Safety & Secur, Giefinggasse 4, A-1210 Vienna, Austria.
EM jyotirmoy.deshmukh@usc.edu; Dejan.Nickovic@ait.ac.at
OI Nickovic, Dejan/0000-0001-5468-0396
FU AIT Austrian Institute of Technology GmbH
FX Open access funding provided by AIT Austrian Institute of Technology
   GmbH.
CR Deshmukh J., 2020, RUNTIME VERIFICATION
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Ho VM, 2023, INT J SOFTW TOOLS TE, V25, P431, DOI 10.1007/s10009-023-00709-y
   Nenzi L, 2023, INT J SOFTW TOOLS TE, V25, P503, DOI 10.1007/s10009-023-00710-5
   Shafiei N, 2023, INT J SOFTW TOOLS TE, V25, P481, DOI 10.1007/s10009-023-00713-2
   Soueidi C, 2023, INT J SOFTW TOOLS TE, V25, P453, DOI 10.1007/s10009-023-00708-z
NR 6
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2023
VL 25
IS 4
BP 427
EP 429
DI 10.1007/s10009-023-00721-2
EA NOV 2023
PG 3
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA X7GZ5
UT WOS:001093027600009
OA hybrid
DA 2024-07-18
ER

PT J
AU Tan, YK
   Heule, MJH
   Myreen, MO
AF Tan, Yong Kiam
   Heule, Marijn J. H.
   Myreen, Magnus O.
TI Verified Propagation Redundancy and Compositional UNSAT Checking in
   CakeML
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE linear propagation redundancy; binary code extraction; compositional
   proof checking
ID FORMAL VERIFICATION; PROOF; LOGIC
AB Modern SAT solvers can emit independently checkable proof certificates to validate their results. The state-of-the-art proof system that allows for compact proof certificates is propagation redundancy (PR). However, the only existing method to validate proofs in this system with a formally verified tool requires a transformation to a weaker proof system, which can result in a significant blowup in the size of the proof and increased proof validation time. This article describes the first approach to formally verify PR proofs on a succinct representation. We present (i) a new Linear PR (LPR) proof format, (ii) an extension of the DPR-trim tool to efficiently convert PR proofs into LPR format, and (iii) cake_lpr, a verified LPR proof checker developed in CakeML. We also enhance these tools with (iv) a new compositional proof format designed to enable separate (parallel) proof checking. The LPR format is backwards compatible with the existing LRAT format, but extends LRAT with support for the addition of PR clauses. Moreover, cake_lpr is verified using CakeML's binary code extraction toolchain, which yields correctness guarantees for its machine code (binary) implementation. This further distinguishes our clausal proof checker from existing checkers because unverified extraction and compilation tools are removed from its trusted computing base. We experimentally show that: LPR provides efficiency gains over existing proof formats; cake_lpr's strong correctness guarantees are obtained without significant sacrifice in its performance; and the compositional proof format enables scalable parallel proof checking for large proofs.
C1 [Tan, Yong Kiam; Heule, Marijn J. H.] Carnegie Mellon Univ, Comp Sci Dept, Pittsburgh, PA USA.
   [Myreen, Magnus O.] Chalmers Univ Technol, Gothenburg, Sweden.
C3 Carnegie Mellon University; Chalmers University of Technology
RP Myreen, MO (corresponding author), Chalmers Univ Technol, Gothenburg, Sweden.
EM myreen@chalmers.se
FU A*STAR, Singapore; National Science Foundation (NSF) [CCF-2010951];
   Swedish Foundation for Strategic Research, Sweden; NSF [ACI-1445606]
FX The first author was supported by A*STAR, Singapore, the second author
   was supported by the National Science Foundation (NSF)under grant
   CCF-2010951, and the third author was supported by the Swedish
   Foundation for Strategic Research, Sweden. This work was also supported
   by NSF award number ACI-1445606 at the Pittsburgh Supercomputing Center
   (PSC).
CR Abrahamsson O, 2020, J LOG ALGEBR METHODS, V112, DOI 10.1016/j.jlamp.2020.100530
   Armand Michael, 2011, Certified Programs and Proofs. Proceedings First International Conference, CPP 2011, P135
   Baek S., 2021, LIPICS, V193
   Baek S, 2022, LOG METH COMPUT SCI, V18, DOI 10.46298/LMCS-18(2:3)2022
   Barnett LA, 2021, LECT NOTES ARTIF INT, V12699, P252, DOI 10.1007/978-3-030-79876-5_15
   Beckie H. J., 2018, 21st Australasian Weeds Conference, "Weed Biosecurity - Protecting our Future", Sydney, New South Wales, Australia, 9-13 September 2018, P1
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Bryant Randal E., 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12651), P76, DOI 10.1007/978-3-030-72016-2_5
   Cao QX, 2018, J AUTOM REASONING, V61, P367, DOI 10.1007/s10817-018-9457-5
   Cruz-Filipe L, 2019, J AUTOM REASONING, V63, P695, DOI 10.1007/s10817-018-9490-4
   Cruz-Filipe L, 2017, LECT NOTES COMPUT SC, V10205, P118, DOI 10.1007/978-3-662-54577-5_7
   Cruz-Filipe L, 2017, LECT NOTES ARTIF INT, V10395, P220, DOI 10.1007/978-3-319-63046-5_14
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Ekici B, 2017, LECT NOTES COMPUT SC, V10427, P126, DOI 10.1007/978-3-319-63390-9_7
   Férée H, 2018, LECT NOTES COMPUT SC, V11294, P88, DOI 10.1007/978-3-030-03592-1_6
   Fleury M., 2018, P CPP, P158
   Fleury M, 2019, LECT NOTES COMPUT SC, V11460, P148, DOI 10.1007/978-3-030-20652-9_10
   Ghale MK, 2018, LECT NOTES COMPUT SC, V11294, P69, DOI 10.1007/978-3-030-03592-1_5
   Guéneau A, 2017, LECT NOTES COMPUT SC, V10201, P584, DOI 10.1007/978-3-662-54434-1_22
   Heule Marijn J. H., 2012, Hardware and Software: Verification and Testing. 7th International Haifa Verification Conference (HVC 2011). Revised Selected Papers, P50, DOI 10.1007/978-3-642-34188-5_8
   Heule M, 2017, LECT NOTES COMPUT SC, V10499, P269, DOI 10.1007/978-3-319-66107-0_18
   Heule MJH, 2020, J AUTOM REASONING, V64, P533, DOI 10.1007/s10817-019-09516-0
   Heule MJH, 2019, LECT NOTES COMPUT SC, V11460, P204, DOI 10.1007/978-3-030-20652-9_13
   Heule MJH, 2019, LECT NOTES COMPUT SC, V11427, P41, DOI 10.1007/978-3-030-17462-0_3
   Heule MJH, 2018, AAAI CONF ARTIF INTE, P6598
   Heule MJH, 2018, LECT NOTES COMPUT SC, V10806, P75, DOI 10.1007/978-3-319-89963-3_5
   Heule MJH, 2016, LECT NOTES COMPUT SC, V9710, P228, DOI 10.1007/978-3-319-40970-2_15
   Heule MJH, 2015, LECT NOTES COMPUT SC, V9450, P444, DOI 10.1007/978-3-662-48899-7_31
   Heule MJH, 2013, 2013 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P181
   Jackson D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P730, DOI 10.1109/ICSE.2000.870482
   Jarvisalo Matti, 2012, Automated Reasoning. Proceedings 6th International Joint Conference, IJCAR 2012, P355, DOI 10.1007/978-3-642-31365-3_28
   Kanabar H., 2018, COMPUTER SCI TRIP 2
   Kaufmann Daniela, 2020, 2020 Formal Methods in Computer Aided Design (FMCAD), P264, DOI 10.34727/2020/isbn.978-3-85448-042-6_34
   Kiesl B, 2018, LECT NOTES ARTIF INT, V10900, P516, DOI 10.1007/978-3-319-94205-6_34
   Konev B, 2015, ARTIF INTELL, V224, P103, DOI 10.1016/j.artint.2015.03.004
   Kumar R, 2018, LECT NOTES COMPUT SC, V10895, P362, DOI 10.1007/978-3-319-94821-8_21
   Lammich P., 2019, ITP, P22, DOI DOI 10.4230/LIPICS.ITP.2019.22
   Lammich P, 2020, J AUTOM REASONING, V64, P513, DOI 10.1007/s10817-019-09525-z
   Lammich P, 2019, J AUTOM REASONING, V62, P481, DOI 10.1007/s10817-017-9437-1
   Leroy X, 2009, COMMUN ACM, V52, P107, DOI 10.1145/1538788.1538814
   Lind J., 2021, TRENDS FUNCTIONAL PR
   Lööw A, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P1041, DOI 10.1145/3314221.3314622
   Maric F, 2010, THEOR COMPUT SCI, V411, P4333, DOI 10.1016/j.tcs.2010.09.014
   Mullen Eric., 2018, P 7 ACM SIGPLAN INT, P172, DOI 10.1145/3167089
   Myreen M.O., 2021, LIPICS, V193
   Myreen MO, 2014, J FUNCT PROGRAM, V24, P284, DOI 10.1017/S0956796813000282
   Nipkow T, 2021, LECT NOTES ARTIF INT, V12699, P93, DOI 10.1007/978-3-030-79876-5_6
   Oe D, 2012, LECT NOTES COMPUT SC, V7148, P363, DOI 10.1007/978-3-642-27940-9_24
   Reeves JE, 2022, LECT NOTES ARTIF INT, V13385, P106, DOI 10.1007/978-3-031-10769-6_8
   Slind K., 2010, TRUST EXT INT THEOR
   Slind K, 2008, LECT NOTES COMPUT SC, V5170, P28, DOI 10.1007/978-3-540-71067-7_6
   Sozeau M, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3371076
   Tan Yong Kiam, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12652), P223, DOI 10.1007/978-3-030-72013-1_12
   Tan YK, 2019, J FUNCT PROGRAM, V29, DOI 10.1017/S0956796818000229
   Wetzler N, 2014, LECT NOTES COMPUT SC, V8561, P422, DOI 10.1007/978-3-319-09284-3_31
   Wieringa S, 2009, ELECTRON P THEOR COM, P62, DOI 10.4204/EPTCS.14.5
NR 56
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2023
VL 25
IS 2
SI SI
BP 167
EP 184
DI 10.1007/s10009-022-00690-y
EA FEB 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF2J3
UT WOS:000941088800001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Hiep, HDA
   Maathuis, O
   Bian, JT
   de Boer, FS
   de Gouw, S
AF Hiep, Hans-Dieter A.
   Maathuis, Olaf
   Bian, Jinting
   de Boer, Frank S.
   de Gouw, Stijn
TI Verifying OpenJDK's LinkedList using KeY (extended paper)
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Deductive verification; KeY; Java Modeling Language; Case study;
   Standard library; Bug
AB As a particular case study of the formal verification of state-of-the-art, real software, we discuss the specification and verification of a corrected version of the implementation of a linked list as provided by the Java Collection Framework.
C1 [Hiep, Hans-Dieter A.; Bian, Jinting; de Boer, Frank S.; de Gouw, Stijn] Ctr Wiskunde & Informat CWI, Amsterdam, Netherlands.
   [Hiep, Hans-Dieter A.; Bian, Jinting; de Boer, Frank S.] Leiden Inst Adv Comp Sci LIACS, Leiden, Netherlands.
   [de Gouw, Stijn] Open Univ OU, Heerlen, Netherlands.
   [Maathuis, Olaf] Achmea, Zeist, Netherlands.
RP Hiep, HDA (corresponding author), Ctr Wiskunde & Informat CWI, Amsterdam, Netherlands.; Hiep, HDA (corresponding author), Leiden Inst Adv Comp Sci LIACS, Leiden, Netherlands.
EM hdh@cwi.nl; olaf.maathuis@achmea.nl; j.bian@cwi.nl; frb@cwi.nl;
   sdg@ou.nl
OI Hiep, Hans-Dieter/0000-0001-9677-6644
CR Ahrendt W, 2016, LECT NOTES COMPUT SC, V10001, P1, DOI 10.1007/978-3-319-49812-6
   Baumann C, 2012, ELECTRON PROC THEOR, P18, DOI 10.4204/EPTCS.102.4
   Bian, 2021, IN PRESS, V13047
   Bian J., 2019, VERIFYING OPENJDKS L, DOI [10.6084/m9.figshare.10033094.v2, DOI 10.6084/M9.FIGSHARE.10033094.V2]
   Blom Stefan, 2017, Integrated Formal Methods. 13th International Conference, IFM 2017. Proceedings: LNCS 10510, P102, DOI 10.1007/978-3-319-66845-1_7
   Bubel R, 2008, ELECTRON NOTES THEOR, V199, P107, DOI 10.1016/j.entcs.2007.11.015
   Camilo F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P269, DOI 10.1109/MSR.2015.32
   Cok DR, 2021, PROCEEDINGS OF THE 23RD ACM INTERNATIONAL WORKSHOP ON FORMAL TECHNIQUES FOR JAVA-LIKE PROGRAMS (FTFJP '21), P65, DOI 10.1145/3464971.3468417
   Cok DR, 2014, ELECTRON P THEOR COM, P79, DOI 10.4204/EPTCS.149.8
   de Gouw S, 2019, J AUTOM REASONING, V62, P93, DOI 10.1007/s10817-017-9426-4
   de Gouw S, 2015, LECT NOTES COMPUT SC, V9206, P273, DOI 10.1007/978-3-319-21690-4_16
   de Gouw S, 2014, J AUTOM REASONING, V53, P129, DOI 10.1007/s10817-013-9300-y
   Eauvidoum, 2021, PHRACK MAGAZINE OCT
   Giese M., 2004, ELECT NOTES THEOR CO, V103, P67, DOI [10.1016/j.entcs.2004.09.014, DOI 10.1016/J.ENTCS.2004.09.014]
   Gladisch C, 2015, SCI COMPUT PROGRAM, V107, P19, DOI 10.1016/j.scico.2015.02.005
   Habermalz E, 2000, THESIS U KARLSRUHE
   Hiep H.A., 2021, VERIFYING OPENJDKS L, DOI [10.5281/zenodo.5648775, DOI 10.5281/ZENODO.5648775]
   Hiep Hans-Dieter A., 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12079), P217, DOI 10.1007/978-3-030-45237-7_13
   Hiep HDA, 2020, LECT NOTES COMPUT SC, V12546, P199, DOI 10.1007/978-3-030-63461-2_11
   Huisman M., 2014, FORMAL SPECIFICATION, DOI [10.5445/IR/1000041881, DOI 10.5445/IR/1000041881]
   Klebanov V., 2011, LNCS, V6664, P154, DOI [10.1007/978-3-642-21437-0_14, DOI 10.1007/978-3-642-21437-0_14]
   Klein G, 2006, ACM T PROGR LANG SYS, V28, P619, DOI 10.1145/1146809.1146811
   Klint P, 2009, IEEE INT WORK C SO, P168, DOI 10.1109/SCAM.2009.28
   Knüppel A, 2018, ELECTRON P THEOR COM, P53, DOI 10.4204/EPTCS.284.5
   Knuth DE, 1997, ART COMPUTER PROGRAM, V2, P145
   Lahiri SK, 2006, ACM SIGPLAN NOTICES, V41, P115, DOI 10.1145/1111320.1111048
   Leavens GT, 1999, SPRING INT SER ENG C, V523, P175
   Nipkow T., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P161, DOI 10.1145/268946.268960
   Polikarpova N, 2015, LECT NOTES COMPUT SC, V9109, P414, DOI 10.1007/978-3-319-19249-9_26
   Zee K, 2008, ACM SIGPLAN NOTICES, V43, P349, DOI 10.1145/1379022.1375624
NR 30
TC 3
Z9 3
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2022
VL 24
IS 5
SI SI
BP 783
EP 802
DI 10.1007/s10009-022-00679-7
EA OCT 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6I0IB
UT WOS:000868957600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Esparza, J
   Kretínsky, J
   Raskin, JF
   Sickert, S
AF Esparza, Javier
   Kretinsky, Jan
   Raskin, Jean-Francois
   Sickert, Salomon
TI From linear temporal logic and limit-deterministic Buchi automata to
   deterministic parity automata
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Linear temporal logic; Deterministic parity automata; Synthesis
ID LTL
AB Controller synthesis for general linear temporal logic (LTL) objectives is a challenging task. The standard approach involves translating the LTL objective into a deterministic parity automaton (DPA) by means of the Safra-Piterman construction. One of the challenges is the size of the DPA, which often grows very fast in practice, and can reach double exponential size in the length of the LTL formula. In this paper, we describe a single exponential translation from limit-deterministic Buchi automata (LDBA) to DPA and show that it can be concatenated with a recent efficient translations from LTL to LDBA to yield a double exponential, 'Safraless' LTL-to-DPA construction. We also report on an implementation and a comparison with other LTL-to-DPA translations on several sets of formulas from the literature.
C1 [Esparza, Javier; Kretinsky, Jan; Sickert, Salomon] Tech Univ Munich, Munich, Germany.
   [Raskin, Jean-Francois] Univ Libre Bruxelles, Brussels, Belgium.
   [Sickert, Salomon] Hebrew Univ Jerusalem, Jerusalem, Israel.
C3 Technical University of Munich; Universite Libre de Bruxelles; Hebrew
   University of Jerusalem
RP Kretínsky, J (corresponding author), Tech Univ Munich, Munich, Germany.
EM esparza@in.tum.de; jan.kretinsky@in.tum.de; jraskin@ulb.ac.be;
   sickert@in.tum.de
FU ERC project PaVeS under the European Union's Horizon 2020 research and
   innovation programme [787367]; DFG [317422601, 436811179, 427755713];
   ARC; EOS project Verifying Learning Artificial Intelligence Systems
   (F.R.S.-FNRS); EOS project Verifying Learning Artificial Intelligence
   Systems (FWO); COST Action GAMENET (European Cooperation in Science and
   Technology) [16228]
FX This work is partly supported by the ERC project PaVeS under the
   European Union's Horizon 2020 research and innovation programme under
   grant agreement No 787367, by the DFG projects Verified Model Checkers
   (317422601, 436811179) and Group-By Objectives in Probabilistic
   Verification (427755713), by the ARC project Non-Zero Sum Game Graphs:
   Applications to Reactive Synthesis and Beyond (Federation
   Wallonie-Bruxelles), the EOS project Verifying Learning Artificial
   Intelligence Systems (F.R.S.-FNRS & FWO), and the COST Action 16228
   GAMENET (European Cooperation in Science and Technology).
CR Blahoudek F, 2016, LECT NOTES COMPUT SC, V9636, P770, DOI 10.1007/978-3-662-49674-9_49
   Clarke T.A., 2018, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8
   COURCOUBETIS C, 1995, J ASSOC COMPUT MACH, V42, P857, DOI 10.1145/210332.210339
   Duret-Lutz A, 2016, LECT NOTES COMPUT SC, V9938, P122, DOI 10.1007/978-3-319-46520-3_8
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   Esparza J, 2018, LICS'18: PROCEEDINGS OF THE 33RD ANNUAL ACM/IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P384, DOI 10.1145/3209108.3209161
   Esparza J, 2017, LECT NOTES COMPUT SC, V10205, P426, DOI 10.1007/978-3-662-54577-5_25
   Esparza J, 2016, FORM METHOD SYST DES, V49, P219, DOI 10.1007/s10703-016-0259-2
   Esparza J, 2014, LECT NOTES COMPUT SC, V8559, P192, DOI 10.1007/978-3-319-08867-9_13
   Etessami K., 2000, CONCUR 2000 - Concurrency Theory. 11th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1877), P153
   Finkbeiner B., 2015, AUTOMATA GAMES VERIF
   Fogarty S, 2015, INFORM COMPUT, V245, P136, DOI 10.1016/j.ic.2014.12.021
   Geldenhuys J, 2006, LECT NOTES COMPUT SC, V3925, P53
   Jacobs S, 2019, ABS190407736 CORR
   Jacobs S, 2017, ELECTRON P THEOR COM, P116, DOI 10.4204/EPTCS.260.10
   Kähler D, 2008, LECT NOTES COMPUT SC, V5125, P724, DOI 10.1007/978-3-540-70575-8_59
   Kini Dileep, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P628, DOI 10.1007/978-3-662-46681-0_57
   Kretínsky J, 2019, LECT NOTES COMPUT SC, V11781, P404, DOI 10.1007/978-3-030-31784-3_24
   Kretínsky J, 2018, LECT NOTES COMPUT SC, V11138, P543, DOI 10.1007/978-3-030-01090-4_34
   Kretínsky J, 2017, LECT NOTES COMPUT SC, V10205, P443, DOI 10.1007/978-3-662-54577-5_26
   Kupferman Orna, 2011, Model Checking and Artificial Intelligence. 6th International Workshop, MoChArt 2010. Revised Selected and Invited Papers, P85, DOI 10.1007/978-3-642-20674-0_6
   Kupferman O, 1997, PROCEEDINGS OF THE FIFTH ISRAELI SYMPOSIUM ON THEORY OF COMPUTING AND SYSTEMS, P147, DOI 10.1109/ISTCS.1997.595167
   Loding C., 1999, Foundations of Software Technology and Theoretical Computer Science. 19th Conference. Proceedings (Lecture Notes in Computer Science Vol.1738), P97
   Loding C., 2019, LIPICS, V132
   Löding C, 2019, LECT NOTES COMPUT SC, V11781, P317, DOI 10.1007/978-3-030-31784-3_18
   Luttenberger M, 2020, ACTA INFORM, V57, P3, DOI 10.1007/s00236-019-00349-3
   Meyer PJ, 2018, LECT NOTES COMPUT SC, V10981, P578, DOI 10.1007/978-3-319-96145-3_31
   Müller D, 2017, ELECTRON P THEOR COM, P180, DOI 10.4204/EPTCS.256.13
   Piterman N, 2007, LOG METH COMPUT SCI, V3, DOI 10.2168/LMCS-3(3:5)2007
   Redziejowski RR, 2012, FUND INFORM, V119, P393, DOI 10.3233/FI-2012-744
   Safra S., 1988, 29th Annual Symposium on Foundations of Computer Science (IEEE Cat. No.88CH2652-6), P319, DOI 10.1109/SFCS.1988.21948
   Sickert S, 2019, THESIS TU MUNICH GER
   Sickert S., 2016, ARCH FORMAL PROOFS
   Sickert S., LICS 2020
   Sickert S, 2016, LECT NOTES COMPUT SC, V9780, P312, DOI 10.1007/978-3-319-41540-6_17
   Somenzi F., 2000, P 12 INT C COMP AID, V1855, P248, DOI DOI 10.1007/10722167
   T B, 2012, LECT NOTES COMPUT SC, V7214, P95, DOI DOI 10.1007/978-3-642-28756-5_8
   Tabakov D, 2012, FORM METHOD SYST DES, V41, P236, DOI 10.1007/s10703-011-0139-8
   Vardi M. Y., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P332
   Vardi M. Y., 1985, 26th Annual Symposium on Foundations of Computer Science (Cat. No.85CH2224-4), P327, DOI 10.1109/SFCS.1985.12
NR 40
TC 1
Z9 1
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2022
VL 24
IS 4
BP 635
EP 659
DI 10.1007/s10009-022-00663-1
EA JUL 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3N7AF
UT WOS:000829125900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Fahrenberg, U
   Legay, A
AF Fahrenberg, Uli
   Legay, Axel
TI Quantitative properties of featured automata
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Featured transition system; Weighted automaton; Quantitative property;
   Software product line
ID ALGEBRAIC APPROACH; ENERGY
AB A featured transition system is a transition system in which the transitions are annotated with feature expressions: Boolean expressions on a finite number of given features. Depending on its feature expression, each individual transition can be enabled when some features are present, and disabled for other sets of features. The behavior of a featured transition system hence depends on a given set of features. There are algorithms for featured transition systems which can check their properties for all sets of features at once, for example for LTL or CTL properties. Here we introduce a model of featured weighted automata which combines featured transition systems and (semiring-) weighted automata. We show that methods and techniques from weighted automata extend to featured weighted automata and devise algorithms to compute quantitative properties of featured weighted automata for all sets of features at once. We show applications to minimum reachability and to energy properties.
C1 [Fahrenberg, Uli] Ecole Polytech, Palaiseau, France.
   [Legay, Axel] Catholic Univ Louvain, Louvain La Neuve, Belgium.
   [Legay, Axel] Aalborg Univ, Aalborg, Denmark.
C3 Institut Polytechnique de Paris; Ecole Polytechnique; Universite
   Catholique Louvain; Aalborg University
RP Fahrenberg, U (corresponding author), Ecole Polytech, Palaiseau, France.
EM uli@lix.polytechnique.fr
CR Bloom S.L., 1993, EATCS MONOGRAPHS THE, DOI DOI 10.1007/978-3-642-78034-9
   Bouyer P., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P128, DOI 10.1109/QEST.2012.28
   Bouyer P, 2008, LECT NOTES COMPUT SC, V5215, P33, DOI 10.1007/978-3-540-85778-5_4
   Bouyer P, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P61
   Chatterjee K, 2010, LECT NOTES COMPUT SC, V6199, P599, DOI 10.1007/978-3-642-14162-1_50
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Conway J.H., 1971, Regular Algebra and Finite Machines
   Cordy M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P472, DOI 10.1109/ICSE.2013.6606593
   Cordy Maxime., 2012, Proceedings of the 16th International Software Product Line Conference (SPLC'12), P66, DOI DOI 10.1145/2362536
   Degorre A, 2010, LECT NOTES COMPUT SC, V6247, P260, DOI 10.1007/978-3-642-15205-4_22
   Droste M, 2009, MONOGR THEOR COMPUT, P1, DOI 10.1007/978-3-642-01492-5
   Droste M, 2011, INT J FOUND COMPUT S, V22, P1829, DOI 10.1142/S0129054111009069
   Ésik Z, 2007, SEMIGROUP FORUM, V75, P129, DOI 10.1007/s00233-007-0709-7
   Esik Zoltan, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P102, DOI 10.1007/978-3-319-02444-8_9
   Ésik Z, 2017, ACTA CYBERN, V23, P229, DOI 10.14232/actacyb.23.1.2017.14
   Ésik Z, 2017, ACTA CYBERN, V23, P203, DOI 10.14232/actacyb.23.1.2017.13
   Ésik Z, 2015, ELECTRON P THEOR COM, P48, DOI 10.4204/EPTCS.191.6
   Ésik Z, 2015, LECT NOTES COMPUT SC, V9168, P240, DOI 10.1007/978-3-319-21500-6_19
   Ésik Z, 2009, MONOGR THEOR COMPUT, P69, DOI 10.1007/978-3-642-01492-5_3
   Fahrenberg Uli, 2011, Theoretical Aspects of Computing - ICTAC 2011. Proceedings 8th International Colloquium, P95, DOI 10.1007/978-3-642-23283-1_9
   Fahrenberg U, 2017, FME WORKS FORM, P51, DOI 10.1109/FormaliSE.2017.2
   KOZEN D, 1994, INFORM COMPUT, V110, P366, DOI 10.1006/inco.1994.1037
   Olaechea Rafael, 2016, SPLC, P109
   Quaas K, 2011, LECT NOTES COMPUT SC, V6638, P452, DOI 10.1007/978-3-642-21254-3_36
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
NR 25
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2019
VL 21
IS 6
SI SI
BP 667
EP 677
DI 10.1007/s10009-019-00538-y
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JL0QK
UT WOS:000495240000005
DA 2024-07-18
ER

PT J
AU Parízek, P
   Lhoták, O
AF Parizek, Pavel
   Lhotak, Ondrej
TI Fast detection of concurrency errors by state space traversal with
   randomization and early backtracking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE State space traversal; Randomization; Backtracking; Concurrency errors
ID MODEL CHECKING
AB State space traversal is a very popular approach to detect concurrency errors and test concurrent programs. However, it is not practically feasible for complex programs with many thread interleavings and a large state space. Many techniques explore only a part of the state space in order to find errors quickly-building upon the observation that errors can often be found in a particular small part of the state space. Great improvements in performance have been achieved also through randomization. In the context of this research direction, we present the DFS-RB algorithm that augments the standard algorithm for depth-first traversal with early backtracking. Specifically, it is possible to backtrack early from a state before all outgoing transitions have been explored. The DFS-RB algorithm is non-deterministic-it uses random numbers, together with values of several parameters, to determine when and how early backtracking takes place in the search. To evaluate DFS-RB, we performed a large experimental study with our prototype implementation in Java Pathfinder on several Java programs. The results show that DFS-RB achieves better performance in terms of speed and error detection than many state-of-the-art techniques for many benchmarks in our set. Nevertheless, it is difficult to find a single configuration of DFS-RB that works well for many different benchmarks. We designed a ranking algorithm whose purpose is to identify configurations that yield overall consistently good performance with a small variation.
C1 [Parizek, Pavel] Charles Univ Prague, Fac Math & Phys, Prague, Czech Republic.
   [Lhotak, Ondrej] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON, Canada.
C3 Charles University Prague; University of Waterloo
RP Parízek, P (corresponding author), Charles Univ Prague, Fac Math & Phys, Prague, Czech Republic.
EM parizek@d3s.mff.cuni.cz
RI Parizek, Pavel/I-8943-2017
OI Parizek, Pavel/0000-0003-0714-7446
FU Czech Science Foundation [18-17403S, 14-11384S]; Natural Sciences and
   Engineering Research Council of Canada
FX The first phase of this work was partially supported by the Czech
   Science Foundation project 14-11384S, and the second phase was partially
   supported by the Czech Science Foundation project 18-17403S. It was also
   partially supported by the Natural Sciences and Engineering Research
   Council of Canada.
CR Abdulla P., 2014, P POPL
   [Anonymous], 1996, LNCS, DOI DOI 10.1007/3-540-60761-7
   [Anonymous], 2008, J. Satisf. Boolean Model. Comput., DOI 10.3233/sat190039
   Barnat J, 2012, SCI COMPUT PROGRAM, V77, P1272, DOI 10.1016/j.scico.2011.03.001
   Behrmann G., 2000, LNCS, V1855
   Bisiani R, 1992, BEAM SEARCH ENCY ART
   Burckhardt Sebastian., 2010, Proceedings of ASPLOS
   Ciardo G., 1998, INFORMS Journal on Computing, V10, P82, DOI 10.1287/ijoc.10.1.82
   Coons K. E., 2010, P PPOPP
   Dwyer M. B., 2006, P SIGSOFT FSE
   Dwyer M. B., 2007, P ICSE
   Dwyer MB, 2004, FORM METHOD SYST DES, V25, P199, DOI 10.1023/B:FORM.0000040028.49845.67
   Edelkamp S., 2004, International Journal on Software Tools for Technology Transfer, V5, P247, DOI 10.1007/s10009-002-0104-3
   Edelkamp S., 2008, P 5 INT WORKSH MOD C, V5348
   Een N., 2003, LNCS, V2919
   Emmi Michael., 2011, Proceedings of POPL
   Engels TAN, 2009, J LOGIC ALGEBR PROGR, V78, P274, DOI 10.1016/j.jlap.2008.11.003
   Farzan A., 2013, P ESEC FSE
   Flanagan C., 2005, P POPL
   Gomes C., 1998, P AAAI
   GRIFFIN TJ, 2001, FOCUS STRUCT BIOLOGY, V2, P1
   Groce A., 2004, International Journal on Software Tools for Technology Transfer, V6, P260, DOI 10.1007/s10009-003-0130-9
   Gueta G., 2007, LNCS, V4595
   Holzmann G. J., 2008, P ASE
   Holzmann G. J., 2008, LNCS, V5156
   Holzmann GJ, 2007, IEEE T SOFTWARE ENG, V33, P659, DOI 10.1109/TSE.2007.70724
   Jagannath V., 2012, P ICST
   Jones M., 2004, LNCS, V2989
   Jones M. D., 2005, International Journal on Software Tools for Technology Transfer, V7, P31, DOI 10.1007/s10009-003-0115-8
   Kalibera T., 2009, P JTRES
   Laarman A., 2011, LNCS, V6996
   Laarman A., 2010, P FMCAD
   LERDA F, 1999, LNCS, V1680
   LUBY M, 1993, INFORM PROCESS LETT, V47, P173, DOI 10.1016/0020-0190(93)90029-9
   Musuvathi M., 2008, P OSDI
   Parizek P., 2016, LNCS, V9583
   Parizek P., 2011, LNCS, V6823
   Parizek P., 2010, LNCS, V6015
   Parizek P., 2011, P ASE
   Parizek P., 2016, P SAC MUSEPAT TRACK
   QADEER S, 2004, DAISY FILE SYSTEM JO
   Qadeer S., 2005, LNCS, V3440
   Qadeer S, 2007, P PLDI
   Rabinovitz I., 2005, LNCS, V3576
   Renault E., 2015, LNCS, V9035
   Rungta N., 2009, P PADTAD
   Rungta N., 2007, LNCS, V4595
   Sen Koushik., 2007, P ASE
   Seppi K, 2006, FUND INFORM, V70, P111
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Stern U., 1997, LNCS, V1254
   Thomson P., 2014, P PPOPP
   Udupa A., 2011, LNCS, V6823
   van Moorsel APA, 2006, IEEE T SOFTWARE ENG, V32, P547, DOI 10.1109/TSE.2006.73
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   WALSH T, 1999, P IJCAI
   Wehrle M., 2009, LNCS, V5505
   Wehrle M., 2010, LNCS, V6349
   Wijs A., 2006, LNCS, V4428
   Wijs A, 2016, INT J SOFTW TOOLS TE, V18, P169, DOI 10.1007/s10009-015-0379-9
   Yang Y., 2008, UUCS08004 UUCS08004
NR 61
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2019
VL 21
IS 4
BP 365
EP 400
DI 10.1007/s10009-018-0484-7
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IK4EM
UT WOS:000476539900001
DA 2024-07-18
ER

PT J
AU Dashevskyi, S
   dos Santos, DR
   Massacci, F
   Sabetta, A
AF Dashevskyi, Stanislav
   dos Santos, Daniel Ricardo
   Massacci, Fabio
   Sabetta, Antonino
TI TestREx: a framework for repeatable exploits
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software vulnerabilities; Exploits; Security testing; Experimentation
AB Web applications are the target of many well-known exploits and also a fertile ground for the discovery of security vulnerabilities. Yet, the success of an exploit depends both on the vulnerability in the application source code and the environment in which the application is deployed and run. As execution environments are complex (application servers, databases and other supporting applications), we need to have a reliable framework to test whether known exploits can be reproduced in different settings, better understand their effects, and facilitate the discovery of new vulnerabilities. In this paper, we present TestRExa framework that allows for highly automated, easily repeatable exploit testing in a variety of contexts, so that a security tester may quickly and efficiently perform large-scale experiments with vulnerability exploits. It supports packing and running applications with their environments, injecting exploits, monitoring their success, and generating security reports. We also provide a corpus of example applications, taken from related works or implemented by us.
C1 [Dashevskyi, Stanislav; dos Santos, Daniel Ricardo; Massacci, Fabio] Univ Trento, Trento, Italy.
   [dos Santos, Daniel Ricardo] Fdn Bruno Kessler, Trento, Italy.
   [Sabetta, Antonino] SAP Labs, Sophia Antipolis, France.
C3 University of Trento; Fondazione Bruno Kessler
RP Dashevskyi, S (corresponding author), Univ Trento, Trento, Italy.
EM stanislav.dashevskyi@unitn.it; dossantos@fbk.eu;
   fabio.massacci@unitn.it; antonino.sabetta@sap.com
RI Massacci, Fabio/C-2662-2012
OI Massacci, Fabio/0000-0002-1091-8486
FU European Union [317387 SECENTIS]; EU project VAMOSS [EIT/EIT
   DIGITAL/SGA2016-16367]; EIT Digital Master School on Security and
   Privacy [EIT DIGITAL/SGA2017-16448]
FX This work has been partly supported by the European Union under the
   grant 317387 SECENTIS (FP7-PEOPLE-2012-IT), EU project VAMOSS (EIT/EIT
   DIGITAL/SGA2016-16367), and EIT Digital Master School on Security and
   Privacy (EIT DIGITAL/SGA2017-16448 MASTER SCHOOL PROGRAMMES).
CR Allodi L., 2013, P 6 USENIX WORKSH CY
   Allodi L, 2016, IEEE T EMERG TOP COM, V4, P35, DOI 10.1109/TETC.2015.2397395
   Arnes A., 2006, P 3 INT C DET INTR M
   Baca D., 2009, P 4 INT C AV REL SEC
   Benzel T, 2011, P 27 ANN COMP SEC AP
   Calvet J., 2010, P 3 USENIX WORKSH CY
   Carroll T. E., 2012, P WORKSH LEARN AUTH
   Carver J. C., 2016, P S BOOTC SCI SEC HO
   Ceccato M., 2017, P 25 INT C PROGR COM
   Chen K. Z., 2011, P 6 ACM S INF COMP C
   Chengyu S., 2012, P 7 USENIX WORKSH HO
   Compagna L., 2017, P 7 ACM C DAT APPL S
   Curphey M, 2006, IEEE SECUR PRIV, V4, P32, DOI 10.1109/MSP.2006.108
   Dashevskyi S., 2014, CSET
   Di Lucca GA, 2006, INFORM SOFTWARE TECH, V48, P1172, DOI 10.1016/j.infsof.2006.06.006
   Dondo M., 2015, TECHNICAL REPORT
   Duck B, 2016, SOFTWARE 10 ANN FUTU
   Eide E, 2010, REPLAYABLE RES NETWO
   Evans N. S., 2014, P 6 USENIX WORKSH CY
   Felderer M, 2016, ADV COMPUT, V101, P1, DOI 10.1016/bs.adcom.2015.11.003
   Felderer M, 2014, INT J SOFTW TOOLS TE, V16, P559, DOI 10.1007/s10009-014-0332-3
   Fonseca J, 2014, IEEE T DEPEND SECURE, V11, P440, DOI 10.1109/TDSC.2013.45
   Gen Lu, 2014, THESIS
   Holm H, 2017, INF COMPUT SECUR, V25, P47, DOI 10.1108/ICS-08-2016-0069
   Jiang X., 2006, P 8 INT S REC ADV IN
   Kals S., 2006, P 15 INT C WORLD WID
   Kotov V., 2013, P ENG SEC SOFTW SYST
   Li JY, 2009, IEEE SOFTWARE, V26, P80, DOI 10.1109/MS.2009.33
   Maxion R. A., 2011, P 4 USENIX WORKSH CY
   Michael H., 2006, SECURITY DEV LIFECYC
   Neubauer J, 2014, INT J SOFTW TOOLS TE, V16, P569, DOI 10.1007/s10009-014-0321-6
   Nguyen V.H., 2016, Empirical Software Engineering, V21, P2268, DOI DOI 10.1007/S10664-015-9408-2
   Nilson G., 2013, P 6 USENIX WORKSH CY
   Pewny J., 2016, P 32 ANN C COMP SEC
   Sabetta A., 2015, US Patent App, Patent No. [14/692,203, 14692203]
   Sahin I, 2001, J SOFTW MAINT EVOL-R, V13, P469, DOI 10.1002/smr.242
   Scholte T., 2012, P 15 INT C FIN CRYPT
   Stoner E. L, 2015, THESIS
   Stuttard Dafydd., 2007, WEB APPL HACKERS HDB
   Tripp O., 2014, P INT S SOFTW TEST A
   Windmuller S., 2013, P 16 INT ACM SIGS S
   Zalewski Michal., 2011, The Tangled Web: A Guide to Securing Modern Web Applications. No
NR 42
TC 1
Z9 3
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2019
VL 21
IS 1
BP 105
EP 119
DI 10.1007/s10009-017-0474-1
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM2LA
UT WOS:000459292700005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Huang, WL
   Peleska, J
AF Huang, Wen-ling
   Peleska, Jan
TI Model-based testing strategies and their (in)dependence on syntactic
   model representations
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT Joint 21st International Workshop on Formal Methods for Industrial
   Critical Systems (FMICS) / 16th International Workshop on Automated
   Verification of Critical Systems (AVoCS)
CY SEP 26-28, 2016
CL Pisa, ITALY
SP European Res Consortium Informat & Math, Formal Methods Europe, Springer Intl Publishing AG
DE Model-based testing; Equivalence class partition testing; Languages;
   Complete testing theories
AB Model-based testing in its most advanced form allows for automated test case identification, test data calculation, and test procedure generation from reference models describing the expected behaviour of the system under test. If the underlying algorithms for test case identification operate only on the syntactic representation of test models, however, the resulting test strength depends on the syntactic representation as well. This observation is true, even if syntactically differing models are behaviourally equivalent. In this paper, we present a systematic approach to elaborating test case selection strategies that only depend on the behavioural semantics of test models, but are invariant under syntactic transformations preserving the semantics. The benefits of these strategies are discussed, and practical generation algorithms are presented.
C1 [Huang, Wen-ling; Peleska, Jan] Univ Bremen, Dept Math & Comp Sci, Bremen, Germany.
   [Peleska, Jan] Verified Syst Int GmbH, Bremen, Germany.
C3 University of Bremen
RP Peleska, J (corresponding author), Univ Bremen, Dept Math & Comp Sci, Bremen, Germany.; Peleska, J (corresponding author), Verified Syst Int GmbH, Bremen, Germany.
EM huang@cs.uni-bremen.de; jp@cs.uni-bremen.de
FU University of Bremen
FX The authors would like to thank the members of the FMICS-AVOCS programme
   committee for the invitation to present an initial version of this
   article. Furthermore, we thank Alexander Pretschner for stimulating
   discussions concerning the topic of test strategies and their potential
   dependencies on syntactic model representations. The work presented in
   this paper has been elaborated within project ITTCPS-Implementable
   Testing Theory for Cyber-physical Systems
   (http://www.informatik.uni-bremen.de/agbs/projects/ittcps/index.html)
   which has been granted by the University of Bremen in the context of the
   German Universities Excellence Initiative
   (http://en.wikipedia.org/wiki/German_Universities_Excellence_Initiative)
   .
CR [Anonymous], 1980, CALCULUS COMMUNICATI, DOI DOI 10.1007/3-540-10235-3
   [Anonymous], 2009, 262624 ISODIS
   [Anonymous], 2011, SC205EUROCAE WG71 RT
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bonchi Filippo, 2013, Programming Languages and Systems. 11th Asian Symposium, APLAS 2013. Proceedings: LNCS 8301, P1, DOI 10.1007/978-3-319-03542-0_1
   Braunstein C, 2014, LECT NOTES COMPUT SC, V8829, P380, DOI 10.1007/978-3-319-11737-9_25
   Cavalcanti A, 2011, ACTA INFORM, V48, P97, DOI 10.1007/s00236-011-0133-z
   CENELEC, 2011, EN 50128:2011
   Cheng K., 1996, ACM Transactions on Design Automation of Electronic Systems, V1, P57
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Clarke EM, 1999, MODEL CHECKING, P1
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   Hennessy M., 1988, An algebraic theory of processes
   Hierons RM, 2004, IEEE T COMPUT, V53, P1330, DOI 10.1109/TC.2004.85
   Huang WL, 2017, FORM ASP COMPUT, V29, P335, DOI 10.1007/s00165-016-0402-2
   Huang WL, 2016, INT J SOFTW TOOLS TE, V18, P265, DOI 10.1007/s10009-014-0356-8
   Hübner F, 2015, LECT NOTES COMPUT SC, V9154, P155, DOI 10.1007/978-3-319-21215-9_10
   LUO G, 1994, IEEE T SOFTWARE ENG, V20, P149, DOI 10.1109/32.265636
   Object Management Group, 2015, TECHNICAL REPORT
   Peleska J., 1996, FME '96: Industrial Benefit and Advances in Formal Methods. Third International Symposium of Formal Methods Europe. Proceedings, P538
   Peleska J., 1997, South African Computer Journal, P53
   Peleska J., 1996, FORMAL METHODS DEV D
   Peleska J., 2013, ELECT P THEORETICAL, V111, P3, DOI DOI 10.4204/EPTCS.111.1
   Peleska J, 2016, LECT NOTES COMPUT SC, V9933, P3, DOI 10.1007/978-3-319-45943-1_1
   Peleska J, 2016, LECT NOTES COMPUT SC, V9707, P32, DOI 10.1007/978-3-319-33951-1_3
   Peleska J, 2011, LECT NOTES COMPUT SC, V7019, P146, DOI 10.1007/978-3-642-24580-0_11
   Petrenko A., 1996, Formal Description Techniques IX. Theory, Application and Tools. IFIP TC6/6.1 International Conference on Formal Description Techniques IX/Protocol Specification, Testing and Verification XVI, P163
   Petrenko A, 2014, IEEE HI ASS SYS ENGR, P224, DOI 10.1109/HASE.2014.39
   Petrenko A, 2011, LECT NOTES COMPUT SC, V7019, P162, DOI 10.1007/978-3-642-24580-0_12
   Pretschner A, 2015, NATO SCI PEAC SECUR, V40, P224, DOI 10.3233/978-1-61499-495-4-224
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   ROSCOE AW, 1994, CLASSICAL MIND ESSAY
   Silva A, 2013, LOG METH COMPUT SCI, V9, DOI 10.2168/LMCS-9(1:09)2013
   Starke P. H., 1972, ABSTRACT AUTOMATA
   Taromirad M, 2017, LECT NOTES COMPUT SC, V10522, P228, DOI 10.1007/978-3-319-68972-2_15
   Tretmans J, 1996, COMPUT NETWORKS ISDN, V29, P49, DOI 10.1016/S0169-7552(96)00017-7
   Vasilevskii M. P., 1973, Cybernetics, V9, P653, DOI 10.1007/BF01068590
NR 38
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2018
VL 20
IS 4
SI SI
BP 441
EP 465
DI 10.1007/s10009-017-0479-9
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GL5XP
UT WOS:000437248300006
DA 2024-07-18
ER

PT J
AU Faithfull, A
   Bengtson, J
   Tassi, E
   Tankink, C
AF Faithfull, Alexander
   Bengtson, Jesper
   Tassi, Enrico
   Tankink, Carst
TI Coqoon An IDE for interactive proof development in Coq
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
AB User interfaces for interactive proof assistants have always lagged behind those for mainstream programming languages. Whereas integrated development environments (IDEs) have support for features like project management, version control, dependency analysis and incremental project compilation, "IDE"s for proof assistants typically only operate on files in isolation, relying on external tools to integrate those files into larger projects. In this paper we present Coqoon, an IDE for Coq projects integrated into Eclipse. Coqoon manages proofs as projects rather than isolated source files and compiles these projects using the Eclipse common build system. Coqoon takes advantage of the latest features of Coq, including asynchronous and parallel processing of proofs and-when used together with a third-party OCaml extension for Eclipse-can even be used to work on large developments containing Coq plug-ins.
C1 [Faithfull, Alexander; Bengtson, Jesper] IT Univ Copenhagen, Copenhagen, Denmark.
   [Tassi, Enrico] Inria Sophia Antipolis Mediterranee, Alpes Maritimes, France.
   [Tassi, Enrico] Univ Cote Azur, Alpes Maritimes, France.
   [Tankink, Carst] Inria Saclay Ile de France, Palaiseau, France.
C3 IT University Copenhagen; Universite Cote d'Azur
RP Faithfull, A (corresponding author), IT Univ Copenhagen, Copenhagen, Denmark.
EM alef@itu.dk
FU Paral-ITP project [ANR-11-INSE-001]
FX Funded by the Paral-ITP ANR-11-INSE-001 project.
CR [Anonymous], 2007, PRACTICAL PROGRAMMIN
   Aspinall D, 2000, LECT NOTES COMPUT SC, V1785, P38
   Aspinall D, 2007, LECT NOTES ARTIF INT, V4573, P161
   Barnett M, 2005, LECT NOTES COMPUT SC, V3362, P49
   Barras B., 2015, P ITP NANJ CHIN AUG
   Bengtson Jesper, 2011, Interactive Theorem Proving. Proceedings Second International Conference, ITP 2011, P22, DOI 10.1007/978-3-642-22863-6_5
   Boldo S, 2013, P S COMP ARITHM, P107, DOI 10.1109/ARITH.2013.30
   Bros N., OCAIDE SOFTWARE
   Charles J., 2008, UITP WORKSH P
   Eclipse Foundation, EGIT SOFTW
   Gamma Erich., 1994, DESIGN PATTERNS
   Gonthier G, 2013, LECT NOTES COMPUT SC, V7998, P163, DOI 10.1007/978-3-642-39634-2_14
   Gordon M.J.C., 1993, Introduction to HOL: A theorem proving environment for higher order logic
   Hales T. C., 2012, Dense sphere packings: A blueprint for formal proofs, V400
   Harrison J, 2009, LECT NOTES COMPUT SC, V5674, P60, DOI 10.1007/978-3-642-03359-9_4
   Jacobs Bart., 2008, CW Reports
   Klein G, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2560537
   Magnusson L., 1994, Types for Proofs and Programs. International Workshop TYPES '93. Selected Papers, P213
   Mehnert H, 2011, LECT NOTES COMPUT SC, V6617, P518, DOI 10.1007/978-3-642-20398-5_42
   Ring Martin, 2014, Interactive Theorem Proving. 5th International Conference, ITP 2014, Held as Part of the Vienna Summer of Logic, VSL 2014. Proceedings: LNCS 8558, P467, DOI 10.1007/978-3-319-08970-6_30
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   The Coq Development Team, COQ REF MAN
   Velykis  A., ISABELLE ECLIPSE SOF
   Wenzel Makarius, 2014, Interactive Theorem Proving. 5th International Conference, ITP 2014, Held as Part of the Vienna Summer of Logic, VSL 2014. Proceedings: LNCS 8558, P515, DOI 10.1007/978-3-319-08970-6_33
   Wenzel M., 2014, UITP
NR 25
TC 2
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2018
VL 20
IS 2
SI SI
BP 125
EP 137
DI 10.1007/s10009-017-0457-2
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA6HE
UT WOS:000428433000002
DA 2024-07-18
ER

PT J
AU Abe, T
   Maeda, T
AF Abe, Tatsuya
   Maeda, Toshiyuki
TI A general model checking framework for various memory consistency models
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Memory consistency model; Model checking; Unified Parallel C; Coarray
   Fortran; Itanium
AB Relaxed memory consistency models are common and essential when multiple processes share a single global address space, such as when using multicore CPUs, distributed shared-memory programming languages, and so forth. Programming within these models is difficult and error prone, because of non-intuitive behaviors that could not occur in a strict consistency model. In addition, because the memory consistency models vary from language to language, and CPU to CPU, a program that may work correctly on one system may not work on another. To address the problem, this paper describes a model checking framework in which users are able to check their programs under various memory consistency models. More specifically, our framework provides a base model that exhibits very relaxed behaviors, and users are able to define various consistency models by adding constraints to the base model. This paper also describes McSPIN, a prototype implementation of a model checker based on the proposed framework. McSPIN can take a memory consistency model as an input, as well as a program and a property to be checked. We have specified the necessary constraints for three practical existing memory consistency models (Unified Parallel C, Coarray Fortran, and Itanium). McSPIN verified some example programs correctly, and confirmed the expected differences among the three models.
C1 [Abe, Tatsuya; Maeda, Toshiyuki] RIKEN Adv Inst Computat Sci, Chuo Ku, 7-1-26 Minatojima Minami Machi, Kobe, Hyogo 6500047, Japan.
C3 RIKEN
RP Abe, T (corresponding author), RIKEN Adv Inst Computat Sci, Chuo Ku, 7-1-26 Minatojima Minami Machi, Kobe, Hyogo 6500047, Japan.
EM abet@riken.jp; tosh@riken.jp
OI Abe, Tatsuya/0000-0002-3887-0787
FU JSPS KAKENHI [25871113, 25730050]; Grants-in-Aid for Scientific Research
   [25871113, 25730050] Funding Source: KAKEN
FX The authors are grateful to Gerard Holzmann, who gave responses for the
   questions that they asked at SPIN forum. The authors also thank Dounia
   Khaldi for the useful comment about a relation between the optimizations
   that we proposed. In this research work, we used the supercomputer of
   ACCMS, Kyoto University. This workwas supported by JSPS KAKENHI Grant
   Numbers 25871113 and 25730050.
CR Abdulla PA, 2013, LECT NOTES COMPUT SC, V7795, P530, DOI 10.1007/978-3-642-36742-7_37
   Abdulla PA, 2012, LECT NOTES COMPUT SC, V7460, P164, DOI 10.1007/978-3-642-33125-1_13
   Abe Tatsuya, 2013, 2013 IEEE International Symposium on Parallel and Distributed Processing, Workshops and PhD Forum (IPDPSW), P365, DOI 10.1109/IPDPSW.2013.90
   Abe T., 2014, P PGAS
   Abe T., 2012, P PGAS
   Abe T, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL PARALLEL & DISTRIBUTED PROCESSING SYMPOSIUM WORKSHOPS (IPDPSW), P332, DOI 10.1109/IPDPSW.2014.47
   Adve SV, 1996, COMPUTER, V29, P66, DOI 10.1109/2.546611
   Alglave Jade, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P141, DOI 10.1007/978-3-642-39799-8_9
   Alglave J, 2013, LECT NOTES COMPUT SC, V7792, P512, DOI 10.1007/978-3-642-37036-6_28
   Alglave J, 2010, LECT NOTES COMPUT SC, V6174, P258, DOI 10.1007/978-3-642-14295-6_25
   [Anonymous], 2004, CAUSALITY TEST CASES
   [Anonymous], 2011, International standard 14882:2011
   Atig MF, 2012, LECT NOTES COMPUT SC, V7211, P26, DOI 10.1007/978-3-642-28869-2_2
   Atig MF, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P7, DOI 10.1145/1706299.1706303
   BACON D, 2000, DOUBLE CHECKED LOCKI
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Biere A, 2003, ADV COMPUT, V58, P117
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Bouajjani A, 2013, LECT NOTES COMPUT SC, V7792, P533, DOI 10.1007/978-3-642-37036-6_29
   Boudol G, 2009, ACM SIGPLAN NOTICES, V44, P392, DOI 10.1145/1594834.1480930
   Burckhardt S, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P12, DOI 10.1145/1250734.1250737
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke E, 2003, TIME-ICTL 2003: 10TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING AND FOURTH INTERNATIONAL CONFERENCE ON TEMPORAL LOGIC, PROCEEDINGS, P7
   Crary K, 2015, ACM SIGPLAN NOTICES, V50, P623, DOI [10.1145/2775051.2676984, 10.1145/2676726.2676984]
   Dan AM, 2013, LECT NOTES COMPUT SC, V7935, P84, DOI 10.1007/978-3-642-38856-9_7
   Ebnenasir A, 2011, P PGAS
   Ferreira R, 2010, LECT NOTES COMPUT SC, V6012, P267, DOI 10.1007/978-3-642-11957-6_15
   Gligoric M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P11, DOI 10.1109/ICST.2012.81
   Haggar P., 2000, PRACTICAL JAVA PROGR
   Holzmann Gerard J., 2003, The SPIN Model Checker
   Huynh TQ, 2006, LECT NOTES COMPUT SC, V4085, P476
   Intel Corporation, 2002, FORM SPEC INT IT PRO
   Jagadeesan R, 2010, LECT NOTES COMPUT SC, V6012, P307, DOI 10.1007/978-3-642-11957-6_17
   Jonsson B, 2008, SIGAR COMPUT ARCHIT, V36, P65
   Linden Alexander, 2011, Model Checking Software. Proceedings 18th International SPIN Workshop, P144, DOI 10.1007/978-3-642-22306-8_10
   Linden A, 2013, LECT NOTES COMPUT SC, V7795, P339, DOI 10.1007/978-3-642-36742-7_24
   Linden A, 2010, LECT NOTES COMPUT SC, V6349, P212
   Mador-Haim S, 2010, LECT NOTES COMPUT SC, V6174, P273, DOI 10.1007/978-3-642-14295-6_26
   Manson J, 2005, ACM SIGPLAN NOTICES, V40, P378, DOI 10.1145/1047659.1040336
   Reid J, 2007, SCI PROGRAMMING-NETH, V15, P9, DOI 10.1155/2007/954503
   Saraswat V, 2007, PROCEEDINGS OF THE 2007 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING PPOPP'07, P161, DOI 10.1145/1229428.1229469
   Shen XW, 1999, CONF PROC INT SYMP C, P150
   Siegel SF, 2007, LECT NOTES COMPUT SC, V4349, P44
   Steinke RC, 2004, J ACM, V51, P800, DOI 10.1145/1017460.1017464
   Travkin Oleg, 2013, Hardware and Software: Verification and Testing. 9th International Haifa Verification Conference, HVC 2013. Proceedings: LNCS 8244, P311, DOI 10.1007/978-3-319-03077-7_21
   UPC Consortium, 2013, UPC LANG SPEC VERS 1
   Vakkalanka S, 2008, PPOPP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P285, DOI 10.1145/1345206.1345258
   Xcalable MP, 2014, XCALABLEMP APPL PROG
   Yang Y, 2004, LECT NOTES COMPUT SC, V3308, P30
   Yang Y, 2005, CONCURR COMP-PRACT E, V17, P465, DOI 10.1002/cpe.837
   Yang Y., 2004, P IPDPS
NR 51
TC 4
Z9 4
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2017
VL 19
IS 5
BP 623
EP 647
DI 10.1007/s10009-016-0429-y
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FF8VL
UT WOS:000409295800008
DA 2024-07-18
ER

PT J
AU Osaiweran, A
   Schuts, M
   Hooman, J
   Groote, JF
   van Rijnsoever, B
AF Osaiweran, Ammar
   Schuts, Mathijs
   Hooman, Jozef
   Groote, Jan Friso
   van Rijnsoever, Bart
TI Evaluating the effect of a lightweight formal technique in industry
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal methods; Industrial application; Code generation; Component-based
   design; Compositional verification
AB We evaluate the effect of applying the commercial formal technique Analytical Software Design (ASD) to an industrial project. In ASD, interfaces and software designs are modelled using a formal tabular notation. The ASD tool set supports formal checks of these models, such as deadlock freedom and interface compliance. In addition, full code can be generated from design models. ASD has been applied at Philips Healthcare to develop parts of the software of interventional X-ray systems. We report about the experiences with the embedding of ASD into the development processes. The quality of the resulting code and the productivity has been analysed and compared to code developed with other techniques. We observe that the use of ASD leads to a strong reduction of the number of defects and an increase in productivity. The results are also compared to the literature about standards and related projects at other companies.
C1 [Osaiweran, Ammar; Groote, Jan Friso] Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
   [Schuts, Mathijs; van Rijnsoever, Bart] Philips Healthcare, Best, Netherlands.
   [Hooman, Jozef] Embedded Syst Innovat TNO, Eindhoven, Netherlands.
   [Hooman, Jozef] Radboud Univ Nijmegen, NL-6525 ED Nijmegen, Netherlands.
C3 Eindhoven University of Technology; Philips; Philips Healthcare; Radboud
   University Nijmegen
RP Osaiweran, A (corresponding author), Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM osaiweran@gmail.com; mathijs.schuts@philips.com; jozef.hooman@tno.nl;
   j.f.groote@tue.nl; bart.van.rijnsoever@philips.com
RI Hooman, Jozef/W-1613-2019
OI Groote, Jan Friso/0000-0003-2196-6587; Osaiweran,
   Ammar/0000-0002-8018-3905
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial JR, 2007, J UNIVERS COMPUT SCI, V13, P619
   [Anonymous], P 2007 C CTR ADV STU
   [Anonymous], 2015, CONFIGURABLE SOFTWAR
   Badeau F, 2005, LECT NOTES COMPUT SC, V3455, P334
   Barnes J., 2006, P 1 INT S SEC SOFTW
   Behm P, 1999, LECT NOTES COMPUT SC, V1708, P369
   Bicarregui J., 1996, FME '96: Industrial Benefit and Advances in Formal Methods. Third International Symposium of Formal Methods Europe. Proceedings, P60
   Borger E., 2000, Abstract State Machines Theory and Applications. International Workshop, ASM 2000. Proceedings (Lecture Notes in Computer Science Vol.1912), P361
   Broadfoot GH, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P49, DOI 10.1109/APSEC.2003.1254357
   Clement T, 1999, LECT NOTES COMPUT SC, V1698, P216
   CSK Systems Corporation, 2014, VDMTOOLS IND TOOL SU
   Cusumano M, 2003, IEEE SOFTWARE, V20, P28, DOI 10.1109/MS.2003.1241363
   Doornbos R., 2012, 2012 International Conference on Innovations in Information Technology (IIT), P60, DOI 10.1109/INNOVATIONS.2012.6207775
   Esterel Technologies, 2014, MOD BAS DEV ENV DED
   Fitzgerald J., 2005, Validated Designs for Object-oriented Systems
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Groote Jan Friso, 2012, Fundamentals of Software Engineering. 4th IPM International Conference, FSEN 2011. Revised Selected Papers, P112, DOI 10.1007/978-3-642-29320-7_8
   Hausler P.A., 1992, 17 ANN SOFTW ENG WOR
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1486, P18, DOI 10.1007/BFb0055332
   Hoare CAR., 1985, Communicating Sequential Processes
   Holloway C. M., 1997, PROC 16 DASC ALAAEKE, P3, DOI DOI 10.1109/DASC.1997.635021
   Hooman Jozef, 2012, Foundations of Health Informatics Engineering and Systems. First International Symposium, FHIES 2011. Revised Selected Papers, P93, DOI 10.1007/978-3-642-32355-3_6
   HOOMAN J, 1991, LECT NOTES COMPUTER, V558
   Hopcroft PJ, 2005, ELECTRON NOTES THEOR, V128, P127, DOI 10.1016/j.entcs.2005.04.008
   Jones C., 2000, Software assessment, benchmarks, and best practices
   Jones C.B., 1996, IEEE COMPUTER, V29, P20
   Kurita T., 2009, INT J SOFTWARE INFOR, V3, P343
   Larsen PG, 2001, J UNIVERS COMPUT SCI, V7, P692
   LINGER RC, 1992, LECT NOTES COMPUT SC, V640, P380
   LINGER RC, 1993, PROC INT CONF SOFTW, P2, DOI 10.1109/ICSE.1993.346060
   McConnell S., 2006, Software Estimation: Demystifying the Black Art
   McConnell Steve., 2004, Code Complete, V2nd ed
   MILLS HD, 1988, COMPUTER, V21, P23, DOI 10.1109/2.948
   MILLS HD, 1992, 25TH P HAW INT C SYS, P373
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
NR 36
TC 4
Z9 4
U1 1
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2016
VL 18
IS 1
BP 93
EP 108
DI 10.1007/s10009-015-0374-1
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB7SL
UT WOS:000368716200006
OA hybrid
DA 2024-07-18
ER

PT J
AU Turner, KJ
   Lambert, PS
AF Turner, Kenneth J.
   Lambert, Paul S.
TI Workflows for quantitative data analysis in the social sciences
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE e-Social science; Quantitative data analysis; Scientific workflow;
   Service-oriented architecture; Statistical analysis
AB The background is given as to how statistical analysis is used by quantitative social scientists. Developing statistical analyses requires substantial effort, yet there are important limitations in current practice. This has motivated the authors to create a more systematic and effective methodology with supporting tools. The approach to modelling quantitative data analysis in the social sciences is presented. Analysis scripts are treated abstractly as mathematical functions and concretely as web services. This allows individual scripts to be combined into high-level workflows. A comprehensive set of tools allows workflows to be defined, automatically validated and verified, and automatically implemented. The workflows expose opportunities for parallel execution, can define support for proper fault handling, and can be realised by non-technical users. Services, workflows and datasets can also be readily shared. The approach is illustrated with a realistic case study that analyses occupational position in relation to health.
C1 [Turner, Kenneth J.] Univ Stirling, Comp Sci & Math, Stirling FK9 4LA, Scotland.
   [Lambert, Paul S.] Univ Stirling, Appl Social Sci, Stirling FK9 4LA, Scotland.
C3 University of Stirling; University of Stirling
RP Turner, KJ (corresponding author), Univ Stirling, Comp Sci & Math, Stirling FK9 4LA, Scotland.
EM kjt@cs.stir.ac.uk; paul.lambert@stir.ac.uk
OI Lambert, Paul/0000-0002-3045-4172
FU ESRC [ES/F029497/1] Funding Source: UKRI
CR [Anonymous], 2008, INT HDB SURVEY METHO
   [Anonymous], 2007, Workflows for E-Science: Scientific Workflows for Grids
   [Anonymous], ESRC SFC SCOPING STU
   Arkin A, 2007, WEB SERVICES BUSINES
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Blank G., 2004, SOC SCI COMPUT REV, V22
   Bradfield J, 2007, HDB MODAL LOGIC
   Browne W.J., 2012, A beginner's guide to Stat-JR (Beta release)
   Butler M, 2005, J UNIVERS COMPUT SCI, V11, P712
   Chirichiello A., 2005, P WEB INT
   De Roure D, 2007, P IEEE INT C E-SCI, P603
   Economic and Social Data Service and University of Manchester, 2012, LINK INT MACR MICR D
   Ferrara A., 2004, Proceedings of the 2nd International Conference on Service-Oriented Computing, ICSOC '04, P242
   FOSTER H, 2006, THESIS IMPERIAL COLL
   Foster I., 2002, GRID Today, V1
   Freese J, 2007, SOCIOL METHOD RES, V36, P153, DOI 10.1177/0049124107306659
   Fu X., 2004, P 13 INT C WORLD WID, P621
   Ghanem M., 2002, P 11 INT S HIGH PERF, P198
   Hey T., 2009, Microsoft Research
   ISO, 1989, Technical Report 8807
   Kaveh N, 2003, LECT NOTES COMPUT SC, V2804, P63
   Lambert, 2012, SOCIAL STRATIFICATIO, P13
   Li J, 2008, LECT NOTES COMPUT SC, V5048, P149
   Long J.Scott., 2009, The Workflow of Data Analysis using Stata
   Mackenbach JP, 2008, NEW ENGL J MED, V358, P2468, DOI 10.1056/NEJMsa0707519
   Margaria T., 2008, BMC BIOINFORMATICS, V9, P1614
   Oinn T, 2004, BIOINFORMATICS, V20, P3045, DOI 10.1093/bioinformatics/bth361
   PAUTASSO C, 2005, P IEEE S VIS LANG HU
   Qin J., 2012, Scientific Workflows: Programming, Optimization, and Synthesis with ASKALON and AWDL
   Smith SN, 2011, INT J SOC RES METHOD, V14, P485, DOI 10.1080/13645579.2011.611386
   Steffen B, 2007, LECT NOTES COMPUT SC, V4383, P92
   Tannenbaum T., 2003, BEOWULF CLUSTER COMP, P307
   Treiman D.J., 2009, QUANTITATIVE DATA AN
   Turner KJ, 2006, SOFTWARE PRACT EXPER, V36, P999, DOI 10.1002/spe.721
   Turner KJ, 2012, J NETW COMPUT APPL, V35, P1304, DOI 10.1016/j.jnca.2012.01.015
   Turner KJ, 2011, J AMB INTEL SMART EN, V3, P83, DOI 10.3233/AIS-2011-0100
   Turner KJ, 2004, COMPUT NETW, V45, P665, DOI 10.1016/j.comnet.2004.03.005
   Wassermann B., 2007, WORKFLOWS E SCI CHAP, P428, DOI DOI 10.1007/978-1-84628-757-2_26
   Wirsing M, 2006, LECT NOTES COMPUT SC, V4229, P24
   Yu J, 2007, P 1 INT WORKSH ARCH, P86
NR 40
TC 7
Z9 8
U1 1
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2015
VL 17
IS 3
BP 321
EP 338
DI 10.1007/s10009-014-0315-4
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7NL
UT WOS:000355682600006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Chen, HY
   Flur, S
   Mukhopadhyay, S
AF Chen, Hong Yi
   Flur, Shaked
   Mukhopadhyay, Supratik
TI Termination proofs for linear simple loops
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Termination; Linear simple loops; Disjunctive ranking relations; Static
   analysis
ID ABSTRACTION; RANKING; INVARIANCE; REFINEMENT
AB Analysis of termination and other liveness properties of a program can be reduced to termination proof synthesis for simple loops, i.e., loops with only variable updates in the loop body. Among simple loops, the subset of linear simple loops (LSLs) is particularly interesting because it is common in practice and expressive in theory. Existing techniques can successfully synthesize a linear ranking function for an LSL if there exists one. However, when a terminating LSL does not have a linear ranking function, these techniques fail. In this paper, we describe an automatic method that generates proofs of (universal) termination for LSLs based on the synthesis of disjunctive ranking relations. The method repeatedly finds linear ranking functions on partitions of the state space and checks whether the transitive closure of the transition relation is included in the union of the ranking relations. Our method extends the work of Podelski and Rybalchenko (A complete method for the synthesis of linear ranking functions. In: Proceedings of the 5th international conference on VMCAI, Jan 2004, Venice, Italy, pp 239-251, 2004). We have implemented a prototype of the method and have shown experimental evidence of the effectiveness of our method.
C1 [Chen, Hong Yi; Mukhopadhyay, Supratik] Louisiana State Univ, Dept Comp Sci, Baton Rouge, LA 70803 USA.
   [Flur, Shaked] Technion Israel Inst Technol, Dept Comp Sci, IL-32000 Haifa, Israel.
C3 Louisiana State University System; Louisiana State University; Technion
   Israel Institute of Technology
RP Chen, HY (corresponding author), Louisiana State Univ, Dept Comp Sci, Baton Rouge, LA 70803 USA.
EM hchen11@lsu.edu; fshaked@cs.technion.ac.il; supratik@csc.lsu.edu
RI chen, hongyi/JCE-0620-2023; liu, feng/KCL-0778-2024; chen,
   hongyi/HTS-1467-2023
CR Balaban I, 2006, LECT NOTES COMPUT SC, V3855, P267
   Berdine J, 2007, ACM SIGPLAN NOTICES, V42, P211, DOI 10.1145/1190215.1190249
   Berdine J, 2006, LECT NOTES COMPUT SC, V4144, P386, DOI 10.1007/11817963_35
   Bradley A.R., 2005, POLYRANK TOOLS TERMI
   Bradley AR, 2005, LECT NOTES COMPUT SC, V3576, P491
   Bradley AR, 2005, LECT NOTES COMPUT SC, V3580, P1349
   Bradley AR, 2005, LECT NOTES COMPUT SC, V3385, P113
   Braverman M, 2006, LECT NOTES COMPUT SC, V4144, P372, DOI 10.1007/11817963_34
   Chawdhary A., 2008, TECHNICAL REPORT
   Colon M. A., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P67
   Colon M. A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P442
   Colón MA, 1998, LECT NOTES COMPUT SC, V1427, P293, DOI 10.1007/BFb0028753
   Cook B, 2005, LECT NOTES COMPUT SC, V3672, P87
   Cook B, 2008, LECT NOTES COMPUT SC, V5123, P328
   Cook B, 2006, ACM SIGPLAN NOTICES, V41, P415, DOI 10.1145/1133981.1134029
   Cook B, 2007, CONFERENCE RECORD OF POPL 2007: THE 34TH ACM SIGPLAN SIGACT SYMPOSIUM ON PRINCIPLES OF PROGAMMING LANGUAGES, P265
   Cousot P, 2005, LECT NOTES COMPUT SC, V3385, P1
   Cousot P, 2012, ACM SIGPLAN NOTICES, V47, P245, DOI 10.1145/2103621.2103687
   Flur S., LST TEST SUITE
   Gulwani S, 2009, ACM SIGPLAN NOTICES, V44, P127, DOI 10.1145/1594834.1480898
   Gulwani S, 2009, ACM SIGPLAN NOTICES, V44, P375, DOI 10.1145/1543135.1542518
   Kroening D, 2010, LECT NOTES COMPUT SC, V6174, P89, DOI 10.1007/978-3-642-14295-6_9
   Podelski A, 2004, IEEE S LOG, P32, DOI 10.1109/LICS.2004.1319598
   Podelski A, 2004, LECT NOTES COMPUT SC, V2937, P239
   Podelski A., 2005, P 32 ACM SIGPLAN SIG
   Podelski A., 2003, MPII2003200
   Ramsey F.P., 1930, P LOND MATH SOC, V30, P491
   Schrijver A., 1998, THEORY LINEAR INTEGE
   Tiwari A, 2004, LECT NOTES COMPUT SC, V3114, P70
   TURING AM, 1948, C HIGH SPEED AUT CAL, P67
NR 30
TC 5
Z9 5
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2015
VL 17
IS 1
BP 47
EP 57
DI 10.1007/s10009-013-0288-8
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7ND
UT WOS:000355681700003
DA 2024-07-18
ER

PT J
AU Basile, D
   ter Beek, MH
   Bussi, L
   Ciancia, V
AF Basile, Davide
   ter Beek, Maurice H.
   Bussi, Laura
   Ciancia, Vincenzo
TI A toolchain for strategy synthesis with spatial properties
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Synthesis; Games; Spatial model checking; CAS; Multi-agent systems;
   Rigorous tool engineering
ID SUPERVISORY CONTROL; SYSTEM
AB We present an application of strategy synthesis to enforce spatial properties. This is achieved by implementing a toolchain that enables the tools CATLib and VoxLogicA to interact in a fully automated way. The Contract Automata Library (CATLib) is aimed at both composition and strategy synthesis of games modelled in a dialect of finite state automata. The Voxel-based Logical Analyser (VoxLogicA) is a spatial model checker for the verification of properties expressed using the Spatial Logic of Closure Spaces on pixels of digital images. We provide examples of strategy synthesis on automata encoding motion of agents in spaces represented by images, as well as a proof-of-concept realistic example based on a case study from the railway domain. The strategies are synthesised with CATLib, while the properties to enforce are defined by means of spatial model checking of the images with VoxLogicA. The combination of spatial model checking with strategy synthesis provides a toolchain for checking and enforcing mobility properties in multi-agent systems in which location plays an important role, like in many collective adaptive systems. We discuss the toolchain's performance also considering several recent improvements.
C1 [Basile, Davide; ter Beek, Maurice H.; Bussi, Laura; Ciancia, Vincenzo] ISTI CNR, Formal Methods & Tools Lab, Pisa, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR)
RP Basile, D (corresponding author), ISTI CNR, Formal Methods & Tools Lab, Pisa, Italy.
EM davide.basile@isti.cnr.it; maurice.terbeek@isti.cnr.it;
   laura.bussi@isti.cnr.it; vincenzo.ciancia@isti.cnr.it
RI ; Ciancia, Vincenzo/G-4149-2016
OI Bussi, Laura/0000-0003-1292-4086; Ciancia, Vincenzo/0000-0003-1314-0574
FU This manuscript reflects only the authors' views and opinions, neither
   the European Union nor the European Commission can be considered
   responsible for them.
FX This manuscript reflects only the authors' views and opinions, neither
   the European Union nor the European Commission can be considered
   responsible for them.
CR Alsalehi S, 2021, IEEE DECIS CONTR P, P5110, DOI 10.1109/CDC45484.2021.9682921
   Alur R, 2016, LECT NOTES COMPUT SC, V9780, P251, DOI 10.1007/978-3-319-41540-6_14
   [Anonymous], 2015, HSCC 15, DOI [10.1145/2728606.2728633, DOI 10.1145/2728606.2728633]
   Asarin E, 1998, SYSTEM STRUCTURE AND CONTROL 1998 (SSC'98), VOLS 1 AND 2, P447
   Basile Davide, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P142, DOI 10.1007/978-3-031-19759-8_10
   Basile D, 2016, J LOG ALGEBR METHODS, V85, P425, DOI 10.1016/j.jlamp.2015.09.011
   Basile D., 2021, COORDINATION 2021, P225, DOI DOI 10.1007/978-3-030-78142-2_14
   Basile D., 2023, EPTCS, V383, P73, DOI [10.4204/EPTCS.383.5, DOI 10.4204/EPTCS.383.5]
   Basile D., 2017, P 11 INT WORKSH VAR, P20, DOI DOI 10.1145/3023956.3023965
   Basile D, 2023, LECT NOTES COMPUT SC, V14000, P550, DOI 10.1007/978-3-031-27481-7_31
   Basile D, 2022, SCI COMPUT PROGRAM, V221, DOI 10.1016/j.scico.2022.102841
   Basile D, 2020, LECT NOTES COMPUT SC, V12136, P3, DOI 10.1007/978-3-030-50086-3_1
   Basile D, 2021, FORM ASP COMPUT, V33, P957, DOI 10.1007/s00165-021-00556-1
   Basile D, 2020, LOG METH COMPUT SCI, V16, DOI 10.23638/LMCS-16(2:9)2020
   Basile D, 2020, INNOV SYST SOFTW ENG, V16, P199, DOI 10.1007/s11334-019-00353-3
   Basile D, 2020, SCI COMPUT PROGRAM, V187, DOI 10.1016/j.scico.2019.102344
   Basile D, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE - VOL 2, P11, DOI 10.1145/3236405.3236408
   Basile D, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P117, DOI 10.1145/3109729.3109741
   Basile D, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P3, DOI 10.1145/3109729.3109760
   Basile D, 2016, LOG METH COMPUT SCI, V12, DOI 10.2168/LMCS-12(4:6)2016
   Basile D, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P679, DOI 10.5220/0006291106790686
   Basile D, 2016, LECT NOTES COMPUT SC, V9688, P62, DOI 10.1007/978-3-319-39570-8_5
   Belmonte Gina, 2019, From Software Engineering to Formal Methods and Tools, and Back: Essays Dedicated to Stefania Gnesi on the Occasion of Her 65th Birthday. Lecture Notes in Computer Science (LNCS 11865), P85, DOI 10.1007/978-3-030-30985-5_7
   Belmonte G, 2021, FME WORKS FORM, P1, DOI 10.1109/FormaliSE52586.2021.00007
   Belmonte G, 2019, LECT NOTES COMPUT SC, V11427, P281, DOI 10.1007/978-3-030-17462-0_16
   Bernardo M., 2016, FORMAL METHODS QUANT, DOI [10.1007/978-3-319-34096-8, DOI 10.1007/978-3-319-34096-8]
   Bezhanishvili N, 2022, LOG METH COMPUT SCI, V18, DOI 10.46298/LMCS-18(4:7)2022
   Buonamici FB, 2020, INT J SOFTW TOOLS TE, V22, P195, DOI 10.1007/s10009-019-00511-9
   Bussi L., 2021, LNCS, V1326, P78, DOI [10.1007/978-3-031-16011-0_6, DOI 10.1007/978-3-031-16011-0_6]
   Bussi L, 2021, LECT NOTES COMPUT SC, V12719, P188, DOI 10.1007/978-3-030-78089-0_12
   Calude CS, 2017, ACM S THEORY COMPUT, P252, DOI 10.1145/3055399.3055409
   Camacho A., 2019, ICAPS, P58, DOI [10.1609/icaps.v29i1.3460, DOI 10.1609/ICAPS.V29I1.3460]
   Cassandras ChristosG., 2008, Introduction to Discrete Event Systems, V2nd, P776, DOI DOI 10.1007/978-0-387-68612-7
   Castelnovo D., 2021, LIPICS, V211, DOI 10.4230/LIPIcs.CALCO.2021.12
   Cauchi N, 2019, LECT NOTES COMPUT SC, V11428, P247, DOI 10.1007/978-3-030-17465-1_14
   Ceska M, 2016, LECT NOTES COMPUT SC, V9636, P367, DOI 10.1007/978-3-662-49674-9_21
   Cheng CH, 2017, LECT NOTES COMPUT SC, V10205, P398, DOI 10.1007/978-3-662-54577-5_23
   Ciancia V, 2021, LECT NOTES COMPUT SC, V12864, P22, DOI 10.1007/978-3-030-84629-9_2
   Ciancia V, 2018, INT J SOFTW TOOLS TE, V20, P289, DOI 10.1007/s10009-018-0483-8
   Ciancia V, 2016, LOG METH COMPUT SCI, V12, DOI 10.2168/LMCS-12(4:2)2016
   Ciancia V, 2016, LECT NOTES COMPUT SC, V9952, P657, DOI 10.1007/978-3-319-47166-2_46
   Ciancia V, 2015, 2015 IEEE NINTH INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS WORKSHOPS (SASOW), P74, DOI 10.1109/SASOW.2015.17
   Ciancia V, 2014, INT CONF SELF SELF, P32, DOI 10.1109/SASOW.2014.16
   David Alexandre, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P206, DOI 10.1007/978-3-662-46681-0_16
   Deniélou PM, 2012, LECT NOTES COMPUT SC, V7211, P194, DOI 10.1007/978-3-642-28869-2_10
   Ehlers R, 2017, DISCRETE EVENT DYN S, V27, P209, DOI 10.1007/s10626-015-0223-0
   Fan CC, 2020, LECT NOTES COMPUT SC, V12224, P629, DOI 10.1007/978-3-030-53288-8_31
   Farhat H, 2018, IEEE ACCESS, V6, P59779, DOI 10.1109/ACCESS.2018.2874564
   Felli P, 2017, IEEE T AUTOMAT CONTR, V62, P986, DOI 10.1109/TAC.2016.2570748
   Ferrari A, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3520480
   Ferscha A., 2015, UBICOMPISWC ADJUNCT, P893, DOI DOI 10.1145/2800835.2809508
   Forschelen STJ, 2012, DISCRETE EVENT DYN S, V22, P511, DOI 10.1007/s10626-012-0130-6
   Glazier TJ, 2015, 2015 IEEE NINTH INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS WORKSHOPS (SASOW), P55, DOI 10.1109/SASOW.2015.14
   Gu R, 2022, INT J SOFTW TOOLS TE, V24, P395, DOI 10.1007/s10009-022-00657-z
   Guo M, 2015, INT J ROBOT RES, V34, P218, DOI 10.1177/0278364914546174
   Haghighi I, 2016, IEEE DECIS CONTR P, P5708, DOI 10.1109/CDC.2016.7799146
   Hillston J., 2014, DAGSTUHL REP, V4, P68, DOI DOI 10.4230/DAGREP.4.12.68
   Kwiatkowska M, 2020, LECT NOTES COMPUT SC, V12225, P475, DOI 10.1007/978-3-030-53291-8_25
   Lange J, 2015, ACM SIGPLAN NOTICES, V50, P221, DOI [10.1145/2775051.2676964, 10.1145/2676726.2676964]
   Lavaei A, 2020, LECT NOTES COMPUT SC, V12225, P461, DOI 10.1007/978-3-030-53291-8_24
   Lehmann S, 2022, ELECTRON P THEOR COM, P40, DOI 10.4204/EPTCS.355.4
   Liu ZY, 2020, IEEE T CONTROL NETW, V7, P1801, DOI 10.1109/TCNS.2020.3000742
   Loizou SG, 2004, IEEE DECIS CONTR P, P153, DOI 10.1109/CDC.2004.1428622
   Loreti M., 2021, ARXIV
   Luttenberger M, 2020, ACTA INFORM, V57, P3, DOI 10.1007/s00236-019-00349-3
   Meiyi Ma, 2021, IEEE Internet of Things Journal, V8, P11793, DOI 10.1109/JIOT.2021.3069943
   Meyer PJ, 2018, LECT NOTES COMPUT SC, V10981, P578, DOI 10.1007/978-3-319-96145-3_31
   RAMADGE PJ, 1987, SIAM J CONTROL OPTIM, V25, P206, DOI 10.1137/0325013
   Shokri-Manninen F, 2020, LECT NOTES COMPUT SC, V12310, P41, DOI 10.1007/978-3-030-58768-0_3
   Sun DW, 2022, IEEE ROBOT AUTOM LET, V7, P3451, DOI 10.1109/LRA.2022.3146951
   ter Beek MH, 2016, LECT NOTES COMPUT SC, V9952, P856, DOI 10.1007/978-3-319-47166-2_59
   Theunissen RJM, 2012, ADV ENG INFORM, V26, P502, DOI 10.1016/j.aei.2012.02.009
   Thuijsman S., 2023, ACM T EMBED COMPUT S, DOI [10.1145/3579644, DOI 10.1145/3579644]
   Tsigkanos C, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P38, DOI 10.1145/3106237.3106299
   van der Sanden B, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P416, DOI 10.1109/MODELS.2015.7338273
NR 75
TC 1
Z9 1
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2023
VL 25
IS 5-6
BP 641
EP 658
DI 10.1007/s10009-023-00730-1
EA NOV 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AB9N8
UT WOS:001093027600011
OA hybrid
DA 2024-07-18
ER

PT J
AU Jüngermann, F
   Kretinsky, J
   Weininger, M
AF Juengermann, Florian
   Kretinsky, Jan
   Weininger, Maximilian
TI Algebraically explainable controllers: decision trees and support vector
   machines join forces
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Controller representation; Explainability; Synthesis; Decision tree
AB Recently, decision trees (DT) have been used as an explainable representation of controllers (a.k.a. strategies, policies, schedulers). Although they are often very efficient and produce small and understandable controllers for discrete systems, complex continuous dynamics still pose a challenge. In particular, when the relationships between variables take more complex forms, such as polynomials, they cannot be obtained using the available DT learning procedures. In contrast, support vector machines provide a more powerful representation, capable of discovering many such relationships, but not in an explainable form. Therefore, we suggest to combine the two frameworks to obtain an understandable representation over richer, domain-relevant algebraic predicates. We demonstrate and evaluate the proposed method experimentally on established benchmarks.
C1 [Juengermann, Florian; Kretinsky, Jan; Weininger, Maximilian] Tech Univ Munich, Munich, Germany.
   [Kretinsky, Jan] Masaryk Univ, Brno, Czech Republic.
C3 Technical University of Munich; Masaryk University Brno
RP Kretínsky, J (corresponding author), Tech Univ Munich, Munich, Germany.; Kretínsky, J (corresponding author), Masaryk Univ, Brno, Czech Republic.
EM florian.jungermann@tum.de; jan.kretinsky@tum.de;
   maximilian.weininger@tum.de
OI Weininger, Maximilian/0000-0002-0163-2152
FU German Research Foundation (DFG) [383882557]; Statistical Unbounded
   Verification(SUV) [427755713]; Group-By Objectives in Probabilistic
   Verification (GOPro)
FX Open Access funding enabled and organized by ProjektDEAL. This research
   was funded in part by the German Research Foundation (DFG) projects
   383882557 Statistical Unbounded Verification(SUV)and 427755713 Group-By
   Objectives in Probabilistic Verification (GOPro). This paper extends the
   tool dt Control [6] and through the synergy of algebraic, formal-methods
   and machine-learning approaches it increases the explainability of
   controllers, positioning itself into the STTT theme area Explanation
   Paradigms Leveraging Algebraic Intuition (ExPLAIn).
CR Akmese S.M., 2019, THESIS TU MUNICH
   ARLINGHAUS S., 1994, Practical Handbook of Curve Fitting, V1st
   Ashok Pranav, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12652), P326, DOI 10.1007/978-3-030-72013-1_17
   Ashok P., 2020, P 23 INT C HYBR SYST
   Ashok P, 2019, LECT NOTES COMPUT SC, V11785, P147, DOI 10.1007/978-3-030-30281-8_9
   Ashok P, 2019, LECT NOTES COMPUT SC, V11785, P109, DOI 10.1007/978-3-030-30281-8_7
   Bahar RI, 1997, FORM METHOD SYST DES, V10, P171, DOI 10.1023/A:1008699807402
   Bennett KP, 1998, IEEE WORLD CONGRESS ON COMPUTATIONAL INTELLIGENCE, P2396, DOI 10.1109/IJCNN.1998.687237
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Bollig B, 1996, IEEE T COMPUT, V45, P993, DOI 10.1109/12.537122
   Brázdil T, 2015, LECT NOTES COMPUT SC, V9206, P158, DOI 10.1007/978-3-319-21690-4_10
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Chang Y., 2010, Journal of Machine Learning Research, V11, P1471, DOI [DOI 10.5555/1756006.1859899, 10.5555/1756006.1859899]
   David Alexandre, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P206, DOI 10.1007/978-3-662-46681-0_16
   Decoste D, 2002, MACH LEARN, V46, P161, DOI 10.1023/A:1012454411458
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Hartmanns A, 2019, LECT NOTES COMPUT SC, V11427, P344, DOI 10.1007/978-3-030-17462-0_20
   Hastie T., 2009, The Elements of Statistical Learning: Data Mining, Inference, and Prediction, DOI DOI 10.1007/978-0-387-84858-7
   Ittner A., 1996, Machine Learning. Proceedings of the Thirteenth International Conference (ICML '96), P252
   Jackermeier M., 2020, DTCONTROL DECISION
   Jagtap P, 2020, ACM TRANS CYBER-PHYS, V4, DOI 10.1145/3407183
   Jagtap P, 2017, LECT NOTES COMPUT SC, V10503, P309, DOI 10.1007/978-3-319-66335-7_21
   Khaled M, 2019, PROCEEDINGS OF THE 2019 22ND ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC '19), P252, DOI 10.1145/3302504.3311798
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Larsen KG, 2015, LECT NOTES COMPUT SC, V9360, P260, DOI 10.1007/978-3-319-23506-6_17
   Levenberg K., 1944, Quarterly of Applied Mathematics, V2, P164, DOI [10.1090/QAM/10666, DOI 10.1090/QAM/10666]
   MARQUARDT DW, 1963, J SOC IND APPL MATH, V11, P431, DOI 10.1137/0111030
   Mitchell T. M., 1997, MACH LEARN
   Murthy SK, 1994, J ARTIF INTELL RES, V2, P1, DOI 10.1613/jair.63
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pradhan S, 2004, HLT-NAACL 2004: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P233
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Rungger M, 2016, HSCC'16: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P99, DOI 10.1145/2883817.2883834
   Rungger M, 2015, IEEE DECIS CONTR P, P6139, DOI 10.1109/CDC.2015.7403185
   St-Aubin R, 2001, ADV NEUR IN, V13, P1089
   Swikir A, 2019, IEEE CONTR SYST LETT, V3, P1056, DOI 10.1109/LCSYS.2019.2920766
   Weinhuber C., 2020, LEARNING DOMAIN SPE
   Zapreev IS, 2018, IFAC PAPERSONLINE, V51, P1, DOI 10.1016/j.ifacol.2018.08.001
NR 39
TC 1
Z9 1
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2023
VL 25
IS 3
BP 249
EP 266
DI 10.1007/s10009-023-00716-z
EA AUG 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S0IX8
UT WOS:001045591500001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Murtovi, A
   Bainczyk, A
   Nolte, G
   Schlüter, M
   Steffen, B
AF Murtovi, Alnis
   Bainczyk, Alexander
   Nolte, Gerrit
   Schlueter, Maximilian
   Steffen, Bernhard
TI Forest GUMP: a tool for verification and explanation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Random forest; Binary; algebraic decision diagram; Aggregation;
   Infeasible paths; Verification; Equivalence checking; Explainability;
   Random seed
AB In this paper, we present Forest GUMP (for Generalized, Unifying Merge Process) a tool for verification and precise explanation of Random forests. Besides pre/post-condition-based verification and equivalence checking, Forest GUMP also supports three concepts of explanation, the well-known model explanation and outcome explanation, as well as class characterization, i.e., the precise characterization of all samples that are equally classified. Key technology to achieve these results is algebraic aggregation, i.e., the transformation of a Random Forest into a semantically equivalent, concise white-box representation in terms of Algebraic Decision Diagrams (ADDs). The paper sketches the method and demonstrates the use of Forest GUMP along illustrative examples. This way readers should acquire an intuition about the tool, and the way how it should be used to increase the understanding not only of the considered dataset, but also of the character of Random Forests and the ADD technology, here enriched to comprise infeasible path elimination. As Forest GUMP is publicly available all experiments can be reproduced, modified, and complemented using any dataset that is available in the ARFF format.
EM alnis.murtovi@tu-dortmund.de; alexander.bainczyk@tu-dortmund.de;
   gerrit.nolte@tu-dortmund.de; maximilian.schlueter@tu-dortmund.de;
   bernhard.steffen@tu-dortmund.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL
CR AKERS SB, 1978, IEEE T COMPUT, V27, P509, DOI 10.1109/TC.1978.1675141
   BAHAR RI, 1993, 1993 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN - DIGEST OF TECHNICAL PAPERS, P188, DOI 10.1109/ICCAD.1993.580054
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Chen H., 2019, P NEURIPS, P12317
   Chipman HA, 1998, COMP SCI STAT, V30, P84
   Deng HT, 2019, INT J DATA SCI ANAL, V7, P277, DOI 10.1007/s41060-018-0144-8
   Domingos P., 1998, Intell. Data Anal., V2, P187, DOI [10.1016/S1088-467X(98)00023-7, 10.1016/S1088-467X(98)00023-7 ala, DOI 10.1016/S1088-467X(98)00023-7ALA]
   Einziger G, 2019, AAAI CONF ARTIF INTE, P2446
   Fernández-Delgado M, 2014, J MACH LEARN RES, V15, P3133
   Fisher RA, 1936, ANN EUGENIC, V7, P179, DOI 10.1111/j.1469-1809.1936.tb02137.x
   Gossen Frederik, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Modeling. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11244), P546, DOI 10.1007/978-3-030-03418-4_33
   Gossen F., JAVA LIB ALGEBRAIC D
   Gossen F, 2021, IT PROF, V23, P8, DOI 10.1109/MITP.2021.3123495
   Gossen F, 2023, INT J SOFTW TOOLS TE, V25, P267, DOI 10.1007/s10009-021-00635-x
   Gossen F, 2020, IT PROF, V22, P8, DOI 10.1109/MITP.2020.3005640
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Hara S, 2018, PR MACH LEARN RES, V84
   Hungar H., 2015, USPTO Patent, Patent No. 9141708
   Kantchelian Alex, 2016, INT C MACHINE LEARNI, P2387
   LEE CY, 1959, BELL SYST TECH J, V38, P985, DOI 10.1002/j.1538-7305.1959.tb01585.x
   Lou Yin, 2012, P 18 ACM SIGKDD INT, P150, DOI DOI 10.1145/2339530.2339556
   Mangla P., 2020, JOINT EUROPEAN C MAC, P272
   Mundhenk T.N., 2019, ARXIV
   Murtovi A, 2022, LECT NOTES COMPUT SC, V13244, P314, DOI 10.1007/978-3-030-99527-0_17
   Nolte G, 2023, INT J SOFTW TOOLS TE, V25, P355, DOI 10.1007/s10009-023-00701-6
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Ranzato F, 2020, AAAI CONF ARTIF INTE, V34, P5478
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Sato N., 2019, ARXIV
   Schlüter M, 2023, INT J SOFTW TOOLS TE, V25, P301, DOI 10.1007/s10009-023-00700-7
   Steffen B., 2019, LANGUAGE DRIVEN ENG, P311, DOI [10.1007/978-3-319-91908-9_17, DOI 10.1007/978-3-319-91908-9_17]
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Tornblom John., 2018, P INT WORKSH FORM TE, P55, DOI DOI 10.1007/978-3-030-12988-0_4
   Van Assche A, 2007, LECT NOTES ARTIF INT, V4701, P418
   Witten I.H., 2016, DATA MINING 4 EDITIO
   Witten I. H., 2005, DATA MINING PRACTICA
   Zhou Y., 2016, INTERPRETING MODELS
NR 38
TC 2
Z9 2
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2023
VL 25
IS 3
BP 287
EP 299
DI 10.1007/s10009-023-00702-5
EA MAY 2023
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S0IX8
UT WOS:000998184400002
OA hybrid
DA 2024-07-18
ER

PT J
AU Kouskoulas, Y
   Machado, TJ
   Genin, D
   Schmidt, A
   Papusha, I
   Brulé, J
AF Kouskoulas, Yanni
   Machado, T. J.
   Genin, Daniel
   Schmidt, Aurora
   Papusha, Ivan
   Brule, Joshua
TI Envelopes and waves: safe multivehicle collision avoidance for
   horizontal non-deterministic turns
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal methods; collision avoidance; Proof assistant; Reachability;
   Non-deterministic horizontal turns; Coq
ID OPTIMIZATION; TASK
AB We present an approach to analyze the safety of asynchronous, independent, non-deterministic, turn-to-bearing horizontal maneuvers for two vehicles. Future turn rates, final bearings, and continuously varying ground speeds throughout the encounter are unknown but restricted to known ranges. We develop a library of formal proofs about turning kinematics and apply the library to create a formally verified timing computation. Additionally, we create a technique that evaluates future collision possibilities that is based on waves of position possibilities and relies on the timing computation. The result either determines that the encounter will be collision-free, or computes a safe overapproximation for when and where collisions may occur.
C1 [Genin, Daniel; Schmidt, Aurora; Papusha, Ivan; Brule, Joshua] Johns Hopkins Univ, Appl Phys Lab, 11100 Johns Hopkins Rd, Laurel, MD 20723 USA.
C3 Johns Hopkins University; Johns Hopkins University Applied Physics
   Laboratory
EM yzkous@gmail.com; tjm@nmsu.edu; daniel.genin@jhuapl.edu
RI Schmidt, Aurora/HHY-7269-2022
FU Federal Aviation Administration Traffic Alert and Collision Avoidance
   System (TCAS) Program Office (PO) [AJM-42, DTFAWA-11-C-00074]; Johns
   Hopkins University Applied Physics Laboratory
FX This research was partially funded under the sponsorship of the Federal
   Aviation Administration Traffic Alert and Collision Avoidance System
   (TCAS) Program Office (PO) AJM-42 under Contract Number
   DTFAWA-11-C-00074 as well as internal funds from the Johns Hopkins
   University Applied Physics Laboratory.
CR Abhishek A, 2020, PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC2020) (PART OF CPS-IOT WEEK), DOI 10.1145/3365365.3382217
   [Anonymous], 2014, IFAC P
   [Anonymous], 2020, COQ PROOF ASSISTANT
   Boldo S, 2015, MATH COMPUT SCI, V9, P41, DOI 10.1007/s11786-014-0181-1
   Collins G. E., 1975, Automata Theory and Formal Language 2nd GI Conference, P134
   Cons MS, 2014, UNMANNED SYST, V2, P19, DOI 10.1142/S2301385014500022
   Fotiou IA, 2006, INT J CONTROL, V79, P1340, DOI 10.1080/00207170600726592
   Genin D., 2021, 14 INT WORKSH NUM SO
   Jeannin JB, 2017, INT J SOFTW TOOLS TE, V19, P717, DOI 10.1007/s10009-016-0434-1
   Jeyaraman S, 2005, P AMER CONTR CONF, P4690, DOI 10.1109/ACC.2005.1470736
   Kouskoulas Yanni, 2020, Formal Methods for Industrial Critical Systems. 25th International Conference (FMICS 2020). Proceedings. Lecture Notes in Computer Science (LNCS 12327), P113, DOI 10.1007/978-3-030-58298-2_4
   Kouskoulas Y, 2019, 2019 7TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2019), P26, DOI 10.1109/CONISOFT.2019.00015
   Kouskoulas Y, 2017, LECT NOTES COMPUT SC, V10499, P336, DOI 10.1007/978-3-319-66107-0_22
   Lasserre JB, 2001, SIAM J OPTIMIZ, V11, P796, DOI 10.1137/S1052623400366802
   LAVALLE S.M., 2006, Planning algorithms, DOI DOI 10.1017/CBO9780511546877
   Ma X, 2006, IEEE DECIS CONTR P, P5453, DOI 10.1109/CDC.2006.376928
   Mcgee TG, 2006, P AMER CONTR CONF, V1-12, P4261, DOI 10.1109/ACC.2006.1657388
   Mitsch S, 2017, INT J ROBOT RES, V36, P1312, DOI 10.1177/0278364917733549
   Parrilo PA, 2003, MATH PROGRAM, V96, P293, DOI 10.1007/s10107-003-0387-5
   Platzer A, 2017, ACM T COMPUT LOG, V18, DOI 10.1145/3091123
   Platzer A, 2009, LECT NOTES COMPUT SC, V5850, P547, DOI 10.1007/978-3-642-05089-3_35
   Prajna S, 2002, IEEE DECIS CONTR P, P741, DOI 10.1109/CDC.2002.1184594
   Song XQ, 2017, CONFERENCE PROCEEDINGS OF 2017 3RD IEEE INTERNATIONAL CONFERENCE ON CONTROL SCIENCE AND SYSTEMS ENGINEERING (ICCSSE), P69, DOI 10.1109/CCSSE.2017.8087897
   Wu A, 2012, AUTON ROBOT, V32, P227, DOI 10.1007/s10514-011-9266-8
   Zhao Z, 2019, ELECTRONICS-SWITZ, V8, DOI 10.3390/electronics8040443
NR 25
TC 1
Z9 1
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2022
VL 24
IS 3
SI SI
BP 371
EP 394
DI 10.1007/s10009-022-00654-2
EA MAY 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1D5TB
UT WOS:000789701800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Middeldorp, A
   Nagele, J
   Shintani, K
AF Middeldorp, Aart
   Nagele, Julian
   Shintani, Kiraku
TI CoCo 2019: report on the eighth confluence competition
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Confluence; Term rewriting; Automation; Mechanized reasoning; Software
   competition
ID TERMINATION; SYSTEMS
AB We report on the 2019 edition of the Confluence Competition, a competition of software tools that aim to prove or disprove confluence and related (undecidable) properties of rewrite systems automatically.
C1 [Middeldorp, Aart] Univ Innsbruck, Dept Comp Sci, Innsbruck, Austria.
   [Nagele, Julian] Bank Amer, London, England.
   [Shintani, Kiraku] JAIST, Sch Informat Sci, Jaist, Ishikawa, Japan.
C3 University of Innsbruck; Bank of America Corporation; Japan Advanced
   Institute of Science & Technology (JAIST)
RP Middeldorp, A (corresponding author), Univ Innsbruck, Dept Comp Sci, Innsbruck, Austria.
EM aart.middeldorp@uibk.ac.at; mail@jnagele.net; s1820017@jaist.ac.jp
RI Nagele, Julian/N-9717-2018
OI Nagele, Julian/0000-0002-4727-4637
FU University of Innsbruck; Medical University of Innsbruck
FX Open access funding provided by University of Innsbruck and Medical
   University of Innsbruck.
CR [Anonymous], 1970, Computational Problems in Abstract Algebra, DOI DOI 10.1016/B978-0-08-012975-4.50028-X
   Aoto, LIPICS, V167, pHT
   Aoto T., 2016, PROC 1 INT C FORMAL, V52, p33:1, DOI [10.4230/LIPIcs.FSCD.2016.33, DOI 10.4230/LIPICS.FSCD.2016.33]
   Aoto T, 2010, LEIBNIZ INT PR INFOR, V6, P7, DOI 10.4230/LIPIcs.RTA.2010.7
   Aoto T, 2009, LECT NOTES COMPUT SC, V5595, P93, DOI 10.1007/978-3-642-02348-4_7
   Arts T, 2000, THEOR COMPUT SCI, V236, P133, DOI 10.1016/S0304-3975(99)00207-8
   Baader Franz, 1998, TERM REWRITING ALL
   Church A, 1936, T AM MATH SOC, V39, P472, DOI 10.2307/1989762
   Claessen K, 2018, LECT NOTES ARTIF INT, V10900, P388, DOI 10.1007/978-3-319-94205-6_26
   Dauchet M., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P242, DOI 10.1109/LICS.1990.113750
   Dershowitz N., 2001, Handbook of Automated Reasoning, VI, P535, DOI [10.1016/b978-044450813-3/50011-4, DOI 10.1016/B978-044450813-3/50011-4]
   Giesl J, 2005, LECT NOTES COMPUT SC, V3717, P216
   Gutiérrez R, 2019, LECT NOTES ARTIF INT, V11716, P287, DOI 10.1007/978-3-030-29436-6_17
   Hirokawa N., 2012, P 1 IWC, P49
   Hirokawa N, 2018, LECT NOTES ARTIF INT, V10900, P346, DOI 10.1007/978-3-319-94205-6_23
   HUET G, 1980, J ACM, V27, P797, DOI 10.1145/322217.322230
   Kimura Y., 2017, LIPICS, V84, DOI 10.4230/LIPIcs.FSCD.2017.7
   Lucas S, 2018, INFORM PROCESS LETT, V136, P90, DOI 10.1016/j.ipl.2018.04.002
   MARTIN U, 1990, LECT NOTES ARTIF INT, V449, P366
   Mayr R, 1998, THEOR COMPUT SCI, V192, P3, DOI 10.1016/S0304-3975(97)00143-6
   McCune W, 2005, Prover9 and Mace4
   Messner F, 2019, LECT NOTES COMPUT SC, V11427, P337, DOI 10.1007/978-3-030-17462-0_19
   Middeldorp, 2016, LIPICS, V52
   Middeldorp A., 2001, Automated Reasoning. First International Joint Conference, IJCAR 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2083), P593
   Nagele J., 2017, THESIS U INNSBRUCK
   Nagele J, 2017, LECT NOTES ARTIF INT, V10395, P385, DOI 10.1007/978-3-319-63046-5_24
   Nagele Julian, 2015, P 26 INT C REWRITING, V36, P257, DOI [10.4230/LIPIcs.RTA.2015.257, DOI 10.4230/LIPICS.RTA.2015.257]
   Nipkow T., 2002, LNCS
   Nishida N., 2018, LIPICS, V108
   Nishida N., 2015, P 4 INT WORKSH CONFL, P42
   Ohlebusch E., 2002, Advanced Topics in Term Rewriting
   Pous D, 2007, THEOR COMPUT SCI, V380, P164, DOI 10.1016/j.tcs.2007.02.060
   Rapp F, 2018, LECT NOTES ARTIF INT, V10900, P81, DOI 10.1007/978-3-319-94205-6_6
   Shintani K, 2015, LECT NOTES ARTIF INT, V9195, P127, DOI 10.1007/978-3-319-21401-6_8
   Sternagel C, 2019, LECT NOTES ARTIF INT, V11716, P508, DOI 10.1007/978-3-030-29436-6_30
   Sternagel C, 2019, LECT NOTES COMPUT SC, V11427, P262, DOI 10.1007/978-3-030-17462-0_15
   Sternagel C, 2014, ELECTRON PROC THEOR, P61, DOI 10.4204/EPTCS.167.8
   Sternagel Thomas, 2014, Rewriting and Typed Lambda Calculi. Joint International Conference, RTA-TLCA 2014, Held as Part of the Vienna Summer of Logic, VSL 2014. Proceedings: LNCS 8560, P456, DOI 10.1007/978-3-319-08918-8_31
   Sternagel T., 2015, P 4 INT WORKSH CONFL, P13
   Sternagel T., 2017, THESIS U INNSBRUCK
   Stump A, 2014, LECT NOTES ARTIF INT, V8562, P367, DOI 10.1007/978-3-319-08587-6_28
   Thiemann R, 2009, LECT NOTES COMPUT SC, V5674, P452, DOI 10.1007/978-3-642-03359-9_31
   Toyama Y., 2019, LNCS, V11715, DOI 07-8_19
   vanOostrom V, 1997, THEOR COMPUT SCI, V175, P159, DOI 10.1016/S0304-3975(96)00173-9
   Waldmann J., 2019, JOINT P 10 WORKSH HI, P28
   Winkler S, 2018, LECT NOTES ARTIF INT, V10900, P472, DOI 10.1007/978-3-319-94205-6_31
   Zankl H, 2011, LECT NOTES ARTIF INT, V6803, P499, DOI 10.1007/978-3-642-22438-6_38
   2003, CAMBRIDGE TRACTS THE, V55
NR 48
TC 5
Z9 5
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2021
VL 23
IS 6
BP 905
EP 916
DI 10.1007/s10009-021-00620-4
EA MAY 2021
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XU5UO
UT WOS:000655817300001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Lekidis, A
   Katsaros, P
AF Lekidis, Alexios
   Katsaros, Panagiotis
TI Energy characterization of IoT systems through design aspect monitoring
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Internet of Things; Rigorous system design; Energy cost estimation;
   Smart city testbed
AB The technological revolution brought by the Internet of Things (IoT) is characterized by a high level of automation based, to a large extent, on battery autonomy. Important risks hindering its wide adoption, though, are associated with device battery lifetime, which is affected by system design aspects such as connectivity, data processing and storage, as well as security protection against cyber-threats. Even though simulation can help for the energy cost estimation of IoT applications before their actual deployment, it is still challenging, and extensive effort is required to converge to a feasible architectural deployment scenario. This article introduces a method to address this challenge by estimating the energy cost of the IoT design aspects and identifying the feasible deployment scenarios, for an IoT system architecture. The method is illustrated on a smart city application that consists of subsystems for building management and intelligent transportation. These two subsystems employ a variety of IoT devices connected to an Orion border router. We estimate the feasibility of various architectural deployments with respect to the system requirements and conclude to those that are possible, as feedback to the system designers. The case study results include quantitative metrics for the evaluation of system requirements using a new aspect monitoring technique and the well-established Statistical Model Checking (SMC) approach.
C1 [Lekidis, Alexios; Katsaros, Panagiotis] Aristotle Univ Thessaloniki, Sch Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Lekidis, A (corresponding author), Aristotle Univ Thessaloniki, Sch Informat, Thessaloniki 54124, Greece.
EM alekidis@csd.auth.gr; katsaros@csd.auth.gr
RI Katsaros, Panagiotis/JBR-8825-2023
OI Lekidis, Alexios/0000-0002-8243-7075
CR [Anonymous], 2011, Draft ETSI TS, V20, P448
   Antonakakis M, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P1093
   Basu A, 2011, IEEE SOFTWARE, V28, P41, DOI 10.1109/MS.2011.27
   Bozga Marius, 2012, Software Composition. Proceedings 11th International Conference, SC 2012, P1, DOI 10.1007/978-3-642-30564-1_1
   DAXU L, 2014, INFORMAT, V10, P2233, DOI DOI 10.1109/TII.2014.2300753
   Distefano S, 2015, PERVASIVE MOB COMPUT, V20, P127, DOI 10.1016/j.pmcj.2014.09.006
   Dunkels A, 2004, CONF LOCAL COMPUT NE, P455
   Dunkels F., 2007, P 4 WORKSH EMB NETW, P28
   ETSI E, VEH COMMUN
   Georgiou K, 2018, IEEE EMBED SYST LETT, V10, P53, DOI 10.1109/LES.2017.2741419
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   Jiang XF, 2007, PROCEEDINGS OF THE SIXTH INTERNATIONAL SYMPOSIUM ON INFORMATION PROCESSING IN SENSOR NETWORKS, P186, DOI 10.1109/IPSN.2007.4379678
   Kolias C, 2017, COMPUTER, V50, P80, DOI 10.1109/MC.2017.201
   Lekidis Alexios, 2019, From Reactive Systems to Cyber-Physical Systems. Essays Dedicated to Scott A. Smolka on the Occasion of His 65th Birthday. Lecture Notes in Computer Science (LNCS 11500), P165, DOI 10.1007/978-3-030-31514-6_10
   Lekidis A, 2018, ELECTRON P THEOR COM, P24, DOI 10.4204/EPTCS.272.3
   Lekidis A, 2018, SOFTWARE PRACT EXPER, V48, P1167, DOI 10.1002/spe.2568
   Martinez B, 2015, IEEE SENS J, V15, P5777, DOI 10.1109/JSEN.2015.2445094
   Mavromatis I, 2019, UEEE INT SYM PERS IN, P464, DOI 10.1109/pimrc.2019.8904214
   Nastic S, 2014, 2014 INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD), P288, DOI 10.1109/FiCloud.2014.52
   Nouri A, 2015, INT J SOFTW TOOLS TE, V17, P171, DOI 10.1007/s10009-014-0313-6
   Pacheco J, 2018, T EMERG TELECOMMUN T, V29, DOI 10.1002/ett.3188
   Patel P, 2015, J SYST SOFTWARE, V103, P62, DOI 10.1016/j.jss.2015.01.027
   Shelby Z., 2014, The Constrained Application Protocol (CoAP), DOI [DOI 10.17487/RFC7252, 10.17487/RFC7252, 10.17487/rfc7252]
   Ye W, 2000, DES AUT CON, P340, DOI 10.1145/337292.337436
NR 24
TC 2
Z9 2
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2021
VL 23
IS 5
BP 765
EP 781
DI 10.1007/s10009-020-00598-5
EA JAN 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XD7NM
UT WOS:000607485800001
DA 2024-07-18
ER

PT J
AU Dubrulle, P
   Kosmatov, N
   Gaston, C
   Lapitre, A
AF Dubrulle, Paul
   Kosmatov, Nikolai
   Gaston, Christophe
   Lapitre, Arnault
TI PolyGraph: a data flow model with frequency arithmetic
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Dataflow; Real-time; Performance analysis; Formal semantic; Consistency;
   Liveness; Cyber-Physical System; Data fusion; Advanced Driver Assistance
   System
ID LANGUAGE; DESIGN
AB Data flow formalisms are commonly used to model systems in order to solve problems of buffer sizing and task scheduling. A prerequisite for static analysis of a modeled system is the existence of a periodic schedule in which the sizes of communication channels can be bounded for an unbounded execution (consistency), and that communication dependencies do not introduce a deadlock in such an execution (liveness). In the context of Cyber-Physical Systems, components are often interfaced with the physical world and have frequency constraints. The existing data flow formalisms lack expressiveness to fully cover the expected behavior of these components. We propose an extension to static data flow paradigms, called PolyGraph, that includes frequency constraints and adjustable communication rates. We show that with these extensions, the conditions for a model to be consistent and live are no longer sufficient, and we extend the corresponding theorems with necessary and sufficient conditions to preserve these properties. We illustrate how PolyGraph can be used in practice on a realistic Advanced Driver Assistance System, and present a framework to check PolyGraph properties in the tool DIVERSITY, along with experiments on realistic and random models.
C1 [Dubrulle, Paul; Kosmatov, Nikolai; Gaston, Christophe; Lapitre, Arnault] CEA List, F-91191 Gif Sur Yvette, France.
   [Kosmatov, Nikolai] Thales Res & Technol, F-91120 Palaiseau, France.
C3 CEA; Thales Group
RP Dubrulle, P (corresponding author), CEA List, F-91191 Gif Sur Yvette, France.
EM paul.dubrulle@cea.fr; nikolaikosmatov@gmail.com;
   christophe.gaston@cea.fr; arnault.lapitre@cea.fr
OI Dubrulle, Paul/0000-0002-1158-6348; Gaston,
   Christophe/0000-0001-6865-5108; Lapitre, Arnault/0000-0002-2185-4051
CR Amarasinghe S, 2005, INT J PARALLEL PROG, V33, P261, DOI 10.1007/s10766-005-3590-6
   [Anonymous], 2006, Application of Concurrency to System Design
   [Anonymous], 1976, COROUTINES NETWORKS
   Arnaud M, 2016, ELECTRON NOTES THEOR, V320, P21, DOI 10.1016/j.entcs.2016.01.003
   Bannour B., 2012, TESTING SOFTWARE SYS
   Berry G., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P85, DOI 10.1145/158511.158526
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   BILSEN G, 1995, INT CONF ACOUST SPEE, P3255, DOI 10.1109/ICASSP.1995.479579
   Bodin B, 2012, 2012 INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTER SYSTEMS (SAMOS): ARCHITECTURES, MODELING AND SIMULATION, P152, DOI 10.1109/SAMOS.2012.6404169
   Borosh I., 1979, CANAD MATH B, V22, P357, DOI [DOI 10.4153/CMB-1979-045-2, 10.4153/CMB-1979-045-2]
   Bouakaz A, 2016, IEEE REAL TIME
   Breaban G, 2017, DES AUT TEST EUROPE, P1721, DOI 10.23919/DATE.2017.7927271
   Caspi P., 1987, P 14 ACM SIGACT SIGP, P178, DOI DOI 10.1145/41625.41641
   Cohen A, 2006, ACM SIGPLAN NOTICES, V41, P180, DOI 10.1145/1111320.1111054
   de Oliveira Castro P., 2010, 2010 International Conference on High Performance Computing & Simulation (HPCS 2010), P171, DOI 10.1109/HPCS.2010.5547134
   Dubrulle P, 2019, LECT NOTES COMPUT SC, V11918, P175, DOI 10.1007/978-3-030-34968-4_10
   Dubrulle P, 2019, LECT NOTES COMPUT SC, V11424, P369, DOI 10.1007/978-3-030-16722-6_22
   Forget J, 2008, IEEE HI ASS SYS ENGR, P251, DOI 10.1109/HASE.2008.47
   GASTON C, 2006, TESTING COMMUNICATIN
   Geilen M, 2005, DES AUT CON, P819
   Ghamarian AH, 2007, DSD 2007: 10TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN ARCHITECTURES, METHODS AND TOOLS, PROCEEDINGS, P189, DOI 10.1109/DSD.2007.4341468
   Goubier T, 2011, LECT NOTES COMPUT SC, V7916, P385, DOI 10.1007/978-3-642-24650-0_33
   Klikpo EC, 2016, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON REAL-TIME NETWORKS AND SYSTEMS PROCEEDINGS (RTNS 2016), P77, DOI 10.1145/2997465.2997474
   Kugele S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P193, DOI 10.1109/ICSA.2017.20
   LEE EA, 1987, IEEE T COMPUT, V36, P24, DOI 10.1109/TC.1987.5009446
   Lohstroh M, 2020, LECT NOTES COMPUT SC, V11971, P59, DOI 10.1007/978-3-030-41131-2_4
   Marchetti O, 2009, EUR J OPER RES, V197, P532, DOI 10.1016/j.ejor.2008.07.037
   Medimegh S., 2016, P WORKSH MOD DRIV EN
   Oh H, 2004, J VLSI SIG PROC SYST, V37, P41, DOI 10.1023/B:VLSI.0000017002.91721.0e
   Selva M., 2015, THESIS
   Singh A, 2019, REAL-TIME SYST, V55, P1, DOI 10.1007/s11241-018-9310-2
   Singh A, 2017, REAL TIM SYST SYMP P, P307, DOI 10.1109/RTSS.2017.00036
   The List Institute, CEA TECH DIVERSITY T
   Theelen B.D, 2008, ESR200808 TUE
   Zhao Y, 2007, RTAS 2007: 13TH REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P259
NR 35
TC 1
Z9 1
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2021
VL 23
IS 3
SI SI
BP 489
EP 517
DI 10.1007/s10009-020-00586-9
EA SEP 2020
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TS5ZM
UT WOS:000566513000001
DA 2024-07-18
ER

PT J
AU De Nicola, R
   Jähnichen, S
   Wirsing, M
AF De Nicola, Rocco
   Jaehnichen, Stefan
   Wirsing, Martin
TI Rigorous engineering of collective adaptive systems: special section
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Adaptive systems; Collective adaptive systems; Software engineering;
   Formal methods; Rigorous methods
ID REQUIREMENTS; RULES; MODEL
AB An adaptive system is able to adapt at runtime to dynamically changing environments and to new requirements. Adaptive systems can be single adaptive entities or collective ones that consist of several collaborating entities. Rigorous engineering requires appropriate methods and tools that help guaranteeing that an adaptive system lives up to its intended purpose. This paper introduces the special section on "Rigorous Engineering of Collective Adaptive Systems." It presents the seven contributions of the section and gives a short overview of the field of rigorously engineering collective adaptive systems by structuring it according to three topics: systematic development, methods and theories for modelling and analysis, and techniques for programming and operating collective adaptive systems.
C1 [De Nicola, Rocco] IMT Sch Adv Studies Lucca, Lucca, Italy.
   [Jaehnichen, Stefan] TU Berlin, Berlin, Germany.
   [Jaehnichen, Stefan] FZI Forschungszentrum Informat Berlin, Berlin, Germany.
   [Wirsing, Martin] Ludwig Maximilians Univ Munchen, Munich, Germany.
C3 IMT School for Advanced Studies Lucca; Technical University of Berlin;
   University of Munich
RP Wirsing, M (corresponding author), Ludwig Maximilians Univ Munchen, Munich, Germany.
EM rocco.denicola@imtlucca.it; stefan.jaehnichen@tu-berlin.de;
   wirsing@lmu.de
RI De Nicola, Rocco/B-8584-2012
OI De Nicola, Rocco/0000-0003-4691-7570
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL. As editors of this special
   section we would like to thank all authors for their valuable
   contributions and all reviewers for their careful evaluations and
   constructive comments. We are also grateful to the ISoLA chairs, Tiziana
   Margaria and Bernhard Steffen, for giving us the opportunity to organise
   this special section and we thank them and STTT for providing uswith the
   very helpfulOnline Journal Service (OJS) system.
CR Abd Alrahman Y., DISTRIBUTED API COOR
   Abd Alrahman Y, 2020, SCI COMPUT PROGRAM, V192, DOI 10.1016/j.scico.2020.102428
   Abd Alrahman Y, 2019, INFORM COMPUT, V268, DOI 10.1016/j.ic.2019.104457
   Abeywickrama D., SOTA APPROACH ENG CO
   Al Ali R., 2018, AUTONOMICALLY COMPOS
   [Anonymous], 2005, ARCHITECTURAL BLUEPR
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Basu Ananda, 2012, Mathematical and Engineering Methods in Computer Science. 7th International Doctoral Workshop, MEMICS 2011. Revised Selected Papers, P1, DOI 10.1007/978-3-642-25929-6_1
   Beal J, 2016, LECT NOTES COMPUT SC, V9700, P233, DOI 10.1007/978-3-319-34096-8_8
   Belzner L., 2016, T FDN MASTERING CHAN, V1, P180, DOI [10.1007/978-3-319-46508-1_10, DOI 10.1007/978-3-319-46508-1_10]
   Berndtsson M, 2018, ENCY DATABASE SYSTEM, P959
   Bernon C., 2011, ENG SELF ORGANISING, P283, DOI DOI 10.1007/978-3-642-17348-6_12
   Bliudze S, 2008, IEEE T COMPUT, V57, P1315, DOI 10.1109/TC.2008.26
   Bortolussi L., 2013, 1 FOCAS WORKSH FUND
   Bortolussi L, 2015, ELECTRON PROC THEOR, P16, DOI 10.4204/EPTCS.194.2
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   Bucchiarone A, 2015, 2015 IEEE NINTH INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS WORKSHOPS (SASOW), P43, DOI 10.1109/SASOW.2015.12
   Bure T., 2015, INVARIANT REFINEMENT, V73, P405
   Bure T., LANGUAGE FRAMEWORK D
   Bures Tomas, 2013, 2013 IEEE 7th International Conference on Self-Adaptation and Self-Organizing Systems Workshops, P71, DOI 10.1109/SASOW.2013.23
   Bures T, 2016, COMPUTER, V49, P50, DOI 10.1109/MC.2016.377
   Cardoso R.P., 2018, ENG SUSTAINABLE ADAP, V53, P221
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5795, P468, DOI 10.1007/978-3-642-04425-0_36
   Ciancia V, 2018, INT J SOFTW TOOLS TE, V20, P289, DOI 10.1007/s10009-018-0483-8
   Ciancia V, 2016, LOG METH COMPUT SCI, V12, DOI 10.2168/LMCS-12(4:2)2016
   Clements P. C., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P16, DOI 10.1109/IWSSD.1996.501143
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   De Nicola R., 2018, RIGOROUS ENG COLLECT, P3
   De Nicola R, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2619998
   de Nicola R, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522973
   Dragomir I., 2018, DESIGNING SYSTEMS DE, P155
   Fuxman A.D, 2000, REPORTS CSC 2018 AUT
   Gabor T., SCENARIO COEVOLUTION
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   Hennicker Rolf, 2014, Specification, Algebra, and Software. Essays Dedicated to Kokichi Futatsugi: LNCS 8373, P359, DOI 10.1007/978-3-642-54624-2_18
   Hennicker R., 2018, DYNAMIC LOGIC ENSEMB, P32
   Hölzl M, 2011, LECT NOTES COMPUT SC, V7000, P241, DOI 10.1007/978-3-642-24933-4_12
   Holzl M.M., 2008, ENG SOFTWARE INTENSI, P1
   Holzl M.M., 2015, ENSEMBLE DEV LIFE CY, P325
   Inverardi P, 2010, SOFTW ENG SELF ADAPT, V2010, P239
   Jahnichen S., 2016, RIGOROUS ENG COLLECT, P535
   Kernbach S., 2011, ARXIV11085643 CORR
   Kwiatkowska M, 2007, LECT NOTES COMPUT SC, V4486, P220
   Legay A., 2019, STAT MODEL CHECKING, P478, DOI DOI 10.1007/978-3-319-91908-9_23
   Loreti M, 2016, LECT NOTES COMPUT SC, V9700, P83, DOI 10.1007/978-3-319-34096-8_4
   Maggi A., DREAM FRAMEWORK DYNA
   Mahfoudh H.B., LEARNING BASED COORD
   Margaria T., 2016, LECT NOTES COMPUTER, V9952
   Margaria T., 2018, LECT NOTES COMPUTER
   Margaria T., 2014, LECT NOTES COMPUTER, V8802
   Mayer P., 2015, AUTONOMIC CLOUD, P495
   Mefteh W, 2015, LECT NOTES ARTIF INT, V9329, P19, DOI 10.1007/978-3-319-24069-5_2
   Morandini M, 2009, LECT NOTES ARTIF INT, V5881, P33, DOI 10.1007/978-3-642-10203-5_4
   Morandini M, 2008, SASO 2008: SECOND IEEE INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS, PROCEEDINGS, P469, DOI 10.1109/SASO.2008.67
   Nakagawa H, 2008, SASOW 2008: SECOND IEEE INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS WORKSHOPS, PROCEEDINGS, P132, DOI 10.1109/SASOW.2008.35
   Ozkaya Mert, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P177, DOI 10.1109/SEAA.2013.34
   Pitt J, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2382570.2382575
   Platzer A, 2019, LECT NOTES COMPUT SC, V11785, P25, DOI 10.1007/978-3-030-30281-8_2
   RAO AS, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P473
   Rodriguez-Aguilar J. A., 1999, Collaboration between Human and Artificial Societies. Coordination and Agent-Based Distributed Computing. (Lecture Notes in Artificial Intelligence Vol1624), P284
   Serbedzija NB, 2009, IEEE C EVOL COMPUTAT, P2063, DOI 10.1109/CEC.2009.4983195
   Vannucchi C, 2017, INT CONF INTEL ENVIR, P92, DOI 10.1109/IE.2017.32
   Vannucchi C, 2016, AMB INTELL SMART ENV, V21, P56, DOI 10.3233/978-1-61499-690-3-56
   Vassev E., 2015, ENG REQUIREMENTS AUT, P379
   Vassev E, 2016, INNOV SYST SOFTW ENG, V12, P95, DOI 10.1007/s11334-015-0257-3
   Viroli M, 2019, J LOG ALGEBR METHODS, V109, DOI 10.1016/j.jlamp.2019.100486
   Wanninger C., 2018, SYNTHESIZING CAPABIL, P94
   Wirsing M., 2014, RIGOROUS ENG AUTONOM, P96
   Wirsing M., 2013, Formal Methods for Components and Objects, P1, DOI [10.1007/978-3-642-35887-6_1, DOI 10.1007/978-3-642-35887-6_1]
   Wirsing M., 2015, LECT NOTES COMPUTER, V8998
   Wirsing M., 2008, LECT NOTES COMPUTER, V5380
   Zambonelli F, 2011, PROCEDIA COMPUT SCI, V7, P197, DOI 10.1016/j.procs.2011.09.006
NR 74
TC 16
Z9 16
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2020
VL 22
IS 4
SI SI
BP 389
EP 397
DI 10.1007/s10009-020-00565-0
EA MAY 2020
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MH4SO
UT WOS:000532629300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Gioulekas, F
   Poplavko, P
   Katsaros, P
   Bensalem, S
   Palomo, P
AF Gioulekas, Fotios
   Poplavko, Peter
   Katsaros, Panagiotis
   Bensalem, Saddek
   Palomo, Pedro
TI Correct-by-construction model-based design of reactive streaming
   software for multi-core embedded systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Process network; Model of computation; Model transformation;
   Timed-automata; Critical systems; Multi-core processors
ID AADL; TOOL
AB We present a model-based design approach toward correct-by-construction implementations of reactive streaming software for multi-core systems. A system's implementation is derived from a high-level process network model by applying semantics-preserving model transformations. The so-called fixed priority process networks (FPPNs) are programmed independently from the execution platform and combine streaming and reactive control behavior with task parallelism for utilizing multi-core processing. We first define the FPPN sequential execution semantics that specifies precedence constraints between job executions of different tasks. Applications are thus rendered such that for any given test stimuli, a deterministic output response is expected. Furthermore, we define the FPPN real-time semantics based on a timed-automata modeling framework. This is provably a functionally equivalent semantics specifying the real-time execution of FPPNs and enabling runtime managers for scheduling jobs on multi-cores. A model transformation framework has been developed for deriving executable implementations of FPPNs on the BIP (Behavior-Interaction-Priority) runtime environment, ported on multi-core platforms. Schedulability is established by static analysis of the FPPN, and it is guaranteed by construction. Thus, the developers do not need to program low-level real-time OS services (e.g., for task management) and applications are amenable to testing, as opposed to if their outputs would depend on timing behavior. We have successfully ported a guidance-navigation and control application of a satellite system, onto a radiation hardened multi-core platform. Various implementation scenarios for efficiently utilizing HW resources are illustrated, and the test results are discussed.
C1 [Gioulekas, Fotios; Katsaros, Panagiotis] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki, Greece.
   [Poplavko, Peter] Mentor, Montbonnot St Martin, France.
   [Bensalem, Saddek] UGA, VERIMAG, Grenoble, France.
   [Palomo, Pedro] Deimos Space, Madrid, Spain.
C3 Aristotle University of Thessaloniki; Communaute Universite Grenoble
   Alpes; Institut National Polytechnique de Grenoble; Universite Grenoble
   Alpes (UGA); Centre National de la Recherche Scientifique (CNRS)
RP Gioulekas, F (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki, Greece.
EM gioulekas@csd.auth.gr; petro.poplavko@siemens.com; katsaros@csd.auth.gr;
   Saddek.Bensalem@univ-grenoble-alpes.fr; pedro.palomo@deimos-space.com
RI Gioulekas, Fotios/HLW-4380-2023; Katsaros, Panagiotis/JBR-8825-2023
OI Gioulekas, Fotios/0000-0003-0929-4677; 
FU European Space Agency project MoSaTT-CMP [4000111814/14/NL/MH]
FX This work was partially supported by the European Space Agency project
   MoSaTT-CMP under Contract No. 4000111814/14/NL/MH.
CR Abdellatif T., 2010, Proceedings of the tenth ACM international conference on Embedded software, P229
   Amnell T, 2003, LECT NOTES COMPUT SC, V2791, P60
   [Anonymous], 1974, PROC IFIP C 74
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Basu A., 2013, LECT NOTES COMPUTER, P314
   Bin Waez MT, 2013, COMPUT SCI REV, V9, P1, DOI 10.1016/j.cosrev.2013.05.001
   Brau G, 2018, SCI COMPUT PROGRAM, V156, P1, DOI 10.1016/j.scico.2017.12.007
   Broy M, 2008, SERVICE ORIENTED MOD, P177
   Broy M, 2001, SYSTEMS FOCUS STREAM, P348
   Broy M., 1992, 92022 TUMI
   Chaki S., 2016, TECH REP
   Claraz D., 2014, ERTSS 14 EMBEDDED RE
   Cordovilla M., 2011, RTNS
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Feiler P., 2006, CMUSEI2006TN011 CARN
   Forget Julien, 2010, Proceedings of the 16th IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS 2010), P301, DOI 10.1109/RTAS.2010.26
   Fuhrmann H., 2006, 2006 IEEEAIAA 25 DIG, P1, DOI DOI 10.1109/DASC.2006.313745
   Geilen Marc, 2004, P 4 ACM INT C EMB SO, P137
   Ghamarian A.H., 2008, THESIS
   Giannopoulou G, 2018, DES AUTOM EMBED SYST, V22, P141, DOI 10.1007/s10617-018-9206-3
   Gioulekas F, 2018, ELECTRON P THEOR COM, P79, DOI 10.4204/EPTCS.272.7
   Gioulekas F, 2018, LECT NOTES COMPUT SC, V10802, P94, DOI 10.1007/978-3-319-89363-1_6
   Ha S, 2008, ACM T DES AUTOMAT EL, V12, P24
   Halbwachs N., 2010, SYNCHRONOUS PROGRAMM
   Hansson A, 2009, ACM T DES AUTOMAT EL, V14, DOI 10.1145/1455229.1455231
   Holzl F, 2010, 13 AUTOFOCUS 3 A SCI, P317
   Huber F, 1998, SOFTWARE ENGINEERING FOR PARALLEL AND DISTRIBUTED SYSTEMS - INTERNATIONAL SYMPOSIUM PROCEEDINGS, P155, DOI 10.1109/PDSE.1998.668174
   Hugues J, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1376804.1376810
   Johnston WM, 2004, ACM COMPUT SURV, V36, P1, DOI 10.1145/1013208.1013209
   LEE EA, 1987, IEEE T COMPUT, V36, P24, DOI 10.1109/TC.1987.5009446
   LEE EA, 1987, P IEEE, V75, P1235, DOI 10.1109/PROC.1987.13876
   Mkaouar Hana, 2015, Reliable Software Technologies - Ada-Europe 2015. 20th Ada-Europe International Conference on Reliable Software Technologies. Proceedings: LNCS 9111, P146, DOI 10.1007/978-3-319-19584-1_10
   Perrotin Maxime, 2011, SDL 2011: Integrating System and Software Modeling. 15th International SDL Forum. Revised Papers, P26, DOI 10.1007/978-3-642-25264-8_4
   Poplavko P, 2017, LECT NOTES COMPUT SC, V10466, P48, DOI 10.1007/978-3-319-66176-6_4
   Poplavko P, 2016, LECT NOTES COMPUT SC, V9952, P605, DOI 10.1007/978-3-319-47166-2_42
   Poplavko P, 2015, DES AUT TEST EUROPE, P1665
   Saidi S, 2017, 2017 EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD), P383, DOI 10.1109/DSD.2017.85
   Socci D, 2015, 2015 IEEE 18TH INTERNATIONAL SYMPOSIUM ON REAL-TIME DISTRIBUTED COMPUTING WORKSHOPS, P1, DOI 10.1109/ISORCW.2015.55
   Triki A, 2013, LECT NOTES COMPUT SC, V7793, P235, DOI 10.1007/978-3-642-37057-1_18
   Yang ZB, 2014, J SYST SOFTWARE, V93, P42, DOI 10.1016/j.jss.2014.02.058
   Yang ZB, 2009, DES AUT TEST EUROPE, P1166
NR 41
TC 0
Z9 0
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2020
VL 22
IS 1
SI SI
BP 3
EP 32
DI 10.1007/s10009-019-00521-7
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS8XB
UT WOS:000518590800002
DA 2024-07-18
ER

PT J
AU Arcaini, P
   Kofron, J
   Jezek, P
AF Arcaini, Paolo
   Kofron, Jan
   Jezek, Pavel
TI Validation of the Hybrid ERTMS/ETCS Level 3 using Spin
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE ERTMS; ETCS; Spin; Promela; Validation; Verification
ID MODELS; TRANSLATION
AB The Hybrid ERTMS/ETCS Level 3 is a standard for the management and interoperation of signalling for railways by the European Union. Its aim was to increase the throughput of railway tracks, by integrating the physical information coming from the trackside detection system with information transmitted by the train itself regarding its position and integrity. In this paper, we propose a formal model of the Hybrid ERTMS/ETCS Level 3 (ver. 1A) in Promela and its validation using Spin. We describe how we derived the model from the informal requirements and the abstractions we applied during this process; moreover, we explain how we validated and verified the model, and the ambiguities we detected in the requirements document. Although Spin provides very good verification facilities, it lacks a proper support for performing user-driven validation by simulation and scenario specification; therefore, we propose two facilities built upon the Promela language (having different expressive power) that allow for easy specification of scenario execution.
C1 [Arcaini, Paolo] Natl Inst Informat, Tokyo, Japan.
   [Kofron, Jan; Jezek, Pavel] Charles Univ Prague, Fac Math & Phys, Prague, Czech Republic.
C3 Research Organization of Information & Systems (ROIS); National
   Institute of Informatics (NII) - Japan; Charles University Prague
RP Arcaini, P (corresponding author), Natl Inst Informat, Tokyo, Japan.
EM arcaini@nii.ac.jp; jan.kofron@d3s.mff.cuni.cz;
   pavel.jezek@d3s.mff.cuni.cz
RI Kofroň, Jan/J-3593-2017; Arcaini, Paolo/J-3616-2017
OI Kofroň, Jan/0000-0003-0391-4812; Arcaini, Paolo/0000-0002-6253-4062
FU ERATO HASUO Metamathematics for Systems Design Project [JPMJER1603];
   JST; Czech Science Foundation [17-12465S]
FX P. Arcaini is supported by ERATO HASUO Metamathematics for Systems
   Design Project (No. JPMJER1603), JST, Funding Reference No.:
   10.13039/501100009024 ERATO. J. Kofron is supported by the Czech Science
   Foundation Project No. 17-12465S.
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial Jean-Raymond, 2018, LECT NOTES COMPUTER, P322
   [Anonymous], 2002, LNCS
   [Anonymous], 2008, DRAZNI INSPEKCE RAIL
   [Anonymous], 2016, TECHNICAL REPORT, P5
   [Anonymous], 2018, TECHNICAL REPORT, P07
   [Anonymous], 2017, Requirements engineering
   Arcaini P, 2018, LECT NOTES COMPUT SC, V11048, P3, DOI 10.1007/978-3-030-00761-4_1
   Arcaini P, 2010, LECT NOTES COMPUT SC, V5977, P61, DOI 10.1007/978-3-642-11811-1_6
   Arvind S, 2008, LECT NOTES COMPUT SC, V5014, P12, DOI 10.1007/978-3-540-68237-0_2
   Bencomo N., 2014, LECT NOTES COMPUTER
   Benerecetti M, 2017, SCI COMPUT PROGRAM, V133, P116, DOI 10.1016/j.scico.2016.09.002
   Borger Egon., 2018, Modeling Companion for Software Practitioners
   Chen J, 2004, LECT NOTES COMPUT SC, V2989, P234
   Cimatti A., 1998, Formal Aspects of Computing, V10, P361, DOI 10.1007/s001650050022
   Cunha Alcino, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P307, DOI 10.1007/978-3-319-91271-4_21
   Das Eisenbahn-Bundesamt (EBA): The German Federal Railway Authority, 2013, SSS
   Dghaym Dana, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P338, DOI 10.1007/978-3-319-91271-4_23
   EEIG ERTMS Users Group, 2017, TECHNICAL REPORT
   Fraser G, 2009, SOFTW TEST VERIF REL, V19, P215, DOI 10.1002/stvr.402
   Fuxman A, 2004, REQUIR ENG, V9, P132, DOI 10.1007/s00766-004-0191-7
   Gnesi S, 2000, LECT NOTES COMPUT SC, V1785, P535
   Hansen Dominik, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P292, DOI 10.1007/978-3-319-91271-4_20
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Ladenberger L, 2009, LECT NOTES COMPUT SC, V5825, P202, DOI 10.1007/978-3-642-04570-7_17
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Leue S, 1999, 2ND IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC'99), PROCEEDINGS, P14, DOI 10.1109/ISORC.1999.776345
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Leuschel M, 2008, LECT NOTES COMPUT SC, V5238, P4
   Mammar Amel, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P353, DOI 10.1007/978-3-319-91271-4_24
   Mazzanti F, 2018, INT J SOFTW TOOLS TE, V20, P263, DOI 10.1007/s10009-018-0488-3
   Meenakshi B, 2006, LECT NOTES COMPUT SC, V4260, P606
   Prigent A, 2002, LECT NOTES COMPUT SC, V2318, P79
   Espada AR, 2015, ELECTRON P THEOR COM, P7, DOI 10.4204/EPTCS.180.1
   Thai Son Hoang, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P251, DOI 10.1007/978-3-319-91271-4_17
   Tueno Fotso Steve Jeffrey, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P262, DOI 10.1007/978-3-319-91271-4_18
NR 36
TC 4
Z9 4
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2020
VL 22
IS 3
SI SI
BP 265
EP 279
DI 10.1007/s10009-019-00539-x
EA NOV 2019
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE0ZY
UT WOS:000494800100002
DA 2024-07-18
ER

PT J
AU Cabodi, G
   Camurati, PE
   Loiacono, C
   Palena, M
   Pasini, P
   Patti, D
   Quer, S
AF Cabodi, G.
   Camurati, P. E.
   Loiacono, C.
   Palena, M.
   Pasini, P.
   Patti, D.
   Quer, S.
TI To split or to group: from divide-and-conquer to sub-task sharing for
   verifying multiple properties in model checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Clustering algorithms; Design automation; Digital circuits; Formal
   verification; Hardware
ID COVERAGE
AB Hardware systems complexity has constantly increased in recent years. Guaranteeing their correctness is a must. Formal verification techniques, such as model checking, now play a major role in industrial environments. Their efficiency in dealing with large sets of properties is crucial. This paper deals with property grouping, decomposition, and coverage in model checking. Property grouping is a valuable solution whenever several properties must be proved for a single model. As such sets may include "easy-to-prove" and/or "similar" properties, grouping can reduce overhead avoiding sub-tasks repetition. Property decomposition, following the divide-and-conquer paradigm, can be effective whenever a property turns out to be "hard-to-prove." Our contribution is a heuristic property manager, running on top of a multi-engine model checking portfolio, aiming at productivity optimization. We compare different clustering heuristics, and we exploit decomposition strategies for property sub-setting. We also consider the problem of evaluating a coverage measure for properties, used to monitor the "advancement" of the verification task.
C1 [Cabodi, G.; Camurati, P. E.; Loiacono, C.; Palena, M.; Pasini, P.; Patti, D.; Quer, S.] Politecn Torino, Dip Automat & Informat, Turin, Italy.
C3 Polytechnic University of Turin
RP Pasini, P (corresponding author), Politecn Torino, Dip Automat & Informat, Turin, Italy.
EM paolo.pasini@polito.it
RI Palena, Marco/ABH-5301-2020; Patti, Denis/ABB-4568-2021; Pasini,
   Paolo/ABH-5564-2020
OI QUER, Stefano/0000-0001-6835-8277
CR [Anonymous], CORR
   Beer I, 2001, FORM METHOD SYST DES, V18, P141, DOI 10.1023/A:1008779610539
   Biere A., 1999, Proceedings 1999 Design Automation Conference (Cat. No. 99CH36361), P317, DOI 10.1109/DAC.1999.781333
   Biere A., AIGER AND INVERTER G
   Biere Armin., HARDWARE MODEL CHECK
   Bradley AR, 2011, LECT NOTES COMPUT SC, V6538, P70, DOI 10.1007/978-3-642-18275-4_7
   BRADLEY AR, 2011, VMCAI, V6538, P70, DOI DOI 10.1007/978-3-642-18275-4_7
   Brayton R., 2010, ABC ACAD IND STRENGT, P24, DOI [10.1007/978-3-642-14295-6_5., DOI 10.1007/978-3-642-14295-6_5, 10.1007/978-3-642-14295-6_5]
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Cabodi G, DIFTS 2014 INT WORKS
   Cabodi G., 2011, 2011 DESIGN AUTOMATI, P1
   Cabodi G., 2016, INT J SATISF BOOLEAN, V9, P135
   Cabodi G, 2016, SOFTWARE PRACT EXPER, V46, P493, DOI 10.1002/spe.2321
   Cabodi G, 2011, FORM METHOD SYST DES, V39, P205, DOI 10.1007/s10703-011-0123-3
   Campos J, 2008, IEEE T VLSI SYST, V16, P1499, DOI 10.1109/TVLSI.2008.2001134
   Camurati P., 2014, INT WORKSH DES IMPL
   Cavada R., 2014, NUXMV SYMBOLIC MODEL, P334, DOI DOI 10.1007/978-3-319-08867-9_22
   Chen MS, 2010, IEEE T COMPUT AID D, V29, P396, DOI 10.1109/TCAD.2010.2041846
   Chockler H, 2001, LECT NOTES COMPUT SC, V2102, P66
   Chockler H, 2006, FORM METHOD SYST DES, V28, P189, DOI 10.1007/s10703-006-0001-6
   Fraer R, 2002, SEVENTH IEEE INTERNATIONAL HIGH-LEVEL DESIGN VALIDATION AND TEST WORKSHOP, PROCEEDINGS, P107, DOI 10.1109/HLDVT.2002.1224437
   Hoskote Y., 1999, Proceedings 1999 Design Automation Conference (Cat. No. 99CH36361), P300, DOI 10.1109/DAC.1999.781330
   Jayakumar N, 2003, DES AUT CON, P292
   Katzir Liran., 2011, Proceedings of the 20th International Conference Companion on World Wide Web, P597
   Khasidashvili Z., 2006, SIMULTANEOUS SAT BAS, P56, DOI [10.1007/11678779_5, DOI 10.1007/11678779_5]
   Loiacono C, 2013, DES AUT TEST EUROPE, P803
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2725, P1
   Offutt J., 2000, Proc. Mutat. 2000 Mutat. Test. Twent. Twenty First Centuries, P45
   Purandare M, 2002, LNCS, V2102, P485, DOI [10.1007/3-540-45657-0_39, DOI 10.1007/3-540-45657-0_39]
   Qin XK, 2010, 23RD INTERNATIONAL CONFERENCE ON VLSI DESIGN, P351, DOI 10.1109/VLSI.Design.2010.47
NR 30
TC 4
Z9 5
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2018
VL 20
IS 3
SI SI
BP 313
EP 325
DI 10.1007/s10009-017-0451-8
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GF1BQ
UT WOS:000431667100005
DA 2024-07-18
ER

PT J
AU Jaber, M
   Falcone, Y
   Dak-Al-Bab, K
   Abou-Jaoudeh, J
   El-Katerji, M
AF Jaber, Mohamad
   Falcone, Ylies
   Dak-Al-Bab, Kinan
   Abou-Jaoudeh, John
   El-Katerji, Mostafa
TI A high-level modeling language for the efficient design, implementation,
   and testing of Android applications
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE MetaModel; Android; Testing; Permission
AB Developing mobile applications remains difficult, time consuming, and error prone, in spite of the number of existing platforms and tools. In this paper, we develop MoDroid, a high-level modeling language to ease the development of Android applications. MoDroid allows developing models representing the core of applications. MoDroid provides Android programmers with the following advantages: (1) models are built using high-level primitives that abstract away several implementation details; (2) it allows the definition of interfaces between models to automatically compose them; (3) a native Android application can be automatically generated along with the required permissions definition; (4) it supports efficient testing execution that operates on models. MoDroid is fully implemented and was used to develop several non-trivial Android applications.
C1 [Jaber, Mohamad; Dak-Al-Bab, Kinan; Abou-Jaoudeh, John; El-Katerji, Mostafa] Amer Univ Beirut, Beirut, Lebanon.
   [Falcone, Ylies] Univ Grenoble Alpes, Lab Informat Grenoble, INRIA, Grenoble, France.
C3 American University of Beirut; Communaute Universite Grenoble Alpes;
   Institut National Polytechnique de Grenoble; Universite Grenoble Alpes
   (UGA); Centre National de la Recherche Scientifique (CNRS); Inria
RP Jaber, M (corresponding author), Amer Univ Beirut, Beirut, Lebanon.
EM mj54@aub.edu.lb; Ylies.Falcone@imag.fr; kmd14@mail.aub.edu;
   jia03@mail.aub.edu; mme85@mail.aub.edu
OI Dak Albab, Kinan/0000-0002-3383-9975
CR Amalfitano Domenico., 2014, MobiGUITAR - A Tool for Automated Model-Based Testing of Mobile Apps
   [Anonymous], 2013, STOR
   [Anonymous], 2009, AD SYST PHON
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Bartel A, 2012, IEEE INT CONF AUTOM, P274, DOI 10.1145/2351676.2351722
   Eclipse Foundation, 2011, XCOR EXT CONCR SYNT
   Feng Y., 2014, SIGSOFTFSE APPOSCOPY
   Mitchell E., 2014, APP INVENTOR 2 TUTOR, V1
   Palmieri Manuel, 2012, 2012 16th International Conference on Intelligence in Next Generation Networks (ICIN 2012): Realising the Power of the Network, P179, DOI 10.1109/ICIN.2012.6376023
   Parr Terence, 2000, STRING TEMPLATE
   Pivotal Labs, 2010, ROB
   Reda Renas, 2009, ROBOTIUM
   Rosler F, 2014, P INT C INT WEB APPL, V9, P55
   Steinberg D., 2003, EMF ECLIPSE MODELING
   Wolf F., 2013, FHWS SCI J, V33
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Zheng Y., 2015, IEEE SOFTW, V1
   Zneika Mussab, 2013, 2013 IEEE International Conference on Green Computing and Communications (GreenCom) and IEEE Internet of Things (iThings) and IEEE Cyber, Physical and Social Computing (CPSCom), P2129, DOI 10.1109/GreenCom-iThings-CPSCom.2013.400
NR 18
TC 1
Z9 1
U1 1
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2018
VL 20
IS 1
BP 1
EP 18
DI 10.1007/s10009-016-0441-2
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT7PX
UT WOS:000423346100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Barcelona, MA
   García-Borgoñón, L
   López-Nicolás, G
AF Barcelona, M. A.
   Garcia-Borgonon, L.
   Lopez-Nicolas, G.
TI Practical experiences in the usage of MIDAS in the logistics domain
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model based testing; Logistics domain; Case study; Testing automation
AB In this paper, we present the experience in the usage of MIDAS, an integrated framework for Service Oriented Architecture (SOA) testing automation that is available as Software as a Service (SaaS) in a cloud infrastructure, to test a GS1 Logistics Interoperability Model (GS1 LIM) compliant service architecture for the logistics domain. Activities performed, results achieved and the evaluation of success factors and key performance indicators (KPIs) are detailed as well as other insights: (1) 25 % of companies would pay for model-based testing (MBT), (2) GS1 LIM should be certifiable, and (3) companies identify as a major barrier how to calculate the MBT return on investment (ROI).
C1 [Barcelona, M. A.; Garcia-Borgonon, L.; Lopez-Nicolas, G.] Aragon Inst Technol, C Maria de Luna 7, Zaragoza 50018, Spain.
RP Barcelona, MA (corresponding author), Aragon Inst Technol, C Maria de Luna 7, Zaragoza 50018, Spain.
EM mabarcelona@itainnova.es; laurag@itainnova.es; glopez@itainnova.es
RI Garcia-Borgonon, Laura/D-1600-2014; Barcelona, Miguel Angel/E-9038-2016
OI Garcia-Borgonon, Laura/0000-0001-9352-4230; Barcelona, Miguel
   Angel/0000-0001-8785-2350
FU Model and Inference Driven-automated testing of Services architectures
   (MIDAS) European project [318786]
FX This work was done in the context of the Model and Inference
   Driven-automated testing of Services architectures (MIDAS) European
   project (Project Number 318786). We would like to thank Fraunhofer
   FOKUS, Simple Engineering France and Universite Pierre et Marie Curie
   for their support in the training and modeling activities. University of
   Gttingen for their support in the usage-based configuration. Regional
   SMEs for their participation in the deployment of external software to
   be tested by MIDAS.
CR [Anonymous], 2015, MIDAS PORT
   [Anonymous], 2014, MIDAS DELIVERABLE SP
   [Anonymous], 2015, MIDAS DELIVERABLE EV
   [Anonymous], 2014, STAT MACH NOT CONTR
   [Anonymous], 2015, MIDAS DELIVERABLE MI
   Baker P., 2004, P 8 C QUAL ENG SOFTW, P181
   Barcelona M., 2014, JORN ING SOFTW BAS D
   Barnett J, 2007, STATE CHART IN PRESS
   Council S.C., 2008, SUPPLY CHAIN OPERATI
   Garcia-Borgonon L., 2014, 23 INT C INF SYST DE
   Grabowski J, 2003, COMPUT NETW, V42, P375, DOI 10.1016/S1389-1286(03)00249-4
   Guessous M., 2014, JORN ING SOFTW BAS D
   Herbold S., 2015, 8 IEEE INT C SOFTW T, P1
   Herbold S., 2015, IEEE 8 INT C SOFTW T, P1
   Huan SH, 2004, SUPPLY CHAIN MANAG, V9, P23, DOI 10.1108/13598540410517557
   *ISO, 2007, 280002007 ISO
   LANUSSE A, 2009, P 5 EUR C MOD DRIV A, P1
   McDougall Gordon H. G., 2000, Journal of Services Marketing, V14, P392, DOI DOI 10.1108/08876040010340937
   Mendez-Diaz J.I, 2009, P 53 ANN M ISSS 2009, V1
   MIDAS Consortium, 2015, MOD INF DRIV AUT TES
   Oliver R. K., 1982, Outlook, P183, DOI [DOI 10.1007/978-3-642-27922-5_15, 10.1007/978-3-642-27922-5_15]
NR 21
TC 2
Z9 2
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2017
VL 19
IS 3
BP 325
EP 339
DI 10.1007/s10009-016-0430-5
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EU4DY
UT WOS:000400981200004
DA 2024-07-18
ER

PT J
AU Ladenberger, L
   Hansen, D
   Wiegard, H
   Bendisposto, J
   Leuschel, M
AF Ladenberger, Lukas
   Hansen, Dominik
   Wiegard, Harald
   Bendisposto, Jens
   Leuschel, Michael
TI Validation of the ABZ landing gear system using ProB
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 4th International Conference on Abstract State Machines, Alloy, B,
   TLA,VDM, and Z (ABZ)
CY JUN 02-06, 2014
CL Toulouse, FRANCE
SP Airbus, CNES, CNRS, CRITT Informatique, CS, ENSEEIHT Toulouse, FME, INP Toulouse, IRIT, Midi Pyrenees Regi, ONERA, SCCH, Univ Paul Sabatier Toulouse
DE Formal methods; B-method; Validation; Toolchain; Visualization
ID EVENT; DECOMPOSITION; CHECKING; TOOL
AB In this article, we present our formalization of the ABZ landing gear case study in Event-B. The development was carried out using the Rodin platform and mainly used superposition refinement to structure the specification. To validate the model, we complemented proof with animation and model checking. For the latter, we used the ProB animator and model checker. Graphical representation of the model turned out to be crucial in the development and validation of the model; this was achieved using the visualization features provided by ProB and BMotion Studio. In addition, we discuss the positive and negative aspects of the Event-B language and tools which we encountered while working on the ABZ case study.
C1 [Ladenberger, Lukas; Hansen, Dominik; Wiegard, Harald; Bendisposto, Jens; Leuschel, Michael] Univ Dusseldorf, Inst Informat, Dusseldorf, Germany.
C3 Heinrich Heine University Dusseldorf
RP Ladenberger, L (corresponding author), Univ Dusseldorf, Inst Informat, Dusseldorf, Germany.
EM ladenberger@cs.uni-duesseldorf.de; hansen@cs.uni-duesseldorf.de;
   wiegard@cs.uni-duesseldorf.de; bendisposto@cs.uni-duesseldorf.de;
   leuschel@cs.uni-duesseldorf.de
FU an European Commission Information and Communication Technologies FP7
   project; ADVANCE
FX The work in this paper is partly funded by ADVANCE, an European
   Commission Information and Communication Technologies FP7 project.
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial JR, 2006, LECT NOTES COMPUT SC, V4260, P588
   Abrial Jean-Raymond, 2014, AIRCRAFT LANDING GEA, P19
   [Anonymous], 1997, The Theory and Practice of Concurrency
   [Anonymous], 2010, 9 INT S FORMAL METHO
   Bendisposto J., 2015, THESIS
   Bert D, 2005, LECT NOTES COMPUT SC, V3455, P299
   Boniol F., 2014, COMMUNICATIONS COMPU, V433
   Borger E., 2003, ABSTRACT STATE MACHI
   Bouton T, 2009, LECT NOTES ARTIF INT, V5663, P151, DOI 10.1007/978-3-642-02959-2_12
   Butler M., 2014, COMMUNICATIONS COMPU, V433
   Cansell D, 2007, LECT NOTES COMPUT SC, V4355, P140
   Dahlstrom E., 2011, WORLD WIDE WEB CONSO, V16
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Deharbe D., LNCS IN PRESS
   Gmehlich R, 2011, LECT NOTES COMPUT SC, V6991, P195, DOI 10.1007/978-3-642-24559-6_15
   Hallerstede S, 2014, SCI COMPUT PROGRAM, V82, P2, DOI 10.1016/j.scico.2013.03.008
   Hallerstede S, 2011, THEOR PRACT LOG PROG, V11, P767, DOI 10.1017/S1471068411000299
   Hansen D., 2014, ABZ 2014 CCIS, V433, P66, DOI DOI 10.1007/978-3-319-07512-9
   Hoang TS, 2010, LECT NOTES COMPUT SC, V5977, P319, DOI 10.1007/978-3-642-11811-1_24
   Koenig D., 2007, GROOVY IN ACTION, V91
   Krings S., 2014, P 1 INT WORKSH SETS
   Ladenberger L., 2014, LNCS
   Ladenberger L, 2009, LECT NOTES COMPUT SC, V5825, P202, DOI 10.1007/978-3-642-04570-7_17
   Lamport L, 2005, LECT NOTES COMPUT SC, V3725, P162
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Ligot O., 2007, P AFADL, V7
   LUKAS LADENBERGER, 2015, VALIDATION
   Plagge D., 2010, STTT, V11, P9
   Rubel D., 2011, ECLIPSE GRAPHICAL ED
   Silva R, 2011, SOFTWARE PRACT EXPER, V41, P199, DOI 10.1002/spe.1002
   W3C CSS Working Group, 2011, CASC STYL SHEETS CSS
NR 33
TC 8
Z9 8
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2017
VL 19
IS 2
BP 187
EP 203
DI 10.1007/s10009-015-0395-9
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA EQ6BQ
UT WOS:000398167200004
DA 2024-07-18
ER

PT J
AU Damasceno, A
   Machado, P
   Andrade, W
AF Damasceno, Adriana C.
   Machado, Patricia D. L.
   Andrade, Wilkerson L.
TI Testing real-time systems from compositional symbolic specifications
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Real-time systems; tioco; Conformance testing; Transition systems
AB Symbolic models for testing real-time systems that abstract both data and time have been investigated. The goal is to address the state space explosion problem that may occur during test case generation. In this context, testing is often investigated by abstracting the structure of the system under test and by observing traces of expected outputs. However, since real-time systems are usually composed of a number of communicating subsystems, the next challenge is to take into account how the composition of subsystems is specified, developed and possibly tested separately or as a whole system. This paper addresses this challenge by providing a sequential and a parallel operator for composing symbolic models of real-time systems and an integration testing strategy that makes use of them. Also, we present a case study from the avionics domain and discuss barriers regarding the considered conformance relation.
C1 [Damasceno, Adriana C.] Fed Univ Campina Grande UFCG, CCTA, Pombal, PB, Brazil.
   [Machado, Patricia D. L.; Andrade, Wilkerson L.] Fed Univ Campina Grande UFCG, Software Practices Lab SPLab, Campina Grande, PB, Brazil.
C3 Universidade Federal de Campina Grande
RP Damasceno, A (corresponding author), Fed Univ Campina Grande UFCG, CCTA, Pombal, PB, Brazil.
EM adrianacarla@ccta.ufcg.edu.br; patricia@computacao.ufcg.edu.br;
   wilkerson@computacao.ufcg.edu.br
RI ; Machado, Patricia/B-5346-2009
OI L. Andrade, Wilkerson/0000-0003-0656-6139; Machado,
   Patricia/0000-0002-0661-0067
FU CNPq [484643/2011-8, 560014/2010-4]; Federal University of Campina
   Grande (UFCG)
FX This work is supported by CNPq grants 484643/2011-8, 560014/2010-4 and
   Federal University of Campina Grande (UFCG). We thank reviewers for
   their helpful comments on how to improve this paper.
CR Andrade W. L., 2012, 19 TOOLS SESS 3 BRAZ, P31
   Andrade WL, 2013, IEEE T SOFTWARE ENG, V39, P1216, DOI 10.1109/TSE.2013.13
   [Anonymous], 2011, FLIGHT NAV HDB
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Bertrand N, 2011, LECT NOTES COMPUT SC, V6605, P96, DOI 10.1007/978-3-642-19835-9_10
   Binder R.V., 2000, AW OBJ TECHNOL S
   Bozga M., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P343
   Daca P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P373, DOI 10.1109/ICST.2014.50
   Damasceno A. C., 2015, SPLAB2015003
   Damasceno A, 2015, 2015 IEEE 18th International Symposium on Real-Time Distributed Computing (ISORC), P228, DOI 10.1109/ISORC.2015.38
   Hessel Anders, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P77, DOI 10.1007/978-3-540-78917-8_3
   Jard C., 2005, International Journal on Software Tools for Technology Transfer, V7, P297, DOI 10.1007/s10009-004-0153-x
   Krichen M, 2006, LECT NOTES COMPUT SC, V4281, P317
   Lacomme P., 2001, AIR SPACEBORNE RADAR
   Laplante P., 2009, REAL TIME SYSTEMS DE
   Locke D, 1990, Technical report
   Nguena-Timo O., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P1, DOI 10.1109/ICSTW.2011.71
   Pacheco Peter, 2011, Morgan An Introduction to Parallel Programming, V1st
   Peleska J, 2011, LECT NOTES COMPUT SC, V7019, P146, DOI 10.1007/978-3-642-24580-0_11
   Sampaio A, 2009, LECT NOTES COMPUT SC, V5885, P20, DOI 10.1007/978-3-642-10373-5_2
   Tretmans J, 1999, LECT NOTES COMPUT SC, V1664, P46
   Utting M., 2007, PRACTICAL MODEL BASE
   van der Bijl M, 2004, LECT NOTES COMPUT SC, V2931, P86
   von Styp S, 2010, LECT NOTES COMPUT SC, V6246, P243, DOI 10.1007/978-3-642-15297-9_19
NR 24
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2017
VL 19
IS 1
BP 53
EP 71
DI 10.1007/s10009-015-0390-1
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ1AC
UT WOS:000392941500004
DA 2024-07-18
ER

PT J
AU Nouri, A
   Bensalem, S
   Bozga, M
   Delahaye, B
   Jegourel, C
   Legay, A
AF Nouri, Ayoub
   Bensalem, Saddek
   Bozga, Marius
   Delahaye, Benoit
   Jegourel, Cyrille
   Legay, Axel
TI Statistical model checking QoS properties of systems with SBIP
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Component-based design; Stochastic systems; Statistical model checking;
   Experiments
ID ABSTRACTION; AUTOMATA; LTL
AB Behavior-interaction-priority (BIP) is a component-based framework supporting rigorous design of embedded systems. BIP supports incremental design of large systems from atomic components that communicate via connectors and whose interactions can be described with a powerful algebra. This paper presents SBIP, an extension of BIP for stochastic systems. SBIP offers the possibility to add stochastic information to atomic component's behaviors, and hence to the entire system. Atomic component's semantics in SBIP is described by Markov Chains. We show that the semantics of the entire system is described by a Markov chain, showing that the non-determinism arising from system interactions is automatically eliminated by BIP. This allows us to verify systems described in SBIP with Statistical Model Checking. This paper introduces SBIP and illustrates its usability on several industrial case studies.
C1 [Nouri, Ayoub; Bensalem, Saddek; Bozga, Marius] UJF Grenoble 1, CNRS, VERIMAG UMR 5104, F-38041 Grenoble, France.
   [Delahaye, Benoit] Univ Nantes, LINA, Nantes, France.
   [Jegourel, Cyrille; Legay, Axel] INRIA IRISA, Rennes, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); Nantes Universite; Universite de Rennes
RP Legay, A (corresponding author), INRIA IRISA, Rennes, France.
EM axel.legay@inria.fr
RI Jegourel, Cyrille/JKI-6108-2023
OI Delahaye, Benoit/0000-0002-9104-4361
CR [Anonymous], 2005, THESIS CARNEGIE MELL
   Basu A, 2008, ECAI
   Basu A, 2006, I C SOFTW ENG FORM M, P3
   Basu A, 2010, LECT NOTES COMPUT SC, V6418, P330, DOI 10.1007/978-3-642-16612-9_25
   Basu A, 2010, LECT NOTES COMPUT SC, V6117, P32, DOI 10.1007/978-3-642-13464-7_4
   Bensalem Saddek, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P327, DOI 10.1007/978-3-642-34026-0_25
   Bensalem S., 2010, LNCS, V6418
   Bensalem S., 2011, LNCS
   Bensalem S, 2013, P ACM IEEE INT CONF, P87
   Bensalem S, 2009, LECT NOTES COMPUT SC, V5643, P614, DOI 10.1007/978-3-642-02658-4_45
   Bliudze S, 2008, IEEE T COMPUT, V57, P1315, DOI 10.1109/TC.2008.26
   Bogdoll J., 2011, LNCS
   Clarke EM, 1999, MODEL CHECKING, P1
   El Rabih D, 2009, LECT NOTES COMPUT SC, V5799, P120, DOI 10.1007/978-3-642-04761-9_11
   Falcone Y, 2011, LECT NOTES COMPUT SC, V7041, P204, DOI 10.1007/978-3-642-24690-6_15
   Finkbeiner B, 2004, FORM METHOD SYST DES, V24, P101, DOI 10.1023/B:FORM.0000017718.28096.48
   Gastin P, 2001, LECT NOTES COMPUT SC, V2102, P53
   Giannakopoulou D., 2001, IEEE INT C AUT SOFTW
   Grosu R, 2005, LECT NOTES COMPUT SC, V3440, P271
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Jansen D. N., 2007, LNCS, V4899
   Jegourel C., 2012, CAV
   Jegourel C, 2012, LECT NOTES COMPUT SC, V7214, P498, DOI 10.1007/978-3-642-28756-5_37
   Katoen JP, 2009, INT CONF QUANT EVAL, P167, DOI 10.1109/QEST.2009.11
   Katoen JP, 2009, INT CONF QUANT EVAL, P31, DOI 10.1109/QEST.2009.25
   KRUNZ M, 1995, IEEE INFOCOM SER, P455, DOI 10.1109/INFCOM.1995.515909
   Krunz M., 1997, Performance Evaluation Review, V25, P192, DOI 10.1145/258623.258688
   Kwiatkowska M, 2004, INT CONF QUANT EVAL, P322
   Laplante S, 2007, ACM T COMPUT LOG, V8, DOI 10.1145/1276920.1276922
   Legay Axel, 2010, ABS10051327 CORR
   Nouri A., 2013, STAT MOD CHECK WORKS
   Parzen E., 1962, STOCHASTIC PROCESSES
   Raman B, 2013, 2013 INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTER SYSTEMS: ARCHITECTURES, MODELING AND SIMULATION (IC-SAMOS), P145, DOI 10.1109/SAMOS.2013.6621117
   Rosu G, 2006, LECT NOTES COMPUT SC, V4144, P263, DOI 10.1007/11817963_25
   Sen K, 2005, LECT NOTES COMPUT SC, V3576, P266
   Sen K, 2004, LECT NOTES COMPUT SC, V3114, P202
   Vardi MY, 1995, LECT NOTES COMPUT SC, V1000, P471
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   Wijesekera D, 1996, MULTIMED TOOLS APPL, V3, P127, DOI 10.1007/BF00429748
   Wolper P., 2002, LECT FORM METH PERF, P261
   Ylies F., 2013, RUNTIME VERIFICATION, P1
   Younes Hakan L. S., 2010, SBMF, P144
   Zuliani P, 2012, HSCC 12: PROCEEDINGS OF THE 15TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P217
   Zuliani P, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P243
NR 46
TC 20
Z9 20
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2015
VL 17
IS 2
BP 171
EP 185
DI 10.1007/s10009-014-0313-6
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7NI
UT WOS:000355682200004
DA 2024-07-18
ER

PT J
AU Mühlberg, JT
   Lüttgen, G
AF Muehlberg, Jan Tobias
   Luettgen, Gerald
TI Symbolic object code analysis
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software verification; Bounded model checking; Program slicing; Object
   code; Case study; Linux device drivers
ID ERROR-DETECTION; ABSTRACTION; EXECUTION; FRAMEWORK; SYSTEM
AB Software model checkers quickly reach their limits when being applied to verifying pointer safety properties in source code that includes function pointers and inlined assembly. This article introduces a novel technique for checking pointer safety violations, called symbolic object code analysis (SOCA), which is based on bounded symbolic execution, incorporates path-sensitive slicing, and employs the SMT solver Yices as its execution and verification engine. Extensive experimental results of a prototypic SOCA Verifier, using the Verisec suite and almost 10,000 Linux device driver functions as benchmarks, show that SOCA performs competitively to modern source-code model checkers, scales well when applied to real operating systems code and pointer safety issues, and effectively explores niches of pointer-complex software that current software verifiers do not reach.
C1 [Muehlberg, Jan Tobias] Katholieke Univ Leuven, IBBT DistriNet, Celestijnenlaan 200A, B-3001 Leuven, Belgium.
   [Luettgen, Gerald] Univ Bamberg, Software Technol Res Grp, D-96045 Bamberg, Germany.
C3 KU Leuven; Otto Friedrich University Bamberg
RP Mühlberg, JT (corresponding author), Katholieke Univ Leuven, IBBT DistriNet, Celestijnenlaan 200A, B-3001 Leuven, Belgium.
EM jantobias.muehlberg@cs.kuleuven.be; gerald.luettgen@swt-bamberg.de
OI Muehlberg, Jan Tobias/0000-0001-5035-0576
CR [Anonymous], NDSS 08
   [Anonymous], 1995, EX LINK FORM ELF SPE
   [Anonymous], 98991999 ISOIEC
   Balakrishnan G, 2008, LECT NOTES COMPUT SC, V4171, P202
   Balakrishnan G, 2006, LECT NOTES COMPUT SC, V4134, P221
   Ball T., 2001, Model Checking Software. 8th International SPIN Workshop. Proceedings (Lecture Notes in Computer Science Vol.2057), P103
   Ball T., 2006, Operating Systems Review, V40, P73, DOI 10.1145/1218063.1217943
   Barry R., 2010, FREERTOS PORTABLE OP
   Berdine J, 2005, LECT NOTES COMPUT SC, V3780, P52
   Boyer RS, 1996, J ACM, V43, P166, DOI 10.1145/227595.227603
   Brummayer R., 2008, P JOINT WORKSHOPS 6
   Calcagno C, 2009, ACM SIGPLAN NOTICES, V44, P289, DOI 10.1145/1594834.1480917
   Chou Andy, 2001, SOSP, P73, DOI 10.1145/502034.502042
   Clarke E, 2005, LECT NOTES COMPUT SC, V3440, P570
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Cohen E, 2009, LECT NOTES COMPUT SC, V5674, P23, DOI 10.1007/978-3-642-03359-9_2
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   Dutertre B., 2006, 012006 SRI
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Hansen T, 2009, LECT NOTES COMPUT SC, V5779, P76, DOI 10.1007/978-3-642-04694-0_6
   Henzinger T. A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P526
   HORSPOOL RN, 1980, COMPUT J, V23, P223, DOI 10.1093/comjnl/23.3.223
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Jacobs B, 2010, LECT NOTES COMPUT SC, V6461, P304, DOI 10.1007/978-3-642-17164-2_21
   Jhala R, 2005, ACM SIGPLAN NOTICES, V40, P38, DOI 10.1145/1064978.1065016
   Kim M, 2009, LECT NOTES COMPUT SC, V5902, P251
   Kinder J., 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P43
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KOREL B, 1990, J SYST SOFTWARE, V13, P187, DOI 10.1016/0164-1212(90)90094-3
   Kroening D, 2008, TEXTS THEOR COMPUT S, P1
   Kroening D, 2008, LECT NOTES COMPUT SC, V5311, P111, DOI 10.1007/978-3-540-88387-6_10
   Ku K., 2008, THESIS U TORONTO
   Leung A, 1999, ACM SIGPLAN NOTICES, V34, P204, DOI 10.1145/301631.301667
   Leven P, 2004, LECT NOTES COMPUT SC, V2989, P39
   Muhlberg J.T., 2009, THESIS U YORK
   Muhlberg J.T., 2011, COMPUTING SCI TECHNI, VCS-TR-1272
   Muhlberg JT, 2009, LECT NOTES COMPUT SC, V5902, P306, DOI 10.1007/978-3-642-10452-7_21
   MUHLBERG JT, 2006, LNCS, V4346, P211
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Nielson F., 1999, Principles of Program Analysis
   Noll T, 2008, LECT NOTES COMPUT SC, V4899, P185
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Pasareanu Corina S., 2008, P 2008 INT S SOFTW T, P15, DOI [DOI 10.1145/1390630.1390635, DOI 10.1145/1390630]
   Reynolds JC, 2002, IEEE S LOG, P55, DOI 10.1109/LICS.2002.1029817
   Rungta N, 2009, LECT NOTES COMPUT SC, V5578, P174, DOI 10.1007/978-3-642-02652-2_16
   Schlich Bastian., 2006, Second International Symposium on Leveraging Applications of Formal Methods, Verification and Validation (ISoLA), P466
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Wilhelm R, 2000, LECT NOTES COMPUT SC, V1781, P1
   Xie YC, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1232420.1232423
   Yu D., 2004, ACM COMPUT SURV, P175
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   Zitser M., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1041685.1029911
NR 55
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2014
VL 16
IS 1
BP 81
EP 102
DI 10.1007/s10009-012-0256-8
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HQ
UT WOS:000209672900006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ho, VM
   Alvin, C
   Lawson, JD
   Mukhopadhyay, S
   Peterson, B
AF Ho, Vivian M.
   Alvin, Chris
   Lawson, Jimmie D.
   Mukhopadhyay, Supratik
   Peterson, Brian
TI Program analysis using empirical abstraction
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 20th International Conference on Runtime Verification (RV)
CY OCT 06-09, 2020
CL ELECTR NETWORK
SP Toyota Res Inst
DE Program Analysis; Abstract Interpretation; Bounded CTL; Abstract Cluster
   Domain
AB Given a program analysis problem that consists of a program and a property of interest, we use an empirical approach to automatically construct a sequence of abstractions that approach an ideal abstraction suitable for solving that problem. This process begins with an infinite concrete domain that maps to a finite abstract cluster domain defined by statistical procedures. Given a set of properties expressed as formulas in a restricted and bounded variant of CTL, we can test the success of the abstraction with respect to a predefined performance measure. In addition, we can perform iterative abstraction-refinement of the clustering by tuning hyperparameters that determine the accuracy of the cluster representations (abstract states) and determine the number of clusters.
C1 [Ho, Vivian M.; Lawson, Jimmie D.; Mukhopadhyay, Supratik; Peterson, Brian] Louisiana State Univ, Baton Rouge, LA 70803 USA.
   [Alvin, Chris] Furman Univ, 3300 Poinsett Highway, Greenville, SC 29613 USA.
C3 Louisiana State University System; Louisiana State University
RP Alvin, C (corresponding author), Furman Univ, 3300 Poinsett Highway, Greenville, SC 29613 USA.
EM chris.alvin@furman.edu; supratik@csc.lsu.edu
CR Alvin C, 2017, LECT NOTES COMPUT SC, V10202, P173, DOI 10.1007/978-3-662-54494-5_10
   [Anonymous], 20 INT C RUNT VER
   Beckman NelsE., 2008, Proceedings of the 2008 international symposium on Software testing and analysis, ISSTA '08, P3
   Bielik P, 2017, LECT NOTES COMPUT SC, V10426, P233, DOI 10.1007/978-3-319-63387-9_12
   Bielik P, 2016, PR MACH LEARN RES, V48
   BLUMER A, 1989, J ACM, V36, P929, DOI 10.1145/76359.76371
   Chen YF, 2016, PROC INT CONF SOFTW, P714, DOI 10.1145/2884781.2884860
   CIL, 2021, C INT LANG
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot P, 2012, LECT NOTES COMPUT SC, V7211, P169, DOI 10.1007/978-3-642-28869-2_9
   Deshmukh JV, 2017, FORM METHOD SYST DES, V50, P168, DOI 10.1007/s10703-016-0261-8
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   EMERSON EA, 1982, SCI COMPUT PROGRAM, V2, P241, DOI 10.1016/0167-6423(83)90017-5
   Flach P., 2012, MACHINE LEARNING ART, DOI [10.1017/CBO9780511973000, DOI 10.1017/CBO9780511973000]
   Gehr T, 2015, LECT NOTES COMPUT SC, V9206, P307, DOI 10.1007/978-3-319-21690-4_18
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Gulavani B.S., 2006, P FSE ACM, P117, DOI DOI 10.1145/1181775.1181790
   Ho VM, 2020, LECT NOTES COMPUT SC, V12399, P259, DOI 10.1007/978-3-030-60508-7_14
   Jobstmann B., 2016, VERIFICATION MODEL C
   Laviron V, 2009, LECT NOTES COMPUT SC, V5904, P343, DOI 10.1007/978-3-642-10672-9_24
   Liang P, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P31, DOI 10.1145/1926385.1926391
   LLVM, 2021, LLVM PROJ
   Mauborgne L, 2005, LECT NOTES COMPUT SC, V3444, P5
   Monniaux D, 2003, LECT NOTES COMPUT SC, V2694, P237
   Mukhopadhyay S., 1999, Foundations of Software Technology and Theoretical Computer Science. 19th Conference. Proceedings (Lecture Notes in Computer Science Vol.1738), P232
   Munkres J., 2013, Topology
   Nori AV, 2009, LECT NOTES COMPUT SC, V5505, P178, DOI 10.1007/978-3-642-00768-2_17
   Ore O, 1944, T AM MATH SOC, V55, P493, DOI 10.2307/1990305
   Padhi S, 2016, ACM SIGPLAN NOTICES, V51, P42, DOI [10.1145/2908080.2908099, 10.1145/2980983.2908099]
   Rival X, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275501
   Sankaranarayanan Sriram, 2008, ISSTA, P295, DOI [10.1145/1390630, DOI 10.1145/1390630]
   Sharma R., 2016, THESIS STANFORD
   Sharma R, 2014, ACM SIGPLAN NOTICES, V49, P127, DOI 10.1145/2535838.2535853
   Smith MJA, 2008, ELECTRON NOTES THEOR, V220, P43, DOI 10.1016/j.entcs.2008.11.018
   Wasserman L., 2006, ALL NONPARAMETRIC ST
   Yau SS, 2007, INT J WEB SERV RES, V4, P59, DOI 10.4018/jwsr.2007100103
   Zhang X, 2013, ACM SIGPLAN NOTICES, V48, P365, DOI 10.1145/2499370.2462185
NR 38
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2023
VL 25
IS 4
BP 431
EP 452
DI 10.1007/s10009-023-00709-y
EA JUL 2023
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA X7GZ5
UT WOS:001023384500001
DA 2024-07-18
ER

PT J
AU Soueidi, C
   Monnier, M
   Falcone, Y
AF Soueidi, Chukri
   Monnier, Marius
   Falcone, Ylies
TI Efficient and expressive bytecode-level instrumentation for Java
   programs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 20th International Conference on Runtime Verification (RV)
CY OCT 06-09, 2020
CL ELECTR NETWORK
SP Toyota Res Inst
DE Instrumentation; Runtime verification; Monitoring; Java; Bytecode;
   Aspect-oriented programming; Control flow; Static and dynamic contexts
AB We present an efficient and expressive tool for the instrumentation of Java programs at the bytecode level. BISM (Bytecode-Level Instrumentation for Software Monitoring) is a lightweight Java bytecode instrumentation tool that features an expressive high-level control-flow-aware instrumentation language. The instrumentation language is inspired by the aspect-oriented programming paradigm in modularizing instrumentation into separate transformers that encapsulate joinpoint selection and advice inlining, that is, the selection of points of interest in the execution and the execution of additional code at these points, respectively. BISM allows capturing joinpoints ranging from bytecode instructions to methods execution and provides comprehensive static and dynamic context information. It runs in two instrumentation modes: build-time and load-time. BISM also provides a mechanism to compose transformers and automatically detect when they interfere on the base program. Transformers in a composition can control the visibility of their advice and other instructions from the base program. We show several example applications for BISM and demonstrate its effectiveness using three experiments: a security scenario, a financial transaction system, and a general runtime verification case. The results show that (i) BISM instrumentation incurs low runtime and memory overheads, and (ii) the code produced by BISM performs better than the one produced by existing Java instrumentation tools.
C1 [Soueidi, Chukri; Monnier, Marius; Falcone, Ylies] Univ Grenoble Alpes, Inria, CNRS, Grenoble INP,LIG, F-38000 Grenoble, France.
C3 Inria; Communaute Universite Grenoble Alpes; Institut National
   Polytechnique de Grenoble; Universite Grenoble Alpes (UGA); Centre
   National de la Recherche Scientifique (CNRS)
RP Soueidi, C; Falcone, Y (corresponding author), Univ Grenoble Alpes, Inria, CNRS, Grenoble INP,LIG, F-38000 Grenoble, France.
EM chukri.a.soueidi@inria.fr; marius.monnier@inria.fr;
   ylies.falcone@inria.fr
CR Apache Commons, BCEL BYT COD ENG LIB
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P1, DOI 10.1007/978-3-319-75632-5_1
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P135, DOI 10.1007/978-3-319-75632-5_5
   Bartocci E, 2019, INT J SOFTW TOOLS TE, V21, P31, DOI 10.1007/s10009-017-0454-5
   Berlin S., CGLIB BYTE CODE GENE
   Binder W, 2016, SOFTWARE PRACT EXPER, V46, P1351, DOI 10.1002/spe.2385
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bruneton E., 2002, Adaptable and extensible component systems, V30
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   Coady Y., 2001, Software Engineering Notes, V26, P88, DOI 10.1145/503271.503223
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Douence R, 2002, LECT NOTES COMPUT SC, V2487, P173
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Falcone Y, 2021, INT J SOFTW TOOLS TE, V23, P255, DOI 10.1007/s10009-021-00609-z
   Falcone Y, 2019, LECT NOTES COMPUT SC, V11757, P48, DOI 10.1007/978-3-030-32079-9_4
   Falcone Y, 2018, LECT NOTES COMPUT SC, V11237, P241, DOI 10.1007/978-3-030-03769-7_14
   Falcone Y, 2010, LECT NOTES COMPUT SC, V6418, P89, DOI 10.1007/978-3-642-16612-9_9
   Fitzpatrick Jerry., 2000, More c++ gems. chapter Applying the ABC Metric to C, C++, P245
   Havinga W., 2006, IAITR20066
   Havinga W., 2007, AOSD'07, P85
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Khoshgoftaar T.M., 1999, P 6 INT SOFTW METR S
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Marek Lukas, 2012, AOSD, P239, DOI [10.1145/2162049.2162077, DOI 10.1145/2162049.2162077]
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Reger G, 2016, LECT NOTES COMPUT SC, V10012, P21, DOI 10.1007/978-3-319-46982-9_3
   Soueidi C., BISM BYTECODE LEVEL
   Soueidi C, 2020, LECT NOTES COMPUT SC, V12399, P323, DOI 10.1007/978-3-030-60508-7_18
   Spinczyk O., 2005, SOFTW DEV J, V01
   Takeyama F, 2010, LECT NOTES COMPUT SC, V6144, P122, DOI 10.1007/978-3-642-14046-4_9
   Tu HL, 2009, 2009 INTERNATIONAL FORUM ON COMPUTER SCIENCE-TECHNOLOGY AND APPLICATIONS, VOL 1, PROCEEDINGS, P131, DOI 10.1109/IFCSTA.2009.39
   Vallee-Rai Raja, 2010, CASCON First Decade High Impact Papers, P214, DOI [10.1145/1925805.1925818, DOI 10.1145/1925805.1925818, 10.1145/1925 805.1925818]
NR 35
TC 3
Z9 3
U1 3
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2023
VL 25
IS 4
BP 453
EP 479
DI 10.1007/s10009-023-00708-z
EA JUN 2023
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA X7GZ5
UT WOS:001020313300001
DA 2024-07-18
ER

PT J
AU Badings, T
   Cubuktepe, M
   Jansen, N
   Junges, S
   Katoen, JP
   Topcu, U
AF Badings, Thom
   Cubuktepe, Murat
   Jansen, Nils
   Junges, Sebastian
   Katoen, Joost-Pieter
   Topcu, Ufuk
TI Scenario-based verification of uncertain parametric MDPs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Markov decision processes; Uncertainty; Verification; Scenario
   optimization
ID MARKOV DECISION-PROCESSES; ROBUST-CONTROL; FEASIBILITY; MODELS
AB We consider parametric Markov decision processes (pMDPs) that are augmented with unknown probability distributions over parameter values. The problem is to compute the probability to satisfy a temporal logic specification with any concrete MDP that corresponds to a sample from these distributions. As solving this problem precisely is infeasible, we resort to sampling techniques that exploit the so-called scenario approach. Based on a finite number of samples of the parameters, the proposed method yields high-confidence bounds on the probability of satisfying the specification. The number of samples required to obtain a high confidence on these bounds is independent of the number of states and the number of random parameters. Experiments on a large set of benchmarks show that several thousand samples suffice to obtain tight and high-confidence lower and upper bounds on the satisfaction probability.
C1 [Badings, Thom; Jansen, Nils; Junges, Sebastian] Radboud Univ Nijmegen, Nijmegen, Netherlands.
   [Cubuktepe, Murat; Topcu, Ufuk] Univ Texas Austin, Austin, TX 78712 USA.
   [Katoen, Joost-Pieter] Rhein Westfal TH Aachen, Aachen, Germany.
C3 Radboud University Nijmegen; University of Texas System; University of
   Texas Austin; RWTH Aachen University
RP Badings, T (corresponding author), Radboud Univ Nijmegen, Nijmegen, Netherlands.
EM thom.badings@ru.nl
RI Katoen, Joost-Pieter/O-3307-2018
OI Jansen, Nils/0000-0003-1318-8973; Junges, Sebastian/0000-0003-0978-8466
FU NWO [NWA.1160.18.238]; ERC [AdG 787914]; NSF [1652113]; ONR
   [N000141613165]; NASA [NNX17AD04G]; AFRL [FA8650-15-C-2546]; U.S.
   Department of Defense (DOD) [N000141613165] Funding Source: U.S.
   Department of Defense (DOD)
FX This work was partially funded by NWO grant NWA.1160.18.238 (PrimaVera),
   the ERC AdG 787914 (FRAPPANT), NSF 1652113, ONR N000141613165, NASA
   NNX17AD04G and AFRL FA8650-15-C-2546.
CR Ahmed A, 2017, J ARTIF INTELL RES, V59, P229, DOI 10.1613/jair.5242
   [Anonymous], 1993, LNCS
   Arming S, 2018, LECT NOTES COMPUT SC, V11024, P53, DOI 10.1007/978-3-319-99154-2_4
   ASPNES J, 1990, J ALGORITHM, V11, P441, DOI 10.1016/0196-6774(90)90021-6
   Bacci G, 2019, LECT NOTES COMPUT SC, V11785, P37, DOI 10.1007/978-3-030-30281-8_3
   Badings T.S., 2022, INT C COMPUTER AIDED
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Baier C, 2020, INFORM COMPUT, V272, DOI 10.1016/j.ic.2019.104504
   Basu S., 2010, Algorithms in Real Algebraic Geometry
   Bertsekas D. P., 2000, Introduction to Probability
   Bortolussi L, 2018, LECT NOTES COMPUT SC, V10806, P396, DOI 10.1007/978-3-319-89963-3_23
   Boyd S.P., 2004, Convex optimization, DOI [10.1017/CBO9780511804441, DOI 10.1017/CBO9780511804441]
   Calafiore GC, 2006, IEEE T AUTOMAT CONTR, V51, P742, DOI 10.1109/TAC.2006.875041
   Campi MC, 2011, J OPTIMIZ THEORY APP, V148, P257, DOI 10.1007/s10957-010-9754-6
   Campi MC, 2008, SIAM J OPTIMIZ, V19, P1211, DOI 10.1137/07069821X
   Campi MC, 2018, INTRO SCENARIO APPRO
   Cassandra Anthony, 1997, P 13 C UNC ART INT U, P54
   Chen TL, 2013, 2013 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P85, DOI 10.1109/TASE.2013.20
   Cubuktepe Murat, 2020, Tools Algorithms Constr Anal Syst I (2020), V12078, P287, DOI 10.1007/978-3-030-45190-5_16
   Cubuktepe M, 2018, LECT NOTES COMPUT SC, V11138, P160, DOI 10.1007/978-3-030-01090-4_10
   Cubuktepe M, 2017, LECT NOTES COMPUT SC, V10206, P133, DOI 10.1007/978-3-662-54580-5_8
   DArgenio PR, 2001, LNCS, V2165, P39, DOI DOI 10.1007/3-540-44804-7
   Daws C, 2005, LECT NOTES COMPUT SC, V3407, P280
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Dehnert C, 2015, LECT NOTES COMPUT SC, V9206, P214, DOI 10.1007/978-3-319-21690-4_13
   Delahaye B, 2011, LECT NOTES COMPUT SC, V6638, P274, DOI 10.1007/978-3-642-21254-3_21
   Gainer P, 2018, LECT NOTES COMPUT SC, V11024, P140, DOI 10.1007/978-3-319-99154-2_9
   Garatti S, 2021, IFAC PAPERSONLINE, V54, P607, DOI 10.1016/j.ifacol.2021.08.427
   Givan R, 2000, ARTIF INTELL, V122, P71, DOI 10.1016/S0004-3702(00)00047-3
   Hahn Ernst Moritz, 2011, International Journal on Software Tools for Technology Transfer, V13, P3, DOI 10.1007/s10009-010-0146-x
   Han J, 2002, IEEE T NANOTECHNOL, V1, P201, DOI 10.1109/TNANO.2002.807393
   Hatefi H., 2012, ECEASST, V53, P88890
   HAUSSLER D, 1990, PROCEEDINGS : EIGHTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P1101
   Ho CP, 2018, PR MACH LEARN RES, V80
   Junges S., 2019, ARXIV
   Kwiatkowsa M., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P203, DOI 10.1109/QEST.2012.14
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   McAllister R, 2012, IEEE INT C INT ROBOT, P4716, DOI 10.1109/IROS.2012.6386229
   Meedeniya I, 2014, SOFTW SYST MODEL, V13, P1395, DOI 10.1007/s10270-012-0277-5
   Nilim A, 2005, OPER RES, V53, P780, DOI 10.1287/opre.1050.0216
   Papaefthymiou G, 2008, IEEE T ENERGY CONVER, V23, P234, DOI 10.1109/TEC.2007.914174
   Pineau J., 2003, P 18 INT JOINT C ART
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Polgreen E, 2016, LECT NOTES COMPUT SC, V9826, P35, DOI 10.1007/978-3-319-43425-4_3
   Puggelli Alberto, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P527, DOI 10.1007/978-3-642-39799-8_35
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   Quatmann T, 2016, LECT NOTES COMPUT SC, V9938, P50, DOI 10.1007/978-3-319-46520-3_4
   Russell S., 2020, ARTIF INTELL
   Scheftelowitsch D., 2017, VALUETOOLS, P44
   Llerena YRS, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P587, DOI 10.1145/3236024.3236078
   Shmatikov V., 2004, Journal of Computer Security, V12, P355
   Steimle LN, 2021, IISE TRANS, V53, P1124, DOI 10.1080/24725854.2021.1895454
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Wiesemann W, 2013, MATH OPER RES, V38, P153, DOI 10.1287/moor.1120.0566
   Winkler T., 2019, CONCUR, Schloss Dagstuhl-Leibniz-Zentrum fur Informatik, LIPIcs, V140
   Wolff EM, 2012, IEEE DECIS CONTR P, P3372, DOI 10.1109/CDC.2012.6426174
NR 56
TC 5
Z9 5
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2022
VL 24
IS 5
SI SI
BP 803
EP 819
DI 10.1007/s10009-022-00673-z
EA SEP 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6I0IB
UT WOS:000854687500001
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Habibi, E
   Mirian-Hosseinabadi, SH
AF Habibi, Elahe
   Mirian-Hosseinabadi, Seyed-Hasan
TI Generating test as a web service (TaaWS) through a method-based
   attribute grammar
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Web service; Service-oriented; Functional test; Test as a web service;
   Online test; Attribute grammar
AB Service-Oriented Architecture (SOA) is a technology for designing software systems. By using this architecture, new challenges appeared for software testing. Functional testing of services assures the quality of service-oriented applications. Herein, we introduce a new test web service named TaaWS (Test as a Web Service), which is a combination of both online testing and testing as a service to overcome SOA testing challenges. Each web service can have its test web service. Thus, the consumer can call TaaWS to assure the accuracy of the web services used in the application. TaaWS consists of semantic and structural test cases extracted from the extended-attribute grammar of the web service called Method-Based Attribute Grammar (MBAG). MBAG is created in five steps, including the definition of the input/output variables, the creation of sections in the web method, and the application of rules to specify conditions and operations on the attributes. In addition, a new coverage criterion is introduced for application on MBAG to extract test cases. Using TaaWS, we have applied semantic and structural test cases on the PersonalIDCode-INFO web method as a case study. In our proposed method, a developed program called Sharif-TaaWS as a tool automates MBAG generation steps, test cases, and TaaWS creation. To evaluate TaaWS, other functional testing techniques have been compared to our method by measuring the effectiveness of the test cases (ETC value). This value shows that TaaWS can find more faults compared to other techniques. We propose that TaaWS has advantages such as creating both semantic and structural test cases through MBAG, detecting changes in web services, running regression tests, and managing test results to inform the consumer. However, TaaWS has a drawback; the response time to the user may increase through calling TaaWS.
C1 [Habibi, Elahe] Sharif Univ Technol, Comp Engn Dept, Tehran, Iran.
   [Mirian-Hosseinabadi, Seyed-Hasan] Sharif Univ Technol, Dept Comp Engn, Azadi Ave,Room 807,CE New Bldg, Tehran, Iran.
C3 Sharif University of Technology; Sharif University of Technology
RP Mirian-Hosseinabadi, SH (corresponding author), Sharif Univ Technol, Dept Comp Engn, Azadi Ave,Room 807,CE New Bldg, Tehran, Iran.
EM ehabibiphd@ce.sharif.edu; hmirian@sharif.edu
OI Habibi, Elahe/0000-0002-1497-9358
FU Sharif University of Technology-Iran
FX This research has been supported by a Grant from the Sharif University
   of Technology-Iran.
CR Ammann P., 2016, Introduction to software testing, DOI DOI 10.1017/9781316771273
   Anjum MS, 2019, LECT NOTES COMPUT SC, V11451, P3, DOI 10.1007/978-3-030-16670-0_1
   [Anonymous], 2004, WEB SERV ARCH 11 FEB
   [Anonymous], 1995, FORMAL SYNTAX SEMANT
   [Anonymous], 2017, CREAT BOTT WEB SERV
   Bai XY, 2013, 2013 8TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST (AST), P15, DOI 10.1109/IWAST.2013.6595785
   Bai XY, 2007, P INT COMP SOFTW APP, P368
   Balakrishnan A, 2017, TRENDS SOFTWARE TEST
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Deussen PH, 2003, ISADS 2003: SIXTH INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS, PROCEEDINGS, P177, DOI 10.1109/ISADS.2003.1193946
   Dong X., 2004, Proceedings of the 30th International Conference on Very Large Data Bases (VLDB'04), V30, P372, DOI DOI 10.1016/B978-012088469-8.50035-8
   Duncan A. G., 1981, 5th International Conference on Software Engineering, P170
   Endo A.T., 2013, THESIS U SAO PAULO
   Habibi Elahe, 2021, TOOL GENERATE TEST W
   Harm J., 2000, Informatica, V24, P355
   Hielscher J, 2008, LECT NOTES COMPUT SC, V5377, P122, DOI 10.1007/978-3-540-89897-9_11
   Keramati H, 2015, INFORM SOFTWARE TECH, V57, P204, DOI 10.1016/j.infsof.2014.09.007
   Knuth D. E., 1968, Mathematical Systems Theory, V2, P127, DOI 10.1007/BF01692511
   Lammel R., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P201
   Oracle Enterprise Manager, 2011, OR TEST SERV
   PAAKKI J, 1995, ACM COMPUT SURV, V27, P196, DOI 10.1145/210376.197409
   Pardeshi SN., 2014, INT J RECENT INNOVAT, V2, P188
   Sajeev A., 1997, P INT C SOFTWARE ENG, P110
   Sommerville Ian, 2011, Software engineering
   Tapkhirwala Prashant, 2013, TESTING SERVICE
   Tsai WT, 2005, SOSE 2005: IEEE INTERNATIONAL WORKSHOP ON SERVICE-ORIENTED SYSTEM ENGINEERING, P151
   Wang QX, 2004, P INT COMP SOFTW APP, P166
   Wang YQ, 2003, LECT NOTES COMPUT SC, V2910, P194
   Wong PYH, 2015, INT J SOFTW TOOLS TE, V17, P107, DOI 10.1007/s10009-014-0301-x
NR 29
TC 2
Z9 2
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2022
VL 24
IS 4
BP 511
EP 527
DI 10.1007/s10009-022-00649-z
EA MAR 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3N7AF
UT WOS:000763845600001
DA 2024-07-18
ER

PT J
AU Stoilkovska, I
   Konnov, I
   Widder, J
   Zuleger, F
AF Stoilkovska, Ilina
   Konnov, Igor
   Widder, Josef
   Zuleger, Florian
TI Verifying safety of synchronous fault-tolerant algorithms by bounded
   model checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Parameterized model checking; Distributed algorithms; Fault tolerance;
   Threshold automata
ID VERIFICATION; COMPLETENESS; PROGRAMS; LIVENESS; SMT
AB Threshold automata are a formalism introduced for modeling, verification, and synthesis of fault-tolerant distributed algorithms for asynchronous systems, that is, in interleaving semantics. Owing to well-known limitations of what can be achieved in purely asynchronous systems, many fault-tolerant distributed algorithms are designed for synchronous or round-based semantics. In this paper, we introduce the synchronous variant of threshold automata and study their applicability and limitations for the verification of synchronous fault-tolerant distributed algorithms. We show that the parameterized reachability problem for synchronous threshold automata is undecidable. Still, we show that many synchronous fault-tolerant distributed algorithms have a bounded diameter, even though the algorithms are parameterized by the number of processes. Hence, bounded model checking can be used for verifying these algorithms. The existence of bounded diameters is the main conceptual insight in this paper. We compute the diameter of several algorithms and check their safety properties, using SMT queries that contain quantifiers for dealing with the parameters symbolically. Surprisingly, performance of the SMT solvers on these queries is very good, reflecting the recent progress in dealing with quantified queries. We found that the diameter bounds of synchronous algorithms in the literature are tiny (from 1 to 8), which makes our approach applicable in practice. For a specific class of algorithms, we also establish a theoretical result on the existence of a diameter, providing a first explanation for our experimental results.
C1 [Stoilkovska, Ilina; Konnov, Igor; Widder, Josef] Informal Syst, Vienna, Austria.
   [Stoilkovska, Ilina; Zuleger, Florian] TU Wien, Vienna, Austria.
C3 Technische Universitat Wien
RP Stoilkovska, I (corresponding author), Informal Syst, Vienna, Austria.; Stoilkovska, I (corresponding author), TU Wien, Vienna, Austria.
EM stoilkov@forsyte.at; igor@informal.systems; josef@informal.systems;
   zuleger@forsyte.at
OI Stoilkovska, Ilina/0009-0003-3683-6301; Zuleger,
   Florian/0000-0003-1468-8398
FU Austrian Science Fund (FWF) [S11403, S11405, P27722, W1255]; Vienna
   Science and Technology Fund (WWTF) grant APALACHE [ICT15-103];
   Interchain Foundation, Switzerland; Austrian Science Fund (FWF) [P27722]
   Funding Source: Austrian Science Fund (FWF)
FX Partially supported by: Austrian Science Fund (FWF) via NFN RiSE
   (S11403, S11405), project PRAVDA (P27722), and doctoral college LogiCS
   W1255; Vienna Science and Technology Fund (WWTF) grant APALACHE
   (ICT15-103), and Interchain Foundation, Switzerland. This manuscript is
   an extended version of a paper [1] that appeared in the proceedings of
   TACAS 2019. In addition to the conference version, we provide the
   complete mathematical proofs (Sects. 4 and 5.2) and report experiments
   with an extended set of benchmarks (Sect. 7), extended several
   discussions, and added examples to make the arguments more accessible.
CR Abdulla PA, 1996, IEEE S LOG, P313, DOI 10.1109/LICS.1996.561359
   Aminof B, 2018, LECT NOTES COMPUT SC, V10747, P1, DOI 10.1007/978-3-319-73721-8_1
   Aminof B, 2015, LECT NOTES COMPUT SC, V9135, P375, DOI 10.1007/978-3-662-47666-6_30
   Bakst A, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133934
   Bardin S, 2006, LECT NOTES COMPUT SC, V4144, P63, DOI 10.1007/11817963_9
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Berkovits I, 2019, LECT NOTES COMPUT SC, V11562, P245, DOI 10.1007/978-3-030-25543-5_15
   BERMAN P, 1989, ANN IEEE SYMP FOUND, P410, DOI 10.1109/SFCS.1989.63511
   Berman P., 1989, ASYMPTOTICALLY OPTIM
   Biely M, 2011, THEOR COMPUT SCI, V412, P5602, DOI 10.1016/j.tcs.2010.09.032
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Bjorner Nikolaj, 2015, LPAR, V35, P15, DOI DOI 10.29007/VV21
   Bloem R., 2015, DECIDABILITY PARAMET, DOI DOI 10.2200/S00658ED1V01Y201508DCT013
   Bouajjani A, 2018, LECT NOTES COMPUT SC, V10982, P372, DOI 10.1007/978-3-319-96142-2_23
   Chaouch-Saad M, 2009, LECT NOTES COMPUT SC, V5797, P93, DOI 10.1007/978-3-642-04420-5_10
   Chaudhuri S, 2000, J ACM, V47, P912, DOI 10.1145/355483.355489
   Ching-Tsun Chou, 1988, Proceedings of the Seventh Annual ACM Symposium on Principles of Distributed Computing, P44, DOI 10.1145/62546.62556
   Clarke E, 2004, LECT NOTES COMPUT SC, V2937, P85
   Damian A, 2019, LECT NOTES COMPUT SC, V11562, P344, DOI 10.1007/978-3-030-25543-5_20
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Desai A, 2014, ACM SIGPLAN NOTICES, V49, P709, DOI [10.1145/2660193.2660211, 10.1145/2714064.2660211]
   Dragoi C, 2016, ACM SIGPLAN NOTICES, V51, P400, DOI [10.1145/2837614.2837650, 10.1145/2914770.2837650]
   Dragoi C, 2014, LECT NOTES COMPUT SC, V8318, P161, DOI 10.1007/978-3-642-54013-4_10
   ELRAD T, 1982, SCI COMPUT PROGRAM, V2, P155, DOI 10.1016/0167-6423(83)90013-8
   Emerson E. A., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P87
   Emerson EA., 2003, INT J FOUND COMPUT S, V14, P527, DOI DOI 10.1142/S0129054103001881
   FISCHER MJ, 1985, J ACM, V32, P374, DOI 10.1145/3149.214121
   GARNAUT R, 1992, ECONOMIC REFORM AND INTERNATIONALISATION: CHINA AND THE PACIFIC REGION, P1
   Gleissenthall KV, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290372
   Hawblitzel C, 2017, COMMUN ACM, V60, P83, DOI 10.1145/3068608
   Konnov I, 2017, ACM SIGPLAN NOTICES, V52, P719, DOI 10.1145/3093333.3009860
   Konnov I, 2017, INFORM COMPUT, V252, P95, DOI 10.1016/j.ic.2016.03.006
   Konnov I, 2015, LECT NOTES COMPUT SC, V9206, P85, DOI 10.1007/978-3-319-21690-4_6
   KOPETZ H, 1994, COMPUTER, V27, P14, DOI 10.1109/2.248873
   Kroening D, 2003, LECT NOTES COMPUT SC, V2575, P298
   Kukovec J., 2018, CONCUR
   Leroux M, 2005, LECT NOTES COMPUT SC, V3707, P489
   Lynch N., 1996, DISTRIBUTED ALGORITH
   Maric O, 2017, LECT NOTES COMPUT SC, V10427, P217, DOI 10.1007/978-3-319-63390-9_12
   Minsky M., 1967, PRENTICE HALL SERIES
   Padon O, 2016, ACM SIGPLAN NOTICES, V51, P614, DOI [10.1145/2908080.2908118, 10.1145/2980983.2908118]
   Qadeer S., 2018, CONCUR
   Raynal M., 2010, FAULT TOLERANT AGREE, DOI [10.2200/S00294ED1V01Y201009DCT003, DOI 10.2200/S00294ED1V01Y201009DCT003]
   Reynolds A, 2017, FORM METHOD SYST DES, V51, P500, DOI 10.1007/s10703-017-0290-y
   Sergey I., 2018, PACMPL 2 POPL
   SRIKANTH TK, 1987, DISTRIB COMPUT, V2, P80, DOI 10.1007/BF01667080
   Stoilkovska I, 2021, LECT NOTES COMPUT SC, V12597, P196, DOI 10.1007/978-3-030-67067-2_10
   Stoilkovska I, 2019, LECT NOTES COMPUT SC, V11428, P357, DOI 10.1007/978-3-030-17465-1_20
   Wilcox JR, 2015, ACM SIGPLAN NOTICES, V50, P357, DOI [10.1145/2737924.2737958, 10.1145/2813885.2737958]
NR 49
TC 3
Z9 3
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2022
VL 24
IS 1
SI SI
BP 33
EP 48
DI 10.1007/s10009-021-00637-9
EA AUG 2021
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZT9UB
UT WOS:000691161900001
DA 2024-07-18
ER

PT J
AU Becker, M
   Metta, R
   Venkatesh, R
   Chakraborty, S
AF Becker, Martin
   Metta, Ravindra
   Venkatesh, R.
   Chakraborty, Samarjit
TI Scalable and precise estimation and debugging of the worst-case
   execution time for analysis-friendly processors: a comeback of model
   checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Worst-case execution time; Debugging; Static analysis; Predictable
   processor
ID TIMING ANALYSIS; WCET; PATHS; TOOL
AB Estimating the worst-case execution time (WCET) of an application is an essential step in the context of developing real-time or safety-critical software, but it is also a complex and error-prone process. Conventional approaches require at least some manual inputs from the user, such as loop bounds and infeasible path information, which are hard to obtain and can lead to unsafe results if they are incorrect. This is aggravated by the lack of a comprehensive explanation of the estimate, i.e., a specific trace showing how the estimated WCET was reached. In this article, we revisit the use of Model Checking as an analysis technique for WCET estimation. Model Checking has been explored before, but did not prevail due to its poor scalability. We address this by shifting the analysis to the source code level, where code transformations can be applied that retain the timing behavior, but reduce the complexity. Furthermore, we show how Model Checking enables the reconstruction of a concrete trace of the WCET path, which can be examined in a debugger environment. A prerequisite for our approach is the use of analysis-friendly processors. This is in line with recent calls by the research community, since modern processors have reached a complexity that refutes timing analysis. Our experiments show that fast and precise estimates can be achieved with Model Checking, that its scalability can even exceed current approaches, and that new opportunities arise in the direction of "timing debugging".
C1 [Becker, Martin; Chakraborty, Samarjit] Tech Univ Munich, Chair Real Time Comp Syst, Munich, Germany.
   [Metta, Ravindra; Venkatesh, R.] Tata Res Dev & Design Ctr, Pune, Maharashtra, India.
C3 Technical University of Munich
RP Becker, M (corresponding author), Tech Univ Munich, Chair Real Time Comp Syst, Munich, Germany.
EM martin.becker@tum.de
RI Chakraborty, Samarjit/AAU-9569-2020
OI Chakraborty, Samarjit/0000-0002-0503-6235
CR Abella J, 2015, 2015 10th IEEE International Symposium on Industrial Embedded Systems (SIES), P39
   Al-Bataineh O, 2015, FORM ASP COMPUT, V27, P917, DOI 10.1007/s00165-015-0340-4
   Altenbernd P, 2016, REAL-TIME SYST, V52, P731, DOI 10.1007/s11241-016-9250-7
   [Anonymous], SIGBED REV
   Axer P, 2014, ACM T EMBED COMPUT S, V13, DOI 10.1145/2560033
   Bechennec J., 2011, ARXIV 1105 1633
   Becker Martin, 2015, Computer Safety, Reliability and Security. SAFECOMP 2015 Workshops, ASSURE, DECSoS, ISSE, ReSA4CI and SASSUR. Proceedings: LNCS 9338, P369, DOI 10.1007/978-3-319-24249-1_32
   Bernat Guillem, 2007, Ada User Journal, V28, P189
   Beyer D., 2014, Tools and Algorithms for the Con- struction and Analysis of Systems, P373
   Blazy Sandrine, 2014, Verified Software: Theories, Tools, Experiments. 5th International Conference, VSTTE 2013. Revised Selected Papers: LNCS 8164, P281, DOI 10.1007/978-3-642-54108-7_15
   Brandner F., 2012, International Conference on Real-Time and Network Systems, P101, DOI DOI 10.1145/2392987.2393000
   Cerny P, 2015, LECT NOTES COMPUT SC, V9032, P105, DOI 10.1007/978-3-662-46669-8_5
   Chattopadhyay S, 2013, REAL-TIME SYST, V49, P517, DOI 10.1007/s11241-013-9178-0
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke EM, 1999, MODEL CHECKING, P1
   Dalsgaard Andreas Engelbredt., 2010, WCET, V15, P113
   Darke P, 2015, DES AUT TEST EUROPE, P1407
   Demyanova Y, 2015, LECT NOTES COMPUT SC, V9206, P561, DOI 10.1007/978-3-319-21690-4_39
   Ding HP, 2012, DES AUT CON, P412
   Edwards SA, 2009, PR IEEE COMP DESIGN, P54, DOI 10.1109/ICCD.2009.5413177
   Ermedahl A, 2005, IEEE T COMPUT, V54, P1104, DOI 10.1109/TC.2005.139
   Ermedahl A, 2009, EUROMICRO, P45, DOI 10.1109/ECRTS.2009.32
   Ferdinand C., 2008, P 4 EUR C EMB REAL T
   Fuhrmann I, 2016, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON REAL-TIME NETWORKS AND SYSTEMS PROCEEDINGS (RTNS 2016), P289, DOI 10.1145/2997465.2997467
   Gulwani S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P375, DOI 10.1145/1542476.1542518
   Gustafsson J, 2006, REAL TIM SYST SYMP P, P57, DOI 10.1109/RTSS.2006.12
   Gustafsson Jan., 2010, WCET, V15, P136, DOI DOI 10.4230/OASICS.WCET.2010.136
   Harmon T, 2007, 13TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P209, DOI 10.1109/RTCSA.2007.44
   Hatcliff J., 2000, Higher-Order and Symbolic Computation, V13, P315, DOI 10.1023/A:1026599015809
   Healy C, 2000, REAL-TIME SYST, V18, P129, DOI 10.1023/A:1008189014032
   Henry J, 2014, ACM SIGPLAN NOTICES, V49, P43, DOI [10.1145/2597809.2597817, 10.1145/2666357.2597817]
   Holsti N, 2002, STATUS OF THE BOUND
   Holsti N, 2008, P 8 INT WORKSH WORKS, V8
   Jahier E, 2013, INT SYM IND EMBED, P140, DOI 10.1109/SIES.2013.6601486
   Kim S., 2009, TECHNICAL REPORT
   Kirner R, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P333, DOI 10.1109/ISORC.2008.65
   Knoop Jens, 2012, Perspectives of System Informatics. 8th International Ershov Informatics Conference, PSI 2011. Revised Selected Papers, P227, DOI 10.1007/978-3-642-29709-0_20
   Ko L, 1996, 1996 IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P170, DOI 10.1109/RTTAS.1996.509534
   Kuhnel Claus., 1998, AVR RISC MICROCONTRO
   Kuo Matthew M. Y., 2010, 2010 8th IEEE International Conference on Industrial Informatics (INDIN 2010), P1104, DOI 10.1109/INDIN.2010.5549585
   Li YTS, 1997, IEEE T COMPUT AID D, V16, P1477, DOI 10.1109/43.664229
   Lickly B., 2008, COMPILERS ARCHITECTU, P137
   Lisper B, 2010, P 10 INT WORKSH WORS, V15
   Ltd.  A, 2008, 0042B ARM IHI
   Lv M, 2008, EUC 2008: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON EMBEDDED AND UBIQUITOUS COMPUTING, VOL 1, MAIN CONFERENCE, P104, DOI [10.1109/EUC.2009.178, 10.1109/EUC.2008.178]
   Maiza C., 2017, INT WORKSH WORST CAS, V57
   Marref A, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P23, DOI 10.1109/ICECCS.2011.10
   Metta R, 2016, ACM SIGPLAN NOTICES, V51, P72, DOI [10.1145/2907950.2907961, 10.1145/2980930.2907961]
   Metzner A, 2004, LECT NOTES COMPUT SC, V3114, P334
   Mitra T, 2017, DAGSTUHL REP, V6, P120
   Mittal S, 2016, ACM T DES AUTOMAT EL, V21, DOI 10.1145/2858792
   Nemer F, 2006, INTERNATIONAL WORKSH
   PARK CY, 1991, COMPUTER, V24, P48, DOI 10.1109/2.76286
   PINGALI K, 1995, SIGPLAN NOTICES, V30, P32, DOI 10.1145/223428.207114
   Puschner P, 1998, EUROMICRO, P130, DOI 10.1109/EMWRTS.1998.685077
   Puschner P., 1989, Real-Time Systems, V1, P159, DOI 10.1007/BF00571421
   Puschner P, 2002, P 2 INT WORKSH WORST, P89
   Puschner P., 2013, P 16 IEEE INT S OBJ, P1
   ROBERTSON N, 1995, J COMB THEORY B, V63, P65, DOI 10.1006/jctb.1995.1006
   Schoeberl M, 2003, LECT NOTES COMPUT SC, V2889, P346
   Souyris Jean., 2005, P 5 INT WORKSHOP WOR, P21
   Sun Microsystems Inc, 1987, SPARC ARCH MAN VERS
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Wilhelm R, 2004, LECT NOTES COMPUT SC, V2937, P309
   Wilhelm R, 2014, COMMUN ACM, V57, P94, DOI 10.1145/2500886
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   Zhao WK, 2004, RTAS 2004: 10TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P472
NR 67
TC 1
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2019
VL 21
IS 5
BP 515
EP 543
DI 10.1007/s10009-018-0497-2
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW8PB
UT WOS:000485255000002
DA 2024-07-18
ER

PT J
AU Kokologiannakis, M
   Sagonas, K
AF Kokologiannakis, Michalis
   Sagonas, Konstantinos
TI Stateless model checking of the Linux kernel's read-copy update (RCU)
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software model checking; Linux kernel; Read-copy update; Nidhugg
AB Read-copy update (RCU) is a synchronization mechanism used heavily in key components of the Linux kernel, such as the virtual filesystem (VFS), to achieve scalability by exploiting RCU's ability to allow concurrent reads and updates. RCU's design is non-trivial, requires a significant effort to fully understand it, let alone become convinced that its implementation is faithful to its specification and provides its claimed properties. The fact that as time goes by Linux kernels are becoming increasingly more complex and are employed in machines with more and more cores and weak memory does not make the situation any easier. This article presents an approach to systematically test the code of the main implementation of RCU used in the Linux kernel (Tree RCU) for concurrency errors, both under sequentially consistent and weak memory. Our modeling allows Nidhugg, a stateless model checking tool, to reproduce, within seconds, safety and liveness bugs that have been reported for RCU. Additionally, we present the real cause behind some failures that have been observed in production systems in the past. More importantly, we were able to verify both the publish-subscribe and the grace-period guarantee, with the latter being the basic and most important guarantee that RCU offers, on several Linux kernel versions, for particular configurations. Our approach is effective, both in dealing with the increased complexity of recent Linux kernels and in terms of time that the process requires. We hold that our effort constitutes a good first step toward making tools such as Nidhugg part of the standard testing infrastructure of the Linux kernel.
C1 [Kokologiannakis, Michalis] Max Planck Inst Software Syst MPI SWS, Kaiserslautern Saarbruke, Germany.
   [Sagonas, Konstantinos] Uppsala Univ, Dept Informat Technol, Uppsala, Sweden.
C3 Max Planck Society; Uppsala University
RP Kokologiannakis, M (corresponding author), Max Planck Inst Software Syst MPI SWS, Kaiserslautern Saarbruke, Germany.
EM michalis@mpi-sws.org; kostis@it.uu.se
RI Sagonas, Konstantinos/IZD-8641-2023
OI Sagonas, Konstantinos/0000-0001-9657-0179; Kokologiannakis,
   Michalis/0000-0002-7905-9739
FU Max Planck Society
FX Open access funding provided by Max Planck Society. We are much obliged
   to Paul E. McKenney for all his help, advice, and suggestions throughout
   this effort. His profound insight into RCU was extremely helpful in
   numerous occasions. Also, this article would not have been possible
   without Nidhugg; we thank its main developer, Carl Leonardsson, for the
   hard work he has put into it. Finally, we thank the anonymous reviewers
   of our SPIN 2017 paper and of this article for their helpful comments
   and feedback.
CR Abdulla P, 2014, ACM SIGPLAN NOTICES, V49, P373, DOI 10.1145/2535838.2535845
   Abdulla PA, 2017, ACTA INFORM, V54, P789, DOI 10.1007/s00236-016-0275-0
   Abdulla PA, 2017, J ACM, V64, DOI 10.1145/3073408
   Alglave Jade, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P141, DOI 10.1007/978-3-642-39799-8_9
   Alglave J, 2018, ACM SIGPLAN NOTICES, V53, P405, DOI [10.1145/3296957.3177156, 10.1145/3173162.3177156]
   [Anonymous], 2017, RCU TORTURE TEST OPE
   [Anonymous], 2009, RCU FIX SYNCHRONIZAT
   [Anonymous], 2009, RCU CLEAN LOCKING GT
   [Anonymous], 2016, CPU HOTPLUG KERNEL
   [Anonymous], 2017, LLVM ATOMIC INSTRUCT
   [Anonymous], 2009, RCU FIX LONG GRACE P
   [Anonymous], 2017, NO HZ REDUCING SCHED
   Aronis S, 2018, LECT NOTES COMPUT SC, V10806, P229, DOI 10.1007/978-3-319-89963-3_14
   Beyer D, 2015, RULES 4 INT COMPETIT
   Callaham J., 2015, Google says there are 1.4 billion active android devices worldwide
   Christakis M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P154, DOI 10.1109/ICST.2013.50
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Desnoyers Mathieu, 2013, Operating Systems Review, V47, P51
   Desnoyers M, 2012, IEEE T PARALL DISTR, V23, P375, DOI 10.1109/TPDS.2011.159
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Godefroid P., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P174, DOI 10.1145/263699.263717
   Godefroid P, 2005, FORM METHOD SYST DES, V26, P77, DOI 10.1007/s10703-005-1489-x
   Godefroid P, 1996, THESIS, DOI [10.1007/3-540-60761-7, DOI 10.1007/3-540-60761-7.ALS0]
   Gotsman A, 2013, LECT NOTES COMPUT SC, V7792, P249, DOI 10.1007/978-3-642-37036-6_15
   Groce A, 2015, IEEE INT CONF AUTOM, P737, DOI 10.1109/ASE.2015.40
   Kokologiannakis M, 2018, PACMPL, V2
   Kokologiannakis M, 2017, SPIN'17: PROCEEDINGS OF THE 24TH ACM SIGSOFT INTERNATIONAL SPIN SYMPOSIUM ON MODEL CHECKING OF SOFTWARE, P172, DOI 10.1145/3092282.3092287
   Liang L., 2016, VERIFICATION TREE BA
   McKenney P. E, 2009, RCU BLOATWATCH EDITI
   McKenney P. E, 2015, VERIFICATION CHALLEN
   McKenney P. E, 2013, RCU REMOVE TINY PREE
   McKenney P.E., 2007, What is RCU, Fundamen- tally?
   McKenney P. E, 2008, HIERARCHICAL RCU
   McKenney P. E, 2009, HUNTING HEISENBUGS
   McKenney P. E., 2017, VERIFICATION CHALLEN
   McKenney Paul E, 1998, Parallel and Distributed Computing and Systems, V509518, P509
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Norris B, 2016, ACM T PROGR LANG SYS, V38, DOI 10.1145/2806886
   Peled D., 1993, Computer Aided Verification. 5th International Conference, CAV '93 Proceedings, P409
   Prakash A, 2017, LINUX NOW RUNS ALL T
   Tassarotti J, 2015, ACM SIGPLAN NOTICES, V50, P110, DOI [10.1145/2737924.2737992, 10.1145/2813885.2737992]
   VALMARI A, 1991, LECT NOTES COMPUT SC, V483, P491
   Weinberger M, 2018, 1 TIME EVER MICROSOF
   Zhang NL, 2015, ACM SIGPLAN NOTICES, V50, P250, DOI [10.1145/2813885.2737956, 10.1145/2737924.2737956]
NR 44
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2019
VL 21
IS 3
SI SI
BP 287
EP 306
DI 10.1007/s10009-019-00514-6
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY4RT
UT WOS:000468116300004
OA hybrid
DA 2024-07-18
ER

PT J
AU Adhikari, K
   Street, J
   Wang, C
   Liu, Y
   Zhang, SJ
AF Adhikari, Kiran
   Street, James
   Wang, Chao
   Liu, Yang
   Zhang, Shaojie
TI Verifying a quantitative relaxation of linearizability via refinement
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 20th International SPIN Symposium on Model Checking of Software
CY JUL 08-09, 2013
CL Stony Brook, NY
SP SPIN
DE Linearizability; Model checking; Concurrent data structure; Refinement;
   Quantitative relaxation
AB The recent years have seen increasingly widespread use of highly concurrent data structures in both multi-core and distributed computing environments, thereby escalating the priority for verifying their correctness. Quasi linearizability is a quantitative variation of the standard linearizability correctness condition to allow more implementation freedom for performance optimization. However, ensuring that the implementation satisfies the quantitative aspect of this new correctness condition is often an arduous task. In this paper, we propose the first automated method for formally verifying quasi linearizability of the implementation model of a concurrent data structure with respect to its sequential specification. The method is based on checking a relaxed version of the refinement relation between the implementation model and the specification model through explicit state model checking. Our method can directly handle concurrent systems where each thread or process makes infinitely many method calls. Furthermore, unlike many existing verification methods, it does not require the user to supply annotations of the linearization points. We have implemented the new method in the PAT verification framework. Our experimental evaluation shows that the method is effective in verifying the new quasi linearizability requirement and detecting violations.
C1 [Adhikari, Kiran; Street, James; Wang, Chao] Virginia Tech, Blacksburg, VA 24061 USA.
   [Liu, Yang] Nanyang Technol Univ, Singapore, Singapore.
   [Zhang, Shaojie] Singapore Univ Technol & Design, Singapore, Singapore.
C3 Virginia Polytechnic Institute & State University; Nanyang Technological
   University; Singapore University of Technology & Design
RP Wang, C (corresponding author), Virginia Tech, Blacksburg, VA 24061 USA.
EM chaowang@vt.edu
RI Liu, Yang/HNJ-6693-2023; Liu, Yang/D-2306-2013; LIU, YANG/HWQ-4615-2023;
   liu, yang/HQY-7531-2023; yang, liu/HTN-9175-2023; liu,
   yang/HHY-8583-2022; liu, yang/HIU-0559-2022; yang, liu/GVU-8760-2022
OI Liu, Yang/0000-0001-7300-9215; 
CR Afek Y, 2010, LECT NOTES COMPUT SC, V6490, P395, DOI 10.1007/978-3-642-17653-1_29
   [Anonymous], 1997, Distributed algorithms
   [Anonymous], 1986, Technical Report RJ 5118
   ASPNES J, 1994, J ACM, V41, P1020, DOI 10.1145/185675.185815
   Attiya H., 2004, Distributed computing: fundamentals, simulations, and advanced topics, V19
   Burckhardt S, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P330, DOI 10.1145/1806596.1806634
   Cerny P, 2010, LECT NOTES COMPUT SC, V6174, P465, DOI 10.1007/978-3-642-14295-6_41
   Farzan A, 2008, LECT NOTES COMPUT SC, V5123, P52
   Flanagan C, 2003, ACM SIGPLAN NOTICES, V38, P338, DOI 10.1145/780822.781169
   Ganai Malay K., 2011, IEEE ACM INT C AUT S
   Haas Andreas, 2013, P ACM INT C COMPUTIN, DOI [10.1145/2482767, DOI 10.1145/2482767]
   Henzinger TA, 2013, ACM SIGPLAN NOTICES, V48, P317, DOI 10.1145/2480359.2429109
   Herlihy M., 2008, ART MULTIPROCESSOR P
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   Hoare CAR., 1985, Communicating Sequential Processes
   Kirsch Christoph M., 2012, Algorithms and Architectures for Parallel Processing. Proceedings of the 12th International Conference, ICA3PP 2012, P273, DOI 10.1007/978-3-642-33078-0_20
   Kirsch CM, 2012, DES AUT CON, P913
   LAMPORT L, 1979, IEEE T COMPUT, V28, P690, DOI 10.1109/TC.1979.1675439
   Liu Y., 2013, IEEE T SOFTW ENG
   Liu Y, 2009, LECT NOTES COMPUT SC, V5850, P321
   Michael MM, 2009, ACM SIGPLAN NOTICES, V44, P45, DOI 10.1145/1594835.1504186
   Payer H., 2011, Proceedings of the 30th annual ACM SIGACT-SIGOPS symposium on Principles of distributed computing, PODC '11, P331
   Said M, 2011, LECT NOTES COMPUT SC, V6617, P313, DOI 10.1007/978-3-642-20398-5_23
   Sinha A., 2011, 2011 9th IEEE/ACM International Conference on Formal Methods and Models for Codesign (MEMOCODE 2011), P99, DOI 10.1109/MEMCOD.2011.5970516
   Sinha Arnab, 2011, Revised Selected Papers (Lecture Notes in Computer Science, V7261, P95, DOI [10.1007/978-3-642-34188-5_11, DOI 10.1007/978-3-642-34188-5_11]
   Sinha N, 2010, PROCEEDINGS OF THE ASME TURBO EXPO 2010, VOL 1, P47
   Sun J, 2009, THIRD INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P127, DOI 10.1109/TASE.2009.32
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Vafeiadis V., 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P129, DOI 10.1145/1122971.1122992
   Vafeiadis V, 2009, LECT NOTES COMPUT SC, V5403, P335, DOI 10.1007/978-3-540-93900-9_27
   Vechev M, 2009, LECT NOTES COMPUT SC, V5578, P261, DOI 10.1007/978-3-642-02652-2_21
   Vogels W, 2009, COMMUN ACM, V52, P40, DOI 10.1145/1435417.1435432
   Wang C., 2011, INT C RUNT VER
   Wang C, 2014, LECT NOTES COMPUT SC, V8318, P376, DOI 10.1007/978-3-642-54013-4_21
   Wang C, 2009, LECT NOTES COMPUT SC, V5850, P256, DOI 10.1007/978-3-642-05089-3_17
   Wang C, 2010, LECT NOTES COMPUT SC, V6015, P328, DOI 10.1007/978-3-642-12002-2_27
   Wang C, 2008, INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, P126
   Wang LQ, 2006, IEEE T SOFTWARE ENG, V32, P93, DOI 10.1109/TSE.2006.1599419
   ZHANG L, 2014, INT S SOFTW TEST AN, P1
   Zhang L, 2013, IEEE INT CONF AUTOM, P4, DOI 10.1109/ASE.2013.6693061
NR 40
TC 1
Z9 1
U1 1
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2016
VL 18
IS 4
BP 393
EP 407
DI 10.1007/s10009-015-0373-2
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DR2AV
UT WOS:000379708300004
OA Green Published
DA 2024-07-18
ER

PT J
AU Tschannen, J
   Furia, CA
   Nordio, M
AF Tschannen, Julian
   Furia, Carlo A.
   Nordio, Martin
TI AutoProof meets some verification challenges
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Automated Program verification; Verification challenges; Experience
   report; Eiffel; Functional correctness
AB AutoProof is an automatic verifier for functional properties of programs written in Eiffel. This paper illustrates some of AutoProof's capabilities when tackling the three challenges of the VerifyThis verification competition held at FM 2012, as well as on three other problems proposed in related events. AutoProof 's design focuses on making it practically applicable with reduced user effort. Tackling the challenges demonstrates to what extent this design goal is met in the current implementation: while some of AutoProof's current limitations prevent us from verifying the complete specification of the prefix sum and binary search tree algorithms, we can still prove some partial properties on interesting special cases, but with the advantage of requiring little or no specification.
C1 [Tschannen, Julian; Furia, Carlo A.; Nordio, Martin] ETH, Chair Software Engn, CH-8092 Zurich, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich
RP Tschannen, J (corresponding author), ETH, Chair Software Engn, Clausiusstr 59, CH-8092 Zurich, Switzerland.
EM julian.tschannen@inf.ethz.ch
OI Furia, Carlo A./0000-0003-1040-3201
CR [Anonymous], 1981, SCI PROGRAMMING, DOI DOI 10.1007/978-1-4612-5983-1
   Barnett M, 2004, LECT NOTES COMPUT SC, V3125, P54
   Barnett M, 2011, COMMUN ACM, V54, P81, DOI 10.1145/1953122.1953145
   Bobot F., 2011, BOOGIE 2011 1 INT WO, P53
   Bormer T., 2012, LNCS, P3
   Filliatre J., 2012, CEUR Workshop Proceedings, V873, P36
   Huisman M., 2012, VERIFYTHIS VERIFICAT
   Jacobs B, 2010, LECT NOTES COMPUT SC, V6461, P304, DOI 10.1007/978-3-642-17164-2_21
   Klebanov V., 2011, LNCS, V6664, P154, DOI [10.1007/978-3-642-21437-0_14, DOI 10.1007/978-3-642-21437-0_14]
   Leino K.R.M, 2008, TECHNICAL REPORT
   Leino K.R. M., 2009, Proceedings of the 2009 ACM Symposium on Applied Computing, SAC '09, P615, DOI 10.1145/1529282.1529411
   Naumann DA, 2005, LECT NOTES COMPUT SC, V3442, P190, DOI 10.1007/978-3-540-31984-9_15
   Nordio M, 2010, LECT NOTES COMPUT SC, V6141, P79, DOI 10.1007/978-3-642-13953-6_5
   Nordio M, 2009, LECT NOTES BUS INF P, V33, P195
   Patterson D, 2012, COMMUN ACM, V55, P104, DOI 10.1145/2209249.2209271
   Polikarpova N., 2013, FLEXIBLE INVARIANTS
   Polikarpova N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P262, DOI 10.1109/ICSE.2013.6606572
   Polikarpova N, 2010, LECT NOTES COMPUT SC, V6217, P127, DOI 10.1007/978-3-642-15057-9_9
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Tschannen Julian, 2014, Verified Software: Theories, Tools, Experiments. 5th International Conference, VSTTE 2013. Revised Selected Papers: LNCS 8164, P149, DOI 10.1007/978-3-642-54108-7_8
   Tschannen J., 2012, LNCS, V7682, P134
   Tschannen J., 2011, BOOGIE WORKSH
   Tschannen J, 2011, LECT NOTES COMPUT SC, V7041, P382, DOI 10.1007/978-3-642-24690-6_26
NR 23
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2015
VL 17
IS 6
BP 745
EP 755
DI 10.1007/s10009-014-0300-y
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT3DN
UT WOS:000362687300007
OA Green Published
DA 2024-07-18
ER

PT J
AU Shafique, M
   Labiche, Y
AF Shafique, Muhammad
   Labiche, Yvan
TI A systematic review of state-based test tools
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Review
DE Model-based testing; State-based testing; Comparison; Criteria;
   Systematic review
AB Model-based testing (MBT) is about testing a software system using a model of its behaviour. To benefit fully from MBT, automation support is required. The goal of this systematic review is determining the current state of the art of prominent MBT tool support where we focus on tools that rely on state-based models. We automatically searched different source of information including digital libraries and mailing lists dedicated to the topic. Precisely defined criteria are used to compare selected tools and comprise support for test adequacy and coverage criteria, level of automation for various testing activities and support for the construction of test scaffolding. Simple adequacy criteria are supported but not advanced ones; data(-flow) criteria are seldom supported; support for creating test scaffolding varies a great deal. The results of this review should be of interest to a wide range of stakeholders: software companies interested in selecting the most appropriate MBT tool for their needs; organizations willing to invest into creating MBT tool support; researchers interested in setting research directions.
C1 [Shafique, Muhammad] Univ Waterloo, Sch Comp Sci, Comp Syst Grp, Waterloo, ON N2L 3G1, Canada.
   [Labiche, Yvan] Carleton Univ, Software Qual Engn Lab, Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
C3 University of Waterloo; Carleton University
RP Shafique, M (corresponding author), Univ Waterloo, Sch Comp Sci, Comp Syst Grp, 200 Univ Ave West, Waterloo, ON N2L 3G1, Canada.
EM muhammad.shafique@uwaterloo.ca; labiche@sce.carleton.ca
OI Labiche, Yvan/0000-0001-8880-4836
CR Ammann P, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P99, DOI 10.1109/ISSRE.2003.1251034
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], ACM SIGSOFT INT S SO
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], MODEL BASED TESTING
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2007, Software testing and analysis-process, principles and techniques
   [Anonymous], FDN SOFTWARE TESTING
   Antoniol G, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P269, DOI 10.1109/ISSRE.2002.1173268
   Belinfante A, 2005, LECT NOTES COMPUT SC, V3472, P391
   Boberg J, 2008, ERLANG '08: PROCEEDINGS OF THE 2008 SIGPLAN ERLANG WORKSHOP, P9
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P16, DOI 10.1016/j.infsof.2008.09.010
   Briand LC, 2004, PROC INT CONF SOFTW, P86, DOI 10.1109/ICSE.2004.1317431
   Broy M., 2005, Springer LNCS
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Burr K., 1998, P INT C SOFTWARE TES, P503
   CHANSON ST, 1993, IEEE INFOCOM SER, P106, DOI 10.1109/INFCOM.1993.253243
   Dias Neto A. C., 2007, P ACM INT WORKSH EMP, P31
   Dustin E., 2009, IMPLEMENTING AUTOMAT
   Dustin E., 1999, AUTOMATED SOFTWARE T
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Fewster M., 1999, Software test automation: effective use of test execution tools
   Goga N., 2001, COMP TORX AUTOLINK T, P379
   Gossens S, 2005, NINTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH-ASSURANCE SYSTEMS ENGINEERING, P121, DOI 10.1109/HASE.2005.27
   Halbwachs Nicolas., 1993, Synchronous Programming of Reactive Systems
   HARTMAN A, 2002, MODEL BASED TEST GEN
   Jacky J, 2008, MODEL-BASED SOFTWARE TESTING AND ANALYSIS WITH C#, P1
   Jorgensen P., 2008, SOFTWARE TESTING A C
   Karris S.T., 2007, INTRO STATEFLOW APPL
   Khalil May, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P388, DOI 10.1109/ISSRE.2010.39
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Lewis W.E., 2008, SOFTWARE TESTING CON, VThird
   Li K., 2004, EFFECTIVE SOFTWARE T
   Maity S, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P235, DOI 10.1109/ISSRE.2005.23
   Mansour N, 2011, J SOFTW MAINT EVOL-R, V23, P51, DOI 10.1002/smr.508
   Monin J.F., 2003, UNDERSTANDING FORMAL
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Patton R., 2005, SOFTWARE TESTING, VSecond
   Pender T., 2003, UML BIBLE
   Poston R.M., 1997, AUTOMATING SPECIFICA
   Pretschner A, 2005, LECT NOTES COMPUT SC, V3582, P537
   Reid SC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P64, DOI 10.1109/METRIC.1997.637166
   Saifan A., 2008, MODEL BASED TESTING
   Saifan A, 2010, ADVANCES TECHNIQUES IN COMPUTING SCIENCES AND SOFTWARE ENGINEERING, P283, DOI 10.1007/978-90-481-3660-5_48
   Schieferdecker I, 2012, IEEE SOFTWARE, V29, P14, DOI 10.1109/MS.2012.13
   Sinha A, 2006, IBM SYST J, V45, P501, DOI 10.1147/sj.453.0501
   Utting M., 2006, TAXONOMY MODEL BASED
   Utting M., 2006, Practical Model-Based Testing
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Van Eijk PeterH. J., 1989, FORMAL DESCRIPTION T
   Vegas S, 2009, IEEE T SOFTWARE ENG, V35, P551, DOI 10.1109/TSE.2009.13
   Vouk M. A., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P55, DOI 10.1109/ISSRE.1994.341348
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Zander J., 2012, MODEL BASED TESTING, P3
NR 60
TC 34
Z9 36
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2015
VL 17
IS 1
BP 59
EP 76
DI 10.1007/s10009-013-0291-0
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7ND
UT WOS:000355681700004
DA 2024-07-18
ER

PT J
AU Rings, T
   Poglitsch, P
   Schulz, S
   Serazio, L
   Vassiliou-Gioles, T
AF Rings, Thomas
   Poglitsch, Patrick
   Schulz, Stephan
   Serazio, Luca
   Vassiliou-Gioles, Theofanis
TI A generic interoperability testing framework and a systematic
   development process for automated interoperability testing
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Interoperability; Automation; Testing; IMS; Standardization; ETSI
AB Interoperability is a prerequisite to allow users to access systems implemented by different vendors seamlessly. A good baseline to achieve interoperability is the implementation of a common set of standards. However, this is often not sufficient as different implementations of a standard are not necessarily interoperable. Therefore, different implementations of systems need to be assessed for interoperability by applying interoperability testing. In this article, we present a generic framework that enables automated interoperability testing with message checks, which assess the compliance of messages exchanged between systems. The goal of this framework is the provision of a basic functionality of interoperability test entities, the definition of a generic interoperability test environment, and guidelines for the specification of automated interoperability tests. The framework also considers aspects related to interoperability testing including verdicts, automation, and limitations of the system under test. Through the application of the framework, interoperability of systems can be assessed, systems can be validated, and standards can be improved. In addition, we present a systematic development process for automated interoperability tests to formalize the development and specification of an interoperability test system. We also consider aspects and critical issues, which are important for the development of a complete interoperability test system. The framework and the process are language and system technology independent. We present their application in a case study that includes interoperability tests for the Internet Protocol Multimedia Subsystem (IMS) using the Testing and Test Control Notation Version 3 (TTCN-3).
C1 [Rings, Thomas] Univ Gottingen, Inst Comp Sci, Goldschmidtstr 7, D-37077 Gottingen, Germany.
   [Poglitsch, Patrick] T Syst, Berlin, Germany.
   [Schulz, Stephan] Conformiq, Espoo, Finland.
   [Serazio, Luca] Telecom Italia, Turin, Italy.
   [Vassiliou-Gioles, Theofanis] Testing Technol IST GmbH, Berlin, Germany.
C3 University of Gottingen; Telecom Italia; IST GmbH - Innovation Systems
   Technology
RP Rings, T (corresponding author), Univ Gottingen, Inst Comp Sci, Goldschmidtstr 7, D-37077 Gottingen, Germany.
EM rings@cs.uni-goettingen.de; luca.serazio@telecomitalia;
   luca.serazio@telecomitalia.it; vassiliou@testingtech.com
OI Vassiliou-Gioles, Theofanis/0000-0002-6990-242X
CR [Anonymous], 2010, 202237 ETSI ES
   [Anonymous], 2010, 202810 ETSI EG
   Bergengruen O., 2010, ENSURING INTEROPERAB
   Besse C., 2002, Testing of Communicating Systems XIV. Application to Internet Technologies and Services. IFIP TC6/WG6.1 Fourteenth International Conference on Testing of Communicating Systems (TestCom 2002), P169
   Brammer N., 2008, THESIS LINKPINGS U S
   Capgemini Sogeti, 2011, HP WORLD QUALITY REP
   Desmoulin A., 2008, SPRINGER LNCS FORMAL, P234
   Dibuz S, 2003, LECT NOTES COMPUT SC, V2644, P243
   Dustin E., 1999, AUTOMATED SOFTWARE T
   ETSI, 2012, PLUGT INT EV
   ETSI, 2011, 20187310 ETSI ES
   ETSI, 2011, 124229 ETSI TS
   ETSI, 2011, 201873 ETSI ES
   ETSI, 2010, 102788 ETSI TR
   ETSI, 2010, 1860112 ETSI TS
   ETSI, 2010, 102789 ETSI TR
   Poikselka Miikka., 2009, The IMS IP Multimedia Concepts and Services, Vthird
   Rings T., 2011, INT J ADV SYST MEASU, V3, P95
   Schulz Stephan, 2008, International Journal on Software Tools for Technology Transfer, V10, P327, DOI 10.1007/s10009-008-0072-3
   Seol S, 2003, COMPUT NETW, V43, P735, DOI 10.1016/S1389-1286(03)00316-5
   Spillner A., 2007, SOFTWARE TESTING FDN, V2
   VEGA DE, 2010, IEEE 2 INT C EHEALTH, P134, DOI DOI 10.1109/ETELEMED.2010.26
NR 22
TC 4
Z9 5
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2014
VL 16
IS 3
BP 295
EP 313
DI 10.1007/s10009-013-0281-2
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HS
UT WOS:000209673100006
DA 2024-07-18
ER

PT J
AU Jiang, ZH
   Pajic, M
   Alur, R
   Mangharam, R
AF Jiang, Zhihao
   Pajic, Miroslav
   Alur, Rajeev
   Mangharam, Rahul
TI Closed-loop verification of medical devices with model abstraction and
   refinement
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 18th International Conference on Tools and Algorithms for the
   Construction and Analysis of Systems (TACAS)
CY MAR 24-APR 01, 2012
CL Tallinn, ESTONIA
DE Medical devices; Implantable pacemaker; Software verification;
   Cyber-physical systems; Model abstraction and refinement; CEGAR
AB The design and implementation of software for medical devices is challenging due to the closed-loop interaction with the patient, which is a stochastic physical environment. The safety-critical nature and the lack of existing industry standards for verification make this an ideal domain for exploring applications of formal modeling and closed-loop analysis. The biggest challenge is that the environment model(s) have to be both complex enough to express the physiological requirements and general enough to cover all possible inputs to the device. In this effort, we use a dual chamber implantable pacemaker as a case study to demonstrate verification of software specifications of medical devices as timed-automata models in UPPAAL. The pacemaker model is based on the specifications and algorithm descriptions from Boston Scientific. The heart is modeled using timed automata based on the physiology of heart. The model is gradually abstracted with timed simulation to preserve properties. A manual Counter-Example-Guided Abstraction and Refinement (CEGAR) framework has been adapted to refine the heart model when spurious counter-examples are found. To demonstrate the closed-loop nature of the problem and heart model refinement, we investigated two clinical cases of Pacemaker Mediated Tachycardia and verified their corresponding correction algorithms in the pacemaker. Along with our tools for code generation from UPPAAL models, this effort enables model-driven design and certification of software for medical devices.
C1 [Jiang, Zhihao; Pajic, Miroslav; Alur, Rajeev; Mangharam, Rahul] Univ Penn, Philadelphia, PA 19104 USA.
C3 University of Pennsylvania
RP Jiang, ZH (corresponding author), Univ Penn, Philadelphia, PA 19104 USA.
EM zhihaoj@seas.upenn.edu
OI Jiang, Zhihao/0000-0002-6730-6915; Pajic, Miroslav/0000-0002-5357-0117
FU Direct For Computer & Info Scie & Enginr; Division Of Computer and
   Network Systems [1253842] Funding Source: National Science Foundation;
   Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [0923518] Funding Source: National Science Foundation
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], 2007, The Compass - Technical Guide to Boston Scientific Cardiac Rhythm Management Products
   [Anonymous], 2010, LIST DEV REC
   Barold S.S., 2004, Cardiac Pacemakers Step by Step: An Illustrated Guide
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Chen T., 2013, HYBRID SYSTEMS COMPU
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Clarke Edmund M., 2001, Model Checking
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   Fogoros R.N., 1999, EP TESTING
   Gomes AO, 2009, LECT NOTES COMPUT SC, V5850, P692, DOI 10.1007/978-3-642-05089-3_44
   Jee E, 2010, IEEE INT CONF EMBED, P133, DOI 10.1109/RTCSA.2010.42
   Jiang Z., 2013, 3 WORKSH DES MOD EV
   Jiang Z., 2011, ICCPS 11
   Jiang ZH, 2012, LECT NOTES COMPUT SC, V7214, P188, DOI 10.1007/978-3-642-28756-5_14
   Jiang ZH, 2011, IEEE ENG MED BIO, P263, DOI 10.1109/IEMBS.2011.6090051
   Jiang ZH, 2012, P IEEE, V100, P122, DOI 10.1109/JPROC.2011.2161241
   Josephson M.E., 2008, Clinical Cardiac Electrophysiology
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Luu Anh Tuan, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P23, DOI 10.1109/SSIRI.2010.28
   Macedo H.D., 2008, INCEMENTAL DEV DISTR, P28
   Mery D., 2009, RES REPORT
   Pajic M, 2012, IEEE REAL TIME, P173, DOI 10.1109/RTAS.2012.25
   Sandler K., 2010, Killed by Code: Software Transparency in Implantable Medical Devices
   Wiggelinkhuizen J, 2007, THESIS EINDHOVEN U T
   Yamane S., 2006, INT J COMPUT SCI NET, V6
   2007, PACEMAKER SYSTEM SPE
NR 28
TC 35
Z9 39
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2014
VL 16
IS 2
BP 191
EP 213
DI 10.1007/s10009-013-0289-7
PG 23
WC Computer Science, Software Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HR
UT WOS:000209673000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Monica, S
   Bergenti, F
   Zambonelli, F
AF Monica, Stefania
   Bergenti, Federico
   Zambonelli, Franco
TI A kinetic approach to investigate the collective dynamics of multi-agent
   systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE collective adaptive systems; symmetric gossip algorithm; mathematical
   kinetic theories
ID OPINION DYNAMICS; MODELS
AB When the number of interacting agents in a multi-agent system is large, the detailed study of the dynamics of each agent tends to obfuscate the collective and possibly emergent dynamics of the multi-agent system as a whole. When the interest is on the collective properties of the multi-agent system, a statistical study of the dynamics of the states of the agents can provide a more effective perspective on the system. In particular, a statistical approach can better focus on the long-term asymptotic properties of the studied multi-agent system. The initial part of this paper outlines a framework to approach the study of the collective properties of multi-agent systems. The framework targets large and decentralized multi-agent systems in which the relevant collective properties emerge from interactions. Then, the paper exemplifies the use of the framework to study the long-term asymptotic properties of multi-agent systems in which agents interact using the symmetric gossip algorithm. The state of each agent is represented as a real number, and the use of the framework shows that all agents exponentially converge to the average of their initial states. The analytic results provided by the framework are confirmed by independent multi-agent simulations. Finally, the paper is concluded with a brief discussion of related work and an overview of future extensions.
C1 [Monica, Stefania; Zambonelli, Franco] Univ Modena & Reggio Emilia, Dipartimento Sci & Metodi Ingn, Reggio Emilia, Italy.
   [Bergenti, Federico] Univ Parma, Dipartimento Sci Matemat Fis & Informat, Parma, Italy.
C3 Universita di Modena e Reggio Emilia; University of Parma
RP Zambonelli, F (corresponding author), Univ Modena & Reggio Emilia, Dipartimento Sci & Metodi Ingn, Reggio Emilia, Italy.
EM stefania.monica@unimore.it; federico.bergenti@unipr.it;
   franco.zambonelli@unimore.it
RI Monica, Stefania/B-3257-2017; Bergenti, Federico/B-3252-2017
FU This work was partially supported by the Italian Ministry of University
   and Research under the PRIN 2017 grant 2017KRC7KT for the project
   <italic>Fluidware</italic> and under the PRIN 2020 grant 2020TL3X8X for
   the project <italic>Typeful Language Adaptatio [2020TL3X8X]; Italian
   Ministry of University and Research under the PRIN
FX This work was partially supported by the Italian Ministry of University
   and Research under the PRIN 2017 grant 2017KRC7KT for the project
   <ITALIC>Fluidware</ITALIC> and under the PRIN 2020 grant 2020TL3X8X for
   the project <ITALIC>Typeful Language Adaptation for Dynamic, Interacting
   and Evolving Systems</ITALIC> (<ITALIC>T-LADIES</ITALIC>).
CR Adiga A, 2014, J ARTIF INTELL RES, V51, P207, DOI 10.1613/jair.4330
   [Anonymous], 2003, SPRINGER SERIES SYNE
   [Anonymous], 2000, Sociodynamics: A Systematic Approach to Mathematical Modeling in the Social Sciences
   Asensio-Marco C, 2014, EUR SIGNAL PR CONF, P131
   Bakhshi R, 2009, INT CONF QUANT EVAL, P247, DOI 10.1109/QEST.2009.38
   Bellomo N, 2021, MATH MOD METH APPL S, V31, P1821, DOI 10.1142/S0218202521500408
   Bellouquid A., 2006, MATH MODELING COMPLE
   Bergenti F, 2004, MU S ART SOC SIM ORG, P19
   BERGENTI F, 2002, P 17 ACM S APPL COMP, P367
   Bianca C, 2015, COMMUN NONLINEAR SCI, V29, P240, DOI 10.1016/j.cnsns.2015.05.015
   Boghosian BM, 2014, PHYS REV E, V89, DOI 10.1103/PhysRevE.89.042804
   Bortolussi L, 2013, PERFORM EVALUATION, V70, P317, DOI 10.1016/j.peva.2013.01.001
   Boyd S, 2004, IEEE DECIS CONTR P, P5310, DOI 10.1109/CDC.2004.1429652
   Boyd S, 2006, IEEE T INFORM THEORY, V52, P2508, DOI 10.1109/TIT.2006.874516
   Brauer F, 2008, LECT NOTES MATH, V1945, P19
   Bures Tomas, 2013, 2013 IEEE 7th International Conference on Self-Adaptation and Self-Organizing Systems Workshops, P71, DOI 10.1109/SASOW.2013.23
   Cardelli L, 2020, NAT COMPUT, V19, P237, DOI 10.1007/s11047-019-09761-7
   Cardelli L, 2019, THEOR COMPUT SCI, V777, P132, DOI 10.1016/j.tcs.2019.03.018
   Cardelli L, 2017, LECT NOTES COMPUT SC, V10460, P466, DOI 10.1007/978-3-319-63121-9_23
   Cardelli L, 2012, SCI REP-UK, V2, DOI 10.1038/srep00656
   Castelli G, 2015, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2700321
   Chakrabarti B.K., 2006, Econophysics and Sociophysics: Trends and Perspectives, DOI [10.1002/9783527610006, DOI 10.1002/9783527610006]
   De Nicola R, 2020, INT J SOFTW TOOLS TE, V22, P389, DOI 10.1007/s10009-020-00565-0
   Dimarco G, 2020, PHYS REV E, V102, DOI 10.1103/PhysRevE.102.022303
   Fagnani F, 2008, IEEE J SEL AREA COMM, V26, P634, DOI 10.1109/JSAC.2008.080506
   Feret J, 2009, P NATL ACAD SCI USA, V106, P6453, DOI 10.1073/pnas.0809908106
   Ferscha A., 2015, UBICOMPISWC ADJUNCT, P893, DOI DOI 10.1145/2800835.2809508
   Galam S, 2012, UNDERST COMPLEX SYST, P1, DOI 10.1007/978-1-4614-2032-3
   Garcia A.F., 2002, SOFTWARE ENG LARGE S
   Goldman CV, 2004, J ARTIF INTELL RES, V22, P143, DOI 10.1613/jair.1427
   Hillston J., 2014, DAGSTUHL REP, V4, P68, DOI DOI 10.4230/DAGREP.4.12.68
   Huhns M.N., 1987, DISTRIBUTED ARTIFICI
   Kash IA, 2011, J ARTIF INTELL RES, V40, P571, DOI 10.1613/jair.3213
   Le Boudec JY, 2007, INT CONF QUANT EVAL, P3, DOI 10.1109/QEST.2007.8
   Liboff RL., 2003, Kinetic Theory: Classical, Quantum, and Relativistic Descriptions
   Mantegna R, 1999, Introduction to econophysics: Correlations and complexity in finance, DOI [10.1017/CBO9780511755767, DOI 10.1017/CBO9780511755767]
   Mariani S, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3431231
   Mitchell M, 2006, ARTIF INTELL, V170, P1194, DOI 10.1016/j.artint.2006.10.002
   Monica Stefania, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P165, DOI 10.1007/978-3-031-19759-8_11
   Monica S, 2017, COMPUT MATH ORGAN TH, V23, P423, DOI 10.1007/s10588-016-9235-z
   Monica S, 2017, COMPUT MATH APPL, V73, P2272, DOI 10.1016/j.camwa.2017.03.008
   Monica S, 2016, LECT NOTES COMPUT SC, V10037, P105, DOI 10.1007/978-3-319-49130-1_9
   Pareschi L., 2013, Interacting Multiagent Systems: Kinetic equations and Monte Carlo methods
   Piccoli B, 2020, Z ANGEW MATH PHYS, V71, DOI 10.1007/s00033-020-01383-9
   Poslad S, 2007, ACM T AUTON ADAP SYS, V2, DOI 10.1145/1293731.1293735
   Pynadath DV, 2002, J ARTIF INTELL RES, V16, P389, DOI 10.1613/jair.1024
   Slanina F, 2004, PHYS REV E, V69, DOI 10.1103/PhysRevE.69.046102
   Sznajd-Weron K, 2000, INT J MOD PHYS C, V11, P1157, DOI 10.1142/S0129183100000936
   Thurner S, 2018, INTRODUCTION TO THE THEORY OF COMPLEX SYSTEMS, DOI 10.1093/oso/9780198821939.001.0001
   van den Broek B, 2008, J ARTIF INTELL RES, V32, P95, DOI 10.1613/jair.2473
   Whitby M, 2022, IEEE T AUTOMAT CONTR, V67, P1023, DOI 10.1109/TAC.2021.3062544
   Wolpert DH, 2002, J ARTIF INTELL RES, V16, P359, DOI 10.1613/jair.995
   Xu Y, 2006, COORDINATION OF LARGE-SCALE MULTIAGENT SYSTEMS, P287, DOI 10.1007/0-387-27972-5_14
   Ygge F, 1999, J ARTIF INTELL RES, V11, P301, DOI 10.1613/jair.627
   Zampieri S., 2008, IFAC WORLD C, V41, P9052
NR 55
TC 1
Z9 1
U1 4
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2023
VL 25
IS 5-6
BP 693
EP 705
DI 10.1007/s10009-023-00724-z
EA NOV 2023
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AB9N8
UT WOS:001093027600007
DA 2024-07-18
ER

PT J
AU Yamaguchi, T
   Hoxha, B
   Nickovic, D
AF Yamaguchi, Tomoya
   Hoxha, Bardh
   Nickovic, Dejan
TI RTAMT - Runtime Robustness Monitors with Application to CPS and Robotics
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Formal specifications; Robotics; Cyber-physical
   systems
ID VERIFICATION
AB In this paper, we present the Real-Time Analog Monitoring Tool (RTAMT), a tool for quantitative monitoring of Signal Temporal Logic (STL) specifications. The library implements a flexible architecture that supports: (1) various environments connected by an Application Programming Interface (API) in Python, (2) various flavors of temporal logic specification and robustness notion such as STL, including an interface-aware variant that distinguishes between input and output variables, and (3) discrete-time and dense-time interpretation of STL with generation of online and offline monitors. We specifically focus on robotics and Cyber-Physical System (CPS) applications, showing how to integrate RTAMT into (1) the Robot Operating System (ROS) and (2) MATLAB/Simulink (R) environments. We evaluate the tool by demonstrating several use scenarios involving service robotic and avionic applications.
C1 [Yamaguchi, Tomoya; Hoxha, Bardh] TRINA, Toyota Motor NA R&D, 1555 Woodridge Ave, Ann Arbor, MI 48105 USA.
   [Nickovic, Dejan] AIT Austrian Inst Technol, Giefinggasse 4, A-1210 Vienna, Austria.
C3 Austrian Institute of Technology (AIT)
RP Nickovic, D (corresponding author), AIT Austrian Inst Technol, Giefinggasse 4, A-1210 Vienna, Austria.
EM tomoya.yamaguchi@toyota.com; bardh.hoxha@toyota.com;
   dejan.nickovic@ait.ac.at
CR Abbas Houssam, 2014, 2014 Twelfth ACM/IEEE Conference on Formal Methods and Models for Codesign (MEMOCODE), P155, DOI 10.1109/MEMCOD.2014.6961854
   Akazaki T, 2015, LECT NOTES COMPUT SC, V9207, P356, DOI 10.1007/978-3-319-21668-3_21
   Alur R, 2015, PRINCIPLES OF CYBER-PHYSICAL SYSTEMS, P1
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   Asarin E, 1997, IEEE S LOG, P160, DOI 10.1109/LICS.1997.614944
   Asarin E, 2002, J ACM, V49, P172, DOI 10.1145/506147.506151
   Convent L., 2018, LNCS, V11254, P144, DOI [DOI 10.1007/978-3-030-03044-5_10, 10.1007/978-3-030-03044, DOI 10.1007/978-3-030-03044]
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Date Y, 2020, PROCEEDINGS OF THE 2020 INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT), P1, DOI 10.1109/EMSOFT51651.2020.9244013
   Deshmukh JV, 2017, FORM METHOD SYST DES, V51, P5, DOI 10.1007/s10703-017-0286-7
   Dokhanchi A, 2014, LECT NOTES COMPUT SC, V8734, P231, DOI 10.1007/978-3-319-11164-3_19
   Donze Alexandre, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P264, DOI 10.1007/978-3-642-39799-8_19
   Donzé A, 2010, LECT NOTES COMPUT SC, V6246, P92, DOI 10.1007/978-3-642-15297-9_9
   Donzé A, 2010, LECT NOTES COMPUT SC, V6174, P167, DOI 10.1007/978-3-642-14295-6_17
   Dreossi T., 2019, ARXIV
   Fainekos GE, 2006, LECT NOTES COMPUT SC, V4262, P178
   Fainekos GE, 2009, THEOR COMPUT SCI, V410, P4262, DOI 10.1016/j.tcs.2009.06.021
   Faymonville P., 2017, ARXIV
   Faymonville P, 2016, LECT NOTES COMPUT SC, V10012, P152, DOI 10.1007/978-3-319-46982-9_10
   Ferrère T, 2019, PROCEEDINGS OF THE 2019 22ND ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC '19), P57, DOI 10.1145/3302504.3311800
   Finkbeiner B, 2005, FORM METHOD SYST DES, V27, P253, DOI 10.1007/s10703-005-3399-3
   Ghosh S, 2021, P AMER CONTR CONF, P3447, DOI 10.23919/ACC50511.2021.9482896
   Gorostiaga F, 2018, LECT NOTES COMPUT SC, V11237, P282, DOI 10.1007/978-3-030-03769-7_16
   Hariharan G, 2022, LECT NOTES COMPUT SC, V13466, P187, DOI 10.1007/978-3-031-21222-2_11
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   Hekmatnejad M, 2019, 17TH ACM-IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR SYSTEM DESIGN (MEMOCODE), DOI 10.1145/3359986.3361203
   Henzinger T.A., 1992, ICALP 92 AUT LANG PR, P545, DOI 10.1007/3-540-55719-9_103
   Huang XY, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON EDGE COMPUTING (EDGE 2020), P1, DOI 10.1109/EDGE50951.2020.00008
   Jaksic S, 2018, IEEE T COMPUT AID D, V37, P2233, DOI 10.1109/TCAD.2018.2858460
   Jaksic S, 2015, 2015 ACM/IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR CODESIGN (MEMOCODE), P218, DOI 10.1109/MEMCOD.2015.7340489
   Kapinski J., 2016, ST-Lib: A library for specifying and classifying model behaviors
   Koenig N., 2004, INT ROB SYST 2004 IR, V3, P2149, DOI [DOI 10.1109/IROS.2004.1389727, DOI 10.1109/IR0S.2004.1389727]
   Koopman P, 2019, LECT NOTES COMPUT SC, V11698, P245, DOI 10.1007/978-3-030-26601-1_17
   Kuffner J. J.  Jr., 2000, Proceedings 2000 ICRA. Millennium Conference. IEEE International Conference on Robotics and Automation. Symposia Proceedings (Cat. No.00CH37065), P995, DOI 10.1109/ROBOT.2000.844730
   Lee Edward Ashford, 2016, INTRO EMBEDDED SYSTE
   Liu C, 2019, ARXIV
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Maler O, 2007, LECT NOTES COMPUT SC, V4590, P95
   Mamouras Konstantinos, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12651), P330, DOI 10.1007/978-3-030-72016-2_18
   Mamouras K, 2020, IEEE T COMPUT AID D, V39, P3868, DOI 10.1109/TCAD.2020.3013053
   Marder-Eppstein E, 2010, IEEE INT CONF ROBOT, P300, DOI 10.1109/ROBOT.2010.5509725
   Mitra S., 2021, Verifying Cyber-Physical Systems: A Path to Safe Autonomy
   Najm W. G., 2007, Pre-crash scenario typology for crash avoidance research
   Nickovic D, 2007, LECT NOTES COMPUT SC, V4763, P304
   Nickovic D, 2020, LECT NOTES COMPUT SC, V12302, P564, DOI 10.1007/978-3-030-59152-6_34
   Parr T., 2013, The Definitive ANTLR 4 Reference
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Quigley M, 2009, IEEE INT CONF ROBOT, P3604
   REINBACHER T., 2013, RV, V7687, P110, DOI DOI 10.1007/978-3-642-35632-2_
   Reinbacher T, 2014, TACAS, V8413, P357
   Reinbacher T, 2014, FORM METHOD SYST DES, V44, P203, DOI 10.1007/s10703-013-0199-z
   Rozier K.Y., 2017, Proceedings of International Workshop on Competitions, Usability, Benchmarks, Evaluation, and Standardisation for Runtime Verification Tools (RV-CUBES), V3, P138, DOI DOI 10.29007/5PCH
   Schumann J, 2016, LECT NOTES COMPUT SC, V10012, P504, DOI 10.1007/978-3-319-46982-9_35
   Sha L, 2001, IEEE SOFTWARE, V18, P20
   Thrun S, 2002, COMMUN ACM, V45, P52, DOI 10.1145/504729.504754
   Tuncali Cumhur Erkan, 2018, 2018 IEEE Intelligent Vehicles Symposium (IV), P1555, DOI 10.1109/IVS.2018.8500421
   Ulus D., 2014, Formal Modeling and Analysis of Timed Systems, P222, DOI DOI 10.1007/978-3-319-10512-3_16
   Ulus D, 2017, LECT NOTES COMPUT SC, V10426, P329, DOI 10.1007/978-3-319-63387-9_16
   Ulus D, 2016, LECT NOTES COMPUT SC, V9636, P736, DOI 10.1007/978-3-662-49674-9_47
   Urmson C, 2008, J FIELD ROBOT, V25, P425, DOI 10.1002/rob.20255
   Vitelli M., 2021, ARXIV
   Waga M, 2018, IEEE T COMPUT AID D, V37, P2649, DOI 10.1109/TCAD.2018.2857358
   Waga M, 2017, LECT NOTES COMPUT SC, V10419, P224, DOI 10.1007/978-3-319-65765-3_13
   Waga M, 2018, 2018 IEEE 3RD WORKSHOP ON MONITORING AND TESTING OF CYBER-PHYSICAL SYSTEMS (MT-CPS 2018), P14, DOI 10.1109/MT-CPS.2018.00014
   Yamaguchi T, 2020, 2020 18TH ACM-IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR SYSTEM DESIGN (MEMOCODE), P92, DOI 10.1109/MEMOCODE51338.2020.9315067
   Yamamoto T, 2019, ROBOMECH J, V6, DOI 10.1186/s40648-019-0132-3
NR 66
TC 0
Z9 0
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2024
VL 26
IS 1
BP 79
EP 99
DI 10.1007/s10009-023-00720-3
EA OCT 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW1A5
UT WOS:001079885400001
DA 2024-07-18
ER

PT J
AU Shafiei, N
   Havelund, K
   Mehlitz, P
AF Shafiei, Nastaran
   Havelund, Klaus
   Mehlitz, Peter
TI Concurrent runtime verification of data rich events
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 20th International Conference on Runtime Verification (RV)
CY OCT 06-09, 2020
CL ELECTR NETWORK
SP Toyota Res Inst
DE Runtime verification; First-order temporal properties; Slicing;
   Concurrency; Actors; Scala
AB This paper presents the open-source runtime verification tool MESA (MEssage-based System Analysis), implemented in Scala, which supports concurrent monitors using the Actor model. Furthermore, the tool supports indexing (slicing) on the data values occurring in data-carrying events, for each individual monitor. The tool is generic in the sense that any monitoring system can be used for creating monitors. In this paper, we use the internal Scala DSL Daut for programming such data-parameterized state machines and temporal logic. To illustrate MESA/Daut, we present a case study that monitors flights from live U.S. airspace data streams, verifying that they conform to planned routes. With base in the case study, we then perform an extensive empirical study of the potential benefits from monitoring slices of a single property in concurrently executing actors. Due to the overhead of scheduling "small" actors (one for each slice or a small number of slices), it is not obvious that concurrent execution of such is beneficial. However, as a main result, we demonstrate that concurrent monitoring of slices to handle data-carrying events can provide considerable speed gains.
C1 [Shafiei, Nastaran; Mehlitz, Peter] NASA Ames Res Ctr, KBR Inc, Moffett Field, CA 94035 USA.
   [Havelund, Klaus] CALTECH, Jet Prop Lab, Pasadena, CA 91109 USA.
C3 National Aeronautics & Space Administration (NASA); NASA Ames Research
   Center; California Institute of Technology; National Aeronautics & Space
   Administration (NASA); NASA Jet Propulsion Laboratory (JPL)
RP Shafiei, N (corresponding author), NASA Ames Res Ctr, KBR Inc, Moffett Field, CA 94035 USA.
EM nastaran.shafiei@nasa.gov; klaus.havelund@jpl.nasa.gov;
   peter.c.mehlitz@nasa.gov
CR Aceto L, 2021, LECT NOTES COMPUT SC, V12649, P3, DOI 10.1007/978-3-030-71500-7_1
   Aceto L, 2021, SOFTW SYST MODEL, V20, P335, DOI 10.1007/s10270-020-00860-z
   Agrawal S, 2016, P IEEE CSFW, P239, DOI 10.1109/CSF.2016.24
   Akka, 2020, US
   Artho Cyrille, 2015, Formal Methods and Software Engineering. 17th International Conference on Formal Engineering Methods (ICFEM 2015). Proceedings: LNCS 9407, P1, DOI 10.1007/978-3-319-25423-4_1
   Attard Duncan Paul, 2017, Software Engineering and Formal Methods. 15th International Conference, SEFM 2017. Proceedings: Lecture Notes in Computer Society (LNCS 10469), P219, DOI 10.1007/978-3-319-66197-1_14
   Avrekh I., 2018, TRNAV ADHERENCE DATA
   Barre B., 2013, LNCS, P184, DOI [10.1007/978-3-642-35632-2_20, DOI 10.1007/978-3-642-35632-2_20]
   Barringer Howard, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P57, DOI 10.1007/978-3-642-21437-0_7
   Basin D, 2020, LECT NOTES COMPUT SC, V12399, P197, DOI 10.1007/978-3-030-60508-7_11
   Basin D, 2020, LECT NOTES COMPUT SC, V12166, P432, DOI 10.1007/978-3-030-51074-9_25
   Basin D, 2016, FORM METHOD SYST DES, V49, P75, DOI 10.1007/s10703-016-0242-y
   Berkovich S, 2015, FORM METHOD SYST DES, V46, P317, DOI 10.1007/s10703-015-0226-3
   Burlo C.B., 2021, ARXIV, DOI DOI 10.4230/LIPICS.ECOOP.2021.20
   Clarkson MR, 2010, J COMPUT SECUR, V18, P1157, DOI 10.3233/JCS-2009-0393
   Colombo Christian, 2012, Software Engineering and Formal Methods. Proceedings of the 10th International Conference, SEFM 2012, P218, DOI 10.1007/978-3-642-33826-7_15
   Department of Transportation Federal Aviation Administration, 2015, IMPL DESC VIA BOST T
   El-Hokayem A, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3355181
   El-Hokayem A, 2018, LECT NOTES COMPUT SC, V11237, P64, DOI 10.1007/978-3-030-03769-7_6
   faa, 2020, SWIM FLIGHT DAT PUB
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Finkbeiner B, 2020, LECT NOTES COMPUT SC, V12399, P431, DOI 10.1007/978-3-030-60508-7_24
   Finkbeiner B, 2019, FORM METHOD SYST DES, V54, P336, DOI 10.1007/s10703-019-00334-z
   Francalanza Adrian, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P176, DOI 10.1007/978-3-319-75632-5_6
   Francalanza A, 2015, FORM METHOD SYST DES, V46, P226, DOI 10.1007/s10703-014-0217-9
   github, 2022, MESA MESS BAS SYST
   Halle S., 2017, PROC INT WORKSHOP CO, P81, DOI DOI 10.29007/4CTH
   Hallé S, 2017, LECT NOTES COMPUT SC, V10548, P359, DOI 10.1007/978-3-319-67531-2_22
   Harris Corporation, 2013, FAA TEL INFR NEMS US
   Havelund K., 2022, TRACECONTRACT
   Havelund K., 2022, DAUT
   Havelund K, 2014, 2014 THEORETICAL ASPECTS OF SOFTWARE ENGINEERING CONFERENCE (TASE), P1, DOI 10.1109/TASE.2014.37
   Hewitt C., 1973, PROC 3 INT JOINT C A, P235, DOI 10.1145/359545.359563
   HOCON, 2020, HUM OPT CONF OBJ NOT
   ICAO, 2008, PERF BAS NAV PBN MAN
   International Air Line Pilots Associations, 2016, FAA SUSP OPD ARR ATL
   JOYCE J, 1987, ACM T COMPUT SYST, V5, P121, DOI 10.1145/13677.22723
   Kurklu E, 2020, LECT NOTES COMPUT SC, V12545, P3, DOI 10.1007/978-3-030-64276-1_1
   Lavery P, 2017, 2017 18TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNDP 2017), P385, DOI 10.1109/SNPD.2017.8022750
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Mehlitz, 2022, RACE
   Mehlitz P., 2016, DIG AV SYST C DASC, P1, DOI [10.1109/DASC.2016.7777991, DOI 10.1109/DASC.2016.7777991]
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   NASA WorldWind, 2022, US
   Neykova R, 2017, CC'17: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION, P98, DOI 10.1145/3033019.3033031
   openjdk.java, 2020, JMH JAV MICR HARN
   Rasmussen S, 2018, INT CONF UNMAN AIRCR, P257, DOI 10.1109/ICUAS.2018.8453287
   Reger G., 2010, RULE BASED RUNTIME V
   Reger G., MAIL INTERACTION LAY
   Reger G., 2015, TACAS, volume 9035 of LNCS, P596, DOI [10.1007/978-3-662-46681-055, DOI 10.1007/978-3-662-46681-055]
   Richards M., 2009, Java message service
   Roestenburg R., 2015, AKKA IN ACTION
   Shafiei N., 2020, EMPIRICAL STUDY ACTO
   Shafiei N, 2020, LECT NOTES COMPUT SC, V12399, P221, DOI 10.1007/978-3-030-60508-7_12
   Stewart M, 2017, IEEEAAIA DIGIT AVION
   U.S. Department of Transportation, 2016, FED AV ADM PERF BAS
   U.S. Department of Transportation, 2017, FED AV ADM INSTR PRO
NR 57
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2023
VL 25
IS 4
BP 481
EP 501
DI 10.1007/s10009-023-00713-2
EA JUN 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA X7GZ5
UT WOS:001016410300001
DA 2024-07-18
ER

PT J
AU Tizpaz-Niari, S
   Cerny, P
   Sankaranarayanan, S
   Trivedi, A
AF Tizpaz-Niari, Saeid
   Cerny, Pavol
   Sankaranarayanan, Sriram
   Trivedi, Ashutosh
TI Quantitative estimation of side-channel leaks with neural networks
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Security; Deep learning; Side channels; Binarized neural network;
   Auto-encoder; Quantitative information flow
ID INFORMATION-FLOW; STATIC ANALYSIS; ATTACKS
AB Information leaks via side channels remain a challenging problem to guarantee confidentiality. Static analysis is a prevalent approach for detecting side channels. However, the side-channel analysis poses challenges to the static techniques since they arise from non-functional aspects of systems and require an analysis of multiple traces. In addition, the outcome of static analysis is usually restricted to binary answers. In practice, real-world applications may need to disclose some aspects of the confidential information to ensure desired functionality. Therefore, quantification techniques are necessary to evaluate the resulting threats. In this paper, we propose a dynamic analysis technique to detect and quantify side channels. Our novel approach is to split the problem into two tasks. First, we learn a timing model of the program as a neural network. While the program implements the functionality, the neural network models the non-functional property that does not exist in the syntax or semantics of programs. Second, we analyze the neural network to quantify information leaks. As demonstrated in our experiments, both of these tasks are feasible in practice-making the approach a significant improvement over state-of-the-art side channel detectors and quantifiers. Thus, our key technical contributions are (a) a binarized neural network architecture that enables side-channel discovery and (b) a novel MILP-based counting algorithm to estimate the side-channel strength. On a set of benchmarks, we show that neural network models the timing of programs with thousands of methods precisely. We also show that neural networks with thousands of neurons can be efficiently analyzed to quantify information leaks via timing side channels.
C1 [Tizpaz-Niari, Saeid] Univ Texas El Paso, El Paso, TX 79968 USA.
   [Cerny, Pavol] TU Wien, Vienna, Austria.
   [Sankaranarayanan, Sriram; Trivedi, Ashutosh] Univ Colorado, Boulder, CO 80309 USA.
C3 University of Texas System; University of Texas El Paso; Technische
   Universitat Wien; University of Colorado System; University of Colorado
   Boulder
RP Tizpaz-Niari, S (corresponding author), Univ Texas El Paso, El Paso, TX 79968 USA.
EM saeid@utep.edu; pavol.cerny@tuwien.ac.at; srirams@colorado.edu;
   ashutosh.trivedi@colorado.edu
RI trivedi, ashutosh/B-9196-2017
FU NSF; CU Boulder; CSU; DARPA [FA8750-15-2-0096]
FX This work utilized resources from the University of Colorado Boulder
   Research Computing Group, which is supported by NSF, CU Boulder, and
   CSU. This research was partially supported by DARPA under agreement
   FA8750-15-2-0096.
CR Abadi M, 2016, ACM SIGPLAN NOTICES, V51, P1, DOI [10.1145/3022670.2976746, 10.1145/2951913.2976746]
   Agat J., 2000, Conference Record of POPL'00: 27th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages. Papers Presented at the Symposium, P40, DOI 10.1145/325694.325702
   Almeida JB, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P53
   [Anonymous], 2016, American fuzzy lop
   Antonopoulos T, 2017, ACM SIGPLAN NOTICES, V52, P362, DOI [10.1145/3140587.3062378, 10.1145/3062341.3062378]
   Apogee-Research, SPAC AN CYB STAC REP
   Arar ÖF, 2015, APPL SOFT COMPUT, V33, P263, DOI 10.1016/j.asoc.2015.04.045
   Arora R., 2016, Understanding deep neural networks with rectified linear units
   Askarov A, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P297, DOI 10.1145/1866307.1866341
   Backes M, 2009, P IEEE S SECUR PRIV, P141, DOI 10.1109/SP.2009.18
   Barthe G, 2004, P IEEE CSFW, P100, DOI 10.1109/CSFW.2004.1310735
   Brumley D, 2005, COMPUT NETW, V48, P701, DOI 10.1016/j.comnet.2005.01.010
   Chen J, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P875, DOI 10.1145/3133956.3134058
   Chen S, 2010, P IEEE S SECUR PRIV, P191, DOI 10.1109/SP.2010.20
   Cybenko G., 1989, Mathematics of Control, Signals, and Systems, V2, P303, DOI 10.1007/BF02551274
   Doychev G, 2015, ACM T INFORM SYST SE, V18, DOI 10.1145/2756550
   Eldib H, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685616
   Eldib H, 2014, LECT NOTES COMPUT SC, V8559, P114, DOI 10.1007/978-3-319-08867-9_8
   Fischetti M, 2018, CONSTRAINTS, V23, P296, DOI 10.1007/s10601-018-9285-6
   Goguen J. A., 1982, Proceedings of the 1982 Symposium on Security and Privacy, P11
   Goldsmith Simon F., 2007, P 6 JOINT M EUR SOFT, P395, DOI 10.1145/1287624.1287681
   Google libFuzzer team, 2016, LIBFUZZER COVERAGE B
   Guo SJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P377, DOI 10.1145/3236024.3236028
   HORNIK K, 1989, NEURAL NETWORKS, V2, P359, DOI 10.1016/0893-6080(89)90020-8
   Hubara I, 2018, J MACH LEARN RES, V18
   Hund R, 2013, P IEEE S SECUR PRIV, P191, DOI 10.1109/SP.2013.23
   Kersten R, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2511, DOI 10.1145/3133956.3138820
   King DB, 2015, ACS SYM SER, V1214, P1
   Kocher P. C., 1996, LECT NOTES COMPUTER, P104, DOI DOI 10.1007/3-540-68697-5_9
   Köpf B, 2009, PROCEEDINGS OF THE 22ND IEEE COMPUTER SECURITY FOUNDATIONS SYMPOSIUM, P324, DOI 10.1109/CSF.2009.21
   Köpf B, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P286
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   LLC GurobiOptimization, 2018, GUROBI OPTIMIZER REF
   Milushev Dimiter, 2012, Formal Techniques for Distributed Systems. Joint 14th IFIP WG 6.1 International Conference, FMOODS 2012 and 32nd IFIP WG 6.1 International Conference, FORTE 2012, P152, DOI 10.1007/978-3-642-30793-5_10
   NAGELKERKE NJD, 1991, BIOMETRIKA, V78, P691, DOI 10.1093/biomet/78.3.691
   Narodytska N, 2018, AAAI CONF ARTIF INTE, P6615
   Nate Lawson, 2009, TIMING ATTACK GOOGLE
   Nilizadeh S, 2019, PROC INT CONF SOFTW, P176, DOI 10.1109/ICSE.2019.00034
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Sabelfeld A, 2003, IEEE J SEL AREA COMM, V21, P5, DOI 10.1109/JSAC.2002.806121
   Smith G, 2009, LECT NOTES COMPUT SC, V5504, P288
   Sung CH, 2018, IEEE INT CONF AUTOM, P904, DOI 10.1145/3238147.3240485
   Terauchi T, 2005, LECT NOTES COMPUT SC, V3672, P352
   Tizpaz-Niari Saeid, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P189, DOI 10.1145/3395363.3404540
   Tizpaz-Niari S, 2019, LECT NOTES COMPUT SC, V11757, P329, DOI 10.1007/978-3-030-32079-9_19
   Tizpaz-Niari S, 2018, AAAI CONF ARTIF INTE, P2468
   Tizpaz-Niari S, 2019, LECT NOTES COMPUT SC, V11561, P140, DOI 10.1007/978-3-030-25540-4_8
   Trivedi A., 2020, DATA DRIVEN DEBUGGIN
   Wang J., 2019, ESEC FSE
   Wang S, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P235
   Wu M, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P15, DOI 10.1145/3213846.3213851
   Zhang KH, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P595, DOI 10.1145/1866307.1866374
NR 53
TC 1
Z9 1
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2021
VL 23
IS 4
SI SI
BP 641
EP 654
DI 10.1007/s10009-021-00622-2
EA MAY 2021
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WK6KY
UT WOS:000654855000001
DA 2024-07-18
ER

PT J
AU Bouyer, P
   Henry, L
   Jaziri, S
   Jéron, T
   Markey, N
AF Bouyer, Patricia
   Henry, Leo
   Jaziri, Samy
   Jeron, Thierry
   Markey, Nicolas
TI Diagnosing timed automata using timed markings
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Timed automata; Diagnonsis; State estimation; Timed domains
AB We consider the problems of efficiently diagnosing (and predicting) what did (and will) happen after a given sequence of observations of the execution of a partially observable one-clock timed automaton. This is made difficult by the facts that timed automata are infinite-state systems, and that they can in general not be determinized. We introduce timed markings as a formalism to keep track of the evolution of the set of reachable configurations over time. We show how timed markings can be used to efficiently represent the closure under silent transitions of such automata. We report on our implementation of this approach compared to the approach of Tripakis (Fault diagnosis for timed automata, in: Damm, Olderog (eds) Formal techniques in real-time and fault-tolerant systems, Springer, Berlin, 2002) and provide some insight to a generalization of our approach to n-clock timed automata.
C1 [Bouyer, Patricia; Jaziri, Samy] CNRS, LSV, Gif Sur Yvette, France.
   [Bouyer, Patricia; Jaziri, Samy] Univ Paris Saclay, Gif Sur Yvette, France.
   [Henry, Leo; Jeron, Thierry; Markey, Nicolas] Univ Rennes, IRISA, Rennes, France.
   [Henry, Leo; Jeron, Thierry; Markey, Nicolas] CNRS, Rennes, France.
   [Henry, Leo; Jeron, Thierry; Markey, Nicolas] INRIA, Rennes, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite Paris
   Saclay; Universite Paris Saclay; Universite Paris Cite; Universite de
   Rennes; Centre National de la Recherche Scientifique (CNRS); Universite
   de Rennes; Inria
RP Markey, N (corresponding author), Univ Rennes, IRISA, Rennes, France.; Markey, N (corresponding author), CNRS, Rennes, France.; Markey, N (corresponding author), INRIA, Rennes, France.
EM nmarkey+ocs@irisa.fr
OI HENRY, Leo/0000-0001-6778-5840
FU ERC project EQualIS; ANR project TickTac
FX Work supported by ERC project EQualIS and ANR project TickTac.
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Baier C, 2009, LECT NOTES COMPUT SC, V5556, P43, DOI 10.1007/978-3-642-02930-1_4
   Behrmann G, 2006, INT CONF QUANT EVAL, P125
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Berard B., 1996, LNCS, V1046, P255, DOI DOI 10.1007/3-540-60922-9_
   Bertrand N, 2015, FORM METHOD SYST DES, V46, P42, DOI 10.1007/s10703-014-0220-1
   Bertrand N, 2012, LOG METH COMPUT SCI, V8, DOI 10.2168/LMCS-8(4:8)2012
   Bouyer P, 2005, LECT NOTES COMPUT SC, V3441, P219
   Bouyer P, 2018, LECT NOTES COMPUT SC, V11237, P205, DOI 10.1007/978-3-030-03769-7_12
   Bouyer P, 2017, LECT NOTES COMPUT SC, V10419, P25, DOI 10.1007/978-3-319-65765-3_2
   Clarke E.M., 2016, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8_8
   Clarke EM, 2009, COMMUN ACM, V52, P75, DOI 10.1145/1592761.1592781
   Clarke Edmund M., 2001, Model Checking
   Filliatre Jean-Christophe, 2011, International Journal on Software Tools for Technology Transfer, V13, P397, DOI 10.1007/s10009-011-0211-0
   Finkel O, 2006, LECT NOTES COMPUT SC, V4202, P187
   Genc S, 2009, AUTOMATICA, V45, P301, DOI 10.1016/j.automatica.2008.06.022
   Grez A., 2021, MONITORING PROBLEM T, V214, P20, DOI 10.4230/LIPIcs.IPEC.2021.20
   Henry L, 2018, LECT NOTES COMPUT SC, V10869, P171, DOI 10.1007/978-3-319-94111-0_10
   Henzinger TA, 2006, LECT NOTES COMPUT SC, V4085, P1
   Hessel Anders, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P77, DOI 10.1007/978-3-540-78917-8_3
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Krichen M, 2009, FORM METHOD SYST DES, V34, P238, DOI 10.1007/s10703-009-0065-1
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Sampath M, 1996, IEEE T CONTR SYST T, V4, P105, DOI 10.1109/87.486338
   Tretmans J, 1996, COMPUT NETWORKS ISDN, V29, P49, DOI 10.1016/S0169-7552(96)00017-7
   Tripakis S., 2002, Formal Techniques in Real-Time and Fault-Tolerant Systems. 7th International Symposium, FTRTFT 2002. Proceedings (Lecture Notes in Computer Science Vol.2469), P205
   Tripakis S, 2006, INFORM PROCESS LETT, V99, P222, DOI 10.1016/j.ipl.2006.04.015
NR 27
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2021
VL 23
IS 2
SI SI
BP 229
EP 253
DI 10.1007/s10009-021-00606-2
EA MAR 2021
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SU3HE
UT WOS:000633791800001
DA 2024-07-18
ER

PT J
AU Amparore, EG
   Donatelli, S
   Ciardo, G
AF Amparore, Elvio G.
   Donatelli, Susanna
   Ciardo, Gianfranco
TI Variable order metrics for decision diagrams in system verification
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Decision diagrams; Variable order metric; Variable order computation
ID REDUCTION; ALGORITHM; PROFILE
AB Decision diagrams (DDs) are widely used in system verification to compute and store the state space of finite discrete events dynamic systems (DEDSs). DDs are organized into levels, and it is well known that the size of a DD encoding a given set may be very sensitive to the order in which the variables capturing the state of the system are mapped to levels. Computing optimal orders is NP-hard. Severalheuristicsfor variable order computation have been proposed, andmetricshave been introduced to evaluate these orders. However, we know of no published evaluation that compares the actual predictive power for all these metrics. We propose and apply a methodology to carry out such an evaluation, based on the correlation between the metric value of a variable order and the size of the DD generated with that order. We compute correlations for several metrics from the literature, applied to many variable orders built using different approaches, for 40 DEDSs taken from the literature. Our experiments show that these metrics have correlations ranging from "very weak or nonexisting" to "strong." We show the importance of highly correlating metrics on variable order heuristics, by defining and evaluating two new heuristics (an improvement of the well-knownForceheuristic and a metric-based simulated annealing), as well as a meta-heuristic (that uses a metric to select the "best" variable order among a set of different variable orders).
C1 [Amparore, Elvio G.; Donatelli, Susanna] Univ Torino, Dipartimento Informat, Turin, Italy.
   [Ciardo, Gianfranco] Iowa State Univ, Dept Comp Sci, Ames, IA USA.
C3 University of Turin; Iowa State University
RP Donatelli, S (corresponding author), Univ Torino, Dipartimento Informat, Turin, Italy.
EM amparore@di.unito.it; susi@di.unito.it; ciardo@iastate.edu
OI Ciardo, Gianfranco/0000-0002-4906-6145
CR Aloul FadiA., 2003, Proceedings of the 13th ACM Great Lakes symposium on VLSI, P116
   Amparore EG, 2017, LECT NOTES COMPUT SC, V10482, P184, DOI 10.1007/978-3-319-68167-2_13
   Amparore EG, 2016, SPRINGER SER RELIAB, P227, DOI 10.1007/978-3-319-30599-8_9
   Amparore EG, 2014, LECT NOTES COMPUT SC, V8657, P170, DOI 10.1007/978-3-319-10696-0_13
   Amparore Elvio Gilberto., 2018, T. Petri Nets and Other Models of Concurrency, V13, P73, DOI [10.1007/978-3- 662-58381-4_ 4, DOI 10.1007/978-3-662-58381-4_4]
   [Anonymous], 2003, JORN LIND NIELSEN BU
   Babar Junaid, 2010, Proceedings of the 2010 Seventh International Conference on the Quantitative Evaluation of Systems (QEST 2010), P195, DOI 10.1109/QEST.2010.34
   Baillargeon S, 2011, SURV METHODOL, V37, P53
   Berthomieu B., 2004, TOOL TINA CONSTRUCTI
   Bollig B, 1996, INFORM PROCESS LETT, V59, P233, DOI 10.1016/0020-0190(96)00119-6
   Bollig B, 1996, IEEE T COMPUT, V45, P993, DOI 10.1109/12.537122
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Ciardo G, 2006, PERFORM EVALUATION, V63, P578, DOI 10.1016/j.peva.2005.06.001
   Ciardo G., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P328
   Cimatti A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P495
   Cuthill E., 1969, P 1969 24 NAT C, P157, DOI [10.1145/800195.805928, DOI 10.1145/800195.805928]
   Du K.L., 2016, SEARCH OPTIMIZATION, DOI DOI 10.1007/978-3-319-41192-7
   Fujita M., 1991, EDAC. Proceedings of the European Conference on Design Automation, P50, DOI 10.1109/EDAC.1991.206358
   Garavel Hubert, 2013, International Journal on Software Tools for Technology Transfer, V15, P89, DOI 10.1007/s10009-012-0244-z
   GIBBS NE, 1976, SIAM J NUMER ANAL, V13, P236, DOI 10.1137/0713023
   Heiner M, 2016, LECT NOTES COMPUT SC, V9930, P286, DOI 10.1007/978-3-662-53401-4_14
   Hocevar D. E., 1983, IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, VCAD-2, P180, DOI 10.1109/TCAD.1983.1270035
   Hollander M., 2014, Nonparametric Statistical Methods, Solutions Manual, Vthird
   Kam T., 1992, MULTIPLE VALUED LOGI, V4, P9
   Kamp E, 2015, TECH REP
   Keramat M, 1998, IEEE T CIRCUITS-II, V45, P575, DOI 10.1109/82.673639
   King I. P., 1970, International Journal for Numerical Methods in Engineering, V2, P523, DOI 10.1002/nme.1620020406
   Kordon F., 2017, MCC2017 7 MODEL CHEC
   Kordon F., 2017, COMPLETE RESULTS 201
   Kozak M., 2004, STAT TRANSITION, V6, P797
   Kwiatkowska Marta, 2009, Performance Evaluation Review, V36, P40, DOI 10.1145/1530873.1530882
   McMillan K. L., 1993, Symbolic model checking
   Meijer J, 2016, LECT NOTES COMPUT SC, V9690, P255, DOI 10.1007/978-3-319-40648-0_20
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   RUDELL R, 1993, 1993 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN - DIGEST OF TECHNICAL PAPERS, P42, DOI 10.1109/ICCAD.1993.580029
   Schwarick M., 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P91, DOI 10.1109/QEST.2011.19
   Siminiceanu RI, 2006, LECT NOTES COMPUT SC, V3920, P90
   SLOAN SW, 1986, INT J NUMER METH ENG, V23, P239, DOI 10.1002/nme.1620230208
   Smith B, 2018, CHI 2018: EXTENDED ABSTRACTS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI [10.1145/3170427.3180306, 10.1109/ACSD.2018.000-4]
   Somenzi F., 2001, International Journal on Software Tools for Technology Transfer, V3, P171, DOI 10.1007/s100090100042
   Thierry-Mieg Yann, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P231, DOI 10.1007/978-3-662-46681-0_20
   van Dijk T, 2017, INT J SOFTW TOOLS TE, V19, P675, DOI 10.1007/s10009-016-0433-2
   van Dijk T, 2015, LECT NOTES COMPUT SC, V9409, P35, DOI 10.1007/978-3-319-25942-0_3
NR 43
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2020
VL 22
IS 5
SI SI
BP 541
EP 562
DI 10.1007/s10009-019-00522-6
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9OM
UT WOS:000573269500002
DA 2024-07-18
ER

PT J
AU Basile, D
AF Basile, Davide
TI Applying supervisory control synthesis to priced featured automata and
   energy problems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Extended finite automata; Featured automata; Featured transition
   systems; Priced featured automata; Energy problems; Controller;
   Synthesis
ID SYSTEMS
AB Software Product Line Engineering (SPLE) promotes extensive reuse of common aspects in developing new software components. Supervisory Control Theory (SCT) is a methodology to automatically synthesise a controller enforcing given safety requirements. The interplay between SPLE and SCT has recently received attention in the research community. This paper formally tackles the problem of synthesising a most permissive controller (mpc) enforcing a given requirement for a software product line (SPL). Generally, the number of products of an SPL can be exponential in the number of features, and an mpc should be synthesised for every product. To overcome this problem, the product line structure is exploited to synthesise, in the best case, a number of controllers that are linear in the number of features of the SPL. The SPL is formalised as a (Priced) Featured Automaton ((P)FA), whilst the mpc synthesis is formalised by modelling both the plant and the requirement as Extended Finite-state Automata (EFA), where quantitative aspects can be seamlessly integrated. The contributions are: (i) a formal mapping from FA to EFA; (ii) a mapping of energy problems onto synthesis of EFA; (iii) three-valued logic and partial-order reduction are used to greatly reduce the number of mpcs required. Contribution (iii) holds for a wide range of other objectives, not only energy problems. Both EFA and PFA are endowed with tools implementing algorithms that have been studied for more than a decade and both are adopted in industry. These results pave the way to reuse algorithms and tools that have been separately developed in SPLE and SCT research areas.
C1 [Basile, Davide] Univ Florence, Dept Stat, Comp Sci, Applicat, Florence, Italy.
   [Basile, Davide] ISTI CNR Pisa, Pisa, Italy.
C3 University of Florence; Consiglio Nazionale delle Ricerche (CNR);
   Istituto di Scienza e Tecnologie dell'Informazione "Alessandro Faedo"
   (ISTI-CNR)
RP Basile, D (corresponding author), Univ Florence, Dept Stat, Comp Sci, Applicat, Florence, Italy.; Basile, D (corresponding author), ISTI CNR Pisa, Pisa, Italy.
EM davide.basile@unifi.it
RI BASILE, Davide/AAX-1112-2020
OI BASILE, Davide/0000-0002-7196-6609
CR [Anonymous], 2014, Tools and Algorithms for the Construction and Analysis of Systems
   [Anonymous], [No title captured]
   Asarin E, 1998, SYSTEM STRUCTURE AND CONTROL 1998 (SSC'98), VOLS 1 AND 2, P447
   Basile D, 2018, LECT NOTES COMPUT SC, V11181, P31, DOI 10.1007/978-3-030-00359-3_3
   Basile D, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE - VOL 2, P11, DOI 10.1145/3236405.3236408
   Basile D, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P117, DOI 10.1145/3109729.3109741
   Basile D, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P3, DOI 10.1145/3109729.3109760
   Basile D, 2016, LOG METH COMPUT SCI, V12, DOI 10.2168/LMCS-12(4:6)2016
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bouyer P, 2008, LECT NOTES COMPUT SC, V5215, P33, DOI 10.1007/978-3-540-85778-5_4
   Cassandras ChristosG., 2006, INTRO DISCRETE EVENT
   Chatterjee K, 2010, LECT NOTES COMPUT SC, V6199, P599, DOI 10.1007/978-3-642-14162-1_50
   Chen YL, 2000, PROCEEDINGS OF THE 2000 IEEE INTERNATIONAL CONFERENCE ON CONTROL APPLICATIONS, P941, DOI 10.1109/CCA.2000.897591
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Cordy M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P141
   Fahrenberg U, 2017, FME WORKS FORM, P51, DOI 10.1109/FormaliSE.2017.2
   Maler O., 1995, STACS 95. 12th Annual Symposium on Theoretical Aspects of Computer Science. Proceedings, P229
   Mannion M., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P176
   Meinicke J, 2017, MASTERING SOFTWARE V, DOI DOI 10.1007/978-3-319-61443-4
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Olaechea Rafael, 2016, SPLC, P109
   Ouedraogo L, 2011, IEEE T AUTOM SCI ENG, V8, P560, DOI 10.1109/TASE.2011.2124457
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   RAMADGE PJ, 1987, SIAM J CONTROL OPTIM, V25, P206, DOI 10.1137/0325013
   Sköldstam M, 2007, IEEE DECIS CONTR P, P5438
   ter Beek MH, 2020, IEEE T SOFTWARE ENG, V46, P321, DOI 10.1109/TSE.2018.2853726
   ter Beek MH, 2017, LECT NOTES COMPUT SC, V10202, P387, DOI 10.1007/978-3-662-54494-5_23
   ter Beek MH, 2016, LECT NOTES COMPUT SC, V9952, P856, DOI 10.1007/978-3-319-47166-2_59
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P287, DOI 10.1016/j.jlamp.2015.11.006
NR 32
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2019
VL 21
IS 6
SI SI
BP 679
EP 689
DI 10.1007/s10009-019-00533-3
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JL0QK
UT WOS:000495240000006
DA 2024-07-18
ER

PT J
AU Fu, CY
   Zheng, KG
AF Fu, Chunyan
   Zheng, Kougen
TI Formal modeling and analysis of ad hoc Zone Routing Protocol in Event-B
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal verification; Hybrid routing protocols; Zone Routing Protocol;
   Event-B; Refinement
AB Ad hoc routing protocols are responsible for searching a route from the source to the destination under the dynamic network topology. Hybrid routing protocols combine the features of proactive and reactive approaches. So, the formal specification of a hybrid routing protocol in the dynamic network environment is a challenge. In this paper, we formally analyze the Zone Routing Protocol (ZRP), a hybrid routing framework, using Event-B. We develop the formal specification by the refinement mechanism. It allows us to gradually model the network environment, the construction of routing zones, route discovery based on bordercasting service and routing update. We prove the stabilization property in the inactive environment. In addition, we demonstrate that discovered routes hold the loop freedom and validity in each reachable system state. To present that the formalization is consistent with the informally expressed requirements, we adopt an animator, ProB, to validate our model. Our work provides reference to analyze extensions of the ZRP and other hybrid routing protocols.
C1 [Fu, Chunyan; Zheng, Kougen] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
C3 Zhejiang University
RP Fu, CY (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
EM fucy@zju.edu.cn; zkg@cs.zju.edu.cn
RI fu, chunyan/HLH-8392-2023
CR Abrial Jean-Raymond, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P178, DOI 10.1007/978-3-642-30885-7_13
   Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   [Anonymous], 2004, AD HOC NETW, DOI DOI 10.1016/S1570-8705(03)00043-X
   [Anonymous], 2005, B BOOK ASSIGNING PRO
   Bhargavan K, 2002, J ACM, V49, P538, DOI 10.1145/581771.581775
   Bourke T, 2014, LECT NOTES COMPUTER
   Butler M, 2013, IND DEPLOYMENT SYSTE, P157
   Cansell D, 2006, THEOR COMPUT SCI, V364, P318, DOI 10.1016/j.tcs.2006.08.015
   Clausen T., 2006, Optimized Link State Routing Protocol (OLSR)
   HAAS Z, 2002, INTRAZONE ROUTING PR
   Haas Z J., 2002, The Interzone Routing Protocol (IERP) for Ad Hoc Networks
   Haas ZJ, 2002, ZONE ROUTING PROTOCO
   Haas ZJ, 2002, BORDERCAST RESOLUTIO
   Hoang TS, 2009, LECT NOTES COMPUT SC, V5423, P1
   Johnson D.B., 1996, Mobile Computing, DOI DOI 10.1007/978-0-585-29603-65
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Lynch N. A., 1996, DISTRIBUTED ALGORITH
   Méry D, 2011, LECT NOTES COMPUT SC, V6976, P401, DOI 10.1007/978-3-642-24550-3_30
   Metayer C., 2009, EVENT B MATH LANGUAG
   Perkins C. E., 1994, Computer Communication Review, V24, P234, DOI 10.1145/190809.190336
   Perkins CE, 1999, WMCSA '99, SECOND IEEE WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P90, DOI 10.1109/MCSA.1999.749281
   Samar P, 2004, IEEE ACM T NETWORK, V12, P595, DOI 10.1109/TNET.2004.833153
   Wibling O, 2004, LECT NOTES COMPUT SC, V3235, P343
   Yang HB, 2006, LECT NOTES COMPUT SC, V4325, P72
NR 25
TC 5
Z9 5
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2019
VL 21
IS 2
BP 165
EP 181
DI 10.1007/s10009-017-0463-4
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS3JE
UT WOS:000463758000003
DA 2024-07-18
ER

PT J
AU Perez, G
   Yovine, S
AF Perez, Gervasio
   Yovine, Sergio
TI Formal specification and implementation of an automated pattern-based
   parallel-code generation framework
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal methods; Software design patterns; Parallel programming;
   Automated code generation
ID BRIDGING MODEL; DESIGN
AB Programming correct parallel software in a cost-effective way is a challenging task requiring a high degree of expertise. As an attempt to overcoming the pitfalls undermining parallel programming, this paper proposes a pattern-based, formally grounded tool that eases writing parallel code by automatically generating platform-dependent programs from high-level, platform-independent specifications. The tool builds on three pillars: (1) a platform-agnostic parallel programming pattern, called PCR, (2) a formal translation of PCRs into a parallel execution model, namely Concurrent Collections (CnC), and (3) a program rewriting engine that generates code for a concrete runtime implementing CnC. The experimental evaluation carried out gives evidence that code produced from PCRs can deliver performance metrics which are comparable with handwritten code but with assured correctness. The technical contribution of this paper is threefold. First, it discusses a parallel programming pattern, called PCR, consisting of producers, consumers, and reducers which operate concurrently on data sets. To favor correctness, the semantics of PCRs is mathematically defined in terms of the formalism FXML. PCRs are shown to be composable and to seamlessly subsume other well-known parallel programming patterns, thus providing a framework for heterogeneous designs. Second, it formally shows how the PCR pattern can be correctly implemented in terms of a more concrete parallel execution model. Third, it proposes a platform-agnostic C++ template library to express PCRs. It presents a prototype source-to-source compilation tool, based on C++ template rewriting, which automatically generates parallel implementations relying on the Intel CnC C++ library.
C1 [Perez, Gervasio; Yovine, Sergio] Consejo Nacl Invest Cient & Tecn, ICC, Buenos Aires, DF, Argentina.
   [Perez, Gervasio; Yovine, Sergio] Univ Buenos Aires, Buenos Aires, DF, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET);
   University of Buenos Aires
RP Perez, G (corresponding author), Consejo Nacl Invest Cient & Tecn, ICC, Buenos Aires, DF, Argentina.; Perez, G (corresponding author), Univ Buenos Aires, Buenos Aires, DF, Argentina.
EM gdperez@dc.uba.ar; syovine@dc.uba.ar
OI Yovine, Sergio/0000-0002-2737-4382
FU LIA INFINIS (CNRS); PEDECIBA; SNI; LIA INFINIS (CNRS, Universite Paris
   Diderot); LIA INFINIS (CONICET, Universidad de Buenos Aires)
FX Partially funded by LIA INFINIS (CNRS, Universite Paris Diderot,
   CONICET, Universidad de Buenos Aires), PEDECIBA and SNI. Thanks to
   CSC-CONICET for granting use of cluster TUPAC.
CR Aldinucci M, 2014, INT J PARALLEL PROG, V42, P1012, DOI 10.1007/s10766-013-0273-6
   Aldinucci Marco., 2014, PROGRAMMING MULTICOR
   Anand CK, 2009, CH CRC COMP SCI SER, P3
   [Anonymous], 2010, P 19 ACM INT S HIGH, DOI DOI 10.1145/1851476.1851593
   Asanovic K, 2009, COMMUN ACM, V52, P56, DOI 10.1145/1562764.1562783
   Assayad I, 2005, LECT NOTES COMPUT SC, V3785, P204
   Blumofe RD, 1996, J PARALLEL DISTR COM, V37, P55, DOI 10.1006/jpdc.1996.0107
   Buchty R, 2012, CONCURR COMP-PRACT E, V24, P663, DOI 10.1002/cpe.1904
   Budimlic Z, 2010, SCI PROGRAMMING-NETH, V18, P203, DOI 10.3233/SPR-2011-0305
   Ciechanowicz P., 2009, TECHNICAL REPORT
   Cole M., 1989, DEV CHILDREN
   Dagum L, 1998, IEEE COMPUT SCI ENG, V5, P46, DOI 10.1109/99.660313
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Enmyren J, 2010, HLPP 2010: PROCEEDINGS OF THE FOURTH INTERNATIONAL WORKSHOP ON HIGH-LEVEL PARALLEL PROGRAMMING AND APPLICATIONS, P5
   Falcou J, 2006, PARALLEL COMPUT, V32, P604, DOI 10.1016/j.parco.2006.06.001
   Falcou J, 2008, ADV PARALLEL COMPUT, V15, P243
   González-Vélez H, 2010, SOFTWARE PRACT EXPER, V40, P1135, DOI 10.1002/spe.1026
   González-Vélez H, 2010, CONCURR COMP-PRACT E, V22, P2073, DOI 10.1002/cpe.1549
   Grelck C, 2010, INT J PARALLEL PROG, V38, P38, DOI 10.1007/s10766-009-0121-x
   Hempel R., 1994, High-Performance Computing and Networking. International Conference and Exhibition Proceedings. Vol.2: Networking and Tools, P247
   Hoare C. A. R., 1978, Communications of the ACM, V21, P666, DOI 10.1145/359576.359585
   Hoefler T, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807644
   Imam S., 2015, LIPICS LEIBNIZ INT P, V37
   Isard M., 2007, Operating Systems Review, V41, P59, DOI 10.1145/1272998.1273005
   Javed N, 2009, OSL OPTIMIZED BULK S
   Leijen D, 2009, ACM SIGPLAN NOTICES, V44, P227, DOI 10.1145/1639949.1640106
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   McCool Michael, 2012, STRUCTURED PARALLEL, V1st
   Reinders James, 2007, Intel threading building blocks-outfitting C++ for multi-core processor parallelism
   Saraswat VijayA., 2007, PPOPP 07, VX10: concurrent programming for modern architectures, P271, DOI DOI 10.1145/1229428.1229483
   Stephens R, 1997, ACTA INFORM, V34, P491, DOI 10.1007/s002360050095
   Thies W, 2002, LECT NOTES COMPUT SC, V2304, P179
   Thies W, 2010, PACT 2010: PROCEEDINGS OF THE NINETEENTH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P365, DOI 10.1145/1854273.1854319
   Valiant LG, 2008, LECT NOTES COMPUT SC, V5193, P13, DOI 10.1007/978-3-540-87744-8_2
   VALIANT LG, 1990, COMMUN ACM, V33, P103, DOI 10.1145/79173.79181
   Walker E. F., 1990, Proceedings. The 10th International Conference on Distributed Computing Systems (Cat. No.90CH2878-7), P253, DOI 10.1109/ICDCS.1990.89292
   Yovine S, 2008, ALGEBRA PARALLEL DIS, P359
   Zandifar M, 2015, STAPL SKELETON FRAME
   Zandifar M, 2015, PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON SUPERCOMPUTING (ICS'15), P415, DOI 10.1145/2751205.2751241
   [No title captured]
NR 40
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2019
VL 21
IS 2
BP 183
EP 202
DI 10.1007/s10009-017-0465-2
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS3JE
UT WOS:000463758000004
DA 2024-07-18
ER

PT J
AU Hoxha, B
   Dokhanchi, A
   Fainekos, G
AF Hoxha, Bardh
   Dokhanchi, Adel
   Fainekos, Georgios
TI Mining parametric temporal logic properties in model-based design for
   cyber-physical systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Metric Temporal Logic; Signal Temporal Logic; Verification; Testing;
   Robustness; Multiple parametric specification mining; Cyber-physical
   systems
ID ROBUSTNESS
AB One of the advantages of adopting a model-based development process is that it enables testing and verification at early stages of development. However, it is often desirable to not only verify/falsify certain formal system specifications, but also to automatically explore the properties that the system satisfies. In this work, we present a framework that enables property exploration for cyber-physical systems. Namely, given a parametric specification with multiple parameters, our solution can automatically infer the ranges of parameters for which the property does not hold on the system. In this paper, we consider parametric specifications in metric or Signal Temporal Logic (MTL or STL). Using robust semantics for MTL, the parameter mining problem can be converted into a Pareto optimization problem for which we can provide an approximate solution by utilizing stochastic optimization methods. We include algorithms for the exploration and visualization of multi-parametric specifications. The framework is demonstrated on an industrial size, high-fidelity engine model as well as examples from related literature.
C1 [Hoxha, Bardh; Dokhanchi, Adel; Fainekos, Georgios] Arizona State Univ, Tempe, AZ 85281 USA.
C3 Arizona State University; Arizona State University-Tempe
RP Hoxha, B (corresponding author), Arizona State Univ, Tempe, AZ 85281 USA.
EM bhoxha@asu.edu; adokhanc@asu.edu; fainekos@asu.edu
RI Fainekos, Georgios/A-9943-2009
OI Fainekos, Georgios/0000-0002-0456-2129
FU NSF [CNS 1116136, CNS 1350420]; Direct For Computer & Info Scie &
   Enginr; Division Of Computer and Network Systems [1350420] Funding
   Source: National Science Foundation
FX This work has been partially supported by award NSF CNS 1116136 and CNS
   1350420. Also, we thank the Toyota Technical Center for donating a
   license for the Simuquest Enginuity tool package.
CR Abbas H., 2014, CYB TECHN AUT CONTR
   Abbas H, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2465787.2465797
   Alur R., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P390, DOI 10.1109/LICS.1990.113764
   ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   Alur R., 2001, ACM Transactions on Computational Logic, V2, P388, DOI [DOI 10.1145/377978.377990, 10.1145/377978.377990]
   Annapureddy Y.S.R., P 36 ANN C IEEE IND, P91
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], 2013, 16 INT C HYBR SYST C
   Asarin E., 2012, LNCS, V7186
   Bruns G., 2001, P 16 ANN S LOG COMP
   Chan W., 2000, LNCS, V1855, P450, DOI DOI 10.1007/10722167
   Chechik M, 2003, LECT NOTES COMPUT SC, V2725, P210
   Chen T., 2013, Proceedings of the 16th international conference on Hybrid systems: computation and control, P131, DOI DOI 10.1145/2461328.2461351
   Chutinan A., 2002, TECHNICAL REPORT
   Conrad M., 2008, AUTOMOTIVE EMBEDDED
   Deb K., 2001, MULTIOBJECTIVE OPTIM
   Di Giampaolo B., 2010, LNCS
   Donze A., 2010, LNCS
   Fages F, 2008, THEOR COMPUT SCI, V408, P55, DOI 10.1016/j.tcs.2008.07.004
   Fainekos G., 2012, P ACC
   Fainekos GE, 2006, LECT NOTES COMPUT SC, V4262, P178
   Fainekos GE, 2009, THEOR COMPUT SCI, V410, P4262, DOI 10.1016/j.tcs.2009.06.021
   Gurfinkel A., 2002, Software Engineering Notes, V27, P139, DOI 10.1145/605466.605488
   Hoffman E. J., 1999, TECHNICAL REPORT
   Hoxha B., 2015, P 2015 IEEE RSJ INT
   Hoxha B., 2014, INT WORKSH DES IMPL
   Hoxha B., 2016, ARXIV151207956V2
   Jiang ZH, 2012, P IEEE, V100, P122, DOI 10.1109/JPROC.2011.2161241
   Kapinski J, 2015, P AMER CONTR CONF, P4086, DOI 10.1109/ACC.2015.7171968
   Kong Zhaodan, 2014, P 17 INT C HYBRID SY, P273, DOI [10.1145/2562059.2562146, DOI 10.1145/2562059.2562146]
   Koopman Philip., 2010, BETTER EMBEDDED SYST
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Legriel J., 2010, TOOLS ALGORITHMS CON, V6015, P69
   Lions J.L., 1996, TECHNICAL REPORT
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Myers R. H., RESPONSE SURFACE MET
   Nghiem T, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P211
   Plaku E., 2009, LNCS
   Potocti de Montalk J. P., 1991, Proceedings. IEEE/AIAA 10th Digital Avionics Systems Conference (Cat. No.91CH3030-4), P324, DOI 10.1109/DASC.1991.177187
   Rizk A, 2008, LECT N BIOINFORMAT, V5307, P251, DOI 10.1007/978-3-540-88562-7_19
   Sankaranarayanan S., 2012, P 10 INT C COMP METH
   Sankaranarayanan Sriram, 2012, ACM INT C HYBR SYST
   Singh A, 2009, LECT NOTES COMPUT SC, V5710, P603, DOI 10.1007/978-3-642-04081-8_40
   Tan L, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P487
   Tripakis S., 2009, MODEL BASED DESIGN E
   Wasylkowski A., 2009, 24 INT C AUT SOFTW E
   Yang H., 2012, INT C TEST SOFTW SYS
   Zhao QC, 2003, IEEE CONTR SYST MAG, V23, P49, DOI 10.1109/MCS.2003.1213603
   Zuliani P, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P243
NR 49
TC 51
Z9 58
U1 0
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2018
VL 20
IS 1
BP 79
EP 93
DI 10.1007/s10009-017-0447-4
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT7PX
UT WOS:000423346100005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ganty, P
   Iosif, R
   Konecny, F
AF Ganty, Pierre
   Iosif, Radu
   Konecny, Filip
TI Underapproximation of procedure summaries for integer programs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Program analysis; Procedure summaries; Flat counter systems; Bounded
   context-free languages
ID FAST ACCELERATION; GRAMMARS
AB We show how to underapproximate the procedure summaries of recursive programs over the integers using off-the-shelf analyzers for non-recursive programs. The novelty of our approach is that the non-recursive program we compute may capture unboundedly many behaviors of the original recursive program for which stack usage cannot be bounded. Moreover, we identify a class of recursive programs on which our method terminates and returns the precise summary relations without underapproximation. Doing so, we generalize a similar result for non-recursive programs to the recursive case. Finally, we present experimental results of an implementation of our method applied on a number of examples.
C1 [Ganty, Pierre] IMDEA Software Inst, Madrid, Spain.
   [Iosif, Radu; Konecny, Filip] CNRS, VERIMAG, Grenoble, France.
   [Konecny, Filip] Ecole Polytech Fed Lausanne, Lausanne, Switzerland.
C3 IMDEA Software Institute; Communaute Universite Grenoble Alpes; Institut
   National Polytechnique de Grenoble; Universite Grenoble Alpes (UGA);
   Centre National de la Recherche Scientifique (CNRS); Swiss Federal
   Institutes of Technology Domain; Ecole Polytechnique Federale de
   Lausanne
RP Iosif, R (corresponding author), CNRS, VERIMAG, Grenoble, France.
EM iosif@imag.fr
FU EU [610686 POLCA]; Madrid Regional Government under CM Project
   [S2013/ICE-2731]
FX Pierre Ganty is supported by the EU FP7 2007-2013 program under
   Agreement 610686 POLCA, by the Madrid Regional Government under CM
   Project S2013/ICE-2731 (N-Greens)
CR Albarghouthi A, 2012, LECT NOTES COMPUT SC, V7148, P39, DOI 10.1007/978-3-642-27940-9_4
   Alur R, 2009, J ACM, V56, DOI 10.1145/1516512.1516518
   Atig MF, 2011, LEIBNIZ INT PR INFOR, V13, P152, DOI 10.4230/LIPIcs.FSTTCS.2011.152
   Bardin S, 2003, LECT NOTES COMPUT SC, V2725, P118
   Boigelot B., 1998, THESIS
   Bozga M, 2010, LECT NOTES COMPUT SC, V6174, P227, DOI 10.1007/978-3-642-14295-6_23
   Bozga M, 2009, FUND INFORM, V91, P275, DOI 10.3233/FI-2009-0044
   Cook B, 2009, FORM METHOD SYST DES, V35, P369, DOI 10.1007/s10703-009-0087-8
   Cowles J., 2000, ADVAN FORM METHODS, P283
   Esparza J, 2010, J ACM, V57, DOI 10.1145/1857914.1857917
   Finkel A, 2002, LECT NOTES COMPUT SC, V2556, P145
   Ganty P, 2012, FORM METHOD SYST DES, V40, P206, DOI 10.1007/s10703-011-0136-y
   Ginsburg S., 1966, The mathematical theory of context-free languages
   Godefroid P, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P43, DOI 10.1145/1706299.1706307
   Godoy G, 2009, LECT NOTES COMPUT SC, V5673, P326, DOI 10.1007/978-3-642-03237-0_22
   Hojjat Hossein, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P247, DOI 10.1007/978-3-642-32759-9_21
   Kroening Daniel, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P381, DOI 10.1007/978-3-642-39799-8_26
   Latteux Michel., 1978, Informatique Theorique, V12, P185
   LUKER M, 1978, INFORM CONTROL, V39, P14, DOI 10.1016/S0019-9958(78)91015-X
   LUKER M, 1980, MATH SYST THEORY, V13, P349
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
NR 22
TC 4
Z9 4
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2017
VL 19
IS 5
BP 565
EP 584
DI 10.1007/s10009-016-0420-7
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FF8VL
UT WOS:000409295800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Herbold, S
   Harms, P
   Grabowski, J
AF Herbold, Steffen
   Harms, Patrick
   Grabowski, Jens
TI Combining usage-based and model-based testing for service-oriented
   architectures in the industrial practice
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Usage-based testing; Model-based testing; Usage monitoring; Web service
   testing; TTCN-3
AB Usage-based testing focuses quality assurance on highly used parts of the software. The basis for this are usage profiles based on which test cases are generated. There are two fundamental approaches in usage-based testing for deriving usage profiles: either the system under test (SUT) is observed during its operation and from the obtained usage data a usage profile is automatically inferred, or a usage profile is modeled by hand within a model-based testing (MBT) approach. In this article, we propose a third and combined approach, where we automatically infer a usage profile and create a test data repository from usage data. Then, we create representations of the generated tests and test data in the test model from an MBT approach. The test model enables us to generate executable Testing and Test Control Notation version 3 (TTCN-3) and thereby allows us to automate the test execution. Together with industrial partners, we adopted this approach in two pilot studies. Our findings show that usage-based testing can be applied in practice and greatly helps with the automation of tests. Moreover, we found that even if usage-based testing is not of interest, the incorporation of usage data can ease the application of MBT.
C1 [Herbold, Steffen; Harms, Patrick; Grabowski, Jens] Georg August Univ Gottingen, Inst Comp Sci, Gottingen, Germany.
C3 University of Gottingen
RP Herbold, S (corresponding author), Georg August Univ Gottingen, Inst Comp Sci, Gottingen, Germany.
EM herbold@cs.uni-goettingen.de; harms@cs.uni-goettingen.de;
   graboswki@cs.uni-goettingen.de
RI Herbold, Steffen/I-4659-2019
OI Herbold, Steffen/0000-0001-9765-2803; Harms, Patrick/0000-0002-9988-2028
FU "Model and Inference Driven-Automated testing of Services architectures"
   (MIDAS) European project [318786]
FX This work was done in the context of the "Model and Inference
   Driven-Automated testing of Services architectures" (MIDAS) European
   project (project number 318786). We would like to thank Testing
   Technologies for their support in terms of licensing as well as feedback
   to support requests regarding TTworkbench; Fraunhofer FOKUS for the
   creation and maintenance of the MIDAS DSL and TTCN-3 generation; and our
   pilot partners from ITAINNOVA and Dedalus S.p.A. for their support in
   conducting the pilot studies.
CR [Anonymous], 2006, Elements of Information Theory
   [Anonymous], 2012, SERVICE COMPUTATION, P20
   Baker P., 2007, Model Driven Testing - Using the UML Testing Profile, VFirst
   Chen C., 2011, P INT WORKSH QUAL AS, P17, DOI DOI 10.1145/2031746.2031752
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   De Francesco A, 2014, 2014 INTERNATIONAL CONFERENCE ON INTELLIGENT NETWORKING AND COLLABORATIVE SYSTEMS (INCOS), P659, DOI 10.1109/INCoS.2014.62
   DiNapoli C, 2015, INT J HIGH IN PRESS
   Dulz W., 2003, P 3 INT C QUAL SOFTW
   Feliachi Abderrahmane, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P99, DOI 10.1109/ICST.2010.26
   Feller W., 1971, INTRO PROBABILITY TH
   Grabowski J, 2003, COMPUT NETW, V42, P375, DOI 10.1016/S1389-1286(03)00249-4
   Herbold S., 2011, 3 INT WORKSH MOD BAS
   Herbold S, 2013, IEEE ICST WORKSHOP, P134, DOI 10.1109/ICSTW.2013.23
   Herbold S, 2012, ADV COMPUT, V85, P327, DOI 10.1016/B978-0-12-396526-4.00007-2
   ISTQB, 2012, STAND GLOSS TERMS US
   Kosala Raymond., 2000, SIGKDD EXPLOR NEWSL, V2, P1
   Le Guen H., 2004, ISSRE '04: Proceedings of the 15th International Symposium on Software Reliability Engineering, P54, DOI [DOI 10.1109/ISSRE.2004.33, 10.1109/ISSRE.2004.33]
   Liedana M.A. Barcelona, 2016, SOFTWARE TO IN PRESS
   LITTLEWOOD B, 1975, ROY STAT SOC C-APP, V24, P172
   Motahari-Nezhad HR, 2011, VLDB J, V20, P417, DOI 10.1007/s00778-010-0203-9
   OMG, 2011, RETR LOC UPD SERV RL
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Srivastava J., 2000, SIGKDD EXPLORATIONS, V1, P12, DOI DOI 10.1145/846183.846188
   Tonella P, 2004, J SOFTW MAINT EVOL-R, V16, P103, DOI 10.1002/smr.284
   Tonella P., 2002, P 4 INT WORKSH WEB S
   Tonella P., 2008, P 10 INT S WEB SIT E
   Tonella P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P562, DOI 10.1145/2568225.2568242
   WALTON GH, 1995, SOFTWARE PRACT EXPER, V25, P97, DOI 10.1002/spe.4380250106
   Wendland M.F., 2015, SOFTWARE TOOLS UNPUB
   Wesslen A., 1995, P 5 INT C SOFTW QUAL
   Whittaker J. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P93, DOI 10.1145/151299.151326
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   Woit D. M., 1993, SIGSOFT Software Engineering Notes, V18, P2, DOI 10.1145/174146.154187
   Woit D.M, 1998, P 1998 C CTR ADV STU, P23
NR 34
TC 3
Z9 3
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2017
VL 19
IS 3
BP 309
EP 324
DI 10.1007/s10009-016-0437-y
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EU4DY
UT WOS:000400981200003
DA 2024-07-18
ER

PT J
AU Gupta, AK
   Gallasch, GE
AF Gupta, Amar Kumar
   Gallasch, Guy Edward
TI Equivalence class verification of the contract net protocol-extension
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Contract net protocol-extension; Coloured petri nets; CPN tools; State
   space; Reachability graph; Equivalence class; Verification
ID COLORED PETRI NETS
AB The contract net protocol is a task allocation protocol that facilitates negotiation between bidders and an auctioneer in a multi-agent system to form a contract. The contract net protocol-extension (CNP-ext) allows the bidders to interact with more than one auctioneer concurrently, and to update their bids until a bid is granted. This introduces flexibility and ensures better selection of a bid. In earlier work, we modelled the CNP-ext with coloured petri nets and showed that it terminates correctly. We also analysed the terminal states and proved that the agents have consistent beliefs at the end of negotiations. Lastly, we showed how the number of terminal states and channel bounds are related to the number of bidders. However, due to state space explosion, our results were restricted to five bidders. As all bidders are considered identical, symmetries exist in the state space. Hence, we decided to tackle this problem using equivalence classes. In this paper, after first presenting an introduction to the CNP-ext, we present a substantial revision to our CNP-ext model and an intentionally didactic description of its operation. Then, we use equivalence classes to analyse the protocol and, importantly, present a proof that our equivalence specification is consistent. Using this technique, we are able to extend the verification results to twenty-four bidders.
C1 [Gupta, Amar Kumar] Univ S Australia, Sch Engn, Adelaide, SA, Australia.
   [Gallasch, Guy Edward] Australias Def Sci & Technol Org, Adelaide, SA, Australia.
C3 University of South Australia; Defence Science & Technology
RP Gupta, AK (corresponding author), Univ S Australia, Sch Engn, Adelaide, SA, Australia.
EM itsiamar@gmail.com; guy.gallasch@dsto.defence.gov.au
CR Aknine S, 2004, AUTON AGENT MULTI-AG, V8, P5, DOI 10.1023/B:AGNT.0000009409.19387.f8
   [Anonymous], 1990, Implementing Discrete Mathematics: Combinatorics and Graph Theory with Mathematica
   [Anonymous], J SOFTW TOOLS TECHNO, DOI DOI 10.1007/S10009-007-0038-X
   Billington J, 2004, IEEE T SYST MAN CY A, V34, P23, DOI 10.1109/TSMCA.2003.820582
   BILLINGTON J, 1998, P 3 BIENN ENG MATH A, P119
   BILLINGTON J, 2007, P 8 WORKSH TUT PRACT, P49
   Billington J, 2008, LECT NOTES COMPUT SC, V5048, P169, DOI 10.1007/978-3-540-68855-6_11
   Ferber J, 1999, Multi-agent systems: An introduction to distributed artificial intelligence, V1
   Gallasch G.E., 2007, THESIS
   ISO/IEC, 2004, 159091 ISOIEC
   Jensen K, 1996, FORM METHOD SYST DES, V9, P7, DOI 10.1007/BF00625967
   Jensen K., 1997, COLOURED PETRI NETS, V1
   Jensen K, 2012, THEOR COMPUT SCI, V429, P169, DOI 10.1016/j.tcs.2011.12.036
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Johnsonbaugh R., 2009, Discrete Mathematics
   Jorgensen JB, 1999, IEEE T PARALL DISTR, V10, P714, DOI 10.1109/71.780866
   JORGENSEN JB, 1996, DESIGN CPN CONDENSED
   Kristensen L. M., 2000, THESIS
   Liu L., 2006, THESIS
   Paurobally S., 2002, THESIS
   Paurobally Shamimabi., 2004, P 2 INT WORKSHOP LOG, P98
   PERUGINI D, 2006, AGENTS LOGISTICS PRO
   PERUGINI D, 2004, P INT WORKSH AG TRAF
   Perugini D., 2003, INT C INT AG TECHN I
   Perugini D., 2005, C INT AG TECHN IAT C
   Perugini D., 2004, P 3 INT JOINT C AUT
   PERUGINI D, 2003, P 6 INT C INF FUS CA
   SMITH RG, 1980, IEEE T COMPUT, V29, P1104, DOI 10.1109/TC.1980.1675516
   Truss J., 1999, Discrete Mathematics for Computer Scientists
   VALMARI A, 1998, LECT NOTES COMPUTER, V1491
   [No title captured]
NR 31
TC 2
Z9 4
U1 0
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2016
VL 18
IS 6
BP 685
EP 706
DI 10.1007/s10009-015-0376-z
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DY5YK
UT WOS:000385180700007
DA 2024-07-18
ER

PT J
AU Vanoverberghe, D
   Piessens, F
AF Vanoverberghe, Dries
   Piessens, Frank
TI Policy ignorant caller-side inline reference monitoring
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Security policy enforcement; Inline reference monitor; Policy ignorant
ID JAVA
AB Runtime security policy enforcement systems are crucial to limit the risks associated with running untrustworthy (malicious or buggy) code. The inlined reference monitor approach to policy enforcement, pioneered by Erlingsson and Schneider, implements runtime enforcement through program rewriting: security checks are inserted inside untrusted programs. Ensuring complete mediation-the guarantee that every security-relevant event is actually intercepted by the monitor-is non-trivial when the program rewriter operates on an object-oriented intermediate language with state-of-the-art features such as virtual methods and delegates. This paper proposes a caller-side rewriting algorithm for MSIL-the bytecode of the. NET virtual machine-where security checks are inserted around calls to security-relevant methods. We prove that this algorithm achieves sound and complete mediation and transparency for a simplified model of MSIL and report on our experiences with the implementation of the algorithm for full MSIL.
C1 [Vanoverberghe, Dries; Piessens, Frank] Katholieke Univ Leuven, IMinds DistriNet, B-3001 Louvain, Belgium.
C3 KU Leuven; IMEC
RP Vanoverberghe, D (corresponding author), Katholieke Univ Leuven, IMinds DistriNet, Celestijnenlaan,200A, B-3001 Louvain, Belgium.
EM Dries.Vanoverberghe@cs.kuleuven.be; Frank.Piessens@cs.kuleuven.be
RI Piessens, Frank/B-1695-2014
CR Agten P., 2012, ACSAC, P1
   [Anonymous], WNSP NEW SEC PAR WOR
   Basin D., 2012, LNCS, V7186, P260
   Bauer L, 2005, ACM SIGPLAN NOTICES, V40, P305, DOI 10.1145/1064978.1065047
   Dam M, 2010, J COMPUT SECUR, V18, P37, DOI 10.3233/JCS-2010-0365
   Dam M, 2009, LECT NOTES COMPUT SC, V5653, P546, DOI 10.1007/978-3-642-03013-0_25
   Desmet Lieven, 2008, Information Security Technical Report, V13, P25, DOI 10.1016/j.istr.2008.02.001
   Desmet L, 2009, ELECTRON NOTES THEOR, V253, P153, DOI 10.1016/j.entcs.2009.11.021
   Erlingsson U, 2000, P IEEE S SECUR PRIV, P246, DOI 10.1109/SECPRI.2000.848461
   ERLINGSSON U, 2004, THESIS CORNELL U
   *EUR COMP MACH ASS, 2006, ECMA335
   EVAIN J, CECIL
   Evans D, 1999, P IEEE S SECUR PRIV, P32, DOI 10.1109/SECPRI.1999.766716
   FRUJA NG, 2006, THESIS ETH ZURICH
   Jeffrey A, 2005, LECT NOTES COMPUT SC, V3444, P423
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Ligatti J., 2005, J. Inf. Secur., V4, P2, DOI [10.1007/s10207-004-0046-8, DOI 10.1007/S10207-004-0046-8]
   Lindholm T., 1999, JAVA TM VIRTUAL MACH, V2nd
   PROVOS N, 2003, SSYM 03, P18
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Schneider F. B., 2000, ACM Transactions on Information and Systems Security, V3, P30, DOI 10.1145/353323.353382
   VANOVERBERGHE D, 2008, P 10 IFIP INT C FORM, P240
NR 22
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2015
VL 17
IS 3
BP 291
EP 303
DI 10.1007/s10009-014-0348-8
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7NL
UT WOS:000355682600004
DA 2024-07-18
ER

PT J
AU Neubauer, J
   Windmüller, S
   Steffen, B
AF Neubauer, Johannes
   Windmueller, Stephan
   Steffen, Bernhard
TI Risk-based testing via active continuous quality control
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Risk-based testing; Active automata learning; Testing; Process modeling
ID MODEL; INFERENCE; DESIGN
AB In this paper, we show how our approach to active continuous quality control (ACQC), which employs learning technology to automatically maintain test models along the whole life cycle, can be extended to include risk analysts for supporting risk-based testing. Key to this enhancement is the tailoring of ACQC's characteristic automata learning-based model extraction to prioritize critical aspects. Technically, risk analysts are provided with an abstract modeling level tailored to design test components (learning symbols) that encompass data-flow constraints reflecting a given risk profile. The resulting alphabet models are already sufficient to steer the ACQC process in a fashion that increases the risk coverage, while it at the same time radically reduces the testing effort. We illustrate our approach by means of case studies with Springer's Online Conference Service (OCS) which show the impact of the risk prioritization on the performance: risk-based regression testing tailored for system migration and for pure functional evolution.
C1 [Neubauer, Johannes; Windmueller, Stephan; Steffen, Bernhard] TU Dortmund Univ, Dortmund, Germany.
C3 Dortmund University of Technology
RP Neubauer, J (corresponding author), TU Dortmund Univ, Dortmund, Germany.
EM johannes.neubauer@cs.tu-dortmund.de;
   stephan.windmueller@cs.tu-dortmund.de;
   bernhard.steffen@cs.tu-dortmund.de
OI Windmuller, Stephan/0000-0002-0661-7998
CR Aarts F, 2010, LECT NOTES COMPUT SC, V6415, P673, DOI 10.1007/978-3-642-16558-0_54
   Aarts F, 2010, LECT NOTES COMPUT SC, V6435, P188, DOI 10.1007/978-3-642-16573-3_14
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], 2012, CONQUERING COMPLEXIT
   [Anonymous], 1998, P 1998 ACM SIGSOFT I, DOI [DOI 10.1145/271771.271803, 10.1145/271771.271803]
   Bach J., 1999, SOFTWARE TESTING QUA, V11, P99
   Bauer O., 2012, CCSE, V255
   Berg T, 2005, LECT NOTES COMPUT SC, V3442, P175, DOI 10.1007/978-3-540-31984-9_14
   Beydeda S, 2001, P INT COMP SOFTW APP, P357, DOI 10.1109/CMPSAC.2001.960639
   Bossert G., 2011, 2011 C NETW INF SYST, P1, DOI DOI 10.1109/SAR-SSI.2011.5931397
   Chen Yanping., 2007, 3rd international workshop on Advances in model-based testing, P54, DOI 10.1145/1291535.1291541
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Felderer M., 2014, MULTIPLE CASE STUDY
   Felderer M, 2012, LECT NOTES BUS INF P, V94, P159
   Fowler M, 2004, INVERSION CONTROL CO
   Gerrard P., 2002, Risk-Based E-Business Testing
   Gnesi S., 2012, FORMAL METHODS IND C
   Grabowski J, 2003, COMPUT NETW, V42, P375, DOI 10.1016/S1389-1286(03)00249-4
   Grabowski J, 2000, INT FED INFO PROC, V48, P161
   Grossmann J., 2014, TESTING HYB IN PRESS
   Hagerer A, 2002, LECT NOTES COMPUT SC, V2306, P80
   Howar F, 2012, LECT NOTES COMPUT SC, V7148, P251, DOI 10.1007/978-3-642-27940-9_17
   Howar F, 2011, LECT NOTES COMPUT SC, V6538, P263, DOI 10.1007/978-3-642-18275-4_19
   Hungar H, 2003, LECT NOTES COMPUT SC, V2725, P315
   Jéron T, 2009, ELECTRON NOTES THEOR, V240, P167, DOI 10.1016/j.entcs.2009.05.051
   Jörges S, 2008, INNOV SYST SOFTW ENG, V4, P361, DOI 10.1007/s11334-008-0071-2
   Jorges S., 2013, Construction i Evolution of Code Generators, A Model-Driven i Service-Oriented Approach
   KARUSSEIT M, 2005, ENTCS, V1132
   Lihua Xu, 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P336, DOI 10.1109/CMPSAC.2004.1342855
   Lund MS, 2011, MODEL-DRIVEN RISK ANALYSIS: THE CORAS APPROACH, P3, DOI 10.1007/978-3-642-12323-8
   Marchand H, 2009, LECT NOTES COMPUT SC, V5826, P113, DOI 10.1007/978-3-642-05031-2_8
   Margaria T, 2004, INT HIGH LEVEL DESIG, P95, DOI 10.1109/HLDVT.2004.1431246
   MARGARIA T, 2004, STTT, V5, P107
   Margaria T, 2008, COMM COM INF SC, V17, P490
   Merten M, 2011, LECT NOTES COMPUT SC, V6605, P220, DOI 10.1007/978-3-642-19835-9_18
   Müller-Olm M, 1999, LECT NOTES COMPUT SC, V1694, P330
   Neubauer J., 2014, LEARNING BASED CROSS
   Neubauer J., 2013, ARXIV13095143
   Neubauer J, 2013, COMPUTER, V46, P56, DOI 10.1109/MC.2013.296
   Pickin S, 2007, IEEE T SOFTWARE ENG, V33, P252, DOI 10.1109/TSE.2007.39
   Raffelt Harald, 2009, International Journal on Software Tools for Technology Transfer, V11, P393, DOI 10.1007/s10009-009-0111-8
   RAFFELT H, 2009, STTT, V11, P307
   RIVEST RL, 1993, INFORM COMPUT, V103, P299, DOI 10.1006/inco.1993.1021
   ROSENBERG L, 2000, P 13 INT SOFTW INT Q, V2
   Rothermel G., 1999, SOFTW TEST VERIF REL, V10, P2000
   Shahbaz M., 2011, P 2011 INT S SOFTWAR, P276
   Smolka S. A., 1996, Formal Aspects of Computing, V8, P585, DOI 10.1007/BF01211910
   STEFFEN B, 1989, LNCS, V372, P723
   Steffen B, 2007, LECT NOTES COMPUT SC, V4383, P92
   Steffen B, 2011, LECT NOTES COMPUT SC, V6659, P256, DOI 10.1007/978-3-642-21455-4_8
   Stepien B., 2014, INNOVATION IN PRESS
   Tretmans J., 2008, LNCS, V4949, P1, DOI DOI 10.1007/978-3-540-78917-8_
   Tretmans J, 2011, LECT NOTES COMPUT SC, V6659, P297, DOI 10.1007/978-3-642-21455-4_9
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Windmuller S., 2013, P 16 INT ACM SIGS S, P111, DOI [10.1145/2465449.2465469, DOI 10.1145/2465449.2465469]
NR 55
TC 8
Z9 8
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2014
VL 16
IS 5
BP 569
EP 591
DI 10.1007/s10009-014-0321-6
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HU
UT WOS:000209673300010
DA 2024-07-18
ER

PT J
AU Murgia, M
   Pinciroli, R
   Trubiani, C
   Tuosto, E
AF Murgia, Maurizio
   Pinciroli, Riccardo
   Trubiani, Catia
   Tuosto, Emilio
TI Comparing perfomance abstractions for collective adaptive systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Behavioural specifications; Model-based performance predictions;
   Queueing Networks; Generalised Stochastic Petri Nets
AB Non-functional properties of collective adaptive systems (CAS) are of paramount relevance practically in any application. This paper compares two recently proposed approaches to quantitative modelling that exploit different system abstractions: the first is based on generalised stochastic Petri nets, and the second is based on queueing networks. Through a case study involving autonomous robots, we analyse and discuss the relative merits of the approaches. This is done by considering three scenarios which differ on the architecture used to coordinate the distributed components. Our experimental results assess a high accuracy when comparing model-based performance analysis results derived from two different quantitative abstractions for CAS.
C1 [Murgia, Maurizio; Pinciroli, Riccardo; Trubiani, Catia; Tuosto, Emilio] Gran Sasso Sci Inst, Laquila, Italy.
C3 Gran Sasso Science Institute (GSSI)
RP Murgia, M (corresponding author), Gran Sasso Sci Inst, Laquila, Italy.
EM maurizio.murgia@gssi.it; riccardo.pinciroli@gssi.it;
   catia.trubiani@gssi.it; emilio.tuosto@gssi.it
OI Pinciroli, Riccardo/0000-0003-3375-7256; Murgia,
   Maurizio/0000-0001-7613-621X
FU The authors thank the anonimous reviewers for their valuable feedback
   that helped to improve the quality of the paper.
FX The authors thank the anonimous reviewers for their valuable feedback
   that helped to improve the quality of the paper.
CR Abd Alrahman Y, 2019, INFORM COMPUT, V268, DOI 10.1016/j.ic.2019.104457
   Ali A, 2019, PROCEEDINGS OF THE 2019 20TH INTERNATIONAL MIDDLEWARE CONFERENCE INDUSTRIAL TRACK (MIDDLEWARE INDUSTRY '19), P36, DOI 10.1145/3366626.3368130
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Apvrille L, 2014, 2014 XXXITH URSI GENERAL ASSEMBLY AND SCIENTIFIC SYMPOSIUM (URSI GASS)
   Balbo G., 2019, Carl Adam Petri: Ideas personality impact, P173, DOI [10.1007/978-3-319-96154-522, DOI 10.1007/978-3-319-96154-522]
   Bartoletti M, 2017, LOG METH COMPUT SCI, V13, DOI 10.23638/LMCS-13(4:25)2017
   Bartoletti M, 2016, LECT NOTES COMPUT SC, V9539, P86, DOI 10.1007/978-3-319-28934-2_5
   Bertoli Marco, 2009, Performance Evaluation Review, V36, P10, DOI 10.1145/1530873.1530877
   Bocchi Laura, 2014, CONCUR 2014 - Concurrency Theory. 25th International Conference, CONCUR 2014. Proceedings: LNCS 8704, P419, DOI 10.1007/978-3-662-44584-6_29
   Bocchi L, 2019, LECT NOTES COMPUT SC, V11423, P583, DOI 10.1007/978-3-030-17184-1_21
   Castro-Perez D, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428223
   Cerotti D., 2016, STOCHASTIC ANAL ENER, P25
   Cerotti D., 2014, INT C PERF EV METH T
   Das A, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3236786
   De Nicola R, 2020, INT J SOFTW TOOLS TE, V22, P389, DOI 10.1007/s10009-020-00565-0
   Gribaudo M, 2018, ELECTRON NOTES THEOR, V337, P67, DOI 10.1016/j.entcs.2018.03.034
   Inverso O., 2020, INT S LEV APPL FORM
   Inverso O., 2020, INT C CONC THEOR CON, p14:1
   Johari Muhammad Hamizan, 2022, Advances in Data Computing, Communication and Security: Proceedings of I3CS2021. Lecture Notes on Data Engineering and Communications Technologies (106), P219, DOI 10.1007/978-981-16-8403-6_19
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Lee Jaehun, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P47, DOI 10.1007/978-3-031-19759-8_4
   Lion Benjamin, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P356, DOI 10.1007/978-3-031-19759-8_22
   Lopes L, 2016, J SYST ARCHITECT, V63, P16, DOI 10.1016/j.sysarc.2016.01.004
   López HA, 2016, LECT NOTES COMPUT SC, V9688, P195, DOI 10.1007/978-3-319-39570-8_13
   Lopez Hugo A., 2017, P S APPL COMPUTING S, P437
   Loreti M, 2016, LECT NOTES COMPUT SC, V9700, P83, DOI 10.1007/978-3-319-34096-8_4
   Majumdar R, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428202
   Murgia Maurizio, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P266, DOI 10.1007/978-3-031-19759-8_17
   Neykova R, 2017, FORM ASP COMPUT, V29, P877, DOI 10.1007/s00165-017-0420-8
   Pianini D, 2021, FUTURE GENER COMP SY, V114, P44, DOI 10.1016/j.future.2020.07.032
   Pinciroli R., 2023, IEEE T IND INFORM, P1
   Pinciroli R., 2016, INT C PERF EV METH T
   Pinciroli R, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P104, DOI 10.1109/ICSA51549.2021.00018
   Pinciroli R, 2021, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '21), P93, DOI 10.1145/3427921.3450251
   Pinciroli R, 2021, IEEE T NETW SERV MAN, V18, P945, DOI 10.1109/TNSM.2020.3039942
   Topfer Michal, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P318, DOI 10.1007/978-3-031-19759-8_20
   Tuosto E, 2018, J LOG ALGEBR METHODS, V95, P17, DOI 10.1016/j.jlamp.2017.11.002
   Vandin A, 2016, LECT NOTES COMPUT SC, V9700, P202, DOI 10.1007/978-3-319-34096-8_7
   Viroli M, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3177774
   Weidinger F, 2018, TRANSPORT SCI, V52, P1479, DOI 10.1287/trsc.2018.0826
NR 40
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2023
VL 25
IS 5-6
BP 785
EP 798
DI 10.1007/s10009-023-00728-9
EA NOV 2023
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AB9N8
UT WOS:001093027600003
OA hybrid
DA 2024-07-18
ER

PT J
AU Brix, C
   Müller, MN
   Bak, S
   Johnson, TT
   Liu, CL
AF Brix, Christopher
   Mueller, Mark Niklas
   Bak, Stanley
   Johnson, Taylor T.
   Liu, Changliu
TI First three years of the international verification of neural networks
   competition (VNN-COMP)
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Certified robustness; Adversarial robustness; Formal verification;
   Formal methods; Neural networks; Machine learning; Deep learning
AB This paper presents a summary and meta-analysis of the first three iterations of the annual International Verification of Neural Networks Competition (VNN-COMP), held in 2020, 2021, and 2022. In the VNN-COMP, participants submit software tools that analyze whether given neural networks satisfy specifications describing their input-output behavior. These neural networks and specifications cover a variety of problem classes and tasks, corresponding to safety and robustness properties in image classification, neural control, reinforcement learning, and autonomous systems. We summarize the key processes, rules, and results, present trends observed over the last three years, and provide an outlook into possible future developments.
C1 [Brix, Christopher] Rhein Westfal TH Aachen, Aachen, Germany.
   [Mueller, Mark Niklas] Swiss Fed Inst Technol, Zurich, Switzerland.
   [Bak, Stanley] SUNY Stony Brook, Stony Brook, NY USA.
   [Johnson, Taylor T.] Vanderbilt Univ, Nashville, TN USA.
   [Liu, Changliu] Carnegie Mellon Univ, Pittsburgh, PA USA.
C3 RWTH Aachen University; Swiss Federal Institutes of Technology Domain;
   ETH Zurich; State University of New York (SUNY) System; State University
   of New York (SUNY) Stony Brook; Vanderbilt University; Carnegie Mellon
   University
RP Brix, C (corresponding author), Rhein Westfal TH Aachen, Aachen, Germany.
EM brix@cs.rwth-aachen.de; mark.mueller@inf.ethz.ch;
   stanley.bak@stonybrook.edu; taylor.johnson@vanderbilt.edu;
   cliu6@andrew.cmu.edu
RI Johnson, Taylor T/E-8862-2015; Brix, Christopher/AAM-1142-2021; Liu,
   Changliu/T-2360-2019
OI Johnson, Taylor T/0000-0001-8021-9923; Brix,
   Christopher/0000-0002-8613-9454; 
FU Air Force Office of Scientific Research; Office of Naval Research
   [FA9550-19-1-0288, FA9550-21-1-0121, FA9550-22-1-0019, FA9550-22-1-0450,
   N00014-22-1-2156]; Defense Advanced Research Projects Agency (DARPA)
   Assured Autonomy program [FA8750-18-C-0089]; National Science Foundation
   (NSF) [1911017, 2028001, 2220401, 2220426]; Projekt DEAL
FX This material is based upon work supported by the Air Force Office of
   Scientific Research and the Office of Naval Research under award numbers
   FA9550-19-1-0288, FA9550-21-1-0121, FA9550-22-1-0019, FA9550-22-1-0450,
   and N00014-22-1-2156, as well the Defense Advanced Research Projects
   Agency (DARPA) Assured Autonomy program through contract number
   FA8750-18-C-0089, and the National Science Foundation (NSF) under grants
   1911017, 2028001, 2220401, and 2220426. Any opinions, findings, and
   conclusions or recommendations expressed in this material are those of
   the author(s) and do not necessarily reflect the views of the United
   States Air Force, the United States Navy, DARPA, or NSF.Open Access
   funding enabled and organized by Projekt DEAL.
CR [Anonymous], VNN COMP2020 REP
   [Anonymous], SIMPL ADV GER
   Bai J., 2019, Open neural network exchange
   Bak S., 2020, EXECUTION GUIDED OVE
   Bak S., 2021, ARXIV, DOI DOI 10.48550/ARXIV.2109.00498
   Balunovic M., 2020, 8 INT C LEARNING REP
   Bojarski Mariusz, 2016, arXiv
   Botoeva E., 2020, 34 AAAI C ARTIFICIAL
   Brix C., 2020, ARXIV
   Bunel R., 2020, C UNC ART INT
   Bunel R, 2020, J MACH LEARN RES, V21
   Bunel R, 2018, ADV NEUR IN, V31
   Changliu Liu, 2021, Foundations and Trends in Optimization, V4, P244, DOI 10.1561/2400000035
   De Palma A., 2021, ARXIV, DOI DOI 10.48550/ARXIV.2101.05844
   De Palma A., 2021, 9 INT C LEARNING REP
   De Palma A., 2021, ARXIV, DOI DOI 10.48550/ARXIV.2104.06718
   De Palma A., 2022, ARXIV, DOI DOI 10.48550/ARXIV.2206.14772
   Ehlers R, 2017, LECT NOTES COMPUT SC, V10482, P269, DOI 10.1007/978-3-319-68167-2_19
   Ferlez J, 2020, PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC2020) (PART OF CPS-IOT WEEK), DOI 10.1145/3365365.3382213
   Ferrari C., 2022, 10 INT C LEARNING RE
   Fischer M, 2022, LECT NOTES COMPUT SC, V13371, P127, DOI 10.1007/978-3-031-13185-1_7
   Gehr T, 2018, P IEEE S SECUR PRIV, P3, DOI 10.1109/SP.2018.00058
   Goodfellow I. J., 2015, 3 INT C LEARNING REP
   Gowal S., 2018, ARXIV
   He K., 2016, PROC CVPR IEEE, P770, DOI [10.1109/CVPR.2016.90, DOI 10.1109/CVPR.2016.90]
   Henriksen P., 2020, P 24 EUR C ART INT E
   Henriksen Patrick, 2021, P 30 INT JOINT C ART, P2549, DOI [DOI 10.24963/IJCAI.2021/351, 10.24963/ijcai.2021/ 351]
   Tran HD, 2020, LECT NOTES COMPUT SC, V12224, P18, DOI 10.1007/978-3-030-53288-8_2
   Hoang-Dung Tran, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P670, DOI 10.1007/978-3-030-30942-8_39
   Hou K, 2020, INTERV NEURORADIOL, V26, P566, DOI 10.1177/1591019920954082
   Huang XW, 2017, LECT NOTES COMPUT SC, V10426, P3, DOI 10.1007/978-3-319-63387-9_1
   Isac O., 2022, 22 INT C FORM METH C
   Julian KD, 2016, IEEEAAIA DIGIT AVION
   Katz G, 2019, LECT NOTES COMPUT SC, V11561, P443, DOI 10.1007/978-3-030-25540-4_26
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Khedr H., 2020, ARXIV
   Kouvaros P., 2021, P 30 INT JOINT C ART, DOI [10.24963/ijcai.2021/364, DOI 10.24963/IJCAI.2021/364]
   Liu, 2022, ARXIV, DOI [10.48550/arXiv.2212.10376, DOI 10.48550/ARXIV.2212.10376]
   Liu C., 2019, ICLR 2019 DEBUGGING
   Lopez D.M., 2019, ARCH19 6 INT WORKSH, P103, DOI [10.29007/rgv8, DOI 10.29007/RGV8]
   Lopez Diego Manzanas, 2022, ser. EPiC Series in Computing, V90, P142
   Madry A., 2018, ARXIV
   Mirman Matthew, 2018, INT C MACH LEARN, P3575
   Muller M.N., 2021, ARXIV
   Muller M.N., 2022, ARXIV, DOI DOI 10.48550/ARXIV.2210.04871
   Serre F., 2021, P MACHINE LEARNING S
   Shi Z., 2021, ADV NEURAL INFORM PR, P18335
   Shriver D, 2021, LECT NOTES COMPUT SC, V12759, P137, DOI 10.1007/978-3-030-81685-8_6
   Shriver D, 2021, PROC INT CONF SOFTW, P275, DOI 10.1109/ICSE43902.2021.00036
   Singh G, 2019, 33 C NEURAL INFORM P, V32
   Singh G, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290354
   Singh G, 2018, ADV NEUR IN, V31
   Singh Gagandeep, 2019, INT C LEARN REPR
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Tacchella A., 2019, VERIFICATION NEURAL
   Tjeng V, 2019, ICLR
   Tran HD, 2019, FME WORKS FORM, P31, DOI 10.1109/FormaliSE.2019.00012
   Vincent JA, 2021, IEEE INT CONF ROBOT, P9029, DOI 10.1109/ICRA48506.2021.9561956
   Wang GJ, 2020, INT J MACH LEARN CYB, V11, P1909, DOI 10.1007/s13042-020-01081-y
   Wang S., 2021, ARXIV
   Xiang WM, 2018, IEEE T NEUR NET LEAR, V29, P5777, DOI 10.1109/TNNLS.2018.2808470
   Xu Kaidi, 2021, INT C LEARN REPR
   Xu L, 2008, J ARTIF INTELL RES, V32, P565, DOI 10.1613/jair.2490
   Zhang H., 2020, 8 INT C LEARN REPR I
   Zhang H., 2022, ARXIV, DOI DOI 10.48550/ARXIV.2208.05740
   Zhang H, 2018, ADV NEUR IN, V31
   Zhou Y. T., 1988, IEEE International Conference on Neural Networks (IEEE Cat. No.88CH2632-8), P71, DOI 10.1109/ICNN.1988.23914
NR 67
TC 5
Z9 5
U1 2
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2023
VL 25
IS 3
BP 329
EP 339
DI 10.1007/s10009-023-00703-4
EA MAY 2023
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S0IX8
UT WOS:000998184400001
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Nolte, G
   Schlüter, M
   Murtovi, A
   Steffen, B
AF Nolte, Gerrit
   Schlueter, Maximilian
   Murtovi, Alnis
   Steffen, Bernhard
TI The power of typed affine decision structures: a case study
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE (Rectifier) neural networks; (Piece-wise) affine functions; Decision
   trees; Explainability; Verification; Robustness; Principal component
   analysis; Diagnostics; Digit recognition; MNIST
ID BLACK-BOX
AB TADS are a novel, concise white-box representation of neural networks. In this paper, we apply TADS to the problem of neural network verification, using them to generate either proofs or concise error characterizations for desirable neural network properties. In a case study, we consider the robustness of neural networks to adversarial attacks, i.e., small changes to an input that drastically change a neural networks perception, and show that TADS can be used to provide precise diagnostics on how and where robustness errors a occur. We achieve these results by introducing Precondition Projection, a technique that yields a TADS describing network behavior precisely on a given subset of its input space, and combining it with PCA, a traditional, well-understood dimensionality reduction technique. We show that PCA is easily compatible with TADS. All analyses can be implemented in a straightforward fashion using the rich algebraic properties of TADS, demonstrating the utility of the TADS framework for neural network explainability and verification. While TADS do not yet scale as efficiently as state-of-the-art neural network verifiers, we show that, using PCA-based simplifications, they can still scale to medium-sized problems and yield concise explanations for potential errors that can be used for other purposes such as debugging a network or generating new training samples.
EM gerrit.nolte@tu-dortmund.de; maximilian.schlueter@tu-dortmund.de;
   alnis.murtovi@tu-dortmund.de; bernhard.steffen@tu-dortmund.de
FU Projekt DEAL
FX Note Open Access funding enabled and organized by Projekt DEAL.
CR Abdi H, 2010, WIRES COMPUT STAT, V2, P433, DOI 10.1002/wics.101
   Adadi A, 2018, IEEE ACCESS, V6, P52138, DOI 10.1109/ACCESS.2018.2870052
   Albarq AN, 2021, FUTUR BUS J, V7, DOI 10.1186/s43093-021-00107-3
   Arora R., 2016, ARXIV
   Axler S., 1997, LINEAR ALGEBRA DONE, DOI [DOI 10.1007/B97662, 10.1007/b97662]
   Bak S., 2021, arXiv
   Bianchini M, 2014, IEEE T NEUR NET LEAR, V25, P1553, DOI 10.1109/TNNLS.2013.2293637
   Bro R, 2014, ANAL METHODS-UK, V6, P2812, DOI 10.1039/c3ay41907j
   Brondsted A., 1983, INTRO CONVEX POLYTOP, DOI [10.1007/978-1-4612-1148-8, DOI 10.1007/978-1-4612-1148-8]
   Brown T., 2020, Advances in Neural Information Processing Systems, V33, P1877, DOI [DOI 10.48550/ARXIV.2005.14165, DOI 10.5555/3495724.3495883]
   Bunel R, 2018, ADV NEUR IN, V31
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Chu LY, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P1244, DOI 10.1145/3219819.3220063
   Cousot P., 1992, Journal of Logic and Computation, V2, P511, DOI 10.1093/logcom/2.4.511
   DAKIN RJ, 1965, COMPUT J, V8, P250, DOI 10.1093/comjnl/8.3.250
   Elboher YY, 2020, LECT NOTES COMPUT SC, V12224, P43, DOI 10.1007/978-3-030-53288-8_3
   Fazlyab M., 2019, ADV NEUR IN
   Gehr T, 2018, P IEEE S SECUR PRIV, P3, DOI 10.1109/SP.2018.00058
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Goodfellow I. J., 2014, ARXIV
   Gorokhovik V. V., 1994, Optimization, V31, P209, DOI 10.1080/02331939408844018
   Gossen F, 2023, INT J SOFTW TOOLS TE, V25, P267, DOI 10.1007/s10009-021-00635-x
   Gu JX, 2018, PATTERN RECOGN, V77, P354, DOI 10.1016/j.patcog.2017.10.013
   Guidotti R, 2019, ERCIM NEWS, P12
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Han B, 2018, ADV NEUR IN, V31, DOI 10.5555/3327757.3327944
   Hanin B., 2019, ADV NEUR IN
   Hanin B, 2019, PR MACH LEARN RES, V97
   Hinz P., 2021, ARXIV
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Kingma D. P., 2014, arXiv
   Kurakin A., 2016, WORKSHOP TRACK P
   Lee C, 2018, 2018 16TH IEEE INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP, 16TH IEEE INT CONF ON PERVAS INTELLIGENCE AND COMP, 4TH IEEE INT CONF ON BIG DATA INTELLIGENCE AND COMP, 3RD IEEE CYBER SCI AND TECHNOL CONGRESS (DASC/PICOM/DATACOM/CYBERSCITECH), P885, DOI 10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.00-13
   Leofante F., 2018, arXiv
   Li Deng, 2012, IEEE Signal Processing Magazine, V29, P141, DOI [10.1109/MSP.2012.2211477, DOI 10.1109/MSP.2012.2211477]
   Luo B., 2018, P AAAI C ART INT
   Maclagan D., 2021, Introduction to tropical geometry
   Magnus R., 2022, METRIC SPACES, P1, DOI DOI 10.1007/978-3-030-94946-4
   Maragos P, 2021, P IEEE, V109, P728, DOI 10.1109/JPROC.2021.3065238
   Montufar G.F., 2014, ADV NEUR IN
   Mothilal RK, 2020, FAT* '20: PROCEEDINGS OF THE 2020 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P607, DOI 10.1145/3351095.3372850
   Ovchinnikov S, 2010, EUR J COMBIN, V31, P1283, DOI 10.1016/j.ejc.2009.11.005
   Papernot N, 2016, P IEEE S SECUR PRIV, P582, DOI 10.1109/SP.2016.41
   Pascanu R., 2013, ARXIV
   Raghu M, 2017, PR MACH LEARN RES, V70
   Schlüter M, 2023, INT J SOFTW TOOLS TE, V25, P301, DOI 10.1007/s10009-023-00700-7
   Serra T, 2018, PR MACH LEARN RES, V80
   Singh G, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290354
   Sudjianto A, 2020, ARXIV
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Theodoridis S, 2003, PATTERN RECOGN, V2nd
   Vinyals O, 2019, NATURE, V575, P350, DOI 10.1038/s41586-019-1724-z
   Wang S., 2021, ADV NEURAL INFORM PR, V34, p29,909
   Wang SX, 2018, IEEE INT C INT ROBOT, P1606, DOI 10.1109/IROS.2018.8593430
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   Zhang LW, 2018, PR MACH LEARN RES, V80
   Zhang X, 2021, AUTOPHAGY, V17, P1519, DOI 10.1080/15548627.2020.1840796
   Zheng S, 2016, PROC CVPR IEEE, P4480, DOI 10.1109/CVPR.2016.485
NR 58
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2023
VL 25
IS 3
BP 355
EP 374
DI 10.1007/s10009-023-00701-6
EA APR 2023
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S0IX8
UT WOS:000973354400001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Blicha, M
   Hyvärinen, AEJ
   Kofron, J
   Sharygina, N
AF Blicha, Martin
   Hyvarinen, Antti E. J.
   Kofron, Jan
   Sharygina, Natasha
TI Using linear algebra in decomposition of Farkas interpolants
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model checking; Satisfiability modulo theory; Linear real arithmetic;
   Craig interpolation
ID PROGRAM
AB The use of propositional logic and systems of linear inequalities over reals is a common means to model software for formal verification. Craig interpolants constitute a central building block in this setting for over-approximating reachable states, e.g. as candidates for inductive loop invariants. Interpolants for a linear system can be efficiently computed from a Simplex refutation by applying the Farkas' lemma. However, these interpolants do not always suit the verification task-in the worst case, they can even prevent the verification algorithm from converging. This work introduces the decomposed interpolants, a fundamental extension of the Farkas interpolants, obtained by identifying and separating independent components from the interpolant structure, using methods from linear algebra. We also present an efficient polynomial algorithm to compute decomposed interpolants and analyse its properties. We experimentally show that the use of decomposed interpolants in model checking results in immediate convergence on instances where state-of-the-art approaches diverge. Moreover, since being based on the efficient Simplex method, the approach is very competitive in general.
C1 [Blicha, Martin; Hyvarinen, Antti E. J.; Sharygina, Natasha] Univ Svizzera Italiana USI, Lugano, Switzerland.
   [Blicha, Martin; Kofron, Jan] Charles Univ Prague, Fac Math & Phys, Prague, Czech Republic.
C3 Universita della Svizzera Italiana; Charles University Prague
RP Blicha, M (corresponding author), Univ Svizzera Italiana USI, Lugano, Switzerland.; Blicha, M (corresponding author), Charles Univ Prague, Fac Math & Phys, Prague, Czech Republic.
EM martin.blicha@usi.ch; antti.hyvaerinen@usi.ch;
   jan.kofron@d3s.mff.cuni.cz; natasha.sharygina@usi.ch
RI Hyvärinen, Antti E. J./F-5416-2017; Blicha, Martin/HNQ-4122-2023;
   Kofroň, Jan/J-3593-2017
OI Blicha, Martin/0000-0001-8140-4098; Kofroň, Jan/0000-0003-0391-4812;
   Sharygina, Natasha/0000-0002-8872-4913
FU Universita della Svizzera italiana
FX Open Access funding provided by Universita della Svizzera italiana.
CR Alt L., 2017, LNCS, V10629, P195, DOI 10.1007/978-3-319-70389-3
   Alt L, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P39, DOI 10.23919/FMCAD.2017.8102239
   Alt L, 2016, LECT NOTES COMPUT SC, V9593, P1, DOI 10.1007/978-3-319-29613-5_1
   Andrilli S., 2016, Elementary Linear Algebra, V5th
   [Anonymous], 1995, Temporal verification of reactive systems-safety
   [Anonymous], 2013, Proceedings of the 25th International Conference on Computer Aided Verification, CAV'13, DOI 10.1007/978-3-642-39799-8
   [Anonymous], 2014, PROC C E4 EXHIBITION, DOI DOI 10.7873/DATE.2014.128
   Barrett C, 2011, LECT NOTES COMPUT SC, V6504, P3
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Blicha M, 2019, LECT NOTES COMPUT SC, V11427, P3, DOI 10.1007/978-3-030-17462-0_1
   Bradley AR, 2011, LECT NOTES COMPUT SC, V6538, P70, DOI 10.1007/978-3-642-18275-4_7
   Bradley Aaron R., 2012, Theory and Applications of Satisfiability Testing-SAT 2012-15th International Conference, Trento, Italy, June 17-20, P1, DOI 10.1007/978-3-642-31612-81
   Cimatti A, 2010, ACM T COMPUT LOG, V12, DOI 10.1145/1838552.1838559
   Craig W., 1957, J.Symb. Log, V22, P269, DOI DOI 10.2307/2963594
   D'Silva V, 2010, LECT NOTES COMPUT SC, V5944, P129, DOI 10.1007/978-3-642-11319-2_12
   DAVIS M, 1960, J ACM, V7, P201, DOI 10.1145/321033.321034
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   Detlefs D, 2005, J ACM, V52, P365, DOI 10.1145/1066100.1066102
   Dutertre B, 2006, LECT NOTES COMPUT SC, V4144, P81, DOI 10.1007/11817963_11
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Farkas G., 1894, FOURIER FELE MECHANI
   Gurfinkel Arie, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P255, DOI 10.1007/978-3-319-02444-8_19
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   Huberman BA, 1997, SCIENCE, V275, P51, DOI 10.1126/science.275.5296.51
   Hyvärinen AEJ, 2016, LECT NOTES COMPUT SC, V9710, P547, DOI 10.1007/978-3-319-40970-2_35
   Jancik P, 2014, 2014 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P123, DOI 10.1109/FMCAD.2014.6987604
   Januik P., 2016, FASE 2016
   Jovanovic D, 2016, PROCEEDINGS OF THE 2016 16TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2016), P85, DOI 10.1109/FMCAD.2016.7886665
   Komuravelli A, 2014, LECT NOTES COMPUT SC, V8559, P17
   Korovin K, 2009, LECT NOTES COMPUT SC, V5732, P509, DOI 10.1007/978-3-642-04244-7_41
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   McMillan KL, 2005, THEOR COMPUT SCI, V345, P101, DOI 10.1016/j.tcs.2005.07.003
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2725, P1
   Nieuwenhuis R, 2005, LECT NOTES COMPUT SC, V3467, P453
   Pudlak P, 1997, J SYMBOLIC LOGIC, V62, P981, DOI 10.2307/2275583
   Rollini Simone Fulvio, 2013, Logic for Programming, Artificial Intelligence and Reasoning. 19th International Conference, LPAR-19, Proceedings: LNCS 8312, P683, DOI 10.1007/978-3-642-45221-5_45
   Rollini Simone Fulvio, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P193, DOI 10.1007/978-3-642-31424-7_18
   Rybalchenko A, 2007, LECT NOTES COMPUT SC, V4349, P346
   Schindler T, 2018, LECT NOTES COMPUT SC, V10747, P495, DOI 10.1007/978-3-319-73721-8_23
   Schrijver A., 1998, THEORY LINEAR INTEGE
   Sery O, 2012, PROCEEDINGS OF THE 12TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2012), P114
   Sheeran M, 2000, LECT NOTES COMPUT SC, V1954, P108
NR 42
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2022
VL 24
IS 1
SI SI
BP 111
EP 125
DI 10.1007/s10009-021-00641-z
EA AUG 2021
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZT9UB
UT WOS:000681522900001
OA hybrid
DA 2024-07-18
ER

PT J
AU El-Hokayem, A
   Falcone, Y
AF El-Hokayem, Antoine
   Falcone, Ylies
TI Bringing runtime verification home: a case study on the hierarchical
   monitoring of smart homes using decentralized specifications
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Monitoring; Decentralized systems; Decentralized
   specifications; Smart home; Internet of things
ID LTL
AB We use runtime verification (RV) to check various specifications in a smart apartment. The specifications can be broken down into three types: behavioral correctness of the apartment sensors, detection of specific user activities (known as activities of daily living), and composition of specifications of the previous types. The context of the smart apartment provides us with a complex system with a large number of components with two different hierarchies to group specifications and sensors: geographically within the same room, floor or globally in the apartment, and logically following the different types of specifications. We leverage a recent approach to decentralized RV of decentralized specifications, where monitors have their own specifications and communicate together to verify more general specifications. We leverage the hierarchies, modularity and re-use afforded by decentralized specifications to: (1) scale beyond existing centralized RV techniques, and (2) greatly reduce computation and communication costs.
C1 [El-Hokayem, Antoine] Univ Grenoble Alpes, VERIMAG, Grenoble INP, CNRS, F-38000 Grenoble, France.
   [Falcone, Ylies] Univ Grenoble Alpes, INRIA, Grenoble INP, CNRS,LIG, F-38000 Grenoble, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); Communaute Universite Grenoble Alpes;
   Institut National Polytechnique de Grenoble; Universite Grenoble Alpes
   (UGA); Centre National de la Recherche Scientifique (CNRS); Inria
RP Falcone, Y (corresponding author), Univ Grenoble Alpes, INRIA, Grenoble INP, CNRS,LIG, F-38000 Grenoble, France.
EM antoine.el-hokayem@univ-grenoble-alpes.fr;
   ylies.falcone@univ-grenoble-alpes.fr
FU CPS4EU, a project funded from the H2020-ECSEL-2018-IA [826276]
FX This work is supported by CPS4EU, a project funded from the
   H2020-ECSEL-2018-IA call-Grant Agreement No.: 826276. The authors thank
   the Amiqual4Home (ANR-11-EQPX-0002) team for providing the collected
   data.
CR Aimal S, 2018, LECT NOTE DATA ENG, V8, P515, DOI 10.1007/978-3-319-65636-6_46
   Alemdar H, 2013, INT CONF PER COMP, P232, DOI 10.4108/icst.pervasivehealth.2013.252120
   [Anonymous], 2017, P 26 ACM SIGSOFT INT
   [Anonymous], 2015, HSCC 15, DOI [10.1145/2728606.2728633, DOI 10.1145/2728606.2728633]
   Bakhirkin A, 2017, LECT NOTES COMPUT SC, V10419, P189, DOI 10.1007/978-3-319-65765-3_11
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P1, DOI 10.1007/978-3-319-75632-5_1
   Bartocci E., 2017, INT J SOFTW TOOLS TE, P1
   Bartocci E, 2013, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.124.1
   Bartocci Ezio, 2018, Lecture Notes in Computer Science, V10457
   Basin D, 2016, FORM METHOD SYST DES, V49, P75, DOI 10.1007/s10703-016-0242-y
   Basin David A., 2015, LIPIcs, V45, P590, DOI [10.4230/LIPIcs.FSTTCS.2015.590, DOI 10.4230/LIPICS.FSTTCS.2015.590]
   Bauer A, 2007, LECT NOTES COMPUT SC, V4839, P126
   Bauer A, 2016, FORM METHOD SYST DES, V48, P46, DOI [10.1007/978-3-642-32759-9_10, 10.1007/s10703-016-0253-8]
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Bauer A, 2011, LECT NOTES COMPUT SC, V6617, P13, DOI 10.1007/978-3-642-20398-5_3
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   Bonakdarpour B, 2016, P 27 INT C CONC THEO, P16
   Bouchard B., ARTIFICIAL INTELLIGE, VWS 16 01
   Bozzelli L, 2016, THEOR COMPUT SCI, V631, P118, DOI 10.1016/j.tcs.2016.04.019
   Brdiczka O, 2009, IEEE T SYST MAN CY B, V39, P56, DOI 10.1109/TSMCB.2008.923526
   Chen BC, 2015, 2015 INTERNATIONAL CONFERENCE ON INTELLIGENT ENVIRONMENTS IE 2015, P124, DOI 10.1109/IE.2015.25
   Chen LM, 2012, IEEE T SYST MAN CY C, V42, P790, DOI 10.1109/TSMCC.2012.2198883
   Colombo C, 2016, FORM METHOD SYST DES, V49, P109, DOI 10.1007/s10703-016-0251-x
   Cotard S, 2012, IEEE I C EMBED SOFTW, P1508, DOI 10.1109/HPCC.2012.220
   Crowley JL, 2015, LECT NOTES COMPUT SC, V9425, P1, DOI 10.1007/978-3-319-26005-1_1
   Cumin J, 2017, LECT NOTES COMPUT SC, V10586, P413, DOI 10.1007/978-3-319-67585-5_43
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Decker Normann, 2018, 2018 Design, Automation & Test in Europe Conference & Exhibition (DATE). Proceedings, P851, DOI 10.23919/DATE.2018.8342124
   El-Hokayem A, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3355181
   El-Hokayem A, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P125, DOI 10.1145/3092703.3092723
   El-Hokayem A, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P372, DOI 10.1145/3092703.3098224
   El-Hokayem A, 2018, LECT NOTES COMPUT SC, V11237, P222, DOI 10.1007/978-3-030-03769-7_13
   Falcone, THEMIS SMART HOME AR
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Falcone Y, 2019, LECT NOTES COMPUT SC, V11757, P48, DOI 10.1007/978-3-030-32079-9_4
   Falcone Y, 2018, LECT NOTES COMPUT SC, V11237, P417, DOI 10.1007/978-3-030-03769-7_24
   Falcone Y, 2016, SCI COMPUT PROGRAM, V123, P2, DOI 10.1016/j.scico.2016.02.008
   Falcone Y, 2010, LECT NOTES COMPUT SC, V6418, P89, DOI 10.1007/978-3-642-16612-9_9
   Falcone Y, 2011, FORM METHOD SYST DES, V38, P223, DOI 10.1007/s10703-011-0114-4
   Gorostiaga F, 2018, LECT NOTES COMPUT SC, V11237, P282, DOI 10.1007/978-3-030-03769-7_16
   Havelund K, 2008, LECT NOTES COMPUT SC, V4171, P374
   KATZ S, 1983, J AM GERIATR SOC, V31, P721, DOI 10.1111/j.1532-5415.1983.tb03391.x
   Kazemlou S, 2018, SYM REL DIST SYST, P207, DOI 10.1109/SRDS.2018.00032
   Lago P, 2017, LECT NOTES ARTIF INT, V10257, P175, DOI 10.1007/978-3-319-57837-8_14
   Leucker M, 2016, LECT NOTES COMPUT SC, V9953, P380, DOI 10.1007/978-3-319-47169-3_29
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Majumder S, 2017, SENSORS-BASEL, V17, DOI 10.3390/s17112496
   Mateescu R, 2008, LECT NOTES COMPUT SC, V5014, P148, DOI 10.1007/978-3-540-68237-0_12
   Mostafa M, 2015, INT PARALL DISTRIB P, P494, DOI 10.1109/IPDPS.2015.95
   Ogale VA, 2007, LECT NOTES COMPUT SC, V4731, P420
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Rock, 2018, ABSARXIV180403237 CO
   Saha, BARTOCCI FALCONE, P103
   Shapiro M, 2011, LECT NOTES COMPUT SC, V6976, P386, DOI 10.1007/978-3-642-24550-3_29
   Szyperski C., 2002, Component Software-Beyond Object-Oriented Programming
   Tapia EM, 2004, LECT NOTES COMPUT SC, V3001, P158, DOI 10.1007/978-3-540-24646-6_10
   Thapliyal H, 2018, IEEE CONSUM ELECTR M, V7, P68, DOI 10.1109/MCE.2017.2755340
   van Kasteren TLM, 2010, LECT NOTES COMPUT SC, V6030, P283, DOI 10.1007/978-3-642-12654-3_17
NR 58
TC 1
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2022
VL 24
IS 2
BP 159
EP 181
DI 10.1007/s10009-021-00614-2
EA MAY 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0F1UH
UT WOS:000655817300002
DA 2024-07-18
ER

PT J
AU Reger, G
   Rydeheard, D
AF Reger, Giles
   Rydeheard, David
TI From parametric trace slicing to rule systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Runtime monitoring; Parametric trace slicing; Rule
   systems
AB Parametric runtime verification is the process of verifying properties of execution traces of (data carrying) events produced by a running system. This paper continues our work exploring the relationship between specification techniques for parametric runtime verification. Here we consider the correspondence between trace-slicing automata-based approaches and rule systems. The main contribution is a translation from quantified automata to rule systems, which has been implemented in Scala. This then allows us to highlight the key differences in how the two formalisms handle data, an important step in our wider effort to understand the correspondence between different specification languages for parametric runtime verification. This paper extends a previous conference version of this paper with further examples, a proof of correctness, and an optimisation based on a notion of redundancy observed during the development of the translation.
C1 [Reger, Giles; Rydeheard, David] Univ Manchester, Manchester, Lancs, England.
C3 University of Manchester
RP Reger, G (corresponding author), Univ Manchester, Manchester, Lancs, England.
EM giles.reger@manchester.ac.uk
CR Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   [Anonymous], 2012, LNCS, DOI DOI 10.1007/978-3-642-29860-8
   Avgustinov P, 2007, ACM SIGPLAN NOTICES, V42, P589, DOI 10.1145/1297105.1297070
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Barringer Howard, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P68, DOI 10.1007/978-3-642-32759-9_9
   Barringer Howard, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P57, DOI 10.1007/978-3-642-21437-0_7
   Barringer H, 2010, J LOGIC COMPUT, V20, P675, DOI 10.1093/logcom/exn076
   Barringer H, 2009, LECT NOTES COMPUT SC, V5779, P1, DOI 10.1007/978-3-642-04694-0_1
   Bartocci, 2017, INT J SOFTWARE TOOLS
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P1, DOI 10.1007/978-3-319-75632-5_1
   Bauer A., 2015, FORM METHOD SYST DES, P1
   Bozzelli L, 2016, THEOR COMPUT SCI, V631, P118, DOI 10.1016/j.tcs.2016.04.019
   Chen F, 2009, IEEE INT CONF AUTOM, P383, DOI 10.1109/ASE.2009.50
   Chen F, 2009, LECT NOTES COMPUT SC, V5505, P246, DOI 10.1007/978-3-642-00768-2_23
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Decker Normann., 2014, Tools and Algorithms for the Construction and Analysis of Systems, P341, DOI DOI 10.1007/978-3-642-54862-8
   Falcone Y., 2013, SUMMER SCH MARKTOBER
   Falcone Y., 2016, RV 2016
   Falcone Y, 2018, LECT NOTES COMPUT SC, V11237, P241, DOI 10.1007/978-3-030-03769-7_14
   Fischmeister S., 2014, PARALLELIZED RUNTIME
   Halle S, 2016, LECT NOTES COMPUT SC, V9482, P251, DOI 10.1007/978-3-319-30303-1_15
   Havelund K, 2015, INT J SOFTW TOOLS TE, V17, P143, DOI 10.1007/s10009-014-0309-2
   Havelund Klaus., 2015, Formal Modeling and Verification of Cyber-Physical Systems, P151, DOI DOI 10.1007/978-3-658-09994-7_6
   Jin D., 2012, THESIS U ILLINOIS UR
   Jin DY, 2011, ACM SIGPLAN NOTICES, V46, P415, DOI 10.1145/1993316.1993547
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   Reger, 2017, KIMFEST 2017
   Reger G., 2015, P 21 INT C TOOLS ALG
   Reger G, 2018, LECT NOTES COMPUT SC, V11237, P334, DOI 10.1007/978-3-030-03769-7_19
   Reger G, 2017, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.254.1
   Reger G, 2015, LECT NOTES COMPUT SC, V9333, P216, DOI 10.1007/978-3-319-23820-3_14
   Reger Giles, 2014, Ph. D. Dissertation
   Stolz V, 2006, ELECTRON NOTES THEOR, V144, P109, DOI 10.1016/j.entcs.2006.02.007
   Thoma, 2018, LNCS, V10457, P60
NR 35
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2021
VL 23
IS 2
SI SI
BP 209
EP 228
DI 10.1007/s10009-021-00608-0
EA FEB 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SU3HE
UT WOS:000622663400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Nickovic, D
   Lebeltel, O
   Maler, O
   Ferrère, T
   Ulus, D
AF Nickovic, Dejan
   Lebeltel, Olivier
   Maler, Oded
   Ferrere, Thomas
   Ulus, Dogan
TI AMT 2.0: qualitative and quantitative trace analysis with extended
   signal temporal logic
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime verification; Monitoring; Trace diagnostics; Property measuring;
   Temporal logic
AB We introduce in this paper AMT 2.0, a tool for qualitative and quantitative analysis of hybrid continuous and Boolean signals that combine numerical values and discrete events. The evaluation of the signals is based on rich temporal specifications expressed in extended signal temporal logic, which integrates timed regular expressions within signal temporal logic. The tool features qualitative monitoring (property satisfaction checking), trace diagnostics for explaining and justifying property violations and specification-driven measurement of quantitative features of the signal. We demonstrate the tool functionality on several running examples and case studies, and evaluate its performance.
C1 [Nickovic, Dejan] Austrian Inst Technol, Seibersdorf, Austria.
   [Lebeltel, Olivier; Maler, Oded] Univ Grenoble Alpes, Verimag, CNRS, Grenoble, France.
   [Ferrere, Thomas] IST Austria, Klosterneuburg, Austria.
   [Ulus, Dogan] Boston Univ, Boston, MA 02215 USA.
C3 Austrian Institute of Technology (AIT); Communaute Universite Grenoble
   Alpes; Institut National Polytechnique de Grenoble; Universite Grenoble
   Alpes (UGA); Centre National de la Recherche Scientifique (CNRS);
   Institute of Science & Technology - Austria; Boston University
RP Nickovic, D (corresponding author), Austrian Inst Technol, Seibersdorf, Austria.
EM dejan.nickovic@ait.ac.at
RI Ulus, Dogan/ABF-9201-2020
OI Ulus, Dogan/0000-0002-5090-1769; Nickovic, Dejan/0000-0001-5468-0396
CR Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   Asarin E, 1997, IEEE S LOG, P160, DOI 10.1109/LICS.1997.614944
   Asarin E, 2002, J ACM, V49, P172, DOI 10.1145/506147.506151
   Asarin Eugene, 2012, P 2 INT C RUNTIME VE, P147, DOI [DOI 10.1007/978-3-642-29860-8_12, DOI 10.1007/978-3-642-29860-812]
   Bartocci E., 2018, HDB RUNTIME VERIFICA
   Bartocci E, 2018, HSCC 2018: PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (PART OF CPS WEEK), P197, DOI 10.1145/3178126.3178131
   Basin D, 2017, LECT NOTES COMPUT SC, V10548, P85, DOI 10.1007/978-3-319-67531-2_6
   Calzone L, 2006, BIOINFORMATICS, V22, P1805, DOI 10.1093/bioinformatics/btl172
   Deshmukh JV, 2015, LECT NOTES COMPUT SC, V9333, P55, DOI 10.1007/978-3-319-23820-3_4
   Distributed System Interface, DSI3 BUS STAND
   Donzé A, 2010, LECT NOTES COMPUT SC, V6246, P92, DOI 10.1007/978-3-642-15297-9_9
   Donzé A, 2010, LECT NOTES COMPUT SC, V6174, P167, DOI 10.1007/978-3-642-14295-6_17
   Eisner C, 2006, INTEGR CIRCUIT SYST, P1
   Ferrère T, 2015, LECT NOTES COMPUT SC, V9207, P322, DOI 10.1007/978-3-319-21668-3_19
   Ferrère T, 2015, LECT NOTES COMPUT SC, V9364, P241, DOI 10.1007/978-3-319-24953-7_20
   Ghidella Jason, 2005, AIAA MOD SIM TECHN C, P5886, DOI DOI 10.2514/6.2005-5886
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Maler Oded, 2013, International Journal on Software Tools for Technology Transfer, V15, P247, DOI 10.1007/s10009-012-0247-9
   Nguyen T, 2016, SCI COMPUT PROGRAM, V118, P40, DOI 10.1016/j.scico.2015.11.002
   Nickovic D, 2007, LECT NOTES COMPUT SC, V4763, P304
   Nickovic D, 2018, LECT NOTES COMPUT SC, V10806, P303, DOI 10.1007/978-3-319-89963-3_18
   Ulus Dogan, 2014, Formal Modeling and Analysis of Timed Systems. 12th International Conference, FORMATS 2014. Proceedings. LNCS: 8711, P222, DOI 10.1007/978-3-319-10512-3_16
   Ulus D, 2017, LECT NOTES COMPUT SC, V10426, P329, DOI 10.1007/978-3-319-63387-9_16
   Vijayaraghavan S., 2006, PRACTICAL GUIDE SYST
NR 26
TC 6
Z9 6
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2020
VL 22
IS 6
SI SI
BP 741
EP 758
DI 10.1007/s10009-020-00582-z
EA AUG 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OQ9JV
UT WOS:000555398600001
DA 2024-07-18
ER

PT J
AU Ganjei, Z
   Rezine, A
   Eles, P
   Peng, ZB
AF Ganjei, Zeinab
   Rezine, Ahmed
   Eles, Petru
   Peng, Zebo
TI Counting dynamically synchronizing processes
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Parameterized verification; Counting predicate; Barrier synchronization;
   Deadlock freedom; Multithreaded programs; Counter abstraction; Predicate
   abstraction; Constrained monotonic abstraction
ID MODEL CHECKING; SYSTEMS
AB We address the problem of automatically establishing correctness for programs generating an arbitrary number of concurrent processes and manipulating variables ranging over an infinite domain. The programs we consider can make use of the shared variables to count and synchronize the spawned processes. This allows them to implement intricate synchronization mechanisms, such as barriers. Automatically verifying correctness, and deadlock freedom, of such programs is beyond the capabilities of current techniques. For this purpose, we make use of counting predicates that mix counters referring to the number of processes satisfying certain properties and variables directly manipulated by the concurrent processes. We then combine existing works on counter, predicate, and constrained monotonic abstraction and build a nested counter example based refinement scheme for establishing correctness (expressed as non-reachability of configurations satisfying counting predicates formulas). We have implemented a tool (Pacman, for predicated constrained monotonic abstraction) and used it to perform parameterized verification on several programs whose correctness crucially depends on precisely capturing the number of processes synchronizing using shared variables.
C1 [Ganjei, Zeinab; Rezine, Ahmed; Eles, Petru; Peng, Zebo] Linkoping Univ, Linkoping, Sweden.
C3 Linkoping University
RP Rezine, A (corresponding author), Linkoping Univ, Linkoping, Sweden.
EM ahmed.rezine@liu.se
FU 12.04 CENIIT project
FX Ahmed Rezine is in part supported by the 12.04 CENIIT project.
CR Abdulla P. A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P146
   Abdulla PA, 1996, IEEE S LOG, P313, DOI 10.1109/LICS.1996.561359
   Abdulla PA, 2000, INFORM COMPUT, V160, P109, DOI 10.1006/inco.1999.2843
   Abdulla PA, 2007, LECT NOTES COMPUT SC, V4424, P721
   Abdulla PA, 2014, LECT NOTES COMPUT SC, V8723, P1, DOI 10.1007/978-3-319-10936-7_1
   Abdulla PA, 2013, LECT NOTES COMPUT SC, V7737, P476
   Abdulla PA, 2010, LECT NOTES COMPUT SC, V6269, P86, DOI 10.1007/978-3-642-15375-4_7
   Bansal K, 2013, LECT NOTES COMPUT SC, V7795, P62, DOI 10.1007/978-3-642-36742-7_5
   Basler G, 2010, LECT NOTES COMPUT SC, V6015, P145, DOI 10.1007/978-3-642-12002-2_11
   Dickson LE, 1913, AM J MATH, V35, P413, DOI 10.2307/2370405
   Donaldson Alastair, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P356, DOI 10.1007/978-3-642-22110-1_28
   Esparza J, 2014, LECT NOTES COMPUT SC, V8559, P603, DOI 10.1007/978-3-319-08867-9_40
   Farzan A, 2014, ACM SIGPLAN NOTICES, V49, P151, DOI 10.1145/2535838.2535885
   Finkel A, 2001, THEOR COMPUT SCI, V256, P63, DOI 10.1016/S0304-3975(00)00102-X
   Ganjei Zeinab, 2014, Verification, Model Checking and Abstract Interpretation. 16th International Conference, VMCAI 2015. Proceedings: LNCS 8931, P227, DOI 10.1007/978-3-662-46081-8_13
   Henzinger TA, 2003, LECT NOTES COMPUT SC, V2725, P262
   Kaiser Alexander, 2014, CONCUR 2014 - Concurrency Theory. 25th International Conference, CONCUR 2014. Proceedings: LNCS 8704, P141, DOI 10.1007/978-3-662-44584-6_11
   Kaiser A., 2010, LNCS, V6174, P654
   Zuck L, 2004, COMPUT LANG SYST STR, V30, P139, DOI 10.1016/j.cl.2004.02.006
NR 19
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2016
VL 18
IS 5
BP 517
EP 534
DI 10.1007/s10009-015-0411-0
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU1ZY
UT WOS:000382011100004
DA 2024-07-18
ER

PT J
AU Bogomolov, S
   Donzé, A
   Frehse, G
   Grosu, R
   Johnson, TT
   Ladan, H
   Podelski, A
   Wehrle, M
AF Bogomolov, Sergiy
   Donze, Alexandre
   Frehse, Goran
   Grosu, Radu
   Johnson, Taylor T.
   Ladan, Hamed
   Podelski, Andreas
   Wehrle, Martin
TI Guided search for hybrid systems based on coarse-grained space
   abstractions
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 20th International SPIN Symposium on Model Checking of Software
CY JUL 08-09, 2013
CL Stony Brook, NY
SP SPIN
DE Hybrid system; Reachability analysis; Guided search; Heuristics; Pattern
   databases
AB Hybrid systems represent an important and powerful formalism for modeling real-world applications such as embedded systems. A verification tool like SpaceEx is based on the exploration of a symbolic search space (the region space). As a verification tool, it is typically optimized towards proving the absence of errors. In some settings, e.g., when the verification tool is employed in a feedback-directed design cycle, one would like to have the option to call a version that is optimized towards finding an error trajectory in the region space. A recent approach in this direction is based on guided search. Guided search relies on a cost function that indicates which states are promising to be explored, and preferably explores more promising states first. In this paper, we propose an abstraction-based cost function based on coarse-grained space abstractions for guiding the reachability analysis. For this purpose, a suitable abstraction technique that exploits the flexible granularity of modern reachability analysis algorithms is introduced. The new cost function is an effective extension of pattern database approaches that have been successfully applied in other areas. The approach has been implemented in the SpaceEx model checker. The evaluation shows its practical potential.
C1 [Bogomolov, Sergiy] IST Austria, Klosterneuburg, Austria.
   [Bogomolov, Sergiy; Ladan, Hamed; Podelski, Andreas] Univ Freiburg, Freiburg, Germany.
   [Donze, Alexandre] Univ Calif Berkeley, Berkeley, CA 94720 USA.
   [Frehse, Goran] Joseph Fourier Grenoble 1 Verimag, Grenoble, France.
   [Grosu, Radu] Vienna Univ Technol, Vienna, Austria.
   [Johnson, Taylor T.] Univ Texas Arlington, Arlington, TX 76019 USA.
   [Wehrle, Martin] Univ Basel, Basel, Switzerland.
C3 Institute of Science & Technology - Austria; University of Freiburg;
   University of California System; University of California Berkeley;
   Communaute Universite Grenoble Alpes; Universite Grenoble Alpes (UGA);
   Technische Universitat Wien; University of Texas System; University of
   Texas Arlington; University of Basel
RP Bogomolov, S (corresponding author), IST Austria, Klosterneuburg, Austria.; Bogomolov, S (corresponding author), Univ Freiburg, Freiburg, Germany.
EM sergiy.bogomolov@ist.ac.at; donze@eecs.berkeley.edu;
   goran.frehse@imag.fr; radu.grosu@tuwien.ac.at; taylor.johnson@gmail.com;
   ladanh@informatik.uni-freiburg.de; podelski@informatik.uni-freiburg.de;
   martin.wehrle@unibas.ch
RI Johnson, Taylor T/E-8862-2015; Bogomolov, Sergiy/AAR-8878-2020; johnson,
   taylor/GRX-4598-2022
OI Johnson, Taylor T/0000-0001-8021-9923; Bogomolov,
   Sergiy/0000-0002-0686-0365; Donze, Alexandre/0000-0002-1138-5458;
   Frehse, Goran/0000-0002-5441-0481
CR Alur R, 2003, LECT NOTES COMPUT SC, V2623, P4
   Alur R, 2002, LECT NOTES COMPUT SC, V2289, P35
   Alur R, 1997, LECT NOTES COMPUT SC, V1243, P74
   ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   Alur R, 2000, LECT NOTES COMPUT SC, V1790, P6
   Alur R., 2003, TOOLS ALGORITHMS CON, P250
   Anderson K, 2007, LECT NOTES ARTIF INT, V4612, P20
   Asarin E, 2007, ACTA INFORM, V43, P451, DOI 10.1007/s00236-006-0035-7
   Balluchi A, 2000, P IEEE, V88, P888, DOI 10.1109/5.871300
   Bertsekas D. P., 2003, CONVEX ANAL OPTIMIZA
   Bhatia A, 2004, LECT NOTES COMPUT SC, V2993, P142
   Bogomolov Sergiy, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P117, DOI 10.1007/978-3-642-39176-7_8
   Bogomolov Sergiy, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P479, DOI 10.1007/978-3-642-31424-7_35
   Bogomolov S., 2014, HAIF VER C IN PRESS
   Bournez O, 1999, LECT NOTES COMPUT SC, V1569, P46
   Chutinan A, 2003, IEEE T AUTOMAT CONTR, V48, P64, DOI 10.1109/TAC.2002.806655
   Culberson JC, 1998, COMPUT INTELL, V14, P318, DOI 10.1111/0824-7935.00065
   Dang T, 2009, FORM METHOD SYST DES, V34, P183, DOI 10.1007/s10703-009-0066-0
   Deshpande A., 1996, Hybrid Systems III. Verification and Control, P138, DOI 10.1007/BFb0020941
   Egerstedt M, 2000, LECT NOTES COMPUT SC, V1790, P103
   Fehnker A., 2004, HYBRID SYSTEMS COMPU, P381
   Frehse G, 2005, LECT NOTES COMPUT SC, V3414, P258
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Holte RC, 2005, LECT NOTES ARTIF INT, V3607, P121
   Jha SK, 2007, LECT NOTES COMPUT SC, V4416, P287
   Johansson KH, 1999, SYST CONTROL LETT, V38, P141, DOI 10.1016/S0167-6911(99)00059-6
   Johnson Taylor T., 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P252, DOI 10.1007/978-3-642-32759-9_22
   KHALIL H., 2014, Nonlinear Systems, V3rd
   Kupferschmid S, 2008, LECT NOTES COMPUT SC, V4963, P203, DOI 10.1007/978-3-540-78800-3_15
   Kupferschmid S, 2011, LECT NOTES COMPUT SC, V6605, P276, DOI 10.1007/978-3-642-19835-9_26
   Kurzhanski A. B., 2000, HYBR SYST COMP CONTR, P202
   Larsen B. J., 2010, AAAI C ART INT
   Le Guernic C, 2010, NONLINEAR ANAL-HYBRI, V4, P250, DOI 10.1016/j.nahs.2009.03.002
   Livadas C., 1999, P IEEE REAL TIME SYS, P115
   Lygeros J, 1998, LECT NOTES COMPUT SC, V1386, P289
   Plaku E, 2007, LECT NOTES COMPUT SC, V4590, P463
   Qian KR, 2004, LECT NOTES COMPUT SC, V2988, P497
   Ratschan S, 2009, LECT NOTES COMPUT SC, V5668, P153
   Tiwari A, 2002, LECT NOTES COMPUT SC, V2289, P465
   Tiwari A, 2008, FORM METHOD SYST DES, V32, P57, DOI 10.1007/s10703-007-0044-3
   VARAIYA P, 1993, IEEE T AUTOMAT CONTR, V38, P195, DOI 10.1109/9.250509
   Wehrle M, 2016, INT J SOFTW TOOLS TE, V18, P41, DOI 10.1007/s10009-014-0346-x
   Zutshi A, 2013, IEEE DECIS CONTR P, P3918, DOI 10.1109/CDC.2013.6760488
NR 43
TC 10
Z9 11
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2016
VL 18
IS 4
BP 449
EP 467
DI 10.1007/s10009-015-0393-y
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DR2AV
UT WOS:000379708300007
PM 27445640
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Inoue, T
   Iwashita, H
   Kawahara, J
   Minato, S
AF Inoue, Takeru
   Iwashita, Hiroaki
   Kawahara, Jun
   Minato, Shin-ichi
TI Graphillion: software library for very large sets of labeled graphs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Graph; Set; Software library; Family algebra; Frontier-based search;
   Binary decision diagram
AB Several graph libraries have been developed in the past few decades, and they were basically designed to work with a few graphs. However, there are many problems in which we have to consider all subgraphs satisfying certain constraints on a given graph. Since the number of subgraphs can increase exponentially with the graph size, explicitly representing these sets is infeasible. Hence, libraries concerned with efficiently representing a single graph instance are not suitable for such problems. In this paper, we develop Graphillion, a software library for very large sets of (vertex-)labeled graphs, based on zero-suppressed binary decision diagrams. Graphillion is not based on a traditional representation of graphs. Instead, a graph set is simply regarded as a "set of edge sets" ignoring vertices, which allows us to employ powerful tools of a "family of sets" (a set of sets) and permits large graph sets to be handled efficiently. We also utilize advanced graph enumeration algorithms, which enable the simple family tools to understand the graph structure. Graphillion is implemented as a Python library to encourage easy development of its applications, without introducing significant performance overheads. In experiments, we consider two case studies, a puzzle solver and a power network optimizer, in which several operations and heavy optimization have to be performed over very large sets of constrained graphs (i.e., cycles or forests with complicated conditions). The results show that Graphillion allows us to manage a huge number of graphs with very low development effort.
C1 [Inoue, Takeru; Iwashita, Hiroaki; Minato, Shin-ichi] Japan Sci & Technol Agcy, ERATO Minato Discrete Struct Manipulat Syst Proje, Sapporo, Hokkaido 0600814, Japan.
   [Kawahara, Jun] Nara Inst Sci & Technol, Grad Sch Informat Sci, Nara 6300192, Japan.
   [Iwashita, Hiroaki; Minato, Shin-ichi] Hokkaido Univ, Grad Sch Informat Sci & Technol, Sapporo, Hokkaido 0600814, Japan.
C3 Japan Science & Technology Agency (JST); Nara Institute of Science &
   Technology; Hokkaido University
RP Inoue, T (corresponding author), Japan Sci & Technol Agcy, ERATO Minato Discrete Struct Manipulat Syst Proje, Sapporo, Hokkaido 0600814, Japan.
EM takeru.inoue@ieee.org
CR Angles R, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1322432.1322433
   [Anonymous], 2008, P 7 PYTHON SCI C
   [Anonymous], 1992, NIKOLI SLITHERLINK, V1
   Inoue T, 2014, IEEE T SMART GRID, V5, P102, DOI 10.1109/TSG.2013.2288976
   Iwashita H., 2013, TCS TECHNICAL REPORT
   Kawahara J., 2014, TCS TECHNICAL REPORT
   Knuth D.E., 2011, 7 1 4 BINARY DECIS A, V4A
   Lavaei J., 2011, P 18 IFAC WORLD C
   Minato Erato, 2013, Experimental Algorithms 12th International Symposium, SEA 2013. Proceedings, P91, DOI 10.1007/978-3-642-38527-8_10
   MINATO S, 1993, ACM IEEE D, P272
   Minato S., 2013, IEICE T INF SYST D, V96-D
   Minato SI, 2006, LECT NOTES COMPUT SC, V3847, P40
   Oliphant TE, 2007, COMPUT SCI ENG, V9, P10, DOI 10.1109/MCSE.2007.58
   Sekine K., 1995, Algorithms and Computations. 6th International Symposium, ISAAC '95. Proceedings, P224, DOI 10.1007/BFb0015427
   Siek J., 2001, The Boost Graph Library: User Guide and Reference Manual
   SIELING D, 1993, INFORM PROCESS LETT, V48, P139, DOI 10.1016/0020-0190(93)90256-9
   van der Walt S, 2011, COMPUT SCI ENG, V13, P22, DOI 10.1109/MCSE.2011.37
   Yoshinaka R, 2012, ALGORITHMS, V5, P176, DOI 10.3390/a5020176
   Yoshinaka R, 2012, INFORM PROCESS LETT, V112, P636, DOI 10.1016/j.ipl.2012.05.007
NR 19
TC 21
Z9 21
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2016
VL 18
IS 1
BP 57
EP 66
DI 10.1007/s10009-014-0352-z
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB7SL
UT WOS:000368716200004
OA hybrid
DA 2024-07-18
ER

PT J
AU Bruns, D
   Mostowski, W
   Ulbrich, M
AF Bruns, Daniel
   Mostowski, Wojciech
   Ulbrich, Mattias
TI Implementation-level verification of algorithms with KeY
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal verification; Benchmark; Java Modeling Language; Theorem prover
AB We give an account on the authors' experience and results from the software verification competition held at the Formal Methods 2012 conference. Competitions like this are meant to provide a benchmark for verification systems. It consisted of three algorithms which the authors have implemented in Java, specified with the Java Modeling Language, and verified using the KeY system. Building on our solutions, we argue that verification systems which target implementations in real-world programming languages better have powerful abstraction capabilities. Regarding the KeY tool, we explain features which, driven by the competition, have been freshly implemented to accommodate for these demands.
C1 [Bruns, Daniel; Ulbrich, Mattias] Karlsruhe Inst Technol, D-76127 Karlsruhe, Germany.
   [Mostowski, Wojciech] Univ Twente, NL-7500 AE Enschede, Netherlands.
C3 Helmholtz Association; Karlsruhe Institute of Technology; University of
   Twente
RP Mostowski, W (corresponding author), Univ Twente, POB 217, NL-7500 AE Enschede, Netherlands.
EM bruns@kit.edu; w.mostowski@utwente.nl; ulbrich@kit.edu
OI Grahl, Daniel/0000-0002-3402-5615; Ulbrich, Mattias/0000-0002-2350-1831
CR [Anonymous], 1984, Handbook of philosophical logic
   Barnett M, 2005, LECT NOTES COMPUT SC, V3362, P49
   Beckert B., 2012, CEUR WORKSHOP P, V873
   Beckert Bernhard., 2007, LNCS, V4334
   Blelloch G. E., 1990, CMUCS90190
   Bormer T., 2011, INT C FORMAL VERIFIC, P3, DOI 10.1007/978-3-642-31762-0_2
   Burdy L., 2003, Electronic Notes in Theoretical Computer Science, V80
   Cheon Y, 2005, SOFTWARE PRACT EXPER, V35, P583, DOI 10.1002/spe.649
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   Filliatre J.-C., 2007, LNCS, V4590
   Filliatre J.- C., 2012, CEUR WORKSHOP P, V873
   Jacobs B, 2011, LECT NOTES COMPUT SC, V6617, P41, DOI 10.1007/978-3-642-20398-5_4
   Kassios IT, 2011, FORM ASP COMPUT, V23, P267, DOI 10.1007/s00165-010-0152-5
   Kassios IT, 2012, LECT NOTES COMPUT SC, V7152, P196, DOI 10.1007/978-3-642-27705-4_16
   Klebanov V., 2011, LNCS, V6664, P154, DOI [10.1007/978-3-642-21437-0_14, DOI 10.1007/978-3-642-21437-0_14]
   Leavens Gary T, 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI [10.1145/1127878.1127884, DOI 10.1145/1127878.1127884]
   Mostowski W., 2007, 4 INT VER WORKSH CEU, V259
   Mostowski W, 2006, LECT NOTES COMPUT SC, V4085, P444
   Parkinson M, 2005, ACM SIGPLAN NOTICES, V40, P247, DOI 10.1145/1047659.1040326
   Scheben Christoph, 2012, Formal Verification of Object-Oriented Software. International Conference, FoVeOOS 2011. Revised Selected Papers, P232, DOI 10.1007/978-3-642-31762-0_15
   Schmitt PH, 2007, SEFM 2007: FIFTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P47, DOI 10.1109/SEFM.2007.30
   SCHULTE W, 2007, C C VER WORKSH
   Sedgewick R., 2011, Algorithm
   Stenzel K, 2004, LECT NOTES COMPUT SC, V3116, P491
   Weiss B., 2011, deductive verification of object-oriented software: dynamic frames, dynamic logic and predicate abstraction
NR 25
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2015
VL 17
IS 6
BP 729
EP 744
DI 10.1007/s10009-013-0293-y
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT3DN
UT WOS:000362687300006
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU David, A
   Larsen, KG
   Legay, A
   Mikucionis, M
AF David, Alexandre
   Larsen, Kim G.
   Legay, Axel
   Mikucionis, Marius
TI Schedulability of Herschel revisited using statistical model checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Statistical model checking; Symbolic model checking; Performance
   analysis; Scheduling
AB Schedulability analysis is a main concern for several embedded applications due to their safety-critical nature. The classical method of response time analysis provides an efficient technique used in industrial practice. However, the method is based on conservative assumptions related to execution and blocking times of tasks. Consequently, the method may falsely declare deadline violations that will never occur during execution. This paper is a continuation of previous work of the authors in applying extended timed automata model checking (using the tool UPPAAL) to obtain more exact schedulability analysis, here in the presence of non-deterministic computation times of tasks given by intervals [BCET, WCET]. Computation intervals with preemptive schedulers make the schedulability analysis of the resulting task model undecidable. Our contribution is to propose a combination of model checking techniques to obtain some guarantee on the (un)schedulability of the model even in the presence of undecidability. Two methods are considered: symbolic model checking and statistical model checking. Since the model uses stop-watches, the reachability problem becomes undecidable so we are using an over-approximation technique. We can safely conclude that the system is schedulable for varying values of BCET. For the cases where deadlines are violated, we use polyhedra to try to confirm the witnesses. Our alternative method to confirm non-schedulability uses statistical model-checking (SMC) to generate counter-examples that are always realizable. Another use of the SMC technique is to do performance analysis on schedulable configurations to obtain, e.g., expected response times. The methods are demonstrated on a complex satellite software system yielding new insights useful for the company.
C1 [David, Alexandre; Larsen, Kim G.; Legay, Axel; Mikucionis, Marius] Aalborg Univ, Comp Sci, Aalborg, Denmark.
   [Legay, Axel] INRIA IRISA, Rennes, France.
C3 Aalborg University; Universite de Rennes
RP Legay, A (corresponding author), Aalborg Univ, Comp Sci, Aalborg, Denmark.
EM axel.legay@inria.fr
RI Mikucionis, Marius/AAF-7969-2020
OI Guldstrand Larsen, Kim/0000-0002-5953-3384; Mikucionis,
   Marius/0000-0001-8157-5428
CR [Anonymous], 2000, Proceedings of the 11th International Conference on Concurrency Theory, CONCUR 00
   Ben-Abdallah H, 1998, REAL-TIME SYST, V15, P189, DOI 10.1023/A:1008047130023
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Bohnenkamp HC, 2004, INT CONF QUANT EVAL, P28
   Bradley S., 1999, Proceedings of the 24th Workshop on Real-Time Programming (WRTP), P143
   Brekling Aske, 2009, 2009 21st International Conference on Microelectronics (ICM 2009), P149, DOI 10.1109/ICM.2009.5418667
   Bulychev Peter, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P449, DOI 10.1007/978-3-642-28891-3_39
   Burns Alan., 1994, Advances in Real-Time Systems, P225
   Christensen S., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P450
   David Alexandre, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P293, DOI 10.1007/978-3-642-34032-1_28
   David A., 2011, CAV
   David A, 2011, LECT NOTES COMPUT SC, V6919, P80, DOI 10.1007/978-3-642-24310-3_7
   El Rabih D, 2009, LECT NOTES COMPUT SC, V5799, P120, DOI 10.1007/978-3-642-04761-9_11
   Fersman E, 2007, INFORM COMPUT, V205, P1149, DOI 10.1016/j.ic.2007.01.009
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   Jeannet B, 2009, LECT NOTES COMPUT SC, V5643, P661, DOI 10.1007/978-3-642-02658-4_52
   JOSEPH M, 1986, COMPUT J, V29, P390, DOI 10.1093/comjnl/29.5.390
   Katoen JP, 2009, INT CONF QUANT EVAL, P167, DOI 10.1109/QEST.2009.11
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Mikucionis M., 2010, LECT NOTES COMPUTER
   Sen K, 2004, LECT NOTES COMPUT SC, V3114, P202
   Sokolsky O., 2006, Proceedings. 20th International Parallel and Distributed Processing Symposium (IEEE Cat. No.06TH8860)
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
   Younes HLS, 2006, INFORM COMPUT, V204, P1368, DOI 10.1016/j.ic.2006.05.002
   [No title captured]
NR 25
TC 9
Z9 9
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2015
VL 17
IS 2
BP 187
EP 199
DI 10.1007/s10009-014-0331-4
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7NI
UT WOS:000355682200005
DA 2024-07-18
ER

PT J
AU Quer, S
AF Quer, Stefano
TI Model checking evaluation of airplane landing trajectories
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model checking; Aircraft landing trajectories; k-king problem;
   Divide-and-conquer; IC3 or property directed reachability;
   Multi-threaded verification
ID AIRCRAFT; VERIFICATION
AB Computing trajectories of a set of airplanes in their final descent is an important problem in air traffic control. It consists of deciding a trajectory, the runway, and the landing time for each airplane, such that several constraints are satisfied, while optimizing flying (fuel) costs, and minimizing waiting times. To solve this problem, we model it as a discrete game, the k-king puzzle, in which each airplane is represented (and it moves) as a king chess-piece on a chessboard. Although the model has already been introduced in the past, we propose several extensions, taking into account different aspects of the real problem, such as constrained airspaces, distinct airplane speeds, various separation distance among airplanes, and specific restrictions in the landing trajectories. Moreover, we model both static and dynamic cases for 2D and 3D airspaces. On these extensions, we describe an exact resolutionmethod based on ideas and algorithms coming from the formal verification of correctness of hardware devices and software tools area. Furthermore, to improve the size and complexity of the models we are able to deal with, we propose a decomposition technique based on the divide-and-conquer paradigm. This solution, which we call Plane by Plane decomposition, trades-off between accuracy and efficiency, i.e., exact solutions degrade to non-optimal ones to maintain scalability. We finally propose an implementation of this algorithm based on (and taking advantages of) modern multi-core, multi-threaded, systems. We present a detailed description of the model and the algorithms, as well as our computational results for quite large static and dynamic 2D and 3D problems.
C1 [Quer, Stefano] Politecn Torino, Dipartimento Automat & Informat, Turin, Italy.
C3 Polytechnic University of Turin
RP Quer, S (corresponding author), Politecn Torino, Dipartimento Automat & Informat, Turin, Italy.
EM stefano.quer@polito.it
OI QUER, Stefano/0000-0001-6835-8277
CR [Anonymous], 1994, Synthesis and optimization of digital circuits
   Artiouchine K, 2008, INFORMS J COMPUT, V20, P222, DOI 10.1287/ijoc.1070.0234
   Artiouchine K, 2008, EUR J OPER RES, V189, P1254, DOI 10.1016/j.ejor.2006.06.076
   Balch T, 1998, IEEE T ROBOTIC AUTOM, V14, P926, DOI 10.1109/70.736776
   Bayen A. M., 2003, AM CONTR C
   Beard RW, 2001, IEEE T CONTR SYST T, V9, P777, DOI 10.1109/87.960341
   Beasley JE, 2000, TRANSPORT SCI, V34, P180, DOI 10.1287/trsc.34.2.180.12302
   Beasley JE, 2004, J OPER RES SOC, V55, P54, DOI 10.1057/palgrave.jors.2601650
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Biere A., 1999, Proceedings 1999 Design Automation Conference (Cat. No. 99CH36361), P317, DOI 10.1109/DAC.1999.781333
   Bradley A., 2010, IC3 SAT BASED MODEL
   Brayton R, 2010, LECT NOTES COMPUT SC, V6174, P24, DOI 10.1007/978-3-642-14295-6_5
   BURCH JR, 1994, IEEE T COMPUT AID D, V13, P401, DOI 10.1109/43.275352
   Cabodi G., FORMAL METHOD GROUPS
   Chiesa S, 2009, P I MECH ENG G-J AER, V223, P989, DOI 10.1243/09544100JAERO463
   Cho H, 1996, IEEE T COMPUT AID D, V15, P1465, DOI 10.1109/43.552080
   Ciesielski V, 1998, IEEE C EVOL COMPUTAT, P360, DOI 10.1109/ICEC.1998.699759
   Ciesielski V., 1997, Aust. J. Intell. Inf. Process. Syst., P206
   Cimatti A., 1998, Proceedings of the International Workshop on Software Tools for Technology Transfer. STTT'98, P25
   CIMATTI A, 1999, LECT NOTES COMPUTER, V1633, P495, DOI DOI 10.1007/3-540-48683-6_44
   Copty F., 2001, P COMP AID VER PAR F, V2102, P435
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Ganai M. K., 1999, Proceedings 1999 Design Automation Conference (Cat. No. 99CH36361), P385, DOI 10.1109/DAC.1999.781346
   Guyot B., 2002, U.S. Patent, Patent No. 649676
   McMillan K.L., 1992, THESIS BOSTON
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2725, P1
   Milan J, 1997, TRANSPORT PLAN TECHN, V20, P131, DOI 10.1080/03081069708717585
   Mishchenko Alan, 2005, Abc: A system for sequential synthesis and verification
   Mullins J, 1996, NEW SCI, V152, P28
   Platzer A, 2008, LECT NOTES COMPUT SC, V5123, P176
   Platzer A, 2009, LECT NOTES COMPUT SC, V5850, P547, DOI 10.1007/978-3-642-05089-3_35
   Scharf D. P., 2004, SURVEY SPACECRAFT FO
   Somenzi F., 2005, CUDD CUDECISION DIAG
   Walsh T., 2000, Principles and Practice of Constraint Programming - CP 2000. 6th International Conference, CP 2000. Proceedings (Lecture Notes in Computer Science Vol.1894), P441
   Wong G.L., 2000, TECHNICAL REPORT
   Yang C. H., 1998, P 35 DES AUT C SAN F
NR 36
TC 1
Z9 1
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2014
VL 16
IS 6
BP 753
EP 773
DI 10.1007/s10009-013-0273-2
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HV
UT WOS:000209673400007
DA 2024-07-18
ER

PT J
AU Carrozza, G
   Pietrantuono, R
   Russo, S
AF Carrozza, Gabriella
   Pietrantuono, Roberto
   Russo, Stefano
TI Dynamic test planning: a study in an industrial context
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Test planning; Reliability growth model; Resource allocation; Risk-based
   testing; Mission-critical systems
ID RELIABILITY GROWTH-MODELS; SOFTWARE-RELIABILITY; METRICS; ALLOCATION
AB Testing accounts for a relevant part of the production cost of complex or critical software systems. Nevertheless, time and resources budgeted to testing are often underestimated with respect to the target quality goals. Test managers need engineering methods to perform appropriate choices in spending testing resources, so as to maximize the outcome. We present a method to dynamically allocate testing resources to software components minimizing the estimated number of residual defects and/or the estimated residual defect density. We discuss the application to a real-world critical system in the homeland security domain. We describe a support tool aimed at easing industrial technology transfer by hiding to practitioners the mathematical details of the method application.
C1 [Carrozza, Gabriella] SESM Scarl, Via Circumvallaz Esterna Napoli, I-80014 Naples, Italy.
   [Pietrantuono, Roberto; Russo, Stefano] Univ Naples Federico II, DIETI, Via Claudio 21, I-80125 Naples, Italy.
   [Russo, Stefano] Complesso Univ Monte S Angelo, Critiware Spin Off, Incubatore Incipit, Via Cinthia, I-80126 Naples, Italy.
C3 University of Naples Federico II
RP Carrozza, G (corresponding author), SESM Scarl, Via Circumvallaz Esterna Napoli, I-80014 Naples, Italy.
EM gcarrozza@sesm.it; roberto.pietrantuono@unina.it; stefano.russo@unina.it
RI Russo, Stefano/H-7723-2013
OI Russo, Stefano/0000-0002-8747-3446; Pietrantuono,
   Roberto/0000-0003-2449-1724
CR Almering V, 2007, IEEE SOFTWARE, V24, P82, DOI 10.1109/MS.2007.182
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cotroneo D, 2013, IEEE T RELIAB, V62, P408, DOI 10.1109/TR.2013.2257051
   Cotroneo D, 2013, J SYST SOFTWARE, V86, P1613, DOI 10.1016/j.jss.2013.02.020
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   DUGAN JB, 1991, IEEE T RELIAB, V40, P45, DOI 10.1109/24.75332
   Everett WW, 1999, ASSET'99: 1999 IEEE SYMPOSIUM ON APPLICATION-SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING & TECHNOLOGY - PROCEEDINGS, P204, DOI 10.1109/ASSET.1999.756770
   Garzia M.R., 2002, P IEEE DEP SYST NETW
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11, P1411, DOI 10.1109/TSE.1985.232177
   Gokhale S.S., 1997, P 3 ISSAT
   Gokhale SS, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P34, DOI 10.1109/HASE.1998.731593
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hou RH, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P289, DOI 10.1109/ISSRE.1996.558884
   Huang CY, 2007, IEEE T RELIAB, V56, P198, DOI 10.1109/TR.2007.895301
   Huang CY, 2006, J SYST SOFTWARE, V79, P653, DOI 10.1016/j.jss.2005.06.039
   Huang CY, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P129, DOI 10.1109/ISSRE.2002.1173228
   Lyu M., 2002, IEEE T RELIAB, V51, P336
   Lyu M.R., 1996, Handbook of Software Reliability Engineering, P71
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mullen RE, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P134, DOI 10.1109/ISSRE.1998.730872
   Musa J. D., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P230
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ohishi K, 2009, J SYST SOFTWARE, V82, P535, DOI 10.1016/j.jss.2008.11.840
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Okamura H, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P263
   Okamura H, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P246, DOI 10.1109/ISSRE.2003.1251047
   Okamura H, 2011, 2011 INTERNATIONAL CONFERENCE ON QUALITY, RELIABILITY, RISK, MAINTENANCE, AND SAFETY ENGINEERING (ICQR2MSE), P411
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pietrantuono R., 2010, Proceedings of the 2010 Eighth European Dependable Computing Conference (EDCC 2010), P209, DOI 10.1109/EDCC.2010.33
   Pietrantuono R, 2010, IEEE T SOFTWARE ENG, V36, P323, DOI 10.1109/TSE.2010.6
   Stringfellow C., 2002, Empirical Software Engineering, V7, P319, DOI 10.1023/A:1020515105175
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   U.S. Department of Defense, 1996, MILSTD498 US DEP DEF
   YAMADA S, 1995, MATH COMPUT MODEL, V22, P295, DOI 10.1016/0895-7177(95)00207-I
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   YAMADA S, 1986, IEEE T RELIAB, V35, P19, DOI 10.1109/TR.1986.4335332
   Zachariah B, 2007, IEEE T RELIAB, V56, P246, DOI 10.1109/TR.2007.895310
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 42
TC 14
Z9 14
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2014
VL 16
IS 5
BP 593
EP 607
DI 10.1007/s10009-014-0319-0
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HU
UT WOS:000209673300011
DA 2024-07-18
ER

PT J
AU van de Pol, J
   Ruys, TC
   te Brinke, S
AF van de Pol, Jaco
   Ruys, Theo C.
   te Brinke, Steven
TI Thoughtful brute-force attack of the RERS 2012 and 2013 Challenges
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software verification; Multi-core model checking; Randomized depth-first
   search
AB The Rigorous Examination of Reactive Systems' (RERS) Challenges provide a forum for experimental evaluation based on specifically synthesized benchmark suites. In this paper, we report on our 'brute-force attack' of the RERS 2012 and 2013 Challenges. We connected the RERS problems to two state-of-the-art explicit state model checkers: LTSMIN and Spin. Apart from an effective compression of the state vector, we did not analyze the source code of the problems. Our brute-force approach was successful: it won both editions of the RERS Challenge.
C1 [van de Pol, Jaco; te Brinke, Steven] Univ Twente, POB 217, NL-7500 AE Enschede, Netherlands.
   [Ruys, Theo C.] RUwise, Deventer, Netherlands.
C3 University of Twente
RP van de Pol, J (corresponding author), Univ Twente, POB 217, NL-7500 AE Enschede, Netherlands.
EM j.c.vandepol@utwente.nl; theo.ruys@gmail.com; s.tebrinke@utwente.nl
CR Blom S, 2010, LECT NOTES COMPUT SC, V6174, P354
   Evangelista Sami, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P269, DOI 10.1007/978-3-642-33386-6_22
   Gastin P, 2001, LECT NOTES COMPUT SC, V2102, P53
   Holzman G.J., 2003, SPIN MODEL CHECKER P
   Holzmann GJ, 2004, LECT NOTES COMPUT SC, V2989, P76
   Howar Falk, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P608, DOI 10.1007/978-3-642-34026-0_45
   Howar F, 2014, INT J SOFTW TOOLS TE, V16, P457, DOI 10.1007/s10009-014-0337-y
   Laarman Alfons, 2011, Model Checking Software. Proceedings 18th International SPIN Workshop, P38, DOI 10.1007/978-3-642-22306-8_4
   Laarman Alfons, 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P247
   Laarman A, 2011, LECT NOTES COMPUT SC, V6617, P506, DOI 10.1007/978-3-642-20398-5_40
   Ruys Theo C., 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P117, DOI 10.1007/978-3-642-31759-0_10
   Steffen B, 2014, INT J SOFTW TOOLS TE, V16, P465, DOI 10.1007/s10009-014-0336-z
   vanderVegt S., 2011, LNCS, V7119, P191, DOI DOI 10.1007/978-3-642-25929-6
   Vardi M. Y., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P332
NR 14
TC 7
Z9 7
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2014
VL 16
IS 5
BP 481
EP 491
DI 10.1007/s10009-014-0324-3
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HU
UT WOS:000209673300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gherghina, C
   David, C
   Qin, SC
   Chin, WN
AF Gherghina, Cristian
   David, Cristina
   Qin, Shengchao
   Chin, Wei-Ngan
TI Expressive program verification via structured specifications
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Structured specifications; Separation logic; ase analysis
AB Conventional specifications typically have a flat structure that is based primarily on the underlying logic. Such specifications lack structures that could provide better guidance to the verification process. In this work, we propose to add three new structures to a specification framework for separation logic to achieve a more precise and better guided verification for pointer-based programs. The newly introduced structures empower users with more control over the verification process in the following ways: (1) case analysis can be invoked to take advantage of disjointedness conditions in the logic, (2) early, as opposed to late, instantiation can minimise the use of existential quantification and (3) novel formulae structuring can provide better reuse of the verification process. Initial experiments have shown that structured specifications can lead to more precise verification without incurring any performance overhead. To support our proposal, we shall illustrate the usage of structured specifications in the context of proving termination and we will briefly outline the impact of our proposal on a recent development focussed on verifying the FreeRTOS scheduler Ferreira et al. (Int. J. Softw. Tools Technol. Trans. 2014).
C1 [Gherghina, Cristian] Singapore Univ Technol & Design, Singapore, Singapore.
   [David, Cristina] Univ Oxford, Oxford, England.
   [Qin, Shengchao] Shenzhen Univ, Shenzhen, Peoples R China.
   [Qin, Shengchao] Univ Teesside, Middlesbrough, Cleveland, England.
   [Chin, Wei-Ngan] Natl Univ Singapore, Singapore 117548, Singapore.
C3 Singapore University of Technology & Design; University of Oxford;
   Shenzhen University; University of Teesside; National University of
   Singapore
RP Qin, SC (corresponding author), Shenzhen Univ, Shenzhen, Peoples R China.
EM shengchao.qin@gmail.com
RI Qin, Shengchao/F-4823-2012
OI Qin, Shengchao/0000-0003-3028-8191
FU EPSRC [EP/G042322/2] Funding Source: UKRI
CR [Anonymous], FM
   Barnett M, 2005, LECT NOTES COMPUT SC, V3362, P49
   Berdine J, 2006, LECT NOTES COMPUT SC, V4111, P115
   Brock B, 1996, LECT NOTES COMPUT SC, V1166, P275, DOI 10.1007/BFb0031816
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Chang BYE, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P247, DOI 10.1145/1328438.1328469
   Chin WN, 2007, HASE 2007: 10TH IEEE HIGH ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P357, DOI 10.1109/HASE.2007.19
   Chin WN, 2012, SCI COMPUT PROGRAM, V77, P1006, DOI 10.1016/j.scico.2010.07.004
   Distefano D., 2008, OOPSLA
   Ferreira J.F., 2014, INT J SOFTW TOOLS TE, DOI [10.1007/s10009-014-307-4, DOI 10.1007/S10009-014-307-4]
   Ishtiaq S, 2001, ACM SIGPLAN NOTICES, V36, P14, DOI 10.1145/373243.375719
   Jacobs B, 2010, LECT NOTES COMPUT SC, V6461, P304, DOI 10.1007/978-3-642-17164-2_21
   Jonkers H. B. M., 1991, VDM '91. Formal Software Development Methods. 4th International Symposium of VDM Europe Proceedings. Vol.1: Conference Contribution, P428
   KLARLUND N, 2001, BRICS NOTES SERIES
   Le T.C., 2012, SPECIFICATION LOGIC
   Leavens G.T., 1999, FM
   NGUYEN HH, 2007, VMCAI
   OHEARN P, 2004, POPL
   Parkinson M, 2005, ACM SIGPLAN NOTICES, V40, P247, DOI 10.1145/1047659.1040326
   Pientka B., 1995, 37 U ED DEP ART INT
   PUGH W, 1992, COMMUN ACM, V35, P102, DOI 10.1145/135226.135233
   Reynolds JC, 2002, IEEE S LOG, P55, DOI 10.1109/LICS.2002.1029817
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Seino T., 2005, IJPCC
   Woodcock J., 2008, SBMF
   Zee K, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P338, DOI 10.1145/1542476.1542514
NR 27
TC 2
Z9 3
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2014
VL 16
IS 4
BP 363
EP 380
DI 10.1007/s10009-014-0306-5
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HT
UT WOS:000209673200003
DA 2024-07-18
ER

PT J
AU Yifeng, C
   Sanders, JW
AF Yifeng, Chen
   Sanders, J. W.
TI A modal approach to conscious social agents
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE social agent; consciousness; modal logic
AB An agent's awareness has previously been modelled as a modal operator in such a way that awareness can be iterated, and consciousness formalised as awareness of awareness. Agents are not necessarily human and may a priori be other animals, organisations or software. In that generality awareness is presumed to exist in degrees, and so the expected Boolean model of agent awareness has been augmented with a numerical one. The context is an adaptive multi-agent system in which agents, individually and in groups, control actions and adapt. So far the approach has been developed for individual agents only.This paper summarises that approach with a Galois embedding between the Boolean and numerical models, and then continues it to more than one agent by formalising empathy between agents. The formalism is applied to give accounts of the Sally-Anne Test of human empathy and the more game-theoretic Keynesian Beauty Contest.
C1 [Yifeng, Chen] Peking Univ, Beijing, Peoples R China.
   [Sanders, J. W.] AIMS South Africa, Cape Town, South Africa.
C3 Peking University
RP Yifeng, C (corresponding author), Peking Univ, Beijing, Peoples R China.
EM cyf@pku.edu.cn; jsanders@aims.ac.za
FU They are grateful for the critical, informed and supportive reviews
   (particularly in this unorthodox topic); the paper has benefitted
   considerably. They also thankful Martin Wirsing for his help and
   encouragement.
FX They are grateful for the critical, informed and supportive reviews
   (particularly in this unorthodox topic); the paper has benefitted
   considerably. They also thankful Martin Wirsing for his help and
   encouragement.
CR Atamian HS, 2016, SCIENCE, V353, P587, DOI 10.1126/science.aaf9793
   Baars BJ, 1998, COGNITIVE THEORY CON
   BARONCOHEN S, 1985, COGNITION, V21, P37, DOI 10.1016/0010-0277(85)90022-8
   Bengio Y., 2019, arXiv
   Chittka A, 2012, CURR BIOL, V22, pR835, DOI 10.1016/j.cub.2012.07.045
   Dehaene S., 2014, CONSCIOUSNESS BRAIN
   Garson J., 2023, The Stanford Encyclopedia of Philosophy (Spring 2023 Edition)
   Ginsburg S, 2019, EVOLUTION OF THE SENSITIVE SOUL: LEARNING AND THE ORIGINS OF CONSCIOUSNESS, P1
   Hameroff S, 2014, PHYS LIFE REV, V11, P39, DOI 10.1016/j.plrev.2013.08.002
   Hennicker Rolf, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P110, DOI 10.1007/978-3-031-19759-8_8
   Henrich J., 2022, WHAT MAKES US SMART
   Hoffman DD, 2012, PERCEPTION, V41, P1073, DOI 10.1068/p7275
   Holzl Matthias, 2015, Software Engineering for Collective Autonomic Systems. The ASCENS Approach: LNCS 8998, P249, DOI 10.1007/978-3-319-16310-9_7
   Keynes JM, 1937, Q J ECON, V51, P209, DOI 10.2307/1882087
   Mooney D., 1999, COURSE MATH MODELING, DOI [10.1090/clrm/013, DOI 10.1090/CLRM/013]
   Sanders JW, 2007, TASE 2007: First Joint IEEE/IFIP Symposium on Theoretical Aspects of Software Engineering, Proceedings, P440, DOI 10.1109/TASE.2007.21
   Soros G, 2013, J ECON METHODOL, V20, P309, DOI 10.1080/1350178X.2013.859415
   Valiant L, 2013, Probably Approximately Correct: Nature's Algorithms for Learning and Prospering in A Complex World
   van Gulick R., 2014, STANFORD ENCY PHILOS
   Wieland G., 2023, NOTES SEMINAR
   Wilson E.O., 2013, SOCIAL CONQUEST EART
   Yifeng Chen, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P127, DOI 10.1007/978-3-031-19759-8_9
   Yifeng C., 2023, THEORIES PROGRAMMING
NR 23
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2023
VL 25
IS 5-6
BP 707
EP 716
DI 10.1007/s10009-023-00732-z
EA NOV 2023
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AB9N8
UT WOS:001101489900001
DA 2024-07-18
ER

PT J
AU Mamouras, K
   Chattopadhyay, A
   Wang, ZF
AF Mamouras, Konstantinos
   Chattopadhyay, Agnishom
   Wang, Zhifu
TI A compositional framework for algebraic quantitative online monitoring
   over continuous-time signals
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 20th International Conference on Runtime Verification (RV)
CY OCT 06-09, 2020
CL ELECTR NETWORK
SP Toyota Res Inst
DE Online monitoring; signal temporal logic (STL); quantitative semantics;
   cyberphysical systems (CPS); transducers
ID TEMPORAL LOGIC; EFFICIENT EVALUATION; ROBUSTNESS; SEMANTICS; LANGUAGE
AB We investigate online monitoring algorithms over dense-time and continuous-time signals for properties written in metric temporal logic (MTL). We consider an abstract algebraic semantics based on complete lattices. This semantics includes as particular cases the standard Boolean (qualitative) semantics and the widely used real-valued robustness (quantitative) semantics. Our semantics also extends to truth values that are partially ordered and allows the modeling of uncertainty in satisfaction. We propose a compositional approach for the construction of online monitors that transform exact representations of piecewise constant (dense-time and continuous-time) signals. These monitors are based on a class of infinite-state deterministic signal transducers that (1) are allowed to produce the output signal with some bounded delay relative to the input signal, and (2) do not introduce unbounded variability in the output signal. A key ingredient of our monitoring framework is an efficient algorithm for sliding-window aggregation over dense-time signals. We have implemented and experimentally evaluated our monitoring framework by comparing it to the recently proposed online monitoring tools Reelay and RTAMT.
C1 [Mamouras, Konstantinos; Chattopadhyay, Agnishom; Wang, Zhifu] Rice Univ, Dept Comp Sci, 6100 Main St, Houston, TX 77005 USA.
C3 Rice University
RP Mamouras, K (corresponding author), Rice Univ, Dept Comp Sci, 6100 Main St, Houston, TX 77005 USA.
EM mamouras@rice.edu; agnishom@rice.edu; zfwang@rice.edu
CR Abbas H, 2019, IEEE ACM T COMPUT BI, V16, P1586, DOI 10.1109/TCBB.2018.2885274
   Abbas H, 2018, P IEEE, V106, P1593, DOI 10.1109/JPROC.2018.2853608
   Akazaki T, 2015, LECT NOTES COMPUT SC, V9207, P356, DOI 10.1007/978-3-319-21668-3_21
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   Alur R, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290363
   Alur R, 2020, THEOR COMPUT SCI, V807, P15, DOI 10.1016/j.tcs.2019.11.018
   Alur R, 2017, NATO SCI PEAC SECUR, V50, P1, DOI 10.3233/978-1-61499-810-5-1
   Alur R, 2017, LECT NOTES COMPUT SC, V10460, P75, DOI 10.1007/978-3-319-63121-9_4
   Alur Rajeev, 2017, LIPIcs, V80
   [Anonymous], 1974, PROC IFIP C 74
   Bakhirkin A, 2018, HSCC 2018: PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (PART OF CPS WEEK), P177, DOI 10.1145/3178126.3178132
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   BENVENISTE A, 1991, SCI COMPUT PROGRAM, V16, P103, DOI 10.1016/0167-6423(91)90001-E
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Bonakdarpour B., 2016, CONCUR 2016, DOI [10.4230/LIPIcs.CONCUR.2016.16, DOI 10.4230/LIPICS.CONCUR.2016.16]
   Caspi P., 1987, P 14 ACM SIGACT SIGP, P178, DOI DOI 10.1145/41625.41641
   Chattopadhyay A, 2020, LECT NOTES COMPUT SC, V12399, P383, DOI 10.1007/978-3-030-60508-7_21
   Cralley J, 2020, LECT NOTES COMPUT SC, V12399, P404, DOI 10.1007/978-3-030-60508-7_22
   D'Souza D, 2004, LECT NOTES COMPUT SC, V3253, P68
   Deshmukh JV, 2017, FORM METHOD SYST DES, V51, P5, DOI 10.1007/s10703-017-0286-7
   Dokhanchi A, 2014, LECT NOTES COMPUT SC, V8734, P231, DOI 10.1007/978-3-319-11164-3_19
   Donze Alexandre, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P264, DOI 10.1007/978-3-642-39799-8_19
   Donzé A, 2010, LECT NOTES COMPUT SC, V6246, P92, DOI 10.1007/978-3-642-15297-9_9
   Dreossi T, 2015, LECT NOTES COMPUT SC, V9058, P127, DOI 10.1007/978-3-319-17524-9_10
   Fainekos GE, 2006, LECT NOTES COMPUT SC, V4262, P178
   Fainekos GE, 2009, THEOR COMPUT SCI, V410, P4262, DOI 10.1016/j.tcs.2009.06.021
   Faulhaber J., 2021, Boost library documentation: interval container library
   Faymonville P., 2017, arXiv
   Faymonville P, 2019, LECT NOTES COMPUT SC, V11561, P421, DOI 10.1007/978-3-030-25540-4_24
   Ferrère T, 2019, J ACM, V66, DOI 10.1145/3286976
   Gorostiaga F, 2018, LECT NOTES COMPUT SC, V11237, P282, DOI 10.1007/978-3-030-03769-7_16
   Hoxha B., 2015, ARCH14-15. 1st and 2nd International Workshop on Applied veRification for Continuous and Hybrid Systems, V34, P25
   Hoxha B., 2014, INT WORKSH DES IMPL
   Jaksic S, 2018, IEEE T COMPUT AID D, V37, P2233, DOI 10.1109/TCAD.2018.2858460
   Kong LK, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428251
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Lemire D., 2006, arXiv
   Li J, 2005, SIGMOD REC, V34, P39, DOI 10.1145/1058150.1058158
   Maler O, 2005, LECT NOTES COMPUT SC, V3829, P2
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Maler O, 2007, LECT NOTES COMPUT SC, V4590, P95
   Maler O, 2006, LECT NOTES COMPUT SC, V4202, P274
   Mamouras Konstantinos, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12651), P330, DOI 10.1007/978-3-030-72016-2_18
   Mamouras K, 2021, LECT NOTES COMPUT SC, V12974, P142, DOI 10.1007/978-3-030-88494-9_8
   Mamouras K, 2020, IEEE T COMPUT AID D, V39, P3868, DOI 10.1109/TCAD.2020.3013053
   Mamouras K, 2017, ACM SIGPLAN NOTICES, V52, P693, DOI [10.1145/3140587.3062369, 10.1145/3062341.3062369]
   Nickovic D, 2020, LECT NOTES COMPUT SC, V12302, P564, DOI 10.1007/978-3-030-59152-6_34
   Pnueli A, 2008, LECT NOTES COMPUT SC, V5000, P172
   Sánchez C, 2018, LECT NOTES COMPUT SC, V11237, P138, DOI 10.1007/978-3-030-03769-7_9
   The Valgrind Developers, 2021, Valgrind: an instrumentation framework for building dynamic analysis tools
   Ulus D., 2020, the Reelay monitoring tool
   Waga M, 2019, LECT NOTES COMPUT SC, V11750, P3, DOI 10.1007/978-3-030-29662-9_1
NR 53
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2023
VL 25
IS 4
BP 557
EP 573
DI 10.1007/s10009-023-00719-w
EA OCT 2023
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA X7GZ5
UT WOS:001079885400002
DA 2024-07-18
ER

PT J
AU Kirszenberg, A
   Martin, A
   Moreau, H
   Renault, E
AF Kirszenberg, Alexandre
   Martin, Antoine
   Moreau, Hugo
   Renault, Etienne
TI Go2Pins: a framework for the LTL verification of Go programs (extended
   version)
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Golang model-checking; PSL; Abstractions
ID AUTOMATA
AB We introduce Go2Pins, a tool that takes a program written in Go and links it with two model checkers: LTSMin (Kant et al. Ltsmin: high-performance language-independent model checking. In: TACAS'15, pp. 692-707, 2015) and Spot (Duret-Lutz et al. Spot 2.0-a framework for LTL and omega automata manipulation. In: ATVA'16, vol. 9938 of LNCS, pp. 1294, 122-129, 2016) . Go2Pins is an effort to promote the integration of both formal verification and testing inside industrial-size projects. With this goal in mind, we introduce black-box transitions, an efficient and scalable technique for handling the Go runtime. This approach, inspired by hardware verification techniques, allows easy, automatic and efficient abstractions. Go2Pins also handles basic concurrent programs through the use of a dedicated scheduler. Moreover, in order to efficiently handle recursive programs, we introduce PSLREC, a formalism that augments PSL without changing the complexity of the underlying verification process. In this paper we demonstrate the usage of Go2Pins over benchmarks inspired by industrial problems and a set of LTL formulae. Even if Go2Pins is still at the early stages of development, our results are promising and show the benefits of using black-box transitions. This paper also shows how Go2Pins is able to work efficiently on two bugs coming from industrial problems Kubernetes and Trillian.
C1 [Kirszenberg, Alexandre; Martin, Antoine; Moreau, Hugo; Renault, Etienne] EPITA Res Lab LRE, Le Kremlin Bicetre, France.
RP Renault, E (corresponding author), EPITA Res Lab LRE, Le Kremlin Bicetre, France.
EM alexandre.kirszenberg@epita.fr; antoine4.martin@epita.fr;
   hugo.moreau@epita.fr; etienne.renault@epita.fr
OI RENAULT, Etienne/0000-0001-9013-4413; Martin,
   Antoine/0000-0002-3263-7669
CR [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Baranová Z, 2017, LECT NOTES COMPUT SC, V10482, P201, DOI 10.1007/978-3-319-68167-2_14
   BERTHELOT G, 1986, LECT NOTES COMPUT SC, V222, P19
   Berthomieu B, 2020, INT J SOFTW TOOLS TE, V22, P163, DOI 10.1007/s10009-019-00519-1
   Blahoudek F, 2015, LECT NOTES COMPUT SC, V9232, P66, DOI 10.1007/978-3-319-23404-5_6
   Bloemen V, 2016, LECT NOTES COMPUT SC, V10028, P18, DOI 10.1007/978-3-319-49052-6_2
   Dekker J., 2014, THESIS RADBOUD U
   Dilley N, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1016, DOI 10.1109/ASE51524.2021.9678571
   Dilley N, 2020, ELECTRON P THEOR COM, P34, DOI 10.4204/EPTCS.314.4
   Dilley N, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P377, DOI [10.1109/SANER.2019.8668036, 10.1109/saner.2019.8668036]
   Duret-Lutz A, 2016, LECT NOTES COMPUT SC, V9938, P122, DOI 10.1007/978-3-319-46520-3_8
   Eisner C, 2006, INTEGR CIRCUIT SYST, P1
   Evangelista Sami, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P269, DOI 10.1007/978-3-642-33386-6_22
   GitHub repository, 2020, C2GO MIGR C GO
   GitHub repository, 2020, C4GO TRANSP C COD G
   GitHub repository, TRILL PREL BUG
   GitHub repository, 2020, TRANSP FORTR COD GOL
   GitHub repository, 2020, JAVA2GO CONV JAV COD
   GitHub repository, GO COMP
   GitHub repository, KUB GEN NOD MAP BUG
   GitHub repository, 2020, GRUMP GO RUNN PYTH
   Giunti Marco, 2020, Coordination Models and Languages. 22nd IFIP WG 6.1 International Conference, COORDINATION 2020. Held as Part of the 15th International Federated Conference on Distributed Computing Techniques, DisCoTec 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12134), P137, DOI 10.1007/978-3-030-50029-0_9
   Godefroid P, 2016, NATO SCI PEAC SECUR, V45, P99, DOI 10.3233/978-1-61499-627-9-99
   Griesemer R., 2009, HEY HO LETS GO
   Hoare C. A. R., 1978, Communications of the ACM, V21, P666, DOI 10.1145/359576.359585
   Kant Gijs, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P692, DOI 10.1007/978-3-662-46681-0_61
   Kirszenberg A, 2021, LECT NOTES COMPUT SC, V12864, P140, DOI 10.1007/978-3-030-84629-9_8
   Laarman A., 2014, STTT, V7976, P1
   Laarman A, 2018, LECT NOTES COMPUT SC, V10811, P280, DOI 10.1007/978-3-319-77935-5_20
   Lange J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1137, DOI 10.1145/3180155.3180157
   Lange J, 2017, ACM SIGPLAN NOTICES, V52, P748, DOI 10.1145/3093333.3009847
   LIPTON RJ, 1975, COMMUN ACM, V18, P717, DOI 10.1145/361227.361234
   Liu ZH, 2021, ASPLOS XXVI: TWENTY-SIXTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P616, DOI 10.1145/3445814.3446756
   MANNA Z, 1990, PROCEEDINGS OF THE NINTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P377, DOI 10.1145/93385.93442
   Ng N, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P174, DOI 10.1145/2892208.2892232
   Peled D., 1994, Computer Aided Verification. 6th International Conference, CAV '94. Proceedings, P377
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   RERS challenge, 2019, RIG EX REACT SYST RE
   Tu TF, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P865, DOI 10.1145/3297858.3304069
   VALMARI A, 1991, LECT NOTES COMPUT SC, V483, P491
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Yuan T, 2021, INT SYM CODE GENER, P187, DOI 10.1109/CGO51591.2021.9370317
   Zaks A, 2008, LECT NOTES COMPUT SC, V5156, P325, DOI 10.1007/978-3-540-85114-1_22
   Zhong, 2022, BINGO PINPOINTING CO
NR 44
TC 1
Z9 1
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2023
VL 25
IS 1
SI SI
BP 77
EP 94
DI 10.1007/s10009-022-00692-w
EA JAN 2023
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9R7IA
UT WOS:000912379900001
DA 2024-07-18
ER

PT J
AU Strandberg, PE
   Afzal, W
   Sundmark, D
AF Strandberg, Per Erik
   Afzal, Wasif
   Sundmark, Daniel
TI Software test results exploration and visualization with continuous
   integration and nightly testing
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software testing; Test results; Visual analytics
ID CHALLENGES; QUALITY; DESIGN; TOOLS
AB Software testing is key for quality assurance of embedded systems. However, with increased development pace, the amount of test results data risks growing to a level where exploration and visualization of the results are unmanageable. This paper covers a tool, Tim, implemented at a company developing embedded systems, where software development occurs in parallel branches and nightly testing is partitioned over software branches, test systems and test cases. Tim aims to replace a previous solution with problems of scalability, requirements and technological flora. Tim was implemented with a reference group over several months. For validation, data were collected both from reference group meetings and logs from the usage of the tool. Data were analyzed quantitatively and qualitatively. The main contributions from the study include the implementation of eight views for test results exploration and visualization, the identification of four solutions patterns for these views (filtering, aggregation, previews and comparisons), as well as six challenges frequently discussed at reference group meetings (expectations, anomalies, navigation, integrations, hardware details and plots). Results are put in perspective with related work and future work is proposed, e.g., enhanced anomaly detection and integrations with more systems such as risk management, source code and requirements repositories.
C1 [Strandberg, Per Erik] Westermo Network Technol AB, Vasteras, Sweden.
   [Strandberg, Per Erik; Afzal, Wasif; Sundmark, Daniel] Malardalen Univ, Vasteras, Sweden.
C3 Malardalen University
RP Strandberg, PE (corresponding author), Westermo Network Technol AB, Vasteras, Sweden.; Strandberg, PE (corresponding author), Malardalen Univ, Vasteras, Sweden.
EM per.strandberg@westermo.com; wasif.afzal@mdh.se; daniel.sundmark@mdh.se
FU Westermo Network Technologies AB; Swedish Knowledge Foundation
   [20150277, 20170214]; European Union [871319, 957212]; ECSEL Joint
   Undertaking (JU) [101007350]
FX This work was sponsored by Westermo Network Technologies AB, the Swedish
   Knowledge Foundation (Grants 20150277 & 20170214), the European Union's
   Horizon 2020 research and innovation program (Grants 871319 & 957212)
   and the ECSEL Joint Undertaking (JU) under Grant Agreement No.
   101007350. Mockups were drawn in the Inkscape graphics editor, using
   colors from the Bulma style framework, icons from Font awesome and
   emojis from OpenMoji. The screenshot was captured in Firefox 88.0.1 on a
   computer running Xubuntu 18.04.5 LTS, on a monitor with 4k resolution,
   then modified for anonymity and scaled to 1400 pixels width in the Gimp
   graphics editor. The open alpha ran on a virtual machine in VMware and
   was given one CPU och 4 GB of memory.
CR Ahmad A, 2022, IET SOFTW, V16, P331, DOI 10.1049/sfw2.12030
   [Anonymous], 2007, Software Visualization: Visualizing the Structure, Behavior, and Evolution of Software
   Ball M., 1969, Proceedings of the 1969 fall joint computer conference, P329, DOI 10.1145/1478559.1478597
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V70, P204, DOI 10.1016/j.infsof.2015.05.004
   Borg M., 2018, P DES VER C EUR DVCO
   Brandtner M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P184, DOI 10.1109/CSMR-WCRE.2014.6747169
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Cooper WF., 1947, J I ELECT ENG 2, V94, P216
   Deissenboeck F, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.129
   Duraes J, 2016, PROC INT SYMP SOFTW, P87, DOI 10.1109/ISSRE.2016.53
   Eldh S, 2013, IEEE-ACM INT WKSP CO, P69, DOI 10.1109/CESI.2013.6618476
   Enoiu E, 2020, COMPANION OF THE 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS-C 2020), P272, DOI 10.1109/QRS-C51114.2020.00053
   Fernandez A, 2018, INFORM SOFTWARE TECH, V98, P118, DOI 10.1016/j.infsof.2018.01.005
   Fowler M., 2011, ERADICATING NONDETER
   Froese M, 2016, IEEE COMPUT GRAPH, V36, P83, DOI 10.1109/MCG.2016.33
   Garousi V, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2251
   Garousi V, 2017, IEEE SOFTWARE, V34, P90, DOI 10.1109/MS.2017.34
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hodge VJ, 2004, ARTIF INTELL REV, V22, P85, DOI 10.1023/B:AIRE.0000045502.10941.a9
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Kalloniatis M., 2007, ORG RETINA VISUAL SY
   Lam W, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428270
   Martínez-Fernández S, 2019, IEEE ACCESS, V7, P68219, DOI 10.1109/ACCESS.2019.2917403
   Merino L, 2018, J SYST SOFTWARE, V144, P165, DOI 10.1016/j.jss.2018.06.027
   Munzner T, 2009, IEEE T VIS COMPUT GR, V15, P921, DOI 10.1109/TVCG.2009.111
   Muruti G, 2018, 2018 IEEE CONFERENCE ON APPLICATION, INFORMATION AND NETWORK SECURITY (AINS 2018), P81, DOI 10.1109/AINS.2018.8631436
   Nilsson A., 2014, INT C AG SOFTW DEV
   Oppermann M, 2020, 2020 IEEE WORKSHOP ON EVALUATION AND BEYOND - METHODOLOGICAL APPROACHES TO VISUALIZATION (BELIV 2020), P74, DOI 10.1109/BELIV51497.2020.00016
   Orso A., 2003, S SOFTW VIS
   Parmeza E., 2020, THESIS MALARDALEN U
   Pinto G, 2020, IEEE WORK CONF MIN S, P492, DOI 10.1145/3379597.3387482
   Ralph P., 2020, ARXIV PREPRINT ARXIV
   Ralph P, 2011, LECT NOTES BUS INF P, V93, P92
   Ram Prabhat, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P240, DOI 10.1145/3383219.3383244
   Ram P, 2020, LECT NOTES COMPUT SC, V12562, P419, DOI 10.1007/978-3-030-64148-1_26
   Rosenberg CM, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239248
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Sabljakovic H., 2018, THESIS MALARDALEN U
   Sannö A, 2019, TECHNOL INNOV MANAG, V9, P37, DOI 10.22215/timreview/1232
   Sedlmair M, 2012, IEEE T VIS COMPUT GR, V18, P2431, DOI 10.1109/TVCG.2012.213
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   [Старостина М. А. Starostina M. A.], 2021, [Аграрная наука, Agrarian science, Agrarnaya nauka], P97
   Strandberg P.E., 2020, INT S SOFTW TEST AN
   Strandberg P.E., 2016, INT S SOFTW REL ENG
   Strandberg P.E., 2018, INT S SOFTW TEST AN
   Strandberg PE, 2019, INT SYMP EMP SOFTWAR, P230
   Strandberg PE, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268921
   Strandberg PE, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.92
   Tómasdóttir KF, 2017, IEEE INT CONF AUTOM, P578, DOI 10.1109/ASE.2017.8115668
   Tukey J.W., 1977, EXPLORATORY DATA ANA
   Vermeulen F, 2005, ACAD MANAGE J, V48, P978
   Wang R, 2019, LECT NOTES COMPUT SC, V11918, P474, DOI 10.1007/978-3-030-34968-4_26
   Ward MO., 2010, INTERACTIVE DATA VIS, DOI [10.1201/b10683, DOI 10.1201/B10683]
   Zeileis A, 2009, COMPUT STAT DATA AN, V53, P3259, DOI 10.1016/j.csda.2008.11.033
   Zhang X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P807, DOI 10.1145/3338906.3338931
   Zolfaghari B, 2021, SOFTWARE PRACT EXPER, V51, P851, DOI 10.1002/spe.2929
NR 59
TC 4
Z9 4
U1 0
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2022
VL 24
IS 2
BP 261
EP 285
DI 10.1007/s10009-022-00647-1
EA FEB 2022
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0F1UH
UT WOS:000757730900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Havelund, K
   Peled, D
AF Havelund, Klaus
   Peled, Doron
TI An extension of first-order LTL with rules with application to runtime
   verification
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime-verification; Linear temporal logic; Binary decision diagrams
ID MODEL CHECKING; SAFETY
AB Linear temporal logic (LTL) is extensively used in formal methods, in particular in runtime verification (RV) and in model checking. Its propositional version was shown by Wolper (1983, Inform Control 56(1/2): 72-99) to be limited in expressiveness. Several extensions of propositional LTL, which promote the expressive power to that of Buchi automata, have therefore been proposed; however, none of those, by and large, have been adopted for formal methods. We present an extension of propositional LTL with rules, that is as expressive as these aforementioned extensions. We then show a similar deficiency in the expressiveness of first-order LTL and present an extension of it with rules, which parallels the propositional version. In our work on runtime verification, we focus on execution traces which consist of events that carry data, where a first-order version of LTL is needed, and in particular on past time versions of first-order LTL. In the previous work, we provided an algorithm for past time first-order LTL that uses BDDs to represent relations over data elements, and implemented it as a tool called DejaVu. In this paper, we propose a monitoring algorithm for the extension of past time first-order LTL with rules. This is implemented as an extension of DejaVu, and experimental results are provided.
C1 [Havelund, Klaus] CALTECH, Jet Prop Lab, Pasadena, CA USA.
   [Peled, Doron] Bar Ilan Univ, Dept Comp Sci, Ramat Gan, Israel.
C3 California Institute of Technology; National Aeronautics & Space
   Administration (NASA); NASA Jet Propulsion Laboratory (JPL); Bar Ilan
   University
RP Peled, D (corresponding author), Bar Ilan Univ, Dept Comp Sci, Ramat Gan, Israel.
EM klaus.havelund@jpl.nasa.gov; doron.peled@gmail.com
CR ALPERN B, 1987, DISTRIB COMPUT, V2, P117, DOI 10.1007/BF01782772
   [Anonymous], 1983, Ph.D. thesis
   [Anonymous], 2010, 1850TM2010 IEEE
   Attard DP, 2017, RIV PUBL SER AUTOMAT, P49
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Barringer H, 2010, J LOGIC COMPUT, V20, P675, DOI 10.1093/logcom/exn076
   Basin D, 2015, FORM METHOD SYST DES, V46, P262, DOI 10.1007/s10703-015-0222-7
   Basin D, 2015, J ACM, V62, DOI 10.1145/2699444
   Bauer A, 2007, LECT NOTES COMPUT SC, V4839, P126
   Bohn J, 1998, LECT NOTES COMPUT SC, V1530, P283
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   CHOMICKI J, 1995, ACM T DATABASE SYST, V20, P149, DOI 10.1145/210197.210200
   Clarke Edmund M., 2001, Model Checking
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Decker N, 2016, INT J SOFTW TOOLS TE, V18, P205, DOI 10.1007/s10009-015-0380-3
   Falcone Ylies, 2012, International Journal on Software Tools for Technology Transfer, V14, P349, DOI 10.1007/s10009-011-0196-8
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Frenkel H, 2017, LECT NOTES COMPUT SC, V10227, P1, DOI 10.1007/978-3-319-57288-8_1
   Geist J, 2014, LECT NOTES COMPUT SC, V8734, P215, DOI 10.1007/978-3-319-11164-3_18
   Gerth R., 1995, INT C PROTOCOL SPECI, P3
   Hallé S, 2012, IEEE T SERV COMPUT, V5, P192, DOI 10.1109/TSC.2011.10
   Havelund Klaus, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P61, DOI 10.1007/978-3-319-75632-5_3
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   Havelund K, 2020, FORM METHOD SYST DES, V56, P1, DOI 10.1007/s10703-018-00327-4
   Havelund K, 2018, LECT NOTES COMPUT SC, V10869, P26, DOI 10.1007/978-3-319-94111-0_2
   Havelund K, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P116, DOI 10.23919/FMCAD.2017.8102249
   Havelund K, 2015, INT J SOFTW TOOLS TE, V17, P143, DOI 10.1007/s10009-014-0309-2
   Havelund K, 2014, 2014 THEORETICAL ASPECTS OF SOFTWARE ENGINEERING CONFERENCE (TASE), P1, DOI 10.1109/TASE.2014.37
   Hella L, 2001, J ACM, V48, P880, DOI 10.1145/502090.502100
   Kupferman O, 2001, FORM METHOD SYST DES, V19, P291, DOI 10.1023/A:1011254632723
   Maler O., 2013, Int. J. Softw. Tools Technol. Transfer, V15, P247
   Manna Z., 1992, The temporal logic of reactive and concurrent systems-specification, DOI DOI 10.1007/978-1-4612-0931-7
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   Pike L, 2013, INNOV SYST SOFTW ENG, V9, P235, DOI 10.1007/s11334-013-0223-x
   Reger Giles, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P596, DOI 10.1007/978-3-662-46681-0_55
   Reger G., 2018, LNCS, V1
   Schneider J, 2019, LECT NOTES COMPUT SC, V11757, P310, DOI 10.1007/978-3-030-32079-9_18
   Shafiei N, 2020, LECT NOTES COMPUT SC, V12399, P221, DOI 10.1007/978-3-030-60508-7_12
   Sistla A.P., ANN S FDN COMP SCI S, P185
   Thomas, 1984, MATH LOGIC UNDERGRAD
   Thomas W., 1990, Handbook of Theoretical Computer Science, Volume B: Formal Models and Semantics, VB, P133, DOI [10.1016/B978-0-444-88074-1.50009-3, 10.1016/b978-0-444-88074-1.50009-3, DOI 10.1016/B978-0-444-88074-1.50009-3]
   WOLPER P, 1983, INFORM CONTROL, V56, P72, DOI 10.1016/S0019-9958(83)80051-5
NR 43
TC 2
Z9 2
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2021
VL 23
IS 4
SI SI
BP 547
EP 563
DI 10.1007/s10009-021-00626-y
EA JUL 2021
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WK6KY
UT WOS:000672247400001
DA 2024-07-18
ER

PT J
AU Sighireanu, M
AF Sighireanu, Mihaela
TI SL-COMP: competition of solvers for separation logic Report on the Third
   Edition
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Separation logic; SAT modulo theory; SMT-LIB
ID SHAPE
AB SL-COMP is a competition bringing together researchers and users interested in automated reasoning methods for separation logic (SL). The competition provides a snapshot of the state of the art in the area through a set of problems that put forward the strengths and challenges of the existing solvers and a comparative and replicable evaluation of participating solvers. The third edition of SL-COMP took place in April 2019, as part of the TOOLympics event at TACAS 2019. It collected more than 1K satisfiability and entailment problems, had seen the adoption of the new input format based on SMT-LIB and had doubled the number of participant solvers compared with the first edition in 2014. This report relates the history and the context of SL-COMP competition and accounts of its third edition. It also discusses the issues related with its organization and the challenges for the next editions.
C1 [Sighireanu, Mihaela] Univ Paris, IRIF, Paris, France.
C3 Universite Paris Cite
RP Sighireanu, M (corresponding author), Univ Paris, IRIF, Paris, France.
EM mihaela.sighireanu@irif.fr
FU ANR project CoLiS [ANR-15-CE25-0001]; Agence Nationale de la Recherche
   (ANR) [ANR-15-CE25-0001] Funding Source: Agence Nationale de la
   Recherche (ANR)
FX The author thanks the representative of each participating solver for
   their willing collaboration during the running of the competition,
   especially Andrew Reynolds, Jens Katelaan, Le Quang Loc, Benedict Lee,
   Quang-Trung Ta, Adam Rogalewicz, Chong Gao and Zhilin Wu. Cristina
   Serban provided the first version of the parser and the typechecker for
   the new format. The reviewers provided interesting comments and
   suggestions for the improvement of this paper. This work was partially
   supported by the ANR project CoLiS, contract number ANR-15-CE25-0001.
CR Antonopoulos T, 2014, LECT NOTES COMPUT SC, V8412, P411
   Barrett C, 2017, The SMT-LIB Standard: Version 2.6
   Beyer D., 2019, LNCS, V11429
   Brotherston J., 2012, Programming Languages and Systems, V7705, P350, DOI [10.1007/978-3-642-35182-225, 10.1007/978-3-642-35182-2_25]
   Brotherston J, 2014, IEEE S LOG, DOI 10.1145/2603088.2603091
   Brotherston J, 2017, LECT NOTES ARTIF INT, V10395, P472, DOI 10.1007/978-3-319-63046-5_29
   Calcagno C, 2006, LECT NOTES COMPUT SC, V4134, P182
   Chin WN, 2012, SCI COMPUT PROGRAM, V77, P1006, DOI 10.1016/j.scico.2010.07.004
   Demri Stephane, 2015, Journal of Applied Non-Classical Logics, V25, P50, DOI 10.1080/11663081.2015.1018801
   Enea Constantin, 2014, Programming Languages and Systems. 12th Asian Symposium (APLAS 2014), Proceedings: LNCS 8858, P314, DOI 10.1007/978-3-319-12736-1_17
   Enea C, 2015, LECT NOTES COMPUT SC, V9364, P80, DOI 10.1007/978-3-319-24953-7_7
   Gu XC, 2016, LECT NOTES ARTIF INT, V9706, P532, DOI 10.1007/978-3-319-40229-1_36
   Hearn P., SEPARATION LOGIC
   Iosif Radu, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P21, DOI 10.1007/978-3-642-38574-2_2
   Iosif R., 2018, ENCODING SEPARATION, DOI [10.1145/32119680, DOI 10.1145/32119680]
   Iosif R, 2014, LECT NOTES COMPUT SC, V8837, P201, DOI 10.1007/978-3-319-11936-6_15
   Jacobs B, 2010, LECT NOTES COMPUT SC, V6461, P304, DOI 10.1007/978-3-642-17164-2_21
   Katelaan J., 2018, LPAR 22 KALPA PUBLIC, V9, P23, DOI [10.29007/qwd8, DOI 10.29007/QWD8]
   Kimura D., 2018, ARXIV180205935
   O'Hearn P, 2019, COMMUN ACM, V62, P86, DOI 10.1145/3211968
   Perez Juan Antonio Navarro, 2013, Programming Languages and Systems. 11th Asian Symposium, APLAS 2013. Proceedings: LNCS 8301, P90, DOI 10.1007/978-3-319-03542-0_7
   Reynolds A, 2016, LECT NOTES COMPUT SC, V9938, P244, DOI 10.1007/978-3-319-46520-3_16
   Sighireanu M., 2014, JSAT, V9, P173
   Ta QT, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158097
   Wu Z., BEYER, P116
NR 25
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2021
VL 23
IS 6
BP 895
EP 903
DI 10.1007/s10009-021-00628-w
EA MAY 2021
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XU5UO
UT WOS:000656391300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yousefi, F
   Khamespanah, E
   Gharib, M
   Sirjani, M
   Movaghar, A
AF Yousefi, Farnaz
   Khamespanah, Ehsan
   Gharib, Mohammed
   Sirjani, Marjan
   Movaghar, Ali
TI VeriVANca framework: verification of VANETs by property-based message
   passing of actors in Rebeca with inheritance
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model checking; Warning message dissemination; Vehicular ad hoc networks
   (VANETs); Rebeca; Actor model
AB Vehicular ad hoc networks have attracted the attention of many researchers during the last years due to the emergence of autonomous vehicles and safety concerns. Most of the frameworks which are proposed for the modeling and analysis VANET applications make use of simulation techniques. Due to the high level of concurrency in these applications, simulation results do not guarantee the correct behavior of the system and more accurate analysis techniques are required. In this paper, we have developed a framework to provide model checking facilities for the analysis of VANET applications. To this end, an actor-based modeling language, Rebeca, is used which is equipped with a variety of model checking engines. We have extended Rebeca with the inheritance mechanism to support model-specific message passing among vehicles, which is crucial for the modeling of VANET applications. To illustrate the applicability of this framework, we modeled and analyzed two warning message dissemination schemes. Reviewing the results of using the model checking technique supports the claim that concurrent behaviors of the system components in VANETs may cause uncertainty which may not be detected by simulation-based techniques. We also observed that considering the interleaving of concurrent executions of the system components affects the performance metrics of it.
C1 [Yousefi, Farnaz; Movaghar, Ali] Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
   [Khamespanah, Ehsan] Univ Tehran, Sch Elect & Comp Engn, Tehran, Iran.
   [Khamespanah, Ehsan; Sirjani, Marjan] Reykjavik Univ, Sch Comp Sci, Reykjavik, Iceland.
   [Gharib, Mohammed] Inst Res Fundamental Sci IPM, Sch Comp Sci, Tehran, Iran.
   [Sirjani, Marjan] Malardalen Univ, Sch IDT, Vastersas, Sweden.
C3 Sharif University of Technology; University of Tehran; Reykjavik
   University; Malardalen University
RP Khamespanah, E (corresponding author), Univ Tehran, Sch Elect & Comp Engn, Tehran, Iran.; Khamespanah, E (corresponding author), Reykjavik Univ, Sch Comp Sci, Reykjavik, Iceland.
EM e.khamespanah@ut.ac.ir
RI Gharib, Mohammed/AAG-7701-2021; Movaghar, Ali/B-3980-2011
OI Gharib, Mohammed/0000-0001-9611-1693; Movaghar, Ali/0000-0002-6803-6750
FU Icelandic Research Fund [163205-051]; DPAC Project (Dependable Platforms
   for Autonomous Systems and Control) at Malardalen University, Sweden
FX The work on this paper has been supported in part by the project
   "Self-Adaptive Actors: SEADA" (163205-051) of the Icelandic Research
   Fund and by DPAC Project (Dependable Platforms for Autonomous Systems
   and Control) at Malardalen University, Sweden.
CR Aceto L, 2011, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.58.1
   AGHA G, 1985, LECT NOTES COMPUT SC, V206, P19
   [Anonymous], 2013, MSWIM
   De Boer F, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3122848
   Ferrer BR, 2016, INT J PROD RES, V54, P5434, DOI 10.1080/00207543.2015.1120902
   Gama O, 2017, INT WIREL COMMUN, P478, DOI 10.1109/IWCMC.2017.7986332
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gholibeigi M., 2016, WIRELESS DAYS, P1, DOI 10.1109/WD.2016.7461489.
   Hafner MR, 2013, IEEE T INTELL TRANSP, V14, P1162, DOI 10.1109/TITS.2013.2252901
   Jafari A, 2016, SCI COMPUT PROGRAM, V128, P22, DOI 10.1016/j.scico.2016.03.004
   Jahandideh I., 2018, LECT NOTES COMPUTER, V11615, P3
   Khamespanah E., 2015, Formal Aspects of Component Software, P237
   Khamespanah E, 2018, THESIS, V1, p[101, 6]
   Khamespanah E, 2018, SCI COMPUT PROGRAM, V153, P1, DOI 10.1016/j.scico.2017.11.004
   Lin SP, 2016, J INTELL TRANSPORT S, V20, P88, DOI 10.1080/15472450.2014.889932
   Luo AX, 2013, PROC INT CONF PARAL, P300, DOI 10.1109/ICPP.2013.39
   Saeed T, 2019, IEEE T INTELL TRANSP, V20, P556, DOI 10.1109/TITS.2018.2828413
   Sanguesa J.A., 2016, Mobile Information Systems, vol, P8714142, DOI [DOI 10.1155/2016/8714142, 10.1155/2016/8714142]
   Sanguesa JA, 2015, COMPUT COMMUN, V60, P53, DOI 10.1016/j.comcom.2015.01.017
   Sirjani M, 2004, FUND INFORM, V63, P385
   Sirjani M, 2011, LECT NOTES COMPUT SC, V7000, P20, DOI 10.1007/978-3-642-24933-4_3
   Suriyapaibonwattana K, 2008, 2008 INTERNATIONAL SYMPOSIUM ON COMMUNICATIONS AND INFORMATION TECHNOLOGIES, P247, DOI 10.1109/ISCIT.2008.4700192
   Tseng YC, 2002, WIREL NETW, V8, P153, DOI 10.1023/A:1013763825347
   Yousefi B, 2017, FORM ASP COMPUT, V29, P1051, DOI 10.1007/s00165-017-0429-z
   Yousefi B, 2015, LECT NOTES COMPUT SC, V9392, P69, DOI 10.1007/978-3-319-24644-4_5
   Yousefi F, 2019, LECT NOTES COMPUT SC, V11636, P244, DOI 10.1007/978-3-030-30923-7_14
   Zeadally S, 2012, TELECOMMUN SYST, V50, P217, DOI 10.1007/s11235-010-9400-5
NR 27
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2020
VL 22
IS 5
SI SI
BP 617
EP 633
DI 10.1007/s10009-020-00579-8
EA JUN 2020
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9OM
UT WOS:000544558800001
DA 2024-07-18
ER

PT J
AU Luthmann, L
   Gerecht, T
   Lochau, M
AF Luthmann, Lars
   Gerecht, Timo
   Lochau, Malte
TI Sampling strategies for product lines with unbounded parametric
   real-time constraints
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software product-line engineering; Sample-based testing; Real-time
   systems; Timed automata
AB Combinatorial interaction testing (CIT) has been successfully applied to product-line testing for selecting from a usually very large configuration space a relatively small sample of test configurations sufficiently covering critical combinations of configuration options. As most recent CIT techniques like pairwise sampling are limited to finite configuration spaces (i.e., vectors of yes/no options), they are not directly applicable to configuration parameters with a priori unbounded value domains (e.g., for adjusting unlimited resources or non-functional properties). Applying existing sampling strategies to infinite configuration spaces therefore requires further heuristics for selecting a finite subset of parameter-value combinations to be covered. Nevertheless, applying purely black-box heuristics may produce inherently ineffective test suites in which particularly critical parameter-value combinations are missed. In order to tackle this problem, we present a novel methodology for effectively sampling product lines with infinite configuration spaces by means of freely configurable real-time behaviors. To this end, we employ solution-space information obtained from our new modeling formalism, configurable parametric timed automata, to generate samples for covering critical best-case/worst-case execution-time behaviors. We also present a tool implementation which we applied to a collection of subject systems to demonstrate the applicability of our approach.
C1 [Luthmann, Lars; Gerecht, Timo; Lochau, Malte] Tech Univ Darmstadt, Real Time Syst Lab, Darmstadt, Germany.
C3 Technical University of Darmstadt
RP Luthmann, L (corresponding author), Tech Univ Darmstadt, Real Time Syst Lab, Darmstadt, Germany.
EM lars.luthmann@es.tu-darmstadt.de; timo.gerecht@stud.tu-darmstadt.de;
   malte.lochau@es.tu-darmstadt.de
OI Luthmann, Lars/0000-0002-9868-365X
CR Abdeddaïm Y, 2006, THEOR COMPUT SCI, V354, P272, DOI 10.1016/j.tcs.2005.11.018
   ALUR R, 1990, LECT NOTES COMPUT SC, V443, P322, DOI 10.1007/BFb0032042
   Alur R, 2004, THEOR COMPUT SCI, V318, P297, DOI 10.1016/j.tcs.2003.10.038
   Alur R., 1993, Proceedings of the Twenty-Fifth Annual ACM Symposium on the Theory of Computing, P592, DOI 10.1145/167088.167242
   Andre Etienne, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P33, DOI 10.1007/978-3-642-32759-9_6
   Andre E, 2015, LANGUAGE PRESERVATIO, P27
   Andre E, 2016, WHATS DECIDABLE PARA, P52
   Andre E, 2009, IMITATOR TOOL SYNTHE, P336
   Andre E, 2016, INT CONF APPL CONCUR, P45, DOI 10.1109/ACSD.2016.20
   André É, 2009, INT J FOUND COMPUT S, V20, P819, DOI 10.1142/S0129054109006905
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2016, P 2016 ACM SIGPLAN I
   [Anonymous], 2000, IEEE MED CONTR C
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Baller H, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P303, DOI 10.1109/ICST.2014.43
   Behrmann G., 2001, Hybrid Systems: Computation and Control. 4th International Workshop, HSCC 2001. Proceedings (Lecture Notes in Computer Science Vol.2034), P147
   Behrmann G., 2005, Performance Evaluation Review, V32, P34, DOI 10.1145/1059816.1059823
   Bertrand N, 2009, REFINEMENT CONSISTEN, P152
   Bürdek J, 2015, LECT NOTES COMPUT SC, V9033, P84, DOI 10.1007/978-3-662-46675-9_6
   Cmyrev A., 2014, INT J APPL SCI TECHN, V7, P53, DOI [10.14416/j.ijast.2014.05.001, DOI 10.14416/J.IJAST.2014.05.001]
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cordy M., 2014, SPLC WORKSH, P102, DOI [10.1145/2647908.2655973, DOI 10.1145/2647908.2655973]
   Cordy M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P141
   Cordy M, 2013, FME WORKS FORM, P64, DOI 10.1109/FormaliSE.2013.6612279
   Cordy Maxime., 2012, Proceedings of the 16th International Software Product Line Conference (SPLC'12), P66, DOI DOI 10.1145/2362536
   Courcoubetis C., 1992, Formal Methods in System Design, V1, P385, DOI 10.1007/BF00709157
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dick J., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P268, DOI 10.1007/BFb0024651
   DILL DL, 1990, LECT NOTES COMPUT SC, V407, P197
   Haslinger Evelyn Nicole, 2013, PROC INTLWORKSHOP VA, DOI 10.1145/2430502.2430524
   Havelund K, 1997, REAL TIM SYST SYMP P, P2, DOI 10.1109/REAL.1997.641264
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   Jensen H.E., 1996, DIMACS 96
   Johansen Martin Fagereng, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P269, DOI 10.1007/978-3-642-33666-9_18
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Karatas AS, 2010, LECT NOTES COMPUT SC, V6287, P286, DOI 10.1007/978-3-642-15579-6_20
   Kim J.H., 2016, SAC 16, P1562, DOI [10.1145/2851613.2851977, DOI 10.1145/2851613.2851977]
   King A., 2013, TECHNICAL REPORT
   Kolesnikov S.S., 2013, P VAMOS, DOI [10.1145/2430502.2430511, DOI 10.1145/2430502.2430511]
   Krenn Willibald, 2013, Formal Modeling and Analysis of Timed Systems. Proceedings of 11th International Conference (FORMATS 2013): LNCS 8053, P152, DOI 10.1007/978-3-642-40229-6_11
   LEVESON NG, 1985, LECT NOTES COMPUT SC, V186, P339
   Lindahl Magnus, 2001, International Journal on Software Tools for Technology Transfer, V3, P353, DOI [10.1007/s100090100048, DOI 10.1007/S100090100048]
   Lochau M, 2014, MODEL BASED TESTING, P310
   Luthmann L, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P104, DOI 10.1145/3106195.3106204
   Mitsching Ralf, 2010, Proceedings of the 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement Companion (SSIRI-C 2010), P38, DOI 10.1109/SSIRI-C.2010.21
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Oster S, 2010, LECT NOTES COMPUT SC, V6287, P196, DOI 10.1007/978-3-642-15579-6_14
   Panek S, 2004, OPTIMIZATION TIMED A, P73, DOI DOI 10.1007/978-3-540-40903-8_7
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Reuling D., 2015, P 19 INT SOFTWARE PR, P131
   Sabouri H, 2012, P INT COMP SOFTW APP, P680, DOI 10.1109/COMPSAC.2012.95
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Springintveld J, 2001, THEOR COMPUT SCI, V254, P225, DOI 10.1016/S0304-3975(99)00134-6
   Utting M., 2010, Practical model-based testing: a tools approach
   Weiss David M., 2008, 2008 12th International Software Product Line Conference (SPLC), DOI 10.1109/SPLC.2008.56
NR 58
TC 2
Z9 2
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2019
VL 21
IS 6
SI SI
BP 613
EP 633
DI 10.1007/s10009-019-00532-4
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JL0QK
UT WOS:000495240000002
DA 2024-07-18
ER

PT J
AU Herrmann, L
   Küttler, M
   Stumpf, T
   Baier, C
   Härtig, H
   Klüppelholz, S
AF Herrmann, Linda
   Kuettler, Martin
   Stumpf, Tobias
   Baier, Christel
   Haertig, Hermann
   Klueppelholz, Sascha
TI Configuration of inter-process communication with probabilistic model
   checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal quantitative tradeoff analysis; Probabilistic model checking;
   Efficiency; Fault tolerance; Automatic parameter synthesis;
   Inter-process communication
ID PARAMETER SYNTHESIS; FORMAL VERIFICATION; FAULT-TOLERANCE; DESIGN
AB Ever-increasing bit flip rates caused by shrinking hardware tiles increase the demand for resilient systems. In particular, safety- and functionality-critical system parts need to be protected. Inter-process communication is one such critical part. Applying fault tolerance techniques often comes with a configuration problem, since real-world systems typically have tunable system parameters. These need to be configured with respect to certain optimality criterion. The paper addresses the parameter synthesis problem for inter-process communication protocols that are affected by bit flips. Tunable parameters are the probability of error detection and the expected time interval between system refresh. We provide a tool that automatically generates a model of bit-flip-prone inter-process communication for a given set of processes and their communication structure. The tool is used to exemplarily generate a model of a space probe. Parametric extensions of probabilistic model checking are applied to obtain rational functions for the availability of the space probe and other characteristics. We find a configuration setting that maximizes availability and investigates side effects for this configuration. The paper also compares exemplarily for the space probe model the most-standard probabilistic model checking methods (value iteration, interval iteration, and exact model checking) with respect to their time consumption and accuracy and reveals complexity concerns arising when evaluating the rational functions.
C1 [Herrmann, Linda; Kuettler, Martin; Stumpf, Tobias; Baier, Christel; Haertig, Hermann; Klueppelholz, Sascha] Tech Univ Dresden, Dresden, Germany.
C3 Technische Universitat Dresden
RP Herrmann, L; Klüppelholz, S (corresponding author), Tech Univ Dresden, Dresden, Germany.
EM linda.herrmann1@tu-dresden.de; martin.kuettler@tu-dresden.de;
   tstumpf@tudos.org; christel.baier@tu-dresden.de;
   hermann.haertig@tu-dresden.de; sascha.klueppelholz@tu-dresden.de
OI Baier, Christel/0000-0002-5321-9343
FU DFG [389792660, TRR 248, BA-1679/11-1, BA-1679/12-1, ER 168/24, HA
   2461/10-2]; Cluster of Excellence EXC 2050/1 (CeTI as a part of
   Germany's Excellence Strategy) [390696704]; Research Training Group
   QuantLA [GRK 1763]; Research Training Group RoSI [GRK 1907]
FX The authors are supported by the DFG through the DFG Grant 389792660 as
   a part of TRR 248, the Cluster of Excellence EXC 2050/1 (CeTI, Project
   ID 390696704, as a part of Germany's Excellence Strategy), and the
   Research Training Groups QuantLA (GRK 1763) and RoSI (GRK 1907), and the
   DFG-Projects BA-1679/11-1, BA-1679/12-1, Asteroid (ER 168/24), and FFMK
   (HA 2461/10-2).
CR [Anonymous], 2017, 16 WORKSH HOT TOP OP
   [Anonymous], 2011, EVEN SINGLE EVENTS C
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bartocci E, 2011, LECT NOTES COMPUT SC, V6605, P326, DOI 10.1007/978-3-642-19835-9_30
   Bellman R., 1957, Dynamic programming
   Bernardeschi C, 2002, SOFTW TEST VERIF REL, V12, P251, DOI 10.1002/stvr.258
   Bokor P, 2011, I C DEPEND SYS NETWO, P73, DOI 10.1109/DSN.2011.5958208
   Ceska M, 2017, ACTA INFORM, V54, P589, DOI 10.1007/s00236-016-0265-2
   Daws C, 2005, LECT NOTES COMPUT SC, V3407, P280
   Dehnert C., 2017, CORR
   Feather MS, 2001, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, P32, DOI 10.1109/HASE.2001.966805
   Fränzle M, 2015, LECT NOTES COMPUT SC, V9268, P93, DOI 10.1007/978-3-319-22975-1_7
   Gmeiner Annu, 2014, Formal Methods for Executable Software Models. 14th International School on Formal Methods for the Design of Computer, Communication, and Software Systems, SFM 2014. Advanced Lectures: LNCS 8483, P122, DOI 10.1007/978-3-319-07317-0_4
   Haddad Serge, 2014, Reachability Problems. 8th International Workshop, RP 2014. Proceedings: LNCS 8762, P125, DOI 10.1007/978-3-319-11439-2_10
   Haddad S, 2018, THEOR COMPUT SCI, V735, P111, DOI 10.1016/j.tcs.2016.12.003
   Hahn Ernst Moritz, 2011, International Journal on Software Tools for Technology Transfer, V13, P3, DOI 10.1007/s10009-010-0146-x
   Han TT, 2008, REAL TIM SYST SYMP P, P173, DOI 10.1109/RTSS.2008.19
   Hutschenreiter L, 2017, ELECTRON P THEOR COM, P16, DOI 10.4204/EPTCS.256.2
   Jakosky BM, 2015, SPACE SCI REV, V195, P3, DOI 10.1007/s11214-015-0139-x
   John Annu, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P209, DOI 10.1007/978-3-642-39176-7_14
   Jovanovic Aleksandra, 2014, Reachability Problems. 8th International Workshop, RP 2014. Proceedings: LNCS 8762, P176, DOI 10.1007/978-3-319-11439-2_14
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lanotte R, 2007, FORM ASP COMPUT, V19, P93, DOI 10.1007/s00165-006-0015-2
   Leuschner L, 2017, PROCEEDINGS OF THE 16TH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS (HOTOS 2017), P111, DOI 10.1145/3102980.3102999
   Liu F, 2013, PROCEEDINGS OF THE ASME 2ND GLOBAL CONGRESS ON NANOENGINEERING FOR MEDICINE AND BIOLOGY, NEMB 2013, P13
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Meurer A, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.103
   Moreno GA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1, DOI 10.1145/2786805.2786853
   Norman G, 2002, SEVENTH IEEE INTERNATIONAL HIGH-LEVEL DESIGN VALIDATION AND TEST WORKSHOP, PROCEEDINGS, P45, DOI 10.1109/HLDVT.2002.1224427
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   Saha GK, 2005, COMPUT SCI J MOLD, V13, P193
   Schneider F, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P4, DOI 10.1109/ICRE.1998.667803
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   Yeung WL, 2005, MICROPROCESS MICROSY, V29, P197, DOI 10.1016/j.micpro.2004.07.005
   Zhang M, 2009, INT SYM DEFEC FAU TO, P277, DOI 10.1109/DFT.2009.23
NR 35
TC 1
Z9 1
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2019
VL 21
IS 6
SI SI
BP 651
EP 666
DI 10.1007/s10009-019-00536-0
EA OCT 2019
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JL0QK
UT WOS:000492646400003
DA 2024-07-18
ER

PT J
AU Klein, J
   Baier, C
   Chrszon, P
   Daum, M
   Dubslaff, C
   Klüppelholz, S
   Märcker, S
   Müller, D
AF Klein, Joachim
   Baier, Christel
   Chrszon, Philipp
   Daum, Marcus
   Dubslaff, Clemens
   Kluppelholz, Sascha
   Maercker, Steffen
   Mueller, David
TI Advances in probabilistic model checking with PRISM: variable
   reordering, quantiles and weak deterministic Buchi automata
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Probabilistic model checking; MTBDD; Variable reordering; Quantiles;
   LTL; Deterministic automata
ID LINEAR TEMPORAL LOGIC; DECISION DIAGRAMS; OMEGA-AUTOMATA; SYMMETRY
   REDUCTION; MARKOV-CHAINS; SYSTEMS
AB The popular model checker PRISM has been successfully used for the modeling and analysis of complex probabilistic systems. As one way to tackle the challenging state explosion problem, PRISM supports symbolic storage and manipulation using multi-terminal binary decision diagrams for representing the models and in the computations. However, it lacks automated heuristics for variable reordering, even though it is well known that the order of BDD variables plays a crucial role for compact representations and efficient computations. In this article, we present a collection of extensions to PRISM. First, we provide support for automatic variable reordering within the symbolic engines of PRISM and allow users to manually control the variable ordering at a fine-grained level. Second, we provide extensions in the realm of reward-bounded properties, namely symbolic computations of quantiles in Markov decision processes and, for both the explicit and symbolic engines, the approximative computation of quantiles for continuous-time Markov chains as well as support for multi-reward-bounded properties. Finally, we provide an implementation for obtaining minimal weak deterministic Buchi automata for the obligation fragment of linear temporal logic (LTL), with applications for expected accumulated reward computations with a finite horizon given by a co-safe LTL formula.
C1 [Klein, Joachim; Baier, Christel; Chrszon, Philipp; Daum, Marcus; Dubslaff, Clemens; Kluppelholz, Sascha; Maercker, Steffen; Mueller, David] Tech Univ Dresden, Inst Theoret Comp Sci, D-01062 Dresden, Germany.
C3 Technische Universitat Dresden
RP Klein, J (corresponding author), Tech Univ Dresden, Inst Theoret Comp Sci, D-01062 Dresden, Germany.
EM klein@tcs.inf.tu-dresden.de
OI Kluppelholz, Sascha/0000-0003-1724-2586; Baier,
   Christel/0000-0002-5321-9343; Klein, Joachim/0000-0003-4681-6964
FU DFG through the collaborative research centre HAEC [SFB 912]; Excellence
   Initiative by German Federal and State Governments (cluster of
   excellence cfaed); Research Training Group QuantLA [GRK 1763]; Research
   Training Group RoSI [GRK 1907]; DFG [BA-1679/11-1, BA-1679/12-1]
FX The authors are supported by the DFG through the collaborative research
   centre HAEC (SFB 912), the Excellence Initiative by the German Federal
   and State Governments (cluster of excellence cfaed), the Research
   Training Groups QuantLA (GRK 1763) and RoSI (GRK 1907), and the
   DFG-projects BA-1679/11-1 and BA-1679/12-1.
CR Andova S, 2003, LECT NOTES COMPUT SC, V2791, P88
   [Anonymous], 2002, CAV, DOI DOI 10.1007/3-540-45657-0
   Bahar RI, 1997, FORM METHOD SYST DES, V10, P171, DOI 10.1023/A:1008699807402
   Baier Christel, 2014, Horizons of the Mind. A Tribute to Prakash Panangaden. Essays Dedicated to Prakash Panangaden on the Occasion of His 60th Birthday: LNCS 8464, P96, DOI 10.1007/978-3-319-06880-0_5
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Baier C, 2000, LECT NOTES COMPUT SC, V1853, P780
   Baier C, 1997, LECT NOTES COMPUT SC, V1256, P430
   Baier C, 2016, LECT NOTES COMPUT SC, V9779, P23, DOI 10.1007/978-3-319-415284_2
   Baier C, 2014, LECT NOTES COMPUT SC, V8430, P285, DOI 10.1007/978-3-319-06200-6_24
   Brzozowski J. A, 1963, P S MATHEMATICAL THE, V12, P529
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Chrszon P, 2016, LECT NOTES COMPUT SC, V9633, P287, DOI 10.1007/978-3-662-49665-7_17
   Ciardo Gianfranco, 2009, Performance Evaluation Review, V36, P58, DOI 10.1145/1530873.1530885
   Dax C, 2007, LECT NOTES COMPUT SC, V4762, P223
   Donaldson AF, 2009, INT CONF QUANT EVAL, P289, DOI 10.1109/QEST.2009.21
   Dubslaff C, 2015, LECT NOTES COMPUT SC, V8989, P180, DOI 10.1007/978-3-662-46734-3_5
   Duret-Lutz A, 2016, LECT NOTES COMPUT SC, V9938, P122, DOI 10.1007/978-3-319-46520-3_8
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Esparza J, 2014, LECT NOTES COMPUT SC, V8559, P192, DOI 10.1007/978-3-319-08867-9_13
   Etessami K., 2000, CONCUR 2000 - Concurrency Theory. 11th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1877), P153
   Forejt V, 2011, LECT NOTES COMPUT SC, V6659, P53, DOI 10.1007/978-3-642-21455-4_3
   Fujita M, 1997, FORM METHOD SYST DES, V10, P149, DOI 10.1023/A:1008647823331
   Gradel E., 2002, Automata Logics, and Infinite Games, V2500
   Haase C, 2015, LECT NOTES COMPUT SC, V9135, P234, DOI 10.1007/978-3-662-47666-6_19
   Hachtel GD, 1996, IEEE T COMPUT AID D, V15, P1479, DOI 10.1109/43.552081
   Haddad Serge, 2014, Reachability Problems. 8th International Workshop, RP 2014. Proceedings: LNCS 8762, P125, DOI 10.1007/978-3-319-11439-2_10
   Hartonas-Garmhausen V., 1999, Formal Methods for Real-Time and Probabilistic Systems. 5th International AMAST Workshop, ARTS'99. Proceedings, P96
   Heiner M, 2016, LECT NOTES COMPUT SC, V9930, P286, DOI 10.1007/978-3-662-53401-4_14
   Hermanns H, 2003, J LOGIC ALGEBR PROGR, V56, P23, DOI 10.1016/S1567-8326(02)00066-8
   Klein J, 2006, THEOR COMPUT SCI, V363, P182, DOI 10.1016/j.tcs.2006.07.022
   Klein J, 2016, LECT NOTES COMPUT SC, V9636, P349, DOI 10.1007/978-3-662-49674-9_20
   Komárková Z, 2014, LECT NOTES COMPUT SC, V8837, P235, DOI 10.1007/978-3-319-11936-6_17
   Kupferman O, 2001, FORM METHOD SYST DES, V19, P291, DOI 10.1023/A:1011254632723
   Kwiatkowsa M., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P203, DOI 10.1109/QEST.2012.14
   Kwiatkowska M., 2004, International Journal on Software Tools for Technology Transfer, V6, P128, DOI 10.1007/s10009-004-0140-2
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2006, LECT NOTES COMPUT SC, V4144, P234, DOI 10.1007/11817963_23
   Lacerda B, 2014, IEEE INT C INT ROBOT, P1511, DOI 10.1109/IROS.2014.6942756
   Lampka K., 2007, THESIS
   Löding C, 2001, INFORM PROCESS LETT, V79, P105, DOI 10.1016/S0020-0190(00)00183-6
   Maisonneuve V., 2009, AUTOMATIC HEURISTIC
   McMillan K. L., 1993, Symbolic model checking
   Meijer J, 2016, LECT NOTES COMPUT SC, V9690, P255, DOI 10.1007/978-3-319-40648-0_20
   Miner A, 2004, LECT NOTES COMPUT SC, V2925, P296
   Panda S, 1995, 1995 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN, P74, DOI 10.1109/ICCAD.1995.479994
   Parker D., 2002, THESIS
   RUDELL R, 1993, 1993 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN - DIGEST OF TECHNICAL PAPERS, P42, DOI 10.1109/ICCAD.1993.580029
   Schwarick M, 2009, LECT N BIOINFORMAT, V5688, P296, DOI 10.1007/978-3-642-03845-7_20
   Sickert S, 2016, LECT NOTES COMPUT SC, V9780, P312, DOI 10.1007/978-3-319-41540-6_17
   Siegle M., 2006, P MEAS MOD EV COMP C, P465
   Somenzi F., 2000, ser. Lecture Notes in Computer Science, V1855, P248, DOI DOI 10.1007/10722167_21
   Somenzi Fabio., Cudd: Colorado university decision diagram package
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Ummels M, 2013, LECT NOTES COMPUT SC, V7794, P353, DOI 10.1007/978-3-642-37075-5_23
   Vardi M. Y., 1999, Formal Methods for Real-Time and Probabilistic Systems. 5th International AMAST Workshop, ARTS'99. Proceedings, P265
NR 55
TC 15
Z9 15
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2018
VL 20
IS 2
SI SI
BP 179
EP 194
DI 10.1007/s10009-017-0456-3
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA6HE
UT WOS:000428433000005
DA 2024-07-18
ER

PT J
AU Steffen, B
AF Steffen, Bernhard
TI The physics of software tools: SWOT analysis and vision
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Validation tools; Tool profiles; Conceptual design; SWOT analysis; Open
   source; Internet; Exchange platform; Tool competitions
AB This paper reviews the seemingly inevitable trend that software tools are no longer just a means for supporting the design, construction, and analysis of (large-scale) systems, but become so complex that each of them turns into a reality of their own, with its own "physics", that needs to be studied in its own right. The true effects of combining methodologies as diverse as classical static analysis, model checking, SAT and SMT solving, and dynamic methods such as simulation, runtime verification, testing, and learning, with their dedicated means of optimizations in terms of, e.g., BDD coding, parallelization, and various forms of abstraction and reduction, are very dependent on the particular tools and typically hardly predictable. Corresponding experimental investigations, today often supported by diverse and frequent tool challenges, provide interesting indications about the applied technology, but typically fail to provide sufficient evidence to transfer results to other settings and tools. Moreover, implementation-specific details often dominate the observed effects which thereby become invalid for drawing conceptual conclusions. On the other hand, requiring consequent in-depth analysis of any experimental observation in order to pinpoint the underlying conceptual consequences before publication would slow down the scientific exchange and also hinder the scientific progress. This paper analyzes the situation of today's software tools from a global perspective in terms of a SWOT (Strength, Weaknesses, Opportunities, Treats) analysis, identifies challenges, and establishes a global vision for overcoming current weaknesses.
C1 [Steffen, Bernhard] TU Dortmund Univ, Programming Syst, D-44221 Dortmund, Germany.
C3 Dortmund University of Technology
RP Steffen, B (corresponding author), TU Dortmund Univ, Programming Syst, D-44221 Dortmund, Germany.
EM steffen@cs.tu-dortmund.de
CR Anderson JD, 1998, PHYS REV LETT, V81, P2858, DOI 10.1103/PhysRevLett.81.2858
   [Anonymous], 2012, CONQUERING COMPLEXIT
   [Anonymous], 1993, Kluwer, DOI DOI 10.1007/978-1-4615-3190-63
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Beckert Bernhard, 2007, Verification of Object-oriented Software: The KeY Approach, DOI DOI 10.1007/978-3-540-69061-0
   Behrmann G, 2006, INT CONF QUANT EVAL, P125
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Beyer D, 2016, LECT NOTES COMPUT SC, V9636, P887, DOI 10.1007/978-3-662-49674-9_55
   Blom S, 2010, LECT NOTES COMPUT SC, V6174, P354
   Braun V., 1997, International Journal on Software Tools for Technology Transfer, V1, P31, DOI 10.1007/s100090050005
   Cimatti A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P495
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Classen A., 1995, CONCUR '95: Concurrency Theory. 6th International Conference. Proceedings, P72
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Cousot P, 2005, LECT NOTES COMPUT SC, V3444, P21
   de Gouw S, 2015, LECT NOTES COMPUT SC, V9206, P273, DOI 10.1007/978-3-319-21690-4_16
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Demyanova Y, 2015, LECT NOTES COMPUT SC, V9206, P561, DOI 10.1007/978-3-319-21690-4_39
   Geske M, 2016, LECT NOTES COMPUT SC, V9953, P787, DOI 10.1007/978-3-319-47169-3_59
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Henzinger TA, 2003, LECT NOTES COMPUT SC, V2648, P235
   Henzinger TA, 1997, LECT NOTES COMPUT SC, V1254, P460, DOI 10.1007/s100090050008
   Holzmann G, 2011, The SPIN Model Checker: Primer and Reference Manual
   Howar Falk, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P608, DOI 10.1007/978-3-642-34026-0_45
   Huisman M, 2015, INT J SOFTW TOOLS TE, V17, P647, DOI 10.1007/s10009-015-0396-8
   Isberner M., 2015, LNCS, V9206, P487, DOI [10.1007/978- 3- 319-21690-4 32, DOI 10.1007/978-3-319-21690-432]
   Isberner M, 2014, MACH LEARN, V96, P65, DOI 10.1007/s10994-013-5419-7
   Jakumeit' E, 2014, SCI COMPUT PROGRAM, V85, P41, DOI 10.1016/j.scico.2013.10.009
   Jasper M, 2016, LECT NOTES COMPUT SC, V9952, P212, DOI 10.1007/978-3-319-47166-2_15
   Jegourel C, 2012, LECT NOTES COMPUT SC, V7214, P498, DOI 10.1007/978-3-642-28756-5_37
   Kant Gijs, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P692, DOI 10.1007/978-3-662-46681-0_61
   Kelb P, 1997, LECT NOTES COMPUT SC, V1217, P183, DOI 10.1007/BFb0035388
   Kordon F., 2016, COMPLETE RESULTS 201
   Krishnamurth S., 2016, WEBSITE ARTIFACT EVA
   Krishnamurthi S, 2013, ACM SIGPLAN NOTICES, V48, P17, DOI 10.1145/2502508.2502518
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lamprecht AL, 2008, LECT N BIOINFORMAT, V4983, P445, DOI 10.1007/978-3-540-79450-9_42
   Lamprecht AL, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-S10-S8
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Legay A, 2016, LECT NOTES COMPUT SC, V9952, P77, DOI 10.1007/978-3-319-47166-2_6
   Legay A, 2015, INT J SOFTW TOOLS TE, V17, P369, DOI 10.1007/s10009-015-0384-z
   Mao H, 2016, MACH LEARN, V105, P255, DOI 10.1007/s10994-016-5565-9
   Margaria T, 2005, LECT NOTES COMPUT SC, V3826, P450
   Margaria T, 2005, 12th IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, Proceedings, P431, DOI 10.1109/ECBS.2005.59
   Margaria T, 2005, LECT NOTES COMPUT SC, V3440, P557
   Margaria T., 2008, BMC BIOINFORMATICS, V9, P1
   Margaria T., 2005, SOFTW SYST MODEL, V4, P141, DOI [10.1007/s10270-004- 0072- z, DOI 10.1007/S10270-004-0072-Z]
   Margaria T., 2006, LEV APPL FORM METH V, P402
   Margaria T, 2007, IEEE ANNU SOFTW ENG, P214, DOI 10.1109/SEW.2007.63
   Nipkow Tobias, 2002, ISABELLE HOL PROOF A, V2283
   Owre S., 1992, INT C AUT DED, P748
   Raffelt Harald, 2009, International Journal on Software Tools for Technology Transfer, V11, P307, DOI 10.1007/s10009-009-0120-7
   Raffelt Harald, 2009, International Journal on Software Tools for Technology Transfer, V11, P393, DOI 10.1007/s10009-009-0111-8
   Reger G, 2016, LECT NOTES COMPUT SC, V10012, P21, DOI 10.1007/978-3-319-46982-9_3
   Rensink Arend., 2010, International Journal on Software Tools for Technology Transfer, V12, P171, DOI DOI 10.1007/S10009-010-0157-7
   Schordan M, 2003, LECT NOTES COMPUT SC, V2789, P214
   Steffen B., 1997, International Journal on Software Tools for Technology Transfer, V1, P9, DOI 10.1007/s100090050003
   STEFFEN B, 1993, SCI COMPUT PROGRAM, V21, P115, DOI 10.1016/0167-6423(93)90003-8
   Steffen B, 2014, INT J SOFTW TOOLS TE, V16, P465, DOI 10.1007/s10009-014-0336-z
   Tretmans J, 2003, 1 EUR C MOD DRIV SOF, P31
   Tulsian Varun, 2014, P MSR ACM, P132, DOI [10.1145/2597073. 2597080, DOI 10.1145/2597073.2597080]
   Turyshev SG, 2012, PHYS REV LETT, V108, DOI 10.1103/PhysRevLett.108.241101
   Ngo VC, 2016, LECT NOTES COMPUT SC, V9779, P84, DOI 10.1007/978-3-319-41528-4_5
   Yovine S., 1997, International Journal on Software Tools for Technology Transfer, V1, P123, DOI 10.1007/s100090050009
NR 64
TC 4
Z9 4
U1 0
U2 19
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2017
VL 19
IS 1
BP 1
EP 7
DI 10.1007/s10009-016-0446-x
PG 7
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ1AC
UT WOS:000392941500001
DA 2024-07-18
ER

PT J
AU Delzanno, G
AF Delzanno, Giorgio
TI A unified view of parameterized verification of abstract models of
   broadcast communication
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Parameterized verification; Model checking; Distributed systems
ID EFFICIENT VERIFICATION; AUTOMATIC VERIFICATION; PETRI NETS; WELL;
   REACHABILITY; SYSTEMS; COVERABILITY; NETWORKS; POWER
AB We give a unified view of different parameterized models of concurrent and distributed systems with broadcast communication based on transition systems. Based on the resulting formal models, we discuss related verification methods and tools based on abstractions and symbolic state exploration.
C1 [Delzanno, Giorgio] Univ Genoa, DIBRIS, Genoa, Italy.
C3 University of Genoa
RP Delzanno, G (corresponding author), Univ Genoa, DIBRIS, Genoa, Italy.
EM Giorgio.Delzanno@dibris.unige.it
CR Abdulla P., 2006, AVIS 06
   Abdulla P. A., 2014, LIPICS, P653
   Abdulla PA, 1996, IEEE S LOG, P313, DOI 10.1109/LICS.1996.561359
   Abdulla PA, 1998, LECT NOTES COMPUT SC, V1384, P298, DOI 10.1007/BFb0054179
   Abdulla PA, 2001, THEOR COMPUT SCI, V256, P145, DOI 10.1016/S0304-3975(00)00105-5
   Abdulla PA, 2000, IEEE S LOG, P132, DOI 10.1109/LICS.2000.855762
   Abdulla PA, 1996, INFORM COMPUT, V130, P71, DOI 10.1006/inco.1996.0083
   Abdulla PA, 2008, LECT NOTES COMPUT SC, V5160, P50, DOI 10.1007/978-3-540-85762-4_4
   Abdulla PA, 2008, LECT NOTES COMPUT SC, V4905, P22, DOI 10.1007/978-3-540-78163-9_7
   Abdulla PA, 2013, LECT NOTES COMPUT SC, V7892, P193
   Abdulla PA, 2014, LECT NOTES COMPUT SC, V8723, P1, DOI 10.1007/978-3-319-10936-7_1
   Abdulla PA, 2013, LECT NOTES COMPUT SC, V7737, P476
   Abdulla PA, 2011, LECT NOTES COMPUT SC, V6919, P256, DOI 10.1007/978-3-642-24310-3_18
   Abdulla PA, 2011, INT J FOUND COMPUT S, V22, P761, DOI 10.1142/S0129054111008416
   Abdulla PA, 2010, B SYMB LOG, V16, P457, DOI 10.2178/bsl/1294171129
   Abdulla PA, 2011, INFORM COMPUT, V209, P248, DOI 10.1016/j.ic.2010.11.003
   Abdulla PA, 2009, INT J FOUND COMPUT S, V20, P779, DOI 10.1142/S0129054109006887
   Abdulla PA, 2009, FORM METHOD SYST DES, V34, P126, DOI 10.1007/s10703-008-0062-9
   Alberti F., 2010, ECEASST, V35
   Aminof Benjamin, 2014, CONCUR 2014 - Concurrency Theory. 25th International Conference, CONCUR 2014. Proceedings: LNCS 8704, P109, DOI 10.1007/978-3-662-44584-6_9
   APT KR, 1986, INFORM PROCESS LETT, V22, P307, DOI 10.1016/0020-0190(86)90071-2
   Ball T., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P158
   Bardin Sebastien, 2008, International Journal on Software Tools for Technology Transfer, V10, P401, DOI 10.1007/s10009-008-0064-3
   Bertrand N., 2015, 26 INT C CONC THEOR, V42, P44, DOI [10.4230/LIPICS.CONCUR.2015.44, DOI 10.4230/LIPICS.CONCUR.2015.44]
   Bertrand N., 2013, IARCS ANN C FDN SOFT, V24, P501
   Bertrand N, 2014, LECT NOTES COMPUT SC, V8412, P134
   Bertrand Nathalie, 2012, RTA, P101, DOI DOI 10.4230/LIPICS.RTA.2012.101
   Bonnet R, 2013, INFORM COMPUT, V224, P1, DOI 10.1016/j.ic.2012.11.003
   Bonnet R, 2011, LECT NOTES COMPUT SC, V6907, P145, DOI 10.1007/978-3-642-22993-0_16
   Bozzano M, 2004, J SYMB COMPUT, V38, P1375, DOI 10.1016/j.jsc.2004.04.002
   Bozzano M, 2002, LECT NOTES COMPUT SC, V2280, P221
   Bozzelli L, 2014, THEOR COMPUT SCI, V523, P1, DOI 10.1016/j.tcs.2013.12.002
   BROWNE MC, 1989, INFORM COMPUT, V81, P13, DOI 10.1016/0890-5401(89)90026-6
   Clarke E, 2006, LECT NOTES COMPUT SC, V3855, P126
   Danos V, 2004, THEOR COMPUT SCI, V325, P69, DOI 10.1016/j.tcs.2004.03.065
   David N, 2015, LECT NOTES COMPUT SC, V9115, P137, DOI 10.1007/978-3-319-19488-2_7
   Delzanno G, 2004, LECT NOTES COMPUT SC, V2988, P342
   Delzanno Giorgio, 2013, Language and Automata Theory and Applications. 7th International Conference, LATA 2013. Proceedings, P238, DOI 10.1007/978-3-642-37064-9_22
   Delzanno Giorgio, 2012, International Journal on Software Tools for Technology Transfer, V14, P207, DOI 10.1007/s10009-011-0213-y
   Delzanno Giorgio, 2012, Formal Techniques for Distributed Systems. Joint 14th IFIP WG 6.1 International Conference, FMOODS 2012 and 32nd IFIP WG 6.1 International Conference, FORTE 2012, P235, DOI 10.1007/978-3-642-30793-5_15
   Delzanno G, 2002, LECT NOTES COMPUT SC, V2280, P173
   Delzanno G, 2003, FORM METHOD SYST DES, V23, P257, DOI 10.1023/A:1026276129010
   Delzanno G., 2004, International Journal on Software Tools for Technology Transfer, V5, P268, DOI 10.1007/s10009-003-0110-0
   Delzanno G, 1999, LECT NOTES COMPUT SC, V1683, P50
   Delzanno G., 2002, ELECTRON NOTES THEOR, V76, P65
   Delzanno G, 2007, THEOR PRACT LOG PROG, V7, P67, DOI 10.1017/S1471068406002821
   Delzanno G, 2013, LECT NOTES COMPUT SC, V8169, P109, DOI 10.1007/978-3-642-41036-9_11
   Delzanno G, 2013, THEOR COMPUT SCI, V467, P12, DOI 10.1016/j.tcs.2012.09.021
   Delzanno G, 2011, LECT NOTES COMPUT SC, V6604, P441, DOI 10.1007/978-3-642-19805-2_30
   Delzanno G, 2010, LECT NOTES COMPUT SC, V6269, P313, DOI 10.1007/978-3-642-15375-4_22
   Delzanno G, 2009, LECT N BIOINFORMAT, V5688, P158, DOI 10.1007/978-3-642-03845-7_11
   Delzanno Giorgio, 2012, IARCS ANN C FDN SOFT, V18, P289
   Dickson LE, 1913, AM J MATH, V35, P413, DOI 10.2307/2370405
   DING GL, 1992, J GRAPH THEOR, V16, P489, DOI 10.1002/jgt.3190160509
   Dufourd C, 1998, LECT NOTES COMPUT SC, V1443, P103, DOI 10.1007/BFb0055044
   Emerson EA, 2004, LECT NOTES COMPUT SC, V3210, P325
   Emerson EA, 2003, LECT NOTES COMPUT SC, V2860, P247
   Emerson EA, 1998, THIRTEENTH ANNUAL IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, PROCEEDINGS, P70, DOI 10.1109/LICS.1998.705644
   Esparza Javier, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P124, DOI 10.1007/978-3-642-39799-8_8
   Esparza J., 1999, Proceedings. 14th Symposium on Logic in Computer Science (Cat. No. PR00158), P352, DOI 10.1109/LICS.1999.782630
   Esparza J, 2014, LECT NOTES COMPUT SC, V8559, P603, DOI 10.1007/978-3-319-08867-9_40
   Farzan A, 2015, ACM SIGPLAN NOTICES, V50, P407, DOI [10.1145/2676726.2677012, 10.1145/2775051.2677012]
   Farzan A, 2014, ACM SIGPLAN NOTICES, V49, P151, DOI 10.1145/2535838.2535885
   Finkel A, 2004, INFORM COMPUT, V195, P1, DOI 10.1016/j.ic.2004.01.005
   Finkel A, 2005, ELECTRON NOTES THEOR, V128, P87, DOI 10.1016/j.entcs.2004.11.030
   Finkel A, 2001, THEOR COMPUT SCI, V256, P63, DOI 10.1016/S0304-3975(00)00102-X
   Fioravanti F, 2013, THEOR PRACT LOG PROG, V13, P175, DOI 10.1017/S1471068411000627
   Fioravanti F, 2012, FUND INFORM, V119, P281, DOI 10.3233/FI-2012-738
   Ganty P, 2014, LECT NOTES COMPUT SC, V8370, P396, DOI 10.1007/978-3-319-04921-2_32
   Geeraerts G, 2006, J COMPUT SYST SCI, V72, P180, DOI 10.1016/j.jcss.2005.09.001
   Geeraerts G, 2007, ACTA INFORM, V44, P249, DOI 10.1007/s00236-007-0050-3
   GERMAN SM, 1992, J ACM, V39, P675, DOI 10.1145/146637.146681
   Ghilardi S, 2010, LOG METH COMPUT SCI, V6, DOI 10.2168/LMCS-6(4:10)2010
   Gmeiner Annu, 2014, Formal Methods for Executable Software Models. 14th International School on Formal Methods for the Design of Computer, Communication, and Software Systems, SFM 2014. Advanced Lectures: LNCS 8483, P122, DOI 10.1007/978-3-319-07317-0_4
   Higman G., 1952, Proc. Lond. Math. Soc., V3, P326
   Joshi S, 2008, LECT NOTES COMPUT SC, V5123, P214
   Kaiser Alexander, 2014, CONCUR 2014 - Concurrency Theory. 25th International Conference, CONCUR 2014. Proceedings: LNCS 8704, P141, DOI 10.1007/978-3-662-44584-6_11
   Kaiser A, 2014, ACM T PROGR LANG SYS, V36, DOI 10.1145/2629608
   KAMINSKI M, 1994, THEOR COMPUT SCI, V134, P329, DOI 10.1016/0304-3975(94)90242-9
   Karp R. M., 1969, J COMPUT SYST SCI, V3, P147, DOI DOI 10.1016/S0022-0000(69)80011-5
   Kloos Johannes, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P158, DOI 10.1007/978-3-642-39799-8_10
   König B, 2008, ELECTRON NOTES THEOR, V211, P201, DOI 10.1016/j.entcs.2008.04.042
   Kroening D, 2013, LECT NOTES COMPUT SC, V8169, P19, DOI 10.1007/978-3-642-41036-9_2
   Lazic R, 2008, FUND INFORM, V88, P251
   Leroux J, 2010, LOG METH COMPUT SCI, V6, DOI 10.2168/LMCS-6(3:22)2010
   Leroux Jerome, 2012, Turing-100-The Alan Turing Centenary, V10, P214, DOI DOI 10.29007/BNX2
   Lipton R., 1975, REACHABILITY PROBLEM
   Liu PZ, 2014, 2014 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P155, DOI 10.1109/FMCAD.2014.6987608
   Martos-Salgado M, 2014, LECT NOTES COMPUT SC, V8370, P516, DOI 10.1007/978-3-319-04921-2_42
   MAYR EW, 1984, SIAM J COMPUT, V13, P441, DOI 10.1137/0213029
   McMillan K. L., 2001, Correct Hardware Design and Verification Methods. 11th IFIP WG 10.5 Advanced Research Working Conference, CHARME 2001. Proceedings (Lecture Notes in Computer Science Vol.2144), P179
   Meyer R, 2010, LECT NOTES COMPUT SC, V6174, P175, DOI 10.1007/978-3-642-14295-6_19
   Pnueli A., 2002, International Conference on Computer Aided Verification (CAV), P107
   Ramalingam G, 2000, ACM T PROGR LANG SYS, V22, P416, DOI 10.1145/349214.349241
   Reinhardt K, 2008, ELECTRON NOTES THEOR, V223, P239, DOI 10.1016/j.entcs.2008.12.042
   REVESZ PZ, 1993, THEOR COMPUT SCI, V116, P117, DOI 10.1016/0304-3975(93)90222-F
   Rosa-Velardo F, 2011, THEOR COMPUT SCI, V412, P4439, DOI 10.1016/j.tcs.2011.05.007
   Rosa-Velardo F, 2009, LECT NOTES COMPUT SC, V5606, P63, DOI 10.1007/978-3-642-02424-5_6
   Saksena M, 2008, LECT NOTES COMPUT SC, V4963, P18, DOI 10.1007/978-3-540-78800-3_3
   Schnoebelen P, 2010, LECT NOTES COMPUT SC, V6281, P616, DOI 10.1007/978-3-642-15155-2_54
   Singh A, 2010, SCI COMPUT PROGRAM, V75, P440, DOI 10.1016/j.scico.2009.07.008
   Singh A, 2009, LECT NOTES COMPUT SC, V5710, P603, DOI 10.1007/978-3-642-04081-8_40
   Stückrath J, 2015, LECT NOTES COMPUT SC, V9151, P266, DOI 10.1007/978-3-319-21145-9_17
NR 103
TC 3
Z9 3
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2016
VL 18
IS 5
BP 475
EP 493
DI 10.1007/s10009-016-0412-7
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU1ZY
UT WOS:000382011100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Armando, A
   Carbone, R
   Compagna, L
AF Armando, Alessandro
   Carbone, Roberto
   Compagna, Luca
TI SATMC: a SAT-based model checker for security protocols, business
   processes, and security APIs
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE SAT-based model checker; Security protocols; Business processes;
   Security APIs
AB We present SATMC 3.0, a SAT-based bounded model checker for security-critical systems that stems from a successful combination of encoding techniques originally developed for planning with techniques developed for the analysis of reactive systems. SATMC has been successfully applied in a variety of application domains (security protocols, security-sensitive business processes, and cryptographic APIs) and for different purposes (design-time security analysis and security testing). SATMC strikes a balance between general purpose model checkers and security protocol analyzers as witnessed by a number of important success stories including the discovery of a serious man-in-the-middle attack on the SAML-based single sign-on (SSO) for Google Apps, an authentication flaw in the SAML 2.0 Web Browser SSO Profile, and a number of attacks on PKCS#11 Security Tokens. SATMC is integrated and used as back-end in a number of research prototypes (e.g., the AVISPA Tool, Tookan, the SPaCIoS Tool) and industrial-strength tools (e.g., the Security Validator plugin for SAP NetWeaver BPM).
C1 [Armando, Alessandro] Univ Genoa, DIBRIS, Genoa, Italy.
   [Armando, Alessandro; Carbone, Roberto] Secur & Trust, FBK, Trento, Italy.
   [Compagna, Luca] SAP SE, Prod Secur Res, Sophia Antipolis, France.
C3 University of Genoa; Fondazione Bruno Kessler
RP Carbone, R (corresponding author), Secur & Trust, FBK, Trento, Italy.
EM armando@fbk.eu; carbone@fbk.eu; luca.compagna@sap.com
RI Carbone, Roberto/AGP-3603-2022
OI Carbone, Roberto/0000-0003-2853-4269; Armando,
   Alessandro/0000-0002-5246-2157
CR [Anonymous], 2013, LNCS
   [Anonymous], 2002, LNCS
   [Anonymous], P INT JOINT C ART IN
   [Anonymous], 2008, Proceedings of the 6th ACM workshop on Formal methods in security engineering-FMSE'08, DOI [DOI 10.1145/1456396.1456397, 10.1145/1456396.1456397]
   [Anonymous], 2014, Tools and Algorithms for the Construction and Analysis of Systems
   [Anonymous], 2005, Int. J. Inf. Secur., DOI [DOI 10.1007/S10207-004-0055-7, 10.1007/s10207-004-0055-7]
   [Anonymous], LNCS
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Armando A, 2004, LECT NOTES COMPUT SC, V3229, P730, DOI 10.1007/978-3-540-30227-8_68
   Armando A, 2005, CAV 05
   Armando A., 2009, J APPL NONCLASSICAL, V19, P403
   Armando A, 2008, INT J INF SECUR, V7, P3, DOI 10.1007/s10207-007-0041-y
   Armando A, 2007, 20TH IEEE COMPUTER SECURITY FOUNDATIONS SYMPOSIUM (CSFS20), PROCEEDINGS, P385, DOI 10.1109/CSF.2007.24
   Armando A, 2013, COMPUT SECUR, V33, P41, DOI 10.1016/j.cose.2012.08.007
   Armando A, 2012, LECT NOTES COMPUT SC, V7214, P267, DOI 10.1007/978-3-642-28756-5_19
   Armando A, 2010, LECT NOTES COMPUT SC, V5983, P66
   Arsac W., 2011, LNCS
   AVANTSSAR, 2008, DEL 2 1 REQ MOD ASLA
   Bansal C, 2012, P IEEE CSFW, P247, DOI 10.1109/CSF.2012.27
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Blanchet B, 2001, P IEEE CSFW, P82, DOI 10.1109/CSFW.2001.930138
   Boichut Y., 2004, P AUT VER INF STAT S
   Bortolozzo M, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P260, DOI 10.1145/1866307.1866337
   Pimentel JCL, 2008, COMPUT SIST, V12, P89
   Compagna L, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P455, DOI 10.1109/ICST.2013.63
   Cortier V., 2014, FORMAL MODELS TECHNI
   Cortier V, 2006, J COMPUT SECUR, V14, P1, DOI 10.3233/JCS-2006-14101
   Cremers C., SCYTHER DOCUMENTATIO
   Cremers CJF, 2009, LECT NOTES COMPUT SC, V5458, P70
   Dalai Nitish, 2010, International Journal of Communications, Networks and System Sciences, V3, P779, DOI 10.4236/ijcns.2010.310104
   Dilloway C., 2007, P WORKSH ISS THEOR S
   DOLEV D, 1983, IEEE T INFORM THEORY, V29, P198, DOI 10.1109/TIT.1983.1056650
   Donovan B., 1999, P WORKSH FORM METH S
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Focardi Riccardo, 2011, Foundations of Security Analysis and Design VI. FOSAD Tutorial Lectures: LNCS 6858, P35, DOI 10.1007/978-3-642-23082-0_2
   Kautz H, 1996, MOR KAUF R, P374
   Lowe G., 1998, Journal of Computer Security, V6, P53
   Mödersheim S, 2009, LECT NOTES COMPUT SC, V5789, P337, DOI 10.1007/978-3-642-04444-1_21
   OASIS Consortium, 2008, SAML V2 0 TECHN OV
   RSA Security Inc, 2004, PKCS 11 CRYPT TOK IN
   Shmatikov V, 2002, THEOR COMPUT SCI, V283, P419, DOI 10.1016/S0304-3975(01)00141-4
   Steel G., 2011, FORMAL ANAL SECURITY
   Turuani M, 2006, LECT NOTES COMPUT SC, V4098, P277, DOI 10.1007/11805618_21
   Viganò L, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P497, DOI 10.1109/ICST.2013.75
NR 44
TC 15
Z9 18
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2016
VL 18
IS 2
BP 187
EP 204
DI 10.1007/s10009-015-0385-y
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK5QQ
UT WOS:000374975200005
DA 2024-07-18
ER

PT J
AU Ernst, G
   Pfähler, J
   Schellhorn, G
   Haneberg, D
   Reif, W
AF Ernst, Gidon
   Pfaehler, Joerg
   Schellhorn, Gerhard
   Haneberg, Dominik
   Reif, Wolfgang
TI KIV: overview and VerifyThis competition
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Interactive theorem proving; Verification challenge; KIV; Separation
   logic
AB Members of our research group participated in the VerifyThis competition at FM 2012 in Paris using the interactive specification and verification system KIV. In this article we describe the KIV verification system and its latest additions. We discuss our solutions to the three VerifyThis problems and which features of KIV were used in solving them. We also report on our findings from performing the proofs.
C1 [Ernst, Gidon; Pfaehler, Joerg; Schellhorn, Gerhard; Haneberg, Dominik; Reif, Wolfgang] Univ Augsburg, Inst Software & Syst Engn, D-86159 Augsburg, Germany.
C3 University of Augsburg
RP Pfähler, J (corresponding author), Univ Augsburg, Inst Software & Syst Engn, D-86159 Augsburg, Germany.
EM ernst@informatik.uni-augsburg.de;
   joerg.pfaehler@informatik.uni-augsburg.de;
   schellhorn@informatik.uni-augsburg.de;
   haneberg@informatik.uni-augsburg.de; reif@informatik.uni-augsburg.de
OI Reif, Wolfgang/0000-0002-4086-0043; Ernst, Gidon/0000-0002-3289-5764
CR Aehlig K, 2008, LECT NOTES COMPUT SC, V5170, P39, DOI 10.1007/978-3-540-71067-7_8
   [Anonymous], 1993, Program Verification: Fundamental Issues in Computer Science, DOI [10.1090/psapm/019/0235771, DOI 10.1090/PSAPM/019/0235771]
   [Anonymous], THESIS U AUGSBURG
   Bäumler S, 2011, FORM ASP COMPUT, V23, P91, DOI 10.1007/s00165-009-0130-y
   Borger E., 2003, ABSTRACT STATE MACHI
   Bormer T., 2011, INT C FORMAL VERIFIC, P3, DOI 10.1007/978-3-642-31762-0_2
   Burstall R. M., 1974, INF PROCESS, V74, P309
   Derrick J, 2008, LECT NOTES COMPUT SC, V5051, P78, DOI 10.1007/978-3-540-68863-1_6
   Ernst Gidon, 2014, Verified Software: Theories, Tools, Experiments. 5th International Conference, VSTTE 2013. Revised Selected Papers: LNCS 8164, P242, DOI 10.1007/978-3-642-54108-7_13
   Fuchss T., 1995, SPRINGER LNCS, V1009
   Grandy H., 2008, FM 2008 15 INT S FOR, V5014
   Gurevich Y., 1993, SPECIFICATION VALIDA, P9
   Haneberg D., 2006, ELECT NOTES THEORETI
   Haneberg D., 2011, INT J SOFTW INF, V5, P159
   Harel David, 2001, Handbook of philosophical logic, V4, P99, DOI 10.1007/978-94-017-0456-4_2
   Huisman M., 2012, CEUR WORKSHOP P, V873
   Jones C. B., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P321
   Manber Udi., 1990, SODA 90, P319
   MANNA Z, 1978, COMMUN ACM, V21, P159, DOI 10.1145/359340.359353
   MOSZKOWSKI B, 1985, COMPUTER, V18, P10, DOI 10.1109/MC.1985.1662795
   Owre S., 1996, COMPUTER AIDED VERIF, V1102
   Pfahler Jorg, 2013, Hardware and Software: Verification and Testing. 9th International Haifa Verification Conference, HVC 2013. Proceedings: LNCS 8244, P214, DOI 10.1007/978-3-319-03077-7_15
   Qiwen Xu, 1997, Formal Aspects of Computing, V9, P149, DOI 10.1007/BF01211617
   Reif W, 1998, APPL LOG SER, V9, P13
   Reynolds JC, 2002, IEEE S LOG, P55, DOI 10.1109/LICS.2002.1029817
   Robinson P. J., 1993, Journal of Logic and Computation, V3, P47, DOI 10.1093/logcom/3.1.47
   Schellhorn G, 1998, APPL LOG SER, V10, P165
   Schellhorn G., 2011, 18 INT S TEMPORAL RE, P99
   Schellhorn G, 2009, LECT NOTES COMPUT SC, V5115, P93, DOI 10.1007/978-3-642-11447-2_7
   Schierl A, 2009, LECT NOTES COMPUT SC, V5850, P190, DOI 10.1007/978-3-642-05089-3_13
   Szabo M. E., 1969, The collected papers of Gerhard Gentzen
   Tofan Bogdan, 2011, Theoretical Aspects of Computing - ICTAC 2011. Proceedings 8th International Colloquium, P239, DOI 10.1007/978-3-642-23283-1_16
   Tofan B., 2011, KARLSRUHE REPORTS IN
   Tuerk T., 2010, Verified Software-Theories, Tools, Experiments, VSTTE, P29
NR 34
TC 25
Z9 27
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2015
VL 17
IS 6
BP 677
EP 694
DI 10.1007/s10009-014-0308-3
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT3DN
UT WOS:000362687300003
DA 2024-07-18
ER

PT J
AU Reijsbergen, D
   de Boer, PT
   Scheinhardt, W
   Haverkort, B
AF Reijsbergen, Daniel
   de Boer, Pieter-Tjerk
   Scheinhardt, Werner
   Haverkort, Boudewijn
TI On hypothesis testing for statistical model checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Statistical model checking; Hypothesis testing; Probabilistic
   verification; Survey
AB Hypothesis testing is an important part of statistical model checking (SMC). It is typically used to verify statements of the form or , where is an unknown probability intrinsic to the system model and is a given threshold value. Many techniques for this have been introduced in the SMC literature. We give a comprehensive overview and comparison of these techniques, starting by introducing a framework in which they can all be described. We distinguish between three classes of techniques, differing in what type of output correctness guarantees they give when the true is very close to the threshold . For each technique, we show how to parametrise it in terms of quantities that are meaningful to the user. Having parametrised them consistently, we graphically compare the boundaries of their decision thresholds, and numerically compare the correctness, power and efficiency of the tests. A companion website allows users to get more insight in the properties of the tests by interactively manipulating the parameters.
C1 [Reijsbergen, Daniel] Univ Edinburgh, Edinburgh, Midlothian, Scotland.
   [de Boer, Pieter-Tjerk; Scheinhardt, Werner; Haverkort, Boudewijn] Univ Twente, NL-7500 AE Enschede, Netherlands.
C3 University of Edinburgh; University of Twente
RP Reijsbergen, D (corresponding author), Univ Edinburgh, Edinburgh, Midlothian, Scotland.
EM dreijsbe@inf.ed.ac.uk
OI Haverkort, Boudewijn/0000-0002-0654-0740; Scheinhardt,
   Werner/0000-0002-6280-814X
CR [Anonymous], 2005, THESIS CARNEGIE MELL
   Aziz Adnan, 2000, ACM Trans. Comput. Logic, V1, P162, DOI DOI 10.1145/343369.343402
   Aziz K., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P269
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Baier C, 2000, LECT NOTES COMPUT SC, V1853, P780
   Ballarini P., 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P143, DOI 10.1109/QEST.2011.24
   Bengtsson J., 1996, Hybrid Systems III. Verification and Control, P232, DOI 10.1007/BFb0020949
   Chong E.K., 2004, An Introduction to Optimization
   CHOW YS, 1965, ANN MATH STAT, V36, P457, DOI 10.1214/aoms/1177700156
   DARLING DA, 1968, P NATL ACAD SCI USA, V61, P804, DOI 10.1073/pnas.61.3.804
   El Rabih D, 2009, LECT NOTES COMPUT SC, V5799, P120, DOI 10.1007/978-3-642-04761-9_11
   Fishman George S., 2001, SPRING S OPERAT RES, DOI 10.1007/978-1-4757-3552-9
   GLYNN PW, 1989, P IEEE, V77, P14, DOI 10.1109/5.21067
   GRUBBS FE, 1949, ANN MATH STAT, V20, P242, DOI 10.1214/aoms/1177730033
   HAAS PJ, 1989, IEEE T SOFTWARE ENG, V15, P381, DOI 10.1109/32.16599
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   Hérault T, 2006, INT CONF QUANT EVAL, P129
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Jeffreys H., 1998, The theory of probability
   Jegourel C, 2012, LECT NOTES COMPUT SC, V7214, P498, DOI 10.1007/978-3-642-28756-5_37
   Jha SK, 2009, LECT N BIOINFORMAT, V5688, P218, DOI 10.1007/978-3-642-03845-7_15
   Katoen JP, 2005, INT CONF QUANT EVAL, P243, DOI 10.1109/QEST.2005.2
   KWIATKOWSKA MARTA., 2002, COMPUT PERFORM, V2324, P113, DOI DOI 10.1007/3-540-46029-2_13
   LAI TL, 1988, ANN STAT, V16, P856, DOI 10.1214/aos/1176350840
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Matthes K., 1964, T 3 PRAG C INF THEOR, P513
   Reijsbergen D., 2013, THESIS U TWENTE ENSC
   Reijsbergen D., SEQUENTIAL IN PRESS
   Ripley Brian D, 2009, Stochastic simulation, V316
   Ross S. M., 1996, Stochastic processes, V2nd
   Sebastio S., 2013, P 7 INT C PERF EV ME
   Sen K, 2005, LECT NOTES COMPUT SC, V3576, P266
   Sen K, 2005, INT CONF QUANT EVAL, P251, DOI 10.1109/QEST.2005.42
   Sen K, 2004, LECT NOTES COMPUT SC, V3114, P202
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   Younes H. L. S., 2006, International Journal on Software Tools for Technology Transfer, V8, P216, DOI 10.1007/s10009-005-0187-8
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
   Younes HLS, 2006, INFORM COMPUT, V204, P1368, DOI 10.1016/j.ic.2006.05.002
   Younes HLS, 2011, LECT NOTES COMPUT SC, V6527, P144, DOI 10.1007/978-3-642-19829-8_10
   Younes HLS, 2006, LECT NOTES COMPUT SC, V3855, P142
NR 42
TC 14
Z9 14
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2015
VL 17
IS 4
BP 377
EP 395
DI 10.1007/s10009-014-0350-1
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM2BV
UT WOS:000357485500002
OA Green Published
DA 2024-07-18
ER

PT J
AU Salva, S
   Zafimiharisoa, SR
AF Salva, Sebastien
   Zafimiharisoa, Stassia R.
TI APSET, an Android aPplication SEcurity Testing tool for detecting
   intent-based vulnerabilities
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Security testing; Model-based testing; Android applications; Intent
   mechanism
AB The Android messaging system, called intent, is a mechanism that ties components together to build applications for smartphones. Intents are kinds of messages composed of actions and data, sent by a component to another component to perform several operations, e.g. launching a user interface. The intent mechanism offers a lot of flexibility for developing Android applications, but it might also be used as an entry point for security attacks. The latter can be easily sent with intents to components, that can indirectly forward attacks to other components and so on. In this context, this paper proposes APSET, a tool for Android aPplication SEcurity Testing, which aims at detecting intent-based vulnerabilities. It takes as inputs Android applications and intent-based vulnerabilities formally expressed with models called vulnerability patterns. Then, and this is the originality of our approach, class diagrams and partial specifications are automatically generated from applications with algorithms reflecting some knowledge of the Android documentation. These partial specifications avoid false positives and refine the test result with special verdicts notifying that a component is not compliant to its specification. Furthermore, we propose a test case execution framework which supports the receipt of any exception, the detection of application crashes, and provides a final XML test report detailing the test case verdicts. The vulnerability detection effectiveness of APSET is evaluated with experimentations on randomly chosen Android applications of the Android Market.
C1 [Salva, Sebastien] Univ Auvergne, LIMOS, CNRS, UMR 6158, Clermont Ferrand, France.
   [Zafimiharisoa, Stassia R.] Univ Blaise Pascal, CNRS, LIMOS, UMR 6158, Aubiere, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite Clermont
   Auvergne (UCA); Centre National de la Recherche Scientifique (CNRS);
   Universite Clermont Auvergne (UCA)
RP Zafimiharisoa, SR (corresponding author), Univ Blaise Pascal, CNRS, LIMOS, UMR 6158, Aubiere, France.
EM s.zafimiharisoa@openium.fr
CR Amalfitano D., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P252, DOI 10.1109/ICSTW.2011.77
   [Anonymous], 2012, P 19 NETW DISTR SYST
   Benli S., 2012, Proceedings of the 2012 Ninth International Conference on Information Technology: New Generations (ITNG), P263, DOI 10.1109/ITNG.2012.45
   Bugiel S, 2012, NDSS, V17, P19
   Chaudhuri Avik., 2009, Proceedings of the ACM SIGPLAN Fourth Workshop on Programming Languages and Analysis for Security, PLAS '09, P1, DOI [DOI 10.1145/1554339.1554341, 10.1145/1667209.1667211]
   Chin E., 2011, P 9 INT C MOB SYST A
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cuppens F, 2005, 18th IEEE Computer Security Foundations Workshop, Proceedings, P186, DOI 10.1109/CSFW.2005.20
   Davi L, 2011, LECT NOTES COMPUT SC, V6531, P346
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Frantzen L, 2005, LECT NOTES COMPUT SC, V3395, P1
   Hurd J., 2012, P HIGH CONF SOFTW SY
   Jiagui Zhong, 2012, 2012 International Conference on Computer Science and Service System (CSSS), P871, DOI 10.1109/CSSS.2012.222
   Kantola David., 2012, Proceedings of the second ACM workshop on Security and privacy in smartphones and mobile devices, P69
   Kiezun A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P105
   Maji AK., 2012, 2012 42nd Annual IEEE/IFIP International Conference on, P1
   Marback A, 2013, SOFTWARE PRACT EXPER, V43, P241, DOI 10.1002/spe.2111
   Marchand H., 2009, TESTCOM FATES 2009
   Mouelhi T., 2007, INT S SOFTW REL ENG
   Mouelhi T, 2008, LECT NOTES COMPUT SC, V5301, P537, DOI 10.1007/978-3-540-87875-9_38
   Ongtang M, 2009, 25TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, P340, DOI 10.1109/ACSAC.2009.39
   OWASP, 2003, OW TEST GUID V3 0 PR
   Sen K., 2003, WORKSHOP RUNTIME VER, P162, DOI [10.1016/S1571-0661(04)81051-X, DOI 10.1016/S1571-0661(04)81051-X]
   Wei XT, 2012, MOBICOM 12: PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P137
   Yiming Jing, 2012, Advances in Information and Computer Security. 7th International Workshop on Security, IWSEC 2012. Proceedings, P1, DOI 10.1007/978-3-642-34117-5_1
   Zafimiharisoa S. R., 2012, 7 INT C SOFTW ENG AD, P643
NR 27
TC 14
Z9 14
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2015
VL 17
IS 2
BP 201
EP 221
DI 10.1007/s10009-014-0303-8
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7NI
UT WOS:000355682200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nilsson, A
   Castro, LM
   Rivas, S
   Arts, T
AF Nilsson, Agneta
   Castro, Laura M.
   Rivas, Samuel
   Arts, Thomas
TI Assessing the effects of introducing a new software development process:
   a methodological description
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software development process; Process improvement; Process change;
   Change assessment
ID TEST-DRIVEN DEVELOPMENT; USER INVOLVEMENT; IMPLEMENTATION; TECHNOLOGY;
   PARTICIPATION; INNOVATIONS; QUICKCHECK; ADOPTION
AB In this article, we report from a 22-months long action research study in which we evaluate the usefulness of a set of software development tools in an industrial setting, a small software company. We focus on how developers in the industry use and adopt these tools, what expectations they have on them, how the tools can be improved, and how the adoption process itself can be improved. We describe these change processes from a methodological perspective, how we monitored the processes, how we reviewed the outcomes, and the strategies that we applied. We show how the processes evolved, intermediate results, and the steps that were taken along the way based on the outcomes. We believe that the described study may inspire other tool-developers and/or researchers to organize similar studies to further our understanding of the complex processes involved in the adoption of software development tools in industry.
C1 [Nilsson, Agneta] Univ Gothenburg, Gothenburg, Sweden.
   [Castro, Laura M.] Univ A Coruna, La Coruna, Spain.
   [Rivas, Samuel] Interoud SL, La Coruna, Spain.
   [Arts, Thomas] Quviq AB, Gothenburg, Sweden.
C3 University of Gothenburg; Universidade da Coruna
RP Castro, LM (corresponding author), Univ A Coruna, La Coruna, Spain.
EM agneta.nilsson@gu.se; lcastro@udc.es; samuel.rivas@interoud.com;
   thomas.arts@quviq.com
RI Castro, Laura M./A-6404-2011
OI Castro, Laura M./0000-0002-3028-1523
CR Abrahamsson P., 2001, Scandinavian Journal of Information Systems, V13, P69
   Abrahamsson P., 2000, Proceedings of the 26th Euromicro Conference. EUROMICRO 2000. Informatics: Inventing the Future, P246, DOI 10.1109/EURMIC.2000.874425
   [Anonymous], 2007, PROPERTY BASED TESTI
   Arts T., 2006, TESTING TELECOMS SOF, P2
   BARKI H, 1994, MIS QUART, V18, P59, DOI 10.2307/249610
   BARONAS AMK, 1988, MIS QUART, V12, P111, DOI 10.2307/248811
   Bartunek J.M., 1996, INSIDER OUTSIDER TEA
   Baskerville RL, 1996, J INFORM TECHNOL, V11, P235, DOI 10.1080/026839696345289
   BEATH CM, 1991, MIS QUART, V15, P355, DOI 10.2307/249647
   Castro D, 2011, ELECTRON NOTES THEOR, V271, P23, DOI 10.1016/j.entcs.2011.02.009
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Coghlan D., 2001, DOING ACTION RES YOU
   Cooperrider D. L., 2005, BERRETT KOEHLER SERI
   Cooperrider D.L., 1998, Appreciative Inquiry
   Damm L.-O., 2006, Software Process Improvement and Practice, V11, P47, DOI 10.1002/spip.253
   Dawson P., 1994, ORG CHANGE PROCESSUA
   Dawson P.M., 1997, SCAND J MANAG, V13, P389
   Favre J.-M., 2003, P 3 INT WORKSHOP ADO, P81
   Fichman RG, 1999, INFORM SYST RES, V10, P255, DOI 10.1287/isre.10.3.255
   Fredlund LÅ, 2007, ACM SIGPLAN NOTICES, V42, P125, DOI 10.1145/1291220.1291171
   Gable GG, 1994, EUR J INFORM SYST, V3, P112, DOI 10.1057/ejis.1994.12
   Geras A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P405, DOI 10.1109/METRIC.2004.1357925
   Ginzberg MJ, 1981, MIS QUART, V5, P47, DOI 10.2307/249223
   GINZBERG MJ, 1981, MANAGE SCI, V27, P459, DOI 10.1287/mnsc.27.4.459
   Hardgrave BC, 2003, J MANAGE INFORM SYST, V20, P123
   Hughes J, 2007, LECT NOTES COMPUT SC, V4354, P1
   Janzen D, 2005, COMPUTER, V38, P43, DOI 10.1109/MC.2005.314
   JARVENPAA SL, 1991, MIS QUART, V15, P205, DOI 10.2307/249382
   Kotter JR, 2007, HARVARD BUS REV, V85, P96
   Kwon T., 1987, Unifying the Fragmented Models of Information Systems Implementation: Critical Issues in Information Systems Research
   Lai VS, 1997, INFORM MANAGE, V32, P187, DOI 10.1016/S0378-7206(97)00022-0
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   Li HQ, 2008, PEPM'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PARTIAL EVALUATION AND SEMANTICS-BASED PROGRAM MANIPULATION, P199, DOI 10.1145/1328408.1328437
   Lui KM, 2004, LECT NOTES COMPUT SC, V3092, P219
   Marchenko A, 2009, LECT NOTES BUS INF P, V31, P13
   Mathiassen L., 2002, Information Technology & People, V15, P321, DOI 10.1108/09593840210453115
   Melis M., 2006, Software Process Improvement and Practice, V11, P345, DOI 10.1002/spip.286
   Mohr L. B., 1982, Explaining Organizational Behavior
   Nandhakumar J, 2005, J STRATEGIC INF SYST, V14, P221, DOI 10.1016/j.jsis.2005.04.002
   Oram A.Wilson., 2010, Making Software: What Really Works, and Why We Believe It
   Patton Q. M., 1987, How to use qualitative methods in evaluation (No. 4)
   Pettigrew A., 1997, Scandinavian Journal of Management, V13, P337, DOI DOI 10.1016/S0956-5221(97)00020-1
   Pettigrew AM, 2001, ACAD MANAGE J, V44, P697, DOI 10.5465/3069411
   PRESCOTT MB, 1995, DATA BASE ADV INF SY, V26, P20
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Rogers EM, 2003, DIFFUSION INNOVATION
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Senapathi M, 2010, LECT NOTES BUS INF, V48, P226
   Sultan F, 2000, IEEE T ENG MANAGE, V47, P106, DOI 10.1109/17.820730
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   Umarji M., 2005, P 2005 WORKSHOP HUMA, V30, P1
   Weinberg G., 1997, Quality software management
   Yin R., 1994, CASE STUDY RES DESIG
NR 53
TC 7
Z9 7
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2015
VL 17
IS 1
BP 1
EP 16
DI 10.1007/s10009-013-0275-0
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7ND
UT WOS:000355681700001
DA 2024-07-18
ER

PT J
AU Ferrari, A
   Spagnolo, GO
   Martelli, G
   Menabeni, S
AF Ferrari, Alessio
   Spagnolo, Giorgio O.
   Martelli, Giacomo
   Menabeni, Simone
TI From commercial documents to system requirements: an approach for the
   engineering of novel CBTC solutions
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Product line engineering; CBTC; CENELEC; Formal methods; Constrained
   natural language; Experience report
AB Communications-based train control (CBTC) systems are the new frontier of automated train control and operation. Currently developed CBTC platforms are actually very complex systems including several functionalities, and every installed system, developed by a different company, varies in extent, scope, number, and even names of the implemented functionalities. International standards have emerged, but they remain at a quite abstract level, mostly setting terminology. This paper presents the results of an experience in defining a global model of CBTC, by mixing semiformal modelling and product line engineering. The effort has been based on an in-depth market analysis, not limiting to particular aspects but considering as far as possible the whole picture. The paper also describes a methodology to derive novel CBTC products from the global model, and to define system requirements for the individual CBTC components. To this end, the proposed methodology employs scenario-based requirements elicitation aided with rapid prototyping. To enhance the quality of the requirements, these are written in a constrained natural language (CNL), and evaluated with natural language processing (NLP) techniques. The final goal is to go toward a formal representation of the requirements for CBTC systems. The overall approach is discussed, and the current experience with the implementation of the method is presented. In particular, we show how the presented methodology has been used in practice to derive a novel CBTC architecture.
C1 [Ferrari, Alessio; Spagnolo, Giorgio O.] CNR, ISTI, Via G Moruzzi 1, I-56100 Pisa, Italy.
   [Martelli, Giacomo; Menabeni, Simone] Univ Florence, DSI, Florence, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); University
   of Florence
RP Ferrari, A (corresponding author), CNR, ISTI, Via G Moruzzi 1, I-56100 Pisa, Italy.
EM alessio.ferrari@isti.cnr.it; Spagnolo@isti.cnr.it;
   Martelli@dsi.unifi.it; Menabeni@dsi.unifi.it
RI Ferrari, Alessio/J-1155-2019; Spagnolo, Giorgio Oronzo/E-9661-2018
OI Ferrari, Alessio/0000-0002-0636-5663; Spagnolo, Giorgio
   Oronzo/0000-0002-7771-0882
CR [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2011, 622902 IEC
   [Anonymous], 2007, 622901 IEC
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Bitsch F., 2002, WORKSH SOFTW SPEC SA
   Bohn J., 2002, P C INT DES PROC TEC
   Boyd S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P339, DOI 10.1109/RE.2005.39
   Boyd S., 2007, P 13 INT WORK C REQ, P203
   Bucchiarone A., 2010, P 2010 ACM S APPL CO, P281
   CENELEC, 2011, 50128 CENELEC
   CENELEC, 2003, 50129 CENELEC
   CHASTEK G, 2001, CMUSEI2001TR001
   Denger C, 2003, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY & ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/SWSTE.2003.1245428
   Essame D., 2006, B 2007: Formal Specification and Development in B. 7th International Conference of B Users. Proceedings (Lecture Notes in Computer Science vol.4355), P252
   Fabbrini F, 2002, 26TH ANNUAL NASA GODDARD SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P97, DOI 10.1109/SEW.2001.992662
   Fantechi A, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P193, DOI 10.1109/SPLC.2008.45
   FANTECHI A, 1994, FORM METHOD SYST DES, V4, P243, DOI 10.1007/BF01384048
   Fantechi A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211619
   Fatwanto A, 2012, INT CONF COMP SCI ED, P1047, DOI 10.1109/ICCSE.2012.6295244
   Ferrari Alessio, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P34, DOI 10.1007/978-3-642-37422-7_3
   Ferrari A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P191, DOI 10.1109/RE.2012.6345803
   Ferrari A., 2013, Proceedings of the 17th International Software Product Line Conference, P116, DOI [10.1145/2491627.2491634, DOI 10.1145/2491627.2491634]
   Ferrari A, 2013, SCI COMPUT PROGRAM, V78, P828, DOI 10.1016/j.scico.2012.04.003
   Ferrari A, 2013, IEEE SOFTWARE, V30, P28, DOI 10.1109/MS.2013.44
   Gomaa H., 1983, SIGSOFT Software Engineering Notes, V8, P17, DOI 10.1145/1005959.1005964
   Grover C., 2000, P 3 INT WORKSH CONTR, P29
   Haifeng Wang, 2010, 2010 2nd International Conference on Industrial Mechatronics and Automation (ICIMA 2010), P453, DOI 10.1109/ICINDMA.2010.5538157
   Institute of Electrical and Electronics Engineers, 2004, 147412004 IEEE
   Jansen L., 1998, TECHNICAL ISSUES MOD
   Kuun E., 2004, APTA RAIL RAIL TRANS
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Nelken R., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P360
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pascoe R. D., 2009, IEEE VEHICULAR TECHN
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rampelli S., 2012, INT J ENG RES TECHNO
   Roos-Frantz F., 2012, THESIS U SEVILLE
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Schwitter R, 2002, 13TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P228
   Stover J. S., 2006, CITYFLO 650 SYSTEM O
   Sutcliffe A, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P320
   Tang W, 2010, 2 INT C COMP ENG TEC, V1
   ter Beek MH, 2011, SCI COMPUT PROGRAM, V76, P119, DOI 10.1016/j.scico.2010.07.002
   Wilson WM, 1997, PROC INT CONF SOFTW, P161, DOI 10.1145/253228.253258
   Yang C. S., 2008, P WCRR
   Yuan L., 2011, 2011 Tenth International Symposium on Autonomous Decentralized Systems (ISADS), P81, DOI 10.1109/ISADS.2011.17
NR 47
TC 8
Z9 8
U1 0
U2 8
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2014
VL 16
IS 6
BP 647
EP 667
DI 10.1007/s10009-013-0298-6
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HV
UT WOS:000209673400002
DA 2024-07-18
ER

PT J
AU Amat, N
   Dal Zilio, S
   Le Botlan, D
AF Amat, Nicolas
   Dal Zilio, Silvano
   Le Botlan, Didier
TI Leveraging polyhedral reductions for solving Petri net reachability
   problems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Petri nets; Structural reductions; Reachability; Concurrent places
AB We propose a new method that takes advantage of structural reductions to accelerate the verification of reachability properties on Petri nets. Our approach relies on a state space abstraction, called polyhedral abstraction, which involves a combination between structural reductions and sets of linear arithmetic constraints between the marking of places. We propose a new data structure, called a Token Flow Graph (TFG), that captures the particular structure of constraints occurring in polyhedral abstractions. We leverage TFGs to efficiently solve two reachability problems: first to check the reachability of a given marking and then to compute the concurrency relation of a net, that is, all pairs of places that can be marked together in some reachable marking. Our algorithms are implemented in a tool, called Kong, that we evaluate on a large collection of models used during the 2020 edition of the Model Checking Contest. Our experiments show that the approach works well, even when a moderate amount of reductions applies.
C1 [Amat, Nicolas; Dal Zilio, Silvano; Le Botlan, Didier] Univ Toulouse, LAAS, CNRS, INSA, Toulouse, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite Federale
   Toulouse Midi-Pyrenees (ComUE); Universite de Toulouse; Institut
   National des Sciences Appliquees de Toulouse
RP Amat, N (corresponding author), Univ Toulouse, LAAS, CNRS, INSA, Toulouse, France.
EM nicolas.amat@laas.fr
CR Amat N, 2022, FUND INFORM, V187, P103, DOI 10.3233/FI-222134
   Amat N, 2021, LECT NOTES COMPUT SC, V12864, P45, DOI 10.1007/978-3-030-84629-9_3
   Amat N, 2021, LECT NOTES COMPUT SC, V12734, P164, DOI 10.1007/978-3-030-76983-3_9
   Amparore E, 2019, LECT NOTES COMPUT SC, V11429, P50, DOI 10.1007/978-3-030-17502-3_4
   BERTHELOT G, 1987, LECT NOTES COMPUT SC, V254, P359
   Berthomieu B, 2020, INT J SOFTW TOOLS TE, V22, P163, DOI 10.1007/s10009-019-00519-1
   Berthomieu B, 2018, LECT NOTES COMPUT SC, V10869, P65, DOI 10.1007/978-3-319-94111-0_4
   Bonneland FM, 2019, J LOG ALGEBR METHODS, V102, P46, DOI 10.1016/j.jlamp.2018.09.002
   Bouvier P, 2021, LECT NOTES COMPUT SC, V12734, P339, DOI 10.1007/978-3-030-76983-3_17
   Bouvier P, 2020, LECT NOTES COMPUT SC, V12152, P3, DOI 10.1007/978-3-030-51831-8_1
   Garavel H, 2004, LECT NOTES COMPUT SC, V3116, P164
   Garavel H., 2020, 03087421 INR GREN RH
   Garavel H, 2019, J LOG ALGEBR METHODS, V104, P60, DOI 10.1016/j.jlamp.2018.11.005
   GIUA A, 1992, 1992 IEEE INTERNATIONAL CONFERENCE ON SYSTEMS, MAN, AND CYBERNETICS, VOLS 1 AND 2, P974, DOI 10.1109/ICSMC.1992.271666
   Hillah LM, 2010, LECT NOTES COMPUT SC, V6128, P318, DOI 10.1007/978-3-642-13675-7_20
   Hillah LM, 2017, LECT NOTES COMPUT SC, V10258, P125, DOI 10.1007/978-3-319-57861-3_9
   Hujsa T., 2020, 20278 LAASCNRS
   INRIA, 2020, CADP
   JANICKI R, 1984, THEOR COMPUT SCI, V29, P87, DOI 10.1016/0304-3975(84)90014-8
   Kovalyov A, 2000, HARDWARE DESIGN AND PETRI NETS, P107
   KOVALYOV AV, 1992, LECT NOTES COMPUT SC, V616, P299
   LAAS-CNRS, 2020, TIN TOOLB
   LIPTON RJ, 1975, COMMUN ACM, V18, P717, DOI 10.1145/361227.361234
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Semenov A., 1995, Proceedings of the ASP-DAC'95/CHDL'95/VLSI'95. Asia and South Pacific Design Automation Conference. IFIP International Conference on Computer Hardware Description Languages and their Applications. IFIP Interntional Conference on Very Large Scale Integration (IEEE Cat. No.95TH8102), P567, DOI 10.1109/ASPDAC.1995.486371
   Silva M., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P309
   Thierry-Mieg Y, 2020, LECT NOTES COMPUT SC, V12152, P303, DOI 10.1007/978-3-030-51831-8_15
   Wisniewski R, 2019, IEEE ACCESS, V7, P13510, DOI 10.1109/ACCESS.2019.2893284
   Wisniewski R, 2018, IEEE T CONTR SYST T, V26, P575, DOI 10.1109/TCST.2017.2692204
NR 29
TC 2
Z9 2
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2023
VL 25
IS 1
SI SI
BP 95
EP 114
DI 10.1007/s10009-022-00694-8
EA DEC 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9R7IA
UT WOS:000903179900001
DA 2024-07-18
ER

PT J
AU Berti, A
   van der Aalst, WMP
AF Berti, Alessandro
   van der Aalst, Wil M. P.
TI OC-PM: analyzing object-centric event logs and process models
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Object-centric process mining; Object-centric event logs; Object-centric
   process discovery; Object-centric conformance checking
AB Object-centric process mining is a novel branch of process mining that aims to analyze event data from mainstream information systems (such as SAP) more naturally, without being forced to form mutually exclusive groups of events with the specification of a case notion. The development of object-centric process mining is related to exploiting object-centric event logs, which includes exploring and filtering the behavior contained in the logs and constructing process models which can encode the behavior of different classes of objects and their interactions (which can be discovered from object-centric event logs). This paper aims to provide a broad look at the exploration and processing of object-centric event logs to discover information related to the lifecycle of the different objects composing the event log. Also, comprehensive tool support (OC-PM) implementing the proposed techniques is described in the paper.
C1 [Berti, Alessandro; van der Aalst, Wil M. P.] Rhein Westfal TH Aachen, Proc & Data Sci Grp, Ahornstr 55, D-52074 Aachen, Nrw, Germany.
C3 RWTH Aachen University
RP Berti, A (corresponding author), Rhein Westfal TH Aachen, Proc & Data Sci Grp, Ahornstr 55, D-52074 Aachen, Nrw, Germany.
EM a.berti@pads.rwth-aachen.de; wvdaalst@pads.rwth-aachen.de
RI van der Aalst, Wil/G-1248-2011
OI van der Aalst, Wil/0000-0002-0955-6940
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Adams JN, 2022, LECT NOTES COMPUT SC, V13288, P139, DOI 10.1007/978-3-031-06653-5_8
   Beheshti Seyed-Mehdi-Reza, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P281, DOI 10.1007/978-3-642-23059-2_22
   Berti Alessandro, 2021, Transactions on Petri Nets and Other Models of Concurrency XV (ToPNoC). Selected Papers from Petri Nets 2019 and ACSD 2019. Lecture Notes of Computer Science (LNCS 12530), P1, DOI 10.1007/978-3-662-63079-2_1
   Berti A., 2021, OCEL STANDARD, V3098, P19
   Berti A., 2018, INT S DATA DRIVEN PR, V2270, P60
   Berti A., 2020, Lecture Notes in Business Information Processing, VVolume 379, DOI DOI 10.1007/978-3-030-46633-6_2
   Calvanese D, 2016, LECT NOTES BUS INF P, V256, P140, DOI 10.1007/978-3-319-42887-1_12
   Eck Maikel L., 2019, Business Process Management Workshops. BPM 2018 International Workshops. Revised Papers. Lecture Notes in Business Information Processing (LNBIP 342), P18, DOI 10.1007/978-3-030-11641-5_2
   Esser S, 2021, J DATA SEMANT, V10, P109, DOI 10.1007/s13740-021-00122-1
   Esser S, 2019, LECT NOTES BUS INF P, V362, P632, DOI 10.1007/978-3-030-37453-2_51
   Fahland D, 2019, LECT NOTES COMPUT SC, V11522, P3, DOI 10.1007/978-3-030-21571-2_1
   Ghahfarokhi AF, 2021, COMM COM INF SC, V1450, P169, DOI 10.1007/978-3-030-85082-1_16
   Ghilardi S, 2020, LECT NOTES COMPUT SC, V12168, P55, DOI 10.1007/978-3-030-58666-9_4
   Herzberg N, 2015, DATA KNOWL ENG, V98, P144, DOI 10.1016/j.datak.2015.07.008
   Jalali Amin, 2021, Process Mining Workshops. ICPM 2020 International Workshops. Revised Selected Papers. Lecture Notes in Business Information Processing (LNBIP 406), P273, DOI 10.1007/978-3-030-72693-5_21
   Li CY, 2019, IEEE T SERV COMPUT, V12, P941, DOI 10.1109/TSC.2016.2645690
   Li GM, 2018, LECT NOTES BUS INF P, V317, P182, DOI 10.1007/978-3-319-92901-9_16
   Li GM, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P48, DOI 10.1145/3297280.3297287
   Lu XX, 2015, IEEE T SERV COMPUT, V8, P861, DOI 10.1109/TSC.2015.2474358
   Nooijen EHJ, 2013, LECT NOTES BUS INF P, V132, P316
   PETERSON JL, 1980, INFORM PROCESS LETT, V11, P40, DOI 10.1016/0020-0190(80)90032-0
   Steinau S, 2018, LECT NOTES COMPUT SC, V10816, P53, DOI 10.1007/978-3-319-91563-0_4
   Steinau S, 2017, CONF BUS INFORM, V1, P33, DOI 10.1109/CBI.2017.53
   van der Aalst W., 2016, Process Mining: Data Science in Action, DOI DOI 10.1007/978-3-662-49851-4
   van der Aalst WMP, 2020, FUND INFORM, V175, P1, DOI 10.3233/FI-2020-1946
   van der Aalst WMP, 2019, LECT NOTES COMPUT SC, V11724, P3, DOI 10.1007/978-3-030-30446-1_1
   Winter K, 2020, INFORM SYST, V89, DOI 10.1016/j.is.2019.101484
NR 27
TC 3
Z9 3
U1 5
U2 19
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2023
VL 25
IS 1
SI SI
BP 1
EP 17
DI 10.1007/s10009-022-00668-w
EA SEP 2022
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9R7IA
UT WOS:000855618000002
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Taylor, RG
   Foster, M
   North, S
AF Taylor, Ramsay G.
   Foster, Michael
   North, Siobhan
TI An automated framework for verifying or refuting trace properties of
   extended finite state machines
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software verification; Extended finite state machines; Model checking;
   Theorem proving
AB Model checkers and interactive proof assistants are both used in the assurance of critical systems. Where theorem proving involves the use of axioms and inference rules to mathematically prove defined properties, model checkers can be used to provide concrete counterexamples to refute them. Thus, the two techniques can be thought of as complementary, and it is helpful to use both in tandem to take advantage of their respective strengths. However, this requires us to translate our system model and our desired properties between the two tools which is a time-consuming and error prone process if done manually. The key contribution of this work is a set of automated tools to translate between the Isabelle/HOL proof assistant and the Symbolic Analysis Laboratory (SAL) model checker. We focus on systems specified as extended finite state machines (EFSMs) and on properties specified in linear temporal logic (LTL). We present our representations in the two tools and demonstrate the applicability of our system with respect to an academic example and two realistic case studies. This is a significant contribution to broadening the applicability of these formal approaches, since it allows two powerful verification tools to be easily used in tandem without the risk of human error.
C1 [Taylor, Ramsay G.; Foster, Michael; North, Siobhan] Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
C3 University of Sheffield
RP Taylor, RG (corresponding author), Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
EM r.g.taylor@sheffield.ac.uk; m.foster@sheffield.ac.uk;
   s.north@sheffield.ac.uk
RI North, Siobhan/R-3015-2016
OI North, Siobhan/0000-0002-8478-8960
CR Avellaneda F, 2018, LECT NOTES COMPUT SC, V10951, P93, DOI 10.1007/978-3-319-95582-7_6
   Blanchette Jasmin Christian, 2012, Interactive Theorem Proving. Proceedings of the Third International Conference, ITP 2012, P345, DOI 10.1007/978-3-642-32347-8_24
   Blanchette JC, 2013, LECT NOTES COMPUT SC, V8152, P245, DOI 10.1007/978-3-642-40885-4_17
   Blanchette JC, 2010, LECT NOTES COMPUT SC, V6172, P131, DOI 10.1007/978-3-642-14052-5_11
   Bochvar DA., 1981, History and Philosophy of Logic, V2, P87, DOI [10.1080/01445348108837023, DOI 10.1080/01445348108837023]
   Böhme S, 2010, LECT NOTES ARTIF INT, V6173, P107, DOI 10.1007/978-3-642-14203-1_9
   Borger E., 2003, ABSTRACT STATE MACHI, DOI [10.1007/978-3-642-18216-7, DOI 10.1007/978-3-642-18216-7]
   Bove A, 2009, LECT NOTES COMPUT SC, V5674, P73, DOI 10.1007/978-3-642-03359-9_6
   Bulwahn Lukas, 2012, Lecture Notes in Computer Science, P92
   Cavada R, 2014, LECT NOTES COMPUT SC, V8559, P334, DOI 10.1007/978-3-319-08867-9_22
   CHENG KT, 1993, ACM IEEE D, P86
   Chlipala A, 2013, Certified programming with dependent types
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   de Moura L, 2004, LECT NOTES COMPUT SC, V3114, P496
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   de Moura L, 2015, LECT NOTES ARTIF INT, V9195, P378, DOI 10.1007/978-3-319-21401-6_26
   Derrick J, 2011, FORM ASP COMPUT, V23, P43, DOI 10.1007/s00165-009-0126-7
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Ellis C., 2014, BYPASSING 3 DEGREE P
   Ellson J, 2002, LECT NOTES COMPUT SC, V2265, P483
   Esparza Javier, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P463, DOI 10.1007/978-3-642-39799-8_31
   Finkbeiner B, 2015, LECT NOTES COMPUT SC, V9206, P30, DOI 10.1007/978-3-319-21690-4_3
   Foster M., 2020, ARCH FORMAL PROOFS
   Foster M., ARCH FORMAL PROOFS
   Foster M., 2021, EFSM SAL
   Foster M, 2019, LECT NOTES COMPUT SC, V11724, P257, DOI 10.1007/978-3-030-30446-1_14
   Foster M, 2018, LECT NOTES COMPUT SC, V11232, P373, DOI 10.1007/978-3-030-02450-5_22
   Foster Michael, 2020, PhD thesis
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Lochbihler A, 2009, LECT NOTES COMPUT SC, V5674, P310, DOI 10.1007/978-3-642-03359-9_22
   Lorenzoli D., 2006, P INT WORKSH DYN AN, P25
   MEALY GH, 1955, AT&T TECH J, V34, P1045, DOI 10.1002/j.1538-7305.1955.tb03788.x
   Nipkow T., 2002, LECT NOTES COMPUTER, V2283, DOI [10.1007/3-540-45949-9, DOI 10.1007/3-540-45949-9]
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Popescu A., LINEAR TEMPORAL LOGI
   Rosu G, 2016, LECT NOTES COMPUT SC, V10012, P333, DOI [10.1007/978-3-319-46982-9_21, 10.1007/s10703-018-0321-3]
   Schimpf A, 2009, LECT NOTES COMPUT SC, V5674, P424, DOI 10.1007/978-3-642-03359-9_29
   Sickert S., 2016, LINEAR TEMPORAL LOGI
   Strobl F., 1999, SPECIFCATION ELEVATO
   Walkinshaw Neil, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P248, DOI 10.1109/ASE.2008.35
   Walkinshaw N, 2016, EMPIR SOFTW ENG, V21, P811, DOI 10.1007/s10664-015-9367-7
NR 42
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2022
VL 24
IS 6
SI SI
BP 949
EP 972
DI 10.1007/s10009-022-00666-y
EA JUL 2022
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8H5UG
UT WOS:000832799500001
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Rockai, P
   Barnat, J
AF Rockai, Petr
   Barnat, Jiri
TI DivSIM , an interactive simulator for LLVM bitcode
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Simulation; Model checking; Counterexample; Parallelism; Abstract
   interpretation; Symbolic execution; LLVM
ID MODEL CHECKING
AB In this paper, we introduce an interactive simulator for programs in the form of LLVM bitcode. The main features of the simulator include precise control over thread scheduling, automatic checkpoints and reverse stepping, support for source-level information about functions and variables in C and C++ programs and structured heap visualisation. Additionally, DivSIM is compatible with DiVM (DIVINE VM) hypercalls, which makes it possible to load, simulate and analyse counterexamples from an existing model checker, and with abstract bitcode generated by LART (LLVM Abstraction and Refinement Tool), making it suitable for direct analysis of abstract and/or symbolic programs and counterexamples.
C1 [Rockai, Petr; Barnat, Jiri] Masaryk Univ, Fac Informat, Brno, Czech Republic.
C3 Masaryk University Brno
RP Rockai, P (corresponding author), Masaryk Univ, Fac Informat, Brno, Czech Republic.
EM xrockai@fi.muni.cz
OI Barnat, Jiri/0000-0003-2044-2861
CR Abdulla PA, 2017, ACTA INFORM, V54, P789, DOI 10.1007/s00236-016-0275-0
   Ball T, 2004, LECT NOTES COMPUT SC, V2999, P1
   Ball T, 2003, ACM SIGPLAN NOTICES, V38, P97, DOI 10.1145/640128.604140
   Barnat J, 2012, LECT NOTES COMPUT SC, V7437, P78, DOI 10.1007/978-3-642-32469-7_6
   Basu S., 2012, GETTING ROOT PROBLEM
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Chalupa Marek, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12079), P413, DOI 10.1007/978-3-030-45237-7_31
   Groce A, 2004, LECT NOTES COMPUT SC, V3114, P453
   Groce A, 2003, LECT NOTES COMPUT SC, V2648, P121
   Günther H, 2016, LECT NOTES COMPUT SC, V9636, P954, DOI 10.1007/978-3-662-49674-9_69
   Kleiman Ruben, 1993, TALES DEBUGGING FRON
   Kokologiannakis M, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P96, DOI 10.1145/3314221.3314609
   Lauko H, 2019, LECT NOTES COMPUT SC, V11429, P204, DOI 10.1007/978-3-030-17502-3_14
   Lauko H, 2018, LECT NOTES COMPUT SC, V11187, P313, DOI 10.1007/978-3-030-02508-3_17
   Lee K., 2013, USING LLDB, P415
   Legay A, 2018, LECT NOTES COMPUT SC, V10951, P542, DOI 10.1007/978-3-319-95582-7_32
   LLVM Project, 2016, LLVM LANG REF MAN
   Magee J, 1999, ICSE
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Rockai P, 2019, LECT NOTES COMPUT SC, V11687, P127, DOI 10.1007/978-3-030-27008-7_8
   Rockai P, 2021, SOFTW SYST MODEL, V20, P363, DOI 10.1007/s10270-020-00837-y
   Rockai P, 2018, J SYST SOFTWARE, V143, P1, DOI 10.1016/j.jss.2018.04.026
   Stallman R, 2010, DEBUGGING WITH GDB
   Visan A.M., 2011, PLOS 11
NR 25
TC 1
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2022
VL 24
IS 3
SI SI
BP 493
EP 510
DI 10.1007/s10009-022-00659-x
EA APR 2022
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1D5TB
UT WOS:000777237800001
DA 2024-07-18
ER

PT J
AU Salva, S
   Blot, E
AF Salva, Sebastien
   Blot, Elliott
TI Learning of behavioural models and dependency graphs for communicating
   systems with CkTailv2
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model learning; Event logs; Communicating systems; IOLTS; Dependency
   graphs
ID STATE MACHINES; INFERENCE; SOFTWARE
AB This paper presents a model learning approach to recover models from event logs for communicating systems. We refer here to systems made up of components interacting with each other by data networks and whose communications can be monitored, e.g. Internet of Things systems, distributed applications or Web service compositions. Our approach, called CkTailv2, is specialised in the generation of behavioural models along with dependency graphs. It generates one Input Output Labelled Transition System for every component participating in the communications and one graph illustrating the directional dependencies with the other components. These models can help engineers better and quicker understand how a communicating system behaves and is structured. They can also be used for bug detection or for test generation. Compared to other model learning approaches specialised for communicating systems, CkTailv2 improves the precision of the generated models by integrating algorithms that better recognise sessions in event logs. CkTailv2 revisits and extends a first approach by simplifying the set of requirements and assumptions in order to increase its applicability on communicating systems. It now integrates two new trace extraction algorithms: the former segments event logs into traces by trying to detect sessions; the latter assumes event logs to include session identifiers and allows to quicker generate models. We report experimental results obtained from 10 case studies and show that CkTailv2 has the capability of producing precise models in reasonable time delays.
C1 [Salva, Sebastien; Blot, Elliott] Univ Clermont Auvergne, LIMOS UMR CNRS 6158, Clermont Ferrand, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite Clermont
   Auvergne (UCA)
RP Salva, S (corresponding author), Univ Clermont Auvergne, LIMOS UMR CNRS 6158, Clermont Ferrand, France.
EM sebastien.salva@uca.fr; elliott.blot@uca.fr
FU French Project VASOC (Auvergne-Rhone-Alpes Region)
FX The research was supported by the French Project VASOC
   (Auvergne-Rhone-Alpes Region) https://vasoc.limos.fr/
CR Ahmad A, 2016, LECT NOTES COMPUT SC, V9953, P727, DOI 10.1007/978-3-319-47169-3_55
   Aichernig BK, 2017, LECT NOTES COMPUT SC, V10227, P19, DOI 10.1007/978-3-319-57288-8_2
   Alur R, 2005, ACM SIGPLAN NOTICES, V40, P98, DOI 10.1145/1047659.1040314
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   Arcuri A, 2017, IEEE INT CONF SOFTW, P126, DOI 10.1109/ICST.2017.19
   Berg T, 2006, LECT NOTES COMPUT SC, V3922, P107
   Beschastnikh I., 2011, LEVERAGING EXISTING, V11, P267
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Blot E, CKTAILV2 TOOL
   Dssouli R., 1996, PROTOCOL TEST SYSTEM, P237, DOI [10.1007/978-0-387-34988-615, DOI 10.1007/978-0-387-34988-615]
   Dupont P., 1996, Grammatical Inference: Learning Syntax from Sentences. Third International Colloquium, ICGI-96 Proceedings, P222, DOI 10.1007/BFb0033357
   Falcone Y, 2011, LECT NOTES COMPUT SC, V7041, P204, DOI 10.1007/978-3-642-24690-6_15
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Groz R, 2008, LECT NOTES COMPUT SC, V5047, P216, DOI 10.1007/978-3-540-68524-1_16
   Gutiérrez-Madroñal L, 2018, J SYST SOFTWARE, V137, P784, DOI 10.1016/j.jss.2017.06.037
   Hossen K, 2014, IEEE ICST WORKSHOP, P22, DOI 10.1109/ICSTW.2014.47
   Howar F, 2012, LECT NOTES COMPUT SC, V7148, P251, DOI 10.1007/978-3-642-27940-9_17
   Lo D, 2012, J SYST SOFTWARE, V85, P2063, DOI 10.1016/j.jss.2012.04.001
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Makanju A, 2012, IEEE T KNOWL DATA EN, V24, P1921, DOI 10.1109/TKDE.2011.138
   Mariani Leonardo, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P117, DOI 10.1109/ISSRE.2008.48
   Mariani L, 2007, IEEE SOFTWARE, V24, P76, DOI 10.1109/MS.2007.138
   Mariani L, 2017, IEEE T SOFTWARE ENG, V43, P715, DOI 10.1109/TSE.2016.2623623
   Messaoudi S, 2018, INT C PROGRAM COMPRE, P167, DOI 10.1145/3196321.3196340
   Ohmann T., 2014, BEHAV RESOURCE AWARE, V14, P19
   Pastore F, 2017, IEEE INT CONF SOFTW, P401, DOI 10.1109/ICST.2017.43
   Petrenko A, 2019, LECT NOTES COMPUT SC, V11823, P112, DOI 10.1007/978-3-030-31157-5_8
   Raffelt H., 2005, LEARNLIB LIB AUTOMAT, V05, P62, DOI 10.1145/1081180.1081189
   Salva S., 2000, P 4 INT C PRINC DIST, P177
   Salva S., REVERSE ENG BEHAV MO
   Salva S., 2020, P 15 15 INT C SOFTW, P1
   Salva S., 2020, P 15 INT C EV NOV AP, P27
   Salva S, 2020, SOFTWARE QUAL J, V28, P789, DOI 10.1007/s11219-019-09485-y
   Spadini D, 2019, EMPIR SOFTW ENG, V24, P1461, DOI 10.1007/s10664-018-9663-0
   Tappler M, 2017, IEEE INT CONF SOFTW, P276, DOI 10.1109/ICST.2017.32
   Vaarandi R, 2015, INT CONF NETW SER, P1, DOI 10.1109/CNSM.2015.7367331
   van der Bijl M, 2004, LECT NOTES COMPUT SC, V2931, P86
   Zhu J., 2018, ARXIV81103509
   2015, RISK BAS SEC ASS TES
NR 41
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2022
VL 24
IS 4
BP 529
EP 548
DI 10.1007/s10009-022-00651-5
EA MAR 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3N7AF
UT WOS:000769253900001
DA 2024-07-18
ER

PT J
AU Dross, C
   Furia, CA
   Huisman, M
   Monahan, R
   Müller, P
AF Dross, Claire
   Furia, Carlo A.
   Huisman, Marieke
   Monahan, Rosemary
   Mueller, Peter
TI VerifyThis 2019: a program verification competition
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE functional correctness; correctness proofs; program verification;
   verification competition
AB VerifyThis is a series of program verification competitions that emphasize the human aspect: participants tackle the verification of detailed behavioral properties-something that lies beyond the capabilities of fully automatic verification and requires instead human expertise to suitably encode programs, specifications, and invariants. This paper describes the 8th edition of VerifyThis, which took place at ETAPS 2019 in Prague. Thirteen teams entered the competition, which consisted of three verification challenges and spanned 2 days of work. This report analyzes how the participating teams fared on these challenges, reflects on what makes a verification challenge more or less suitable for the typical VerifyThis participants, and outlines the difficulties of comparing the work of teams using wildly different verification approaches in a competition focused on the human aspect.
C1 [Dross, Claire] AdaCore, Paris, France.
   [Furia, Carlo A.] USI Univ Svizzera Italiana, Lugano, Switzerland.
   [Huisman, Marieke] Univ Twente, Enschede, Netherlands.
   [Monahan, Rosemary] Maynooth Univ, Maynooth, Kildare, Ireland.
   [Mueller, Peter] Swiss Fed Inst Technol, Zurich, Switzerland.
C3 Universita della Svizzera Italiana; University of Twente; Maynooth
   University; Swiss Federal Institutes of Technology Domain; ETH Zurich
RP Furia, CA (corresponding author), USI Univ Svizzera Italiana, Lugano, Switzerland.
EM dross@adacore.com; furiac@usi.ch; m.huisman@utwente.nl;
   Rosemary.Monahan@mu.ie; Peter.Mueller@inf.ethz.ch
OI Huisman, Marieke/0000-0003-4467-072X
FU Universita della Svizzera italiana
FX Open Access funding provided by Universita della Svizzera italiana.
CR Amighi A, 2016, EUROMICRO WORKSHOP P, P495, DOI 10.1109/PDP.2016.107
   Bertot Y., 2004, TEXT THEORET COMP S
   Beyer Dirk, 2014, DAGSTUHL REP, V4, DOI DOI 10.4230/DAGREP.4.4.1
   Blom Stefan, 2017, Integrated Formal Methods. 13th International Conference, IFM 2017. Proceedings: LNCS 10510, P102, DOI 10.1007/978-3-319-66845-1_7
   Bobot F., 2011, BOOGIE 2011 1 INT WO, P53
   Bormer Thorsten, 2012, Formal Verification of Object-Oriented Software. International Conference, FoVeOOS 2011. Revised Selected Papers, P3, DOI 10.1007/978-3-642-31762-0_2
   Bunte Olav, 2019, Tools and Algorithms for the Construction and Analysis of Systems. 25th International Conference, TACAS 2019. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2019. Proceedings: Lecture Notes in Computer Science (11428), P21, DOI 10.1007/978-3-030-17465-1_2
   Cok DR, 2014, ELECTRON P THEOR COM, P79, DOI 10.4204/EPTCS.149.8
   Cranen S, 2013, LECT NOTES COMPUT SC, V7795, P199, DOI 10.1007/978-3-642-36742-7_15
   Ernst G., 2018, HAL01981937
   Ernst G, 2019, LECT NOTES COMPUT SC, V11429, P176, DOI 10.1007/978-3-030-17502-3_12
   Ernst G, 2015, INT J SOFTW TOOLS TE, V17, P677, DOI 10.1007/s10009-014-0308-3
   Filliatre J., 2012, CEUR Workshop Proceedings, V873, P36
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   Gelman Andrew, 2006, Data analysis using regression and multilevel/hierarchical models, DOI 10.1017/CBO9780511790942
   Huisman M., 2012, CEUR WORKSHOP P, V873, P50
   Huisman M, 2017, INT J SOFTW TOOLS TE, V19, P763, DOI 10.1007/s10009-016-0438-x
   Jung R, 2018, J FUNCT PROGRAM, V28, DOI 10.1017/S0956796818000151
   Kirchner F, 2015, FORM ASP COMPUT, V27, P573, DOI 10.1007/s00165-014-0326-7
   Klebanov V., 2011, LNCS, V6664, P154, DOI [10.1007/978-3-642-21437-0_14, DOI 10.1007/978-3-642-21437-0_14]
   Lammich P, 2019, J AUTOM REASONING, V62, P481, DOI 10.1007/s10817-017-9437-1
   Monahan R., 2017, 10 KIT
   Müller P, 2016, LECT NOTES COMPUT SC, V9583, P41, DOI 10.1007/978-3-662-49122-5_2
   Muller P., 2020, ARXIV200813610
   Poll, 2016, CTIT TECHNICAL REPOR
   Wenzel M, 2008, LECT NOTES COMPUT SC, V5170, P33, DOI 10.1007/978-3-540-71067-7_7
NR 26
TC 4
Z9 4
U1 1
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2021
VL 23
IS 6
BP 883
EP 893
DI 10.1007/s10009-021-00619-x
EA MAY 2021
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XU5UO
UT WOS:000652086100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Ferrara, P
   Mandal, AK
   Cortesi, A
   Spoto, F
AF Ferrara, Pietro
   Mandal, Amit Kr
   Cortesi, Agostino
   Spoto, Fausto
TI Static analysis for discovering IoT vulnerabilities
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE IoT security; Static analysis; OWASP IoT Top 10; IoT privacy; Insecure
   IoT ecosystem interface; Static analysis
ID SECURITY; INTERNET; FRAMEWORK; PROTOCOLS
AB The Open Web Application Security Project (OWASP), released the "OWASP Top 10 Internet of Things 2018" list of the high-priority security vulnerabilities for IoT systems. The diversity of these vulnerabilities poses a great challenge toward development of a robust solution for their detection and mitigation. In this paper, we discuss the relationship between these vulnerabilities and the ones listed by OWASP Top 10 (focused on Web applications rather than IoT systems), how these vulnerabilities can actually be exploited, and in which cases static analysis can help in preventing them. Then, we present an extension of an industrial analyzer (Julia) that already covers five out of the top seven vulnerabilities of OWASP Top 10, and we discuss which IoT Top 10 vulnerabilities might be detected by the existing analyses or their extension. The experimental results present the application of some existing Julia's analyses and their extension to IoT systems, showing its effectiveness of the analysis of some representative case studies.
C1 [Ferrara, Pietro; Cortesi, Agostino] Univ Ca Foscari, Venice, Italy.
   [Ferrara, Pietro] JuliaSoft, Verona, Italy.
   [Mandal, Amit Kr] SRM Univ, Amaravati, AP, India.
   [Spoto, Fausto] Univ Verona, Verona, Italy.
C3 Universita Ca Foscari Venezia; SRM University-AP; University of Verona
RP Ferrara, P (corresponding author), Univ Ca Foscari, Venice, Italy.; Ferrara, P (corresponding author), JuliaSoft, Verona, Italy.
EM pietro.ferrara@unive.it; amitmandal.nitdgp@gmail.com; cortesi@unive.it;
   fausto.spoto@univr.it
RI FERRARA, Pietro/ABF-9761-2021; Cortesi, Agostino/F-9637-2011; Mandal,
   Amit Kr/IUN-3943-2023
OI FERRARA, Pietro/0000-0002-4678-933X; Cortesi,
   Agostino/0000-0002-0946-5440; Spoto, Fausto/0000-0003-2973-0384
FU Universita Ca' Foscari Venezia within the CRUI-CARE Agreement
FX Open access funding provided by Universita Ca' Foscari Venezia within
   the CRUI-CARE Agreement.
CR Alizai Zahoor Ahmed, 2018, 2018 International Conference on Applied and Engineering Mathematics (ICAEM), P115, DOI 10.1109/ICAEM.2018.8536261
   [Anonymous], 2019, OWASP Internet of Things (IoT) Project
   [Anonymous], AK WARNS UPNP DEV US
   [Anonymous], 2018, KU LEUV FAST INS PAS
   Assiri A, 2018, 2018 1ST INTERNATIONAL CONFERENCE ON COMPUTER APPLICATIONS & INFORMATION SECURITY (ICCAIS' 2018)
   Bhawiyuga A., 2017, 2017 11th International Conference on Telecommunication Systems Services and Applications (TSSA), P1, DOI [10.1109/TSSA.2017.8272933, DOI 10.1109/TSSA.2017.8272933]
   Burato E., 2017, P ITASEC 17
   Celik Z.B., 2018, ARXIVPREPRINTARXIV18
   Challa S, 2017, IEEE ACCESS, V5, P3028, DOI 10.1109/ACCESS.2017.2676119
   Chze PLR, 2014, 2014 IEEE WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P428, DOI 10.1109/WF-IoT.2014.6803204
   Costantini G, 2015, SOFTWARE PRACT EXPER, V45, P245, DOI 10.1002/spe.2218
   Costantini K, 2011, COUNSELING 21ST CENTURY STUDENTS FOR OPTIMAL COLLEGE AND CAREER READINESS: A 9TH-12TH GRADE CURRICULUM, P11
   Cousot P., 1979, P POPL 79
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot P., 2005, P ESOP 05
   Das AK, 2018, FUTURE GENER COMP SY, V89, P110, DOI 10.1016/j.future.2018.06.027
   Dunn J.E, 2018, PACEMAKER CONTROLLER
   Eclipse IoT Working Group, 2016, ECLIPSE IOT WORKING
   El-Hajj M, 2017, 2017 1ST CYBER SECURITY IN NETWORKING CONFERENCE (CSNET)
   Ernst M.D., 2015, LECT NOTES COMPUTER
   Farris I, 2019, IEEE COMMUN SURV TUT, V21, P812, DOI 10.1109/COMST.2018.2862350
   Ferrara P., 2018, P APF 18
   Ferrara P., 2020, LNCS
   Ferrara P., 2018, P ITASEC 18
   Franks R, ANDROID THINGS ELECT
   Frustaci M, 2018, IEEE INTERNET THINGS, V5, P2483, DOI 10.1109/JIOT.2017.2767291
   Ge MM, 2017, J NETW COMPUT APPL, V83, P12, DOI 10.1016/j.jnca.2017.01.033
   Giro S., ANDROID DEVELOPERS B
   Giuliano R, 2017, IEEE INTERNET THINGS, V4, P645, DOI 10.1109/JIOT.2016.2624824
   Grammatech, COD
   Gurunath R., 2018, 2018 2nd International Conference on I-SMAC (IoT in Social, Mobile, Analytics and Cloud) (I-SMAC)I-SMAC (IoT in Social, Mobile, Analytics and Cloud) (I-SMAC), P104, DOI 10.1109/I-SMAC.2018.8653728
   Hao P, 2018, IEEE ACCESS, V6, P42279, DOI 10.1109/ACCESS.2018.2859781
   Holger, COLOR THINGS
   Hou JW, 2019, COMPUT NETW, V148, P295, DOI 10.1016/j.comnet.2018.11.026
   Hung M., 2017, Leading the IoT - Gartner
   Huuck R., 2015, EMBEDDEDWORLD 2015 E, P493
   Invincea Labs, 2016, BREAKING BHAD ABUSIN
   Jeon JH, 2018, 2018 32ND INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN), P941, DOI 10.1109/ICOIN.2018.8343262
   JuliaSoft, JULIA STATIC ANALYZE
   Khattak HA, 2019, FUTURE GENER COMP SY, V100, P144, DOI 10.1016/j.future.2019.04.038
   Kim E, 2017, I C INF COMM TECH CO, P1299, DOI 10.1109/ICTC.2017.8190927
   Kim S, 2018, J AMB INTEL HUM COMP, V9, P1267, DOI 10.1007/s12652-017-0602-5
   Mandal A, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1944, DOI 10.1145/3341105.3373924
   Mandal AK, 2019, SOFTWARE PRACT EXPER, V49, P1131, DOI 10.1002/spe.2698
   Mandal S, 2018, IEEE INT CONF VLSI, P1, DOI 10.1109/VLSI-SoC.2018.8644772
   Mavropoulos O, 2019, AD HOC NETW, V92, DOI 10.1016/j.adhoc.2018.08.013
   Mechling G, BLUETOOTH LOW ENERGY
   Neshenko N, 2019, IEEE COMMUN SURV TUT, V21, P2702, DOI 10.1109/COMST.2019.2910750
   Newsome J., 2005, Dynamic taint analysis for automatic detection, analysis, and signature generation of exploits on commodity software
   NIST, National Vulnerability Database
   OpenXC, OPENXC PLATFORM
   OWASP, 2018, TOP 10 PROJ 2017
   Panarotto Federica, 2018, Smart Computing and Communication. Third International Conference, SmartCom 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11344), P114, DOI 10.1007/978-3-030-05755-8_12
   Sahay R., 2018, P ISDA 18
   Sahay R, 2019, FUTURE GENER COMP SY, V100, P736, DOI 10.1016/j.future.2019.05.049
   Shah T, 2018, IEEE TRUST BIG, P819, DOI 10.1109/TrustCom/BigDataSE.2018.00117
   Shin D, 2017, IEEE ACCESS, V5, P11100, DOI 10.1109/ACCESS.2017.2710379
   Singh M, 2018, 2018 IEEE 4TH WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P51, DOI 10.1109/WF-IoT.2018.8355182
   Smith DG, 2018, J APPL HERMENEUTICS
   Sollins KR, 2019, IEEE INTERNET THINGS, V6, P1628, DOI 10.1109/JIOT.2019.2898113
   Spoto F, 2019, ACM T PROGR LANG SYS, V41, DOI 10.1145/3332371
   Tripp O, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P87, DOI 10.1145/1542476.1542486
   Tweneboah-Koduah S, 2017, WIRELESS PERS COMMUN, V95, P169, DOI 10.1007/s11277-017-4434-6
   Urien P, 2018, CONSUM COMM NETWORK
   US Dept. of Homeland Security, 2017, US DEPT HOM SEC AL T
   Williams J, 2012, UNFORTUNATE REALITY
   Yoon S, 2017, I C INF COMM TECH CO, P1162, DOI 10.1109/ICTC.2017.8190885
   Zaidan AA, 2018, TELECOMMUN SYST, V69, P1, DOI 10.1007/s11235-018-0430-8
   Zugaldia A, ANDROID ROBOCAR
NR 69
TC 28
Z9 30
U1 0
U2 13
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2021
VL 23
IS 1
SI SI
BP 71
EP 88
DI 10.1007/s10009-020-00592-x
EA NOV 2020
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PV6IB
UT WOS:000592165100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Alhawi, OM
   Rocha, H
   Gadelha, MR
   Cordeiro, LC
   Batista, E
AF Alhawi, Omar M.
   Rocha, Herbert
   Gadelha, Mikhail R.
   Cordeiro, Lucas C.
   Batista, Eddie
TI Verification and refutation of C programs based on <i>k</i>-induction
   and invariant inference
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software engineering; Formal methods; Bounded model checking;
   k-Induction; Invariant inference
ID MODEL CHECKING
AB DepthK is a source-to-source transformation tool that employs bounded model checking (BMC) to verify and falsify safety properties in single- and multi-threaded C programs, without manual annotation of loop invariants. Here, we describe and evaluate a proof-by-induction algorithm that combines k-induction with invariant inference to prove and refute safety properties. We apply two invariant generators to produce program invariants and feed these into a k-induction-based verification algorithm implemented in DepthK, which uses the efficient SMT-based context-bounded model checker (ESBMC) as sequential verification back-end. A set of C benchmarks from the International Competition on Software Verification (SV-COMP) and embedded-system applications extracted from the available literature are used to evaluate the effectiveness of the proposed approach. Experimental results show that k-induction with invariants can handle a wide variety of safety properties, in typical programs with loops and embedded software applications from the telecommunications, control systems, and medical domains. The results of our comparative evaluation extend the knowledge about approaches that rely on both BMC and k-induction for software verification, in the following ways. (1) The proposed method outperforms the existing implementations that use k-induction with an interval-invariant generator (e.g., 2LS and ESBMC), in the category ConcurrencySafety, and overcame, in others categories, such as SoftwareSystems, other software verifiers that use plain BMC (e.g., CBMC). Also, (2) it is more precise than other verifiers based on the property-directed reachability (PDR) algorithm (i.e., SeaHorn, Vvt and CPAchecker-CTIGAR). This way, our methodology demonstrated improvement over existing BMC and k-induction-based approaches.
C1 [Alhawi, Omar M.; Cordeiro, Lucas C.] Univ Manchester, Manchester, Lancs, England.
   [Rocha, Herbert] Univ Fed Roraima, Boa Vista, Parana, Brazil.
   [Gadelha, Mikhail R.] SIDIA Inst Ciencia & Tecnol, Manaus, Amazonas, Brazil.
   [Batista, Eddie] TP Vis, Manaus, Amazonas, Brazil.
C3 University of Manchester; Universidade Federal de Roraima
RP Alhawi, OM (corresponding author), Univ Manchester, Manchester, Lancs, England.
EM omar.alhawi@manchester.ac.uk
RI Cordeiro, Lucas/IVV-3044-2023; Cordeiro, Lucas Carvalho/AAQ-9258-2021
OI Cordeiro, Lucas Carvalho/0000-0002-6235-4272; Rocha,
   Herbert/0000-0002-2648-8468
CR Albarghouthi A, 2013, LECT NOTES COMPUT SC, V7795, P637, DOI 10.1007/978-3-642-36742-7_52
   Alglave Jade, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P141, DOI 10.1007/978-3-642-39799-8_9
   [Anonymous], 2008, 7542008 IEEE, P1, DOI DOI 10.1109/IEEESTD.2008.4610935
   [Anonymous], 2018, Advances in Neural Information Processing Systems
   Armando Alessandro, 2009, International Journal on Software Tools for Technology Transfer, V11, P69, DOI 10.1007/s10009-008-0091-0
   Ball T., 2002, SLIC SPECIFICATION L
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Beyer Dirk, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P401, DOI 10.1007/978-3-662-46681-0_31
   Beyer D., 2019, ABS190806271 CORR
   Beyer D, 2019, LECT NOTES COMPUT SC, V11429, P133, DOI 10.1007/978-3-030-17502-3_9
   Beyer D, 2016, LECT NOTES COMPUT SC, V9636, P887, DOI 10.1007/978-3-662-49674-9_55
   Beyer D, 2015, LECT NOTES COMPUT SC, V9206, P622, DOI 10.1007/978-3-319-21690-4_42
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Birgmeier J, 2014, LECT NOTES COMPUT SC, V8559, P831, DOI 10.1007/978-3-319-08867-9_55
   Bradley Aaron R., 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, DOI 10.1007/978-3-642-31424-7_4
   Bradley A. R., 2007, The Calculus of Computation
   Bradley AR, 2011, LECT NOTES COMPUT SC, V6538, P70, DOI 10.1007/978-3-642-18275-4_7
   Bradley Aaron R., 2012, Theory and Applications of Satisfiability Testing-SAT 2012-15th International Conference, Trento, Italy, June 17-20, P1, DOI 10.1007/978-3-642-31612-81
   Brain M, 2015, LECT NOTES COMPUT SC, V9291, P145, DOI 10.1007/978-3-662-48288-9_9
   Carter M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P589, DOI 10.1145/2889160.2889163
   Champion A, 2018, LECT NOTES COMPUT SC, V10805, P365, DOI 10.1007/978-3-319-89960-2_20
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Donaldson AF, 2011, LECT NOTES COMPUT SC, V6887, P351, DOI 10.1007/978-3-642-23702-7_26
   Donaldson AF, 2011, ACM SIGPLAN NOTICES, V46, P311, DOI 10.1145/2038037.1941604
   Donaldson AF, 2011, LECT NOTES COMPUT SC, V6538, P169, DOI 10.1007/978-3-642-18275-4_13
   Donaldson AF, 2011, FORM METHOD SYST DES, V39, P83, DOI 10.1007/s10703-011-0124-2
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Een N., 2003, ELECT NOTES THEORETI, V89, P543, DOI 10.1016/s1571-0661(05)82542-3
   Ezudheen P, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276501
   Furia CA, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2506375
   Gadelha MR, 2019, LECT NOTES COMPUT SC, V11429, P209, DOI 10.1007/978-3-030-17502-3_15
   Gadelha MR, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P765, DOI 10.1145/3236024.3264840
   Gadelha M, 2017, INT J SOFTW TOOLS TE, V19, P97, DOI 10.1007/s10009-015-0407-9
   Garg P, 2016, ACM SIGPLAN NOTICES, V51, P499, DOI 10.1145/2914770.2837664
   Garg P, 2014, LECT NOTES COMPUT SC, V8559, P69, DOI 10.1007/978-3-319-08867-9_5
   GOLDBERG D, 1991, COMPUT SURV, V23, P5, DOI 10.1145/103162.103163
   Grosse Daniel, 2009, 2009 10th International Workshop on Microprocessor Test and Verification (MTV), P101, DOI 10.1109/MTV.2009.16
   Group MWR, 2012, WCET BENCHM
   Günther H, 2016, LECT NOTES COMPUT SC, V9636, P954, DOI 10.1007/978-3-662-49674-9_69
   Gulavani B.S., 2006, P FSE ACM, P117, DOI DOI 10.1145/1181775.1181790
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   Hassan Z, 2013, 2013 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P157
   Heizmann M, 2013, LECT NOTES COMPUT SC, V7795, P641, DOI 10.1007/978-3-642-36742-7_53
   Henry J, 2012, ELECTRON NOTES THEOR, V289, P15, DOI 10.1016/j.entcs.2012.11.003
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Hu QP, 2019, LECT NOTES COMPUT SC, V11561, P335, DOI 10.1007/978-3-030-25540-4_18
   Hutter F, 2007, FMCAD 2007: FORMAL METHODS IN COMPUTER AIDED DESIGN, PROCEEDINGS, P27, DOI 10.1109/.9
   Ivancic F, 2005, PR IEEE COMP DESIGN, P297, DOI 10.1109/ICCD.2005.77
   Jeannet B, 2009, LECT NOTES COMPUT SC, V5643, P661, DOI 10.1007/978-3-642-02658-4_52
   Jovanovic D, 2016, PROCEEDINGS OF THE 2016 16TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2016), P85, DOI 10.1109/FMCAD.2016.7886665
   Kroening Daniel, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P557, DOI 10.1007/978-3-642-22110-1_44
   Kroening Daniel, 2014, TOOLS ALGORITHMS CON, P389, DOI [10.1007/978-3-642-54862-8_26, DOI 10.1007/978-3-642-54862-8_26]
   Kroening Daniel., 2011, Proceedings of the 23rd international conference on Computer aided verification. CAV'11, P573, DOI [DOI 10.1007/978-3-642-22110-145, 10.1007/978-3-642-22110-1_45, DOI 10.1007/978-3-642-22110-1_45]
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Madhukar K, 2015, PROCEEDINGS OF THE 15TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2015), P105, DOI 10.1109/FMCAD.2015.7542259
   Maisonneuve V, 2014, ELECTRON NOTES THEOR, V307, P17, DOI 10.1016/j.entcs.2014.08.003
   Merz F, 2012, LECT NOTES COMPUT SC, V7152, P146, DOI 10.1007/978-3-642-27705-4_12
   Morse J, 2015, SOFTW SYST MODEL, V14, P65, DOI 10.1007/s10270-013-0366-0
   ParisTech, 2013, PIPS AUT PAR COD TRA
   Prasad M. R., 2005, International Journal on Software Tools for Technology Transfer, V7, P156, DOI 10.1007/s10009-004-0183-4
   Rival X, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275501
   Rocha H, 2015, BRAZ SYM COMPUT SYST, P90, DOI 10.1109/SBESC.2015.24
   Rocha W, 2017, LECT NOTES COMPUT SC, V10206, P360, DOI 10.1007/978-3-662-54580-5_23
   Scott J., 1998, International Symposium on Computer Architecture Power Driven Microarchitecture Workshop, P145
   Sheeran M, 2000, LECT NOTES COMPUT SC, V1954, P108
   SNU, 2012, REAL TIM BENCHM
   Wachter B, 2013, 2013 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P210
   WRIGHT AK, 1994, INFORM COMPUT, V115, P38, DOI 10.1006/inco.1994.1093
NR 71
TC 6
Z9 6
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2021
VL 23
IS 2
SI SI
BP 115
EP 135
DI 10.1007/s10009-020-00564-1
EA MAY 2020
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SU3HE
UT WOS:000533802500003
OA hybrid
DA 2024-07-18
ER

PT J
AU Summers, AJ
   Müller, P
AF Summers, Alexander J.
   Mueller, Peter
TI Automating deductive verification for weak-memory programs (extended
   version)
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Relaxed separation logic (RSL); Fenced separation logic (FSL); Viper
   encoding; Weak memory; Program verification
ID CHECKING; LOGIC
AB Writing correct programs for weak-memory models such as the C11 memory model is challenging because of the weak consistency guarantees these models provide. The first program logics for the verification of such programs have recently been proposed, but their usage has been limited thus far to manual proofs. Automating proofs in these logics via first-order solvers is non-trivial, due to features such as higher-order assertions, modalities and rich permission resources. In this paper, we provide the first encoding of a weak-memory program logic using existing deductive verification tools. Our work enables, for the first time, the (unbounded) verification of C11 programs at the level of abstraction provided by the program logics; the only necessary user interaction is in the form of specifications written in the program logic and, in rare cases, ghost operations. We tackle three recent program logics: Relaxed Separation Logic and two forms of Fenced Separation Logic, and show how these can be encoded using the Viper verification infrastructure. In doing so, we illustrate several novel encoding techniques which could be employed for other logics. Our work is implemented, and has been evaluated on examples from existing papers as well as the Facebook open-source Folly library.
C1 [Summers, Alexander J.; Mueller, Peter] Swiss Fed Inst Technol, Dept Comp Sci, Univ Str 6, CH-8092 Zurich, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich
RP Müller, P (corresponding author), Swiss Fed Inst Technol, Dept Comp Sci, Univ Str 6, CH-8092 Zurich, Switzerland.
EM alexander.summers@inf.ethz.ch; peter.mueller@inf.ethz.ch
CR Abdulla P.A., 2017, CORR
   Abdulla PA, 2016, LECT NOTES COMPUT SC, V9780, P134, DOI 10.1007/978-3-319-41540-6_8
   Alglave J, 2017, ACM SIGPLAN NOTICES, V52, P3, DOI 10.1145/3093333.3009883
   [Anonymous], 2019, ONLINE APPENDIX VIPE
   [Anonymous], 2018, FACEBOOK FOLLY READE
   [Anonymous], 2002, LICS
   [Anonymous], 2019, RUST LIB ARC ATOMIC
   Barnett M, 2006, LECT NOTES COMPUT SC, V4111, P364
   Bobot F., 2011, BOOGIE 2011 1 INT WO, P53
   Bornat R, 2005, ACM SIGPLAN NOTICES, V40, P259, DOI 10.1145/1047659.1040327
   Bouajjani A, 2013, LECT NOTES COMPUT SC, V7792, P533, DOI 10.1007/978-3-642-37036-6_29
   Boyland J, 2003, LECT NOTES COMPUT SC, V2694, P55
   Chlipala A, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P234
   Cohen E, 2009, LECT NOTES COMPUT SC, V5674, P23, DOI 10.1007/978-3-642-03359-9_2
   Cuoq Pascal, 2012, Software Engineering and Formal Methods. Proceedings of the 10th International Conference, SEFM 2012, P233, DOI 10.1007/978-3-642-33826-7_16
   Dan A, 2015, LECT NOTES COMPUT SC, V8931, P449
   Doko M, 2017, LECT NOTES COMPUT SC, V10201, P448, DOI 10.1007/978-3-662-54434-1_17
   Doko M, 2016, LECT NOTES COMPUT SC, V9583, P413, DOI 10.1007/978-3-662-49122-5_20
   Heule S, 2013, LECT NOTES COMPUT SC, V7737, P315
   Jacobs B., 2014, CW660 KU LEUV DEP CO
   Jacobs B, 2010, LECT NOTES COMPUT SC, V6461, P304, DOI 10.1007/978-3-642-17164-2_21
   Kaiser Jan-Oliver, 2017, EUR C OBJ OR PROGR E, V74, DOI [DOI 10.4230/LIPICS.ECOOP.2017.17, 10.4230/LIPIcs.ECOOP.2017]
   Kokologiannakis M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158105
   Krebbers R, 2017, LECT NOTES COMPUT SC, V10201, P696, DOI 10.1007/978-3-662-54434-1_26
   Lahav Ori, 2019, ACM SIGLOG News, V6, P43, DOI 10.1145/3326938.3326942
   Müller P, 2016, LECT NOTES COMPUT SC, V9583, P41, DOI 10.1007/978-3-662-49122-5_2
   Müller P, 2016, LECT NOTES COMPUT SC, V9779, P405, DOI 10.1007/978-3-319-41528-4_22
   O'Hearn P., 2001, Computer Science Logic. 15th International Workshop, CSL 2001 10th Annual Conference of the EACSL. Proceedings (Lecture Notes in Computer Science Vol.2142), P1
   Parkinson MJ, 2012, LOG METH COMPUT SCI, V8, DOI 10.2168/LMCS-8(3:01)2012
   Reynolds John C., 1972, ACM 72, V2, P717, DOI DOI 10.1023/A:1010027404223
   RSL, 2018, FRONT END ZIP FIL RS
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Rustan K, 2009, LECT NOTES COMPUT SC, V5502, P378, DOI 10.1007/978-3-642-00590-9_27
   Sergey I, 2015, ACM SIGPLAN NOTICES, V50, P77, DOI [10.1145/2813885.2737964, 10.1145/2737924.2737964]
   Smans J, 2012, ACM T PROGR LANG SYS, V34, DOI 10.1145/2160910.2160911
   Summers A.J., 2018, AUTOMATING DEDUCTIVE
   Summers AJ, 2018, LECT NOTES COMPUT SC, V10805, P190, DOI 10.1007/978-3-319-89960-2_11
   Summers AJ, 2013, LECT NOTES COMPUT SC, V7920, P129, DOI 10.1007/978-3-642-39038-8_6
   Travkin O, 2016, LECT NOTES COMPUT SC, V9965, P3, DOI 10.1007/978-3-319-46750-4_1
   Turon A, 2014, ACM SIGPLAN NOTICES, V49, P691, DOI [10.1145/2660193.2660243, 10.1145/2714064.2660243]
   Vafeiadis V., 2016, COMMUNICATION
   Vafeiadis V, 2013, ACM SIGPLAN NOTICES, V48, P867, DOI [10.1145/2544173.2509532, 10.1145/2509136.2509532]
   Xu FW, 2016, LECT NOTES COMPUT SC, V9780, P59, DOI 10.1007/978-3-319-41540-6_4
NR 43
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2020
VL 22
IS 6
SI SI
BP 709
EP 728
DI 10.1007/s10009-020-00559-y
EA MAR 2020
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OQ9JV
UT WOS:000562313700001
DA 2024-07-18
ER

PT J
AU Bures, T
   Gerostathopoulos, I
   Hnetynka, P
   Plasil, F
   Krijt, F
   Vinarek, J
   Kofron, J
AF Bures, Tomas
   Gerostathopoulos, Ilias
   Hnetynka, Petr
   Plasil, Frantisek
   Krijt, Filip
   Vinarek, Jiri
   Kofron, Jan
TI A language and framework for dynamic component ensembles in smart
   systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Architecture description language; Autonomic components; Component
   ensembles; Smart cyber-physical systems
AB Smart system applications (SSAs)-a heterogeneous landscape of applications of Internet of things, cyber-physical systems, and smart sensing systems-are composed of autonomous yet inherently cooperating components. An important problem in this area is how to hoist the cooperation of software components forming dynamic groups-ensembles-at the architectural level of an SSA. This is hard since ensembles can overlap, be nested, and be dynamically formed and dismantled based on several criteria. A related problem is how to combine component and ensemble specification with a well-established language supported on multiple platforms. To target these problems, we propose a specification and implementation language Trait-based COmponent Ensemble Language (TCOEL) based on Scala internal DSL, to describe both the architecture and formation of dynamic ensembles of components and their functional internals. To raise the level of expressivity, we introduce the concept of domain-specific extensions (traits) to the TCOEL core to reflect different paradigms' concerns-such as movement in a 2D map, state-space modeling of physical processes, and statistical reasoning about uncertainty. This allows for configuring TCOEL for the needs of a specific SSA use case and, at the same time, facilitates reuse. To evaluate TCOEL, we show how it can be beneficially used in addressing the coordination of agents in a RoboCup Rescue Simulation application.
C1 [Bures, Tomas; Hnetynka, Petr; Plasil, Frantisek; Krijt, Filip; Vinarek, Jiri; Kofron, Jan] Charles Univ Prague, Fac Math & Phys, Ke Karlovu 2027-3, Prague 12000, Czech Republic.
   [Gerostathopoulos, Ilias] Vrije Univ Amsterdam, Fac Sci, Dept Comp Sci, De Boelelaan 1105, NL-1081 HV Amsterdam, Netherlands.
C3 Charles University Prague; Vrije Universiteit Amsterdam
RP Gerostathopoulos, I (corresponding author), Vrije Univ Amsterdam, Fac Sci, Dept Comp Sci, De Boelelaan 1105, NL-1081 HV Amsterdam, Netherlands.
EM Bures@d3s.mff.cuni.cz; i.g.gerostathopoulos@vu.nl;
   Hnetynka@d3s.mff.cuni.cz; Plasil@d3s.mff.cuni.cz; Krijt@d3s.mff.cuni.cz;
   Vinarek@d3s.mff.cuni.cz; Kofron@d3s.mff.cuni.cz
RI Krijt, Filip/J-3534-2017; Hnětynka, Petr/J-1892-2017; Kofroň,
   Jan/J-3593-2017; Bures, Tomas/G-1821-2014
OI Hnětynka, Petr/0000-0002-1008-6886; Kofroň, Jan/0000-0003-0391-4812;
   Gerostathopoulos, Ilias/0000-0001-9333-7101; Bures,
   Tomas/0000-0003-3622-9918
FU ECSEL Joint Undertaking (JU) [783221]; Czech Science Foundation
   [20-24814J]
FX The research leading to these results has received funding from the
   ECSEL Joint Undertaking (JU) under grant agreement No 783221. Also, this
   work was partially supported by the Czech Science Foundation Project
   20-24814J.
CR Abd Alrahman Y, 2016, LECT NOTES COMPUT SC, V9688, P1, DOI 10.1007/978-3-319-39570-8_1
   Al Ali Rima, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P87, DOI 10.1109/WICSA.2014.20
   Ali R.A., 2013, D3STR201301 CHARL U
   [Anonymous], 2015, P ROBOCUP INT S HEF
   [Anonymous], 2013, MPM MODELS
   Artho C, INT C FORM ENG METH, P1
   Balasubramanian D., 2014, P MPM 2014 VAL SPAIN, P67
   Barnat J, 2014, LECT NOTES COMPUT SC, V8348, P41, DOI 10.1007/978-3-319-07602-7_5
   Blouin D., 2012, P MPM 12 INNSBR AUST, P37, DOI [10.1145/2508443.2508450, DOI 10.1145/2508443.2508450]
   Bonomi F., 2014, Fog Computing: A Platform for Internet of Things and Analytics, P169
   Bonomi Flavio, 2012, P 1 MCC WORKSH MOB C, P13, DOI 10.1145/2342509.2342513
   Bures Tomas, 2015, Software Engineering for Collective Autonomic Systems. The ASCENS Approach: LNCS 8998, P405, DOI 10.1007/978-3-319-16310-9_12
   Bures T, 2016, COMPUTER, V49, P50, DOI 10.1109/MC.2016.377
   Bures T, 2016, LECT NOTES COMPUT SC, V9952, P642, DOI 10.1007/978-3-319-47166-2_45
   Bures T, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P168, DOI 10.1109/WICSA.2016.33
   Bures T, 2014, LECT NOTES COMPUT SC, V8627, P250, DOI 10.1007/978-3-319-09970-5_23
   Bures Tomas, 2013, P 16 INT ACM SIGS S, P81, DOI [10.1145/2465449.2465462, DOI 10.1145/2465449.2465462]
   De Nicola R., 2013, P 10 INT S FORM METH, V7542, P25, DOI DOI 10.1007/978-3-642-35887-6_2
   De Nicola R, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2619998
   Dubochet G, 2009, P 21 WORK C PSYCH PR
   Fairbanks G, 2014, IEEE SOFTWARE, V31, P12, DOI 10.1109/MS.2014.82
   Gerostathopoulos I., 2014, P CPSDATA WORKSH INF
   Hennicker Rolf, 2014, Specification, Algebra, and Software. Essays Dedicated to Kokichi Futatsugi: LNCS 8373, P359, DOI 10.1007/978-3-642-54624-2_18
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Keznikl J., Proc. 16th Int. ACM Sigsoft Symp. Component-Based Softw. Eng. - CBSE '13, ACM Press, New York, New York, USA, P91, DOI DOI 10.1145/2465449.2465457
   Kit M, 2015, 2015 18TH INTERNATIONAL ACM SIGSOFT SYMPOSIUM ON COMPONENT-BASED SOFTWARE ENGINEERING (CBSE), P59, DOI 10.1145/2737166.2737172
   Krijt F, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P561, DOI 10.5220/0006273705610568
   Kroiss C, 2016, FUTURE GENER COMP SY, V56, P124, DOI 10.1016/j.future.2015.09.013
   Maffioletti F., 2013, Proceedings of the 2013 International Conference on Autonomous Agents and Multi-agent Systems, AAMAS '13, P1383
   MOSTERMAN PJ, 2002, ACM T MODEL COMPUT S, V12, P249, DOI DOI 10.1145/643120.643121
   Odersky M., 2016, PROGRAMMING SCALA CO
   Parker J, 2016, J FIELD ROBOT, V33, P877, DOI 10.1002/rob.21601
   Rao A., P 1 INT C MULT SYST, P312
   Wirsing M., 2015, SOFTWARE ENG COLLECT
NR 34
TC 8
Z9 8
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2020
VL 22
IS 4
SI SI
BP 497
EP 509
DI 10.1007/s10009-020-00558-z
EA FEB 2020
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MH4SO
UT WOS:000517008400002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Dimovski, AS
AF Dimovski, Aleksandar S.
TI CTL<SUP>☆</SUP> family-based model checking using variability
   abstractions and modal transition systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software product line engineering; Family-based model checking; Abstract
   interpretation; Modal transition systems; Featured transition systems;
   CTL* temporal logic
AB Variational systems can produce a (potentially huge) number of related systems, known as products or variants, by using features (configuration options) to mark the variable functionality. In many of the application domains, their rigorous verification and analysis are very important, yet the appropriate tools rarely are able to analyse variational systems. Recently, this problem was addressed by designing specialized so-called family-based model checking algorithms, which allow simultaneous verification of all variants in a single run by exploiting the commonalities between the variants. Yet, their computational cost still greatly depends on the number of variants (the size of configuration space), which is often huge. Moreover, their implementation and maintenance represent a costly research and development task. One of the most promising approaches to fighting the configuration space explosion problem is variability abstractions, which simplify variability away from variational systems. In this work, we show how to achieve efficient family-based model checking of CTL star temporal properties using variability abstractions and off-the-shelf (single-system) tools. We use variability abstractions for deriving abstract family-based model checking, where the variability model of a variational system is replaced with an abstract (smaller) version of it, called modal transition system, which preserves the satisfaction of both universal and existential temporal properties, as expressible in CTL star. Modal transition systems contain two kinds of transitions, termed may- and must-transitions, which are defined by the conservative (over-approximating) abstractions and their dual (under-approximating) abstractions, respectively. The variability abstractions can be combined with different partitionings of the configuration space to infer suitable divide-and-conquer verification plans for the given variational system. We illustrate the practicality of this approach for several variational systems using the standard version of (single-system) NuSMV model checker.
C1 [Dimovski, Aleksandar S.] Mother Teresa Univ, Fac Informat, Skopje, North Macedonia.
RP Dimovski, AS (corresponding author), Mother Teresa Univ, Fac Informat, Skopje, North Macedonia.
EM aleksandar.dimovski@unt.edu.mk
RI Dimovski, Aleksandar/ABC-8474-2021
OI Dimovski, Aleksandar/0000-0002-3601-2631
CR [Anonymous], 2016, Feature-Oriented Software Product Lines
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482, DOI 10.1109/ICSE.2013.6606594
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Ben-David S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P189, DOI 10.1109/ICSE.2015.40
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355, DOI 10.1145/2499370.2491976
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Classen Andreas, 2012, International Journal on Software Tools for Technology Transfer, V14, P589, DOI 10.1007/s10009-012-0234-1
   Classen A., 2011, SPLMC00000002 PCSTR, P1
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Cordy M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P190, DOI 10.1145/2635868.2635919
   Cordy M, 2012, PROC INT CONF SOFTW, P672, DOI 10.1109/ICSE.2012.6227150
   Cousot P., 2000, Abstractions, Reformulation, and Approximation. 4th International Symposium, SARA 2000. Proceedings (Lecture Notes in Artificial Intelligence Vol.1864), P1
   Dimovski A.S., 2017, LNCS, P249
   Dimovski A. S., 2015, LIPICS, V37, P247
   Dimovski AS, 2019, FORM ASP COMPUT, V31, P231, DOI 10.1007/s00165-019-00479-y
   Dimovski AS, 2019, LECT NOTES COMPUT SC, V11424, P192, DOI 10.1007/978-3-030-16722-6_11
   Dimovski AS, 2018, SCI COMPUT PROGRAM, V159, P1, DOI 10.1016/j.scico.2017.12.012
   Dimovski AS, 2018, LECT NOTES COMPUT SC, V10802, P301, DOI 10.1007/978-3-319-89363-1_17
   Dimovski A, 2017, INT J SOFTW TOOLS TE, V19, P585, DOI 10.1007/s10009-016-0425-2
   Dimovski AS, 2017, LECT NOTES COMPUT SC, V10202, P406, DOI 10.1007/978-3-662-54494-5_24
   Dimovski AS, 2016, LECT NOTES COMPUT SC, V9995, P217, DOI 10.1007/978-3-319-48989-6_14
   Dimovski AS, 2015, LECT NOTES COMPUT SC, V9232, P282, DOI 10.1007/978-3-319-23404-5_18
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   Gazzillo P, 2012, ACM SIGPLAN NOTICES, V47, P323, DOI 10.1145/2345156.2254103
   Gruler A, 2008, LECT NOTES COMPUT SC, V5051, P113, DOI 10.1007/978-3-540-68863-1_8
   Iosif-Lazar A.F., 2017, ART SCI ENG PROGRAM, V1
   Iosif-Lazar AF, 2015, IEEE INT CONF AUTOM, P597, DOI 10.1109/ASE.2015.84
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kästner C, 2011, ACM SIGPLAN NOTICES, V46, P805, DOI 10.1145/2076021.2048128
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Larsen U, 1988, Eur J Popul, V3, P203, DOI 10.1109/LICS.1988.5119
   Lochau M, 2016, J LOG ALGEBR METHODS, V85, P245, DOI 10.1016/j.jlamp.2015.09.004
   Midtgaard J, 2015, SCI COMPUT PROGRAM, V105, P145, DOI 10.1016/j.scico.2015.04.005
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nyman U, 2007, LECT NOTES COMPUT SC, V4421, P64
   Plath M, 2001, SCI COMPUT PROGRAM, V41, P53, DOI 10.1016/S0167-6423(00)00018-6
   Shoham S, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1297658.1297659
   Shoham S, 2010, INFORM COMPUT, V208, P178, DOI 10.1016/j.ic.2009.10.002
   ter Beek MH, 2017, LECT NOTES COMPUT SC, V10202, P387, DOI 10.1007/978-3-662-54494-5_23
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P287, DOI 10.1016/j.jlamp.2015.11.006
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   von Rhein A, 2016, J LOG ALGEBR METHODS, V85, P125, DOI 10.1016/j.jlamp.2015.06.007
NR 44
TC 11
Z9 11
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2020
VL 22
IS 1
SI SI
BP 35
EP 55
DI 10.1007/s10009-019-00528-0
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KS8XB
UT WOS:000518590800004
DA 2024-07-18
ER

PT J
AU Alvin, C
   Peterson, B
   Mukhopadhyay, S
AF Alvin, Chris
   Peterson, Brian
   Mukhopadhyay, Supratik
TI Static generation of UML sequence diagrams
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Static analysis; Scenario diagram generation; Sequence diagram; Code
   hypergraph; Query language; Vulnerability analysis
AB UML sequence diagrams are visual representations of object interactions in a system and can provide valuable information for program comprehension, debugging, maintenance, and software archeology. Sequence diagrams generated from legacy code are independent of existing documentation that may have eroded. We present a framework for static generation of UML sequence diagrams from object-oriented source code. The framework provides a query refinement system to guide the user to interesting interactions in the source code. Our technique involves constructing a hypergraph representation of the source code, traversing the hypergraph with respect to a user-defined query, and generating the corresponding set of sequence diagrams. We implemented our framework as a tool, StaticGen (supporting software: ), analyzing a corpus of 30 Android applications. We provide experimental results demonstrating the efficacy of our technique (originally appeared in the Proceedings of Fundamental Approaches to Software Engineering-20th International Conference, FASE 2017, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2017, Uppsala, Sweden, April 22-29, 2017).
C1 [Alvin, Chris] Furman Univ, 3300 Poinsett Highway, Greenville, SC 29613 USA.
   [Peterson, Brian; Mukhopadhyay, Supratik] Louisiana State Univ, 102F Elect Engn Bldg, Baton Rouge, LA 70803 USA.
C3 Louisiana State University System; Louisiana State University
RP Alvin, C (corresponding author), Furman Univ, 3300 Poinsett Highway, Greenville, SC 29613 USA.
EM ctalvin@gmail.com; supratik@csc.lsu.edu
CR Alur R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P304, DOI 10.1109/ICSE.2000.870421
   Alvin C., 2017, P 30 INT FLOR ART IN, P14
   Alvin C, 2014, AAAI CONF ARTIF INTE, P245
   [Anonymous], 1990, Software testing techniques {
   Architexa.com, 2015, INTR ARCH SEQ DIAGR
   Bedrin D, 2015, JTRACERT
   Berge C, 1989, N HOLLAND MATH LIB
   Buren R, BLUEBLOG
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chisel Group, 2016, DIV GITH
   Cormen T.H., 2009, INTRO ALGORITHMS
   Dowling W. F., 1984, Journal of Logic Programming, V1, P267, DOI 10.1016/0743-1066(84)90014-1
   E.F. Inc, 2015, ECLIPSE
   E.F. Inc, 2016, ECLIPSE LUNA
   HAREL D, 2003, UML REAL DESIGN EMBE
   Ishio T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P969
   Jerding DF, 1997, PROC INT CONF SOFTW, P360, DOI 10.1145/253228.253356
   Korshunova E, 2006, WORK CONF REVERSE EN, P297
   Koskimies K, 1996, PROC INT CONF SOFTW, P366, DOI 10.1109/ICSE.1996.493431
   Kroening D, 2015, GOTO CC A C C FRONT
   Kumar S, 2012, PROC INT CONF SOFTW, P914, DOI 10.1109/ICSE.2012.6227128
   Kumar S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P91, DOI 10.1145/1985793.1985807
   Labiche Y, 2013, PROC IEEE INT CONF S, P130, DOI 10.1109/ICSM.2013.24
   Leucker M, 2002, LECT NOTES COMPUT SC, V2556, P253
   Livshits V Benjamin, 2005, USENIX SEC S, V14, P18
   Lo David, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P109, DOI 10.1109/ASE.2008.21
   Lo D, 2009, IEEE INT CONF AUTOM, P359, DOI 10.1109/ASE.2009.19
   Lo D, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P460
   Luciano Sampaio, EARLY SECURITY VULNE
   Msdn.microsoft.com, 2015, VIS COD SEQ DIAGR
   Myers Del., 2010, P 18 ACM SIGSOFT INT, P367
   Naderi M, 2016, J CHEMINFORMATICS, V8, DOI 10.1186/s13321-016-0126-6
   Objectaid.com, 2015, UML EXPLORER
   Pugh B., 2015, FIND BUGS JAVA PROGR
   Roubtsov S, 2013, IET SOFTW, V7, P150, DOI 10.1049/iet-sen.2012.0056
   Rountev A, 2005, PROC INT CONF SOFTW, P254
   Rountev A., 2005, ACM SIGSOFT Software Engineering Notes, V31, P96
   Sable Research Group, 2015, SOOT FRAMEWORK ANAL
   Sampaio L, 2016, J SYST SOFTWARE, V113, P337, DOI 10.1016/j.jss.2015.12.021
   Soyatec.com, 2015, SOYAT SEQ DIAGR GEN
   Tonella P, 2003, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSM.2003.1235418
   Visual-paradigm.com, 2015, REV ENG SEQ DIAGR JA
   XDA Developers, 2013, LIST ALL OP SOURC AN
   Yau SS, 2007, INT J WEB SERV RES, V4, P59, DOI 10.4018/jwsr.2007100103
   Yau S.S., 2005, 8 IEEE INT S OBJ OR, P308
   Ziadi T, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P107, DOI 10.1109/ICECCS.2011.18
NR 46
TC 2
Z9 3
U1 4
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2021
VL 23
IS 1
SI SI
BP 31
EP 53
DI 10.1007/s10009-019-00545-z
EA OCT 2019
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PV6IB
UT WOS:000492566000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Busard, S
   Pecheur, C
   Qu, HY
   Raimondi, F
AF Busard, Simon
   Pecheur, Charles
   Qu, Hongyang
   Raimondi, Franco
TI Comparing approaches for model-checking strategies under imperfect
   information and fairness constraints
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Alternating-time temporal logic; Imperfect information; Fairness
   constraints; Model checking
ID AGENTS
AB Starting from alternating-time temporal logic, many logics for reasoning about strategies in a system of agents have been proposed. Some of them consider the strategies that agents can play when they have partial information about the state of the system. ATLK(irF) is such a logic to reason about uniform strategies under unconditional fairness constraints. While this kind of logics has been extensively studied, practical approaches for solving their model-checking problem appeared only recently. This paper considers three approaches for model-checking strategies under partial observability of the agents, applied to ATLK(irF). These three approaches have been implemented in PyNuSMV, a Python library based on the state-of-the-art model checker NuSMV. Thanks to the experimental results obtained with this library and thanks to the comparison of the relative performance of the approaches, this paper provides indications and guidelines for the use of these verification techniques, showing that different approaches are needed in different situations.
C1 [Busard, Simon; Pecheur, Charles] Catholic Univ Louvain, ICTEAM Inst, Louvain La Neuve, Belgium.
   [Qu, Hongyang] Univ Sheffield, Dept Automat Control & Syst Engn, Sheffield, S Yorkshire, England.
   [Raimondi, Franco] Middlesex Univ, Dept Comp Sci, London, England.
C3 Universite Catholique Louvain; University of Sheffield; Middlesex
   University
RP Busard, S (corresponding author), Catholic Univ Louvain, ICTEAM Inst, Louvain La Neuve, Belgium.
EM simon.busard@uclouvain.be; charles.pecheur@uclouvain.be;
   h.qu@sheffield.ac.uk; f.raimondi@mdx.ac.uk
OI Raimondi, Franco/0000-0002-9508-7713
CR Alur R, 2002, J ACM, V49, P672, DOI 10.1145/585265.585270
   [Anonymous], 2015, INT J SOFTW TOOLS TE
   [Anonymous], 2006, P 5 INT JOINT C AUT
   [Anonymous], 2007, Journal ofAppliedNonClassical Logics, DOI [DOI 10.3166/JANCL.17.423-475, 10.3166/jancl.17.423-475]
   [Anonymous], ARXIV11024225
   [Anonymous], 2004, Electron. Notes Theor. Comput. Sci.
   [Anonymous], 2017, THESIS
   Bozianu R, 2014, LECT NOTES COMPUTER, P441
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Bulling N, 2014, AUTON AGENT MULTI-AG, V28, P474, DOI 10.1007/s10458-013-9231-3
   Busard S, 2013, LNCS, P453
   Busard S, 2013, ELECTRON P THEOR COM, P71, DOI 10.4204/EPTCS.112.12
   Busard S, 2015, INFORM COMPUT, V242, P128, DOI 10.1016/j.ic.2015.03.014
   Busard S, 2014, LECT NOTES COMPUT SC, V8829, P27, DOI 10.1007/978-3-319-11737-9_3
   Calta J, 2010, LECT NOTES COMPUTER, P135
   Cavada R, NUSMV 2 5 USER MANUA NUSMV 2 5 USER MANUA
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Clarke EM, 1999, MODEL CHECKING, P1
   Dastani Mehdi., 2010, P 9 INT C AUTONOMOUS, P997
   Fagin R, 1995, Reasoning about knowledge
   Huang XW, 2014, ELECTRON PROC THEOR, P35
   Huang XW, 2014, AAAI CONF ARTIF INTE, P1426
   Jamroga W, 2004, FUND INFORM, V63, P185
   Jamroga W, 2008, THEOR COMPUT SYST, V42, P366, DOI 10.1007/s00224-007-9080-z
   Jamroga Wojciech, 2006, EUMAS 06
   Pilecki J, 2014, LECT NOTES COMPUTER, P166
   Raskin J, 2007, LOG METH COMPUT SCI
   van Ditmarsch Hans, 2014, Computational Logic in Multi-Agent Systems. 15th International Workshop, CLIMA XV. Proceedings. LNCS: 8624, P183
   van Ditmarsch H., 2015, 100 PRISONERS LIGHT, P83, DOI DOI 10.1007/978-3-319-16694-0_9
NR 29
TC 1
Z9 1
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2019
VL 21
IS 4
BP 449
EP 469
DI 10.1007/s10009-018-0505-6
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IK4EM
UT WOS:000476539900004
DA 2024-07-18
ER

PT J
AU Mateescu, R
   Requeno, JI
AF Mateescu, Radu
   Ignacio Requeno, Jose
TI On-the-fly model checking for extended action-based probabilistic
   operators
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 23rd International SPIN Symposium on Model Checking of Software (SPIN)
CY APR 07-08, 2016
CL Eindhoven, NETHERLANDS
DE Probabilistic transition system; Action-based probabilistic logic;
   On-the-fly model checking
ID LANGUAGE; LOGIC; VERIFICATION; SYSTEMS
AB The quantitative analysis of concurrent systems requires expressive and user-friendly property languages combining temporal, data handling, and quantitative aspects. In this paper, we aim at facilitating the quantitative analysis of systems modeled as PTSs (Probabilistic Transition Systems) labeled by actions containing data values and probabilities. We propose a new regular probabilistic operator that specifies the probability measure of a path described by a generalized regular formula involving arbitrary computations on data values. This operator, which subsumes the Until operators of PCTL and their action-based counterparts, can provide useful quantitative information about paths having certain (e.g., peak) cost values. We integrated the regular probabilistic operator into MCL (Model Checking Language) and we devised an associated on-the-fly model checking method, based on a combined local resolution of linear and Boolean equation systems. We implemented the method in the EVALUATOR model checker of the CADP toolbox and experimented it on realistic PTSs modeling concurrent systems.
C1 [Mateescu, Radu; Ignacio Requeno, Jose] Univ Grenoble Alpes, INRIA, CNRS, Grenoble INP,LIG, F-38000 Grenoble, France.
   [Ignacio Requeno, Jose] Univ Zaragoza, E-50009 Zaragoza, Spain.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); Inria; University of Zaragoza
RP Mateescu, R (corresponding author), Univ Grenoble Alpes, INRIA, CNRS, Grenoble INP,LIG, F-38000 Grenoble, France.
EM radu.mateescu@inria.fr
RI Requeno Jarabo, José Ignacio/GLT-6769-2022
OI Requeno Jarabo, José Ignacio/0000-0001-5111-8357
FU European project SENSATION (Self Energy-Supporting Autonomous
   Computation) [FP7-318490]
FX This work was partially supported by the European project SENSATION
   (Self Energy-Supporting Autonomous Computation) FP7-318490. We are
   grateful to the anonymous referees for their constructive criticism and
   their valuable suggestions for improving the manuscript. We also thank
   Wendelin Serwe for providing the LNT descriptions of the mutual
   exclusion protocols.
CR Agha G, 2006, ELECTRON NOTES THEOR, V153, P213, DOI 10.1016/j.entcs.2005.10.040
   Amestoy PR, 2001, LECT NOTES COMPUT SC, V1947, P121
   ANDERSEN HR, 1994, THEOR COMPUT SCI, V126, P3, DOI 10.1016/0304-3975(94)90266-6
   [Anonymous], LNCS
   [Anonymous], 1976, Algorithms and Complexity: New Directions and Recent Results
   Aziz K., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P269
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Baier C, 2007, IEEE T SOFTWARE ENG, V33, P209, DOI 10.1109/TSE.2007.36
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Bolze R, 2006, INT J HIGH PERFORM C, V20, P481, DOI 10.1177/1094342006070078
   BRZOZOWSKI JA, 1964, J ACM, V11, P481, DOI 10.1145/321239.321249
   Champelovier D., 2015, REFERENCE MANUAL LNT
   Chua L., 1975, Computer-aided analysis of electronic circuits: algorithms and computational techniques
   Clarke Edmund M., 2001, Model Checking
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Cleaveland R, 2005, THEOR COMPUT SCI, V342, P316, DOI 10.1016/j.tcs.2005.03.048
   CLEAVELAND R, 1993, FORM METHOD SYST DES, V2, P121, DOI 10.1007/BF01383878
   Coste N, 2009, LECT NOTES COMPUT SC, V5643, P204, DOI 10.1007/978-3-642-02658-4_18
   D'Argenio P. R., 2001, Process Algebra and Probabilistic Methods. Performance Modelling and Verification. Joint International Workshop, PAPM-PROBMIV 2001. Proceedings (Lecture Notes in Computer Science Vol.2165), P39
   DENICOLA R, 1990, LECT NOTES COMPUT SC, V469, P407
   DERSHOWITZ N, 1987, J SYMB COMPUT, V3, P69, DOI 10.1016/S0747-7171(87)80022-6
   DIJKSTRA EW, 1965, COMMUN ACM, V8, P569, DOI 10.1145/365559.365617
   Duflot M, 2004, DISTRIB COMPUT, V17, P65, DOI 10.1007/s00446-003-0102-z
   Emerson E. A., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P267
   FELLER W, 2001, INTRO PROBABILITY TH
   FISCHER MJ, 1979, J COMPUT SYST SCI, V18, P194, DOI 10.1016/0022-0000(79)90046-1
   Garavel H, 2001, INT FED INFO PROC, V69, P377, DOI 10.1007/0-306-47003-9_24
   Garavel H, 1998, LECT NOTES COMPUT SC, V1384, P68
   Graravel H, 2013, SOFTWARE TOOLS TECHN, V15, P89
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   HENNESSY M, 1985, J ACM, V32, P137, DOI 10.1145/2455.2460
   Hermanns H, 2000, LECT NOTES COMPUT SC, V1945, P420
   ISRAELI A, 1990, PROCEEDINGS OF THE NINTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P119, DOI 10.1145/93385.93409
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   KOZEN D, 1985, J COMPUT SYST SCI, V30, P162, DOI 10.1016/0022-0000(85)90012-1
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   LAMPORT L, 1987, ACM T COMPUT SYST, V5, P1, DOI 10.1145/7351.7352
   LARSEN KG, 1991, INFORM COMPUT, V94, P1, DOI 10.1016/0890-5401(91)90030-6
   LARSEN KG, 1988, LECT NOTES COMPUT SC, V299, P215
   Manna Z., 1992, SPECIFICATION, VI
   Mateescu Radu, 2016, Model-Checking Software. 23rd International Symposium, SPIN 2016, co-located with ETAPS 2016. Proceedings: LNCS 9641, P189, DOI 10.1007/978-3-319-32582-8_13
   Mateescu R, 2003, SCI COMPUT PROGRAM, V46, P255, DOI 10.1016/S0167-6423(02)00094-1
   Mateescu R., 2006, International Journal on Software Tools for Technology Transfer, V8, P37, DOI 10.1007/s10009-005-0194-9
   Mateescu R., 1996, COST 96
   Mateescu R, 2008, LECT NOTES COMPUT SC, V5014, P148, DOI 10.1007/978-3-540-68237-0_12
   Mateescu R, 2013, SCI COMPUT PROGRAM, V78, P843, DOI 10.1016/j.scico.2012.01.003
   Mateescu R, 2011, THEOR COMPUT SCI, V412, P2854, DOI 10.1016/j.tcs.2010.05.009
   VANGLABBEEK RJ, 1995, INFORM COMPUT, V121, P59, DOI 10.1006/inco.1995.1123
   Wolper P., 1981, 22nd Annual Symposium on Foundations of Computer Science, P340, DOI 10.1109/SFCS.1981.44
NR 50
TC 5
Z9 5
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2018
VL 20
IS 5
SI SI
BP 563
EP 587
DI 10.1007/s10009-018-0499-0
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA GQ7TL
UT WOS:000441949300006
DA 2024-07-18
ER

PT J
AU van Dijk, T
   van de Pol, J
AF van Dijk, Tom
   van de Pol, Jaco
TI Sylvan: multi-core framework for decision diagrams
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Multi-core; Parallel; Binary decision diagrams; Multi-terminal binary
   decision diagrams; Multi-valued decision diagrams; Symbolic model
   checking
ID SYMBOLIC REACHABILITY; BDD PACKAGE; VERIFICATION; MANIPULATION; MODEL
AB Decision diagrams, such as binary decision diagrams, multi-terminal binary decision diagrams and multi-valued decision diagrams, play an important role in various fields. They are especially useful to represent the characteristic function of sets of states and transitions in symbolic model checking. Most implementations of decision diagrams do not parallelize the decision diagram operations. As performance gains in the current era now mostly come from parallel processing, an ongoing challenge is to develop datastructures and algorithms for modern multi-core architectures. The decision diagram package Sylvan provides a contribution by implementing parallelized decision diagram operations and thus allowing sequential algorithms that use decision diagrams to exploit the power of multi-core machines. This paper discusses the design and implementation of Sylvan, especially an improvement to the lock-free unique table that uses bit arrays, the concurrent operation cache and the implementation of parallel garbage collection. We extend Sylvan with multi-terminal binary decision diagrams for integers, real numbers and rational numbers. This extension also allows for custom MTBDD leaves and operations and we provide an example implementation of GMP rational numbers. Furthermore, we show how the provided framework can be integrated in existing tools to provide out-of-the-box parallel BDD algorithms, as well as support for the parallelization of higher-level algorithms. As a case study, we parallelize on-the-fly symbolic reachability in the model checking toolset LTSmin. We experimentally demonstrate that the parallelization of symbolic model checking for explicit-state modeling languages, as supported by LTSmin, scales well. We also show that improvements in the design of the unique table result in faster execution of on-the-fly symbolic reachability.
C1 [van Dijk, Tom] Johannes Kepler Univ Linz, Inst Formal Models & Verificat, Linz, Austria.
   [van de Pol, Jaco] Univ Twente, Formal Methods & Tools, Enschede, Netherlands.
C3 Johannes Kepler University Linz; University of Twente
RP van Dijk, T (corresponding author), Johannes Kepler Univ Linz, Inst Formal Models & Verificat, Linz, Austria.
EM tom@tvandijk.nl; J.C.vandePol@utwente.nl
OI van Dijk, Tom/0000-0002-5366-1051
FU NWO project MaDriD [612.001.101]
FX Work funded by the NWO project MaDriD, Grant Nr. 612.001.101.
CR Acar UA, 2013, ACM SIGPLAN NOTICES, V48, P219, DOI 10.1145/2517327.2442538
   AKERS SB, 1978, IEEE T COMPUT, V27, P509, DOI 10.1109/TC.1978.1675141
   Arunachalam P, 1996, PR IEEE COMP DESIGN, P365, DOI 10.1109/ICCD.1996.563580
   BAHAR RI, 1993, 1993 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN - DIGEST OF TECHNICAL PAPERS, P188, DOI 10.1109/ICCAD.1993.580054
   Bianchi F, 1997, LECT NOTES COMPUT SC, V1225, P916, DOI 10.1007/BFb0031663
   Blom S, 2008, LECT NOTES COMPUT SC, V5160, P81, DOI 10.1007/978-3-540-85762-4_6
   Blom S, 2010, LECT NOTES COMPUT SC, V6174, P354
   Blumofe R. D., 1999, Journal of the ACM, V46, P720, DOI [10.1109/SFCS.1994.365680, 10.1145/324133.324234]
   Blumofe RD, 1996, J PARALLEL DISTR COM, V37, P55, DOI 10.1006/jpdc.1996.0107
   Brace K. S., 1990, 27th ACM/IEEE Design Automation Conference. Proceedings 1990 (Cat. No.90CH2894-4), P40, DOI 10.1109/DAC.1990.114826
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   BURCH JR, 1994, IEEE T COMPUT AID D, V13, P401, DOI 10.1109/43.275352
   Cabodi G. P., 1992, Fourth Symposium on the Frontiers of Massively Parallel Computation (Cat. No.92CH3185-6), P508, DOI 10.1109/FMPC.1992.234869
   Chen JS, 1999, ISCAS '99: PROCEEDINGS OF THE 1999 IEEE INTERNATIONAL SYMPOSIUM ON CIRCUITS AND SYSTEMS, VOL 1, P318, DOI 10.1109/ISCAS.1999.777867
   Chung MY, 2004, INT CONF QUANT EVAL, P272
   Ciardo G, 2003, LECT NOTES COMPUT SC, V2619, P379
   Ciardo G., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P328
   Ciardo G, 2009, ELECTRON PROC THEOR, P1, DOI 10.4204/EPTCS.14.1
   CLARKE EM, 1993, ACM IEEE D, P54
   Coudert O., 1990, 1990 IEEE International Conference on Computer-Aided Design. Digest of Technical Papers (Cat. No.90CH2924-9), P126, DOI 10.1109/ICCAD.1990.129859
   Ezekiel J, 2007, LECT NOTES COMPUT SC, V4590, P268
   Faxen Karl-Filip, 2010, Proceedings 39th International Conference on Parallel Processing (ICPP 2010), P313, DOI 10.1109/ICPP.2010.39
   Faxen Karl-Filip, 2008, Computer Architecture News, V36, P93, DOI 10.1145/1556444.1556457
   Frigo M, 1998, ACM SIGPLAN NOTICES, V33, P212, DOI 10.1145/277652.277725
   Gai S., 1995, Proceedings Euromicro Workshop on Parallel and Distributed Processing, P33, DOI 10.1109/EMPDP.1995.389132
   Grumberg O, 2006, FORM METHOD SYST DES, V29, P157, DOI 10.1007/s10703-006-0011-4
   Hahn EM, 2014, LECT NOTES COMPUT SC, V8442, P312, DOI 10.1007/978-3-319-06410-9_22
   Heyman Tamir., 2000, CAV 00, P20
   IBM: IBM System/ 370, 1975, IBM PUBLICATION
   Kam Timothy., 1998, MULTIPLE VALUED LOGI, V4, P9
   Kant Gijs, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P692, DOI 10.1007/978-3-662-46681-0_61
   Kimura S., 1990, Proceedings. 1990 IEEE International Conference on Computer Design: VLSI in Computers and Processors (Cat. No.90CH2909-0), P220, DOI 10.1109/ICCD.1990.130209
   KIMURA S, 1992, IEICE T FUND ELECTR, VE75A, P1255
   Laarman Alfons, 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P247
   Laarman A, 2011, LECT NOTES COMPUT SC, V6617, P506, DOI 10.1007/978-3-642-20398-5_40
   Lovato Alberto, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P35, DOI 10.1007/978-3-319-10431-7_4
   Meijer Jeroen, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P204, DOI 10.1007/978-3-319-13338-6_16
   Miller DM, 2002, INT SYM MVL, P245, DOI 10.1109/ISMVL.2002.1011095
   Milvang-Jensen K., 1998, Formal Methods in Computer-Aided Design. Second International Conference, FMCAD '98. Proceedings, P501
   OCHI H, 1991, 28TH ACM/IEEE DESIGN AUTOMATION CONFERENCE, P413, DOI 10.1145/127601.127704
   Oortwijn W., 2015, THESIS
   Ossowski J., 2010, THESIS
   Parasuram Y., 1994, Proceedings of the Twenty-Seventh Hawaii Internation Conference on System Sciences Vol. I: Architecture (Cat. No.94TH0607-2), P16, DOI 10.1109/HICSS.1994.323189
   Pelánek R, 2007, LECT NOTES COMPUT SC, V4595, P263
   RUDELL R, 1993, 1993 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN - DIGEST OF TECHNICAL PAPERS, P42, DOI 10.1109/ICCAD.1993.580029
   Sanghavi JV, 1996, DES AUT CON, P635, DOI 10.1109/DAC.1996.545652
   Sewell P, 2010, COMMUN ACM, V53, P89, DOI 10.1145/1785414.1785443
   Somenzi F., 2001, International Journal on Software Tools for Technology Transfer, V3, P171, DOI 10.1007/s100090100042
   Somenzi Fabio, 2015, CUDD: CU decision diagram package release 3.0.0
   Stornetta T, 1996, DES AUT CON, P641, DOI 10.1109/DAC.1996.545653
   van Dijk Tom, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P677, DOI 10.1007/978-3-662-46681-0_60
   van Dijk T., 2012, ECEASST, V53
   van Dijk T., 2016, THESIS
   van Dijk T, 2016, LECT NOTES COMPUT SC, V9636, P332, DOI 10.1007/978-3-662-49674-9_19
   van Dijk T, 2015, LECT NOTES COMPUT SC, V9409, P35, DOI 10.1007/978-3-319-25942-0_3
   Van Dijk T, 2013, ELECTRON NOTES THEOR, V296, P127, DOI 10.1016/j.entcs.2013.07.009
   van Dijk T, 2014, LECT NOTES COMPUT SC, V8806, P206, DOI 10.1007/978-3-319-14313-2_18
   Velev MN, 2014, ASIA S PACIF DES AUT, P750, DOI 10.1109/ASPDAC.2014.6742980
   Wimmer R, 2006, LECT NOTES COMPUT SC, V4218, P477
   Yang B, 1997, ACM SIGPLAN NOTICES, V32, P145, DOI 10.1145/263767.263784
NR 60
TC 26
Z9 27
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2017
VL 19
IS 6
BP 675
EP 696
DI 10.1007/s10009-016-0433-2
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ4TL
UT WOS:000412735100003
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Riener, H
   Haedicke, F
   Frehse, S
   Soeken, M
   Grosse, D
   Drechsler, R
   Fey, G
AF Riener, Heinz
   Haedicke, Finn
   Frehse, Stefan
   Soeken, Mathias
   Grosse, Daniel
   Drechsler, Rolf
   Fey, Goerschwin
TI metaSMT: focus on your application and not on solver integration
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Formal methods; Logic; SAT; SMT; EDSL
AB Many applications from artificial intelligence and formal methods use decision procedures as their core solving engines. In this context, automated reasoning based on Satisfiability (SAT) or Satisfiability Modulo Theories (SMT) is very effective. For a given application, however, selecting the best reasoning engine is a daunting task requiring first-hand experience and insight into engine-specific implementation details. Developers have to decide which concrete engine to use and how to integrate the engine into an application. Although file formats, e.g., DIMACS CNF or SMT-LIB, standardize the input of SAT and SMT solvers, not all engines provide input interfaces compliant with these standards. When following the standard, advanced (and not standardized) features of the solvers remain unused and their integration is left to the users. This work presents metaSMT, a framework that eases the integration of existing reasoning engines into applications. Inspired by SMT-LIB, metaSMT provides a domain-specific language that allows for engine-independent programming and offers a generic interface to advanced features as an extra abstraction layer. State-of-the-art solvers for satisfiability and other theories are available via metaSMT with little programming effort. Language bindings for C++ and Python are provided. We show how metaSMT can be used as a portfolio consistency checker for SMT-LIB2 instances. The benchmark set of the category quantifier-free bit-vector theory from SMT-LIB (1.6 GB) is used for these experiments.
C1 [Riener, Heinz; Haedicke, Finn; Frehse, Stefan; Soeken, Mathias; Grosse, Daniel; Drechsler, Rolf; Fey, Goerschwin] Univ Bremen, Fac Math & Comp Sci, Bremen, Germany.
   [Riener, Heinz; Fey, Goerschwin] German Aerosp Ctr DLR eV, Inst Space Syst, Bremen, Germany.
   [Grosse, Daniel; Drechsler, Rolf] German Res Ctr Artificial Intelligence DFKI GmbH, Cyber Phys Syst, Bremen, Germany.
   [Soeken, Mathias] Ecole Polytech Fed Lausanne, Integrated Syst Lab, Lausanne, Switzerland.
C3 University of Bremen; Helmholtz Association; German Aerospace Centre
   (DLR); German Research Center for Artificial Intelligence (DFKI); Swiss
   Federal Institutes of Technology Domain; Ecole Polytechnique Federale de
   Lausanne
RP Riener, H (corresponding author), Univ Bremen, Fac Math & Comp Sci, Bremen, Germany.; Riener, H (corresponding author), German Aerosp Ctr DLR eV, Inst Space Syst, Bremen, Germany.
EM heinz.riener@dlr.de; finn@cs.uni-bremen.de; sfrehse@cs.uni-bremen.de;
   mathias.soeken@epfl.ch; grosse@cs.uni-bremen.de;
   drechsle@cs.uni-bremen.de; goerschwin.fey@dlr.de
RI Fey, Goerschwin/P-5583-2015; Soeken, Mathias/M-2666-2013; Fey,
   Goerschwin/AFA-0391-2022; Drechsler, Rolf/K-2508-2014
OI Fey, Goerschwin/0000-0001-6433-6265; Riener, Heinz/0000-0003-1527-7160;
   Drechsler, Rolf/0000-0002-9872-1740; Grosse, Daniel/0000-0002-1490-6175
FU European Union's Horizon 2020 research and innovation programme within
   the project IMMORTAL [644905]; German Federal Ministry of Education and
   Research (BMBF) within the project EffektiV [01IS13022E]; German
   Research Foundation (DFG) within the Reinhart Koselleck project [DR
   287/23-1]; University of Bremen's graduate school SyDe - German
   Excellence Initiative; H2020 - Industrial Leadership [644905] Funding
   Source: H2020 - Industrial Leadership
FX This work was supported in part by the European Union's Horizon 2020
   research and innovation programme within the project IMMORTAL under
   Grand Agreement No. 644905, the German Federal Ministry of Education and
   Research (BMBF) within the project EffektiV under Contract No.
   01IS13022E, by the German Research Foundation (DFG) within the Reinhart
   Koselleck project DR 287/23-1 and by the University of Bremen's graduate
   school SyDe, funded by the German Excellence Initiative.
CR Abdessaied N, 2013, INT SYM MVL, P328, DOI 10.1109/ISMVL.2013.26
   [Anonymous], 2009, Cudd: Cu decision diagram package-release 2.4. 0
   [Anonymous], 2008, J. Satisf. Boolean Model. Comput., DOI 10.3233/sat190039
   [Anonymous], 2013, Proceedings of SAT Competition 2013
   Arbel Eli, 2009, Proceedings of the 2009 9th International Conference Formal Methods in Computer-Aided Design (FMCAD), P198, DOI 10.1109/FMCAD.2009.5351118
   Armando Alessandro, 2009, International Journal on Software Tools for Technology Transfer, V11, P69, DOI 10.1007/s10009-008-0091-0
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C., 2012, SMT LIB STANDARD VER
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Bjesse P, 2008, LECT NOTES COMPUT SC, V5123, P446
   Brummayer R, 2009, LECT NOTES COMPUT SC, V5505, P174, DOI 10.1007/978-3-642-00768-2_16
   Bruttomesso R., 2012, SATISFIABILITY MODUL, P6
   Cok DR, 2011, LECT NOTES COMPUT SC, V6617, P480, DOI 10.1007/978-3-642-20398-5_36
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, P151
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Drechsler R, 2008, IEEE T COMPUT AID D, V27, P1329, DOI 10.1109/TCAD.2008.923107
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Een N., 2006, J SATISFIABILITY BOO, V2, P1, DOI DOI 10.3233/SAT190014
   Ganai MalayK., 2006, P 2006 IEEEACM INT C, P794
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   Haedicke F, 2010, ICCAD-IEEE ACM INT, P756, DOI 10.1109/ICCAD.2010.5654279
   Haedicke Finn, 2012, SOCIETY, P1
   Hudak P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P134, DOI 10.1109/ICSR.1998.685738
   Levin L.A., 1973, TRANSLATION RUSSIAN, V9, P115
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2725, P1
   Palikareva Hristina, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P53, DOI 10.1007/978-3-642-39799-8_3
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Riener H., 2012, 2012 10th IEEE/ACM International Conference on Formal Methods and Models for Codesign (MEMOCODE 2012), P43, DOI 10.1109/MEMCOD.2012.6292299
   Riener H., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P388, DOI 10.1109/ICSTW.2011.55
   Riener H, 2013, DES AUT TEST EUROPE, P939
   Shtrichman O., 2001, Correct Hardware Design and Verification Methods. 11th IFIP WG 10.5 Advanced Research Working Conference, CHARME 2001. Proceedings (Lecture Notes in Computer Science Vol.2144), P58
   Wille R, 2007, VLSI-SOC 2007: PROCEEDINGS OF THE 2007 IFIP WG 10.5 INTERNATIONAL CONFERENCE ON VERY LARGE SCALE INTEGRATION, P88
NR 33
TC 4
Z9 5
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2017
VL 19
IS 5
BP 605
EP 621
DI 10.1007/s10009-016-0426-1
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FF8VL
UT WOS:000409295800007
DA 2024-07-18
ER

PT J
AU Mammar, A
   Laleau, R
AF Mammar, Amel
   Laleau, Regine
TI Modeling a landing gear system in Event-B
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 4th International Conference on Abstract State Machines, Alloy, B,
   TLA,VDM, and Z (ABZ)
CY JUN 02-06, 2014
CL Toulouse, FRANCE
SP Airbus, CNES, CNRS, CRITT Informatique, CS, ENSEEIHT Toulouse, FME, INP Toulouse, IRIT, Midi Pyrenees Regi, ONERA, SCCH, Univ Paul Sabatier Toulouse
DE Event-B; Formal development; Refinement; Development strategy;
   Verification; Validation
AB This article describes the Event-B modeling of a landing gear system of an aircraft whose complete description can be found in Boniol and Wiels (The Landing Gear System Case Study, ABZ Case Study, Communications in Computer Information Science, vol 433, Springer, Berlin, 2014). This real-life case study has been proposed by the ABZ'2014 track that took place in Toulouse, the European capital of the aeronautic industry. Our modeling is based on the Parnas and Madey's 4-Variable Model that permits to consider the different parts of a system. These parts are incrementally introduced using the Event-B refinement technique. The entire development has been carried out with the Rodin toolset. To ensure the correctness of the different components, we use several verification techniques (animation, model checking and proof) depending on the complexity and the kind of the properties to verify. Basically, prior to the proof phase that can be tedious and complex, we use the animator AnimB and the model checker ProB that permit to discover some trivial inconsistencies. Once no error is reported, we start the proof phase by using the Atelier B and SMT provers which we installed on Rodin. We conclude the article by drawing up some key findings of and lessons learned from this experience.
C1 [Mammar, Amel] Inst Mines Telecom Telecom SudParis, CNRS UMR SAMOVAR 5157, Evry, France.
   [Laleau, Regine] Univ Paris Est, LACL, UPEC, IUT Senart Fontainebleau, Creteil, France.
C3 IMT - Institut Mines-Telecom; Institut Polytechnique de Paris; Telecom
   SudParis; Universite Paris-Est-Creteil-Val-de-Marne (UPEC)
RP Laleau, R (corresponding author), Univ Paris Est, LACL, UPEC, IUT Senart Fontainebleau, Creteil, France.
EM amel.mammar@telecom-SudParis.eu; laleau@u-pec.fr
RI Laleau, Regine/ABA-9759-2021
OI Laleau, Regine/0000-0002-2019-4936
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   AMEL MAMMAR, 2018, MODELING  A LANDING
   [Anonymous], 2005, B BOOK ASSIGNING PRO
   Boniol F., 2014, COMMUNICATIONS COMPU, V433
   Butler Michael, 2009, WORKING PAPER
   Cansell D, 2007, LECT NOTES COMPUT SC, V4355, P140
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Frappier M, 2014, FORM ASP COMPUT, V26, P919, DOI 10.1007/s00165-013-0286-3
   Frappier M, 2008, INNOV SYST SOFTW ENG, V4, P285, DOI 10.1007/s11334-008-0064-1
   Hudon S, 2011, ELECTRON NOTES THEOR, V280, P57, DOI 10.1016/j.entcs.2011.11.018
   Iliasov A, 2010, LECT NOTES COMPUT SC, V5977, P174, DOI 10.1007/978-3-642-11811-1_14
   Jeffords RD, 2010, FORM METHOD SYST DES, V37, P265, DOI 10.1007/s10703-010-0106-9
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   MILLER SP, 2001, P 20 DIG AV SYST C D
   PARNAS DL, 1995, SCI COMPUT PROGRAM, V25, P41, DOI 10.1016/0167-6423(95)96871-J
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Sarshogh M.-R., 2011, ELECT COMMUNICATION, V46
   Silva R, 2011, SOFTWARE PRACT EXPER, V41, P199, DOI 10.1002/spe.1002
   Sorea M., 2004, MODELING VERIFICATIO, P199
NR 21
TC 13
Z9 13
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2017
VL 19
IS 2
BP 167
EP 186
DI 10.1007/s10009-015-0391-0
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA EQ6BQ
UT WOS:000398167200003
DA 2024-07-18
ER

PT J
AU Montali, M
   Calvanese, D
AF Montali, Marco
   Calvanese, Diego
TI Soundness of data-aware, case-centric processes
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
AB In recent years, a plethora of foundational results and corresponding techniques and tools has been developed to support the modeling, analysis, execution and improvement of business processes along their entire lifecycle. A major shortcoming of the analysis techniques is that they solely focus on the control-flow dimension of the process, omitting how business objects (i.e., cases) and their data affect and are manipulated by process instances and their tasks. In this work, we aim at filling this gap. We recast the classical notion of case-centric business process in a data-aware context. An emitter action is used to generate new cases, and while a case flows through the process control-flow, corresponding data are created, updated, and deleted by operating over a full-fledged relational database with constraints. To make our investigation concrete, we ground it on the recently introduced framework of data-centric dynamic systems (DCDSs). We reformulate the standard correctness criterion of soundness into this rich setting, and show that it is in general undecidable to check. We then provide a fine-grained analysis on the role of data in business processes. We substantiate this analysis by introducing a class of case-centric DCDSs that enjoys good modeling principles, and at the same time guarantees decidability of soundness. Decidability is obtained by finding a cutoff on the number of process instances that must be subject to the soundness test. We finally show that the introduced modeling guidelines are strict, in the sense that weakening even one single requirement they pose leads to undecidability.
C1 [Montali, Marco; Calvanese, Diego] Free Univ Bozen Bolzano, KRDB Res Ctr Knowledge & Data, Bolzano, Italy.
C3 Free University of Bozen-Bolzano
RP Montali, M (corresponding author), Free Univ Bozen Bolzano, KRDB Res Ctr Knowledge & Data, Bolzano, Italy.
EM montali@inf.unibz.it
RI Calvanese, Diego/L-4126-2015
OI Montali, Marco/0000-0002-8021-3430
FU EU project Optique [FP7-IP-318338]; UNIBZ
FX The authors are partially supported by the EU project Optique
   (FP7-IP-318338), and by the UNIBZ internal projects KENDO and OnProm.
CR Abdulla P. A., 2014, LIPICS, P653
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Bagheri Hariri B., 2014, 14 INT C PRINC KNOWL
   Bagheri Hariri B., 2013, 32 ACM SIGACT SIGMOD
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Belardinelli F., 2012, 13 INT C PRINC KNOWL
   Bojanczyk M., 2012, 39 ACM SIGPLAN SIGAC
   Bojanczyk M., 2013, 32 ACM SIGACT SIGMOD
   Calvanese D., 2014, 23 ACM INT INF KNOWL
   Calvanese D., 2013, 32 ACM SIGACT SIGMOD
   Calvanese D, 2013, LNCS, V7994
   CHANDRA AK, 1980, J COMPUT SYST SCI, V21, P156, DOI 10.1016/0022-0000(80)90032-X
   Dumas M, 2011, LECT NOTES COMPUT SC, V6909, P19, DOI 10.1007/978-3-642-23737-9_2
   Fahland D., 2011, LNCS, V87
   Fahland D, 2011, DATA KNOWL ENG, V70, P448, DOI 10.1016/j.datak.2011.01.004
   Gabbay M. J., 2002, Formal Aspects of Computing, V13, P341, DOI 10.1007/s001650200016
   Hariri BB, 2013, J ARTIF INTELL RES, V46, P651
   Huchting Reiner, 2013, CONCUR 2013 - Concurrency Theory. 24th International Conference, CONCUR 2013. Proceedings: LNCS 8052, P182, DOI 10.1007/978-3-642-40184-8_14
   Hull R., 2003, Proc. ACM PODS, P1
   Hull R., 2008, LNCS, V5332
   Lomuscio A., 2014, 14 INT C PRINC KNOWL
   Meyer R, 2008, INT FED INFO PROC, V273, P477
   Minsky M., 1967, Computation: finite and infinite machines
   Montali M, 2014, AAMAS'14: PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS, P157
   Montanari U., 2005, LNCS, V3465
   Needham R., 1989, DISTRIBUTED SYSTEMS
   Rosa-Velardo F, 2011, THEOR COMPUT SCI, V412, P4439, DOI 10.1016/j.tcs.2011.05.007
   Solomakhin D., 2013, P 11 INT C SERV OR C
   van der Aalst W. M. P., 2011, FORM ASP COMPUT, V23
   van der Aalst WMP, 1997, LECT NOTES COMPUT SC, V1248, P407
   Vianu V., 2009, 12 INT C DAT THEOR I
NR 32
TC 14
Z9 15
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2016
VL 18
IS 5
BP 535
EP 558
DI 10.1007/s10009-016-0417-2
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU1ZY
UT WOS:000382011100005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sethi, D
   Talupur, M
   Malik, S
AF Sethi, Divjyot
   Talupur, Muralidhar
   Malik, Sharad
TI Model checking unbounded concurrent lists
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 20th International SPIN Symposium on Model Checking of Software
CY JUL 08-09, 2013
CL Stony Brook, NY
SP SPIN
DE Model checking; Linearizability; Concurrent data structures;
   Compositional reasoning; Abstractions
AB We present a model checking-based method for verifying list-based concurrent set data structures. Concurrent data structures are notorious for being hard to get right and thus, their verification has received significant attention from the verification community. These data structures are unbounded in two dimensions: the list size is unbounded and an unbounded number of threads access them. Thus, their model checking requires abstraction to a model bounded in both the dimensions. We first show how the unbounded number of threads can be model checked by reduction to a finite model, while assuming a bounded number of list nodes. In particular, we leverage the CMP (CoMPositional) method which abstracts the unbounded threads by keeping one thread as is (concrete) and abstracting all the other threads to a single environment thread. Next, the method proceeds as a series of iterations where in each iteration the abstraction is model checked and, if a spurious counterexample is observed, refined. This is accomplished by the user by inspecting the returned counterexamples. If the user determines the returned counterexample to be spurious, she adds constraints to the abstraction in the form of lemmas to refine it. Upon addition, these lemmas are also verified for correctness as part of the CMP method. Thus, since these lemmas are verified as well, we show how some of the lemmas required for refinement of this abstract model can be mined automatically using an assertion mining tool, Daikon. Next, we show how the CMP method approach can be extended to the list dimension as well, to fully verify the data structures in both the dimensions. While it is possible to show correctness of these data structures for an unbounded number of threads by keeping one concrete thread and abstracting others, this is not directly possible in the list dimension as the nodes pointed to by the threads change during list traversal. Our method addresses this challenge by constructing an abstraction for which the concrete nodes, i.e., the nodes pointed to by the threads, can change as the thread pointers move with program execution. Further, our method also allows for refinement of this abstraction to prove properties of interest. We show the soundness of our method and establish its utility by model checking challenging concurrent list-based data structure examples.
C1 [Sethi, Divjyot; Malik, Sharad] Princeton Univ, Princeton, NJ 08544 USA.
   [Talupur, Muralidhar] Intel Corp, Strateg CAD Labs, Hillsboro, OR 97124 USA.
C3 Princeton University; Intel Corporation
RP Sethi, D (corresponding author), Princeton Univ, Princeton, NJ 08544 USA.
EM dsethi@princeton.edu
OI Malik, Sharad/0000-0002-0837-5443
CR Berdine J, 2008, LECT NOTES COMPUT SC, V5123, P399
   Burckhardt S, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P330, DOI 10.1145/1806596.1806634
   Calcagno C, 2007, LECT NOTES COMPUT SC, V4634, P233
   Cerny P, 2010, LECT NOTES COMPUT SC, V6174, P465, DOI 10.1007/978-3-642-14295-6_41
   Chou C.T., 2004, P FMCAD
   Colvin R, 2006, LECT NOTES COMPUT SC, V4144, P475, DOI 10.1007/11817963_44
   Das S., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P160
   Dinsdale-Young T, 2010, LECT NOTES COMPUT SC, V6183, P504, DOI 10.1007/978-3-642-14107-2_24
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Gotsman A, 2007, ACM SIGPLAN NOTICES, V42, P266, DOI 10.1145/1273442.1250765
   Herlihy M., 2008, ART MULTIPROCESSOR P
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   Jacobs B, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P271, DOI 10.1145/1926385.1926417
   Kristic S., 2005, P 4 INT WORKSH AUT V
   Lahiri SK, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1297658.1297662
   Lea D, 2005, SCI COMPUT PROGRAM, V58, P293, DOI 10.1016/j.scico.2005.03.007
   Liu Y, 2009, LECT NOTES COMPUT SC, V5850, P321
   McMillan KL, 1999, LECT NOTES COMPUT SC, V1703, P219
   MICHAEL MM, 1995, TR599 U ROCH COMP SC
   Noll T, 2008, LECT NOTES COMPUT SC, V5014, P84, DOI 10.1007/978-3-540-68237-0_8
   O'Leary John, 2009, Proceedings of the 2009 9th International Conference Formal Methods in Computer-Aided Design (FMCAD), P172, DOI 10.1109/FMCAD.2009.5351126
   Pnueli A., 2002, International Conference on Computer Aided Verification (CAV), P107
   Pnuelil A., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P82
   Reinders James, 2007, Intel threading building blocks-outfitting C++ for multi-core processor parallelism
   Sagiv M., 1999, Conference Record of POPL '99. 26th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P105, DOI 10.1145/292540.292552
   Sethi D., 2012, P 19 INT SPIN WORKSH
   Shao Jie Zhang, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P43, DOI 10.1109/SSIRI.2010.37
   Talupur Murali., 2008, FORMAL METHODS COMPU, P1
   Vafeiadis V., 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P129, DOI 10.1145/1122971.1122992
   Vafeiadis V, 2010, LECT NOTES COMPUT SC, V6174, P450, DOI 10.1007/978-3-642-14295-6_40
   Vafeiadis V, 2009, LECT NOTES COMPUT SC, V5403, P335, DOI 10.1007/978-3-540-93900-9_27
   Vechev M, 2009, LECT NOTES COMPUT SC, V5578, P261, DOI 10.1007/978-3-642-02652-2_21
   Yahav E, 2001, ACM SIGPLAN NOTICES, V36, P27, DOI 10.1145/373243.360206
   Zhang SJ, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1185, DOI 10.1145/1985793.1986037
NR 34
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2016
VL 18
IS 4
BP 375
EP 391
DI 10.1007/s10009-015-0369-y
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DR2AV
UT WOS:000379708300003
DA 2024-07-18
ER

PT J
AU de Len, HP
   Haar, S
   Longuet, D
AF de Len, Hernan Ponce
   Haar, Stefan
   Longuet, Delphine
TI Model-based testing for concurrent systems: unfolding-based test
   selection
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Conformance testing; True concurrency; Petri net unfolding; Event
   structures; Coverage criteria; Cut-off events
AB Model-based testing has mainly focused on models where concurrency is interpreted as interleaving (like the ioco theory for labeled transition systems), which may be too coarse when one wants concurrency to be preserved in the implementation. In order to test such concurrent systems, we choose to use Petri nets as specifications and define a concurrent conformance relation named co-ioco. We present a test generation algorithm based on Petri net unfolding able to build a complete test suite w.r.t our co-ioco conformance relation. In addition, we propose several coverage criteria that allow to select finite prefixes of an unfolding in order to build manageable test suites.
C1 [de Len, Hernan Ponce; Haar, Stefan] Ecole Normale Super, INRIA, 61 Ave President Wilson, F-94235 Cachan, France.
   [de Len, Hernan Ponce; Haar, Stefan] Ecole Normale Super, LSV, 61 Ave President Wilson, F-94235 Cachan, France.
   [de Len, Hernan Ponce; Haar, Stefan] CNRS, 61 Ave President Wilson, F-94235 Cachan, France.
   [Longuet, Delphine] Univ Paris 11, LRI UMR8623, Batiment 650, F-91405 Orsay, France.
C3 Inria; Universite Paris Saclay; Universite Paris Saclay; Centre National
   de la Recherche Scientifique (CNRS); Universite Paris Saclay
RP Longuet, D (corresponding author), Univ Paris 11, LRI UMR8623, Batiment 650, F-91405 Orsay, France.
EM ponce@lsv.ens-cachan.fr; stefan.haar@inria.fr; delphine.longuet@lri.fr
OI Longuet, Delphine/0000-0002-8394-276X
CR Arapinis M, 2010, 2010 23RD IEEE COMPUTER SECURITY FOUNDATIONS SYMPOSIUM (CSF), P107, DOI 10.1109/CSF.2010.15
   Biere A, 2006, LOG METH COMPUT SCI, V2, DOI 10.2168/LMCS-2(5:5)2006
   Bochmann GV, 2008, LECT NOTES COMPUT SC, V5047, P169, DOI 10.1007/978-3-540-68524-1_13
   de Leon Hernan Ponce, 2012, Tests and Proofs. Proceedings 6th International Conference, TAP 2012, P83, DOI 10.1007/978-3-642-30473-6_8
   Esparza J., 1996, Tools and Algorithms for the Construction and Analysis of Systems. Second International Workshop, TACAS '96. Proceedings, P87
   Faivre A, 2008, LECT NOTES COMPUT SC, V5047, P184, DOI 10.1007/978-3-540-68524-1_14
   Gaston C, 2006, LECT NOTES COMPUT SC, V3964, P1
   Haar S, 2007, LECT NOTES COMPUT SC, V4581, P171
   Heerink L., 1997, Formal Description Techniques and Protocol Specification, Testing and Verification. FORTE X/PSTV XVII'97. IFIP TC6 WG6.1 Joint International Conference on Formal Description Techniques for Distributed Systems and Communication Protocols (FORTE X) and Protocol Specification, Testing and Verification (PSTV XVII), P23
   Hennessy M., 1988, An algebraic theory of processes
   Henniger O, 1997, TESTING OF COMMUNICATING SYSTEMS, VOL 10, P255
   Hierons RM, 2008, LECT NOTES COMPUT SC, V5047, P200, DOI 10.1007/978-3-540-68524-1_15
   Jard C., 2005, International Journal on Software Tools for Technology Transfer, V7, P297, DOI 10.1007/s10009-004-0153-x
   Jard C, 2003, INFORM SOFTWARE TECH, V45, P805, DOI 10.1016/S0950-5849(03)00061-2
   Jéron T, 2009, ELECTRON NOTES THEOR, V240, P167, DOI 10.1016/j.entcs.2009.05.051
   Khomenko V, 2006, ACTA INFORM, V43, P307, DOI 10.1007/s00236-006-0023-y
   Krichen M, 2009, FORM METHOD SYST DES, V34, P238, DOI 10.1007/s10703-009-0065-1
   LESTIENNES G, 2005, J EUROP SYSTEMES AUT, P255
   NIELSEN M, 1981, THEOR COMPUT SCI, V13, P85, DOI 10.1016/0304-3975(81)90112-2
   Peleska J., 1996, FME '96: Industrial Benefit and Advances in Formal Methods. Third International Symposium of Formal Methods Europe. Proceedings, P538
   Ponce de Leon Hernan, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P98, DOI 10.1007/978-3-642-41707-8_7
   Schneider S., 1999, Concurrent and Real Time Systems: The CSP Approach, V1st
   Segala R, 1997, INFORM COMPUT, V138, P194, DOI 10.1006/inco.1997.2652
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   ULRICH A, 1998, IFIP C P, V107, P7
   WINSKEL G, 1986, LECT NOTES COMPUT SC, V222, P453
NR 26
TC 11
Z9 11
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2016
VL 18
IS 3
BP 305
EP 318
DI 10.1007/s10009-014-0353-y
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DK5QH
UT WOS:000374974200005
DA 2024-07-18
ER

PT J
AU Schupp, S
   Abrahám, E
   Waez, MTB
   Rambow, T
   Qiu, Z
AF Schupp, Stefan
   Abraham, Erika
   Waez, Md Tawhid Bin
   Rambow, Thomas
   Qiu, Zeng
TI On the applicability of hybrid systems safety verification tools from
   the automotive perspective
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Hybrid systems; Reachability analysis; Formal methods; Safety
   verification
ID INSULIN SENSITIVITY
AB Traditionally, extensive vehicle testing is applied to assure the robustness and safety of automotive systems. This approach is highly challenged by increasing system complexity. Formal verification lends a powerful framework for model-based safety assurance, but due to the mixed discrete-continuous behavior of automotive systems, traditional tools for discrete program verification are helpful but not sufficient.In academia, during the last two decades new approaches arose for the formal verification of such mixed discrete-continuous systems. However, the industry is not fully aware of this development, the tools are seldom tried and their applicability is not well examined. In a Ford-RWTH research alliance project, we aimed at evaluating the potential of knowledge and technology transfer in this area.This paper has two main objectives. Firstly, we want to report on the state-of-the-art in the above-mentioned academic development in a generally understandable form, targeted to interested potential users. Secondly, we want to share our observations after testing different available tools for their applicability and usability in the automotive sector and as a conclusion devise some recommendations.
C1 [Schupp, Stefan; Abraham, Erika] Rhein Westfal TH Aachen, Aachen, Germany.
   [Waez, Md Tawhid Bin; Rambow, Thomas; Qiu, Zeng] Ford Motor Co, Dearborn, MI USA.
C3 RWTH Aachen University; Ford Motor Company
RP Schupp, S (corresponding author), Rhein Westfal TH Aachen, Aachen, Germany.
EM stefan.schupp@cs.rwth-aachen.de
RI Abraham, Erika/G-5259-2012
OI Abraham, Erika/0000-0002-5647-6134
FU Projekt DEAL; Ford Motor Company
FX Open Access funding enabled and organized by Projekt DEAL. We are
   thankful for the funding of this work by Ford Motor Company in the
   course of the project "Safety Verification for MixedDiscrete-Continuous
   Automotive Systems".
CR Ahrendt W., 2016, DEDUCTIVE SOFTWARE V
   Alla H, 1998, J CIRCUIT SYST COMP, V8, P159, DOI 10.1142/S0218126698000079
   Althoff M., 2015, P WORKSH APPL VER CO, P120, DOI DOI 10.29007/ZBKV
   Althoff M., 2017, P 4 INT WORKSH APPL, P143
   Althoff M., 2018, ARCH18, P23
   Althoff M., 2019, ARCH19, P14
   Bak S., 2013, HSCC 13
   Bak S, 2017, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (PART OF CPS WEEK) (HSCC' 17), P173, DOI 10.1145/3049797.3054973
   Benvenuti L., 2008, P 17 IFAC WORLD C, V41, P8960, DOI 10.3182/20080706-5-KR-1001.01513
   Berger P, 2019, LECT NOTES COMPUT SC, V11687, P59, DOI 10.1007/978-3-030-27008-7_4
   Berger P, 2018, LECT NOTES COMPUT SC, V10951, P312, DOI 10.1007/978-3-319-95582-7_18
   BERGMAN RN, 1985, ENDOCR REV, V6, P45, DOI 10.1210/edrv-6-1-45
   BERGMAN RN, 1979, AM J PHYSIOL, V236, pE667, DOI 10.1152/ajpendo.1979.236.6.E667
   BERGMAN RN, 1981, J CLIN INVEST, V68, P1456, DOI 10.1172/JCI110398
   Bertot Yves, 2013, Interactive theorem proving and program development: Coq'Art: the calculus of inductive constructions
   Bogomolov S, 2019, PROCEEDINGS OF THE 2019 22ND ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC '19), P39, DOI 10.1145/3302504.3311804
   Chen X, 2015, LECT NOTES COMPUT SC, V9058, P408, DOI 10.1007/978-3-319-17524-9_29
   cps-vo, US
   Damm W., 2014, P 17 INT C HYBR SYST, P145, DOI DOI 10.1145/2562059.2562120
   Donzé A, 2013, 2013 EUROPEAN CONTROL CONFERENCE (ECC), P4244
   Fan CC, 2016, LECT NOTES COMPUT SC, V9779, P531, DOI 10.1007/978-3-319-41528-4_29
   Fehnker A, 2004, LECT NOTES COMPUT SC, V2993, P326
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Fulton N, 2015, LECT NOTES ARTIF INT, V9195, P527, DOI 10.1007/978-3-319-21401-6_36
   Henzinger TA, 1998, J COMPUT SYST SCI, V57, P94, DOI 10.1006/jcss.1998.1581
   Henzinger TA, 2000, NATO ADV SCI I F-COM, V170, P265
   Johnson T.T., 2015, Proceedings of the 18th International Conference on Hybrid Systems: Computation and Control, P128
   Makhlouf Ibtissem Ben, 2014, ARCH CPSWEEK, P37
   Masood J., 2014, INT FED AUT ENG SOC, P2
   Meiss JD, 2007, MATH MODEL COMPUT, V14, P1, DOI 10.1137/1.9780898718232
   Mishra A., 2016, VLSI SYST ARCH TUR T, P1
   Müller A, 2015, IEEE INT C INTELL TR, P757, DOI 10.1109/ITSC.2015.128
   Nellen J, 2018, LECT NOTES COMPUT SC, V10951, P382, DOI 10.1007/978-3-319-95582-7_23
   Nipkow T., 2002, LECT NOTES COMPUTER, V2283, DOI [10.1007/3-540-45949-9, DOI 10.1007/3-540-45949-9]
   Owre Sam., 1992, P 11 INT C AUTOMATED, P748
   Pence B.L., 2015, P DSCC 15, pV002T26A002
   Platzer A, 2010, J LOGIC COMPUT, V20, P309, DOI 10.1093/logcom/exn070
   Ratschan S, 2007, ACM T EMBED COMPUT S, V6, DOI 10.1145/1210268.1210276
   Schupp S, 2022, INFORM COMPUT, V289, DOI 10.1016/j.ic.2022.104945
   Schupp S, 2017, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.250.1
   Schupp S, 2017, LECT NOTES COMPUT SC, V10227, P288, DOI 10.1007/978-3-319-57288-8_20
   Soonho Kong, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P200, DOI 10.1007/978-3-662-46681-0_15
   Taha W, 2016, L N INST COMP SCI SO, V169, P118, DOI 10.1007/978-3-319-47063-4_11
   Testylier Romain, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P469, DOI 10.1007/978-3-319-02444-8_37
   Tran H.D., 2016, P 3 APPL VER CONT HY, P60
   Westhofen L., 2020, PREPRINT
   wolfram, ABOOT US
   Xin Chen, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P258, DOI 10.1007/978-3-642-39799-8_18
   Yang LR, 2020, IEEE T CONTR SYST T, V28, P1638, DOI 10.1109/TCST.2019.2918747
NR 49
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2024
VL 26
IS 1
BP 49
EP 78
DI 10.1007/s10009-023-00707-0
EA JUN 2023
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW1A5
UT WOS:001020160000002
OA hybrid
DA 2024-07-18
ER

PT J
AU Nenzi, L
   Bartocci, E
   Bortolussi, L
   Silvetti, S
   Loreti, M
AF Nenzi, Laura
   Bartocci, Ezio
   Bortolussi, Luca
   Silvetti, Simone
   Loreti, Michele
TI MoonLight: a lightweight tool for monitoring spatio-temporal properties
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Spatio-temporal logic; Specification-based monitoring
ID PARAMETER SYNTHESIS; ROBUSTNESS; SYSTEMS
AB We present MoonLight, a tool for monitoring temporal and spatio-temporal properties of mobile, spatially distributed, and interacting entities such as biological and cyber-physical systems. In MoonLight the space is represented as a weighted graph describing the topological configuration in which the single entities are arranged. Both nodes and edges have attributes modeling physical quantities and logical states of the system evolving in time. MoonLight is implemented in Java and supports the monitoring of Spatio-Temporal Reach and Escape Logic (STREL). MoonLight can be used as a standalone command line tool, such as Java API, or via Matlab & TRADE; and Python interfaces. We provide here the description of the tool, its interfaces, and its scripting language using a sensor network and a bike sharing example. We evaluate the tool performances both by comparing it with other tools specialized in monitoring only temporal properties and by monitoring spatio-temporal requirements considering different sizes of dynamical and spatial graphs.
C1 [Nenzi, Laura; Bortolussi, Luca] Univ Trieste, Trieste, Italy.
   [Nenzi, Laura; Bartocci, Ezio] TU Wien, Vienna, Austria.
   [Silvetti, Simone] Esteco SpA, Trieste, Italy.
   [Loreti, Michele] Univ Camerino, Camerino, Italy.
C3 University of Trieste; Technische Universitat Wien; University of
   Camerino
RP Nenzi, L (corresponding author), Univ Trieste, Trieste, Italy.; Nenzi, L (corresponding author), TU Wien, Vienna, Austria.
EM lnenzi@units.it; ezio.bartocci@tuwien.ac.at; luca@dmi.units.it;
   simone.silvetti@gmail.com; michele.loreti@unicam.it
RI Silvetti, Simone/KRQ-2228-2024; Nenzi, Laura/AAC-2572-2022
OI Silvetti, Simone/0000-0001-8048-9317; Nenzi, Laura/0000-0003-2263-9342
FU Universita~degli Studi di Trieste within the CRUI-CARE Agreement;
   Austrian FWF [ZK-35, W1255-N23]; Italian PRIN [2017TWRCNB, 2017FTXR7S];
   PNRR iNEST - Missione 4 Componente 2, Investimento [1.5 D.D. 1058,
   ECS_00000043]
FX Open access funding provided by Universita & nbsp;degli Studi di Trieste
   within the CRUI-CARE Agreement. This research has been partially
   supported by the Austrian FWF projects ZK-35 and W1255-N23, by the
   Italian PRIN project "SEDUCE" n. 2017TWRCNB and "IT-MaTTerS" n.
   2017FTXR7S, and by the PNRR iNEST - Missione 4 Componente 2,
   Investimento 1.5 - D.D. 1058 23/06/2022, ECS_00000043.
CR Abbas H, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2465787.2465797
   Akyildiz IF, 2002, IEEE COMMUN MAG, V40, P102, DOI 10.1109/MCOM.2002.1024422
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], 2015, HSCC 15, DOI [10.1145/2728606.2728633, DOI 10.1145/2728606.2728633]
   Asarin E, 2002, J ACM, V49, P172, DOI 10.1145/506147.506151
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P1, DOI 10.1007/978-3-319-75632-5_1
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P135, DOI 10.1007/978-3-319-75632-5_5
   Bartocci E., 2015, LNCS, P156, DOI [10.1007/978-3-319-26916-0_9, DOI 10.1007/978-3-319-26916-0]
   Bartocci E., 2020, P 29 ACM SIGS INT S, P569, DOI [10.1145/3395363.3404369, DOI 10.1145/3395363.3404369]
   Bartocci E, 2020, LECT NOTES COMPUT SC, V12399, P417, DOI 10.1007/978-3-030-60508-7_23
   Bartocci E, 2019, LECT NOTES COMPUT SC, V11724, P69, DOI 10.1007/978-3-030-30446-1_4
   Bartocci E, 2018, HSCC 2018: PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (PART OF CPS WEEK), P197, DOI 10.1145/3178126.3178131
   Bartocci E, 2017, MEMOCODE 2017: PROCEEDINGS OF THE 15TH ACM-IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR SYSTEM DESIGN, P147, DOI 10.1145/3127041.3127050
   Bartocci E, 2018, LECT NOTES COMPUT SC, V10981, P547, DOI 10.1007/978-3-319-96145-3_29
   Bartocci E, 2018, IEEE T CONTROL NETW, V5, P308, DOI 10.1109/TCNS.2016.2609138
   Bartocci E, 2015, THEOR COMPUT SCI, V587, P3, DOI 10.1016/j.tcs.2015.02.046
   Bartocci E, 2011, ADV PHYSIOL EDUC, V35, P427, DOI 10.1152/advan.00034.2011
   Baumeister J, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3358220
   Belmonte G, 2019, LECT NOTES COMPUT SC, V11427, P281, DOI 10.1007/978-3-030-17462-0_16
   Bortolussi L, 2015, LECT NOTES COMPUT SC, V9259, P89, DOI 10.1007/978-3-319-22264-6_6
   City of Melbourne, 2018, MELB BIK SHAR STAT R
   Donze Alexandre, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P264, DOI 10.1007/978-3-642-39799-8_19
   Donzé A, 2010, LECT NOTES COMPUT SC, V6246, P92, DOI 10.1007/978-3-642-15297-9_9
   Donzé A, 2010, LECT NOTES COMPUT SC, V6174, P167, DOI 10.1007/978-3-642-14295-6_17
   Donzé A, 2009, LECT NOTES COMPUT SC, V5469, P165, DOI 10.1007/978-3-642-00602-9_12
   Donzé A, 2009, LECT NOTES COMPUT SC, V5541, P155, DOI 10.1007/978-3-642-02008-7_11
   Fainekos GE, 2009, THEOR COMPUT SCI, V410, P4262, DOI 10.1016/j.tcs.2009.06.021
   Grosu R, 2009, COMMUN ACM, V52, P97, DOI 10.1145/1467247.1467271
   Hoxha B., 2015, ARCH14-15. 1st and 2nd International Workshop on Applied veRification for Continuous and Hybrid Systems, V34, P25
   Jaksic S, 2018, IEEE T COMPUT AID D, V37, P2233, DOI 10.1109/TCAD.2018.2858460
   Jaksic S, 2018, FORM METHOD SYST DES, V53, P83, DOI 10.1007/s10703-018-0319-x
   Kane A, 2020, MAR ECOL PROG SER, V646, P175, DOI 10.3354/meps13386
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Lemire D., 2006, Nordic Journal of Computing, V13, P328
   Leucker M, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1925, DOI 10.1145/3167132.3167338
   Loreti M, 2016, LECT NOTES COMPUT SC, V9700, P83, DOI 10.1007/978-3-319-34096-8_4
   Lukina A, 2017, LECT NOTES COMPUT SC, V10206, P286, DOI 10.1007/978-3-662-54580-5_17
   Ma MY, 2020, ACM IEEE INT CONF CY, P51, DOI 10.1109/ICCPS48487.2020.00013
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Maler O., 2013, Int. J. Softw. Tools Technol. Transfer, V15, P247
   Moosbrugger P, 2017, FORM METHOD SYST DES, V51, P31, DOI 10.1007/s10703-017-0275-x
   Nenzi L., 2016, P VALUETOOLS 2016 10, DOI [10.4108/eai.25-10-2016.2266978, DOI 10.4108/EAI.25-10-2016.2266978]
   Nenzi L, 2022, LOG METH COMPUT SCI, V18, DOI 10.46298/LMCS-18(1:4)2022
   Nenzi L, 2020, LECT NOTES COMPUT SC, V12399, P21, DOI 10.1007/978-3-030-60508-7_2
   Nenzi L, 2018, LOG METH COMPUT SCI, V14, DOI 10.23638/LMCS-14(4:2)2018
   Nickovic D, 2020, LECT NOTES COMPUT SC, V12302, P564, DOI 10.1007/978-3-030-59152-6_34
   Nickovic D, 2018, LECT NOTES COMPUT SC, V10806, P303, DOI 10.1007/978-3-319-89963-3_18
   Parr T., 2013, The Definitive ANTLR 4 Reference
   Ratasich D, 2019, IEEE ACCESS, V7, P13260, DOI 10.1109/ACCESS.2019.2891969
   Rodionova A, 2016, HSCC'16: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P11, DOI 10.1145/2883817.2883839
   Sankaranarayanan Sriram, 2017, ACM SIGBED Review, V14, P24, DOI 10.1145/3076125.3076128
   Silvetti Simone, 2017, Integrated Formal Methods. 13th International Conference, IFM 2017. Proceedings: LNCS 10510, P3, DOI 10.1007/978-3-319-66845-1_1
   Ulus D, 2017, LECT NOTES COMPUT SC, V10426, P329, DOI 10.1007/978-3-319-63387-9_16
   Yaghoubi S, 2017, P AMER CONTR CONF, P529, DOI 10.23919/ACC.2017.7963007
NR 54
TC 1
Z9 1
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2023
VL 25
IS 4
BP 503
EP 517
DI 10.1007/s10009-023-00710-5
EA JUN 2023
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X7GZ5
UT WOS:001014455600001
OA hybrid, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Sotoudeh, M
   Tao, Z
   Thakur, AV
AF Sotoudeh, Matthew
   Tao, Zhe
   Thakur, Aditya V.
TI SyReNN: A tool for analyzing deep neural networks
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Tools and Algorithms for the
   Construction and Analysis of Systems (TACAS)
CY MAR 27-APR 01, 2021
CL Luxembourg, BELGIUM
DE Deep neural networks; Symbolic representation; Integrated gradients;
   Repair
AB Deep Neural Networks (DNNs) are rapidly gaining popularity in a variety of important domains. Unfortunately, modern DNNs have been shown to be vulnerable to a variety of attacks and buggy behavior. This has motivated recent work in formally analyzing the properties of such DNNs. This paper introduces SyReNN, a tool for understanding and analyzing a DNN by computing its symbolic representation. The key insight is to decompose the DNN into linear functions. Our tool is designed for analyses using low-dimensional subsets of the input space, a unique design point in the space of DNN analysis tools. We describe the tool and the underlying theory, then evaluate its use and performance on three case studies: computing Integrated Gradients, visualizing a DNN's decision boundaries, and repairing buggy DNNs.
C1 [Sotoudeh, Matthew; Tao, Zhe; Thakur, Aditya V.] Univ Calif Davis, Davis, CA 95616 USA.
C3 University of California System; University of California Davis
RP Sotoudeh, M (corresponding author), Univ Calif Davis, Davis, CA 95616 USA.
EM masotoudeh@ucdavis.edu; zhetao@ucdavis.edu; avthakur@ucdavis.edu
RI Thakur, Aditya/AAZ-1336-2021
OI Tao, Zhe/0000-0002-4047-699X; Sotoudeh, Matthew/0000-0003-2060-1009
FU NSF [CCF-2048123, DGE-1656518]; DOE [DE-SC0022285]; U.S. Department of
   Energy (DOE) [DE-SC0022285] Funding Source: U.S. Department of Energy
   (DOE)
FX We thank the reviewers for their comments, which greatly improved the
   quality of the paper. Matthew Sotoudeh is supported by NSF grant
   DGE-1656518. This work is supported in part by NSF grant CCF-2048123 and
   DOE Award DE-SC0022285.
CR Anderson G, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P731, DOI 10.1145/3314221.3314614
   Nguyen A, 2015, PROC CVPR IEEE, P427, DOI 10.1109/CVPR.2015.7298640
   [Anonymous], 2020, Protocol Buffers - Google Developers
   [Anonymous], 2019, ETH ROB AN NEUR NETW
   [Anonymous], 2012, Lectures on Polytopes
   Bastani O, 2016, ADV NEUR IN, V29
   Bastani O, 2018, ADV NEUR IN, V31
   Becker KD, 2015, J CLIN CHILD ADOLESC, V44, P30, DOI 10.1080/15374416.2013.814543
   Boski M, 2017, 2017 10TH INTERNATIONAL WORKSHOP ON MULTIDIMENSIONAL (ND) SYSTEMS (NDS)
   Breutel S., 2003, ESANN 2003 11 EUROPE, P463
   Bunel R, 2018, ADV NEUR IN, V31
   Carlini N, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P1, DOI 10.1109/SPW.2018.00009
   Chen JS, 2019, P IEEE, V107, P1655, DOI 10.1109/JPROC.2019.2921977
   Ching T, 2018, J R SOC INTERFACE, V15, DOI 10.1098/rsif.2017.0387
   Chollet F., 2015, AL KERAS
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dutta S, 2018, LECT NOTES COMPUT SC, V10811, P121, DOI 10.1007/978-3-319-77935-5_9
   Ehlers R, 2017, LECT NOTES COMPUT SC, V10482, P269, DOI 10.1007/978-3-319-68167-2_19
   Fischer Marc, 2019, INT C MACHINE LEARNI, P1931
   Fukuda K., 2004, FREQUENTLY ASKED QUE
   Gehr T, 2018, P IEEE S SECUR PRIV, P3, DOI 10.1109/SP.2018.00058
   Glassle, 2016, C 11 FOURIER MOTZKIN
   Goldberger B., 2020, PROC 23 INT C LOGIC
   Gonzales Richard, 2019, NPR
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Goodfellow I. J., 2015, 3 INT C LEARNING REP
   Google, 2020, GRPC HIGH PERF OP SO
   Gopinath S, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P79, DOI 10.1145/3314221.3314597
   Guennebaud G., 2010, Eigen
   Gurobi Optimization LLC, 2023, Gurobi optimizer reference manual
   Han  S., 2015, ARXIV151000149
   Hanin B, 2019, PR MACH LEARN RES, V97
   Hendrycks D., 2019, arXiv
   Hern A., 2017, THE GUARDIAN
   Hill Kashmir, 2020, Wrongfully Accused by an Algorithm
   Hoang-Dung Tran, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P670, DOI 10.1007/978-3-030-30942-8_39
   Hosny A, 2018, NAT REV CANCER, V18, P500, DOI 10.1038/s41568-018-0016-5
   Huang XW, 2017, LECT NOTES COMPUT SC, V10426, P3, DOI 10.1007/978-3-319-63387-9_1
   Jeannet B, 2009, LECT NOTES COMPUT SC, V5643, P661, DOI 10.1007/978-3-642-02658-4_52
   Julian K.D., 2018, ARXIV
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kumar A, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428250
   Kusupati A., 2018, P 32 INT C NEUR INF, P9031
   Lee Dave, 2016, Google Self-Driving Car Hits a Bus
   Mendelson EB, 2019, AM J ROENTGENOL, V212, P293, DOI 10.2214/AJR.18.20532
   Miotto R, 2018, BRIEF BIOINFORM, V19, P1236, DOI 10.1093/bib/bbx044
   Mirman Matthew, 2018, INT C MACH LEARN, P3575
   Moosavi-Dezfooli SM, 2016, PROC CVPR IEEE, P2574, DOI 10.1109/CVPR.2016.282
   Mu N, 2019, arXiv
   ONNX, 2020, OP NEUR NETW EXCH
   Paszke A, 2019, ADV NEUR IN, V32
   Reinders James, 2007, Intel threading building blocks-outfitting C++ for multi-core processor parallelism
   Sharma H, 2016, INT SYMP MICROARCH
   Singh G, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290354
   Singh G, 2018, ADV NEUR IN, V31
   Sotoudeh M., 2019, ADV NEURAL INFORM PR, P14132
   Sotoudeh M, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P588, DOI 10.1145/3453483.3454064
   Sundararajan M, 2017, PR MACH LEARN RES, V70
   Szegedy C, 2014, INT C LEARN REPR
   Szegedy Christian, 2016, P IEEE C COMP VIS PA, DOI DOI 10.1109/CVPR.2016.308
   Thrun S., 1995, Advances in Neural Information Processing Systems 7, P505
   Wang SQ, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1599
   Weng TW, 2018, PR MACH LEARN RES, V80
   Xiang W., 2017, ARXIV
   Xiang WM, 2018, P AMER CONTR CONF, P1574, DOI 10.23919/ACC.2018.8431048
   Yang XD, 2021, HSCC2021: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (PART OF CPS-IOT WEEK), DOI 10.1145/3447928.3456650
   Zhu HS, 2019, LECT NOTES ARTIF INT, V11743, P686, DOI 10.1007/978-3-030-27538-9_59
NR 68
TC 2
Z9 3
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2023
VL 25
IS 2
SI SI
BP 145
EP 165
DI 10.1007/s10009-023-00695-1
EA FEB 2023
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA F2RU9
UT WOS:000933642300002
DA 2024-07-18
ER

PT J
AU Usman, M
   Sun, YC
   Gopinath, D
   Dange, R
   Manolache, L
   Pasareanu, CS
AF Usman, Muhammad
   Sun, Youcheng
   Gopinath, Divya
   Dange, Rishi
   Manolache, Luca
   Pasareanu, Corina S.
TI An overview of structural coverage metrics for testing neural networks
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Coverage; Neural networks; Testing
AB Deep neural network (DNN) models, including those used in safety-critical domains, need to be thoroughly tested to ensure that they can reliably perform well in different scenarios. In this article, we provide an overview of structural coverage metrics for testing DNN models, including neuron coverage, k-multisection neuron coverage, top-k neuron coverage, neuron boundary coverage, strong neuron activation coverage and modified condition/decision coverage. We evaluate the metrics on realistic DNN models used for perception tasks (LeNet-1, LeNet-4, LeNet-5, ResNet20) including networks used in autonomy (TaxiNet). We also provide a tool, DNNCov, which can measure the testing coverage for all these metrics. DNNCov outputs an informative coverage report to enable researchers and practitioners to assess the adequacy of DNN testing, to compare different coverage measures, and to more conveniently inspect the model's internals during testing.
C1 [Usman, Muhammad] Univ Texas Austin, Austin, TX 78712 USA.
   [Sun, Youcheng] Univ Manchester, Manchester, Lancs, England.
   [Gopinath, Divya] KBR Inc, NASA Ames, Ames, IA USA.
   [Dange, Rishi] Princeton Univ, Princeton, NJ 08544 USA.
   [Manolache, Luca] Palo Alto High Sch, Palo Alto, CA USA.
   [Pasareanu, Corina S.] CMU Cylab & KBR Inc, NASA Ames, Ames, IA 15213 USA.
C3 University of Texas System; University of Texas Austin; University of
   Manchester; National Aeronautics & Space Administration (NASA); NASA
   Ames Research Center; Princeton University; National Aeronautics & Space
   Administration (NASA); NASA Ames Research Center
RP Pasareanu, CS (corresponding author), CMU Cylab & KBR Inc, NASA Ames, Ames, IA 15213 USA.
EM pcorina@cmu.edu
RI usman, muhammad/KMX-2101-2024; Manolache, Liana/J-6369-2015; Sun,
   Youcheng/JMC-4942-2023; gopinath, divya/D-5120-2014
OI Manolache, Liana/0000-0003-2357-4229; Sun, Youcheng/0000-0002-1893-6259;
   
CR Furui S, 2012, IEEE SIGNAL PROC MAG, V29, P16, DOI 10.1109/MSP.2012.2209906
   Gopinath D, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P809, DOI 10.1109/ASE.2019.00079
   Gu TY, 2019, IEEE ACCESS, V7, P47230, DOI 10.1109/ACCESS.2019.2909068
   He K., 2016, P IEEE C COMP VIS PA
   Huang XW, 2017, LECT NOTES COMPUT SC, V10426, P3, DOI 10.1007/978-3-319-63387-9_1
   Julian KD, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294549
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Krizhevsky Alex, 2009, LEARNING MULTIPLE LA
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LeCun Y., 1990, ADV NEURAL INFORM PR, P396
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Seokhyun Lee, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P165, DOI 10.1145/3395363.3397346
   Sun YC, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3358233
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Tian YQ, 2020, PROC INT CONF SOFTW, P45, DOI 10.1145/3377812.3382133
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
NR 18
TC 0
Z9 0
U1 2
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2023
VL 25
IS 3
BP 393
EP 405
DI 10.1007/s10009-022-00683-x
EA NOV 2022
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S0IX8
UT WOS:000877966900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gu, R
   Jensen, PG
   Poulsen, DB
   Seceleanu, C
   Enoiu, E
   Lundqvist, K
AF Gu, Rong
   Jensen, Peter G.
   Poulsen, Danny B.
   Seceleanu, Cristina
   Enoiu, Eduard
   Lundqvist, Kristina
TI Verifiable strategy synthesis for multiple autonomous agents: a scalable
   approach
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Autonomous agents; Synthesis; Model checking; Reinforcement learning
ID ALGORITHMS
AB Path planning and task scheduling are two challenging problems in the design of multiple autonomous agents. Both problems can be solved by the use of exhaustive search techniques such as model checking and algorithmic game theory. However, model checking suffers from the infamous state-space explosion problem that makes it inefficient at solving the problems when the number of agents is large, which is often the case in realistic scenarios. In this paper, we propose a new version of our novel approach called MCRL that integrates model checking and reinforcement learning to alleviate this scalability limitation. We apply this new technique to synthesize path planning and task scheduling strategies for multiple autonomous agents. Our method is capable of handling a larger number of agents if compared to what is feasibly handled by the model-checking technique alone. Additionally, MCRL also guarantees the correctness of the synthesis results via post-verification. The method is implemented in UPPAAL STRATEGO and leverages our tool MALTA for model generation, such that one can use the method with less effort of model construction and higher efficiency of learning than those of the original MCRL. We demonstrate the feasibility of our approach on an industrial case study: an autonomous quarry, and discuss the strengths and weaknesses of the methods.
C1 [Gu, Rong; Seceleanu, Cristina; Enoiu, Eduard; Lundqvist, Kristina] Malardalen Univ, Vasteras, Sweden.
   [Jensen, Peter G.; Poulsen, Danny B.] Aalborg Univ, Aalborg, Denmark.
C3 Malardalen University; Aalborg University
RP Gu, R (corresponding author), Malardalen Univ, Vasteras, Sweden.
EM rong.gu@mdu.se; pgj@cs.aau.dk; dannybpoulsen@cs.aau.dk;
   cristina.seceleanu@mdu.se; eduard.paul.enoiu@mdu.se;
   kristina.lundqvist@mdu.se
RI Enoiu, Eduard/N-6496-2015
OI Enoiu, Eduard/0000-0003-2416-4205; Seceleanu,
   Cristina/0000-0003-2870-2680; Jensen, Peter Gjol/0000-0002-9320-9991;
   Poulsen, Danny Bogsted/0000-0001-9623-0748
FU Swedish Knowledge Foundation via the profile DPAC-Dependable Platform
   for Autonomous Systems and Control [20150022, 20190038]
FX We acknowledge the support of the Swedish Knowledge Foundation via the
   profile DPAC-Dependable Platform for Autonomous Systems and Control,
   grant nr: 20150022, and via the synergy ACICS - Assured Cloud Platforms
   for Industrial Cyber-Physical Systems, Grant Nr. 20190038.
CR Abdeddaïm Y, 2006, THEOR COMPUT SCI, V354, P272, DOI 10.1016/j.tcs.2005.11.018
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Basile D., 2020, INT C FORM TECHN DIS
   Behjati R., 2009, S FDN SOFTW ENG
   Behrmann G, 2007, LECT NOTES COMPUT SC, V4590, P121
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Bersani M.M., 2020, FORM ASP COMPUT
   Biere A., 2003, BOUNDED MODEL CHECKI
   Bonneland F.M., 2019, ARXIV191209875
   Bouton M., 2019, ARXIV190407189
   Bouton M, 2017, IEEE INT VEH SYM, P825, DOI 10.1109/IVS.2017.7995818
   Brázdil T, 2014, LECT NOTES COMPUT SC, V8837, P98, DOI 10.1007/978-3-319-11936-6_8
   Cassez F, 2005, LECT NOTES COMPUT SC, V3653, P66, DOI 10.1007/11539452_9
   Clarke E.M., 2011, LASER SUMMER SCH
   Daniel K, 2010, J ARTIF INTELL RES, V39, P533, DOI 10.1613/jair.2994
   David A., 2015, INT C TOOLS ALG CONS
   David A, 2012, ELECTRON PROC THEOR, P122, DOI 10.4204/EPTCS.92.9
   David A, 2014, LECT NOTES COMPUT SC, V8837, P129, DOI 10.1007/978-3-319-11936-6_10
   FRANKLIN S., 1997, INT WORKSHOP AGENT T, V1193, P21
   Gleirscher M., ARXIV21060604
   Gu R., 2021, FORMAL METHODS 2021
   Gu R., 2020, 25 INT C FORM METH I, P73
   Gu R., 2020, ACM SIGAPP S APPL CO
   Gu R, 2019, LECT NOTES COMPUT SC, V11460, P186, DOI 10.1007/978-3-030-20652-9_12
   Jaeger M., 2019, INT S AUT TECHN VER
   Kempf JF, 2013, LECT NOTES COMPUT SC, V7795, P385, DOI 10.1007/978-3-642-36742-7_27
   Konda VR, 2000, ADV NEUR IN, V12, P1008
   LaValle SM, 2001, ALGORITHMIC AND COMPUTATIONAL ROBOTICS: NEW DIRECTIONS, P293
   Legay A, 2015, LECT NOTES COMPUT SC, V8938, P350, DOI 10.1007/978-3-319-15201-1_23
   Li X, 2019, SCI ROBOT, V4, DOI 10.1126/scirobotics.aay6276
   Muth J. F., 1963, IND SCHEDULING, V3, P225
   Nikou A, 2018, AUTOMATICA, V97, P339, DOI 10.1016/j.automatica.2018.08.023
   Palopoli L, 2015, INTEL SERV ROBOT, V8, P77, DOI 10.1007/s11370-015-0169-y
   Pelánek R, 2009, LECT NOTES COMPUT SC, V5596, P37, DOI 10.1007/978-3-642-03240-0_7
   Rabin S., 2000, Game programming gems, chapter a* aesthetic optimizations
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Wang Y, 2018, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS AND MULTIAGENT SYSTEMS (AAMAS' 18), P238
   Watkins C. J. C. H., 1989, Learning from Delayed Rewards
NR 38
TC 5
Z9 5
U1 1
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2022
VL 24
IS 3
SI SI
BP 395
EP 414
DI 10.1007/s10009-022-00657-z
EA MAR 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1D5TB
UT WOS:000776947000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Vukmirovic, P
   Blanchette, J
   Cruanes, S
   Schulz, S
AF Vukmirovic, Petar
   Blanchette, Jasmin
   Cruanes, Simon
   Schulz, Stephan
TI Extending a brainiac prover to lambda-free higher-order logic
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Automatic theorem provers; Higher-order logic; First-order logic
ID THEOREM-PROVING SYSTEM; COMPETITION
AB Decades of work have gone into developing efficient proof calculi, data structures, algorithms, and heuristics for first-order automatic theorem proving. Higher-order provers lag behind in terms of efficiency. Instead of developing a new higher-order prover from the ground up, we propose to start with the state-of-the-art superposition prover E and gradually enrich it with higher-order features. We explain how to extend the prover's data structures, algorithms, and heuristics to lambda-free higher-order logic, a formalism that supports partial application and applied variables. Our extension outperforms the traditional encoding and appears promising as a stepping stone toward full higher-order logic.
C1 [Vukmirovic, Petar; Blanchette, Jasmin] Vrije Univ Amsterdam, Amsterdam, Netherlands.
   [Blanchette, Jasmin] Max PlanckInst Informatik, Saarland Informat Campus, Saarbrucken, Germany.
   [Blanchette, Jasmin] Univ Lorraine, CNRS, INRIA, LORIA, Nancy, France.
   [Cruanes, Simon] Aesthet Integrat, Austin, TX USA.
   [Schulz, Stephan] DHBW Stuttgart, Stuttgart, Germany.
C3 Vrije Universiteit Amsterdam; Centre National de la Recherche
   Scientifique (CNRS); Universite de Lorraine; Inria
RP Vukmirovic, P (corresponding author), Vrije Univ Amsterdam, Amsterdam, Netherlands.
EM p.vukmirovic@vu.nl; j.c.blanchette@vu.nl;
   simon@aestheticintegration.com; schulz@eprover.org
OI Blanchette, Jasmin Christian/0000-0002-8367-0936
FU European Research Council (ERC) under the European Union [713999];
   Netherlands Organization for Scientific Research (NWO)
   [016.Vidi.189.037]; NWO Incidental Financial Support scheme
FX Vukmirovic and Blanchette's research has received funding from the
   European Research Council (ERC) under the European Union's Horizon 2020
   research and innovation program (Grant Agreement No. 713999,
   Matryoshka). Blanchette has received funding from the Netherlands
   Organization for Scientific Research (NWO) under the Vidi program
   (Project No. 016.Vidi.189.037, Lean Forward). He also benefited from the
   NWO Incidental Financial Support scheme.
CR ANDREWS PB, 1971, J SYMBOLIC LOGIC, V36, P414, DOI 10.2307/2269949
   Andrews PB, 1996, J AUTOM REASONING, V16, P321, DOI 10.1007/BF00252180
   [Anonymous], 1990, LECT NOTES COMPUTER
   Avenhaus J., 1995, Rewriting Techniques and Applications. 6th International Conference, RTA-95. Proceedings, P397
   Baader Franz., 1998, Term rewriting and all that, DOI [10.1017/CBO9781139172752, DOI 10.1017/CBO9781139172752]
   Barbosa H, 2019, LECT NOTES ARTIF INT, V11716, P35, DOI 10.1007/978-3-030-29436-6_3
   Becker H, 2017, LECT NOTES ARTIF INT, V10395, P432, DOI 10.1007/978-3-319-63046-5_27
   Beeson M, 2004, LECT NOTES ARTIF INT, V3097, P460
   Bentkamp A, 2019, LECT NOTES ARTIF INT, V11716, P55, DOI 10.1007/978-3-030-29436-6_4
   Bentkamp A, 2018, LECT NOTES ARTIF INT, V10900, P28, DOI 10.1007/978-3-319-94205-6_3
   Benzmüller C, 2015, J AUTOM REASONING, V55, P389, DOI 10.1007/s10817-015-9348-y
   Benzmuller C., 1998, Automated Deduction - CADE-15. 15th International Conference on Automated Deduction. Proceedings, P139, DOI 10.1007/BFb0054256
   Benzmuller C., 2014, Handbook of the History of Logic, Volume 9, Computational Logic, P215
   Bhayat A, 2019, LECT NOTES ARTIF INT, V11716, P74, DOI 10.1007/978-3-030-29436-6_5
   Blanchette JC, 2016, LOG METH COMPUT SCI, V12, DOI 10.2168/LMCS-12(4:13)2016
   Blanchette JC, 2017, LECT NOTES COMPUT SC, V10203, P461, DOI 10.1007/978-3-662-54458-7_27
   Böhme S, 2010, LECT NOTES ARTIF INT, V6173, P107, DOI 10.1007/978-3-642-14203-1_9
   Brown Chad E., 2012, Automated Reasoning. Proceedings 6th International Joint Conference, IJCAR 2012, P111, DOI 10.1007/978-3-642-31365-3_11
   Cruanes S., 2015, THESIS ECOLE POLYTEC
   Cruanes S, 2017, LECT NOTES ARTIF INT, V10483, P172, DOI 10.1007/978-3-319-66167-4_10
   Czajka L, 2018, J AUTOM REASONING, V61, P423, DOI 10.1007/s10817-018-9458-4
   Czajka L, 2016, PROCEEDINGS OF THE 5TH ACM SIGPLAN CONFERENCE ON CERTIFIED PROGRAMS AND PROOFS (CPP'16), P49, DOI 10.1145/2854065.2854069
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   Huet G.P., 1973, P 3 INT JOINT C ART, P139
   Kaliszyk C, 2015, MATH COMPUT SCI, V9, P5, DOI 10.1007/s11786-014-0182-0
   Kotelnikov Evgenii., 2016, GCAI 2016. 2nd Global Conference on Artificial Intelligence, V41, P53
   Kovacs Laura, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P1, DOI 10.1007/978-3-642-39799-8_1
   Lindblad F, 2014, LECT NOTES ARTIF INT, V8562, P61, DOI 10.1007/978-3-319-08587-6_5
   Löchner B, 2006, J AUTOM REASONING, V36, P289, DOI 10.1007/s10817-006-9031-4
   McCune W., 1992, Journal of Automated Reasoning, V9, P147, DOI 10.1007/BF00245458
   Meng J, 2008, J AUTOM REASONING, V40, P35, DOI 10.1007/s10817-007-9085-y
   Michie, 1969, MACH INTELL, V4, P151
   Michie, 1970, MACH INTELL, V5, P121
   Miller D., 1987, Stud. Logica., V46, P347, DOI DOI 10.1007/BF00370646
   Nonnengart Andreas., 2001, HDB AUTOMATED REASON, VI, P335
   Paulson L. C., 2012, EPIC SERIES, V2, P1
   Peltier N., 2016, A variant of the superposition calculus. Archive of Formal Proofs. Formal proof development
   Reger G., 2017, EPIC SERIES COMPUTIN, V51, P55, DOI [10.29007/s6d1, DOI 10.29007/S6D1]
   Schulz Stephan, 2013, Automated Reasoning and Mathematics. Essays in Memory of William W. McCune, P45, DOI 10.1007/978-3-642-36675-8_3
   Schulz Stephan, 2012, Automated Reasoning. Proceedings 6th International Joint Conference, IJCAR 2012, P477, DOI 10.1007/978-3-642-31365-3_37
   Schulz S, 2002, AI COMMUN, V15, P111
   Schulz S., 2001, P 2 INT WORKSH IMPL, P33
   Schulz S, 2019, LECT NOTES ARTIF INT, V11716, P495, DOI 10.1007/978-3-030-29436-6_29
   Steen A, 2018, LECT NOTES ARTIF INT, V10900, P108, DOI 10.1007/978-3-319-94205-6_8
   Stump A, 2014, LECT NOTES ARTIF INT, V8562, P367, DOI 10.1007/978-3-319-08587-6_28
   Sultana N, 2013, J APPL LOGIC, V11, P91, DOI 10.1016/j.jal.2012.12.002
   Sutcliffe G, 2019, AI COMMUN, V32, P373, DOI 10.3233/AIC-190627
   Sutcliffe G, 2017, AI COMMUN, V30, P419, DOI 10.3233/AIC-170744
   Sutcliffe G, 2017, J AUTOM REASONING, V59, P483, DOI 10.1007/s10817-017-9407-7
   Sutcliffe G, 2013, AI COMMUN, V26, P211, DOI 10.3233/AIC-130550
   Traytel, 2017, EPIC SERIES COMPUTIN, V51, P29
   Urban J, 2013, J AUTOM REASONING, V50, P229, DOI 10.1007/s10817-012-9269-y
   Voronkov, 2001, HDB AUTOMATED REASON, V2, P965, DOI DOI 10.1016/B978-044450813-3/50017-5
   Vukmirovic P., 2020, LIPICS, V167
   Vukmirovic P., 2020, JOINT P 7 WORKSH PRA, P148
   Vukmirovic P, 2019, LECT NOTES COMPUT SC, V11427, P192, DOI 10.1007/978-3-030-17462-0_11
   Weidenbach C, 2009, LECT NOTES ARTIF INT, V5663, P140, DOI 10.1007/978-3-642-02959-2_10
NR 57
TC 2
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2022
VL 24
IS 1
SI SI
BP 67
EP 87
DI 10.1007/s10009-021-00639-7
EA AUG 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZT9UB
UT WOS:000685370600001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Dumas, M
   García-Bañuelos, L
   Jääger, J
   Laud, P
   Matulevicius, R
   Pankova, A
   Pettai, M
   Pullonen-Raudvere, P
   Toots, A
   Tuuling, R
   Yerokhin, M
AF Dumas, Marlon
   Garcia-Banuelos, Luciano
   Jaager, Joosep
   Laud, Peeter
   Matulevicius, Raimundas
   Pankova, Alisa
   Pettai, Martin
   Pullonen-Raudvere, Pille
   Toots, Aivo
   Tuuling, Reedik
   Yerokhin, Maksym
TI Multi-level privacy analysis of business processes: the Pleak toolset
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Business process management; Business process modeling;
   Privacy-enhancing technologies; Differential privacy; Privacy analysis
ID PROCESS MODELS
AB Privacy regulations, such as GDPR, impose strict requirements to organizations that store and process private data. Privacy-enhancing technologies (PETs), such as secure multi-party computation and differential privacy, provide mechanisms to perform computations over private data and to protect the disclosure of private data and derivatives thereof. When PETs are used to protect individual computations or disclosures, their privacy properties and their effect on the utility of the disclosed data can be straightforwardly asserted. However, when multiple PETs are used as part of a complex and possibly inter-organizational business process, it becomes non-trivial for analysts to fully grasp the guarantees that the combined set of PETs provide overall. This article presents a multi-level approach to analyze privacy properties of business processes that rely on PETs to protect private data. The approach is embodied in an open-source toolset, Pleak , that allows analysts to capture privacy-enhanced business process models and to characterize and quantify to what extent the outputs of a process leak information about its inputs. Pleak incorporates an extensible set of analysis plugins, which enable users to inspect potential leakages at multiple levels of detail.
C1 [Dumas, Marlon; Matulevicius, Raimundas; Yerokhin, Maksym] Univ Tartu, Tartu, Estonia.
   [Jaager, Joosep; Laud, Peeter; Pankova, Alisa; Pettai, Martin; Pullonen-Raudvere, Pille; Toots, Aivo; Tuuling, Reedik] Cybernetica AS, Tallinn, Estonia.
   [Garcia-Banuelos, Luciano] Tecnol Monterrey, Monterrey, Mexico.
C3 University of Tartu; Cybernetica; Tecnologico de Monterrey
RP Matulevicius, R (corresponding author), Univ Tartu, Tartu, Estonia.
EM marlon.dumas@ut.ee; luciano.garcia@tec.mx; joosep.jaager@cyber.ee;
   peeter.laud@cyber.ee; raimundas.matulevicius@ut.ee;
   alisa.pankova@cyber.ee; martin.pettai@cyber.ee; pille.pullonen@cyber.ee;
   aivo.toots@cyber.ee; reedik.tuuling@cyber.ee; maksym.yerokhin@ut.ee
RI Garcia-Banuelos, Luciano/R-1277-2016; Matulevicius,
   Raimundas/J-1871-2019; Laud, Peeter/H-8272-2015; Yerokhin,
   Maksym/JZD-9231-2024; Dumas, Marlon/H-2757-2015
OI Garcia-Banuelos, Luciano/0000-0001-9076-903X; Matulevicius,
   Raimundas/0000-0002-1829-4794; Yerokhin, Maksym/0009-0005-7981-0798;
   Pullonen-Raudvere, Pille/0000-0002-3255-7001; Dumas,
   Marlon/0000-0002-9247-7476
FU Air Force Research laboratory (AFRL); Defense Advanced Research Projects
   Agency (DARPA) [FA8750-16-C-0011]; Estonian Personal Research Grant
   [920]
FX This research was funded by the Air Force Research laboratory (AFRL) and
   Defense Advanced Research Projects Agency (DARPA) under contract
   FA8750-16-C-0011. The views expressed are those of the author(s) and do
   not reflect the official policy or position of the Department of Defense
   or the U.S. Government. This research has been also supported by the
   Estonian Personal Research Grant Number 920.
CR Accorsi R, 2015, INFORM SYST, V47, P244, DOI 10.1016/j.is.2013.12.006
   Accorsi R, 2012, LECT NOTES COMPUT SC, V7481, P172, DOI 10.1007/978-3-642-32885-5_13
   Alvim MS, 2012, P IEEE CSFW, P265, DOI 10.1109/CSF.2012.26
   Armas-Cervantes A, 2016, INFORM SYST, V56, P304, DOI 10.1016/j.is.2015.09.009
   Bhowmick A, 2019, ARXIV181200984
   Cachin Christian, 1997, Entropy measures and unconditional security in cryptography
   Colesky M, 2016, 2016 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2016), P33, DOI 10.1109/SPW.2016.23
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Dumas M, 2016, LECT NOTES COMPUT SC, V9987, P62, DOI 10.1007/978-3-319-46263-9_4
   Dwork C, 2006, LECT NOTES COMPUT SC, V4052, P1
   Dwork C, 2006, LECT NOTES COMPUT SC, V3876, P265, DOI 10.1007/11681878_14
   Dwork C, 2013, FOUND TRENDS THEOR C, V9, P211, DOI 10.1561/0400000042
   Esparza J, 2002, FORM METHOD SYST DES, V20, P285, DOI 10.1023/A:1014746130920
   Fila B., 2018, 2 INT C PERS TECHN, V11086, P51, DOI [10.1007/978-3-030-15465-3_4, DOI 10.1007/978-3-030-15465-3_4]
   Ghernaouti-Helie S., 2012, P ASONAM
   Giessing S., 2012, STAT DISCLOSURE CONT, DOI DOI 10.1002/9781118348239
   Groote JF, 2020, LECT NOTES COMPUT SC, V12018, P25, DOI 10.1007/978-3-030-40914-2_2
   Heljanko, 2008, MONOGRAPHS THEORETIC, DOI DOI 10.1007/978-3-540-77426-6
   Kifer D, 2014, ACM T DATABASE SYST, V39, DOI 10.1145/2514689
   Labda W., 2014, P 29 ANN ACM S APPL, P1399, DOI 10.1145/2554850.2555014
   Lee J, 2011, LECT NOTES COMPUT SC, V7001, P325, DOI 10.1007/978-3-642-24861-0_22
   Pankova A., 2020, ARXIV191112777 CORR
   Pettai M., 2020, P PRIV ENH TECHN POP
   Pullonen P, 2019, SOFTW SYST MODEL, V18, P3235, DOI 10.1007/s10270-019-00718-z
   Pullonen P, 2017, LECT NOTES COMPUT SC, V10445, P40, DOI 10.1007/978-3-319-65000-5_3
   Ramadan Q, 2020, SOFTW SYST MODEL, V19, P1191, DOI 10.1007/s10270-020-00781-x
   Rozenberg G., 1996, PETRI NETS, V1491, P1, DOI [10.1007/3-540-65306-6_13, DOI 10.1007/3-540-65306-6_13]
   Tiezzi, 2020, FORMALISE ICSE 2020, P141
   Tom, 2019, P 22 INT C FUND APPR
   Tom J., 2019, INFORM SPEKTRUM, V42, P354, DOI [10.1007/s00287-019-01204-y, DOI 10.1007/S00287-019-01204-Y]
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   Wagner I, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3168389
NR 32
TC 2
Z9 2
U1 1
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2022
VL 24
IS 2
BP 183
EP 203
DI 10.1007/s10009-021-00636-w
EA JUL 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0F1UH
UT WOS:000675340700001
DA 2024-07-18
ER

PT J
AU Schneider, S
   Lambers, L
   Orejas, F
AF Schneider, Sven
   Lambers, Leen
   Orejas, Fernando
TI A logic-based incremental approach to graph repair featuring delta
   preservation
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Nested graph conditions; Graph repair; Model repair; Consistency
   restoration; Delta preservation; Graph databases; Model-driven
   engineering
ID TRANSFORMATION SYSTEMS
AB We introduce a logic-based incremental approach to graph repair, generating a sound and complete (upon termination) overview of least-changing graph repairs from which a user may select a graph repair based on non-formalized further requirements. This incremental approach features delta preservation as it allows to restrict the generation of graph repairs to delta-preserving graph repairs, which do not revert the additions and deletions of the most recent consistency-violating graph update. We specify consistency of graphs using the logic of nested graph conditions, which is equivalent to first-order logic on graphs. Technically, the incremental approach encodes if and how the graph under repair satisfies a graph condition using the novel data structure of satisfaction trees, which are adapted incrementally according to the graph updates applied. In addition to the incremental approach, we also present two state-based graph repair algorithms, which restore consistency of a graph independent of the most recent graph update and which generate additional graph repairs using a global perspective on the graph under repair. We evaluate the developed algorithms using our prototypical implementation in the tool AutoGraph and illustrate our incremental approach using a case study from the graph database domain.
C1 [Schneider, Sven; Lambers, Leen] Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
   [Orejas, Fernando] Univ Politecn Cataluna, Barcelona, Spain.
C3 University of Potsdam; Universitat Politecnica de Catalunya
RP Schneider, S (corresponding author), Univ Potsdam, Hasso Plattner Inst, Potsdam, Germany.
EM sven.schneider@hpi.de; leen.lambers@hpi.de; orejas@lsi.upc.edu
RI ; Orejas, Fernando/K-8630-2017
OI Lambers, Leen/0000-0001-6937-5167; Orejas, Fernando/0000-0002-3023-4006
CR Angles R, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1322432.1322433
   Bardohl R, 2004, LECT NOTES COMPUT SC, V2984, P214
   Bergmann G., 2008, Proceedings of 3rd International Workshop on Graph and Model Transformation (GRaMoT 2008). 30th International Conference on Software Engineering, P25, DOI [10.1145/1402947.1402953, DOI 10.1145/1402947.1402953]
   Bergmann G, 2014, LECT NOTES COMPUT SC, V8767, P670, DOI 10.1007/978-3-319-11653-2_41
   Beyhl T, 2016, ELECTRON P THEOR COM, P57, DOI 10.4204/EPTCS.231.5
   Beyhl T, 2016, LECT NOTES COMPUT SC, V9761, P170, DOI 10.1007/978-3-319-40530-8_11
   Bi F, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1199, DOI 10.1145/2882903.2915236
   Biermann E, 2008, LECT NOTES COMPUT SC, V5301, P53, DOI 10.1007/978-3-540-87875-9_4
   Boronat A, 2019, LECT NOTES COMPUT SC, V11424, P134, DOI 10.1007/978-3-030-16722-6_8
   Búr M, 2015, LECT NOTES COMPUT SC, V9151, P275, DOI 10.1007/978-3-319-21145-9_18
   Cheney J, 2017, J OBJECT TECHNOL, V16, DOI 10.5381/jot.2017.16.1.a3
   Cheng YR, 2018, PROC INT CONF DATA, P773, DOI 10.1109/ICDE.2018.00075
   Courcelle, ROZENBERG, V37, P313
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H, 2012, FUND INFORM, V118, P35, DOI 10.3233/FI-2012-705
   Fritsche L., HAHNLE AALST, V21, P116, DOI 10.1007/978-3-030-16722-6_7
   Giese Holger, 2009, ECEASST, V18, DOI [10.14279/tuj.eceasst.18.268, DOI 10.14279/TUJ.ECEASST.18.268]
   Habel A, 2018, LECT NOTES COMPUT SC, V11176, P431, DOI 10.1007/978-3-030-04771-9_31
   Habel A, 2009, MATH STRUCT COMP SCI, V19, P245, DOI 10.1017/S0960129508007202
   Hahnle, 2019, P LECT NOTES COMPUTE, V11424, DOI 10.1007/978-3-030-16722-6
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Horvath A., 2007, ELECT COMMUN EASST, V6, DOI [10.14279/tuj.eceasst.6.49, DOI 10.14279/TUJ.ECEASST.6.49]
   Huisman M., 2017, P LECT NOTES COMPUTE, V10202, DOI 10.1007/978-3-662-54494-5
   Kuske S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P11
   Macedo N., SYSTEMATIC LIT REV M
   Macedo N, 2017, IEEE T SOFTWARE ENG, V43, P615, DOI 10.1109/TSE.2016.2620145
   Macedo N, 2016, SOFTW SYST MODEL, V15, P783, DOI 10.1007/s10270-014-0437-x
   Matthias B, 2019, LECT NOTES COMPUT SC, V11629, P212, DOI 10.1007/978-3-030-23611-3_13
   Nassar N, 2018, LECT NOTES COMPUT SC, V10887, P171, DOI 10.1007/978-3-319-92991-0_11
   Ohrndorf M, 2018, PROC IEEE ACM INT C, P105, DOI 10.1145/3183440.3183498
   OMG, 2014, OMG document formal/2014-02-03
   Orejas F., 2013, ECEASST, V57
   Orejas F, 2018, THEOR COMPUT SCI, V741, P19, DOI 10.1016/j.tcs.2018.02.031
   Radke H, 2018, SCI COMPUT PROGRAM, V152, P38, DOI 10.1016/j.scico.2017.08.006
   Rensink A, 2004, LECT NOTES COMPUT SC, V3256, P319
   Rensink Arend, 2008, ELECT COMMUN EASST, V10, DOI [/10.14279/tuj.eceasst.10.153, DOI 10.14279/TUJ.ECEASST.10.153]
   Rozenberg G., 1997, HDB GRAPH GRAMMARS C
   Sandmann C, 2019, ELECTRON P THEOR COM, P87, DOI 10.4204/EPTCS.309.5
   SCHNEIDER S, HUISMAN RUBIN, V24, P226
   Schneider S, 2019, LECT NOTES COMPUT SC, V11424, P151, DOI 10.1007/978-3-030-16722-6_9
   Schneider S, 2018, INT J SOFTW TOOLS TE, V20, P705, DOI 10.1007/s10009-018-0496-3
   Schonenberger J., 2014, P 10 AS PAC C CONC M
   TAENTZER G, HUISMAN RUBIN, V24, P283
   The Linked Data Benchmark Council (LDBC), SOC NETW BENCHM
   Ullmann J.R., 2010, ACM J EXPT ALGORITHM, V15, DOI 10.1145/1671970.1921702
   ULLMANN JR, 1976, J ACM, V23, P31, DOI 10.1145/321921.321925
   Wang KY, 2018, IEEE INT CONF AUTOM, P577, DOI 10.1145/3238147.3238162
NR 47
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2021
VL 23
IS 3
SI SI
BP 369
EP 410
DI 10.1007/s10009-020-00584-x
EA JUL 2021
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TS5ZM
UT WOS:000671712700001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Verbeek, HMW
AF Verbeek, H. M. W.
TI The Log Skeleton Visualizer in ProM 6.9 The winning contribution to the
   process discovery contest 2019
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Log skeletons; Process discovery; Event logs; Process discovery contest
AB Process discovery is an important area in the field of process mining. To help advance this area, a process discovery contest (PDC) has been set up, which allows us to compare different approaches. At the moment of writing, there have been three instances of the PDC: in 2016, in 2017, and in 2019. This paper introduces the winning contribution to the PDC 2019, called the Log Skeleton Visualizer. This visualizer uses a novel type of process models called log skeletons. In contrast with many workflow net-based discovery techniques, these log skeletons do not rely on the directly follows relation. As a result, log skeletons offer circumstantial information on the event log at hand rather than only sequential information. Using this visualizer, we were able to classify 898 out of 900 traces correctly for the PDC 2019 and to win this contest.
C1 [Verbeek, H. M. W.] Eindhoven Univ Technol, Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP Verbeek, HMW (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM h.m.w.verbeek@tue.nl
OI Verbeek, Eric/0000-0002-1658-9679
CR Aalst W.M.P.v.d., 2019, TASK FORCE PROCESS M
   Bergenthum R, 2019, 2019 INTERNATIONAL CONFERENCE ON PROCESS MINING (ICPM 2019), P41, DOI 10.1109/ICPM.2019.00017
   Carmona J., 2019, PROCESS DISCOVERY CO
   Carmona J., 2016, PROCESS DISCOVERY CO
   Carmona J., 2017, PROCESS DISCOVERY CO
   CARMONA J.-VAN, 2018, Conformance checking
   Fahland D, 2009, LECT NOTES BUS INF P, V29, P353
   Hu, 2018, THESIS EINDHOVEN U T
   Mannhardt F., 2018, Ph.D. thesis
   van der Aalst W., 2016, Process Mining: Data Science in Action, DOI DOI 10.1007/978-3-662-49851-4
   van der Aalst WMP, 2009, COMPUT SCI-RES DEV, V23, P99, DOI 10.1007/s00450-009-0057-9
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   Verbeek H.M.W., 2010, P BPM DEM TRACK, V615, P34
   Verbeek H.M.W., 2018, ABS180608247 CORR
NR 14
TC 2
Z9 2
U1 2
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2022
VL 24
IS 4
BP 549
EP 561
DI 10.1007/s10009-021-00618-y
EA MAY 2021
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3N7AF
UT WOS:000651448000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Vernotte, A
   Cretin, A
   Legeard, B
   Peureux, F
AF Vernotte, Alexandre
   Cretin, Aymeric
   Legeard, Bruno
   Peureux, Fabien
TI A domain-specific language to design false data injection tests for air
   traffic control systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Domain-specific language; Air traffic control; ADS-B protocol; Cyber
   security; False data injection attacks; Automated test generation
AB The ADS-B-automatic dependent surveillance-broadcast-technology requires aircraft to broadcast their position and velocity periodically. As compared to legacy radar technologies, coupled with alarming cyber security issues (the ADS-B protocol provides no encryption nor identification), the reliance on aircraft to communicate this surveillance information exposes air transport to new cyber security threats, and especially to FDIAs-false data injection attacks-where an attacker modifies, blocks, or emits fake ADS-B messages to dupe controllers and surveillance systems. This paper is part of an ongoing research initiative toward the generation of FDIA test scenarios and focuses on supporting the test design activity, i.e., supporting ATC experts to meticulously craft test cases in order to assess the resilience of surveillance systems against FDIAs. To achieve this goal, we propose a complete and powerful domain-specific language (DSL), close to natural language, that provides a large expressiveness to support ATC business experts in creating FDIA's test scenarios. We demonstrate the design capabilities of this approach and its productivity gain with respect to manually creating the FDIAs test scenarios.
C1 [Vernotte, Alexandre; Cretin, Aymeric; Legeard, Bruno; Peureux, Fabien] Univ Bourgogne Franche Comte, CNRS, FEMTO ST Inst, 16 Route Gray, F-25030 Besancon, France.
   [Legeard, Bruno; Peureux, Fabien] Smartesting Solut & Serv, Besancon, France.
C3 Universite de Franche-Comte; Centre National de la Recherche
   Scientifique (CNRS); Universite de Technologie de Belfort-Montbeliard
   (UTBM)
RP Cretin, A (corresponding author), Univ Bourgogne Franche Comte, CNRS, FEMTO ST Inst, 16 Route Gray, F-25030 Besancon, France.
EM alexandre.vernotte@femto-st.fr; aymeric.cretin@femto-st.fr;
   bruno.legeard@femto-st.fr; fabien.peureux@femto-st.fr
OI Vernotte, Alexandre/0000-0002-2113-4900
FU EIPHI Graduate school [ANR-17-EURE-0002]; GeLeaD ANR ASTRID Project
FX This work is part of an ongoing research initiative toward the
   generation of FDIA test scenarios partially supported by the GeLeaD ANR
   ASTRID Project & the EIPHI Graduate school (Contract
   "ANR-17-EURE-0002").
CR Akerman S., ARXIV190607921
   AKIMA H, 1970, J ACM, V17, P589, DOI 10.1145/321607.321609
   [Anonymous], 2001, SCI AM
   [Anonymous], 2018, P DOCT S ICRAT
   [Anonymous], 1998, RESOURCE DESCRIPTION
   Asia I.C.A.O., 2008, APANPIRG19
   Baader F, 2003, IN HAND I S, P3
   Barreto A. B., 2012, INT IND TRAIN SIM ED, V12248, P1
   Belta C., 2017, TEMPORAL LOGICS AUTO, P27
   Brooker P, 2008, J NAVIGATION, V61, P195, DOI 10.1017/S0373463307004596
   Ceh I, 2011, COMPUT SCI INF SYST, V8, P317, DOI 10.2298/CSIS101231019C
   CHAN YT, 1994, IEEE T SIGNAL PROCES, V42, P1905, DOI 10.1109/78.301830
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Dán G, 2010, INT CONF SMART GRID, P214, DOI 10.1109/SMARTGRID.2010.5622046
   E.W.G, 2005, SAFETY PERFORMANCE I
   EPPERSON JF, 1987, AM MATH MON, V94, P329, DOI 10.2307/2323093
   EUROCONTROL, 2014, D23 SEC ASS ADS B GR
   Frakes W, 1998, ANN SOFTW ENG, V5, P125, DOI 10.1023/A:1018972323770
   Glimm B, 2014, J AUTOM REASONING, V53, P245, DOI 10.1007/s10817-014-9305-1
   Habler E, 2018, COMPUT SECUR, V78, P155, DOI 10.1016/j.cose.2018.07.004
   Hills M, 2011, LECT NOTES COMPUT SC, V6705, P228, DOI 10.1007/978-3-642-21952-8_17
   Jafer S., 2017, P S MOD DRIV APPR SI, P1
   Kang KyoC., 1990, FEATURE ORIENTED DOM, DOI DOI 10.21236/ADA235785
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Legeard B, 2020, 4 INT WORKSH TEST ES
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   Liu Y, 2011, ACM T INFORM SYST SE, V14, DOI 10.1145/1952982.1952995
   Ma M, 2008, HDB RES WIRELESS SEC, P628
   Maciel D, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE), P265, DOI 10.5220/0007679202650272
   Manesh MR, 2018, AEROSP CONF PROC
   Manesh MR, 2017, INT J CRIT INFR PROT, V19, P16, DOI 10.1016/j.ijcip.2017.10.002
   Martinovic I., 2013, Security of ADS-B: State of the Art and Beyond
   McGuinness D.L., 2004, W3C RECOMMENDATION, V10
   Menzel T, 2018, IEEE INT VEH SYM, P1821, DOI 10.1109/IVS.2018.8500406
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mernik M., 2010, APPL GRAMMATICAL INF, P421, DOI [10.1142/9781848165458_0008, DOI 10.1142/9781848165458_0008]
   Paielli RA, 2013, J AEROSP INFORM SYST, V10, P209, DOI 10.2514/1.54104
   Pakin S, 2007, IEEE T PARALL DISTR, V18, P1436, DOI 10.1109/TPDS.2007.1065
   Queiroz R, 2019, IEEE INT VEH SYM, P287, DOI 10.1109/IVS.2019.8814107
   Rui LY, 2014, IEEE T SIGNAL PROCES, V62, P4673, DOI 10.1109/TSP.2014.2338835
   Savvides A., 2002, Proceedings of the 1st ACM international workshop on Wireless sensor networks and applications (WSNA), P111, DOI [10.1145/570738.570755, DOI 10.1145/570738.570755]
   Schafer Matthias., 2013, INT C APPL CRYPTOGRA, P253, DOI DOI 10.1007/978-3-642-38980-1_16
   Skolnik M, 2008, RADAR HDB
   Smith A., 2006, proceedings of the 25th Digital Avionics Systems Conference, P1
   Strohmeier M, 2016, THESIS OXFORD U
   Strohmeier M, 2017, IEEE T INTELL TRANSP, V18, P1338, DOI 10.1109/TITS.2016.2612584
   Studer R, 1998, DATA KNOWL ENG, V25, P161, DOI 10.1016/S0169-023X(97)00056-6
   Tairas R., 2008, INT C MODEL DRIVEN E, P332
   Taylor R.N., 1995, SIGSOFT Softw. Eng. Notes, V20, P27, DOI [10.1145/217030.217034, DOI 10.1145/217030.217034]
   TRIM RM, 1990, ELECTRON COMMUN ENG, V2, P53, DOI 10.1049/ecej:19900017
   Tsarkov D, 2006, LECT NOTES ARTIF INT, V4130, P292
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   Pereira MJV, 2016, COMPUT LANG SYST STR, V45, P35, DOI 10.1016/j.cl.2015.12.004
   Wesson K.D., 2014, IEEE SECUR PRIV MAG
   Xie L, 2010, INT CONF SMART GRID, P226, DOI 10.1109/SMARTGRID.2010.5622048
   Zhang R., 2017, IEEE Access
NR 56
TC 4
Z9 4
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2022
VL 24
IS 2
BP 127
EP 158
DI 10.1007/s10009-021-00604-4
EA FEB 2021
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0F1UH
UT WOS:000620412900001
DA 2024-07-18
ER

PT J
AU Han, PJ
   Zhai, ZJ
   Nielsen, B
   Nyman, U
AF Han, Pujie
   Zhai, Zhengjun
   Nielsen, Brian
   Nyman, Ulrik
TI Model-based optimization of ARINC-653 partition scheduling
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Partitioned scheduling; Model-based optimization; Parameter sweep;
   Evolutionary algorithm; Timed automata; UPPAAL
ID SCHEDULABILITY ANALYSIS; ALGORITHMS; FRAMEWORK
AB The architecture of ARINC-653 partitioned scheduling has been widely applied to avionics systems owing to its robust temporal isolation among applications. However, this partitioning mechanism causes the problem of how to optimize the partition scheduling of a complex system while guaranteeing its schedulability. In this paper, a model-based optimization approach is proposed. We formulate the problem as a parameter sweep application, which searches for the optimal partition scheduling parameters with respect to minimum processor occupancy via an evolutionary algorithm. An ARINC-653 partitioned scheduling system is modeled as a set of timed automata in the model checker UPPAAL. The optimizer tentatively assigns parameter settings to the models and subsequently invokes UPPAAL to verify schedulability as well as evaluate promising solutions. The parameter space is explored with an evolutionary algorithm that combines refined genetic operators and the self-adaptation of evolution strategies. The experimental results show the applicability of our optimization method.
C1 [Han, Pujie; Zhai, Zhengjun] Northwestern Polytech Univ, Sch Comp Sci & Engn, Xian 710072, Peoples R China.
   [Nielsen, Brian; Nyman, Ulrik] Aalborg Univ, Dept Comp Sci, DK-9220 Aalborg, Denmark.
C3 Northwestern Polytechnical University; Aalborg University
RP Han, PJ (corresponding author), Northwestern Polytech Univ, Sch Comp Sci & Engn, Xian 710072, Peoples R China.
EM hanpujie@mail.nwpu.edu.cn; zhaizjun@nwpu.edu.cn; bnielsen@cs.aau.dk;
   ulrik@cs.aau.dk
RI Nyman, Ulrik/HNJ-5352-2023
OI Nyman, Ulrik/0000-0001-6430-540X; Nielsen, Brian/0000-0002-0935-2104
FU Independent Research Fund Denmark [DFF-7017-00348]
FX This work was in part funded by Independent Research Fund Denmark under
   Grant Number DFF-7017-00348, Compositional Verification of Real-time
   MULTI-CORE SAFETY Critical Systems.
CR AEEC, 2015, ARINC SPECIFICATION
   [Anonymous], 2016, SIGBED REV
   [Anonymous], 2005, J EMBEDDED COMPUT
   Arnold DV, 2002, IEEE T EVOLUT COMPUT, V6, P30, DOI 10.1023/A:1015059928466
   Bäck T, 1993, EVOL COMPUT, V1, P1, DOI 10.1162/evco.1993.1.1.1
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Beji S, 2014, IEEE ACM DIS SIM, P165, DOI 10.1109/DS-RT.2014.28
   Beyer HG, 1997, BIOSYSTEMS, V41, P1, DOI 10.1016/S0303-2647(96)01657-7
   Blikstad M, 2018, OPTIM ENG, V19, P977, DOI 10.1007/s11081-018-9385-6
   Boudjadar A, 2016, SCI COMPUT PROGRAM, V127, P103, DOI 10.1016/j.scico.2016.05.008
   Boudjadar J., AASE 2014
   Boudjadar J., 2014, EMBEDDED REAL TIME S, P1
   Carnevali L, 2013, IEEE T SOFTWARE ENG, V39, P638, DOI 10.1109/TSE.2012.54
   David A, 2015, INT J SOFTW TOOLS TE, V17, P351, DOI [10.1007/s10009-014-0361-y, 10.1007/s10009-014-0323-4]
   Davis Rob, 2008, 16 INT C REAL TIM NE
   Dewan F., 2010, Proceedings of the 16th IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS 2010), P247, DOI 10.1109/RTAS.2010.28
   Easwaran A, 2007, RTSS 2007: 28TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P129
   Easwaran A, 2009, IEEE INT CONF EMBED, P371, DOI 10.1109/RTCSA.2009.46
   Freiberg P.S., 2011, THESIS AALBORG U
   Han PJ, 2018, ELECTRON P THEOR COM, P150, DOI 10.4204/EPTCS.268.5
   Han PJ, 2018, ELECTRON P THEOR COM, P39, DOI 10.4204/EPTCS.272.4
   Kelly OR, 2011, IEEE INT CONF TRUST, P1051, DOI 10.1109/TrustCom.2011.144
   Kim JE, 2015, DES AUT TEST EUROPE, P37
   Mendoza L.E., 2008, INT C ENT INF SYST, P213
   Mühlenbein H, 1993, EVOL COMPUT, V1, P25, DOI 10.1162/evco.1993.1.1.25
   Muhlenbein H., 1996, Meta-Heuristics, P53, DOI DOI 10.1007/978-1-4613-1361-8_4
   Sen K, 2004, LECT NOTES COMPUT SC, V3114, P202
   Shin I, 2004, REAL TIM SYST SYMP P, P57
   Shin I, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347383
   Shukla A, 2015, 2015 1ST INTERNATIONAL CONFERENCE ON FUTURISTIC TRENDS ON COMPUTATIONAL ANALYSIS AND KNOWLEDGE MANAGEMENT (ABLAZE), P515, DOI 10.1109/ABLAZE.2015.7154916
   Sumathi S., 2008, Evolutionary intelligence: an introduction to theory and applications with Matlab
   Sun Y, 2014, C ELECT INSUL DIEL P, P15, DOI 10.1109/CEIDP.2014.6995782
   Yoon MK, 2013, DES AUT TEST EUROPE, P1313
NR 33
TC 5
Z9 5
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2021
VL 23
IS 5
BP 721
EP 740
DI 10.1007/s10009-020-00597-6
EA FEB 2021
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XD7NM
UT WOS:000615759400001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Ceska, M
   Havlena, V
   Holik, L
   Lengal, O
   Vojnar, T
AF Ceska, Milan
   Havlena, Vojtech
   Holik, Lukas
   Lengal, Ondrej
   Vojnar, Tomas
TI Approximate reduction of finite automata for high-speed network
   intrusion detection
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Reduction; Nondeterministic finite automata; Deep packet inspection;
   High-speed network monitoring
ID ARCHITECTURE
AB We consider the problem ofapproximate reduction of non-deterministic automatathat appear in hardware-accelerated network intrusion detection systems (NIDSes). We define an errordistanceof a reduced automaton from the original one as the probability of packets being incorrectly classified by the reduced automaton (wrt the probabilistic distribution of packets in the network traffic). We use this notion to design anapproximate reduction procedurethat achieves a great size reduction (much beyond the state-of-the-art language-preserving techniques) with a controlled and small error. We have implemented our approach and evaluated it on use cases fromSnort, a popular NIDS. Our results provide experimental evidence that the method can be highly efficient in practice, allowing NIDSes to follow the rapid growth in the speed of networks.
C1 [Ceska, Milan; Havlena, Vojtech; Holik, Lukas; Lengal, Ondrej; Vojnar, Tomas] Brno Univ Technol, FIT, Ctr Excellence IT4Innovat, Brno, Czech Republic.
C3 Brno University of Technology
RP Lengal, O (corresponding author), Brno Univ Technol, FIT, Ctr Excellence IT4Innovat, Brno, Czech Republic.
EM ceskam@fit.vutbr.cz; ihavlena@fit.vutbr.cz; holik@fit.vutbr.cz;
   lengal@fit.vutbr.cz; vojnar@fit.vutbr.cz
RI Vojnar, Tomas/K-5057-2015; Ceska, Milan/AAK-2282-2020
OI Vojnar, Tomas/0000-0002-2746-8792; Ceska, Milan/0000-0002-0300-9727;
   Lengal, Ondrej/0000-0002-3038-5875; Holik, Lukas/0000-0001-6957-1651
CR ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], 1978, P 10 ANN ACM S THEOR, DOI 10.1145/800133.804339
   [Anonymous], 2007, P 3 ACM IEEE S ARCH, DOI DOI 10.1145/1323548.1323573
   [Anonymous], 1971, Technical report
   [Anonymous], 2007, Proceedings of the 3rd ACM/IEEE Symposium on Architecture for networking and communications systems, Orlando, Florida, USA
   Baier C, 2016, LECT NOTES COMPUT SC, V9779, P23, DOI 10.1007/978-3-319-415284_2
   Becchi M., 2009, PROC ANCS, P30
   Becchi M., 2007, P ACM CONEXT C CONEX, P1
   Benedikt M., 2016, ARXIV14054560V2
   Bouajjani Ahmed, 2012, International Journal on Software Tools for Technology Transfer, V14, P167, DOI 10.1007/s10009-011-0205-y
   Brodie BC, 2006, CONF PROC INT SYMP C, P191, DOI 10.1145/1150019.1136500
   Bustan D., 2003, ACM Transactions on Computational Logic, V4, P181, DOI 10.1145/635499.635502
   Carrasco R. C., 1994, Grammatical Inference and Applications. Second International Colloquium, ICGI-94 Proceedings, P139
   Champarnaud JM, 2004, THEOR COMPUT SCI, V327, P241, DOI 10.1016/j.tcs.2004.02.048
   Clark CR, 2003, LECT NOTES COMPUT SC, V2778, P956
   Clemente L, 2013, ACM SIGPLAN NOTICES, V48, P63, DOI 10.1145/2480359.2429079
   Clemente L, 2011, LECT NOTES COMPUT SC, V6756, P258, DOI 10.1007/978-3-642-22012-8_20
   Csanky Laszlo, 1975, 16 ANN S FDN COMPUTE, P11, DOI DOI 10.1109/SFCS.1975.14
   Deza E., 2009, Encyclopedia of Distances
   eka M., 2018, APPROXIMATE REDUCTIO, P2018, DOI [10.6084/m9.figshare.5907055, DOI 10.6084/M9.FIGSHARE.5907055]
   eka M., 2018, LNCS, V10806
   Etessami K., 2002, CONCUR 2002 - Concurrency Theory. 13th International Conference Proceedings (Lecture Notes in Computer Science Vol.2421), P131
   Fang Yu, 2006, ACM/IEEE Symposium on Architectures for Networking and Communications Systems (ANCS 2006), P93, DOI 10.1109/ANCS.2006.4579527
   Gange G, 2017, LECT NOTES COMPUT SC, V10482, P67, DOI 10.1007/978-3-319-68167-2_5
   Gawrychowski P, 2009, LECT NOTES COMPUT SC, V5734, P356, DOI 10.1007/978-3-642-03816-7_31
   Hartmanns A., 2018, FIGSHARE, DOI [10.6084/m9.figshare.5896615, DOI 10.6084/M9.FIGSHARE.5896615]
   Hogben L., 2013, HDB LINEAR ALGEBRA
   Hutchings BL, 2002, ANN IEEE SYM FIELD P, P111, DOI 10.1109/FPGA.2002.1106666
   JIANG T, 1993, SIAM J COMPUT, V22, P1117, DOI 10.1137/0222067
   Kastil J, 2009, PROCEEDINGS OF THE 2009 12TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN, ARCHITECTURES, METHODS AND TOOLS, P823, DOI 10.1109/DSD.2009.149
   Koenek J., 2007, 2007 IEEE DES DIAGN, P1
   Kumar S, 2006, ACM SIGCOMM COMP COM, V36, P339, DOI 10.1145/1151659.1159952
   Kumar S, 2006, 2006 EUROPEAN MICROWAVE CONFERENCE, VOLS 1-4, P1081
   Liu C, 2013, IEEE T COMPUT, V62, P310, DOI 10.1109/TC.2011.231
   Luchaup D, 2014, IEEE INFOCOM SER, P531, DOI 10.1109/INFOCOM.2014.6847977
   Malcher A, 2004, THEOR COMPUT SCI, V327, P375, DOI 10.1016/j.tcs.2004.03.070
   Maletti A., 2011, ARXIV11043007
   Matousek D, 2016, 2016 INTERNATIONAL CONFERENCE ON FIELD-PROGRAMMABLE TECHNOLOGY (FPT), P93, DOI 10.1109/FPT.2016.7929431
   Mayr R, 2017, REDUCE TOOL MINIMIZI
   Mitra A, 2007, PR IEEE COMP DESIGN, P127, DOI 10.1145/1323548.1323571
   Mohri Mehryar, 2012, Implementation and Application of Automata. Proceedings of the 17th International Conference (CIAA 2012), P265, DOI 10.1007/978-3-642-31606-7_23
   Mohri M., 2002, CIAA, P1
   PAIGE R, 1987, SIAM J COMPUT, V16, P973, DOI 10.1137/0216062
   Papadimitriou C. H., 1994, Computational Complexity
   Parker A.J., 2016, ARXIV160207715
   Pus V., 2011, 2011 ACM/IEEE Symposium on Architectures for Networking and Communications Systems (ANCS), P95, DOI 10.1109/ANCS.2011.25
   SCHUTZENBERGER MP, 1961, INFORM CONTROL, V4, P245, DOI 10.1016/S0019-9958(61)80020-X
   Sidhu R., 2001, 9 ANN IEEE S FIELD P, P227, DOI DOI 10.1109/FCCM.2001.22
   Solodovnikov V., 1985, J SOVIET MATH, V29, P1482, DOI DOI 10.1007/BF02104747
   Tan L, 2005, CONF PROC INT SYMP C, P112
   Thollard F, 2004, LECT NOTES COMPUT SC, V3264, P248
   Vardi M.Y, SFCS 85, P327
NR 52
TC 3
Z9 3
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2020
VL 22
IS 5
SI SI
BP 523
EP 539
DI 10.1007/s10009-019-00520-8
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9OM
UT WOS:000573269500001
OA Green Published
DA 2024-07-18
ER

PT J
AU Abrial, JR
AF Abrial, Jean-Raymond
TI The ABZ-2018 case study with Event-B
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Train system; Event-B; Formal development; Formal method
AB This paper presents a solution to the ABZ-2018 case study.
EM jrabrial@neuf.fr
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Butler M, 2002, DES AUTOM EMBED SYST, V6, P355, DOI 10.1023/A:1016503426126
   EEIG ERTMS Users Group, 2017, HYBR ERTMS ETCS LEV
   Haxthausen A.E., 1999, LNCS, V1709
   Hoang T.S., 2018, HYBRID ERTMS ETCS LE
NR 6
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2020
VL 22
IS 3
SI SI
BP 257
EP 264
DI 10.1007/s10009-019-00525-3
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LE0ZY
UT WOS:000526454200002
DA 2024-07-18
ER

PT J
AU Mkaouar, H
   Zalila, B
   Hugues, JM
   Jmaiel, M
AF Mkaouar, Hana
   Zalila, Bechir
   Hugues, Jerome
   Jmaiel, Mohamed
TI A formal approach to AADL model-based software engineering
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Safety-critical software engineering; Real-time systems; Ravenscar
   profile; AADL; Formal specification; Model-checking; CADP
ID VERIFICATION; TIME; SEMANTICS; ARCHITECTURES; LANGUAGES; CHECKING;
   SAFETY
AB Formal methods have become a recommended practice in safety-critical software engineering. To be formally verified, a system should be specified with a specific formalism such as Petri nets, automata and process algebras, which requires a formal expertise and may become complex especially with large systems. In this paper, we report our experience in the formal verification of safety-critical real-time systems. We propose a formal mapping for a real-time task model using the LNT language, and we describe how it is used for the integration of a formal verification phase in an AADL model-based development process. We focus on real-time systems with event-driven tasks, asynchronous communication and preemptive fixed-priority scheduling. We provide a complete tool-chain for the automatic model transformation and formal verification of AADL models. Experimentation illustrates our results with the Flight control system and Line follower robot case studies.
C1 [Mkaouar, Hana; Zalila, Bechir; Jmaiel, Mohamed] Univ Sfax, Natl Sch Engn Sfax, ReDCAD Lab, BP 1173, Sfax 3038, Tunisia.
   [Hugues, Jerome] Univ Toulouse, ISAE, SUPAERO, F-31055 Toulouse 4, France.
   [Jmaiel, Mohamed] Digital Res Ctr Sfax, BP 275, Sfax 3021, Tunisia.
C3 Universite de Sfax; Ecole Nationale dIngenieurs de Sfax (ENIS);
   Universite de Toulouse; Institut Superieur de l'Aeronautique et de
   l'Espace (ISAE-SUPAERO); Universite de Sfax; Centre de Recherche en
   Numerique de Sfax (CRNS)
RP Mkaouar, H (corresponding author), Univ Sfax, Natl Sch Engn Sfax, ReDCAD Lab, BP 1173, Sfax 3038, Tunisia.
EM hana.mkaouar@redcad.org; bechir.zalila@redcad.org;
   jerome.hugues@isae.fr; mohamed.jmaiel@redcad.org
RI Hugues, Jerome/X-3274-2019; Zalila, Bechir/IST-2173-2023
OI Hugues, Jerome/0000-0003-0148-7175; Zalila, Bechir/0000-0002-2432-3520
CR Abdoul T, 2008, IEEE INT C ENG COMP, P263, DOI 10.1109/ICECCS.2008.24
   [Anonymous], 2009, SAE AS5506A
   [Anonymous], THESIS
   [Anonymous], P 1 AMAST INT WORKSH
   [Anonymous], RTCADO333
   [Anonymous], TECHNICAL REPORT
   [Anonymous], THESIS
   [Anonymous], AS55062 SAE
   Bae K, 2014, LECT NOTES COMPUT SC, V8442, P94, DOI 10.1007/978-3-319-06410-9_7
   Bae K, 2012, LECT NOTES COMPUT SC, V7212, P59, DOI 10.1007/978-3-642-28872-2_4
   Bae K, 2011, LECT NOTES COMPUT SC, V6991, P651, DOI 10.1007/978-3-642-24559-6_43
   Berthomieu B, 2009, LECT NOTES COMPUT SC, V5570, P207, DOI 10.1007/978-3-642-01924-1_15
   Besnard L, 2015, SCI COMPUT PROGRAM, V106, P54, DOI 10.1016/j.scico.2014.05.014
   Bodeveix JP, 2015, SCI COMPUT PROGRAM, V106, P30, DOI 10.1016/j.scico.2015.03.003
   Bozzano M, 2011, COMPUT J, V54, P754, DOI 10.1093/comjnl/bxq024
   Bozzano M, 2010, LECT NOTES COMPUT SC, V6174, P562, DOI 10.1007/978-3-642-14295-6_48
   Bozzano M, 2009, LECT NOTES COMPUT SC, V5775, P173, DOI 10.1007/978-3-642-04468-7_15
   Burns A., 1999, Ada Letters, V19, P49
   Chkouri MY, 2009, LECT NOTES COMPUT SC, V5421, P5, DOI 10.1007/978-3-642-01648-6_2
   Courtiat JP, 2000, COMPUT COMMUN, V23, P1104, DOI 10.1016/S0140-3664(99)00240-6
   Crouzen P, 2011, LECT NOTES COMPUT SC, V6603, P111, DOI 10.1007/978-3-642-19811-3_9
   Feiler Peter H., 2012, MODEL BASED ENG AADL
   Garavel H, 2006, THEOR COMPUT SCI, V351, P131, DOI 10.1016/j.tcs.2005.09.064
   Garavel Hubert, 2017, ModelEd, TestEd, TrustEd - Essays Dedicated to Ed Brinksma on the Occasion of His 60th Birthday. LNCS 10500, P3, DOI 10.1007/978-3-319-68270-9_1
   Garavel Hubert, 2013, International Journal on Software Tools for Technology Transfer, V15, P89, DOI 10.1007/s10009-012-0244-z
   Garavel H, 2001, INT FED INFO PROC, V69, P377, DOI 10.1007/0-306-47003-9_24
   Garavel H, 2015, ACTA INFORM, V52, P337, DOI 10.1007/s00236-015-0226-1
   Geniet D, 2004, THEOR COMPUT SCI, V313, P119, DOI 10.1016/j.tcs.2003.10.009
   Gui SL, 2008, IEEE I C EMBED SOFTW, P429, DOI 10.1109/ICESS.2008.63
   Hamdane ME., 2013, INT J STW ENG APPL, V7, P115
   Hamid I, 2008, LECT NOTES COMPUT SC, V5026, P44, DOI 10.1007/978-3-540-68624-8_4
   Hamid I, 2007, 13TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P173, DOI 10.1109/RTCSA.2007.58
   Hecht M, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P361, DOI 10.1109/ICECCS.2011.44
   Hu K, 2015, J SYST ARCHITECT, V61, P141, DOI 10.1016/j.sysarc.2015.02.003
   Jahier E., 2007, P 7 ACM IEEE INT C E, P134
   Jean-Francois R, 2008, IEEE INT C ENG COMP, P282, DOI 10.1109/ICECCS.2008.28
   Johnsen A., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P130, DOI 10.1109/HASE.2012.22
   Johnsen A, 2016, 2016 12TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES (QOSA), P31, DOI 10.1109/QoSA.2016.9
   Lasnier G, 2009, LECT NOTES COMPUT SC, V5570, P237, DOI 10.1007/978-3-642-01924-1_17
   Leonard L., 1998, Formal Aspects of Computing, V10, P248, DOI 10.1007/s001650050015
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Lundqvist K, 2003, REAL-TIME SYST, V24, P29, DOI 10.1023/A:1021701221847
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Mateescu R, 2003, SCI COMPUT PROGRAM, V46, P255, DOI 10.1016/S0167-6423(02)00094-1
   Mateescu R, 2008, LECT NOTES COMPUT SC, V5014, P148, DOI 10.1007/978-3-540-68237-0_12
   Mkaouar Hana, 2015, Reliable Software Technologies - Ada-Europe 2015. 20th Ada-Europe International Conference on Reliable Software Technologies. Proceedings: LNCS 9111, P146, DOI 10.1007/978-3-319-19584-1_10
   Mkaouar H, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1402, DOI 10.1145/3167132.3167282
   Ober I, 2008, LECT NOTES COMPUT SC, V5026, P30, DOI 10.1007/978-3-540-68624-8_3
   Ölveczky PC, 2010, LECT NOTES COMPUT SC, V6117, P47, DOI 10.1007/978-3-642-13464-7_5
   Renault X, 2009, PROCEEDINGS OF THE 12TH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, P313, DOI 10.1109/ISORC.2009.11
   Renault X, 2009, P IEEE RAP SYST PROT, P26, DOI 10.1109/RSP.2009.30
   Rugina AE, 2008, EDCC-7: SEVENTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE, PROCEEDINGS, P85, DOI 10.1109/EDCC-7.2008.14
   Singhoff F., 2004, Ada Letters, V24, P1
   Sokolsky O., 2006, INT PARALLEL DISTRIB, P179
   Sokolsky O, 2009, LECT NOTES COMPUT SC, V5570, P222, DOI 10.1007/978-3-642-01924-1_16
   Vyatkin V, 2013, IEEE T IND INFORM, V9, P1234, DOI 10.1109/TII.2013.2258165
   Yang ZB, 2014, J SYST SOFTWARE, V93, P42, DOI 10.1016/j.jss.2014.02.058
   Yu HF, 2013, J SYST ARCHITECT, V59, P1157, DOI 10.1016/j.sysarc.2013.08.004
   Yu HF, 2013, FRONT COMPUT SCI-CHI, V7, P627, DOI 10.1007/s11704-013-2307-z
   Yunfeng Zhang, 2011, Proceedings 2011 IEEE 2nd International Conference on Software Engineering and Service Science (ICSESS 2011), P224, DOI 10.1109/ICSESS.2011.5982295
   Zhang F, 2017, IEEE ACCESS, V5, P27421, DOI 10.1109/ACCESS.2017.2770323
NR 61
TC 8
Z9 9
U1 5
U2 15
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2020
VL 22
IS 2
SI SI
BP 219
EP 247
DI 10.1007/s10009-019-00513-7
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KX0GO
UT WOS:000521561800008
DA 2024-07-18
ER

PT J
AU Panizo, L
   Diaz, A
   Garcia, B
AF Panizo, Laura
   Diaz, Almudena
   Garcia, Bruno
TI Model-based testing of apps in real network scenarios
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model-based testing; Mobile network testbed; Model checking
AB Traditional testing methods for mobile apps focus on detecting execution errors. However, the evolution of mobile networks toward 5G will require additional support for app developers to also ensure good performance and user experience. Manual testing in a number of scenarios is not enough to satisfy the expectations of the apps' end users. This paper presents the testing framework developed in the TRIANGLE project (), which integrates a complete mobile network testbed to test, benchmark and certify mobile apps. In this paper, we focus on a recent extension of the TRIANGLE framework that uses model-based testing based on model checking to support the automatic generation of user interactions. We introduce the complete testing framework and the basis of the model-based extension. Finally, we use the testing framework to evaluate the performance of the ExoPlayer app in different network scenarios. ExoPlayer is a video streaming app for Android that implements different adaptive streaming protocols.
C1 [Panizo, Laura; Garcia, Bruno] Univ Malaga, Andalucia Tech, Dept Lenguajes & Ciencias Computac, Malaga, Spain.
   [Diaz, Almudena] Univ Malaga, Andalucia Tech, Malaga, Spain.
C3 Universidad de Malaga; Universidad de Malaga
RP Panizo, L (corresponding author), Univ Malaga, Andalucia Tech, Dept Lenguajes & Ciencias Computac, Malaga, Spain.
EM laurapanizo@lcc.uma.es; adz@uma.es; bgarcia@lcc.uma.es
RI Diaz Zayas, Almudena/H-8021-2015; Panizo Jaime, Laura/H-6283-2015;
   Zayas, Almudena Diaz/AAH-1107-2019
OI Diaz Zayas, Almudena/0000-0002-1226-6135; Panizo Jaime,
   Laura/0000-0002-6399-6162; Zayas, Almudena Diaz/0000-0002-1226-6135;
   Garcia, Bruno/0000-0001-8276-5936
CR 3GPP, 2018, TECHNICAL REPORT
   Amalfitano D, 2017, J SYST SOFTWARE, V125, P322, DOI 10.1016/j.jss.2016.12.017
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   [Anonymous], INF TECHN DYN AD STR
   [Anonymous], 2018, DEL D2 3 IN PLANN TE
   [Anonymous], 2016, DEL D2 1 IN REP TEST
   [Anonymous], 2018, DEL D2 6 FIN TEST ME
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Baek YM, 2016, IEEE INT CONF AUTOM, P238, DOI [10.1145/2970276.2970313, 10.1145/2970276.2970310]
   Broy M., 2005, Springer LNCS
   Cattoni AF, 2016, 2016 EUROPEAN CONFERENCE ON NETWORKS AND COMMUNICATIONS (EUCNC), P307, DOI 10.1109/EuCNC.2016.7561053
   Cellular Telecommunications Industry Association (CTIA), 2018, TECHNICAL REPORT
   Zayas AD, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/6202854
   Global System for Mobile communications Association (GSMA), 2017, TECHNICAL REPORT
   Koumaras H., 2018, IEEE INT WORKSH COMP
   Kozamernik F, 2005, SMPTE MOTION IMAG J, V114, P152, DOI 10.5594/J11535
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Massol Vincent., 2003, JUNIT ACTION
   Mehmood MA, 2012, TESTBEDS RES INFRAST, P286, DOI DOI 10.1007/978-3-642-29273-6_22
   Microsoft Corporation, 2009, SMOOTH STREAM PROT
   NeoLoad by Neotys, LOAD TEST PLATF ACC
   NGMN Alliance, 2018, TECHNICAL REPORT
   Panizo L, 2017, SPIN'17: PROCEEDINGS OF THE 24TH ACM SIGSOFT INTERNATIONAL SPIN SYMPOSIUM ON MODEL CHECKING OF SOFTWARE, P192, DOI 10.1145/3092282.3092298
   Panizo L, 2018, LECT NOTES COMPUT SC, V10869, P190, DOI 10.1007/978-3-319-94111-0_11
   Pantos R., 2017, Http live streaming, DOI DOI 10.17487/RFC8216
   Perfecto, CLOUD BAS PLATF CONT
   Espada AR, 2017, MOB INF SYST, V2017, DOI 10.1155/2017/2012696
   Solera M, 2018, WIRELESS PERS COMMUN, V98, P2753, DOI 10.1007/s11277-017-4999-0
   Yang SQ, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON THE ENGINEERING OF MOBILE-ENABLED SYSTEMS (MOBS), P1, DOI 10.1109/MOBS.2013.6614215
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Zein S, 2016, J SYST SOFTWARE, V117, P334, DOI 10.1016/j.jss.2016.03.065
NR 31
TC 7
Z9 7
U1 1
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2020
VL 22
IS 2
SI SI
BP 105
EP 114
DI 10.1007/s10009-019-00518-2
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KX0GO
UT WOS:000521561800002
DA 2024-07-18
ER

PT J
AU Zaraket, FA
   Jaber, M
   Noureddine, M
   Falcone, Y
AF Zaraket, Fadi A.
   Jaber, Mohamad
   Noureddine, Mohamad
   Falcone, Ylies
TI From high-level modeling toward efficient and trustworthy circuits
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Component-based design; Correct-by-construction; FPGA; Verification
ID VERIFICATION; SYSTEMS; DESIGN
AB Behavior-interaction-priority (BIP) is a layered embedded system design and verification framework that provides separation of functionality, synchronization, and priority concerns to simplify system design and to establish correctness by construction. BIP framework comes with a runtime engine and a suite of verification tools that use D-Finder and NuSMV as model-checkers. In this paper, we provide a method and a supporting tool that take a BIP system and a set of invariants and compute a reduced sequential circuit with a system-specific scheduler and a designated output that is true when the invariants hold. Our method uses ABC, a sequential circuit synthesis and verification framework, to (1) generate an efficient circuit implementation of the system that can be readily translated into FPGA or ASIC implementations and to (2) verify the system and debug it in case a counterexample is found. Moreover, we generate a concurrent C implementation of the circuit that can be directly used for runtime verification. We evaluated our method with two benchmark systems, and our results show that, compared to existing techniques, our method is faster and scales to larger sizes.
C1 [Zaraket, Fadi A.; Jaber, Mohamad] Amer Univ Beirut, Beirut, Lebanon.
   [Noureddine, Mohamad] Univ Illinois, Performabil Engn Res Grp, Urbana, IL USA.
   [Falcone, Ylies] Univ Grenoble Alpes, INRIA, Lab Informat Grenoble, F-38000 Grenoble, France.
C3 American University of Beirut; University of Illinois System; University
   of Illinois Urbana-Champaign; Communaute Universite Grenoble Alpes;
   Institut National Polytechnique de Grenoble; Universite Grenoble Alpes
   (UGA); Centre National de la Recherche Scientifique (CNRS); Inria
RP Jaber, M (corresponding author), Amer Univ Beirut, Beirut, Lebanon.
EM fz11@aub.edu.lb; mj54@aub.edu.lb; nouredd2@illinois.edu;
   Ylies.Falcone@univ-grenoble-alpes.fr
OI Zaraket, Fadi/0000-0001-5909-6375
CR Abdellatif T, 2013, MATH STRUCT COMP SCI, V23, P882, DOI 10.1017/S096012951200028X
   Amla N, 2005, LECT NOTES COMPUT SC, V3725, P254
   [Anonymous], SAVCBS
   Aziz A, 2002, FORM METHOD SYST DES, V21, P193, DOI 10.1023/A:1016043502772
   Balarin F, 2003, COMPUTER, V36, P45, DOI 10.1109/MC.2003.1193228
   Barnat J, 2013, INT CONF APPL CONCUR, P51, DOI 10.1109/ACSD.2013.8
   Barnat J, 2010, BRIEF BIOINFORM, V11, P301, DOI 10.1093/bib/bbp074
   Basu A, 2008, LECT NOTES COMPUT SC, V5048, P116, DOI 10.1007/978-3-540-68855-6_8
   Basu A, 2011, IEEE SOFTWARE, V28, P41, DOI 10.1109/MS.2011.27
   BAUMGARTNER J, 2002, COMPUTER AIDED VERIF
   Bensalem S, 2016, SOFTW SYST MODEL, V15, P427, DOI 10.1007/s10270-014-0410-8
   Bensalem S, 2009, LECT NOTES COMPUT SC, V5643, P614, DOI 10.1007/978-3-642-02658-4_45
   Berezin Sergey., 1998, COMPOSITIONAL REASON
   Biere A., 2009, Handbook of Satisfiability
   Bjesse P, 2004, ICCAD-2004: INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, IEEE/ACM DIGEST OF TECHNICAL PAPERS, P42, DOI 10.1109/ICCAD.2004.1382541
   Bjesse P., 2004, INT C COMP AID DES
   Bjesse Per., 2000, Formal Methods in Computer-Aided Design
   Bonakdarpour B, 2012, DISTRIB COMPUT, V25, P383, DOI 10.1007/s00446-012-0168-6
   Bradley AR, 2007, FMCAD 2007: FORMAL METHODS IN COMPUTER AIDED DESIGN, PROCEEDINGS, P173, DOI 10.1109/.15
   Bradley AR, 2011, LECT NOTES COMPUT SC, V6538, P70, DOI 10.1007/978-3-642-18275-4_7
   Brayton R, 2010, LECT NOTES COMPUT SC, V6174, P24, DOI 10.1007/978-3-642-14295-6_5
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   Bybell T, 2010, Gtkwave electronic waveform viewer
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   Clarke EM, 1999, MODEL CHECKING, P1
   Davare A, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2435227.2435245
   Dutertre B, 2006, LECT NOTES COMPUT SC, V4144, P81, DOI 10.1007/11817963_11
   Een N., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P125
   Een N., 2003, ELECT NOTES THEORETI, V89, P543, DOI 10.1016/s1571-0661(05)82542-3
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Falcone Y, 2015, SOFTW SYST MODEL, V14, P173, DOI 10.1007/s10270-013-0323-y
   Gafni E, 2003, DISTRIB COMPUT, V16, P1, DOI [10.1007/s00446-002-0070-8, 10.1007/S00446-002-0070-8]
   Guerraoui R, 2012, ACM SIGPLAN NOTICES, V47, P55, DOI 10.1145/2345156.2254072
   Henzinger TA, 2006, LECT NOTES COMPUT SC, V4085, P1
   Ho P.-H., 2000, INT C COMP AID DES
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Hurst AP, 2007, FMCAD 2007: FORMAL METHODS IN COMPUTER AIDED DESIGN, PROCEEDINGS, P181
   Jaber M., 2010, THESIS
   Kuehlmann A, 2001, DES AUT CON, P232, DOI 10.1109/DAC.2001.935510
   Kuehlmann A., 2001, Computer Aided Verification104-117
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2725, P1
   Mishchenko Alan, 2008, 2008 IEEE/ACM International Conference on Computer-Aided Design (ICCAD), P234, DOI 10.1109/ICCAD.2008.4681580
   Mishchenko A, 2006, DES AUT CON, P532, DOI 10.1109/DAC.2006.229287
   Mony H, 2005, DES AUT CON, P463
   Mony H, 2004, FORMAL METHODS COMPU
   MONY H, 2005, DES AUT C
   Moon I. -H., 2000, FORMAL METHODS COMPU
   Moskewicz M. W., 2001, ACM DES AUT C
   Nguyen T-H, 2010, CONSTRUCTIVE VERIFIC
   Niaki SHA, 2013, DES AUT TEST EUROPE, P27
   Noureddine M, 2014, FORMAL ASPECTS COMPO
   Panda PR, 2001, ISSS'01: 14TH INTERNATIONAL SYMPOSIUM ON SYSTEM SYNTHESIS, P75, DOI 10.1109/ISSS.2001.957916
   Potop-Butucaru Dumitru., 2007, Compiling Esterel, V1st
   Sander I, 2004, IEEE T COMPUT AID D, V23, P17, DOI 10.1109/TCAD.2003.819898
   SENTOVICH EM, 1992, 1992 IEEE INTERNATIONAL CONFERENCE ON COMPUTER DESIGN : VLSI IN COMPUTERS & PROCESSORS, P328, DOI 10.1109/ICCD.1992.276282
   Sipser M., 2006, INTRO THEORY COMPUTA
   Wang D, 2003, THESIS
   Wang Qiang, 2015, Trustworthy Global Computing. 10th International Symposium (TGC 2015). Revised Selected Papers: LNCS 9533, P147, DOI 10.1007/978-3-319-28766-9_10
NR 59
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2019
VL 21
IS 2
BP 143
EP 163
DI 10.1007/s10009-017-0462-5
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS3JE
UT WOS:000463758000002
DA 2024-07-18
ER

PT J
AU Jeannin, JB
   Ghorbal, K
   Kouskoulas, Y
   Schmidt, A
   Gardner, R
   Mitsch, S
   Platzer, A
AF Jeannin, Jean-Baptiste
   Ghorbal, Khalil
   Kouskoulas, Yanni
   Schmidt, Aurora
   Gardner, Ryan
   Mitsch, Stefan
   Platzer, Andre
TI A formally verified hybrid system for safe advisories in the
   next-generation airborne collision avoidance system
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Aircraft collision avoidance; Next-generation airborne collision
   avoidance system (ACAS X); Formal verification; Hybrid systems;
   Continuous dynamics
ID CONFLICT-RESOLUTION; VERIFICATION
AB The Next-Generation Airborne Collision Avoidance System (ACAS X) is intended to be installed on all large aircraft to give advice to pilots and prevent mid-air collisions with other aircraft. It is currently being developed by the Federal Aviation Administration (FAA). In this paper, we determine the geometric configurations under which the advice given by ACAS X is safe under a precise set of assumptions and formally verify these configurations using hybrid systems theorem proving techniques. We consider subsequent advisories and show how to adapt our formal verification to take them into account. We examine the current version of the real ACAS X system and discuss some cases where our safety theorem conflicts with the actual advisory given by that version, demonstrating how formal hybrid systems proving approaches are helping to ensure the safety of ACAS X. Our approach is general and could also be used to identify unsafe advice issued by other collision avoidance systems or confirm their safety.
C1 [Jeannin, Jean-Baptiste] Samsung Res Amer, Mountain View, CA 94043 USA.
   [Ghorbal, Khalil] INRIA, Rennes, France.
   [Kouskoulas, Yanni; Schmidt, Aurora; Gardner, Ryan] Johns Hopkins Univ, Appl Phys Lab, Laurel, MD USA.
   [Mitsch, Stefan; Platzer, Andre] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
C3 Samsung; Inria; Johns Hopkins University; Johns Hopkins University
   Applied Physics Laboratory; Carnegie Mellon University
RP Jeannin, JB (corresponding author), Samsung Res Amer, Mountain View, CA 94043 USA.
EM jeannin@cs.cmu.edu
RI Schmidt, Aurora/HHY-7269-2022; Platzer, André/J-2507-2014
OI Platzer, André/0000-0001-7238-5710
FU Federal Aviation Administration Traffic Alert and Collision Avoidance
   System (TCAS) Program Office (PO) AJM-233 [DTFAWA-11-C-00074]; National
   Science Foundation under NSF CAREER Award [CNS-1054246]; Direct For
   Computer & Info Scie & Enginr; Division Of Computer and Network Systems
   [1054246] Funding Source: National Science Foundation
FX This research was conducted under the sponsorship of the Federal
   Aviation Administration Traffic Alert and Collision Avoidance System
   (TCAS) Program Office (PO) AJM-233 under contract number
   DTFAWA-11-C-00074. Additionally, support for the basic verification
   technology used as a foundation for this research was provided by the
   National Science Foundation under NSF CAREER Award CNS-1054246. The
   authors would like to warmly thank Neal Suchy for his lead of the ACAS X
   project and support of this work, as well as Nathan Fulton, Ran Ji and
   Jan-David Quesel for their support of the KeYmaeraX tool. The authors
   would also like to thank Jeff Brush, Barbara Chludzinski, Dane Fichter,
   Jessica Holland, Robert Klaus, Barbara Kobzik-Juul, Mykel Kochenderfer,
   Ted Londner, Sarah Loos, Jessica Lopez, Ed Morehouse, Wes Olson, Michael
   Owen, Anshu Saksena, Joshua Silbermann, the ACAS X development team and
   the anonymous reviewers for their interesting feedback.
CR [Anonymous], 2008, Project report ATC-344
   [Anonymous], 1975, Lecture Notes In Computer Science, DOI [10.1007/3-540-07407-4_17, 10.1007/3-, DOI 10.1007/3, DOI 10.1007/3-540-07407-4_17]
   Chludzinski B. J., 2009, ATC346 MIT LINC LAB
   Dowek G, 2005, AIAA GUID NAV CONTR
   Federal Aviation Administration, 2011, INTR TCAS
   Federal Aviation Administration TCAS Program Office, 2014, ALG DES DESCR SURV T
   Federal Aviation Administration TCAS Program Office, 2014, ALG DES DESCR THREAT
   Felty A., 2015, P LNCS, V9195
   Fulton N, 2015, LECT NOTES ARTIF INT, V9195, P527, DOI 10.1007/978-3-319-21401-6_36
   Galdino A., 2007, LNCS, V4576
   Ghorbal K., 2014, J AEROSP INF SYST
   Holland J. E., 2014, AIR TRAFFIC CONTROL
   Jeannin J.-B., 2015, TACAS, P21
   Kochenderfer Mykel J., 2012, Lincoln Laboratory Journal, V19, P17
   Kochenderfer M. J., 2013, DATA COMPRESSION C
   Kochenderfer M. J., 2010, ATC371 MIT LINC LAB
   Loos S. M., 2013, P 16 INT C HYBR SYST, P125, DOI DOI 10.1145/2461328.2461350
   Lygeros J, 1997, IEEE DECIS CONTR P, P1829, DOI 10.1109/CDC.1997.657846
   Platzer A, 2008, J AUTOM REASONING, V41, P143, DOI 10.1007/s10817-008-9103-8
   Platzer A, 2015, LECT NOTES ARTIF INT, V9195, P467, DOI 10.1007/978-3-319-21401-6_32
   Platzer A, 2012, IEEE S LOG, P13, DOI 10.1109/LICS.2012.13
   Platzer A, 2010, LOGICAL ANALYSIS OF HYBRID SYSTEMS: PROVING THEOREMS FOR COMPLEX DYNAMICS, P335, DOI 10.1007/978-3-642-14509-4_9
   Platzer A, 2009, LECT NOTES COMPUT SC, V5850, P547, DOI 10.1007/978-3-642-05089-3_35
   Tomlin C, 1998, IEEE T AUTOMAT CONTR, V43, P509, DOI 10.1109/9.664154
   von Essen C, 2014, LECT NOTES COMPUTER, P620, DOI DOI 10.1007/978-3-642-54862-8_54
NR 25
TC 17
Z9 18
U1 1
U2 7
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2017
VL 19
IS 6
BP 717
EP 741
DI 10.1007/s10009-016-0434-1
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ4TL
UT WOS:000412735100005
DA 2024-07-18
ER

PT J
AU Hillah, L
   Maesano, AP
   De Rosa, F
   Kordon, F
   Wuillemin, PH
   Fontanelli, R
   Di Bona, S
   Guerri, D
   Maesano, L
AF Hillah, Lom Messan
   Maesano, Ariele-Paolo
   De Rosa, Fabio
   Kordon, Fabrice
   Wuillemin, Pierre-Henri
   Fontanelli, Riccardo
   Di Bona, Sergio
   Guerri, Davide
   Maesano, Libero
TI Automation and intelligent scheduling of distributed system functional
   testing
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Service testing; Test automation; Model-based test generation; Test
   scheduling; Test prioritisation; Test planning
ID PRIORITIZATION; GENERATION; SERVICES
AB This paper presents the approach to functional test automation of services (black-box testing) and service architectures (grey-box testing) that has been developed within the MIDAS project and is accessible on the MIDAS SaaS. In particular, the algorithms and techniques adopted for addressing input and oracle generation, dynamic scheduling, and session planning issues supporting service functional test automation are illustrated. More specifically, the paper details: (i) the test input generation based on formal methods and temporal logic specifications, (ii) the test oracle generation based on service formal specifications, (iii) the dynamic scheduling of test cases based on probabilistic graphical reasoning, and (iv) the reactive, evidence-based planning of test sessions with on-the-fly generation of new test cases. Finally, the utilisation of the MIDAS prototype for the functional test of operational services and service architectures in the healthcare industry is reported and assessed. A planned evolution of the technology deals with the testing and troubleshooting of distributed systems that integrate connected objects.
C1 [Hillah, Lom Messan] Univ Paris Ouest Nanterre Def, F-92000 Nanterre, France.
   [Hillah, Lom Messan; Maesano, Ariele-Paolo; Kordon, Fabrice; Wuillemin, Pierre-Henri] UPMC Univ Paris 06, Sorbonne Univ, CNRS, LIP6,UMR7606, F-75005 Paris, France.
   [Maesano, Ariele-Paolo; De Rosa, Fabio; Maesano, Libero] Simple Engn France, F-75011 Paris, France.
   [Fontanelli, Riccardo; Di Bona, Sergio; Guerri, Davide] Dedalus SpA, I-50141 Florence, Italy.
C3 Universite Paris Nanterre; Universite Paris Saclay; Centre National de
   la Recherche Scientifique (CNRS); Sorbonne Universite
RP Hillah, L (corresponding author), Univ Paris Ouest Nanterre Def, F-92000 Nanterre, France.; Hillah, L (corresponding author), UPMC Univ Paris 06, Sorbonne Univ, CNRS, LIP6,UMR7606, F-75005 Paris, France.
EM lom-messan.hillah@lip6.fr; ariele.maesano@simple-eng.com;
   fabio.de-rosa@simple-eng.com; fabrice.kordon@lip6.fr;
   pierre-henri.wuillemin@lip6.fr; riccardo.fontanelli@dedalus.eu;
   sergio.dibona@dedalus.eu; davide.guerri@dedalus.eu;
   libero.maesano@simple-eng.com
OI Wuillemin, Pierre-Henri/0000-0003-3691-4886; Fontanelli,
   Riccardo/0009-0006-7065-5872
FU MIDAS project (EC FP7) - European Commission [318786]
FX This research has been conducted in the context of the MIDAS project (EC
   FP7 Project Number 318786) partially funded by the European Commission.
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], PURPOSEOBJECT ORIENT, V33, P24, DOI [10.1145/1268776, DOI 10.1145/1268776]
   [Anonymous], 2007, WEB SERV BUS PROC EX
   [Anonymous], 2014, 7252 RFC
   Arcaini P., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P388, DOI 10.1109/ASE.2011.6100079
   Askarunisa A., 2011, 2011 International Conference on Recent Trends in Information Technology (ICRTIT 2011), P1215, DOI 10.1109/ICRTIT.2011.5972354
   Athira B., 2010, 2010 International Conference on Computer Information Systems and Industrial Management Applications (CISIM 2010), P438, DOI 10.1109/CISIM.2010.5643499
   Barcelona MA, 2017, INT J SOFTW TOOLS TE, V19, P325, DOI 10.1007/s10009-016-0430-5
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bartolini C, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P326, DOI 10.1109/ICST.2009.28
   Bentakouk L, 2011, LECT NOTES COMPUT SC, V6706, P33, DOI 10.1007/978-3-642-21768-5_4
   Bozkurt M, 2013, SOFTW TEST VERIF REL, V23, P261, DOI 10.1002/stvr.1470
   Chan A., 2009, ENCY DATABASE SYSTEM, P2632
   Ching-Seh Wu, 2012, 2012 IEEE 4th International Conference on Cloud Computing Technology and Science (CloudCom). Proceedings, P349, DOI 10.1109/CloudCom.2012.6427576
   Clarke EM, 1999, MODEL CHECKING, P1
   Clarke EM., 2012, LASER Summer School on Software Engineering, P1, DOI [10.1007/978-3-642-35746-6, 10.1007/978-3-642-35746-6_1, DOI 10.1007/978-3-642-35746-6_1]
   Conforti D, 2014, J HEADACHE PAIN, V15, DOI 10.1186/1129-2377-15-S1-D12
   Console L., 2007, INFORM COMMUNICATION, V4
   Dechter R., 1997, Constraints, V2, P51, DOI 10.1023/A:1009796922698
   DEKLEER J, 1987, ARTIF INTELL, V32, P97, DOI 10.1016/0004-3702(87)90063-4
   Ecma International, 2011, STAND ECMA 262 ECMAS
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Haverbeke M, 2011, NO STARCH PRESS SERI
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Hongbing Wang, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P234, DOI 10.1109/SCC.2010.28
   Jehan S, 2013, 2013 8TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST (AST), P33, DOI 10.1109/IWAST.2013.6595788
   Jensen FV, 2001, AI EDAM, V15, P321, DOI 10.1017/S0890060401154065
   Joshi R, 2003, FORM METHOD SYST DES, V22, P125, DOI 10.1023/A:1022969405325
   Juszczyk L, 2008, IEEE INT C ENG COMP, P131, DOI 10.1109/ICECCS.2008.27
   Kaschner K, 2009, LECT NOTES COMPUT SC, V5472, P66, DOI 10.1007/978-3-642-01247-1_7
   Khinchin A. I., 1957, Mathematical foundations of information theory
   Lamport L., 2009, THEORETICAL ASPECTS
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Lampropoulos L, 2012, ELECTRON PROC THEOR, P3, DOI 10.4204/EPTCS.98.3
   Lin Chen, 2010, 2010 Fifth International Symposium on Service Oriented System Engineering (SOSE 2010), P173, DOI 10.1109/SOSE.2010.27
   Lohmann N, 2010, LECT NOTES COMPUT SC, V6194, P110, DOI 10.1007/978-3-642-14458-5_7
   Madsen AL, 1999, ARTIF INTELL, V113, P203, DOI 10.1016/S0004-3702(99)00062-4
   Maesano A.-P., 2015, THESIS
   Mcburney P, 2011, KNOWL ENG REV, V26, P1, DOI 10.1017/S0269888910000330
   Mei LJ, 2011, J SYST SOFTWARE, V84, P603, DOI 10.1016/j.jss.2010.11.905
   Mirarab S, 2007, LECT NOTES COMPUT SC, V4422, P276
   Namin AkbarSiami., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, FoSER '10, P349
   Newcombe C, 2015, COMMUN ACM, V58, P66, DOI 10.1145/2699417
   Newcombe C, 2014, LECT NOTES COMPUT SC, V8477, P25, DOI 10.1007/978-3-662-43652-3_3
   Newcomer E., 2002, UNDERSTANDING WEB SE
   Newcomer E., 2005, UNDERSTANDING SOA WE
   Newman S., 2015, BUILDING MICROSERVIC
   Nguyen C. D., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P357, DOI 10.1109/ICSTW.2011.50
   OASIS, 2014, MQTT Version 3.1.1
   OMG, UML TEST PROF VERS 1
   Oracle, 2016, AUT TEST SOA COMP AP
   Pautasso C, 2011, REST: FROM RESEARCH TO PRACTICE, P1, DOI 10.1007/978-1-4419-8303-9_0
   Pearl J., 1988, PROBABILISTIC REASON
   Perera C., 2013, ARXIV13078198 CORR
   Pezzè M, 2014, ADV COMPUT, V95, P1, DOI 10.1016/B978-0-12-800160-8.00001-2
   Rees K, 2001, QUAL RELIAB ENG INT, V17, P191, DOI 10.1002/qre.411
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Schnoebelen P., 2002, Advances in Modal Logic, V4, P393
   Shamsoddin-Motlagh E., 2012, ARXIV12123248
   Skaanning C, 2000, LECT NOTES ARTIF INT, V1821, P367
   Stokkink G, 2012, ELECTRON PROC THEOR, P73, DOI 10.4204/EPTCS.80.6
   Thomas E., 2005, SERVICE ORIENTED ARC
   Tien-Dung Cao, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P363, DOI 10.1109/ICST.2010.11
   Tsai WT, 2005, P INT COMP SOFTW APP, P101
   Web Hypertext Application Technology Working Group (WHATWG), 2016, WEB SOCK HTML LIV ST
   Wooff DA, 2002, IEEE T SOFTWARE ENG, V28, P510, DOI 10.1109/TSE.2002.1000453
   Wotawa F, 2013, IEEE ICST WORKSHOP, P154, DOI 10.1109/ICSTW.2013.26
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 69
TC 7
Z9 7
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2017
VL 19
IS 3
BP 281
EP 308
DI 10.1007/s10009-016-0440-3
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EU4DY
UT WOS:000400981200002
DA 2024-07-18
ER

PT J
AU Ménager, H
   Kalas, M
   Rapacki, K
   Ison, J
AF Menager, Herve
   Kalas, Matus
   Rapacki, Kristoffer
   Ison, Jon
TI Using registries to integrate bioinformatics tools and services into
   workbench environments
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Bioinformatics; Service registry; Service integration
ID WEB-SERVICES; DESK-TOP; WORKFLOWS; SOFTWARE; EMBOSS; GALAXY; INTERFACE;
   PLATFORM; SUITE
AB The diversity and complexity of bioinformatics resources presents significant challenges to their localisation, deployment and use, creating a need for reliable systems that address these issues. Meanwhile, users demand increasingly usable and integrated ways to access and analyse data, especially within convenient, integrated "workbench" environments. Resource descriptions are the core element of registry and workbench systems, which are used to both help the user find and comprehend available software tools, data resources, and Web Services, and to localise, execute and combine them. The descriptions are, however, hard and expensive to create and maintain, because they are volatile and require an exhaustive knowledge of the described resource, its applicability to biological research, and the data model and syntax used to describe it. We present here the Workbench Integration Enabler, a software component that will ease the integration of bioinformatics resources in a workbench environment, using their description provided by the existing ELIXIR Tools and Data Services Registry.
C1 [Menager, Herve] Inst Pasteur, Ctr Bioinformat Biostat & Integrat Biol, Paris, France.
   [Kalas, Matus] Univ Bergen, Dept Informat, Computat Biol Unit, Bergen, Norway.
   [Rapacki, Kristoffer; Ison, Jon] Tech Univ Denmark, Dept Syst Biol, Ctr Biol Sequence Anal, Bldg 208, DK-2800 Lyngby, Denmark.
C3 Pasteur Network; Universite Paris Cite; Institut Pasteur Paris;
   University of Bergen; Technical University of Denmark
RP Ménager, H (corresponding author), Inst Pasteur, Ctr Bioinformat Biostat & Integrat Biol, Paris, France.
EM hmenager@pasteur.fr; matus.kalas@uib.no; rapacki@cbs.dtu.dk;
   jison@cbs.dtu.dk
RI Ménager, Hervé/I-2258-2019; Kalaš, Matúš/AAM-3730-2021
OI Ménager, Hervé/0000-0002-7552-1009; Kalaš, Matúš/0000-0002-1509-4981;
   Ison, Jon/0000-0001-6666-1520
FU ELIXIR
FX This work was partly funded by ELIXIR, the research infrastructure for
   life-science data. Herve Menager wishes to thank Bertrand Neron, Fabien
   Mareuil and Olivia Doppelt-Azeroual for their insights on the
   maintenance of wrappers for workbench systems.
CR Bhagat J, 2010, NUCLEIC ACIDS RES, V38, pW689, DOI 10.1093/nar/gkq394
   Blankenberg D, 2014, GENOME BIOL, V15, DOI 10.1186/gb4161
   Blankenberg Daniel, 2010, Curr Protoc Mol Biol, VChapter 19, DOI 10.1002/0471142727.mb1910s89
   Carrere S, 2006, BIOINFORMATICS, V22, P900, DOI 10.1093/bioinformatics/btl001
   Carver T, 2003, BIOINFORMATICS, V19, P1837, DOI 10.1093/bioinformatics/btg251
   Cock PJA, 2013, PEERJ, V1, DOI 10.7717/peerj.167
   Crosswell LC, 2012, TRENDS BIOTECHNOL, V30, P241, DOI 10.1016/j.tibtech.2012.02.002
   Giardine B, 2005, GENOME RES, V15, P1451, DOI 10.1101/gr.4086505
   Glatard T, 2008, INT J HIGH PERFORM C, V22, P347, DOI 10.1177/1094342008096067
   Ison J, 2013, BIOINFORMATICS, V29, P1325, DOI 10.1093/bioinformatics/btt113
   Kearse M, 2012, BIOINFORMATICS, V28, P1647, DOI 10.1093/bioinformatics/bts199
   Krabbenhöft HN, 2008, BIOINFORMATICS, V24, P1221, DOI 10.1093/bioinformatics/btn095
   Lamprecht A.L., 2009, PROCEEDINGS OF THE W
   Lamprecht Anna-Lena, 2011, J Biomed Semantics, V2 Suppl 1, pS5, DOI 10.1186/2041-1480-2-S1-S5
   Menager H., 2012, RESOURCE DISCOVERY, P11
   Néron B, 2009, BIOINFORMATICS, V25, P3005, DOI 10.1093/bioinformatics/btp493
   Okonechnikov K, 2012, BIOINFORMATICS, V28, P1166, DOI 10.1093/bioinformatics/bts091
   Pettifer S, 2010, NUCLEIC ACIDS RES, V38, pW683, DOI 10.1093/nar/gkq297
   Reich M, 2006, NAT GENET, V38, P500, DOI 10.1038/ng0506-500
   Rice P, 2000, TRENDS GENET, V16, P276, DOI 10.1016/S0168-9525(00)02024-2
   Sarachu M, 2005, BIOINFORMATICS, V21, P540, DOI 10.1093/bioinformatics/bti031
   Senger M., 2008, BIOINFORMATICS OPEN, V8
   Senger M., 2003, P UK E SCI ALL HANDS, V18, P509
   Tatum Z., 2011, P 4 INT WORKSH SEM W, P114
   Wilkinson Mark D, 2002, Brief Bioinform, V3, P331, DOI 10.1093/bib/3.4.331
   Wolstencroft K, 2013, NUCLEIC ACIDS RES, V41, pW557, DOI 10.1093/nar/gkt328
NR 26
TC 2
Z9 2
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2016
VL 18
IS 6
BP 581
EP 586
DI 10.1007/s10009-015-0392-z
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DY5YK
UT WOS:000385180700002
OA hybrid
DA 2024-07-18
ER

PT J
AU Lopes, NP
   Monteiro, J
AF Lopes, Nuno P.
   Monteiro, Jose
TI Automatic equivalence checking of programs with uninterpreted functions
   and integer arithmetic
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 20th International SPIN Symposium on Model Checking of Software
CY JUL 08-09, 2013
CL Stony Brook, NY
SP SPIN
DE Program equivalence; Automatic verification; Compiler optimizations
ID INTERPOLATION; TRANSLATION; VALIDATION
AB Proving equivalence of programs has several important applications, including algorithm recognition, regression checking, compiler optimization verification and validation, and information flow checking. Despite being a topic with so many important applications, program equivalence checking has seen little advances over the past decades due to its inherent (high) complexity. In this paper, we propose, to the best of our knowledge, the first semi-algorithm for the automatic verification of partial equivalence of two programs over the combined theory of uninterpreted function symbols and integer arithmetic (UF+IA). The proposed algorithm supports, in particular, programs with nested loops. The crux of the technique is a transformation of uninterpreted functions (UFs) applications into integer polynomials, which enables the precise summarization of loops with UF applications using recurrences. The equivalence checking algorithm then proceeds on loop-free, integer only programs. We implemented the proposed technique in CORK, a tool that automatically verifies the correctness of compiler optimizations, and we show that it can prove more optimizations correct than state-of-the-art techniques.
C1 [Lopes, Nuno P.; Monteiro, Jose] Univ Lisbon, Inst Super Tecn, INESC ID, Lisbon, Portugal.
C3 Universidade de Lisboa; INESC-ID
RP Lopes, NP (corresponding author), Univ Lisbon, Inst Super Tecn, INESC ID, Lisbon, Portugal.
EM nuno.lopes@ist.utl.pt
RI Monteiro, Jose/R-5675-2019; Lopes, Nuno/I-5898-2012
OI Monteiro, Jose/0000-0003-0603-2268; Lopes, Nuno/0000-0002-3160-1672
CR Albarghouthi A., 2012, P 24 INT C COMP AID
   Alias C., 2003, P 2 INT WORKSH COMP
   [Anonymous], 2013, Tech. Rep. MSR-TR-2013-6
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Ball T., 2002, P 29 ACM SIGPLAN SIG
   Barthe G., 2011, P 17 INT C FORM METH
   Barthe Gilles, 2004, P 17 IEEE WORKSH COM
   Barthou D., 2002, P 8 INT EUR C PAR PR
   Benton N., 2004, P 31 ACM SIGPLAN SIG
   Bertot Y., 2004, TEXT THEORET COMP S
   Beyer D., 2011, P 23 INT C COMP AID
   Beyer D., 2007, P 8 INT C VER MOD CH
   Blanc R., 2010, P 16 INT C LOG PROGR
   Bozga M., 2010, P 22 INT C COMP AID
   Cachera D., 2012, P 19 INT C STAT AN
   Cadar C., 2008, Proc. USENIX OSDI
   Cahen P.-J., 1997, American Mathematical Society Surveys and Monographs, V48
   Cahen PJ, 2000, J ALGEBRA, V225, P794, DOI 10.1006/jabr.1999.8151
   Caniart N., 2008, P THEOR PRACT SOFTW
   Chaki S., 2012, P 13 INT C VER MOD C
   Cousot P., 1978, P 5 ACM SIGACT SIGPL
   Dai L., 2013, P 25 INT C COMP AID
   De Moura L, 2008, 14 INT C TOOLS ALG C
   Dissegna S, 2014, P 41 ACM SIGPLAN SIG
   Frisch S, 1999, J ALGEBRA, V211, P562, DOI 10.1006/jabr.1998.7741
   Gasca M, 2000, J COMPUT APPL MATH, V122, P23, DOI 10.1016/S0377-0427(00)00353-8
   Godlin B., 2009, P 46 ANN DES AUT C
   Godlin B, 2008, ACTA INFORM, V45, P403, DOI 10.1007/s00236-008-0075-2
   Goldberg B, 2005, ELECTRON NOTES THEOR, V132, P53, DOI 10.1016/j.entcs.2005.01.030
   Gonnord L, 2014, SCI COMPUT PROGRAM, V93, P125, DOI 10.1016/j.scico.2013.09.016
   Grebenshchikov S., 2012, P 33 ACM SIGPLAN C P
   Gulwani S., 2006, P 15 EUR C PROGR LAN
   Gulwani S., 2009, P 10 INT C PRED ABST
   Gulwani S., 2009, P 36 ANN ACM SIGPLAN
   Guo S. -Y., 2011, P 38 ANN ACM SIGPLAN
   Gupta A., 2011, P 9 AS C PROGR LANG
   Hawblitzel C., 2013, P 24 INT C AUT DED
   HENZINGER T. A., 2002, P 29 ACM SIGPLAN SIG
   Henzinger T. A., 2004, P 31 ACM SIGPLAN SIG
   Hojjat H., 2012, P 10 INT C AUT TECHN
   Jhala R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592438
   Kundu S., 2009, P 2009 ACM SIGPLAN C
   Lahiri Shuvendu K., 2012, INT C COMP AID VER C, DOI [10.1007/978-3-642-31424-7_54, DOI 10.1007/978-3-642-31424-7_54]
   Le V., 2014, P 35 ACM SIGPLAN C P
   Leroy X, 2009, COMMUN ACM, V52, P107, DOI 10.1145/1538788.1538814
   Li Y., 2014, P 41 ACM SIGPLAN SIG
   Liang H., 2012, P 39 ANN ACM SIGPLAN
   Lopes N. P., 2013, P 20 INT SPIN S MOD
   Lopes N. P., 2014, P 15 INT C VER MOD C
   Matsumoto T., 2006, P 7 INT S QUAL EL DE
   McMillan K. L., 2011, P INT C FORM METH CO
   Muchnick S., 1997, ADV COMPILER DESIGN
   Müller-Olm M, 2004, INFORM PROCESS LETT, V91, P233, DOI 10.1016/j.ipl.2004.05.004
   Namjoshi K. S., 2013, P 20 INT C STAT AN
   Necula G. C., 2000, P ACM SIGPLAN 2000 C
   Olver PJ, 2006, STUD APPL MATH, V116, P201, DOI 10.1111/j.1467-9590.2006.00335.x
   Person S, 2008, P 16 ACM SIGSOFT INT
   Pnueli Amir, 1998, P 4 INT C TOOLS ALG
   Ramos David A., 2011, P 23 INT C COMP AID
   Rodríguez-Carbonell E, 2007, J SYMB COMPUT, V42, P443, DOI 10.1016/j.jsc.2007.01.002
   Rybalchenko A., 2007, P 8 INT C VER MOD CH
   Sangiorgi D, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1516507.1516510
   Sankaranarayanan S., 2004, P 31 ACM SIGPLAN SIG
   Sharma R., 2011, P 23 INT C COMP AID
   Shashidhar K. C., 2005, P 14 INT C COMP CONS
   Stepp M., 2011, P 23 INT C COMP AID
   Strang G., 2006, Linear Algebra and Its Applications, V4th edn.
   Tatlock Z., 2010, P 2010 ACM SIGPLAN C
   Terauchi T., 2005, P 12 INT C STAT AN
   Tristan J.-B., 2011, P 32 ACM SIGPLAN C P
   Verdoolaege S., 2009, P 21 INT C COMP AID
   Yang Xuejun, 2011, P 32 ACM SIGPLAN C P
   Zaks A., 2008, P 15 INT S FORM METH
   Zhao J., 2013, P 34 ACM SIGPLAN C P
   Zuck L, 2005, FORM METHOD SYST DES, V27, P335, DOI 10.1007/s10703-005-3402-z
NR 75
TC 16
Z9 16
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2016
VL 18
IS 4
BP 359
EP 374
DI 10.1007/s10009-015-0366-1
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DR2AV
UT WOS:000379708300002
DA 2024-07-18
ER

PT J
AU David, A
   Larsen, KG
   Legay, A
   Nyman, U
   Traonouez, LM
   Wasowski, A
AF David, Alexandre
   Larsen, Kim G.
   Legay, Axel
   Nyman, Ulrik
   Traonouez, Louis-Marie
   Wasowski, Andrzej
TI Real-time specifications
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Real-time systems; Stepwise-refinement; Compositional verification;
   Timed I/O automata
ID SYMBOLIC MODEL CHECKING; SYSTEMS; DESIGN; TOOL
AB Aspecification theory combines notions of specifications and implementations with a satisfaction relation, a refinement relation, and a set of operators supporting stepwise design. We develop a specification framework for real-time systems using Timed I/O Automata as the specification formalism, with the semantics expressed in terms of Timed I/O Transition Systems. We provide constructs for refinement, consistency checking, logical and structural composition, and quotient of specifications-all indispensable ingredients of a compositional design methodology. The theory is implemented in the new tool ECDAR. We present symbolic versions of the algorithms used in ECDAR, and demonstrate the use of the tool using a small case study in compositional verification.
C1 [David, Alexandre; Larsen, Kim G.; Nyman, Ulrik] Aalborg Univ, Comp Sci, Aalborg, Denmark.
   [Legay, Axel; Traonouez, Louis-Marie] INRIA IRISA, Rennes, France.
   [Wasowski, Andrzej] IT Univ Copenhagen, Copenhagen, Denmark.
C3 Aalborg University; Universite de Rennes; IT University Copenhagen
RP Legay, A (corresponding author), INRIA IRISA, Rennes, France.
EM adavid@cs.aau.dk; kgl@cs.aau.dk; axel.legay@inria.fr; ulrik@cs.aau.dk;
   louis-marie.traonouez@inria.fr; wasowski@itu.dk
OI Nyman, Ulrik/0000-0001-6430-540X; Guldstrand Larsen,
   Kim/0000-0002-5953-3384; Wasowski, Andrzej/0000-0003-0532-2685
CR Abdellatif T., 2010, Proceedings of the tenth ACM international conference on Embedded software, P229
   Adler BT, 2006, LECT NOTES COMPUT SC, V4144, P59, DOI 10.1007/11817963_8
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1998, LNCS
   Amnell T, 2003, LECT NOTES COMPUT SC, V2791, P60
   Andrade L. F., 2001, P 38 INT C TECHN OBJ, P182
   [Anonymous], LNCS
   [Anonymous], 1988, MITLCSTM373
   Antonik A, 2010, MATH STRUCT COMP SCI, V20, P75, DOI 10.1017/S0960129509990260
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bauert SS, 2012, MATH STRUCT COMP SCI, V22, P581, DOI 10.1017/S0960129511000697
   Behrmann G., 2007, CAV, V4590
   Behrmann G, 2011, SOFTWARE PRACT EXPER, V41, P133, DOI 10.1002/spe.1006
   Berendsen J., 2008, LNCS, V5215
   Bertrand N., 2009, LNCS
   Bourke T., 2008, EMSOFT, P59
   Bulychev P, 2009, LECT NOTES COMPUT SC, V5813, P73, DOI 10.1007/978-3-642-04368-0_8
   Caillaud Benoit, 2010, Proceedings of the 2010 Seventh International Conference on the Quantitative Evaluation of Systems (QEST 2010), P123, DOI 10.1109/QEST.2010.23
   Cassez F., 2005, CONCUR
   Cassez F, 2007, LECT NOTES COMPUT SC, V4762, P192
   Cerans K., 1993, Computer Aided Verification. 5th International Conference, CAV '93 Proceedings, P253
   Chakabarti A., 2003, EMSOFT 03
   Chakrabarti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P414
   Clarke EM, 1999, MODEL CHECKING, P1
   David Alexandre, 2012, International Journal on Software Tools for Technology Transfer, V14, P703, DOI 10.1007/s10009-012-0237-y
   David Alexandre, 2009, Proceedings of Formal Methods for Components and Objects. 8th International Symposium (FMCO 2009). Revised Selected Papers, P290, DOI 10.1007/978-3-642-17071-3_15
   David A, 2010, LECT NOTES COMPUT SC, V6252, P365
   David A, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P91
   de Alfaro L, 2005, LECT NOTES COMPUT SC, V3717, P81
   de Alfaro L, 2003, LECT NOTES COMPUT SC, V2761, P144
   De Alfaro L, 2002, LECT NOTES COMPUT SC, V2491, P108
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   de Alfaro L., 2001, CONCUR 2001 - Concurrency Theory. 12th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2154), P536
   de Alfaro L., 2003, LNCS, V2772
   De Alfaro Luca, 2004, ENG THEORIES SOFTWAR
   De Wulf M, 2008, FORM METHOD SYST DES, V33, P45, DOI 10.1007/s10703-008-0056-7
   Delahaye B, 2011, LECT NOTES COMPUT SC, V6538, P324, DOI 10.1007/978-3-642-18275-4_23
   DENICOLA R, 1995, THEOR COMPUT SCI, V138, P391, DOI 10.1016/0304-3975(95)92307-J
   Faella M., 2007, CAV, V4590
   Fiadeiro J. L., 1995, SIGSOFT Software Engineering Notes, V20, P72, DOI 10.1145/222132.222141
   Garland S. J., 1998, TECHNICAL REPORT
   HENZINGER TA, 1992, LECT NOTES COMPUT SC, V600, P226, DOI 10.1007/BFb0031995
   Henzinger TA, 2006, PROCEEDINGS OF THE 12TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, P253
   Henzinger TA, 2006, LECT NOTES COMPUT SC, V4085, P1
   Kaynar, 2010, SYNTHESIS LECT DISTR
   Kwiatkowska M, 2004, LECT NOTES COMPUT SC, V3253, P293
   Kwiatkowska M, 2007, INFORM COMPUT, V205, P1027, DOI 10.1016/j.ic.2007.01.004
   Larsen K. G., 1995, Fundamentals of Computation Theory. 10th International Conference, FCT'95. Proceedings, P62
   Larsen K. G., 2011, LNCS, V6919
   LARSEN KG, 1990, LECT NOTES COMPUT SC, V407, P232
   Lynch N, 1988, 22 ANN C INF SCI SYS, P29
   Maler O., 1995, STACS 95. 12th Annual Symposium on Theoretical Aspects of Computer Science. Proceedings, P229
   Nyman U, 2007, LECT NOTES COMPUT SC, V4421, P64
   Post A, 2011, LECT NOTES COMPUT SC, V6603, P34, DOI 10.1007/978-3-642-19811-3_4
   Raclet J.-B., CONTRACTS DESIGN E 1
   Robin M., 1988, COMMUNICATION CONCUR
   Stark E.W., 2003, LNCS, V2761, P189
   Sun J, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430537
   Sun J, 2008, COMM COM INF SC, V17, P307
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Traonouez LM, 2012, ELECTRON PROC THEOR, P17, DOI 10.4204/EPTCS.87.3
   Vaandrager F. W., 1991, Proceedings of Sixth Annual IEEE Symposium on Logic in Computer Science (Cat. No.91CH3025-4), P387, DOI 10.1109/LICS.1991.151662
   Wang Yi, 1990, CONCUR '90. Theories of Concurrency: Unification and Extension, P502, DOI 10.1007/BFb0039080
NR 63
TC 21
Z9 21
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2015
VL 17
IS 1
BP 17
EP 45
DI 10.1007/s10009-013-0286-x
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ7ND
UT WOS:000355681700002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU James, P
   Moller, F
   Nguyen, HN
   Roggenbach, M
   Schneider, S
   Treharne, H
AF James, Phillip
   Moller, Faron
   Hoang Nga Nguyen
   Roggenbach, Markus
   Schneider, Steve
   Treharne, Helen
TI Techniques for modelling and verifying railway interlockings
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Railway verification; CSP; B; Model checking; Safety
ID VERIFICATION
AB We describe a novel framework for modelling railway interlockings which has been developed in conjunction with railway engineers. The modelling language used is CSP parallel to B. Beyond the modelling we present a variety of abstraction techniques which make the analysis of medium-to large-scale networks feasible. The paper notably introduces a covering technique that allows railway scheme plans to be decomposed into a set of smaller scheme plans. The finitisation and topological abstraction techniques are extended from previous work and are given formal foundations. All three techniques are applicable to other modelling frameworks besides CSP parallel to B. Being able to apply abstractions and simplifications on the domain model before performing model checking is the key strength of our approach. We demonstrate the use of the framework on a real-life, medium-size scheme plan.
C1 [James, Phillip; Moller, Faron; Hoang Nga Nguyen; Roggenbach, Markus] Swansea Univ, Swansea, W Glam, Wales.
   [Schneider, Steve; Treharne, Helen] Univ Surrey, Guildford GU2 5XH, Surrey, England.
C3 Swansea University; University of Surrey
RP Treharne, H (corresponding author), Univ Surrey, Guildford GU2 5XH, Surrey, England.
EM h.treharne@surrey.ac.uk
OI Schneider, Steve/0000-0001-8365-6993; Roggenbach,
   Markus/0000-0002-3819-2787; Moller, Faron/0000-0001-9535-8053; NGUYEN,
   HOANG NGA/0000-0003-0260-1697; Treharne, Helen/0000-0003-1835-4803;
   James, Phillip/0000-0002-4307-649X
FU EPSRC [EP/I010807/1] Funding Source: UKRI
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J.-R., 2010, MODELING EVENT B
   [Anonymous], 2013, PROB ANIMATOR MODEL
   Antoni M., 2011, 3 INT WORKSH DEP CON, pix
   Bjorner D., 2003, CTS
   Cimatti Alessandro, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P378, DOI 10.1007/978-3-642-31424-7_29
   Fantechi Alessandro, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P383, DOI 10.1007/978-3-642-24270-0_28
   Ferrari A, 2011, FORMS/FORMAT 2010: FORMAL METHODS FOR AUTOMATION AND SAFETY IN RAILWAY AND AUTOMOTIVE SYSTEMS, P107, DOI 10.1007/978-3-642-14261-1_11
   Fowler M., 2010, Domain-specific languages
   Haxthausen Anne E., 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P261, DOI 10.1007/978-3-642-34032-1_25
   Haxthausen AE, 2000, IEEE T SOFTWARE ENG, V26, P687, DOI 10.1109/32.879808
   Hoare CAR., 1985, Communicating Sequential Processes
   Isobe Yoshinao, 2012, Integrated Formal Methods. Proceedings 9th International Conference, IFM 2012, P54, DOI 10.1007/978-3-642-30729-4_5
   Jacquart R., 2004, IFIP 18 WORLD COMPUT
   James P., 2013, P NFM 13 5 NASA FORM
   James P., LNCS IN PRESS
   James P., 2010, ECEASST, V35
   James P., 2013, CS1303 U SURR DEP CO
   Kanso K, 2009, ELECTRON NOTES THEOR, V250, P19, DOI 10.1016/j.entcs.2009.08.015
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Leuschel M, 2011, FORM ASP COMPUT, V23, P683, DOI 10.1007/s00165-010-0172-1
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Moller F., 2013, TECHNICAL REPORT
   Moller F., 2012, ELECT COMMUN EASST, V53, P15
   Moller F., 2012, CS1202 U SURR
   Moller F., 2012, P IFM 12 ABZ 2012 PO, P31
   Moller F., 2012, P HVC 12 8 HAIF VER, P16
   Morgan C., 1990, BEAUTY IS OUR BUSINE, P319, DOI DOI 10.1007/978-1-4612-4476-9_37
   Morley MatthewJ., 1993, 6 INT WORKSHOP HOLTP, P464
   NOCK O.S., 1980, RAILWAY SIGNALLING
   Sabatier Denis, 2012, Abstract State Machines, Alloy, B, VDM, and Z. Proceedings Third International Conference, ABZ 2012, P369, DOI 10.1007/978-3-642-30885-7_34
   Schneider S, 2005, FORM ASP COMPUT, V17, P390, DOI 10.1007/s00165-005-0076-7
   Simpson A, 1997, SPR S DISC MATH, P223
   UIC: The International Union of Railways, 2013, INT UN RAILW ETCS RE
   Winter K., 2003, P 26 AUSTR COMP SCI, V16, P309
   Winter K., 2002, AUST COMPUT SCI COMM, V24
NR 36
TC 29
Z9 29
U1 0
U2 6
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2014
VL 16
IS 6
BP 685
EP 711
DI 10.1007/s10009-014-0304-7
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HV
UT WOS:000209673400004
DA 2024-07-18
ER

PT J
AU Gros, TP
   Hermanns, H
   Hoffmann, J
   Klauck, M
   Steinmetz, M
AF Gros, Timo P. P.
   Hermanns, Holger
   Hoffmann, Joerg
   Klauck, Michaela
   Steinmetz, Marcel
TI Analyzing neural network behavior through deep statistical model
   checking
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Statistical model checking; Neural networks; Learning; Verification;
   Scalability
ID REINFORCEMENT; VERIFICATION; SUM
AB Neural networks (NN) are taking over ever more decisions thus far taken by humans, even though verifiable system-level guarantees are far out of reach. Neither is the verification technology available, nor is it even understood what a formal, meaningful, extensible, and scalable testbed might look like for such a technology. The present paper is an attempt to improve on both the above aspects. We present a family of formal models that contain basic features of automated decision-making contexts and which can be extended with further orthogonal features, ultimately encompassing the scope of autonomous driving. Due to the possibility to model random noise in the decision actuation, each model instance induces a Markov decision process (MDP) as verification object. The NN in this context has the duty to actuate (near-optimal) decisions. From the verification perspective, the externally learnt NN serves as a determinizer of the MDP, the result being a Markov chain which as such is amenable to statistical model checking. The combination of an MDP and an NN encoding the action policy is central to what we call "deep statistical model checking " (DSMC). While being a straightforward extension of statistical model checking, it enables to gain deep insight into questions like "how high is the NN-induced safety risk? ", "how good is the NN compared to the optimal policy? " (obtained by model checking the MDP), or "does further training improve the NN? ". We report on an implementation of DSMC inside the ModestToolset in combination with externally learnt NNs, demonstrating the potential of DSMC on various instances of the model family, and illustrating its scalability as a function of instance size as well as other factors like the degree of NN training.
C1 [Gros, Timo P. P.; Hermanns, Holger; Hoffmann, Joerg; Klauck, Michaela; Steinmetz, Marcel] Saarland Univ, Saarland Informat Campus, Saarbrucken, Germany.
C3 Saarland University
RP Klauck, M (corresponding author), Saarland Univ, Saarland Informat Campus, Saarbrucken, Germany.
EM timopgros@cs.uni-saarland.de; hermanns@cs.uni-saarland.de;
   hoffmann@cs.uni-saarland.de; klauck@cs.uni-saarland.de;
   steinmetz@cs.uni-saarland.de
OI Hermanns, Holger/0000-0002-2766-9615
FU Projekt DEAL; ERC [695614]; German Research Foundation (DFG)
   [389792660]; Key-Area Research and Development Program of Guangdong
   Province [2018B010107004]; European Regional Development Fund (ERDF)
FX Open Access funding enabled and organized by Projekt DEAL. This work was
   partially supported by the ERC Advanced Investigators Grant 695614
   (POWVER), by the German Research Foundation (DFG) under Grant No.
   389792660, as part of TRR 248 - CPEC,
   seehttps://perspicuous-computing.science, by the Key-Area Research and
   Development Program Grant 2018B010107004 of Guangdong Province, and by
   the European Regional Development Fund (ERDF).
CR Agostinelli F, 2019, NAT MACH INTELL, V1, P356, DOI 10.1038/s42256-019-0070-z
   Akintunde ME, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P184
   Akintunde ME, 2019, AAAI CONF ARTIF INTE, P6006
   Alamdari Par Alizadeh, 2020, 2020 Formal Methods in Computer Aided Design (FMCAD), P138, DOI 10.34727/2020/isbn.978-3-85448-042-6_21
   [Anonymous], 1994, Neural networks and statistical models, DOI 10.1016/j.eswa.2007.10.005
   Ashok P, 2019, LECT NOTES COMPUT SC, V11785, P147, DOI 10.1007/978-3-030-30281-8_9
   Avni G, 2019, LECT NOTES COMPUT SC, V11561, P630, DOI 10.1007/978-3-030-25540-4_36
   Baier Christel, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Verification. Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12476), P240, DOI 10.1007/978-3-030-61362-4_13
   Baier C., 2020, P 1 TAILOR WORKSHOP
   BARTO AG, 1995, ARTIF INTELL, V72, P81, DOI 10.1016/0004-3702(94)00011-O
   Bogdoll J, 2011, LECT NOTES COMPUT SC, V6722, P59, DOI 10.1007/978-3-642-21461-5_4
   Bonet B., 2003, Proceedings, Thirteenth International Conference on Automated Planning and Scheduling, P12
   Brendan McMahan H., 2005, INT C AUT PLANN SCHE, P151
   BUCHHOLZ P, 1994, J APPL PROBAB, V31, P59, DOI 10.2307/3215235
   Budde CE, 2018, LECT NOTES COMPUT SC, V10806, P340, DOI 10.1007/978-3-319-89963-3_20
   Budde CE, 2017, LECT NOTES COMPUT SC, V10206, P151, DOI 10.1007/978-3-662-54580-5_9
   Carr S, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5532
   Christakis M, 2021, LECT NOTES COMPUT SC, V12759, P201, DOI 10.1007/978-3-030-81685-8_9
   Croce F, 2019, PR MACH LEARN RES, V89
   D'Argenio PR, 2016, LECT NOTES COMPUT SC, V9681, P99, DOI 10.1007/978-3-319-33693-0_7
   David Alexandre, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P206, DOI 10.1007/978-3-662-46681-0_16
   David Alexandre, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P349, DOI 10.1007/978-3-642-22110-1_27
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Ehlers R, 2017, LECT NOTES COMPUT SC, V10482, P269, DOI 10.1007/978-3-319-68167-2_19
   GARDNER M, 1973, SCI AM, V229, P118, DOI 10.1038/scientificamerican1273-118
   Gardner MW, 1998, ATMOS ENVIRON, V32, P2627, DOI 10.1016/S1352-2310(97)00447-0
   Gehr T, 2018, P IEEE S SECUR PRIV, P3, DOI 10.1109/SP.2018.00058
   Gros T.P., 2021, THESIS SAARLAND U
   Gros T.P., 2020, P 9 INT S LEVERAGING
   Gros TP, 2022, LECT NOTES COMPUT SC, V13372, P430, DOI 10.1007/978-3-031-13188-2_21
   Gros TP, 2020, LECT NOTES COMPUT SC, V12136, P96, DOI 10.1007/978-3-030-50086-3_6
   Gros TP, 2021, LECT NOTES COMPUT SC, V12846, P197, DOI 10.1007/978-3-030-85172-9_11
   Gros TP, 2020, LECT NOTES COMPUT SC, V12289, P11, DOI 10.1007/978-3-030-59854-9_2
   Gross D., 2022, 26 INT C INFORM VISU
   Haesaert S, 2018, IFAC PAPERSONLINE, V51, P73, DOI 10.1016/j.ifacol.2018.08.013
   Hahn EM, 2014, LECT NOTES COMPUT SC, V8442, P312, DOI 10.1007/978-3-319-06410-9_22
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hartmanns A., 2015, THESIS SAARLAND U GE
   Hartmanns A, 2019, LECT NOTES COMPUT SC, V11427, P344, DOI 10.1007/978-3-030-17462-0_20
   Hartmanns Arnd, 2014, LNCS, V8413, P593
   Hasanbeig M., 2018, ARXIV
   Hausknecht Matthew, 2015, AAAI fall Symp. Series
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   Hinton G, 2012, IEEE SIGNAL PROC MAG, V29, P82, DOI 10.1109/MSP.2012.2205597
   HORNIK K, 1989, NEURAL NETWORKS, V2, P359, DOI 10.1016/0893-6080(89)90020-8
   Huang XW, 2017, LECT NOTES COMPUT SC, V10426, P3, DOI 10.1007/978-3-319-63387-9_1
   Jaeger M, 2019, LECT NOTES COMPUT SC, V11781, P81, DOI 10.1007/978-3-030-31784-3_5
   Junges S, 2016, LECT NOTES COMPUT SC, V9636, P130, DOI 10.1007/978-3-662-49674-9_8
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Klauck M, 2018, P I C AUTOMAT PLAN S, P150
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2007, LECT NOTES COMPUT SC, V4486, P220
   LARSEN KG, 1991, INFORM COMPUT, V94, P1, DOI 10.1016/0890-5401(91)90030-6
   Legay A, 2015, LECT NOTES COMPUT SC, V8938, P350, DOI 10.1007/978-3-319-15201-1_23
   Legay Axel, 2019, Computing and software science: state of the art and perspectives, P478
   Li JL, 2019, LECT NOTES COMPUT SC, V11822, P296, DOI 10.1007/978-3-030-32304-2_15
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   OKAMOTO M, 1958, ANN I STAT MATH, V10, P29
   Parker DA, 2003, THESIS U BIRMINGHAM
   Pineda L. E., 2013, 23 INT JOINT C ART I, P2350
   Pineda L, 2014, P I C AUTOMAT PLAN S, P217
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   Schilling C, 2022, AAAI CONF ARTIF INTE, P8169
   Silver D, 2018, SCIENCE, V362, P1140, DOI 10.1126/science.aar6404
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   The JANI specification, US
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   Wicker M, 2018, LECT NOTES COMPUT SC, V10805, P408, DOI 10.1007/978-3-319-89960-2_22
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
NR 70
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2023
VL 25
IS 3
BP 407
EP 426
DI 10.1007/s10009-022-00685-9
EA DEC 2022
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S0IX8
UT WOS:000898636800001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Lowe, G
AF Lowe, Gavin
TI Parameterized verification of systems with component identities, using
   view abstraction
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Parameterized verification; Model checking; Component identities; View
   abstraction; Symmetry; Concurrent datatypes
ID MODEL; SYMMETRY; LINEARIZABILITY; INFINITE; CHECKER
AB The parameterized verification problem seeks to verify all members of some collection of systems. We consider the parameterized verification problem applied to systems that are composed of an arbitrary number of component processes, together with some fixed processes. The components are taken from one or more families, each family representing one role in the system; all components within a family are symmetric to one another. Processes communicate via synchronous message passing. In particular, each component process has an identity, which may be included in messages, and passed to third parties. We extend Abdulla et al.'s technique of view abstraction, together with techniques based on symmetry reduction, to this setting. We give an algorithm and implementation that allows such systems to be verified for an arbitrary number of components: we do this for both safety and deadlock-freedom properties. We apply the techniques to a number of examples. We can model both active components, such as threads, and passive components, such as nodes in a linked list: thus our approach allows the verification of unbounded concurrent datatypes operated on by an unbounded number of threads. We show how to combine view abstraction with additional techniques in order to deal with other potentially infinite aspects of the analysis: for example, we deal with potentially infinite specifications, such as a datatype being a queue; and we deal with unbounded types of data stored in a datatype.
C1 [Lowe, Gavin] Univ Oxford, Dept Comp Sci, Oxford, England.
C3 University of Oxford
RP Lowe, G (corresponding author), Univ Oxford, Dept Comp Sci, Oxford, England.
EM gavin.lowe@cs.ox.ac.uk
CR Abdulla Parosh Aziz, 2018, Programming Languages and Systems. 27th European Symposium on Programming, ESOP 2018, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2018. Proceedings: LNCS 10801, P442, DOI 10.1007/978-3-319-89884-1_16
   Abdulla P. A., 2002, CONCUR 2002 - Concurrency Theory. 13th International Conference Proceedings (Lecture Notes in Computer Science Vol.2421), P116
   Abdulla PA, 1996, IEEE S LOG, P313, DOI 10.1109/LICS.1996.561359
   Abdulla PA, 2004, LECT NOTES COMPUT SC, V3170, P35
   Abdulla P, 2016, INT J SOFTW TOOLS TE, V18, P495, DOI 10.1007/s10009-015-0406-x
   Abdulla P, 2017, INT J SOFTW TOOLS TE, V19, P549, DOI 10.1007/s10009-016-0415-4
   Abdulla PA, 2016, LECT NOTES COMPUT SC, V9837, P61, DOI 10.1007/978-3-662-53413-7_4
   Amit D, 2007, LECT NOTES COMPUT SC, V4590, P477
   [Anonymous], 2000, Lecture Notes in Computer Science
   APT KR, 1986, INFORM PROCESS LETT, V22, P307, DOI 10.1016/0020-0190(86)90071-2
   Berdine J, 2008, LECT NOTES COMPUT SC, V5123, P399
   Blondin M, 2016, LECT NOTES COMPUT SC, V9636, P480, DOI 10.1007/978-3-662-49674-9_28
   Bosnacki D., 2002, International Journal on Software Tools for Technology Transfer, V4, P92, DOI 10.1007/s100090200074
   Bouajjani A, 2004, LECT NOTES COMPUT SC, V3114, P372
   Bouajjani A, 2018, INFORM COMPUT, V261, P383, DOI 10.1016/j.ic.2018.02.014
   Chakraborty S, 2015, LOG METH COMPUT SCI, V11, DOI 10.2168/LMCS-11(1:20)2015
   Clarke E.M., 1987, P 6 ANN ACM S PRINCI, P294, DOI DOI 10.1145/41840.41865
   Clarke EM, 1996, FORM METHOD SYST DES, V9, P77, DOI 10.1007/BF00625969
   Clarke EM, 1998, LECT NOTES COMPUT SC, V1427, P147, DOI 10.1007/BFb0028741
   Dams D, 2002, J LOGIC ALGEBR PROGR, V52-3, P109, DOI 10.1016/S1567-8326(02)00025-5
   Delzanno G, 2001, LECT NOTES COMPUT SC, V2102, P298
   Dodds M, 2015, ACM SIGPLAN NOTICES, V50, P233, DOI [10.1145/2676726.2676963, 10.1145/2775051.2676963]
   Emerson E.A., 1995, P S PRINC PROGR LANG
   Emerson EA, 1996, FORM METHOD SYST DES, V9, P105, DOI 10.1007/BF00625970
   Esparza J, 2014, LECT NOTES COMPUT SC, V8559, P603, DOI 10.1007/978-3-319-08867-9_40
   Flanagan C, 2003, LECT NOTES COMPUT SC, V2648, P213
   GERMAN SM, 1992, J ACM, V39, P675, DOI 10.1145/146637.146681
   Gibson-Robinson T, 2019, INT J SOFTW TOOLS TE, V21, P567, DOI 10.1007/s10009-019-00516-4
   Gibson-Robinson T, 2016, INT J SOFTW TOOLS TE, V18, P149, DOI 10.1007/s10009-015-0377-y
   Goldsmith M, 2003, LECT NOTES COMPUT SC, V2805, P600
   Haziza F, 2016, LECT NOTES COMPUT SC, V9583, P393, DOI 10.1007/978-3-662-49122-5_19
   Hendler Danny, 2004, SPAA 2004, P206, DOI [10.1145/1007912.1007944, DOI 10.1145/1007912.1007944]
   Henzinger Thomas A., 2013, CONCUR 2013 - Concurrency Theory. 24th International Conference, CONCUR 2013. Proceedings: LNCS 8052, P242, DOI 10.1007/978-3-642-40184-8_18
   Herlihy Maurice, 2012, The Art of Multiprocessor Programming, V1st
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   Holík L, 2017, LECT NOTES COMPUT SC, V10422, P169, DOI 10.1007/978-3-319-66706-5_9
   Ip CN, 1996, FORM METHOD SYST DES, V9, P41, DOI 10.1007/BF00625968
   Kaiser A, 2014, ACM T PROGR LANG SYS, V36, DOI 10.1145/2629608
   Kesten Y, 2001, THEOR COMPUT SCI, V256, P93, DOI 10.1016/S0304-3975(00)00103-1
   Lowe G., 2018, LNCS, V10951, P502
   Lowe G, 2019, FORM ASP COMPUT, V31, P411, DOI 10.1007/s00165-019-00487-y
   LUBACHEVSKY BD, 1984, ACTA INFORM, V21, P125, DOI 10.1007/BF00289237
   Manevich R, 2005, LECT NOTES COMPUT SC, V3385, P181
   Mazur T, 2014, SCI COMPUT PROGRAM, V81, P3, DOI 10.1016/j.scico.2013.03.018
   Meyer R., 2019, P ACM PROGR LANG POP
   Michael M. M., 1996, Proceedings of the Fifteenth Annual ACM Symposium on Principles of Distributed Computing, P267, DOI 10.1145/248052.248106
   Moffat N, 2008, LECT NOTES COMPUT SC, V5256, P258, DOI 10.1007/978-3-540-88194-0_17
   Oracle, LOCKSUPPORT JAV SE9
   Pnueli A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P107
   Roscoe AW, 2010, TEXTS COMPUT SCI, P3, DOI 10.1007/978-1-84882-258-0_1
   Roscoe A.W., 2000, P PDPTA2000
   Sagiv M, 2002, ACM T PROGR LANG SYS, V24, P217, DOI 10.1145/514188.514190
   Sistla AP, 2000, ACM T SOFTW ENG METH, V9, P133, DOI 10.1145/350887.350891
   Sufrin B., 2008, P COMM PROC ARCH CPA
   Touili T., 2001, ELECTRON NOTES THEOR, V50
   Treiber RK, 1986, 5118 RJ IBM
   Vardi M. Y., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P332
   Wolper P, 1998, LECT NOTES COMPUT SC, V1427, P88, DOI 10.1007/BFb0028736
   WOLPER P, 1990, LECT NOTES COMPUT SC, V407, P68
   Wolper Pierre., 1986, POPL, V86, P184
NR 60
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2022
VL 24
IS 2
BP 287
EP 324
DI 10.1007/s10009-022-00648-0
EA FEB 2022
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0F1UH
UT WOS:000761851800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Howar, F
   Jasper, M
   Mues, M
   Schmidt, D
   Steffen, B
AF Howar, Falk
   Jasper, Marc
   Mues, Malte
   Schmidt, David
   Steffen, Bernhard
TI The RERS challenge: towards controllable and scalable benchmark
   synthesis
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Benchmark generation; Verification competitions; Error witnesses;
   Temporal logic; LTL synthesis; Buchi automata; Modal contracts; Parallel
   decomposition; Model checking; Bisimulation checking
ID RIGOROUS EXAMINATION; REACTIVE SYSTEMS; VERIFICATION; GENERATION;
   PROGRAMS
AB This paper (1) summarizes the history of the RERS challenge for the analysis and verification of reactive systems, its profile and intentions, its relation to other competitions, and, in particular, its evolution due to the feedback of participants, and (2) presents the most recent development concerning the synthesis of hard benchmark problems. In particular, the second part proposes a way to tailor benchmarks according to the depths to which programs have to be investigated in order to find all errors. This gives benchmark designers a method to challenge contributors that try to perform well by excessive guessing.
C1 [Howar, Falk; Jasper, Marc; Mues, Malte; Schmidt, David; Steffen, Bernhard] TU Dortmund Univ, Dortmund, Germany.
C3 Dortmund University of Technology
RP Jasper, M (corresponding author), TU Dortmund Univ, Dortmund, Germany.
EM falk.howar@tu-dortmund.de; marc.jasper@tu-dortmund.de;
   malte.mues@tu-dortmund.de; david3.schmidt@tu-dortmund.de;
   bernhard.steffen@tu-dortmund.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR [Anonymous], 1989, C RECORD 16 ANN ACM, DOI DOI 10.1145/75277.75293
   Antos D., 2013, LNCS, P1, DOI DOI 10.1007/978-3-642-36046-6
   Apel Sven, 2013, Hardware and Software: Verification and Testing. 9th International Haifa Verification Conference, HVC 2013. Proceedings: LNCS 8244, P262, DOI 10.1007/978-3-319-03077-7_18
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Barrett C, 2005, LECT NOTES COMPUT SC, V3576, P20
   Bartocci E, 2019, LECT NOTES COMPUT SC, V11429, P3, DOI 10.1007/978-3-030-17502-3_1
   Bartocci E, 2019, INT J SOFTW TOOLS TE, V21, P31, DOI 10.1007/s10009-017-0454-5
   Bauer O, 2014, INT J SOFTW TOOLS TE, V16, P531, DOI 10.1007/s10009-014-0333-2
   Beyer D., 2014, Tools and Algorithms for the Con- struction and Analysis of Systems, P373
   Beyer D, 2014, INT J SOFTW TOOLS TE, V16, P507, DOI 10.1007/s10009-014-0334-1
   Beyer D, 2012, LECT NOTES COMPUT SC, V7214, P504, DOI 10.1007/978-3-642-28756-5_38
   BRIGGS P, 1994, SIGPLAN NOTICES, V29, P159, DOI 10.1145/773473.178257
   Buchi J.R., 1966, Studies in Logic and the Foundations of Mathematics, V44, P1
   Clarke EM, 1999, MODEL CHECKING, P1
   Decker N, 2019, LECT NOTES COMPUT SC, V11388, P513, DOI 10.1007/978-3-030-11245-5_24
   Dietsch D, 2015, LECT NOTES COMPUT SC, V9206, P49, DOI 10.1007/978-3-319-21690-4_4
   Duan Z, 2017, LECT NOTES COMPUT SC, V10610, P122, DOI 10.1007/978-3-319-68690-5_8
   Duret-Lutz A, 2016, LECT NOTES COMPUT SC, V9938, P122, DOI 10.1007/978-3-319-46520-3_8
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Garavel H, 2019, J LOG ALGEBR METHODS, V104, P60, DOI 10.1016/j.jlamp.2018.11.005
   Geske M, 2016, LECT NOTES COMPUT SC, V9953, P787, DOI 10.1007/978-3-319-47169-3_59
   Geske M, 2015, LECT NOTES COMPUT SC, V9333, P423, DOI 10.1007/978-3-319-23820-3_28
   Giannakopoulou D, 2002, LECT NOTES COMPUT SC, V2529, P308
   Holzmann G, 2011, The SPIN Model Checker: Primer and Reference Manual
   Holzmann GJ, 2001, SOFTW TEST VERIF REL, V11, P65, DOI 10.1002/stvr.228
   Howar Falk, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P608, DOI 10.1007/978-3-642-34026-0_45
   Howar F, 2014, INT J SOFTW TOOLS TE, V16, P457, DOI 10.1007/s10009-014-0337-y
   Howar F, 2010, LECT NOTES COMPUT SC, V6415, P687, DOI 10.1007/978-3-642-16558-0_55
   Huisman M, 2015, INT J SOFTW TOOLS TE, V17, P647, DOI 10.1007/s10009-015-0396-8
   Järvisalo M, 2012, AI MAG, V33, P89
   Jasper Marc, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Verification. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11245), P235, DOI 10.1007/978-3-030-03421-4_16
   Jasper Marc, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Verification. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11245), P433, DOI 10.1007/978-3-030-03421-4_27
   Jasper M, 2019, GENERATING HARD BENC, P126, DOI [10.1007/978-3-030-31514-6_8, DOI 10.1007/978-3-030-31514-6_8]
   Jasper M, 2019, LECT NOTES COMPUT SC, V11429, P101, DOI 10.1007/978-3-030-17502-3_7
   Jasper M, 2017, SPIN'17: PROCEEDINGS OF THE 24TH ACM SIGSOFT INTERNATIONAL SPIN SYMPOSIUM ON MODEL CHECKING OF SOFTWARE, P11, DOI 10.1145/3092282.3098206
   Jasper M, 2016, COMM COM INF SC, V683, P143, DOI 10.1007/978-3-319-51641-7_9
   Jasper M, 2016, LECT NOTES COMPUT SC, V9952, P212, DOI 10.1007/978-3-319-47166-2_15
   Kant Gijs, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P692, DOI 10.1007/978-3-662-46681-0_61
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KNOOP J, 1994, SIGPLAN NOTICES, V29, P147
   KNOOP J, 1992, SIGPLAN NOTICES, V27, P224, DOI 10.1145/143103.143136
   Knoop J, 1999, LECT NOTES COMPUT SC, V1575, P91
   KNOOP J, 1993, J PROGRAM LANG, V1, P71
   Kordon F, 2012, LECT NOTES COMPUT SC, V7400, P169, DOI 10.1007/978-3-642-35179-2_8
   Lang Frederic, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12079), P57, DOI 10.1007/978-3-030-45237-7_4
   Lang Frederic, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P196, DOI 10.1007/978-3-030-30942-8_13
   LARSEN KG, 1990, LECT NOTES COMPUT SC, V407, P232
   Meijer J., 2019, SYNCHRONOUS ALTERNAT, P417, DOI [10.1007/978-3-030-22348-9_24, DOI 10.1007/978-3-030-22348-9_24]
   Meijer J., 2019, THESIS U TWENTE NETH, DOI [10.3990/1.9789036548441, DOI 10.3990/1.9789036548441]
   Meijer J, 2018, LECT NOTES COMPUT SC, V10811, P349, DOI 10.1007/978-3-319-77935-5_24
   MOREL E, 1979, COMMUN ACM, V22, P96, DOI 10.1145/359060.359069
   Morse, 2015, THESIS U SOUTHAMPTON
   Morse J, 2014, INT J SOFTW TOOLS TE, V16, P519, DOI 10.1007/s10009-014-0335-0
   Nielson Flemming, 2015, Principles of Program Analysis, DOI [10.1007/978-3-662-03811-6, DOI 10.1007/978-3-662-03811-6]
   Olderog, 1991, VERIFICATION SEQUENT, DOI [10.1007/978-1-4757-4376-0, DOI 10.1007/978-1-4757-4376-0]
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Rosen B. K., 1988, P 15 ACM SIGPLAN SIG, P12
   Schordan M, 2014, INT J SOFTW TOOLS TE, V16, P493, DOI 10.1007/s10009-014-0338-x
   STEFFEN B, 1989, LECT NOTES COMPUT SC, V379, P481
   Steffen Bernhard, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P341, DOI 10.1007/978-3-642-39176-7_21
   Steffen B., 1996, Static Analysis. Third International Symposium, SAS'96 Proceedings, P22
   Steffen B, 2017, LECT NOTES COMPUT SC, V10460, P125, DOI 10.1007/978-3-319-63121-9_7
   Steffen B, 2017, INT CONF APPL CONCUR, P1, DOI 10.1109/ACSD.2017.24
   Steffen B, 2014, INT J SOFTW TOOLS TE, V16, P543, DOI 10.1007/s10009-014-0339-9
   Steffen B, 2014, INT J SOFTW TOOLS TE, V16, P465, DOI 10.1007/s10009-014-0336-z
   Steffen B, 2011, LECT NOTES COMPUT SC, V6659, P256, DOI 10.1007/978-3-642-21455-4_8
   van de Pol J, 2014, INT J SOFTW TOOLS TE, V16, P481, DOI 10.1007/s10009-014-0324-3
   Wang M, 2020, THEOR COMPUT SCI, V809, P430, DOI 10.1016/j.tcs.2019.12.038
   Wang M, 2019, IEEE T RELIAB, V68, P1101, DOI 10.1109/TR.2018.2876333
   Wang M, 2017, PROC IEEE ACM INT C, P226, DOI 10.1109/ICSE-C.2017.98
   WOLPER P, 1983, INFORM CONTROL, V56, P72, DOI 10.1016/S0019-9958(83)80051-5
NR 72
TC 5
Z9 5
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD DEC
PY 2021
VL 23
IS 6
BP 917
EP 930
DI 10.1007/s10009-021-00617-z
EA JUN 2021
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XU5UO
UT WOS:000665682000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Beyer, D
   Jakobs, MC
AF Beyer, Dirk
   Jakobs, Marie-Christine
TI Cooperative verifier-based testing with CoVeriTest
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Test-case generation; Test coverage; Software testing; Conditional model
   checking; Cooperative verification; Model checking
ID ABSTRACT INTERPRETATION; ALGORITHM SELECTION; SYMBOLIC EXECUTION;
   SOFTWARE; CONSTRUCTION; GENERATION; CHECKING
AB Testing is a widely applied technique to evaluate software quality, and coverage criteria are often used to assess the adequacy of a generated test suite. However, manually constructing an adequate test suite is typically too expensive, and numerous techniques for automatic test-suite generation were proposed. All of them come with different strengths. To build stronger test-generation tools, different techniques should be combined. In this paper, we study cooperative combinations of verification approaches for test generation, which exchange high-level information. We present CoVeriTest, a hybrid technique for test-suite generation. CoVeriTest iteratively applies different conditional model checkers and allows users to adjust the level of cooperation and to configure individual time limits for each conditional model checker. In our experiments, we systematically study different CoVeriTest cooperation setups, which either use combinations of explicit-state model checking and predicate abstraction, or bounded model checking and symbolic execution. A comparison with state-of-the-art test-generation tools reveals that CoVeriTest achieves higher coverage for many programs (about 15%).
C1 [Beyer, Dirk] Ludwig Maximilians Univ Munchen, Oettingenstr 67, D-80538 Munich, Germany.
   [Jakobs, Marie-Christine] Tech Univ Darmstadt, Dept Comp Sci, Hochschulstr 10, D-64289 Darmstadt, Germany.
C3 University of Munich; Technical University of Darmstadt
RP Jakobs, MC (corresponding author), Tech Univ Darmstadt, Dept Comp Sci, Hochschulstr 10, D-64289 Darmstadt, Germany.
EM jakobs@cs.tu-darmstadt.de
RI Beyer, Dirk/R-2534-2017
OI Beyer, Dirk/0000-0003-4832-7662
FU Projekt DEAL; Deutsche Forschungsgemeinschaft (DFG); Hessian LOEWE
   initiative within the Software-Factory 4.0 project
FX Open Access funding provided by Projekt DEAL. This work was funded by
   the Deutsche Forschungsgemeinschaft
   (DFG)-https://gepris.dfg.de/gepris/projekt/418257054 and by the Hessian
   LOEWE initiative within the Software-Factory 4.0 project.
CR Albarghouthi A, 2012, LECT NOTES COMPUT SC, V7214, P157, DOI 10.1007/978-3-642-28756-5_12
   Albert E, 2005, LECT NOTES COMPUT SC, V3452, P380
   Apel Sven, 2013, Hardware and Software: Verification and Testing. 9th International Haifa Verification Conference, HVC 2013. Proceedings: LNCS 8244, P262, DOI 10.1007/978-3-319-03077-7_18
   Aquino Andrea., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P305
   Baars A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P53, DOI 10.1109/ASE.2011.6100119
   Baluda M, 2015, P 6 INT WORKSH AUT T, P16, DOI [10.1145/2804322.2804325, DOI 10.1145/2804322.2804325]
   Basak Chowdhury Animesh, 2019, Tools and Algorithms for the Construction and Analysis of Systems. 25 Years of TACAS: TOOLympics. Held as Part of ETAPS 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11429), P244, DOI 10.1007/978-3-030-17502-3_22
   Beckman NelsE., 2008, Proceedings of the 2008 international symposium on Software testing and analysis, ISSTA '08, P3
   Besson F., 2013, LNCS, V8164, P304, DOI [10.1007/978-3-642-54108-7_16, DOI 10.1007/978-3-642-54108-7_16]
   Besson F, 2006, THEOR COMPUT SCI, V364, P273, DOI 10.1016/j.tcs.2006.08.012
   Beyer Dirk, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Verification. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11245), P144, DOI 10.1007/978-3-030-03421-4_11
   Beyer D, 2004, PROC INT CONF SOFTW, P326, DOI 10.1109/ICSE.2004.1317455
   Beyer D, 2004, LECT NOTES COMPUT SC, V3148, P2
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Beyer D., 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P189
   Beyer Dirk, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P29, DOI 10.1109/ASE.2008.13
   Beyer D., 2013, ESEC FSE, P389, DOI [10.1145/2491411.2491429, DOI 10.1145/2491411.2491429]
   Beyer D., 2020, TRANSF INT J SOFTW T
   Beyer D., 2018, Handbook of Model Checking, P493, DOI 10.1007/978-3-319-10575-8_16
   Beyer D., 2012, P FSE ACM, P57, DOI DOI 10.1145/2393596.2393664
   Beyer D, 2019, LECT NOTES COMPUT SC, V11424, P389, DOI 10.1007/978-3-030-16722-6_23
   Beyer D, 2018, IEEE INT CONF AUTOM, P634, DOI 10.1145/3238147.3238195
   Beyer D, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1074, DOI 10.1109/ASE.2019.00105
   Beyer D, 2019, LECT NOTES COMPUT SC, V11781, P189, DOI 10.1007/978-3-030-31784-3_11
   Beyer D, 2019, LECT NOTES COMPUT SC, V11429, P133, DOI 10.1007/978-3-030-17502-3_9
   Beyer D, 2019, INT J SOFTW TOOLS TE, V21, P1, DOI 10.1007/s10009-017-0469-y
   Beyer D, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1182, DOI 10.1145/3180155.3180259
   Beyer D, 2018, LECT NOTES COMPUT SC, V10889, P3, DOI 10.1007/978-3-319-92994-1_1
   Beyer D, 2018, J AUTOM REASONING, V60, P299, DOI 10.1007/s10817-017-9432-6
   Beyer D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P326, DOI 10.1145/2950290.2950351
   Beyer D, 2016, LECT NOTES COMPUT SC, V9952, P195, DOI 10.1007/978-3-319-47166-2_14
   Beyer D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P721, DOI 10.1145/2786805.2786867
   Beyer D, 2015, LECT NOTES COMPUT SC, V9206, P622, DOI 10.1007/978-3-319-21690-4_42
   Beyer D, 2015, LECT NOTES COMPUT SC, V9232, P20, DOI 10.1007/978-3-319-23404-5_3
   Beyer D, 2015, LECT NOTES COMPUT SC, V9039, P228, DOI 10.1007/978-3-319-19195-9_15
   Beyer D, 2013, LECT NOTES COMPUT SC, V7793, P146, DOI 10.1007/978-3-642-37057-1_11
   Beyer D, 2013, LECT NOTES COMPUT SC, V7792, P472, DOI 10.1007/978-3-642-37036-6_26
   Beyer Dirk., 2017, HARDWARE SOFTWARE VE, P99
   Bianculli D, 2015, SCI COMPUT PROGRAM, V97, P47, DOI 10.1016/j.scico.2013.11.026
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Blicha M, 2020, LECT NOTES COMPUT SC, V11990, P270, DOI 10.1007/978-3-030-39322-9_13
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Carroll M. D., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P274, DOI 10.1145/73560.73584
   Chaieb A, 2006, LECT NOTES COMPUT SC, V4281, P287
   Chalupa M, 2018, LECT NOTES COMPUT SC, V10806, P442, DOI 10.1007/978-3-319-89963-3_29
   Chebaro O., 2012, P SAC ACM, P1284, DOI DOI 10.1145/2245276.2231980
   Cheng WW, 2009, MACH LEARN, V76, P211, DOI 10.1007/s10994-009-5127-5
   Christakis M, 2016, PROC INT CONF SOFTW, P144, DOI 10.1145/2884781.2884843
   Ciortea Liviu, 2009, Operating Systems Review, V43, P5, DOI 10.1145/1713254.1713257
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke E, 2003, TIME-ICTL 2003: 10TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING AND FOURTH INTERNATIONAL CONFERENCE ON TEMPORAL LOGIC, PROCEEDINGS, P7
   Clarke T.A., 2018, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   Csallner C, 2005, PROC INT CONF SOFTW, P422
   Czech M, 2015, LECT NOTES COMPUT SC, V9033, P100, DOI 10.1007/978-3-662-46675-9_7
   Czech Mike., 2017, Proceedings of the 3rd ACM SIGSOFT International Workshop on Software Analytics, SWAN 2017, P23, DOI DOI 10.1145/3121257.3121262
   Daca P, 2016, LECT NOTES COMPUT SC, V9583, P328, DOI 10.1007/978-3-662-49122-5_16
   Demyanova Y, 2015, LECT NOTES COMPUT SC, V9206, P561, DOI 10.1007/978-3-319-21690-4_39
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Fraser G, 2009, SOFTW TEST VERIF REL, V19, P215, DOI 10.1002/stvr.402
   Galeotti JP, 2013, PROC INT SYMP SOFTW, P360, DOI 10.1109/ISSRE.2013.6698889
   Ge X, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P992, DOI 10.1145/1985793.1985971
   Ghezzi C., 2003, FUNDAMENTALS SOFTWAR
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P43, DOI 10.1145/1706299.1706307
   Godefroid Patrice, 2008, Network and Distributed Systems Security
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Groce A., 2012, P INT S SOFTW TEST A, P78, DOI DOI 10.1145/2338965.2336763
   Gulavani B.S., 2006, P FSE ACM, P117, DOI DOI 10.1145/1181775.1181790
   Henzinger T. A., 2004, SIGPLAN Notices, V39, P232, DOI 10.1145/982962.964021
   Henzinger T. A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P526
   Henzinger TA, 2003, LECT NOTES COMPUT SC, V2772, P332
   Henzinger TA, 2002, ACM SIGPLAN NOTICES, V37, P58, DOI 10.1145/565816.503279
   Holík L, 2016, LECT NOTES COMPUT SC, V10028, P202, DOI 10.1007/978-3-319-49052-6_13
   Holzer A, 2008, LECT NOTES COMPUT SC, V5123, P209
   Holzer A, 2009, LECT NOTES COMPUT SC, V5403, P151, DOI 10.1007/978-3-540-93900-9_15
   Holzmann Gerard J., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P1, DOI 10.1109/ASE.2008.9
   Inkumsah Kobi, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P297, DOI 10.1109/ASE.2008.40
   Jakobs M.C., 2014, P SPIN, P30, DOI [10.1145/2632362.2632372, DOI 10.1145/2632362.2632372]
   Jakobs MC, 2020, LECT NOTES COMPUT SC, V12076, P540, DOI 10.1007/978-3-030-45234-6_30
   Jakobs MC, 2021, INT J SOFTW TOOLS TE, V23, P847, DOI 10.1007/s10009-020-00572-1
   Jakobs MC, 2017, ACM T PROGR LANG SYS, V39, DOI 10.1145/3014427
   Jalote P., 2006, P WODA ACM, P11
   Jhala R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592438
   Jia Xiangyang, 2015, P 2015 INT S SOFTWAR, P177
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Kim Y, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P263, DOI 10.1109/ICST.2014.39
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kotthoff L, 2016, LECT NOTES COMPUT SC, V10101, P149, DOI 10.1007/978-3-319-50137-6_7
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Li J, 2018, CYBERSECURITY, V1, DOI 10.1186/s42400-018-0002-y
   Li K., 2012, P ISSTA ACM, P298
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Misailovic S., 2007, P FSE ACM, P135
   Mudduluru R, 2014, LECT NOTES COMPUT SC, V8411, P125
   Nguyen TL, 2017, IEEE INT CONF AUTOM, P753, DOI 10.1109/ASE.2017.8115686
   Noller Y, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P322, DOI 10.1145/3213846.3213868
   Cardona PAN, 2015, CUAD ACT, P154
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Person S, 2011, ACM SIGPLAN NOTICES, V46, P504, DOI 10.1145/1993316.1993558
   Post Hendrik, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P188, DOI 10.1109/ASE.2008.29
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Richter C, 2019, LECT NOTES COMPUT SC, V11429, P229, DOI 10.1007/978-3-030-17502-3_19
   Rose E, 2003, J AUTOM REASONING, V31, P303, DOI 10.1023/B:JARS.0000021015.15794.82
   Rothenberg BC, 2018, LECT NOTES COMPUT SC, V11002, P364, DOI 10.1007/978-3-319-99725-4_22
   Ryder B.G, 1983, P 10 ACM SIGACT SIGP, P167, DOI DOI 10.1145/567067.567084
   Sakti Abdelilah, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P213, DOI 10.1007/978-3-642-33119-0_16
   Seo SN, 2003, LECT NOTES COMPUT SC, V2895, P230
   Sery O, 2012, PROCEEDINGS OF THE 12TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2012), P114
   Sherman E, 2018, LECT NOTES COMPUT SC, V10806, P249, DOI 10.1007/978-3-319-89963-3_15
   Siddiqui JH, 2012, ACM SIGPLAN NOTICES, V47, P523, DOI 10.1145/2398857.2384654
   Sokolsky O. V., 1994, Computer Aided Verification. 6th International Conference, CAV '94. Proceedings, P351
   Staats M., 2010, ISSTA, P183
   Stephens N, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23368
   Tulsian Varun, 2014, P MSR ACM, P132, DOI [10.1145/2597073. 2597080, DOI 10.1145/2597073.2597080]
   Vavassori P., 2015, P IEE INT C COMP COM, P1, DOI [10.1109/ICSTW.2015.7107442, DOI 10.1109/ICSTW.2015.7107442]
   Veith H, 2010, P ASE, P407, DOI [10.1145/1858996.1859084, DOI 10.1145/1858996.1859084]
   Visser W, 2012, P FSE, P58, DOI DOI 10.1145/2393596.2393665
   Visser W., 2004, P 2004 ACM SIGSOFT I, P97, DOI [DOI 10.1145/1007512.1007526, 10.1145/1007512.1007526]
   Xu L, 2008, J ARTIF INTELL RES, V32, P565, DOI 10.1613/jair.2490
   Xu ZH, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P150, DOI 10.1109/ISSRE.2011.21
   Yang G., 2012, P 2012 INT S SOFTW T, P144, DOI DOI 10.1145/2338965.2336771
   Yang GW, 2009, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSM.2009.5306334
   Yorsh G., 2006, ISSTA 06 P 2006 INT, P145
NR 127
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2021
VL 23
IS 3
SI SI
BP 313
EP 333
DI 10.1007/s10009-020-00587-8
EA APR 2021
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TS5ZM
UT WOS:000643588700001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Blom, S
   Darabi, S
   Huisman, M
   Safari, M
AF Blom, S.
   Darabi, S.
   Huisman, M.
   Safari, M.
TI Correct program parallelisations
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Software verification; Deterministic parallel programming;
   Parallelisation
AB A commonly used approach to develop deterministic parallel programs is to augment a sequential program with compiler directives that indicate which program blocks may potentially be executed in parallel. This paper develops a verification technique to reason about such compiler directives, in particular to show that they do not change the behaviour of the program. Moreover, the verification technique is tool-supported and can be combined with proving functional correctness of the program. To develop our verification technique, we propose a simple intermediate representation (syntax and semantics) that captures the main forms of deterministic parallel programs. This language distinguishes three kinds of basic blocks: parallel, vectorised and sequential blocks, which can be composed using three different composition operators: sequential, parallel and fusion composition. We show how a widely used subset of OpenMP can be encoded into this intermediate representation. Our verification technique builds on the notion of iteration contract to specify the behaviour of basic blocks; we show that if iteration contracts are manually specified for single blocks, then that is sufficient to automatically reason about data race freedom of the composed program. Moreover, we also show that it is sufficient to establish functional correctness on a linearised version of the original program to conclude functional correctness of the parallel program. Finally, we exemplify our approach on an example OpenMP program, and we discuss how tool support is provided.
C1 [Blom, S.] BetterBe, Enschede, Netherlands.
   [Darabi, S.] ASML Veldhoven, Veldhoven, Netherlands.
   [Huisman, M.; Safari, M.] Univ Twente, Enschede, Netherlands.
C3 ASML Holding; University of Twente
RP Safari, M (corresponding author), Univ Twente, Enschede, Netherlands.
EM sblom@betterbe.com; saeed.darabi@gmail.com; m.huisman@utwente.nl;
   m.safari@utwente.nl
OI Huisman, Marieke/0000-0003-4467-072X
CR Amighi A, 2015, LOG METH COMPUT SCI, V11, DOI 10.2168/LMCS-11(1:2)2015
   [Anonymous], VIPER PROJECT
   Barthe G, 2013, ACM SIGPLAN NOTICES, V48, P123, DOI 10.1145/2517327.2442529
   Berger MJ, 2005, J PARALLEL DISTR COM, V65, P414, DOI 10.1016/j.jpdc.2004.11.010
   Blom S, 2015, LECT NOTES COMPUT SC, V9033, P202, DOI 10.1007/978-3-662-46675-9_14
   BORNAT R, 2005, POPL, P259
   Botincan M, 2013, ACM T PROGR LANG SYS, V35, DOI 10.1145/2491522.2491525
   Botincan M, 2012, ACM SIGPLAN NOTICES, V47, P309, DOI 10.1145/2103621.2103694
   Boyland J, 2003, LECT NOTES COMPUT SC, V2694, P55
   Bubel R, 2019, LECT NOTES COMPUT SC, V11918, P83, DOI 10.1007/978-3-030-34968-4_5
   Che SA, 2009, I S WORKL CHAR PROC, P44, DOI 10.1109/IISWC.2009.5306797
   Darabi S, 2017, LECT NOTES COMPUT SC, V10227, P247, DOI 10.1007/978-3-319-57288-8_17
   Dodds M, 2016, ACM T PROGR LANG SYS, V38, DOI 10.1145/2818638
   Dodds M, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P259, DOI 10.1145/1926385.1926416
   Ford, 2011, HOTPAR  11
   Haack C, 2008, LECT NOTES COMPUT SC, V5356, P171
   Hurlin, 2009, SPECIFICATION VERIFI
   Jin H.-Q., 1999, The openmp implementation of nas parallel benchmarks and its performance
   Leavens G. T., 2007, JML REFERENCE MANUAL
   LLNL, OPENMP BENCHM
   Müller P, 2016, LECT NOTES COMPUT SC, V9583, P41, DOI 10.1007/978-3-662-49122-5_2
   Parkinson MJ, 2011, LECT NOTES COMPUT SC, V6602, P439, DOI 10.1007/978-3-642-19718-5_23
   Raychev V, 2013, LECT NOTES COMPUT SC, V7935, P283, DOI 10.1007/978-3-642-38856-9_16
   Salamanca J, 2014, LECT NOTES COMPUT SC, V8766, P87, DOI 10.1007/978-3-319-11454-5_7
   Smans J, 2012, ACM T PROGR LANG SYS, V34, DOI 10.1145/2160910.2160911
   The OpenMP Architecture Review Board, OPENMP API SPEC PAR
   von Praun C, 2008, PPOPP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P185, DOI 10.1145/1345206.1345234
NR 27
TC 5
Z9 6
U1 1
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2021
VL 23
IS 5
BP 741
EP 763
DI 10.1007/s10009-020-00601-z
EA FEB 2021
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XD7NM
UT WOS:000617824200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Fritsche, L
   Kosiol, J
   Schürr, A
   Taentzer, G
AF Fritsche, Lars
   Kosiol, Jens
   Schuerr, Andy
   Taentzer, Gabriele
TI Avoiding unnecessary information loss: correct and efficient model
   synchronization based on triple graph grammars
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Bidirectional transformation; Model synchronization; Triple graph
   grammar; Incremental pattern matching; Change propagation
ID FORMAL FOUNDATION; TRANSFORMATIONS
AB Model synchronization, i.e., the task of restoring consistency between two interrelated models after a model change, is a challenging task. Triple graph grammars (TGGs) specify model consistency by means of rules that describe how to create consistent pairs of models. These rules can be used to automatically derive further rules, which describe how to propagate changes from one model to the other or how to change one model in such a way that propagation is guaranteed to be possible. Restricting model synchronization to these derived rules, however, may lead to unnecessary deletion and recreation of model elements during change propagation. This is inefficient and may cause unnecessary information loss, i.e., when deleted elements contain information that is not represented in the second model, this information cannot be recovered easily.Short-cut ruleshave recently been developed to avoid unnecessary information loss by reusing existing model elements. In this paper, we show how to automatically derive(short-cut) repair rulesfrom short-cut rules to propagate changes such that information loss is avoided and model synchronization is accelerated. The key ingredients of our rule-based model synchronization process are these repair rules and anincremental pattern matcherinforming about suitable applications of them. We prove the termination and the correctness of this synchronization process and discuss its completeness. As a proof of concept, we have implemented this synchronization process in eMoflon, a state-of-the-art model transformation tool with inherent support of bidirectionality. Our evaluation shows that repair processes based on(short-cut) repair ruleshave considerably decreased information loss and improved performance compared to former model synchronization processes based on TGGs.
C1 [Fritsche, Lars; Schuerr, Andy] Tech Univ Darmstadt, Real Time Syst Lab, Darmstadt, Germany.
   [Kosiol, Jens; Taentzer, Gabriele] Philipps Univ Marburg, Fac Math & Comp Sci, Marburg, Germany.
C3 Technical University of Darmstadt; Philipps University Marburg
RP Fritsche, L (corresponding author), Tech Univ Darmstadt, Real Time Syst Lab, Darmstadt, Germany.; Kosiol, J (corresponding author), Philipps Univ Marburg, Fac Math & Comp Sci, Marburg, Germany.
EM lars.fritsche@es.tu-darmstadt.de; kosiolje@mathematik.uni-marburg.de;
   andy.schuerr@es.tu-darmstadt.de; taentzer@mathematik.uni-marburg.de
OI Fritsche, Lars/0000-0003-4996-4639
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL.
CR Abou-Saleh F, 2018, LECT NOTES COMPUTER, P1
   Anjorin A, 2012, ELECT COMMUN EASST
   Anjorin A., 2015, P 4 INT WORKSH BID T, V1396, P66
   Anjorin A, 2014, LECT NOTES COMPUT SC, V8571, P130
   Anjorin Anthony, 2017, CEUR Workshop Proceedings, V1827, P15
   [Anonymous], 2018, REFACTORING IMPROVIN
   Baldan P, 2014, MATH STRUCT COMP SCI, V24, DOI 10.1017/S096012951200031X
   Biermann E, 2012, SOFTW SYST MODEL, V11, P227, DOI 10.1007/s10270-011-0199-7
   Blouin D, 2014, LECT NOTES COMPUT SC, V8568, P106
   Boronat A, 2019, LECT NOTES COMPUT SC, V11424, P134, DOI 10.1007/978-3-030-16722-6_8
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Cheney J, 2017, J OBJECT TECHNOL, V16, DOI 10.5381/jot.2017.16.1.a3
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   Diskin Z, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a6
   Ehrig H, 2015, MONOGR THEOR COMPUT, P1, DOI 10.1007/978-3-662-47980-3
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H., 2014, MATH STRUCT COMPUT S, V24
   Ehrig H, 2007, LECT NOTES COMPUT SC, V4422, P72
   Ermel C, 2012, ECEASST
   Fritsche Lars, 2019, Fundamental Approaches to Software Engineering. 22nd International Conference, FASE 2019. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2019. Proceedings: Lecture Notes in Computer Science (11424), P116, DOI 10.1007/978-3-030-16722-6_7
   Fritsche L, 2018, LECT NOTES COMPUT SC, V11176, P415, DOI 10.1007/978-3-030-04771-9_30
   Giese H., 2009, 28 HASS PLATTN I
   Giese H, 2014, SOFTW SYST MODEL, V13, P273, DOI 10.1007/s10270-012-0247-y
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Greenyer J, 2011, LECT NOTES COMPUT SC, V6698, P144, DOI 10.1007/978-3-642-21470-7_11
   Gurobi Optimization I., 2017, GUROBI OPTIMIZER REF
   Hermann F, 2015, SOFTW SYST MODEL, V14, P241, DOI 10.1007/s10270-012-0309-1
   Hermann Frank, 2010, P 1 INT WORKSH MOD D, P22, DOI [10.1145/1866272.1866277, DOI 10.1145/1866272.1866277]
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P249, DOI 10.1007/s10270-017-0617-6
   Hofmann M, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P495
   Horn R, 2018, P ACM PROGR LANG, V2, P1
   IBM, ILOG CPLEX OPT STUD
   Klar F, 2010, LECT NOTES COMPUT SC, V5765, P141, DOI 10.1007/978-3-642-17322-6_8
   Ko HS, 2016, PEPM'16: PROCEEDINGS OF THE 2016 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P61, DOI 10.1145/2847538.2847544
   Kosiol J, 2019, LECT NOTES COMPUT SC, V11629, P38, DOI 10.1007/978-3-030-23611-3_3
   KREOWSKI HJ, 1987, LECT NOTES COMPUT SC, V291, P343
   Lack S, 2005, RAIRO-THEOR INF APPL, V39, P511, DOI 10.1051/ita:2005028
   Lauder Marius, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P401, DOI 10.1007/978-3-642-33654-6_27
   Leblebici E, 2018, THESIS
   Leblebici E., 2014, LNI, V225, P225
   Leblebici E, 2017, J VISUAL LANG COMPUT, V42, P99, DOI 10.1016/j.jvlc.2016.03.001
   Leblebici E, 2017, LECT NOTES COMPUT SC, V10373, P179, DOI 10.1007/978-3-319-61470-0_11
   Leblebici E, 2017, LECT NOTES COMPUT SC, V10202, P191, DOI 10.1007/978-3-662-54494-5_11
   Leblebici E, 2014, LECT NOTES COMPUT SC, V8568, P138
   Macedo N, 2016, SOFTW SYST MODEL, V15, P783, DOI 10.1007/s10270-014-0437-x
   Ohrndorf M, 2018, PROC IEEE ACM INT C, P105, DOI 10.1145/3183440.3183498
   Orejas F, 2013, ECEASST
   Orejas F, 2014, LECT NOTES COMPUT SC, V8568, P74
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Stojkovic M., 2017, CEUR WORKSHOP PROC, V1827, P1
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Taentzer G, 2017, LECT NOTES COMPUT SC, V10202, P283, DOI 10.1007/978-3-662-54494-5_16
   Varro Gergely, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P125, DOI 10.1007/978-3-642-38883-5_13
   Wang M, 2011, ICFP 11 - PROCEEDINGS OF THE 2011 ACM SIGPLAN: INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P392
   Weidmann N., 2019, P LECT NOTES COMPUTE, V1629, P131, DOI [10.1007/978-3-030-23611-3_8, DOI 10.1007/978-3-030-23611-3_8]
   Weidmann N, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P1, DOI 10.1145/3357766.3359529
   Weidmann Nils, 2019, BX PLW 2019 PHIL PA, P45
   Xiong YF, 2013, SOFTW SYST MODEL, V12, P89, DOI 10.1007/s10270-010-0187-3
NR 58
TC 5
Z9 5
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2021
VL 23
IS 3
SI SI
BP 335
EP 368
DI 10.1007/s10009-020-00588-7
EA SEP 2020
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TS5ZM
UT WOS:000567450100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Gabor, T
   Sedlmeier, A
   Phan, T
   Ritz, F
   Kiermeier, M
   Belzner, L
   Kempter, B
   Klein, C
   Sauer, H
   Schmid, R
   Wieghardt, J
   Zeller, M
   Linnhoff-Popien, C
AF Gabor, Thomas
   Sedlmeier, Andreas
   Phan, Thomy
   Ritz, Fabian
   Kiermeier, Marie
   Belzner, Lenz
   Kempter, Bernhard
   Klein, Cornel
   Sauer, Horst
   Schmid, Reiner
   Wieghardt, Jan
   Zeller, Marc
   Linnhoff-Popien, Claudia
TI The scenario coevolution paradigm: adaptive quality assurance for
   adaptive systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Adaptation; Self-adaptive systems; Software engineering; Quality
   assurance; Machine learning; Artificial intelligence; Software
   evolution; Coevolution
ID NEURAL-NETWORKS; GAME; GO
AB Systems are becoming increasingly more adaptive, using techniques like machine learning to enhance their behavior on their own rather than only through human developers programming them. We analyze the impact the advent of these new techniques has on the discipline of rigorous software engineering, especially on the issue of quality assurance. To this end, we provide a general description of the processes related to machine learning and embed them into a formal framework for the analysis of adaptivity, recognizing that to test an adaptive system a new approach to adaptive testing is necessary. We introduce scenario coevolution as a design pattern describing how system and test can work as antagonists in the process of software evolution. While the general pattern applies to large-scale processes (including human developers further augmenting the system), we show all techniques on a smaller-scale example of an agent navigating a simple smart factory. We point out new aspects in software engineering for adaptive systems that may be tackled naturally using scenario coevolution. This work is a substantially extended take on Gabor et al. (International symposium on leveraging applications of formal methods, Springer, pp 137-154, 2018).
C1 [Gabor, Thomas; Sedlmeier, Andreas; Phan, Thomy; Ritz, Fabian; Kiermeier, Marie; Belzner, Lenz; Linnhoff-Popien, Claudia] Ludwig Maximilians Univ Munchen, Oettingenstr 67, D-80538 Munich, Germany.
   [Kempter, Bernhard; Klein, Cornel; Sauer, Horst; Schmid, Reiner; Wieghardt, Jan; Zeller, Marc] Siemens AG, D-81739 Munich, Germany.
C3 University of Munich; Siemens AG; Siemens Germany
RP Gabor, T (corresponding author), Ludwig Maximilians Univ Munchen, Oettingenstr 67, D-80538 Munich, Germany.
EM thomas.gabor@ifi.lmu.de
RI Zeller, Marc/AAQ-6236-2020; ritz, F/JXX-8480-2024
OI Zeller, Marc/0000-0002-6738-7903; Ritz, Fabian/0000-0001-7707-1358;
   Phan, Thomy/0000-0002-4390-8954
CR Abeywickrama DB, 2012, IEEE ENABL TECHNOL, P48, DOI 10.1109/WETICE.2012.48
   Amodei Dario, 2016, CONCRETE PROBLEMS AI
   [Anonymous], 2017, ARXIV171209923
   [Anonymous], 1985, CALIFORNIA U SAN DIE
   [Anonymous], 2015, SIGSOFT SOFTW ENG NO
   Arcaini P, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P13, DOI 10.1109/SEAMS.2015.10
   Arcuri Andrea., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, P397, DOI DOI 10.1145/1321631.1321693
   Batista G. E., 2004, ACM SIGKDD EXPL NEWS, V6, P20, DOI DOI 10.1145/1007730.1007735
   Belzner L, 2016, 2016 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P54, DOI [10.1109/SEsCPS.2016.017, 10.1145/2897035.2897040]
   Bernon C., 2005, Agent-oriented methodologies, P172
   Bernon C., 2003, INT WORKSH ENG SELF, P283
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   Bruni R, 2012, LECT NOTES COMPUT SC, V7212, P240, DOI 10.1007/978-3-642-28872-2_17
   Bures Tomas, 2017, ACM SIGSOFT Software Engineering Notes, V42, P19, DOI 10.1145/3089649.3089656
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Conneau A, 2016, arXiv:1606.01781
   Crepinsek M, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480752
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   De Nicola R, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2619998
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Elkhodary Ahmed., 2010, P 18 ACM SIGSOFT INT
   Engelbrecht A., 2007, Computational Intelligence: An Introduction, Vsecond
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Gabor T., 2019, P GEN EV COMP C
   Gabor T, 2018, PR INT CONF AUTONOM, P131, DOI 10.1109/ICAC.2018.00023
   Gabor T, 2016, PR INT CONF AUTONOM, P374, DOI 10.1109/ICAC.2016.29
   Hart E, 2017, EVOL COMPUT, V26, P1
   Haslam C, 2013, REDEFINING BUSINESS MODELS: STRATEGIES FOR A FINANCIALIZED WORLD, P51
   Hölzl M, 2011, LECT NOTES COMPUT SC, V7000, P241, DOI 10.1007/978-3-642-24933-4_12
   Holzl Matthias, 2015, Software Engineering for Collective Autonomic Systems. The ASCENS Approach: LNCS 8998, P249, DOI 10.1007/978-3-319-16310-9_7
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kiermeier M, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL TECHNOLOGY (ICIT), P1226, DOI 10.1109/ICIT.2017.7915538
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Röthlisberger D, 2008, INT C PROGRAM COMPRE, P63, DOI 10.1109/ICPC.2008.32
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Schmidhuber J, 2015, NEURAL NETWORKS, V61, P85, DOI 10.1016/j.neunet.2014.09.003
   Silver D, 2017, NATURE, V550, P354, DOI 10.1038/nature24270
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Simonyan K., 2014, 14091556 ARXIV
   Stanley K. O., 2019, Paired open-ended trailblazer (poet): Endlessly generating increasingly complex and diverse learning environments and their solutions
   Sutton RS., 2020, REINFORCEMENT LEARNI
   Wachter S, 2017, SCI ROBOT, V2, DOI 10.1126/scirobotics.aan6080
   WATKINS CJCH, 1992, MACH LEARN, V8, P279, DOI 10.1007/BF00992698
   Weyns D, 2017, Handbook of Software Engineering
   Wirsing M., 2015, SOFTWARE ENG COLLECT
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
NR 47
TC 3
Z9 3
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2020
VL 22
IS 4
SI SI
BP 457
EP 476
DI 10.1007/s10009-020-00560-5
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MH4SO
UT WOS:000546721100006
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Herdt, V
   Le, HM
   Grosse, D
   Drechsler, R
AF Herdt, Vladimir
   Le, Hoang M.
   Grosse, Daniel
   Drechsler, Rolf
TI Combining sequentialization-based verification of multi-threaded C
   programs with symbolic Partial Order Reduction
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Verification; Multi-threading; Partial order reduction;
   Sequentialization; Context bounded analysis; Bounded model checking
ID MODEL CHECKING
AB Sequentialization has been shown to be an effective symbolic verification technique for safety properties in multi-threaded C programs using POSIX threads. The tool Lazy-CSeq, which applies a lazy sequentialization scheme, demonstrated its efficiency by ranking top places within the concurrency division of the Competitions on Software Verification in recent years. This lazy sequentialization scheme encodes all thread schedules up to a given exploration bound into a single non-deterministic sequential C program. Another particularly effective technique to tackle the state explosion of multi-threaded programs is Partial Order Reduction (POR). It works by limiting the exploration of redundant thread execution orders (i.e., schedules) by exploiting independence. Integrating POR into lazy sequentialization can further significantly improve its scalability. However, a combination of both techniques can lead to unsoundness, i.e., reachability of states is not preserved within the exploration bound. The reason is that POR is not aware of the exploration bound; therefore, POR can prune a schedule which will reach a bug within the exploration bound and instead keep another (functionally) equivalent schedule which requires a larger exploration bound to reach the bug. This paper presents a novel implementation of lazy sequentialization, which integrates symbolic POR into the encoding to prune redundant schedules. An efficient pruning check is employed to make the POR technique aware of the exploration bound and thus avoid unsoundness, while still providing significant state space reductions. On the other hand, the integration of POR entails some additional encoding overhead that can also result in a performance slowdown. Such a case is avoided by a practical heuristic that only employs POR if the encoding overhead of POR is reasonable (i.e., less than 50%). Experimental evaluation shows that our proposed approach can provide considerable speed-ups.
C1 [Herdt, Vladimir; Le, Hoang M.; Grosse, Daniel; Drechsler, Rolf] Univ Bremen, Grp Comp Architecture, D-28359 Bremen, Germany.
   [Grosse, Daniel; Drechsler, Rolf] DFKI GmbH, Cyber Phys Syst, D-28359 Bremen, Germany.
C3 University of Bremen; German Research Center for Artificial Intelligence
   (DFKI)
RP Herdt, V (corresponding author), Univ Bremen, Grp Comp Architecture, D-28359 Bremen, Germany.
EM vherdt@informatik.uni-bremen.de; hle@informatik.uni-bremen.de;
   grosse@informatik.uni-bremen.de; drechsle@informatik.uni-bremen.de
RI Le, Hoang/AAG-3979-2020; Drechsler, Rolf/K-2508-2014
OI Drechsler, Rolf/0000-0002-9872-1740; Grosse, Daniel/0000-0002-1490-6175
FU German Federal Ministry of Education and Research (BMBF) [16ES0565,
   16KIS0821K, 01IS13022E]; University of Bremen's Central Research
   Development Fund; University of Bremen's graduate school SyDe
FX This work was supported in part by the German Federal Ministry of
   Education and Research (BMBF) within the Project CONFIRM under contract
   no. 16ES0565 and within the Project SATiSFy under contract no.
   16KIS0821K and within the Project EffektiV under contract no.
   01IS13022E, and by the University of Bremen's Central Research
   Development Fund, and by the University of Bremen's graduate school
   SyDe, funded by the German Excellence Initiative.
CR Alglave Jade, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P141, DOI 10.1007/978-3-642-39799-8_9
   Andrews T, 2004, LECT NOTES COMPUT SC, V3170, P1
   [Anonymous], 1996, LECT NOTES COMPUTER, DOI DOI 10.1007/3-540-60761-7
   [Anonymous], 1994, Program analysis and specialization for the C programming language
   [Anonymous], CONTEXT BOUNDED MODE
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Beyer D, 2016, ELECTRON P THEOR COM, P61, DOI 10.4204/EPTCS.233.6
   Cimatti A, 2013, IEEE T COMPUT AID D, V32, P774, DOI 10.1109/TCAD.2012.2232351
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Coons KE, 2013, ACM SIGPLAN NOTICES, V48, P833, DOI [10.1145/2544173.2509556, 10.1145/2509136.2509556]
   Cordeiro L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P331, DOI 10.1145/1985793.1985839
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Ghafari N, 2010, LECT NOTES COMPUT SC, V6349, P227
   Hardekopf B, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P290, DOI 10.1145/1250734.1250767
   Herdt V, 2015, LECT NOTES COMPUT SC, V9364, P228, DOI 10.1007/978-3-319-24953-7_18
   Holtzblatt K, 2017, CONTEXTUAL DESIGN: DESIGN FOR LIFE, 2ND EDITION, P331, DOI 10.1016/B978-0-12-800894-2.00014-4
   Inverso O, 2014, LAZY CSEQ 0 6C IMPRO
   Inverso O, 2014, LECT NOTES COMPUT SC, V8559, P585, DOI 10.1007/978-3-319-08867-9_39
   Kahlon V, 2009, LECT NOTES COMPUT SC, V5643, P398, DOI 10.1007/978-3-642-02658-4_31
   La Torre S, 2009, LECT NOTES COMPUT SC, V5643, P477, DOI 10.1007/978-3-642-02658-4_36
   Lal A, 2009, FORM METHOD SYST DES, V35, P73, DOI 10.1007/s10703-009-0078-9
   Le HM, 2013, DES AUT CON
   LIPTON RJ, 1975, COMMUN ACM, V18, P717, DOI 10.1145/361227.361234
   MAZURKIEWICZ A, 1987, LECT NOTES COMPUT SC, V255, P279
   Musuvathi M., 2007, MSRTR200712
   Musuvathi M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P446, DOI 10.1145/1250734.1250785
   Qadeer S, 2005, LECT NOTES COMPUT SC, V3440, P93
   Stoller SD, 2003, LECT NOTES COMPUT SC, V2619, P489
   Udupa Abhishek, 2011, Model Checking Software. Proceedings 18th International SPIN Workshop, P57, DOI 10.1007/978-3-642-22306-8_5
   VALMARI A, 1991, LECT NOTES COMPUT SC, V483, P491
   Wang C, 2008, LECT NOTES COMPUT SC, V4963, P382, DOI 10.1007/978-3-540-78800-3_29
NR 31
TC 4
Z9 5
U1 0
U2 4
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2019
VL 21
IS 5
BP 545
EP 565
DI 10.1007/s10009-019-00507-5
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IW8PB
UT WOS:000485255000003
DA 2024-07-18
ER

PT J
AU Fellner, A
   Paleo, BW
AF Fellner, Andreas
   Paleo, Bruno Woltzenlogel
TI Greedy pebbling for proof space compression
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Proof compression; Memory consumption; Resolution; Pebbling games
AB Automated reasoning tools for the verification and synthesis of software often produce proofs to allow independent certification of the correctness of the produced solutions. As proofs can be large, this paper considers the problem of compressing proofs with respect to their space, which is approximately proportional to the memory necessary to check them. Proof checking with a small amount of available memory is analogous to playing a pebbling game with a small number of pebbles. This paper exploits this analogy and describes novel algorithms for playing a pebbling game. The sequence of moves executed in the pebbling game then corresponds to an improved topological ordering of the nodes of the proof, leading to smaller memory consumption when the proof is checked. Because the number of possible pebbling strategies and topological orderings is too large, brute-force approaches to find optimal solutions are impractical, and hence, the new pebbling algorithms proposed here are based on heuristics for finding good, though not necessarily optimal, solutions. The algorithms are evaluated on the task of compressing the space of thousands of propositional resolution proofs generated by SAT- and SMT-solvers.
C1 [Fellner, Andreas] Austrian Inst Technol, Vienna, Austria.
   [Fellner, Andreas; Paleo, Bruno Woltzenlogel] Vienna Univ Technol, Vienna, Austria.
   [Paleo, Bruno Woltzenlogel] Australian Natl Univ, Canberra, ACT, Australia.
C3 Austrian Institute of Technology (AIT); Technische Universitat Wien;
   Australian National University
RP Fellner, A (corresponding author), Austrian Inst Technol, Vienna, Austria.; Fellner, A (corresponding author), Vienna Univ Technol, Vienna, Austria.
EM fellner.a@gmail.com; bruno@logic.at
FU Austrian Science Fund (FWF); FFG Project [845582]; FWF Project
   [W1255-N23]; Austrian Science Fund [P24300]; Google Summer of Code 2013
   program; Austrian Science Fund (FWF) [P24300] Funding Source: Austrian
   Science Fund (FWF)
FX Open access funding provided by Austrian Science Fund (FWF). Andreas
   Fellner was supported by the Google Summer of Code 2013 program, by FFG
   Project No. 845582 (TRUCONF) and was co-funded by FWF Project W1255-N23.
   Bruno Woltzenlogel Paleo was supported by the Austrian Science Fund,
   Project P24300.
CR [Anonymous], 2008, J. Satisf. Boolean Model. Comput., DOI 10.3233/sat190039
   Asperti A, 2011, LECT NOTES ARTIF INT, V6803, P64, DOI 10.1007/978-3-642-22438-6_7
   Assaf A., 2016, Dedukti: a Logical Framework based on the -Calculus Modulo Theory
   Bar-Ilan Omer, 2008, Hardware and Software: Verification and Testing. Proceedings 4th International Haifa Verification Conference, HVC 2008, P114
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C, 2015, LESBIAN GEOGRAPHIES: GENDER, PLACE AND POWER, P55
   Ben-Sasson E, 2009, ELECT C COMPUT COMPL, V16, P2
   Ben-Sasson Eli, 2002, P 34 ANN ACM S THEOR, P457, DOI DOI 10.1145/509907.509975
   Biere A., 2009, HDB SATISFIABILITY F
   Biere A., 2015, ALL PROOFS PROOFS AL, V55
   Boudou J, 2014, LECT NOTES ARTIF INT, V8562, P374, DOI 10.1007/978-3-319-08587-6_29
   Bouton T, 2009, LECT NOTES ARTIF INT, V5663, P151, DOI 10.1007/978-3-642-02959-2_12
   Brummayer R, 2010, LECT NOTES COMPUT SC, V6175, P44, DOI 10.1007/978-3-642-14186-7_6
   Brummayer Robert, 2009, INT WORKSH SAT MOD T, P1
   Burel G., 2013, PXTP EPIC SERIES COM, V14, P43
   Chan S. M, 2013, UCBEECS2013145
   Chihani Zakaria, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P162, DOI 10.1007/978-3-642-38574-2_11
   Chihani Z, 2015, LECT NOTES ARTIF INT, V9323, P201, DOI 10.1007/978-3-319-24312-2_14
   Cotton S, 2010, LECT NOTES COMPUT SC, V6175, P306, DOI 10.1007/978-3-642-14186-7_26
   D'Silva V, 2010, LECT NOTES COMPUT SC, V5944, P129, DOI 10.1007/978-3-642-11319-2_12
   Dowek G., 2017, DAGSTUHL REP, V6, P75, DOI [10. 4230/DagRep. 6., DOI 10.4230/DAGREP.6]
   DUNCHEV C., 2012, P 10 WORKSH US INT T, V118, P1
   Dunchev T, 2010, LECT NOTES ARTIF INT, V6173, P427, DOI 10.1007/978-3-642-14203-1_36
   Ebner G, 2016, LECT NOTES ARTIF INT, V9706, P293, DOI 10.1007/978-3-319-40229-1_20
   Esteban JL, 2001, INFORM COMPUT, V171, P84, DOI 10.1006/inco.2001.2921
   Fontaine P, 2011, LECT NOTES ARTIF INT, V6803, P237, DOI 10.1007/978-3-642-22438-6_19
   Galmiche D, 2013, LECT NOTES COMPUTER, V8123, DOI [10.1007/978-3-642-40537-2, DOI 10.1007/978-3-642-40537-2]
   GILBERT JR, 1980, SIAM J COMPUT, V9, P513, DOI 10.1137/0209038
   Gorzny J, 2015, LECT NOTES ARTIF INT, V9195, P356, DOI 10.1007/978-3-319-21401-6_24
   Hertel P., 2007, ELECT C COMPUT COMPL, V14
   Hetzl S, 2008, LECT NOTES ARTIF INT, V5144, P462, DOI 10.1007/978-3-540-85110-3_38
   Hetzl S, 2014, THEOR COMPUT SCI, V549, P1, DOI 10.1016/j.tcs.2014.05.018
   Heule Marijn J. H., 2016, CORR
   Hofferek G., 2013, CORR
   Huet G., 2000, PART COQ SYST VERSIO, V6
   Kaliszyk C, 2015, P 4 WORKSH PROOF EXC, V186, DOI [10. 4204/EPTCS. 186, DOI 10.4204/EPTCS.186]
   Kaliszyk C, 2015, MATH COMPUT SCI, V9, P5, DOI 10.1007/s11786-014-0182-0
   KASAI T, 1979, SIAM J COMPUT, V8, P574, DOI 10.1137/0208046
   Leitsch A., 1997, TEXTS THEORETICAL CO
   Libal T, 2014, ELECTRON P THEOR COM, P35, DOI 10.4204/EPTCS.167.6
   Miller D., 2012, PROGRAMMING HIGHER O
   Miller D, 2015, ALL PROOFS PROOFS AL, V55
   Necula G. C., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P106, DOI 10.1145/263699.263712
   Nipkow T., 2002, ISABELLE HOL PROOF A, DOI DOI 10.1007/3-540-45949-9
   Nordström J, 2009, SIAM J COMPUT, V39, P59, DOI 10.1137/060668250
   Paleo BW, 2016, LECT NOTES COMPUT SC, V9609, P314, DOI 10.1007/978-3-319-41579-6_24
   Paleo BW, 2010, LECT NOTES ARTIF INT, V6355, P463, DOI 10.1007/978-3-642-17511-4_26
   Paulson Lawrence C., 2010, IWIL 2010
   Philipp T., 2017, SEMANTICS UNSATISFIA
   Pientka B, 2010, LECT NOTES COMPUT SC, V6009, P1, DOI 10.1007/978-3-642-12251-4_1
   Pippenger N, 1982, ADV IN PEBBLING
   Pippenger Nicholas, 1980, STOC, P351
   Reis G, 2015, ELECTRON P THEOR COM, P3, DOI 10.4204/EPTCS.186.3
   ROBINSON JA, 1965, J ACM, V12, P23, DOI 10.1145/321250.321253
   Rollini S., 2010, HVC, P182
   Schürmann C, 2009, LECT NOTES COMPUT SC, V5674, P79, DOI 10.1007/978-3-642-03359-9_7
   Sethi R., 1975, SIAM Journal on Computing, V4, P226, DOI 10.1137/0204020
   Slaney J., 2016, CORR
   Urban J, 2013, EPIC SERIES COMPUTIN, V14
   van Emde Boas P., 1979, Theoretical Computer Science 4th GI Conference, P101
   Walker S. A., 1973, Journal of Computer and System Sciences, V7, P404, DOI 10.1016/S0022-0000(73)80032-7
   WoltzenlogelPaleo B, 2013, LNCS, P372, DOI 10. 1007/978-3-642-35722-0_27
   WoltzenlogelPaleo B., 2015, ALL PROOFS PROOFS AL, V55
   WoltzenlogelPaleo B, 2008, THESIS
NR 64
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2019
VL 21
IS 1
BP 71
EP 86
DI 10.1007/s10009-017-0459-0
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM2LA
UT WOS:000459292700003
OA hybrid
DA 2024-07-18
ER

PT J
AU Asavoae, IM
   Asavoae, M
   Riesco, A
AF Asavoae, Irina Mariuca
   Asavoae, Mihail
   Riesco, Adrian
TI Slicing from formal semantics: Chisela-a tool for generic program
   slicing
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Slicing; Synthesis; Formal semantics; Model checking; Embedded systems
ID REWRITING LOGIC; LANGUAGES
AB We describe Chisel, a tool that synthesizes a program slicer directly from a given algebraic specification of a programming language operational semantics S. S is assumed to be a rewriting logic specification, given in Maude, while the program is a ground term of this specification. Chisel takes S and synthesizes language constructs, i.e., instructions, that produce features relevant for slicing, e.g., data dependency. We implement syntheses adjusted to each feature as model checking properties over an abstract representation of S. The syntheses results are used by a traditional interprocedural slicing algorithm that we parameterize by the synthesized language features. We present the tool on two language paradigms: high-level, imperative and low-level, assembly languages. Computing program slices for these languages allows for extracting traceability properties in standard compilation chains and makes our tool fitting for the validation of embedded system designs. Chisel's slicing benchmark evaluation is based on benchmarks used in avionics.
C1 [Asavoae, Irina Mariuca; Asavoae, Mihail] INRIA, Paris, France.
   [Asavoae, Irina Mariuca] Swansea Univ, Swansea, W Glam, Wales.
   [Asavoae, Mihail] CEA, LIST, Gif Sur Yvette, France.
   [Riesco, Adrian] Univ Complutense Madrid, Madrid, Spain.
C3 Inria; Swansea University; CEA; Universite Paris Saclay; Complutense
   University of Madrid
RP Riesco, A (corresponding author), Univ Complutense Madrid, Madrid, Spain.
EM ariesco@fdi.ucm.es
RI Riesco, Adrian/I-5959-2016
OI Riesco, Adrian/0000-0002-9716-4612
CR Alpuente M, 2015, LECT NOTES COMPUT SC, V9200, P72, DOI 10.1007/978-3-319-23165-5_3
   [Anonymous], LOGICAL METHODS COMP
   [Anonymous], TECHNICAL REPORT
   [Anonymous], ABS170906897 CORR
   [Anonymous], 2004, ELECTRON NOTES THEOR
   [Anonymous], C PROGR LANG DES IMP
   [Anonymous], 2015, SCADE LANGUAGE APPL
   [Anonymous], POPL
   [Anonymous], SAC
   [Anonymous], LNCS
   [Anonymous], 2001, MODEL CHECKING
   Asavoae IM, 2014, LECT NOTES COMPUT SC, V8739, P291, DOI 10.1007/978-3-319-10181-1_18
   Asavoae M, 2014, ELECTRON NOTES THEOR, V304, P111, DOI 10.1016/j.entcs.2014.05.006
   Balakrishnan G, 2005, LECT NOTES COMPUT SC, V3443, P250, DOI 10.1007/978-3-540-31985-6_19
   BENVENISTE A, 1992, LECT NOTES COMPUT SC, V582, P20
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Binkley D, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P109, DOI 10.1145/2635868.2635893
   Bouhoula A, 2000, THEOR COMPUT SCI, V236, P35, DOI 10.1016/S0304-3975(99)00206-6
   Calcagno C, 2011, LECT NOTES COMPUT SC, V6617, P459, DOI 10.1007/978-3-642-20398-5_33
   Caspi P., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P178, DOI 10.1145/41625.41641
   Clarke E. M., 2001, HDB AUTOMATED REASON, P1635, DOI DOI 10.1016/B978-044450813-3/50026-6
   Clavel M., 2007, LNCS
   Dershowitz N., 2001, Handbook of Automated Reasoning, VI, P535, DOI [10.1016/b978-044450813-3/50011-4, DOI 10.1016/B978-044450813-3/50011-4]
   Fink Stephen., 2006, INT S SOFTWARE TESTI, P133, DOI DOI 10.1145/1146238.1146254
   Hennessy JL, 2011, COMPUTER ARCHITECTUR, V5
   Hoffmann J., 2013, P 28 ANN ACM S APPL, P1844
   Kirchner F, 2015, FORM ASP COMPUT, V27, P573, DOI 10.1007/s00165-014-0326-7
   Langdon WB, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI 10.1109/SBST.2017.1
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   Meseguer J, 2007, THEOR COMPUT SCI, V373, P213, DOI 10.1016/j.tcs.2006.12.018
   Meseguer J, 2013, INFORM COMPUT, V231, P38, DOI 10.1016/j.ic.2013.08.004
   Nemer Fadia., 2006, WCET
   Riesco A, 2017, LECT NOTES COMPUT SC, V10202, P374, DOI 10.1007/978-3-662-54494-5_21
   Riesco A, 2015, LECT NOTES COMPUT SC, V9527, P293, DOI 10.1007/978-3-319-27436-2_18
   Rosu Grigore., 2017, Dependable Software Systems Engineering, NATO Science for Peace and Security
   Sahoo SK, 2013, ACM SIGPLAN NOTICES, V48, P139, DOI 10.1145/2499368.2451131
   Schuele T, 2004, DES AUT CON, P107, DOI 10.1145/996566.996602
   Srinivasan V, 2016, ACM SIGPLAN NOTICES, V51, P378, DOI 10.1145/3022671.2984003
   Teitelbaum Tim., 2000, ACM SIGSOFT Software Engineering Notes, V25, P99
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Verdejo A, 2006, J LOGIC ALGEBR PROGR, V67, P226, DOI 10.1016/j.jlap.2005.09.008
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
NR 43
TC 2
Z9 2
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2018
VL 20
IS 6
SI SI
BP 739
EP 769
DI 10.1007/s10009-018-0500-y
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GV9OI
UT WOS:000446488000007
DA 2024-07-18
ER

PT J
AU Müller, A
   Mitsch, S
   Retschitzegger, W
   Schwinger, W
   Platzer, A
AF Mueller, Andreas
   Mitsch, Stefan
   Retschitzegger, Werner
   Schwinger, Wieland
   Platzer, Andre
TI Tactical contract composition for hybrid system component verification
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Component-based development; Hybrid systems; Component-based
   verification
ID DYNAMIC LOGIC; APPROXIMATION; CALCULUS
AB We present an approach for hybrid systems that combines the advantages of component-based modeling (e.g., reduced model complexity) with the advantages of formal verification (e.g., guaranteed contract compliance). Component-based modeling can be used to split large models into multiple component models with local responsibilities to reduce modeling complexity. Yet, this only helps the analysis if verification proceeds one component at a time. In order to benefit from the decomposition of a system into components for both modeling and verification purposes, we prove that the safety of compatible components implies safety of the composed system. We implement our composition theorem as a tactic in the KeYmaera X theorem prover, allowing automatic generation of a KeYmaera X proof for the composite system from proofs for the components without soundness-critical changes to KeYmaera X. Our approach supports component contracts (i.e., input assumptions and output guarantees for each component) that characterize the magnitude and rate of change of values exchanged between components. These contracts can take into account what has changed between two components in a given amount of time since the last exchange of information.
C1 [Mueller, Andreas; Retschitzegger, Werner; Schwinger, Wieland] Johannes Kepler Univ Linz, Dept Cooperat Informat Syst, Altenbergerstr 69, A-4040 Linz, Austria.
   [Mitsch, Stefan; Platzer, Andre] Carnegie Mellon Univ, Comp Sci Dept, Pittsburgh, PA 15213 USA.
C3 Johannes Kepler University Linz; Carnegie Mellon University
RP Müller, A (corresponding author), Johannes Kepler Univ Linz, Dept Cooperat Informat Syst, Altenbergerstr 69, A-4040 Linz, Austria.; Mitsch, S (corresponding author), Carnegie Mellon Univ, Comp Sci Dept, Pittsburgh, PA 15213 USA.
EM andreas.mueller@jku.at; smitsch@cs.cmu.edu;
   werner.retschitzegger@jku.at; wieland.schwinger@jku.at;
   aplatzer@cs.cmu.edu
RI Platzer, André/J-2507-2014
OI Platzer, André/0000-0001-7238-5710; Muller, Andreas/0000-0003-2127-7335
FU Johannes Kepler University Linz; Austrian Science Fund (FWF) [P28187]
   Funding Source: Austrian Science Fund (FWF)
FX Open access funding provided by Johannes Kepler University Linz.
CR [Anonymous], LOGICAL METHODS COMP
   [Anonymous], 1993, Hybrid Systems, DOI [DOI 10.1007/3-540-57318-6_30, DOI 10.1007/3-540, DOI 10.1007/3-540-57318-6, 10.1007/3-540-57318-6_30]
   [Anonymous], 150301 OMG
   Astefanoaei Lacramioara, 2016, Theory and Practice of Formal Methods. Essays Dedicated to Frank de Boer on the Occasion of His 60th Birthday. LNCS 9660, P88, DOI 10.1007/978-3-319-30734-3_8
   Benveniste A, 2008, LECT NOTES COMPUT SC, V5382, P200, DOI 10.1007/978-3-540-92188-2_9
   Benvenuti L, 2014, INT J ROBUST NONLIN, V24, P699, DOI 10.1002/rnc.2914
   Bornot Sebastien., 1998, LECT NOTES COMPUT SC, V1386, P49
   Cong XY, 2013, 2013 SEVENTH INTERNATIONAL CONFERENCE ON INNOVATIVE MOBILE AND INTERNET SERVICES IN UBIQUITOUS COMPUTING (IMIS 2013), P122, DOI 10.1109/IMIS.2013.29
   Cuijpers PJL, 2005, J LOGIC ALGEBR PROGR, V62, P191, DOI 10.1016/j.jlap.2004.02.001
   Damm W, 2010, LECT NOTES COMPUT SC, V6200, P96, DOI 10.1007/978-3-642-13754-9_6
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Felty A., 2015, LECT NOTES COMPUTER, V9195
   Frehse G, 2004, IEEE DECIS CONTR P, P479, DOI 10.1109/CDC.2004.1428676
   Fulton N, 2015, LECT NOTES ARTIF INT, V9195, P527, DOI 10.1007/978-3-319-21401-6_36
   Girard A, 2007, IEEE T AUTOMAT CONTR, V52, P782, DOI 10.1109/TAC.2007.895849
   Gössler G, 2005, SCI COMPUT PROGRAM, V55, P161, DOI 10.1016/j.scico.2004.05.014
   Henzinger T. A., 2001, Hybrid Systems: Computation and Control. 4th International Workshop, HSCC 2001. Proceedings (Lecture Notes in Computer Science Vol.2034), P275
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   Loos Sarah M., 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P42, DOI 10.1007/978-3-642-21437-0_6
   Loos SM, 2016, PROCEEDINGS OF THE 31ST ANNUAL ACM-IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE (LICS 2016), P505, DOI 10.1145/2933575.2934555
   Lunel S, 2017, INT CONF APPL CONCUR, P19, DOI 10.1109/ACSD.2017.16
   Lynch N, 2003, INFORM COMPUT, V185, P105, DOI 10.1016/S0890-5401(03)00067-1
   Man KL, 2005, INT J SOFTW ENG KNOW, V15, P299, DOI 10.1142/S0218194005002385
   Mitsch S, 2017, INT J ROBOT RES, V36, P1312, DOI 10.1177/0278364917733549
   Mitsch S, 2016, FORM METHOD SYST DES, V49, P33, DOI 10.1007/s10703-016-0241-z
   Muller A, 2017, LECT NOTES COMPUT SC, V10202, P134, DOI 10.1007/978-3-662-54494-5_8
   Müller A, 2016, LECT NOTES COMPUT SC, V9681, P441, DOI 10.1007/978-3-319-33693-0_28
   Müller A, 2015, IEEE INT C INTELL TR, P757, DOI 10.1109/ITSC.2015.128
   Muller A., 2017, EPIC SERIES COMPUTIN, V48, P65
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Platzer A, 2018, LOGIC COMPUTER SCI
   Platzer A, 2008, J AUTOM REASONING, V41, P143, DOI 10.1007/s10817-008-9103-8
   Platzer A, 2017, J AUTOM REASONING, V59, P219, DOI 10.1007/s10817-016-9385-1
   Platzer A, 2015, LECT NOTES ARTIF INT, V9195, P467, DOI 10.1007/978-3-319-21401-6_32
   Platzer A, 2012, IEEE S LOG, P541, DOI 10.1109/LICS.2012.64
   Platzer A, 2012, IEEE S LOG, P13, DOI 10.1109/LICS.2012.13
   Platzer A, 2009, LECT NOTES COMPUT SC, V5885, P246, DOI 10.1007/978-3-642-10373-5_13
   Platzer A, 2010, J LOGIC COMPUT, V20, P309, DOI 10.1093/logcom/exn070
   Ramon R. H, 2003, LECT NOTES COMPUTER
   Rounds WC, 2003, LECT NOTES COMPUT SC, V2623, P435
   Ruchkin I, 2015, 2015 18TH INTERNATIONAL ACM SIGSOFT SYMPOSIUM ON COMPONENT-BASED SOFTWARE ENGINEERING (CBSE), P65, DOI 10.1145/2737166.2737167
   Schreiter L, 2014, 2014 EUROPEAN CONTROL CONFERENCE (ECC), P2310, DOI 10.1109/ECC.2014.6862231
   Song H, 2006, ELECTRON NOTES THEOR, V145, P167, DOI 10.1016/j.entcs.2005.10.011
NR 43
TC 12
Z9 12
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2018
VL 20
IS 6
SI SI
BP 615
EP 643
DI 10.1007/s10009-018-0502-9
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GV9OI
UT WOS:000446488000002
OA hybrid
DA 2024-07-18
ER

PT J
AU Pantelic, V
   Postma, S
   Lawford, M
   Jaskolka, M
   Mackenzie, B
   Korobkine, A
   Bender, M
   Ong, J
   Marks, G
   Wassyng, A
AF Pantelic, Vera
   Postma, Steven
   Lawford, Mark
   Jaskolka, Monika
   Mackenzie, Bennett
   Korobkine, Alexandre
   Bender, Marc
   Ong, Jeff
   Marks, Gordon
   Wassyng, Alan
TI Software engineering practices and Simulink: bridging the gap
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model-based development; Simulink; Tools; Software engineering;
   Refactoring; Model transformation; Data flow; Model slicing
AB Although widely used in embedded systems design, Matlab/Simulink is not considered a state-of-the-art design environment by the software engineering community. This paper is aimed at improving design with Simulink from the software engineering perspective by developing automated support for the application of some traditional software engineering principles when developing with Simulink. We present four tools: the Signature Tool, the Reach/Coreach Tool, the Data Store Rescope Tool, and the Auto Layout Tool. The Signature Tool extracts the interface of a Simulink subsystem, enabling developers to better understand the implicit data flow in Simulink models and use it more effectively, while also producing useful documentation. The Data Store Rescope Tool improves modularity of Simulink models by properly scoping data stores, the Simulink equivalent of variables in traditional languages. The Reach/Coreach Tool highlights data and control dependencies in Simulink models, making them easier to understand. Also, the tool supports debugging, reverse-engineering, refactoring, and static analysis of the models. Finally, the Auto Layout Tool automatically improves the layout of Simulink models, reducing the effort developers invest in graphical layout to comply with modeling guidelines and improve readability of their models.
C1 [Pantelic, Vera; Postma, Steven; Lawford, Mark; Jaskolka, Monika; Mackenzie, Bennett; Korobkine, Alexandre; Bender, Marc; Ong, Jeff; Marks, Gordon; Wassyng, Alan] McMaster Univ, Dept Comp & Software, McMaster Ctr Software Certificat, Hamilton, ON, Canada.
C3 McMaster University
RP Pantelic, V (corresponding author), McMaster Univ, Dept Comp & Software, McMaster Ctr Software Certificat, Hamilton, ON, Canada.
EM pantelv@mcmaster.ca; steven.m.postma@gmail.com; lawford@mcmaster.ca;
   bialym2@mcmaster.ca; mackeb@mcmaster.ca; korobkao@gmail.com;
   marc.mb.bender@gmail.com; ongjf2@mcmaster.ca; marksgw@mcmaster.ca;
   wassyng@mcmaster.ca
RI Jaskolka, Monika/AAA-9415-2022
OI Jaskolka, Monika/0000-0001-5853-6412
CR [Anonymous], J SOFTW ENG APPL
   [Anonymous], 2013, P INT C QUAL SOFTW A
   Bender M, 2015, SCI COMPUT PROGRAM, V113, P29, DOI 10.1016/j.scico.2015.07.005
   Bender M, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P119
   Chang-qing Chen, 2010, 2010 IEEE International Conference on Mechatronics and Automation (ICMA), P1454, DOI 10.1109/ICMA.2010.5589162
   Feher P., 2013, COSMOS, V2013, P39
   GANSNER ER, 1993, IEEE T SOFTWARE ENG, V19, P214, DOI 10.1109/32.221135
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Hunt A, 2002, IEEE SOFTWARE, V19, P11, DOI 10.1109/52.976935
   Klauske Lars Kristian, 2012, Diagrammatic Representation and Inference. Proceedings 7th International Conference, Diagrams 2012, P65, DOI 10.1007/978-3-642-31223-6_11
   Klauske L.K., 2010, P MATH WORKS AUT C M
   Pantelic V, 2015, MODELSWARD 2015 PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P50
   Quante J., 2013, SOFTWARETECHNIK TREN, V33
   Rau A., 2002, Gesellschaft fur Informatik, FG, V2, P12
   Reicherdt R, 2012, PROC INT CONF SOFTW, P551, DOI 10.1109/ICSE.2012.6227161
   Smith AR, 2011, PROCEEDINGS OF THE PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON COMPILERS, ARCHITECTURES AND SYNTHESIS FOR EMBEDDED SYSTEMS (CASES '11), P205
   The MathWorks, 2015, CONTR ALG MOD GUID U
   Tran QuangMinh., 2013, P 8 INT C SOFTWARE E, P140
NR 18
TC 15
Z9 18
U1 2
U2 10
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD FEB
PY 2018
VL 20
IS 1
BP 95
EP 117
DI 10.1007/s10009-017-0450-9
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FT7PX
UT WOS:000423346100006
DA 2024-07-18
ER

PT J
AU Hendriks, M
   Verriet, J
   Basten, T
   Theelen, B
   Brassé, M
   Somers, L
AF Hendriks, Martijn
   Verriet, Jacques
   Basten, Twan
   Theelen, Bart
   Brasse, Marco
   Somers, Lou
TI Analyzing execution traces: critical-path analysis and distance analysis
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Model-based design; Execution trace; Critical path; Metric;
   Visualization
ID DESIGN-SPACE EXPLORATION; EMBEDDED SYSTEMS; ALGORITHM
AB System designers make trade-offs between metrics of interest such as execution time, functional quality and cost to create a properly balanced system. Execution traces, which are sequences of timestamped start and end events of system tasks, are a general and powerful means to understand the system behavior that gives rise to these trade-offs. Such traces can be produced by, e.g., executable models or prototype systems. Their interpretation, however, often is non-trivial. We present two automated analysis techniques that work on execution traces to help the system designer with interpretation. First, critical-path analysis can be used to answer the typical "what is the bottleneck" question, and we extend earlier work of [16] with a technique that uses application information to refine the analysis. Second, we define a pseudo-metric on execution traces, which is useful for calibration and validation purposes, and which can be used to visualize the differences between traces. Both techniques are based on a common graph representation of execution traces. We have implemented our techniques in the Trace visualization tool [12], and have applied them in a case study from the digital printing domain.
C1 [Hendriks, Martijn; Verriet, Jacques; Basten, Twan; Theelen, Bart] TNO, Embedded Syst Innovat, Eindhoven, Netherlands.
   [Basten, Twan; Somers, Lou] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Brasse, Marco; Somers, Lou] Oce Technol BV, Venlo, Netherlands.
C3 Netherlands Organization Applied Science Research; Eindhoven University
   of Technology; Oce-Technologies BV
RP Hendriks, M (corresponding author), TNO, Embedded Syst Innovat, Eindhoven, Netherlands.
EM martijn.hendriks@tno.nl
RI Basten, Twan/ABG-3430-2021; Theelen, Bart/GPP-7033-2022
OI Basten, Twan/0000-0002-2274-7274; Verriet, Jacques/0000-0002-8781-3383
FU Netherlands Ministry of Economic Affairs; ARTEMIS [621439]
FX We thank the anonymous reviewers for their valuable comments that helped
   us to improve the paper. The research is partially carried out as part
   of the Octo+ program under the responsibility of Embedded Systems
   Innovation by TNO (TNO-ESI) with Oce Technologies B.V. as the carrying
   industrial partner. The Octo+ research is supported by the Netherlands
   Ministry of Economic Affairs. The research reported in this paper is
   also partially supported by the ARTEMIS joint undertaking under Grant
   Agreement No. 621439 (ALMARVI).
CR Aho A. V., 1972, SIAM Journal on Computing, V1, P131, DOI 10.1137/0201008
   Barford P, 2000, ACM SIGCOMM COMP COM, V30, P127, DOI 10.1145/347057.347416
   Basten T, 2010, LECT NOTES COMPUT SC, V6415, P90, DOI 10.1007/978-3-642-16558-0_10
   Cormen T.H., 1990, Introduction to Algorithms
   Gao XB, 2010, PATTERN ANAL APPL, V13, P113, DOI 10.1007/s10044-008-0141-y
   Goldratt E.M., 1997, CRITICAL CHAIN
   Hendriks M, 2016, INT J SOFTW TOOLS TE, V18, P21, DOI 10.1007/s10009-014-0340-3
   Hollingsworth J.K., 1996, 1 ACM SIGMETRICS S P
   Kastor A, 2009, INT J PROJ MANAG, V27, P493, DOI 10.1016/j.ijproman.2008.08.006
   Kelley J.E., 1959, E JOINT IRE AIEE ACM
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Lockyer K.G., 1964, INTRO CRITICAL PATH
   Luo J., 2002, ASP DAC
   NAKATSU N, 1982, ACTA INFORM, V18, P171, DOI 10.1007/BF00264437
   Pimentel AD, 2008, J SIGNAL PROCESS SYS, V50, P99, DOI 10.1007/s11265-007-0085-2
   Pinedo M., 2002, SCHEDULING THEORY AL
   van der Aalst WMP, 2003, DATA KNOWL ENG, V47, P237, DOI 10.1016/S0169-023X(03)00066-1
   WIEST JD, 1964, OPER RES, V12, P395, DOI 10.1287/opre.12.3.395
   Wu M.-Y., 1990, IEEE Transactions on Parallel and Distributed Systems, V1, P330, DOI 10.1109/71.80160
   WU S, 1990, INFORM PROCESS LETT, V35, P317, DOI 10.1016/0020-0190(90)90035-V
   Yang Y, 2010, DES AUT TEST EUROPE, P1041
   Zeng Z., 2009, Proc. VLDB Endow., V2, P25, DOI [10.14778/1687627.1687631, DOI 10.14778/1687627.1687631]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 35
TC 6
Z9 7
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2017
VL 19
IS 4
BP 487
EP 510
DI 10.1007/s10009-016-0436-z
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ5UW
UT WOS:000404785500007
DA 2024-07-18
ER

PT J
AU Falcone, Y
   Jaber, M
AF Falcone, Ylies
   Jaber, Mohamad
TI Fully automated runtime enforcement of component-based systems with
   formal and sound recovery
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Runtime enforcement; Component-based systems; Monitoring; k-step
   enforceability; BIP
ID VERIFICATION
AB We introduce runtime enforcement of specifications on component-based systems (CBS) modeled in the behavior, interaction and priority (BIP) framework. Runtime enforcement is an increasingly popular and effective dynamic validation technique aiming to ensure the correct runtime behavior (w.r.t. a formal specification) of a system using a so-called enforcement monitor. BIP is a powerful and expressive component-based framework for the formal construction of heterogeneous systems. Because of BIP expressiveness, however, it is difficult to enforce complex behavioral properties at design-time. We first introduce a theoretical runtime enforcement framework for component-based systems where we delineate a hierarchy of enforceable properties (i.e., properties that can be enforced) according to the number of observational steps a system is allowed to deviate from the property (i.e., the notion of k-step enforceability). To ensure the observational equivalence between the correct executions of the initial system and the monitored system, we show that (i) only stutter-invariant properties should be enforced on CBS with our monitors, and (ii) safety properties are 1-step enforceable. Second, given an abstract enforcement monitor for some 1-step enforceable property, we define a series of formal transformations to instrument (at relevant locations) a CBS described in the BIP framework to integrate the monitor. At runtime, the monitor observes and automatically avoids any error in the behavior of the system w.r.t. the property. Third, our approach is fully implemented in RE-BIP, an available tool integrated in the BIP tool suite. Fourth, to validate our approach, we use RE-BIP to (i) enforce deadlock-freedom on a dining philosophers benchmark, and (ii) ensure the correct placement of robots on a map.
C1 [Falcone, Ylies] Univ Grenoble Alpes, Inria, LIG, F-38000 Grenoble, France.
   [Jaber, Mohamad] Amer Univ Beirut, CMPS, Beirut, Lebanon.
C3 Inria; Communaute Universite Grenoble Alpes; Institut National
   Polytechnique de Grenoble; Universite Grenoble Alpes (UGA); Centre
   National de la Recherche Scientifique (CNRS); American University of
   Beirut
RP Falcone, Y (corresponding author), Univ Grenoble Alpes, Inria, LIG, F-38000 Grenoble, France.
EM ylies.falcone@imag.fr; mj54@aub.edu.lb
OI Jaber, Mohamad/0000-0003-2457-9742
FU COST [ARVI IC1402]; COST (European Cooperation in Science and
   Technology); University Research Board (URB) at American University of
   Beirut
FX The work reported in this article has been done in the context of the
   COST Action ARVI IC1402, supported by COST (European Cooperation in
   Science and Technology). The work presented in this paper is supported
   by the University Research Board (URB) at American University of Beirut.
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], 2010, P INT WORKSH FORM AS
   [Anonymous], INTRO DISCRETE EVENT
   [Anonymous], LNCS
   Arora A, 1998, INT CON DISTR COMP S, P436, DOI 10.1109/ICDCS.1998.679772
   Basin D, 2013, ACM T INFORM SYST SE, V16, DOI 10.1145/2487222.2487225
   Basu A, 2011, IEEE SOFTWARE, V28, P41, DOI 10.1109/MS.2011.27
   Bauer A, 2016, FORM METHOD SYST DES, V48, P46, DOI [10.1007/978-3-642-32759-9_10, 10.1007/s10703-016-0253-8]
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   Ben Said N, 2014, LECT NOTES COMPUT SC, V8415, P1, DOI 10.1007/978-3-642-54848-2_1
   Bensalem S, 2011, LECT NOTES COMPUT SC, V6617, P453, DOI 10.1007/978-3-642-20398-5_32
   Bensalem S, 2009, LECT NOTES COMPUT SC, V5643, P614, DOI 10.1007/978-3-642-02658-4_45
   Bliudze S, 2008, LECT NOTES COMPUT SC, V5201, P508, DOI 10.1007/978-3-540-85361-9_39
   Bliudze S, 2008, IEEE T COMPUT, V57, P1315, DOI 10.1109/TC.2008.26
   Bonakdarpour Borzoo, 2012, Stabilization, Safety, and Security of Distributed Systems. Proceedings of the 14th International Symposium, SSS 2012, P314, DOI 10.1007/978-3-642-33536-5_31
   Bonakdarpour B, 2012, DISTRIB COMPUT, V25, P383, DOI 10.1007/s00446-012-0168-6
   Bouhadiba T., 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P309
   Boyer F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P13, DOI 10.1109/ICSE.2013.6606547
   Bozga Marius, 2012, Software Composition. Proceedings 11th International Conference, SC 2012, P1, DOI 10.1007/978-3-642-30564-1_1
   Charafeddine H, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1789, DOI 10.1145/2695664.2695879
   Chatzieleftheriou George, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P341, DOI 10.1007/978-3-642-28891-3_32
   Colombo C, 2014, LECT NOTES COMPUT SC, V8734, P140, DOI 10.1007/978-3-319-11164-3_12
   Falcone Ylies, 2012, International Journal on Software Tools for Technology Transfer, V14, P349, DOI 10.1007/s10009-011-0196-8
   Falcone Y., 2013, SOSYM
   Falcone Y, 2015, DISCRETE EVENT DYN S, V25, P531, DOI 10.1007/s10626-014-0196-4
   Falcone Y, 2014, LECT NOTES COMPUT SC, V8461, P66, DOI 10.1007/978-3-662-43613-4_5
   Falcone Y, 2010, LECT NOTES COMPUT SC, V6418, P89, DOI 10.1007/978-3-642-16612-9_9
   Falcone Y, 2011, FORM METHOD SYST DES, V38, P223, DOI 10.1007/s10703-011-0114-4
   Falcone Y, 2009, LECT NOTES COMPUT SC, V5779, P40, DOI 10.1007/978-3-642-04694-0_4
   Gueye SMK, 2013, LECT NOTES COMPUT SC, V7890, P75, DOI 10.1007/978-3-642-38493-6_6
   Guillet S., 2012, 2012 22nd International Conference on Field Programmable Logic and Applications (FPL), P703, DOI 10.1109/FPL.2012.6339157
   Havelund K, 2008, LECT NOTES COMPUT SC, V4171, P374
   Kouchnarenko O, 2014, LECT NOTES COMPUT SC, V8348, P234, DOI 10.1007/978-3-319-07602-7_15
   Ligatti J, 2009, ACM T INFORM SYST SE, V12, DOI 10.1145/1455526.1455532
   MANNA Z, 1990, PROCEEDINGS OF THE NINTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P377, DOI 10.1145/93385.93442
   Matteucci I, 2007, ELECTRON NOTES THEOR, V186, P101, DOI 10.1016/j.entcs.2007.03.025
   Pinisetty S, 2014, 12 INT WORKSH DISCR, P420
   Pinisetty S, 2014, FORM METHOD SYST DES, V45, P381, DOI 10.1007/s10703-014-0215-y
   Pnueli A, 2006, LECT NOTES COMPUT SC, V4085, P573
   Renard M, 2015, LECT NOTES COMPUT SC, V9399, P542, DOI 10.1007/978-3-319-25150-9_31
   Schneider F. B., 2000, ACM Transactions on Information and Systems Security, V3, P30, DOI 10.1145/353323.353382
   Wen Q, 2008, IEEE T AUTOMAT CONTR, V53, P1839, DOI 10.1109/TAC.2008.929388
   Wilke T, 1999, LECT NOTES COMPUT SC, V1563, P32
NR 43
TC 7
Z9 7
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD JUN
PY 2017
VL 19
IS 3
BP 341
EP 365
DI 10.1007/s10009-016-0413-6
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EU4DY
UT WOS:000400981200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Su, W
   Abrial, JR
AF Su, Wen
   Abrial, Jean-Raymond
TI Aircraft landing gear system: approaches with Event-B to the modeling of
   an industrial system
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 4th International Conference on Abstract State Machines, Alloy, B,
   TLA,VDM, and Z (ABZ)
CY JUN 02-06, 2014
CL Toulouse, FRANCE
SP Airbus, CNES, CNRS, CRITT Informatique, CS, ENSEEIHT Toulouse, FME, INP Toulouse, IRIT, Midi Pyrenees Regi, ONERA, SCCH, Univ Paul Sabatier Toulouse
DE Event-B; Modeling; Industrial case study; Reachability
AB This paper describes the modeling, done using the Event-B notation, of the aircraft landing gear case study that was proposed in a special track of the ABZ'2014 Conference. In the course of our development, we discovered some problems in our initial modeling approach. This has led us to propose a second approach and then a third one. Each approach is more efficient than the previous one in terms of proof obligations (roughly speaking: 2000, 1000, 500). All this will be described in this paper. The methodology of proving reachability and deadlock freeness are discussed. Animation and simulation are used as complementary analysis to formal proofs. We also try to go beyond this specific case study and give some thoughts about large industrial modeling.
C1 [Su, Wen] Shanghai Univ, Sch Comp Engn & Sci, Shanghai, Peoples R China.
C3 Shanghai University
RP Su, W (corresponding author), Shanghai Univ, Sch Comp Engn & Sci, Shanghai, Peoples R China.
EM wsu@shu.edu.cn
FU Science and Technology Commission of Shanghai Municipality
   [15YF1403900]; Open Project of Shanghai Key Laboratory of Trustworthy
   Computing [07dz22304201303]; National Natural Science Foundation of
   China [61402176]
FX Wen Su was supported in part by the Science and Technology Commission of
   Shanghai Municipality (Grant No. 15YF1403900), the Open Project of
   Shanghai Key Laboratory of Trustworthy Computing (Grant No.
   07dz22304201303) and National Natural Science Foundation of China (Grant
   No. 61402176).
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   Abrial Jean-Raymond, 2012, FORMALIZING HYBRID S, P178, DOI [10.1007/978-3-642-30885-7_13, DOI 10.1007/978-3-642-30885-7_13]
   Abrial JR, 1998, LECT NOTES COMPUT SC, V1393, P83
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], 1995, Temporal verification of reactive systems-safety
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   Barrett C. W., 2005, LECT NOTES COMPUTER, V357
   Boniol F., 2014, COMMUNICATIONS COMPU, V433
   Boström P, 2010, LECT NOTES COMPUT SC, V6396, P74, DOI 10.1007/978-3-642-16265-7_7
   Bozzano M, 2005, LECT NOTES COMPUT SC, V3576, P335
   Cansell D, 2007, LECT NOTES COMPUT SC, V4355, P140
   Fritzson P, 1998, P 12 EUR C OBJ OR PR, P67, DOI DOI 10.1007/BFB0054087
   Furst A, 2014, LECT NOTES COMPUT SC, V8739, P323, DOI 10.1007/978-3-319-10181-1_20
   Hallerstede S., 2013, SCI COMPUT PROGRAM, P36
   Hallerstede S, 2014, SCI COMPUT PROGRAM, V82, P2, DOI 10.1016/j.scico.2013.03.008
   Hallerstede S, 2011, THEOR PRACT LOG PROG, V11, P767, DOI 10.1017/S1471068411000299
   Hoang TS, 2009, SCI COMPUT PROGRAM, V74, P879, DOI 10.1016/j.scico.2009.07.006
   Hudon S, 2011, ELECTRON NOTES THEOR, V280, P57, DOI 10.1016/j.entcs.2011.11.018
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   MANNA Z, 1984, SCI COMPUT PROGRAM, V4, P257, DOI 10.1016/0167-6423(84)90003-0
   Mery D., 2011, P 2 S INF COMM TECHN, P179, DOI DOI 10.1145/2069216.2069252
   Otter M, 2009, P 7 INT MOD C COM IT, P364
   Said MY, 2009, LECT NOTES COMPUT SC, V5850, P579, DOI 10.1007/978-3-642-05089-3_37
   Sarshogh Mohammad Reza, 2011, ECEASST, V46
   Savicks V., 2014, ABZ 2014 LANDING GEA, V433, P148, DOI [10.1007/978-3-319-07512-9_11, DOI 10.1007/978-3-319-07512-9_11]
   Su W., 2012, ICFEM, P230
   SU W, 2015, AIRCRAFT LANDING
   Hoang TS, 2011, LECT NOTES COMPUT SC, V6991, P456, DOI 10.1007/978-3-642-24559-6_31
   Hoang TS, 2013, SOFTW SYST MODEL, V12, P229, DOI 10.1007/s10270-010-0183-7
   Voisin L, 2014, LECT NOTES COMPUT SC, V8477, P1, DOI 10.1007/978-3-662-43652-3_1
   WEN S, 2011, REQ DEV METH EX, P437
   Yeganefard S., 2010, 2 NASA FORMAL METHOD, P182
NR 34
TC 15
Z9 15
U1 0
U2 9
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2017
VL 19
IS 2
BP 141
EP 166
DI 10.1007/s10009-015-0400-3
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA EQ6BQ
UT WOS:000398167200002
DA 2024-07-18
ER

PT J
AU Teodorov, C
   Dhaussy, P
   Le Roux, L
AF Teodorov, Ciprian
   Dhaussy, Philippe
   Le Roux, Luka
TI Environment-driven reachability for timed systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article; Proceedings Paper
CT 4th International Conference on Abstract State Machines, Alloy, B,
   TLA,VDM, and Z (ABZ)
CY JUN 02-06, 2014
CL Toulouse, FRANCE
SP Airbus, CNES, CNRS, CRITT Informatique, CS, ENSEEIHT Toulouse, FME, INP Toulouse, IRIT, Midi Pyrenees Regi, ONERA, SCCH, Univ Paul Sabatier Toulouse
DE Formal verification; Context-aware verification; Reachability analysis
ID MODEL
AB With an ever increasing complexity, the verification of critical embedded systems is a challenging and expensive task. Among the available formal methods, model checking offers a high level of automation and would thus lower the cost of this process. But, the scalability of this technique is hindered by the state-space explosion problem, which fuelled the research community since its inception. To address this challenge, in the case of real size systems, the theoretical, the methodological and the algorithmic axes have to be integrated. The context-aware verification (CaV) strives to do this by focusing on the identification, the isolation and the reification of the environment surrounding the studied system. It enables the use of specific algorithms with a major, positive, impact on the scalability of model checking. In this paper, we apply this technique to study a Landing Gear System (LGS) in the presence of failures. The problem has been decomposed in 885 independent verification units (called contexts). The analysis of 163 of these contexts on a 64 GB computer unraveled a 20 TB state space with more than 2.2 billion states. Moreover, using this approach arbitrarily long scenarios have been analysed using less than 10 GB of memory.
C1 [Teodorov, Ciprian; Dhaussy, Philippe; Le Roux, Luka] ENSTA Bretagne, UEB, Lab STICC Lab UMR CNRS 6285, 2 Rue Francois Verny, F-29806 Brest, France.
C3 ENSTA Bretagne; Universite de Bretagne Occidentale
RP Teodorov, C (corresponding author), ENSTA Bretagne, UEB, Lab STICC Lab UMR CNRS 6285, 2 Rue Francois Verny, F-29806 Brest, France.
EM ciprian.teodorov@ensta-bretagne.fr
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], GENIE LOGICIEL
   [Anonymous], ADV SOFTWARE ENG
   [Anonymous], SPIN WORKSH
   [Anonymous], 1990, LICS, DOI DOI 10.1109/LICS.1990.113767
   [Anonymous], P INT WORKSH SMALLT
   [Anonymous], 1997, SPIN WORKSH 1997
   [Anonymous], EUR C EMB REAL TIM S
   [Anonymous], SPIN 03
   [Anonymous], 13 IEEE INT HIGH ASS
   [Anonymous], 2009, Res. Rep. RR-6925
   [Anonymous], 2009, DEP ELECT ENG COMPUT
   [Anonymous], EMBEDDED SYSTEMS THE
   [Anonymous], ENVIRONMENT DRIVEN
   [Anonymous], EMBEDDED REAL TIME S
   [Anonymous], 2014, CCIS, DOI DOI 10.1007/978-3-319-07512-9
   [Anonymous], 2013, EMBEDDED SYSTEMS ANA
   [Anonymous], 2014, OCL MODELS
   [Anonymous], DES AUT TEST EUR C E
   [Anonymous], 1991, Applications and Theory of Petri Nets, volume 483 of Lecture Notes in Computer Science
   Bengtsson J., 1996, Hybrid Systems III. Verification and Control, P232, DOI 10.1007/BFb0020949
   Berthomieu B, 2004, INT J PROD RES, V42, P2741, DOI [10.1080/00207540412331312688, 10.1080/00207540410001705257]
   Boniol F., 2014, CCIS, P1, DOI [10.1007/978-3-319-07512-9_1, DOI 10.1007/978-3-319-07512-9]
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Clarke EM, 1996, FORM METHOD SYST DES, V9, P77, DOI 10.1007/BF00625969
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Dhaussy P, 2009, LECT NOTES COMPUT SC, V5795, P438, DOI 10.1007/978-3-642-04425-0_34
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   Edelkamp S, 2008, LECT NOTES COMPUT SC, V5123, P530
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   INCOSE, 2015, INCOSE SYST ENG HDB
   Menad N, 2013, LECT NOTES COMPUT SC, V8137, P16, DOI 10.1007/978-3-642-40561-7_2
   Park S, 2006, LECT NOTES COMPUT SC, V3984, P905, DOI 10.1007/11751649_99
   Peled D., 1994, Computer Aided Verification. 6th International Conference, CAV '94. Proceedings, P377
   Queille JP, 2008, LECT NOTES COMPUT SC, V5000, P216
   Stern U, 1998, LECT NOTES COMPUT SC, V1427, P172, DOI 10.1007/BFb0028743
   Teodorov C, 2014, LECT NOTES COMPUT SC, V8748, P53, DOI 10.1007/978-3-319-11587-0_7
   Tkachuk O, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P116, DOI 10.1109/ASE.2003.1240300
   Valmari A., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P429
   Whittle J, 2006, LECT NOTES COMPUT SC, V3844, P290
   Yatake K, 2010, LECT NOTES COMPUT SC, V6349, P58
   Yu Y, 1999, LECT NOTES COMPUT SC, V1703, P54
NR 43
TC 7
Z9 7
U1 0
U2 3
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD APR
PY 2017
VL 19
IS 2
BP 229
EP 245
DI 10.1007/s10009-015-0401-2
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA EQ6BQ
UT WOS:000398167200006
DA 2024-07-18
ER

PT J
AU D'Argenio, P
   Legay, A
   Sedwards, S
   Traonouez, LM
AF D'Argenio, Pedro
   Legay, Axel
   Sedwards, Sean
   Traonouez, Louis-Marie
TI Smart sampling for lightweight verification of Markov decision processes
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Statistical model checking; Sampling; Nondeterminism
ID REAL APPLICATIONS; INEQUALITIES
AB Markov decision processes (MDP) are useful to model optimisation problems in concurrent systems. To verify MDPs with efficient Monte Carlo techniques requires that their nondeterminism be resolved by a scheduler. Recent work has introduced the elements of lightweight techniques to sample directly from scheduler space, but finding optimal schedulers by simple sampling may be inefficient. Here we describe "smart" sampling algorithms that can make substantial improvements in performance.
C1 [D'Argenio, Pedro] Univ Nacl Cordoba, RA-5000 Cordoba, Argentina.
   [Legay, Axel; Sedwards, Sean; Traonouez, Louis-Marie] Inria Rennes Bretagne Atlantique, Rennes, France.
C3 National University of Cordoba; Universite de Rennes
RP Legay, A (corresponding author), Inria Rennes Bretagne Atlantique, Rennes, France.
EM axel.legay@inria.fr
RI D'Argenio, Pedro R./R-7137-2019
OI D'Argenio, Pedro R./0000-0002-8528-9215
CR [Anonymous], 1998, The art of computer programming: Sorting and searching
   [Anonymous], 2005, THESIS CARNEGIE MELL
   [Anonymous], 2013, QUANTITATIVE EVALUAT, DOI DOI 10.1007/978-3-642-40196-1_12
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   BELLMAN R, 1966, SCIENCE, V153, P34, DOI 10.1126/science.153.3731.34
   Bianco A., 1995, Foundations of Software Technology and Theoretical Computer Science. 15th Conference. Proceedings, P499
   Bogdoll J, 2011, LECT NOTES COMPUT SC, V6722, P59, DOI 10.1007/978-3-642-21461-5_4
   Brázdil T, 2014, LECT NOTES COMPUT SC, V8837, P98, DOI 10.1007/978-3-319-11936-6_8
   Clarke EM, 2009, COMMUN ACM, V52, P75, DOI 10.1145/1592761.1592781
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Eisner C, 2003, LECT NOTES COMPUT SC, V2725, P27
   Geilen M. C. W., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00252-X
   Gerth R., 1995, INT C PROTOCOL SPECI, P3
   Giannakopoulou D, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P412, DOI 10.1109/ASE.2001.989841
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hartmanns Arnd, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P337, DOI 10.1007/978-3-642-38088-4_23
   Henriques D., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P84, DOI 10.1109/QEST.2012.19
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Horner WG., 1819, Philosophical Transactions of the Royal Society of London, V109, P308, DOI 10.1098/rstl.1819.0023
   ISRAELI A, 1990, PROCEEDINGS OF THE NINTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P119, DOI 10.1145/93385.93409
   Kearns M, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P1324, DOI 10.1023/A:1017932429737
   Kwiatkowska M., 2002, Process Algebra and Probabilistic Methods. Performance Modeling and Verification. Second Joint International Workshop PAPM-PROBMIV 2002 Proceedings (Lecture Notes in Computer Science Vol.2399), P169
   Kwiatkowska Marta, 2008, Performance Evaluation Review, V36, P17, DOI 10.1145/1481506.1481511
   Kwiatkowska M, 2007, LECT NOTES COMPUT SC, V4486, P220
   Kwiatkowska M, 2006, FORM METHOD SYST DES, V29, P33, DOI 10.1007/s10703-006-0005-2
   Kwiatkowska M, 2009, THEOR COMPUT SCI, V410, P1272, DOI 10.1016/j.tcs.2008.12.058
   Lassaigne R., 2012, SAC, P1314
   Legay A., 2014, LNCS
   Manna Z., 1995, Temporal verification of reactive systems: safety, V2
   Ndukwu U., 2010, P 8 WORKSH QUANT ASP
   OKAMOTO M, 1958, ANN I STAT MATH, V10, P29
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   WHITE DJ, 1988, INTERFACES, V18, P55, DOI 10.1287/inte.18.5.55
   WHITE DJ, 1993, J OPER RES SOC, V44, P1073, DOI 10.1038/sj/jors/0441103
   WHITE DJ, 1985, INTERFACES, V15, P73, DOI 10.1287/inte.15.6.73
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
NR 37
TC 26
Z9 26
U1 0
U2 2
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2015
VL 17
IS 4
BP 469
EP 484
DI 10.1007/s10009-015-0383-0
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM2BV
UT WOS:000357485500007
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Hartmanns, A
   Timmer, M
AF Hartmanns, Arnd
   Timmer, Mark
TI Sound statistical model checking for MDP using partial order and
   confluence reduction
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Statistical model checking; Simulation; Markov decision processes;
   Partial order reduction; Confluence reduction
ID APPROXIMATE
AB Statistical model checking (SMC) is an analysis method that circumvents the state space explosion problem in model-based verification by combining probabilistic simulation with statistical methods that provide clear error bounds. As a simulation-based technique, it can in general only provide sound results if the underlying model is a stochastic process. In verification, however, models are very often variations of nondeterministic transition systems. In classical exhaustive model checking, partial order reduction and confluence reduction allow the removal of spurious nondeterministic choices. In this paper, we show that both can be adapted to detect and discard such choices on-the-fly during simulation, thus extending the applicability of SMC to a subclass of Markov decision processes. We prove their correctness in a uniform way and study their effectiveness and efficiency using an implementation in the modes simulator for the Modest modelling language. The examples we use highlight the different strengths and limitations of the two approaches. We find that runtime may be affected by unnecessary recomputations, and thus also investigate the feasibility of caching results to speed up simulation at the cost of increased memory usage.
C1 [Hartmanns, Arnd] Univ Saarland, D-66123 Saarbrucken, Germany.
   [Timmer, Mark] Univ Twente, NL-7500 AE Enschede, Netherlands.
C3 Saarland University; University of Twente
RP Hartmanns, A (corresponding author), Univ Saarland, D-66123 Saarbrucken, Germany.
EM arnd@cs.uni-saarland.de
OI Hartmanns, Arnd/0000-0003-3268-8674
CR Agresti A, 1998, AM STAT, V52, P119, DOI 10.2307/2685469
   Andel TR, 2006, COMPUTER, V39, P48, DOI 10.1109/MC.2006.242
   [Anonymous], 2006, Simulation
   Baier C, 2004, INT CONF QUANT EVAL, P230
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Baier C, 2006, ELECTRON NOTES THEOR, V153, P97, DOI 10.1016/j.entcs.2005.10.034
   Blom S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P596
   Blom S.C.C., 2001, SENR0123 CWI
   Bogdoll Jonathan, 2012, Measurement, Modelling, and Evaluation of Computing Systems and Dependability and Fault Tolerance. Proceedings 16th International GI/ITG Conference (MMB & DFT 2012), P249, DOI 10.1007/978-3-642-28540-0_20
   Bogdoll J, 2011, LECT NOTES COMPUT SC, V6722, P59, DOI 10.1007/978-3-642-21461-5_4
   Brazdil T., 2014, ABS14022967 CORR
   Chaum D., 1988, Journal of Cryptology, V1, P65, DOI 10.1007/BF00206326
   D'Argenio PR, 2004, INT CONF QUANT EVAL, P240
   Evangelista Sami, 2010, International Journal on Software Tools for Technology Transfer, V12, P155, DOI 10.1007/s10009-010-0137-y
   Forejt V, 2011, LECT NOTES COMPUT SC, V6659, P53, DOI 10.1007/978-3-642-21455-4_3
   Giro S, 2009, LECT NOTES COMPUT SC, V5710, P338, DOI 10.1007/978-3-642-04081-8_23
   Godefroid P., 1996, Lecture Notes in Computer Science, V1032
   Groote J. F., 2000, Mathematical Foundations of Computer Science 2000. 25th International Symposium, MFCS 2000. Proceedings. (Lecture Notes in Computer Science Vol.1893), P383
   Hansen H., 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P203, DOI 10.1109/QEST.2011.35
   Hansen H, 2014, THEOR COMPUT SCI, V538, P103, DOI 10.1016/j.tcs.2013.07.014
   Hartmanns Arnd, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P337, DOI 10.1007/978-3-642-38088-4_23
   Hartmanns A, 2009, INT CONF QUANT EVAL, P187, DOI 10.1109/QEST.2009.41
   Hartmanns Arnd, 2014, LNCS, V8413, P593
   Henriques D., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P84, DOI 10.1109/QEST.2012.19
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lassaigne R., 2012, SAC, P1314
   Legay A., 2013, ABS13103609 CORR
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Mateescu R, 2012, SCI COMPUT PROGRAM, V77, P1075, DOI 10.1016/j.scico.2011.07.004
   Nimal V., 2010, THESIS OXFORD U
   Pace GJ, 2003, LECT NOTES COMPUT SC, V2725, P446
   Peled D., 1994, Computer Aided Verification. 6th International Conference, CAV '94. Proceedings, P377
   Peled D, 1996, FORM METHOD SYST DES, V8, P39, DOI 10.1007/BF00121262
   Timmer Mark, 2013, Formal Modeling and Analysis of Timed Systems. Proceedings of 11th International Conference (FORMATS 2013): LNCS 8053, P243, DOI 10.1007/978-3-642-40229-6_17
   Timmer M., 2013, THESIS U TWENTE NETH
   Timmer M, 2011, LECT NOTES COMPUT SC, V6605, P311, DOI 10.1007/978-3-642-19835-9_29
   VALMARI A, 1991, LECT NOTES COMPUT SC, V531, P156, DOI 10.1007/BFb0023729
   Younes H. L. S., 2006, International Journal on Software Tools for Technology Transfer, V8, P216, DOI 10.1007/s10009-005-0187-8
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
NR 41
TC 7
Z9 7
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2015
VL 17
IS 4
BP 429
EP 456
DI 10.1007/s10009-014-0349-7
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM2BV
UT WOS:000357485500005
OA Green Published
DA 2024-07-18
ER

PT J
AU Roohi, N
   Viswanathan, M
AF Roohi, Nima
   Viswanathan, Mahesh
TI Statistical model checking for unbounded until formulas
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Statistical model checking; Unbounded until; PCTL
AB Statistical model checking of unbounded time properties is challenging, because it requires an algorithm to estimate the measure of paths satisfying an unbounded until property from samples of finite length paths. In this paper, we survey all proposed algorithms for this problem, and critically evaluate them.
C1 [Roohi, Nima; Viswanathan, Mahesh] Univ Illinois, Champaign, IL 61820 USA.
C3 University of Illinois System; University of Illinois Urbana-Champaign
RP Viswanathan, M (corresponding author), Univ Illinois, Champaign, IL 61820 USA.
EM roohi2@illinois.edu; vmahesh@illinois.edu
FU Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [1329991] Funding Source: National Science Foundation
CR [Anonymous], 2005, THESIS CARNEGIE MELL
   Ballarini P., 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P143, DOI 10.1109/QEST.2011.24
   Basu S, 2009, LECT NOTES COMPUT SC, V5885, P326, DOI 10.1007/978-3-642-10373-5_17
   CHOW YS, 1965, ANN MATH STAT, V36, P457, DOI 10.1214/aoms/1177700156
   COURCOUBETIS C, 1995, J ASSOC COMPUT MACH, V42, P857, DOI 10.1145/210332.210339
   El Rabih D, 2009, LECT NOTES COMPUT SC, V5799, P120, DOI 10.1007/978-3-642-04761-9_11
   Forsythe GE., 1950, Mathematics of Computation, V4, P127, DOI [DOI 10.2307/2002508, 10.1090/S0025-5718-1950-0038138-X, DOI 10.1090/S0025-5718-1950-0038138-X, 10.2307/2002508]
   Grosu R, 2005, LECT NOTES COMPUT SC, V3440, P271
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   Hérault T, 2006, INT CONF QUANT EVAL, P129
   Hermanns H., 1999, 3 INT WORKSH NUM SOL, P188
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   IBE OC, 1990, IEEE J SEL AREA COMM, V8, P1649, DOI 10.1109/49.62852
   Jegourel C, 2012, LECT NOTES COMPUT SC, V7214, P498, DOI 10.1007/978-3-642-28756-5_37
   Lassaigne R., 2002, Process Algebra and Probabilistic Methods. Performance Modeling and Verification. Second Joint International Workshop PAPM-PROBMIV 2002 Proceedings (Lecture Notes in Computer Science Vol.2399), P213
   Lassaigne R, 2008, ANN PURE APPL LOGIC, V152, P122, DOI 10.1016/j.apal.2007.11.006
   Propp JG, 1996, RANDOM STRUCT ALGOR, V9, P223, DOI 10.1002/(SICI)1098-2418(199608/09)9:1/2<223::AID-RSA14>3.0.CO;2-O
   Sebastio S., 2013, 7 INT C VALUETOOLS 1, P310, DOI DOI 10.4108/ICST.VALUETOOLS.2013.254377
   Sen K, 2005, LECT NOTES COMPUT SC, V3576, P266
   Sen K, 2005, INT CONF QUANT EVAL, P251, DOI 10.1109/QEST.2005.42
   Sen K, 2004, LECT NOTES COMPUT SC, V3114, P202
   Vardi M. Y., 1985, 26th Annual Symposium on Foundations of Computer Science (Cat. No.85CH2224-4), P327, DOI 10.1109/SFCS.1985.12
   Younes H. L. S., 2006, International Journal on Software Tools for Technology Transfer, V8, P216, DOI 10.1007/s10009-005-0187-8
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
   Younes HLS, 2006, INFORM COMPUT, V204, P1368, DOI 10.1016/j.ic.2006.05.002
   Younes Hakan L. S., 2010, SBMF, P144
   Zapreev I.S, 2008, THESIS U TWENTE
NR 27
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2015
VL 17
IS 4
BP 417
EP 427
DI 10.1007/s10009-015-0368-z
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM2BV
UT WOS:000357485500004
DA 2024-07-18
ER

PT J
AU Zuliani, P
AF Zuliani, Paolo
TI Statistical model checking for biological applications
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Verification; Systems biology; Synthetic biology; Parameter estimation
ID SYSTEMS; SBML
AB In this paper, we survey recent work on the use of statistical model checking techniques for biological applications. We begin with an overview of the basic modelling techniques for biochemical reactions and their corresponding stochastic simulation algorithm-the Gillespie algorithm. We continue by giving a brief description of the relation between stochastic models and continuous (ordinary differential equation) models. Next, we present a literature survey, divided into two general areas. In the first area, we focus on works addressing verification of biological models, while in the second area we focus on papers tackling the parameter synthesis problem. We conclude with some open problems and directions for further research.
C1 Newcastle Univ, Sch Comp Sci, Newcastle Upon Tyne NE1 7RU, Tyne & Wear, England.
C3 Newcastle University - UK
RP Zuliani, P (corresponding author), Newcastle Univ, Sch Comp Sci, Newcastle Upon Tyne NE1 7RU, Tyne & Wear, England.
EM paolo.zuliani@ncl.ac.uk
CR [Anonymous], 2011, Stochastic modelling for systems biology
   [Anonymous], P 10 WORKSH QUANT AS
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Ballarini Paolo, 2012, Computational Methods in Systems Biology. Proceedings of the 10th International Conference, CMSB 2012, P29, DOI 10.1007/978-3-642-33636-2_4
   Ballarini P., 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P143, DOI 10.1109/QEST.2011.24
   Bartocci E, 2013, ELECTRON P THEOR COM, P3, DOI 10.4204/EPTCS.125.1
   Boyer Benoit, 2013, Quantitative Evaluation of Systems. 10th International Conference, QEST 2013. Proceedings: LNCS 8054, P160, DOI 10.1007/978-3-642-40196-1_12
   Brim Lubos, 2013, Formal Methods for Dynamical Systems. 13th International School on Formal Methods for the Design of Computer, Communication, and Software Systems, SFM 2013. Advanced Lectures, P63, DOI 10.1007/978-3-642-38874-3_3
   Calzone L, 2006, LECT NOTES COMPUT SC, V4220, P68
   Ceska M, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0094553
   Clarke EM, 2008, LECT N BIOINFORMAT, V5307, P231, DOI 10.1007/978-3-540-88562-7_18
   David Alexandre, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P388, DOI 10.1007/978-3-642-34026-0_29
   Donaldson R, 2008, LECT N BIOINFORMAT, V5307, P269, DOI 10.1007/978-3-540-88562-7_20
   Donze Alexandre, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P264, DOI 10.1007/978-3-642-39799-8_19
   Gao SC, 2012, IEEE S LOG, P305, DOI 10.1109/LICS.2012.41
   GILLESPIE DT, 1976, J COMPUT PHYS, V22, P403, DOI 10.1016/0021-9991(76)90041-3
   Gillespie DT, 2001, J CHEM PHYS, V115, P1716, DOI 10.1063/1.1378322
   GILLESPIE DT, 1992, PHYSICA A, V188, P404, DOI 10.1016/0378-4371(92)90283-V
   Hucka M, 2003, BIOINFORMATICS, V19, P524, DOI 10.1093/bioinformatics/btg015
   Jha SK, 2009, LECT N BIOINFORMAT, V5688, P218, DOI 10.1007/978-3-642-03845-7_15
   Jha Sumit Kumar, 2012, Int J Bioinform Res Appl, V8, P263, DOI 10.1504/IJBRA.2012.048964
   Jha SK, 2012, BMC BIOINFORMATICS, V13, DOI 10.1186/1471-2105-13-S5-S8
   Jha SK, 2011, THEOR COMPUT SCI, V412, P2162, DOI 10.1016/j.tcs.2011.01.012
   Keating SM, 2006, BIOINFORMATICS, V22, P1275, DOI 10.1093/bioinformatics/btl111
   Kitano H, 2004, NAT REV GENET, V5, P826, DOI 10.1038/nrg1471
   Koh CH, 2012, BMC BIOINFORMATICS, V13, DOI 10.1186/1471-2105-13-S17-S15
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   KURTZ TG, 1970, J APPL PROBAB, V7, P49, DOI 10.2307/3212147
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Palaniappan SK, 2013, LECT N BIOINFORMAT, V8130, P120, DOI 10.1007/978-3-642-40708-6_10
   Rathinam M, 2003, J CHEM PHYS, V119, P12784, DOI 10.1063/1.1627296
   RICHARDSON D, 1968, J SYMBOLIC LOGIC, V33, P514, DOI 10.2307/2271358
   Sankaranarayanan Sriram, 2012, Computational Methods in Systems Biology. Proceedings of the 10th International Conference, CMSB 2012, P322, DOI 10.1007/978-3-642-33636-2_19
   SCHIVO S, 2012, BIBE, P447
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
   Younes HLS, 2006, LECT NOTES COMPUT SC, V3855, P142
   Zhang F., 2008, IFAC Proceedings Volumes, V41, P7967, DOI [10.3182/20080706-5-KR-1001.01346, DOI 10.3182/20080706-5-KR-1001.01346]
   Zuliani P, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P243
NR 40
TC 14
Z9 14
U1 0
U2 5
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD AUG
PY 2015
VL 17
IS 4
BP 527
EP 536
DI 10.1007/s10009-014-0343-0
PG 10
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM2BV
UT WOS:000357485500010
DA 2024-07-18
ER

PT J
AU Marrone, S
   Flammini, F
   Mazzocca, N
   Nardone, R
   Vittorini, V
AF Marrone, Stefano
   Flammini, Francesco
   Mazzocca, Nicola
   Nardone, Roberto
   Vittorini, Valeria
TI Towards Model-Driven V&V assessment of railway control systems
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Verification and Validation; Critical Systems; Model-Driven; UML
   Profiles; Transformations; Railway Systems
AB Verification and Validation (V&V) activities aiming at certifying railway controllers are among the most critical and time-consuming in system development life cycle. As such, they would greatly benefit from novel approaches enabling both automation and traceability for assessment purposes. While several formal and Model-Based approaches have been proposed in the scientific literature, some of which are successfully employed in industrial settings, we are still far from an integrated and unified methodology which allows guiding design choices, minimizing the chances of failures/non-compliances, and considerably reducing the overall assessment effort. To address these issues, this paper describes a Model-Driven Engineering approach which is very promising to tackle the aforementioned challenges. In fact, the usage of appropriate Unified Modeling Language profiles featuring system analysis and test case specification capabilities, together with tool chains for model transformations and analysis, seems a viable way to allow end-users to concentrate on high-level holistic models and specification of non-functional requirements (i.e., dependability) and support the automation of the V&V process. We show, through a case study belonging to the railway signalling domain, how the approach is effective in supporting activities like system testing and availability evaluation.
C1 [Marrone, Stefano] Univ Naples 2, Dipartimento Matemat & Fis, Viale Lincoln 5, I-81100 Caserta, Italy.
   [Flammini, Francesco] AnsaldoSTS, I-80147 Naples, NA, Italy.
   [Mazzocca, Nicola; Nardone, Roberto; Vittorini, Valeria] Univ Naples Federico II, Dipartimento Ingn Elettr & Tecnol Informaz, Via Claudio 21, I-80125 Naples, Italy.
C3 Universita della Campania Vanvitelli; University of Naples Federico II
RP Nardone, R (corresponding author), Univ Naples Federico II, Dipartimento Ingn Elettr & Tecnol Informaz, Via Claudio 21, I-80125 Naples, Italy.
EM stefano.marrone@unina2.it; francesco.flammini@ansaldo-sts.com;
   nicola.mazzocca@unina.it; roberto.nardone@unina.it;
   valeria.vittorini@unina.it
RI Flammini, Francesco/C-1589-2008; nardone, roberto/AAM-4095-2021;
   Marrone, Stefano/AAC-4997-2021
OI Flammini, Francesco/0000-0002-2833-7196; nardone,
   roberto/0000-0003-4938-9216; Marrone, Stefano/0000-0003-1927-6173;
   Mazzocca, Nicola/0000-0002-0401-9687
CR [Anonymous], 2009, UML PROFILE MODELING
   [Anonymous], 1999, EN50126 CENELEC
   [Anonymous], 2012, VERSION 1 1 OMG DOCU
   [Anonymous], 2005, SCADE TECHNICAL MANU
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Asztalos Mark, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P15, DOI 10.1109/ICST.2010.42
   BAARIR S, 2009, SIGMETRICS PERFORM E, V36, P4
   Baker P., 2007, Model Driven Testing - Using the UML Testing Profile, VFirst
   Behm P, 1999, LECT NOTES COMPUT SC, V1708, P369
   Bernardi S, 2013, RELIAB ENG SYST SAFE, V120, P112, DOI 10.1016/j.ress.2013.06.032
   Bernardi Simona, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P15, DOI 10.1007/978-3-642-24270-0_2
   Bernardi S., 2009, J SOFTWARE SYSTEMS M
   Dai Z., 2004, P 2 EUR WORKSH MOD D
   Fantechi Alessandro, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P383, DOI 10.1007/978-3-642-24270-0_28
   Flammini Francesco, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies. Proceedings of the 5th International Symposium, ISoLA 2012, P190, DOI 10.1007/978-3-642-34032-1_20
   Fleurey F., 2004, 1 INT WORKSH MOD DES
   Fuentes-Fernandez L., 2004, UML MODEL ENG, V2
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   Gnesi S., 2012, FORMAL METHODS IND C
   Hong H S., 2001, Proceedings of FATES'01, Workshop on Formal Approaches to Testing of Software, volume NS-01-4 of BRICS Notes Series, P15
   Javed AbuZafer., 2007, AST, P3, DOI DOI 10.1109/AST.2007.2
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Lagarde Francois., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, ASE'07, P445
   Marrone S, 2010, LECT NOTES COMPUT SC, V6396, P215, DOI 10.1007/978-3-642-16265-7_16
   MARSAN M, MODELLING GEN STOCHA
   MAZZINI S, 2004, DASIA 2004 DATA SYST
   Mussa M, 2009, INT CONF QUAL SOFTW, P167, DOI 10.1109/QSIC.2009.30
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
   Zander J., 2011, MODEL BASED TESTING, P3
NR 31
TC 14
Z9 15
U1 0
U2 11
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD NOV
PY 2014
VL 16
IS 6
BP 669
EP 683
DI 10.1007/s10009-014-0320-7
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HV
UT WOS:000209673400003
DA 2024-07-18
ER

PT J
AU Bauer, O
   Geske, M
   Isberner, M
AF Bauer, Oliver
   Geske, Maren
   Isberner, Malte
TI Analyzing program behavior through active automata learning
SO INTERNATIONAL JOURNAL ON SOFTWARE TOOLS FOR TECHNOLOGY TRANSFER
LA English
DT Article
DE Program analysis; Model construction; Active automata learning;
   Verification
ID MODEL GENERATION; LTL
AB The objective of the RERS Challenge 2013 was to analyze program behavior with respect to given sets of LTL and reachability properties for a set of reactive programs. The programs in various sizes and complexities could be divided into three different categories, depending on the available information: from black-box (binary-only) to white-box (full source code) over a mixed form thereof (grey-box). In this paper we present our approach to tackling the challenge problems, which is based on active automata learning. This required extending automata learning algorithms to exploit the given information, and adapting them in order to overcome problem-specific obstacles. We describe general optimizations and discuss the achieved results.
C1 [Bauer, Oliver; Geske, Maren; Isberner, Malte] Dortmund Univ Technol, D-44227 Dortmund, Germany.
C3 Dortmund University of Technology
RP Bauer, O (corresponding author), Dortmund Univ Technol, D-44227 Dortmund, Germany.
EM oliver.bauer@uni-dortmund.de; maren.geske@cs.tu-dortmund.de;
   malte.isberner@cs.tu-dortmund.de
RI Isberner, Malte/AAF-7893-2020
OI Isberner, Malte/0000-0002-7704-5173
CR Aarts F., 2010, P 21 INT C CONC THEO, P71
   Aarts F, 2010, LECT NOTES COMPUT SC, V6415, P673, DOI 10.1007/978-3-642-16558-0_54
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   Bauer O, 2012, COMM COM INF SC, V255, P61
   Beyer D, 2014, INT J SOFTW TOOLS TE, V16, P507, DOI 10.1007/s10009-014-0334-1
   Cho C., 2011, 20 USENIX SEC S USEN
   Cho CY, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P426, DOI 10.1145/1866307.1866355
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   Clarke EM, 1999, MODEL CHECKING, P1
   EMERSON EA, 1985, J COMPUT SYST SCI, V30, P1, DOI 10.1016/0022-0000(85)90001-7
   Gastin P, 2001, LECT NOTES COMPUT SC, V2102, P53
   Giannakopoulou D, 2002, LECT NOTES COMPUT SC, V2529, P308
   Hagerer A, 2002, LECT NOTES COMPUT SC, V2306, P80
   Howar Falk, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P608, DOI 10.1007/978-3-642-34026-0_45
   Howar F., 2014, PASAREANU RIGOROUS E, DOI [10.1007/s10009-014-0337-y, DOI 10.1007/S10009-014-0337-Y]
   Howar F, 2011, LECT NOTES COMPUT SC, V6538, P263, DOI 10.1007/978-3-642-18275-4_19
   Hungar H, 2003, LECT NOTES COMPUT SC, V2725, P315
   Irfan M.N., 2010, MIIT, P11
   Isberner Malte, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P124, DOI 10.1007/978-3-642-38088-4_9
   Isberner M., 2013, MACH LEARN, P1
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kroening D, 2008, TEXTS THEOR COMPUT S, P1
   MALER O, 2014, LNCS, V8413, P485, DOI DOI 10.1007/978-3-642-54862-8
   Margaria T, 2004, INT HIGH LEVEL DESIG, P95, DOI 10.1109/HLDVT.2004.1431246
   McMillan KennethLauchlin., 1992, SYMBOLIC MODEL CHECK
   Merten M, 2011, LECT NOTES COMPUT SC, V6605, P220, DOI 10.1007/978-3-642-19835-9_18
   Morse J, 2014, INT J SOFTW TOOLS TE, V16, P519, DOI 10.1007/s10009-014-0335-0
   Müller-Olm M, 1999, LECT NOTES COMPUT SC, V1694, P330
   Nerode Anil, 1958, Proceedings of the American Mathematical Society, V9, P541, DOI [10.1090/S0002-9939-1958-0135681-9, DOI 10.1090/S0002-9939-1958-0135681-9]
   Niese O., 2003, THESIS U DORTMUND GE
   Peled D., 2002, Journal of Automata, Languages and Combinatorics, V7, P225
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Raffelt Harald, 2009, International Journal on Software Tools for Technology Transfer, V11, P393, DOI 10.1007/s10009-009-0111-8
   RIVEST RL, 1993, INFORM COMPUT, V103, P299, DOI 10.1006/inco.1993.1021
   Schordan M, 2014, INT J SOFTW TOOLS TE, V16, P493, DOI 10.1007/s10009-014-0338-x
   Shahbaz M, 2009, LECT NOTES COMPUT SC, V5850, P207, DOI 10.1007/978-3-642-05089-3_14
   Steffen Bernhard, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P341, DOI 10.1007/978-3-642-39176-7_21
   Steffen B., 2014, PROPERTY DRIVEN BENC, DOI [10.1007/s10009-014-0336-z(2014), DOI 10.1007/S10009-014-0336-Z]
   Steffen B, 2011, LECT NOTES COMPUT SC, V6659, P256, DOI 10.1007/978-3-642-21455-4_8
   van de Pol J, 2014, INT J SOFTW TOOLS TE, V16, P481, DOI 10.1007/s10009-014-0324-3
   Vardi M. Y., 1996, Logics for Concurrency. Structure versus Automata, P238
NR 42
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER HEIDELBERG
PI HEIDELBERG
PA TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY
SN 1433-2779
EI 1433-2787
J9 INT J SOFTW TOOLS TE
JI Int. J. Softw. Tools Technol. Transf.
PD OCT
PY 2014
VL 16
IS 5
BP 531
EP 542
DI 10.1007/s10009-014-0333-2
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA V43HU
UT WOS:000209673300007
DA 2024-07-18
ER

EF