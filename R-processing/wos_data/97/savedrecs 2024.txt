FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Wang, YZ
   Xie, F
   Yang, ZK
   Cocchini, P
   Yang, J
AF Wang, Yanzhao
   Xie, Fei
   Yang, Zhenkun
   Cocchini, Pasquale
   Yang, Jin
TI A Systematic Translation Validation Framework for MLIR-Based Compilers
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE MLIR; machine learning; translation validation; formal verification;
   compiler
AB This paper introduces an innovative translation validation framework designed for MLIR-based compilers, which has garnered considerable prominence in fields such as machine learning, high-performance computing and hardware design. Despite rigorous testing, compilers based on MLIR might still induce incorrect results and undefined behaviors, necessitating verification work. Our framework first takes a pair of MLIR programs as inputs and check their function signature's compatibility before encoding them into SMT expressions. Then it uses the Z3 SMT solver to check whether the target program refines the source program. Our framework transcends the dialect limitations of past solutions, thereby providing validation support to a wider range of MLIR-based compilers. We demonstrate its effectiveness through evaluations on prominent open-source MLIR-based compilers, where we identified bugs and undefined behaviors. We further demonstrate the capability of this framework by validating two practical deep-learning accelerator designs.
C1 [Wang, Yanzhao; Xie, Fei] Portland State Univ, Portland, OR 97201 USA.
   [Yang, Zhenkun; Cocchini, Pasquale; Yang, Jin] Intel Corp, Hillsboro, OR 97124 USA.
C3 Portland State University; Intel Corporation
RP Wang, YZ (corresponding author), Portland State Univ, Portland, OR 97201 USA.
EM wyanzhao@pdx.edu; xie@pdx.edu; zhenkun.yang@intel.com;
   pasquale.cocchini@intel.com; jin.yang@intel.com
CR Agostini Nicolas Bohm, 2022, CF '22: Proceedings of the 19th ACM International Conference on Computing Frontiers., P201, DOI 10.1145/3528416.3530866
   Bang S, 2022, LECT NOTES COMPUT SC, V13372, P386, DOI 10.1007/978-3-031-13188-2_19
   Cadar C, 2008, OSDI, V8, P209
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Eldridge S., 2021, WORKSH OP SOURC EDA
   github, Polymer
   github, Vta implementations in heterocl
   Kahan W., 1996, Lecture Notes on the Status of IEEE
   Lai YH, 2019, PROCEEDINGS OF THE 2019 ACM/SIGDA INTERNATIONAL SYMPOSIUM ON FIELD-PROGRAMMABLE GATE ARRAYS (FPGA'19), P242, DOI 10.1145/3289602.3293910
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/cgo.2004.1281665
   Lattner C, 2021, INT SYM CODE GENER, P2, DOI 10.1109/CGO51591.2021.9370308
   Leroy X., 2016, ERTS 2016, P1
   Lopes NP, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P65, DOI 10.1145/3453483.3454030
   Moses W. S., 2021, IMPACT, P12
   Pnueli A, 1998, LECT NOTES COMPUT SC, V1384, P151, DOI 10.1007/BFb0054170
   Seacord R. C., 2016, Queue, V14, P56
   Wang HY, 2023, IEEE INT CONF AUTOM, P1555, DOI 10.1109/ASE56229.2023.00120
   xilinx, Mlir-aie
   Ye HC, 2022, INT S HIGH PERF COMP, P741, DOI 10.1109/HPCA53966.2022.00060
   Yu PS, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P1552, DOI 10.1145/3597926.3605239
   Zhao J., 2024, P 2024 ACM SIGPLAN S, P1
   Zhao JZ, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P427
NR 22
TC 0
Z9 0
U1 0
U2 0
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 JUL 19
PY 2024
DI 10.1142/S021819402450030X
EA JUL 2024
PG 20
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ1C6
UT WOS:001272207700001
DA 2024-08-05
ER

PT J
AU Cao, YL
   Chen, L
   Chen, ZF
   Zhong, JC
   Zhang, XW
   Wang, LZ
AF Cao, Yulu
   Chen, Lin
   Chen, Zhifei
   Zhong, Jiacheng
   Zhang, Xiaowei
   Wang, Linzhang
TI Efficient Construction of Practical Python Call Graphs with Entity
   Knowledge Base
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Call graph; Python; static analysis
ID STATIC ANALYSIS
AB Call graphs facilitate various tasks in software engineering. However, for the dynamic language Python, the complex language features and external library dependencies pose enormous challenges for building the call graphs of real projects. Some program analysis techniques used for call graph construction in other languages are impractical for Python. In this paper, we present STAR, a practical technique for the construction of Python static call graphs. We reformulate call graph construction as an entity identification task. STAR leverages inter-module summary and cross-project dependencies to construct a fine-grained entity knowledge base to identify the possible nodes and edges of the call graph in the code, and then construct the call graph. Our evaluation of three benchmarks shows that (1) STAR improves recall in three benchmarks compared to three baseline tools. Especially, STAR improves the recall of reachable nodes and reachable edges compared with the state-of-the-art tool by 11.3% and 9.8%, respectively; (2) STAR achieves comparable performance as three baseline tools in execution time and memory usage and is more efficient in large projects; (3) STAR can be effectively used for the task of detecting vulnerability propagation with real-world cases. We expect our results will attract more exploration of practical methods and improve the application of Python call graphs.
C1 [Cao, Yulu; Chen, Lin; Zhong, Jiacheng; Zhang, Xiaowei; Wang, Linzhang] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Chen, Zhifei] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing, Jiangsu, Peoples R China.
C3 Nanjing University; Nanjing University of Science & Technology
RP Chen, L (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM suliuzh@163.com; lchen@nju.edu.cn; chenzhifei@njust.edu.cn;
   652022330036@smail.nju.edu.cn; xiaoweizhang@smail.nju.edu.cn;
   lzwang@nju.edu.cn
OI Cao, Yulu/0000-0002-6623-1165; Wang, Linzhang/0000-0003-4794-1652;
   zhang, xiaowei/0000-0003-1481-5158
FU National Natural Science Foundation of China [62272221]; Cooperation
   Fund of Nanjing University-Huawei Novel Software Technology Lab
   [TC20230202021-2023-10]
FX This work was partially supported by the National Natural Science
   Foundation of China (62272221); and the Cooperation Fund of Nanjing
   University-Huawei Novel Software Technology Lab (TC20230202021-2023-10).
CR Akerblom B., 2014, P 11 WORK C MIN SOFT
   Ali K, 2021, IEEE T SOFTWARE ENG, V47, P2644, DOI 10.1109/TSE.2019.2956925
   Ali K, 2012, LECT NOTES COMPUT SC, V7313, P688, DOI 10.1007/978-3-642-31057-7_30
   [Anonymous], 2023, LIBRARIESIO
   [Anonymous], 2023, PYTHON AST MODULE
   [Anonymous], 2022, PYTHON DATA MODEL
   [Anonymous], 2022, GITHUB ADVISORY DATA
   [Anonymous], 2022, PYTHON SCOPES
   [Anonymous], 2023, DEPENDS
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Baker W, 2022, EUR CON SFTWR MTNCE, P925, DOI 10.1109/SANER53432.2022.00110
   Cao YL, 2023, IEEE T SOFTWARE ENG, V49, P1741, DOI 10.1109/TSE.2022.3191353
   Chakraborty M., 2022, 36 EUR C OBJ OR PROG
   Chen ZF, 2020, INT C PROGRAM COMPRE, P83, DOI 10.1145/3387904.3389253
   Chibotaru V, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P760, DOI 10.1145/3314221.3314648
   Dilhara M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3453478
   Eghbali A., 2022, ESEC FSE 22 30 ACM J
   Feldthaus A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P752, DOI 10.1109/ICSE.2013.6606621
   Gharibi G, 2018, IEEE INT CONF AUTOM, P880, DOI 10.1145/3238147.3240484
   Gharibi G, 2018, IEEE INT CONF BIG DA, P4016, DOI 10.1109/BigData.2018.8622426
   Grech N, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P198, DOI 10.1145/3213846.3213860
   Grech N, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133926
   Grove D, 1997, ACM SIGPLAN NOTICES, V32, P108, DOI 10.1145/263700.264352
   Hejderup J, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111097
   Hejderup J, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P101, DOI 10.1145/3183399.3183417
   Horton E, 2019, PROC INT CONF SOFTW, P328, DOI 10.1109/ICSE.2019.00047
   Nguyen HV, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P518, DOI 10.1145/2635868.2635928
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jin W., 2019, 2019 IEEE ACM 41 INT
   Jin WX, 2020, IEEE INT CONF AUTOM, P758, DOI 10.1145/3324884.3416619
   Khan F, 2022, IEEE T SOFTWARE ENG, V48, P3145, DOI 10.1109/TSE.2021.3082068
   Kummita S., 2021, 2021 INT C COD QUAL
   Le-Cong T., 2022, ARXIV
   Lee S, 2021, IEEE T SOFTWARE ENG, V47, P653, DOI 10.1109/TSE.2019.2901459
   Li L., 2022, ARXIV
   Li Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1274, DOI 10.1109/ASE.2019.00160
   Li Z., 2021, 2021 IEEE S SEC PRIV
   Madsen M, 2015, ACM SIGPLAN NOTICES, V50, P505, DOI [10.1145/2814270.2814272, 10.1145/2858965.2814272]
   Milojkovic N., 2017, 2017 IEEE ACM 25 INT
   Monat R., 2020, STATIC TYPE ANAL ABS
   Nielsen BB, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P29, DOI 10.1145/3460319.3464836
   Oh W., 2022, ESEC FSE 2022 ACM JO
   Park J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1129, DOI 10.1145/3468264.3468556
   Peng Y, 2022, PROC INT CONF SOFTW, P2019, DOI 10.1145/3510003.3510038
   Peng Y, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P24, DOI 10.1109/SANER50967.2021.00012
   Pyan, 2023, US
   Pycallgraph, 2023, US
   Reif M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P474, DOI 10.1145/2950290.2950312
   Richards G, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P1, DOI 10.1145/1806596.1806598
   Salis V, 2021, PROC INT CONF SOFTW, P1646, DOI 10.1109/ICSE43902.2021.00146
   Savic M, 2014, INFORM SOFTWARE TECH, V56, P1268, DOI 10.1016/j.infsof.2014.04.011
   Schlosser G, 2004, MODULARITY IN DEVELOPMENT AND EVOLUTION, P519
   Sui L, 2020, PROC INT CONF SOFTW, P1049, DOI 10.1145/3377811.3380441
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Utture A, 2022, PROC INT CONF SOFTW, P2043, DOI 10.1145/3510003.3510166
   Wang J., 2021, 2021 IEEE ACM 43 INT
   Wang JW, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P233, DOI 10.1145/3368089.3409735
   Wu YL, 2023, PROC INT CONF SOFTW, P1046, DOI [10.1109/ICSE48619.2023.00095, 10.1109/ICEICT57916.2023.10245566]
   Xu ZG, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P607, DOI 10.1145/2950290.2950343
   Yang Y., 2022, MSR 22 19 INT C MIN
   Zhang Z., 2020, 2020 IEEE 27 INT C S
   Zhong J., 2022, ESEC FSE 22 30 ACM J
   Zhu CG, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P240, DOI 10.1109/ASE51524.2021.9678889
NR 63
TC 0
Z9 0
U1 2
U2 2
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD JUL
PY 2024
VL 34
IS 07
BP 999
EP 1024
DI 10.1142/S0218194024500104
EA MAY 2024
PG 26
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZY9V8
UT WOS:001227577400001
DA 2024-08-05
ER

PT J
AU Zhang, XW
   Chen, ZF
   Cao, YL
   Chen, L
   Zhou, YM
AF Zhang, Xiaowei
   Chen, Zhifei
   Cao, Yulu
   Chen, Lin
   Zhou, Yuming
TI Multi-Intent Inline Code Comment Generation via Large Language Model
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Inline comment generation; large language model; multiple intents
AB Code comment generation typically refers to the process of generating concise natural language descriptions for a piece of code, which facilitates program comprehension activities. Inline code comments, as a part of code comments, are also crucial for program comprehension. Recently, the emergence of large language models (LLMs) has significantly boosted the performance of natural language processing tasks. This naturally inspires us to explore the performance of the LLMs in the task of inline code comment generation. To this end, we evaluate open-source LLMs on a large-scale dataset and compare the results with the current state-of-the-art methods. Specifically, we explore the model performance in the following scenarios based on the widely used evaluation metrics (i.e. BLEU, Meteor, and ROUGE-L): (1) generation with simple instruction; (2) few-shot-guided generation with random examples selected from the database; (3) few-shot-guided generation with similar examples selected from the database; and (4) adopt the re-ranking strategy for the output of LLMs. Our findings reveal that: (1) under the simple instruction scenario, LLMs could not fully show the potential in the task of inline comment generation compared to the state-of-the-art models; (2) random few-shot leads to a slight improvement; (3) similar few-shot and re-ranking strategy could significantly enhance the performance of LLMs; and (4) for inline comment and code snippet pairs with different intents, why category achieves the best performance and what category achieves relatively poorer performance. That remains consistent across all four scenarios. Our findings shed light on future research directions for using LLMs in inline comment generation tasks.
C1 [Zhang, Xiaowei; Cao, Yulu; Chen, Lin; Zhou, Yuming] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Chen, Zhifei] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing, Peoples R China.
C3 Nanjing University; Nanjing University of Science & Technology
RP Chen, L (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM XiaoweiZhang@smail.nju.edu.cn; lchen@nju.edu.cn
OI zhang, xiaowei/0000-0003-1481-5158; Cao, Yulu/0000-0002-6623-1165
FU National Natural Science Foundation of China [62272221, 62172202,
   62172205]; Cooperation Fund of Huawei-Nanjing University Next Generation
   Programming Innovation Lab [YBN2019105178SW35]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 62272221, 62172202, and 62172205, and
   in part by the Cooperation Fund of Huawei-Nanjing University Next
   Generation Programming Innovation Lab under Grant YBN2019105178SW35.
CR Alayrac J.-B., 2022, NeurIPS, V35, P23716, DOI DOI 10.48550/ARXIV.2204.14198
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Austin J., ARXIV
   Banerjee S., 2005, ACL WORKSH INTR EXTR, P65
   Beltagy I., ARXIV
   Besta M., ARXIV
   Brown T., 2020, ADV NEURAL INFORM PR, V33, P1877, DOI DOI 10.48550/ARXIV.2005.14165
   Bubeck S., ARXIV
   Cass Stephen., 2018, IEEE Spectrum
   Chang Y., 2023, ACM T INTEL SYST TEC, P45
   Chen M, arXiv
   Chung H. W., ARXIV
   Devlin J., ARXIV
   Eghbali A, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556903
   Feng Z., ARXIV
   Fu L., ARXIV
   Geng M., ARXIV
   Guo Hanyang, 2023, ACM Transactions on Software Engineering and Methodology, V33, P1
   He, ARXIV
   Hoffmann J., ARXIV
   Hong P., ARXIV
   Hu Edward J, arXiv
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huang YA, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3582570
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Ji Y., ARXIV
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Kang S, 2023, PROC INT CONF SOFTW, P2312, DOI 10.1109/ICSE48619.2023.00194
   Labrak Y., ARXIV
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Lemieux C, 2023, PROC INT CONF SOFTW, P919, DOI 10.1109/ICSE48619.2023.00085
   Lewis M., ARXIV
   Lin C.-Y., 2004, TEXT SUMMARIZATION B, P74, DOI DOI 10.2307/3105454
   Liu Z., AUTOMATIC GENERATION
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Luo Z., ARXIV
   Min S., ARXIV
   Mu F., ARXIV
   Nashid N, 2023, PROC INT CONF SOFTW, P2450, DOI 10.1109/ICSE48619.2023.00205
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Radford, 2018, OPENAI BLOG
   Raheja V., ARXIV
   Shanahan M., ARXIV
   Shido Y, 2019, IEEE IJCNN
   Touvron H., ARXIV
   Vikram V., ARXIV
   Wang L., ARXIV
   Wei JS, 2022, ADV NEUR IN
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Yang Zhilin, 2019, NeurIPS, V32, DOI DOI 10.5555/3454287.3454804
   Yu Gu, 2022, ACM Transactions on Computing and Healthcare, V3, DOI 10.1145/3458754
   Yuan Z., ARXIV
   Zan DG, 2023, PROCEEDINGS OF THE 61ST ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, ACL 2023, VOL 1, P7443
   Zhai J, 2020, PROC INT CONF SOFTW, P1359, DOI 10.1145/3377811.3380427
   Zhang XW, 2024, INT J SOFTW ENG KNOW, V34, P331, DOI 10.1142/S0218194023500547
   Zhang XW, 2023, IEEE T SOFTWARE ENG, V49, P2285, DOI 10.1109/TSE.2022.3216279
   Zhao W. X., ARXIV
   Zou A., ARXIV
NR 61
TC 0
Z9 0
U1 5
U2 5
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD JUN
PY 2024
VL 34
IS 06
BP 845
EP 868
DI 10.1142/S0218194024500050
EA MAR 2024
PG 24
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6U6
UT WOS:001190000000001
DA 2024-08-05
ER

PT J
AU Hussain, Y
   Huang, ZQ
   Zhou, Y
   Khan, IA
AF Hussain, Yasir
   Huang, Zhiqiu
   Zhou, Yu
   Khan, Izhar Ahmed
TI Exploring the Impact of Vocabulary Techniques on Code Completion: A
   Comparative Approach
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Deep learning; source code modeling; code completion; open and closed
   vocabulary
ID USAGE
AB Integrated Development Environments (IDEs) are pivotal in enhancing productivity with features like code completion in modern software development. Recent advancements in Natural Language Processing (NLP) have empowered neural language models for code completion. In this study, we present an extensive investigation of the impact of open and closed vocabulary systems on the task of code completion. Specifically, we compare open and closed vocabulary systems with various vocabulary sizes to observe their impact on code completion performance. We experiment with three different open vocabulary systems: byte pair encoding (BPE), WordPiece and Unigram to compare them with closed-vocabulary systems to analyze their modeling performance. We also conduct experiments with different context sizes to study their impact on code completion performance. We have experimented using various prominent language models, including one from recurrent neural networks and five from transformers. Our results indicate that vocabulary size significantly impacts modeling performance and can artificially boost the accuracy of code completion models, especially in the case of a closed-vocabulary system. Moreover, we find that different vocabulary systems have varying impacts on token coverage, whereas open-vocabulary systems exhibit better token coverage. Our findings offer valuable insights for building effective code completion models, aiding researchers and practitioners in this field.
C1 [Hussain, Yasir; Huang, Zhiqiu; Zhou, Yu; Khan, Izhar Ahmed] Nanjing Univ Aeronaut & Astronaut NUAA, Coll Comp Sci & Technol, Nanjing 211106, Jiangsu, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics
RP Hussain, Y (corresponding author), Nanjing Univ Aeronaut & Astronaut NUAA, Coll Comp Sci & Technol, Nanjing 211106, Jiangsu, Peoples R China.
EM yaxirhuxxain@nuaa.edu.cn; zqhuang@nuaa.edu.cn; zhouyu@nuaa.edu.cn;
   izhar@nuaa.edu.cn
OI Ahmed Khan, Izhar/0000-0001-7180-8179; Zhou, Yu/0000-0002-3723-7584;
   Hussain, Yasir/0000-0001-7318-8137
FU National Natural Science Foundation of China [62150410441, 61802179,
   BK20201292]; Natural Science Foundation of Jiangsu Province [61972197];
   Qing Lan Project
FX This work was supported by the National Natural Science Foundation of
   China (No.62150410441), the Natural Science Foundation of Jiangsu
   Province (No. BK20201292), National Natural Science Foundation of China
   (No. 61972197, No. 61802179) and the Qing Lan Project.
CR Ahmad W. U., 2021, ARXIV
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Chen C, 2022, IEEE T SOFTWARE ENG, V48, P2987, DOI 10.1109/TSE.2021.3074309
   Ciniselli M, 2022, IEEE T SOFTWARE ENG, V48, P4818, DOI 10.1109/TSE.2021.3128234
   Ding Y., 2021, ARXIV
   Fang Liu, 2020, 2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE), P473, DOI 10.1145/3324884.3416591
   Feng Z., 2020, ARXIV
   Guo D., 2020, ARXIV
   Harer J.A., 2018, arXiv
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hussain Y, 2023, 27TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, EASE 2023, P398, DOI 10.1145/3593434.3594236
   Hussain Y, 2023, J SYST SOFTWARE, V196, DOI 10.1016/j.jss.2022.111553
   Hussain Y, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106309
   Kanade A, 2020, PR MACH LEARN RES, V119
   Karampatsis R.-M., 2019, ARXIV
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   Kudo Taku, 2018, ARXIV
   Liu C., Neural code completion
   Loshchilov I., 2017, ARXIV
   Lu S., ARXIV
   Mi Q., 2018, P 22 INT C EV ASS SO, P139, DOI DOI 10.1145/3210459.3210473
   Mi Q, 2018, INFORM SOFTWARE TECH, V104, P60, DOI 10.1016/j.infsof.2018.07.006
   Nijkamp E., 2022, arXiv
   Niu HR, 2017, J SYST SOFTWARE, V129, P127, DOI 10.1016/j.jss.2016.07.026
   Parr Terence., ANTLR (ANother Tool for Language Recognition)
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2666356.2594321, 10.1145/2594291.2594321]
   Santos EA, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P311, DOI 10.1109/SANER.2018.8330219
   Schuster M, 2012, INT CONF ACOUST SPEE, P5149, DOI 10.1109/ICASSP.2012.6289079
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Xiao Y, 2018, INFORM SOFTWARE TECH, V99, P58, DOI 10.1016/j.infsof.2018.03.003
   Xu Frank F., 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P1, DOI 10.1145/3520312.3534862
   Zhou Y, 2022, IEEE T SOFTWARE ENG, V48, P2157, DOI 10.1109/TSE.2021.3053111
   Zhou Y, 2019, J SYST SOFTWARE, V156, P328, DOI 10.1016/j.jss.2019.07.087
NR 40
TC 0
Z9 0
U1 0
U2 2
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD MAY
PY 2024
VL 34
IS 05
BP 705
EP 727
DI 10.1142/S0218194023500687
EA JAN 2024
PG 23
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SB5X4
UT WOS:001143127500001
DA 2024-08-05
ER

PT J
AU Gao, TK
   Jin, XN
AF Gao, Tiaokang
   Jin, Xiaoning
TI Group-Based Federated Knowledge Distillation Intrusion Detection
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Federated learning; intrusion detection; heterogeneous model; knowledge
   distillation
ID DETECTION SYSTEM; NETWORK
AB Intrusion detection based on federated learning allows the sharing of more high-quality attack samples to improve the intrusion detection performance of local models while preserving the privacy of local data. Most research on federated learning intrusion detection requires local models to be homogeneous. However, in practical scenarios, local models often include both homogeneous and heterogeneous models due to differences in hardware capabilities and business requirements among nodes. Additionally, there is still room for improvement in the accuracy of recognizing novel attacks in existing researches. To address the challenges mentioned above, we propose a Group-based Federated Knowledge Distillation Intrusion Detection approach. First, through a step-by-step grouping method, we achieve the grouping effect of intra-group homogeneity and inter-group heterogeneity, laying the foundation for reducing the aggregation difficulty in intra-group homogenous aggregation and inter-group heterogeneous aggregation. Second, in intra-group homogenous aggregation, a dual-objective optimization model is employed to quantify the learning quality of local models. Weight coefficients are assigned based on the learning quality to perform weighted aggregation. Lastly, in inter-group heterogeneous aggregation, the group leader model's learning quality is used to classify and aggregate local soft labels, generating global soft labels. Group leader models utilize global soft labels for knowledge distillation to acquire knowledge from heterogeneous models. Experimental results on NSL-KDD and UNSW-NB datasets demonstrate the superiority of our proposed method over other algorithms.
C1 [Gao, Tiaokang; Jin, Xiaoning] Beijing Univ Technol, Fac Informat Technol, 100 Pingleyuan, Beijing 100124, Peoples R China.
C3 Beijing University of Technology
RP Gao, TK (corresponding author), Beijing Univ Technol, Fac Informat Technol, 100 Pingleyuan, Beijing 100124, Peoples R China.
EM GaoTiaoKang@emails.bjut.edu.cn; xiaoningjin@bjut.edu.cn
FU Natural Science Foundation of Beijing Municipality [19L2020]; National
   Key Research and Development Program of China [2020YFB2009500]
FX This work is supported by the Natural Science Foundation of Beijing
   [19L2020] and the National Key Research and Development Program of China
   [2020YFB2009500].
CR Agrawal S, 2022, COMPUT COMMUN, V195, P346, DOI 10.1016/j.comcom.2022.09.012
   Alam S, 2023, Arxiv, DOI arXiv:2212.01548
   Andresini G, 2022, EXPERT SYST APPL, V201, DOI 10.1016/j.eswa.2022.117144
   Bhuyan MH, 2014, IEEE COMMUN SURV TUT, V16, P303, DOI 10.1109/SURV.2013.052213.00046
   Chan YH, 2021, 2021 17TH INTERNATIONAL CONFERENCE ON MOBILITY, SENSING AND NETWORKING (MSN 2021), P207, DOI 10.1109/MSN53354.2021.00043
   Diao E., 2020, arXiv
   Ferrag MA, 2020, J INF SECUR APPL, V50, DOI 10.1016/j.jisa.2019.102419
   Arivazhagan MG, 2019, Arxiv, DOI arXiv:1912.00818
   Horvath Samuel, 2021, ADV NEUR IN, V34, P12876
   Hu L, 2021, INFORM SCIENCES, V560, P493, DOI 10.1016/j.ins.2021.01.046
   Huang XT, 2023, IEEE T INF FOREN SEC, V18, P41, DOI 10.1109/TIFS.2022.3214723
   Huang Y, 2023, IEEE INT CON MULTI, P342, DOI 10.1109/ICME55011.2023.00066
   Jin Y, 2023, PROC CVPR IEEE, P24276, DOI 10.1109/CVPR52729.2023.02325
   Jin ZG, 2024, FUTURE GENER COMP SY, V151, P57, DOI 10.1016/j.future.2023.09.019
   Kan X, 2021, INFORM SCIENCES, V568, P147, DOI 10.1016/j.ins.2021.03.060
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Li DL, 2019, Arxiv, DOI arXiv:1910.03581
   Li J, 2023, IEEE SYST J, V17, P2455, DOI 10.1109/JSYST.2023.3236995
   Li XK, 2020, COMPUT SECUR, V95, DOI 10.1016/j.cose.2020.101851
   Li ZW, 2022, IEEE T NEUR NET LEAR, V33, P6999, DOI 10.1109/TNNLS.2021.3084827
   Lin T., 2020, Advances in Neural Information Processing Systems (NeurIPS), V33, P2351
   Liu H, 2021, IEEE T VEH TECHNOL, V70, P6073, DOI 10.1109/TVT.2021.3076780
   McMahan HB, 2017, PR MACH LEARN RES, V54, P1273
   Ruzafa-Alcázar P, 2023, IEEE T IND INFORM, V19, P1145, DOI 10.1109/TII.2021.3126728
   Shang ET, 2023, IEEE INTERNET THINGS, V10, P11643, DOI 10.1109/JIOT.2023.3243622
   Sun SL, 2020, IEEE T CYBERNETICS, V50, P3668, DOI 10.1109/TCYB.2019.2950779
   Thakkar A, 2023, IEEE INTERNET THINGS, V10, P11888, DOI 10.1109/JIOT.2023.3244810
   Xie JL, 2022, IEEE T FUZZY SYST, V30, P3460, DOI 10.1109/TFUZZ.2021.3117441
   Yang QT, 2023, IEEE T EVOLUT COMPUT, V27, P1340, DOI 10.1109/TEVC.2022.3212058
   Yao DZ, 2021, Arxiv, DOI arXiv:2107.00051
   Yu J, 2022, FUTURE GENER COMP SY, V129, P399, DOI 10.1016/j.future.2021.10.018
   Zhang Z, 2022, FUTURE GENER COMP SY, V134, P154, DOI 10.1016/j.future.2022.04.010
NR 32
TC 0
Z9 0
U1 5
U2 5
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 MAY 25
PY 2024
DI 10.1142/S0218194024500190
EA MAY 2024
PG 29
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RV8R4
UT WOS:001230532900002
DA 2024-08-05
ER

PT J
AU Mbaka, W
   Tuma, K
AF Mbaka, Winnie
   Tuma, Katja
TI On the Measures of Success in Replication of Controlled Experiments with
   STRIDE
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Security threat analysis; controlled experiment; replication; software
   systems; STRIDE
ID THREAT ANALYSIS; SOFTWARE
AB To avoid costly security patching after software deployment, security-by-design techniques (e.g. threat analysis) are adopted in organizations to find and mitigate security issues before the system is ever implemented. Organizations are ramping up such (heavily manual) activities, but there is a global gap in the security workforce. Favorable performance indicators would result in cost savings for organizations with scarce security experts. However, past empirical studies were inconclusive regarding some performance indicators of threat analysis techniques, thus practitioners have little evidence for choosing the technique to adopt. To address this issue, we replicated a controlled experiment with STRIDE. Our study aimed to measure and compare the performance indicators (productivity and precision) of two STRIDE variants (per-element and per-interaction). Since we made some similar observations to the original study, we conclude that the two approaches are not different enough to make a practical impact. To this end, the choice of which variant to adopt should be informed by the needs of the organization performing threat analysis. We conclude by discussing some of the unexplored yet relevant topic domains in the context of STRIDE that will be considered in future work.
C1 [Mbaka, Winnie; Tuma, Katja] Vrije Univ, Dept Comp Sci, NL-1081 HV Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam
RP Mbaka, W (corresponding author), Vrije Univ, Dept Comp Sci, NL-1081 HV Amsterdam, Netherlands.
EM w.mbaka@vu.nl; k.tuma@vu.nl
OI Mbaka, Winnie Bahati/0000-0001-6913-1971
CR Abe T, 2013, ASIA PAC SOFWR ENG, P58, DOI 10.1109/APSEC.2013.19
   Abraho S., 2017, P 21 INT C EV ASS SO, P144, DOI [10.1145/3084226.3084253, DOI 10.1145/3084226.3084253]
   Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Becker C, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P23, DOI 10.1109/TechDebt.2019.00011
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Bernsmed K., 2019, 2019 INT C CYB SEC P, P1
   Bier V, 2020, RISK ANAL, V40, P2207, DOI 10.1111/risa.13583
   Blai B. J., 2021, Cybersecurity Threats with New Perspectives
   Cruzes DS, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P111, DOI 10.1109/ASWEC.2018.00023
   CyberSeek, 2019, Cybersecurity supply/demand heat map
   Dougherty C., 2009, SECURE DESIGN PATTER
   Fagerholm F, 2019, INT SYMP EMP SOFTWAR, P162, DOI DOI 10.1109/esem.2019.8870161
   Falcao Larissa, 2021, SBES '21: Brazilian Symposium on Software Engineering, P330, DOI 10.1145/3474624.3474649
   Falcao L, 2015, INT SYMP EMP SOFTWAR, P128, DOI 10.1109/ESEM.2015.7321185
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Ferreira JM, 2023, IEEE T SOFTWARE ENG, V49, P251, DOI 10.1109/TSE.2022.3149586
   Gómez MN, 2014, EMPIR SOFTW ENG, V19, P343, DOI 10.1007/s10664-013-9265-9
   Gonzalez-Huerta J, 2015, INFORM SOFTWARE TECH, V57, P405, DOI 10.1016/j.infsof.2014.05.018
   Huq N., 2019, Technical report
   Jardine E, 2020, RISK ANAL, V40, P1571, DOI 10.1111/risa.13534
   Javed Muhammad Atif, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P215, DOI 10.1109/WICSA.2014.43
   Jung Jessica, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P223, DOI 10.1109/ESEM.2013.59
   Karahasanovic A., 2017, P 15 ESCAR C, P1
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Labunets Katsiaryna, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P163, DOI 10.1109/ESEM.2013.29
   Labunets K, 2017, LECT NOTES COMPUT SC, V10153, P191, DOI 10.1007/978-3-319-54045-0_15
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Ling Engla, 2020, Critical Information Infrastructures Security. 15th International Conference, CRITIS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12332), P47, DOI 10.1007/978-3-030-58295-1_4
   Lung J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P191, DOI 10.1145/1368088.1368115
   Meyners M, 2012, FOOD QUAL PREFER, V26, P231, DOI 10.1016/j.foodqual.2012.05.003
   Miller J, 2007, LECT NOTES COMPUT SC, V4336, P38
   Perez-Gonzalez HG, 2019, 2019 7TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2019), P65, DOI 10.1109/CONISOFT.2019.00019
   Riaz M., 2014, P 8 ACM IEEE INT S E, P1
   Riaz M, 2017, EMPIR SOFTW ENG, V22, P2127, DOI 10.1007/s10664-016-9481-1
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Santos A, 2021, IEEE T SOFTWARE ENG, V47, P1742, DOI 10.1109/TSE.2019.2935720
   Santos JCS, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P220, DOI 10.1109/ICSAW.2017.25
   Scandariato R, 2015, REQUIR ENG, V20, P163, DOI 10.1007/s00766-013-0195-2
   Scanniello G., 2014, Results from two controlled experiments, V1, P1
   Scanniello G, 2014, J VISUAL LANG COMPUT, V25, P494, DOI 10.1016/j.jvlc.2014.03.002
   Shostack A., 2008, MODSEC@ MoDELS, V2008, P35
   Shostack A., 2014, Threat Modeling: Designing for Security
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Solari M, 2018, INFORM SOFTWARE TECH, V97, P64, DOI 10.1016/j.infsof.2017.12.016
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Synopsys Software Integrity Group, 2021, Building security in maturity model (BSIMM12)
   Tatam M, 2021, HELIYON, V7, DOI 10.1016/j.heliyon.2021.e05969
   Tuma K, 2018, J SYST SOFTWARE, V144, P275, DOI 10.1016/j.jss.2018.06.073
   Tuma K, 2022, 2022 IEEE/ACM THIRD WORKSHOP ON GENDER EQUALITY, DIVERSITY, AND INCLUSION IN SOFTWARE ENGINEERING (GE@ICSE 2022), P12, DOI 10.1145/3524501.3527242
   Tuma K, 2021, J SYST SOFTWARE, V179, DOI 10.1016/j.jss.2021.111003
   Tuma K, 2018, LECT NOTES COMPUT SC, V11048, P347, DOI 10.1007/978-3-030-00761-4_23
   Tuma K, 2018, LECT NOTES COMPUT SC, V10683, P47, DOI 10.1007/978-3-319-72817-9_4
   Van Landuyt D, 2022, SOFTW SYST MODEL, V21, P2311, DOI 10.1007/s10270-021-00941-7
   Wang Y, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234181
   Wang Y, 2018, LECT NOTES BUS INF P, V314, P37, DOI 10.1007/978-3-319-91602-6_3
   Wilhjelm C, 2020, COMPANION OF THE 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS-C 2020), P426, DOI 10.1109/QRS-C51114.2020.00078
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Wuyts K, 2020, 2020 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW 2020), P302, DOI 10.1109/EuroSPW51379.2020.00047
   Xiong WJ, 2019, COMPUT SECUR, V84, P53, DOI 10.1016/j.cose.2019.03.010
NR 59
TC 0
Z9 0
U1 0
U2 0
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD APR
PY 2024
VL 34
IS 04
BP 623
EP 650
DI 10.1142/S0218194023500651
PG 28
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SB0L6
UT WOS:001231881800003
DA 2024-08-05
ER

PT J
AU Ibarra-Torres, F
   Urbieta, M
   Medina-Medina, N
AF Ibarra-Torres, Fernando
   Urbieta, Matias
   Medina-Medina, Nuria
TI Applying Scrum to Knowledge Transfer Among Software Developers
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Knowledge transfer; agile methodologies; scrum; software developers
ID ORGANIZATIONS
AB In the teaching-learning processes, research and continuous innovation are encouraged. Now, when talking about innovation, the concept of adapting methodologies that have been successfully applied to speed up and increase the quality of software projects begins to emerge, is the case of agile software development methodologies. Scrum is one of the most widely used methodologies in the software development process, it increases productivity and deliverable quality of software development teams, but there is not much evidence of how to use it to structure learning content and its use to transfer new knowledge in training or software development contexts. To fill this gap, this research analyzes the applicability of Scrum for transferring new knowledge among software developers is developed. In this paper, we describe the details of how to start transferring knowledge using Scrum, guiding the reader through its standards, processes, phases, and objectives. We also report an experiment for improving students' performance to support the approach's benefits in the academy context and a case study performed inside the company context.
C1 [Ibarra-Torres, Fernando; Urbieta, Matias] Univ Nacl La Plata, RA-1900 La Plata, Buenos Aires, Argentina.
   [Medina-Medina, Nuria] Univ Granada, ETSIIT, CITIC UGR, Granada 18071, Spain.
C3 National University of La Plata; University of Granada
RP Ibarra-Torres, F (corresponding author), Univ Nacl La Plata, RA-1900 La Plata, Buenos Aires, Argentina.
EM oscar.ibarrat@info.unlp.edu.ar; matias.urbieta@lifia.info.unlp.edu.ar;
   nmedina@ugr.es
OI Ibarra Torres, Oscar Fernando/0000-0001-7589-2216
FU PLEISAR-SOCIAL project (Spanish State Plan for Scientific, Technical and
   Innovation Research 2021-2023)
FX This work has been supported by the PLEISAR-SOCIAL project (Spanish
   State Plan for Scientific, Technical and Innovation Research 2021-2023).
CR Abrahamsson P, 2017, Arxiv, DOI arXiv:1709.08439
   Al-Ratrout S., 2019, Int. J. Eng. Adv. Technol., V8, P278
   Argote L, 2000, ORGAN BEHAV HUM DEC, V82, P1, DOI 10.1006/obhd.2000.2883
   Argote L, 2016, ORGAN BEHAV HUM DEC, V136, P146, DOI 10.1016/j.obhdp.2016.08.003
   Ashraf Sara, 2017, International Journal of Modern Education and Computer Science, V9, P12, DOI 10.5815/ijmecs.2017.07.02
   Babik D, 2022, J. Inform. Syst. Educ., V33, P195
   Baham C., 2019, J. Inform. Syst. Educ., V30, P1
   Bates R, 2004, EVAL PROGRAM PLANN, V27, P341, DOI 10.1016/j.evalprogplan.2004.04.011
   Crawford B, 2009, KNOWLEDGE MANAGEMENT AND INNOVATION IN ADVANCING ECONOMIES-ANALYSES & SOLUTIONS, VOLS 1-3, P929
   D'Souza M J., 2015, INDIAN J SCI TECHNOL, V8, P828
   Dubinsky Y, 2003, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY & ENGINEERING, PROCEEDINGS, P53, DOI 10.1109/SWSTE.2003.1245424
   Kanaki K, 2018, EDUC INF TECHNOL, V23, P2673, DOI 10.1007/s10639-018-9736-0
   Kropp M, 2013, CONF SOFTW ENG EDUC, P179, DOI 10.1109/CSEET.2013.6595249
   Landaeta R. E., 2011, Proceedings of the First IEEE International Technology Management Conference (ITMC 2011), P651, DOI 10.1109/ITMC.2011.5996039
   Lang G., 2017, Information Systems Education Journal, V15, P14
   Lutz Mark, 2010, Programming Python-Powerful Object-Oriented Programming: Covers Python 3.x
   Mbiada B., 2023, IEEE ACIS 21 INT C S, P53
   Metrolho F., 2022, Computation10, P25
   Montalvo W, 2020, COMM COM INF SC, V1194, P3, DOI 10.1007/978-3-030-42520-3_1
   Paulin D., 2015, Leading Issues in Knowledge Management, V2, P73
   Aragao AAP, 2022, 36TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2022, P134, DOI 10.1145/3555228.3555255
   Potkonjak K., 2013, Multicult. Educ. Technol.J., P19
   Pries K.H., 2010, Scrum project management
   Rico DF, 2009, AGILE 2009 CONFERENCE, P174, DOI 10.1109/AGILE.2009.13
   Rubin K. S., 2012, Essential Scrum-A Practical Guide to the Most Popular Agile Process
   Saukkonen J., 2014, Finnish Business Rev.
   Srivastava A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND AUTOMATION (ICCCA), P864, DOI 10.1109/CCAA.2017.8229928
   Sutherland K., 2013, The de nitive guide to Scrum: Therules of the game, V268
   Takeshita H., 2016, Japanese J. Educ. Psychol., V64, P423
   Tenorio D., 2020, Navus-Rev. Gest~ao e Tecnologia10, P1
   Tshuma B, 2018, S AFR J IND ENG, V29, P127, DOI 10.7166/29-2-1966
   Turcios-Esquivel A. M., 2023, IEEE GLOB ENG ED C, P1
   Vogelzang J., 2019, EURASIA J. Math. Sci. Technol. Educ., V15, DOI [10.29333/ejmste/109941, DOI 10.29333/EJMSTE/109941]
   Wedemann G, 2018, PROCEEDINGS OF THE 3RD EUROPEAN CONFERENCE OF SOFTWARE ENGINEERING EDUCATION (ECSEE), P108, DOI 10.1145/3209087.3209096
NR 34
TC 0
Z9 0
U1 4
U2 4
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 FEB 22
PY 2024
DI 10.1142/S0218194023430015
EA FEB 2024
PG 27
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JQ3B6
UT WOS:001174580800001
DA 2024-08-05
ER

PT J
AU Rao, L
   Liu, SY
   Liu, A
AF Rao, Lei
   Liu, Shaoying
   Liu, Ai
TI Program Segment Testing for Human-Machine Pair Programming
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Human-machine pair programming; software testing; program segment
   testing; runtime exception
AB Human-Machine Pair Programming (HMPP) is a promising technique in the software development process, which means that software construction can be done in the manner that humans are responsible for developing the program while computer is responsible for monitoring the program in real-time and reporting errors. The Java runtime exceptions in the current version of the software under construction can only be effectively detected by means of its execution. Traditional software testing techniques are suitable for testing completed programs but face a challenge in building a suitable testing environment for testing the partial programs produced during HMPP. In this paper, we put forward a novel technique, called Program Segment Testing (PST) for automatically identifying errors caused by runtime exceptions to support HMPP. We first introduce the relevant involved in this technique to detect index out of bounds exceptions, a representative of runtime exceptions. Then we discuss the methodology of this technique in detail and illustrate its workflow with a simple case study. Finally, we carry out an experiment to evaluate this technique and compare it with three existing fault detection techniques using several programs to demonstrate its effectiveness.
C1 [Rao, Lei; Liu, Shaoying] Hiroshima Univ, Grad Sch Adv Sci & Engn, Hiroshima 7390046, Japan.
   [Liu, Ai] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210024, Peoples R China.
C3 Hiroshima University; Nanjing University of Aeronautics & Astronautics
RP Liu, SY (corresponding author), Hiroshima Univ, Grad Sch Adv Sci & Engn, Hiroshima 7390046, Japan.
EM rl15829292198@gmail.com; sliu@hiroshima-u.ac.jp; shaoai@nuaa.edu.cn
OI Liu, Ai/0000-0001-8222-2157
FU Nanjing University of Aeronautics and Astronautics
FX The research work is supported by the supporting funds for talents of
   Nanjing University of Aeronautics and Astronautics.
CR Afaq M, 2020, COMPUT COMMUN, V149, P252, DOI 10.1016/j.comcom.2019.10.018
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Akritidis Periklis, 2009, P 18 C USENIX SEC S, P51
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Bhat A, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P1557
   BOEHM BW, 1976, IEEE T COMPUT, V25, P1226, DOI 10.1109/TC.1976.1674590
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Developers S., 2024, SpotBugs
   Dutta Arpita, 2019, 2019 International Conference on Quality, Reliability, Risk, Maintenance, and Safety Engineering (QR2MSE), P839, DOI 10.1109/QR2MSE46217.2019.9021217
   Edwards SH, 2001, SOFTW TEST VERIF REL, V11, P97, DOI 10.1002/stvr.224
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Gao FJ, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P81, DOI 10.1145/2993717.2993724
   Ghosh D, 2021, INT J COMPUT SCI ENG, V24, P98, DOI 10.1504/IJCSE.2021.113657
   Gyimóthy T, 1999, LECT NOTES COMPUT SC, V1687, P303, DOI 10.1145/318774.319248
   Jiang SJ, 2012, INT CONF QUAL SOFTW, P9, DOI 10.1109/QSIC.2012.36
   Jones J. A., 2005, ASE, P273
   Kellogg M, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P3, DOI 10.1145/3213846.3213849
   Khatibsyarbini M, 2019, IEEE ACCESS, V7, P132360, DOI 10.1109/ACCESS.2019.2940620
   Kusumoto S., 2002, Empirical Software Engineering, V7, P49, DOI 10.1023/A:1014823126938
   Mariani L., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P81, DOI 10.1109/ICST.2012.88
   Microsoft, 2023, Indexoutofrangeexception class (system)
   Nikolenko L., 2018, P 14 INT C ADV DAT M, P757
   Oracle, 2014, Indexoutofboundsexception
   Robe P, 2020, S VIS LANG HUM CEN C, DOI 10.1109/vl/hcc50065.2020.9127250
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Shan C, 2017, LECT NOTES COMPUT SC, V10394, P373, DOI 10.1007/978-3-319-64701-2_27
   Shaoying Liu, 2019, Structured Object-Oriented Formal Language and Method. 8th International Workshop, SOFL+MSVL 2018. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 11392), P3, DOI 10.1007/978-3-030-13651-2_1
   Shujuan Jiang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P393, DOI 10.1109/QSIC.2010.23
   Soremekun E, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09931-7
   Summers A., 2022, Common weakness enumeration
   Tahat LH, 2001, P INT COMP SOFTW APP, P489, DOI 10.1109/CMPSAC.2001.960658
   Vaysburg B., 2001, P 18 INT C TEST COMP, P130
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wright M., 2010, P FSE SDP WORKSH FUT, P411
   Ye T, 2016, IEEE INT CONF SOFTW, P91, DOI 10.1109/ICST.2016.21
   Zhang D., 2022, 2022 IEEE INT C CONS, P1
   Zhang ZQ, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P239, DOI 10.1109/ISSRE.2015.7381817
NR 38
TC 0
Z9 0
U1 0
U2 0
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 JUL 5
PY 2024
DI 10.1142/S0218194024500281
EA JUL 2024
PG 27
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XN2L0
UT WOS:001262297900002
DA 2024-08-05
ER

PT J
AU Abibullayeva, A
   Kiliç, H
   Cetin, A
AF Abibullayeva, Aiman
   Kilic, Huma
   Cetin, Aydin
TI An Ensemble Keyword Extraction Model for News Texts with Statistical and
   Graphical Features
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Keyword extraction; ensemble classification; statistical; graph-based
AB Keyword extraction is an essential tool for many text mining applications such as automatic indexing, summarizing, classification, clustering and automatic filtering. Automated keyword extraction is essential as the daily text data to be reached and processed have increased tremendously over the Internet, e.g. millions of news articles are published daily online. In this paper, a novel ensemble model for automatic extraction of keywords from news articles is proposed. The proposed model handles keyword extraction as a sequence labeling task. Two sub-modules representing the statistical and graphical features by their calculated scores for each input token were combined in the token classification module. The Ensemble Token Classification module was trained and tested separately with the ensemble algorithms Random Forest, XgBoost, Decision Tree and Voting Classification. For training, we collected two news datasets from Kazakh and Russian news sites published in Cyrillic alphabet. We also collected an Arabic news dataset, ArabianNews. The performance of the model was also compared with the widely used 500N-KPCrowd dataset in the literature, which consists of English news content in Latin alphabet. The proposed model achieved the best performance with an F1-score of 0.71 and 0.86 on the 500N-KPCrowd and Russian datasets, respectively. We attained the best F1-score (0.97) with the KazakhNews and ArabianNews datasets.
C1 [Abibullayeva, Aiman] Akhmet Yassawi Univ, Fac Engn, Comp Engn Dept, Turkistan, Kazakhstan.
   [Kilic, Huma; Cetin, Aydin] Gazi Univ, Fac Technol, Comp Engn Dept, TR-06500 Ankara, Turkiye.
C3 Akhmet Yassawi International Kazakh-Turkish University; Gazi University
RP Kiliç, H (corresponding author), Gazi Univ, Fac Technol, Comp Engn Dept, TR-06500 Ankara, Turkiye.
EM aiman.abibullayeva@ayu.edu.kz; humakilicunlu@gmail.com;
   acetin@gazi.edu.tr
RI Abibullayeva, Aiman/JQV-4804-2023; Abibullayeva, Aiman/KLD-0575-2024
OI Cetin, Aydin/0000-0002-8669-823X; Kilic, Huma/0000-0002-2114-1289
CR Abibullayeva A., 2022, EL CEZERI, V9, P1193
   Ajallouda L, 2022, INT J ADV COMPUT SC, V13, P283
   Al-Zaidy RA, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2551, DOI 10.1145/3308558.3313642
   Alfarra MR, 2018, 2018 INTERNATIONAL CONFERENCE ON PROMISING ELECTRONIC TECHNOLOGIES (ICPET 2018), P92, DOI 10.1109/ICPET.2018.00023
   Awajan A. A., 2014, 2014 C COMP LING SPE, P175
   Bao H, 2012, PHYSCS PROC, V24, P1120, DOI 10.1016/j.phpro.2012.02.167
   Basaldella M, 2018, COMM COM INF SC, V806, P180, DOI 10.1007/978-3-319-73165-0_18
   Bennani-Smires K., 2018, PREPRINT
   Bougouin A., 2013, INT JOINT C NAT LANG, P543
   Duari S, 2020, EXPERT SYST APPL, V140, DOI 10.1016/j.eswa.2019.112876
   Duari S, 2019, INFORM SCIENCES, V477, P100, DOI 10.1016/j.ins.2018.10.034
   El-Shishtawy T., 2012, ARXIV
   Gero Zelalem, 2021, Proc Conf, V2021, P155, DOI 10.18653/v1/2021.bionlp-1.17
   Ghosh S., 2022, ARXIV
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Hafeez S., 2022, 2022 1 INT C ARTIFIC, P1
   KIRA K, 1992, MACHINE LEARNING /, P249
   Kumari M, 2016, PROCEDIA COMPUT SCI, V89, P555, DOI 10.1016/j.procs.2016.06.093
   Lee K., 2018, ARXIV
   Liang W., 2009, 23 PAC AS C LANG INF, P733
   Liang X., 2021, PREPRINT
   Liu R, 2020, IEEE INT SYMP PARAL, P1, DOI 10.1109/ISPA-BDCloud-SocialCom-SustainCom51426.2020.00027
   Marujo L., 2013, ARXIV
   Mihalcea R., 2004, P 2004 C EMP METH NA, P404
   Moskvitina T., 2018, TOMSK STATE PEDAGOG, V8, P45
   Nikzad-Khasmakhi N., 2021, ARXIV
   Ren XD, 2017, LECT NOTES COMPUT SC, V10431, P378, DOI 10.1007/978-3-319-64185-0_28
   Rose S., 2010, Text mining: Applications and theory, P1, DOI [10.1002/9780470689646.CH1, DOI 10.1002/9780470689646.CH1]
   Sahrawat Dhruva, 2020, Advances in Information Retrieval. 42nd European Conference on IR Research, ECIR 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12036), P328, DOI 10.1007/978-3-030-45442-5_41
   Skrlj Blaz, 2019, Statistical Language and Speech Processing. 7th International Conference, SLSP 2019. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11816), P311, DOI 10.1007/978-3-030-31372-2_26
   Statista, 2020, WORLDWIDE DATA CREAT
   Sun Y, 2020, IEEE ACCESS, V8, P10896, DOI 10.1109/ACCESS.2020.2965087
   Sutskever I., 2011, P 28 INT C MACH LEAR, P1017
   Ünlü HK, 2023, NEURAL COMPUT APPL, V35, P3413, DOI 10.1007/s00521-022-07906-x
   Yang SG, 2008, LECT NOTES COMPUT SC, V5328, P102, DOI 10.1007/978-3-540-89962-4_11
   Zehtab-Salmasi A., 2021, ARXIV
   Zhao W. X., 2011, P 49 ANN M ASS COMP, P379
NR 37
TC 0
Z9 0
U1 3
U2 3
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD JUL
PY 2024
VL 34
IS 07
BP 1047
EP 1061
DI 10.1142/S0218194024500128
EA MAY 2024
PG 15
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZY9V8
UT WOS:001229294800002
DA 2024-08-05
ER

PT J
AU Belli, F
   Tuglular, T
   Ufuktepe, E
AF Belli, Fevzi
   Tuglular, Tugkan
   Ufuktepe, Ekincan
TI Unifying Behavioral and Feature Modeling for Testing of Software Product
   Lines
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Software product lines; feature-oriented software testing; model-based
   testing; event-based testing
AB Existing software product line (SPL) engineering testing approaches generally provide positive testing that validates the SPL's functionality. Negative testing is commonly neglected. This research aims to unify behavioral and feature models of an SPL, enable testing before and after variability binding for domain-centric and product-centric testing, and combine positive and negative testing for a holistic testing view. This study suggests behavioral modeling with event sequence graphs (ESGs). This heterogeneous modeling strategy supports bottom-up domain testing and top-down product testing with the feature model. This new feature-oriented ESG test creation method generates shorter test sequences than the original ESG optimum test sequences. Statechart and original ESG test-generating methods are compared. Positive testing findings are similar. The Statechart technique generated 12 test cases with 59 events, whereas the ESG technique created six test cases with 60 events. The ESG technique generated 205 negative test cases with 858 events with the Test Suite Designer tool. However, the Conformiq Designer tool for the Statechart technique does not have a negative test case generation capability. It is shown that the proposed ESG-based holistic approach confirms not only the desirable (positive) properties but also the undesirable (negative) ones. As an additional research, the traditional ESG test-generating approach is compared to the new feature-oriented method on six SPLs of different sizes and features. Our case study results show that the traditional ESG test generation approach demonstrated higher positive test generation scores compare to the proposed feature-oriented test generation approach. However, our proposed feature-oriented test generation approach is capable of generating shorter test sequences, which could be beneficial for reducing the execution time of test cases compared to traditional ESG approach. Finally, our case study has also shown that regardless of the test generation approach, there has been found no significant difference between the Bottom-up and Top-down test strategies with respect to their positive test generation scores.
C1 [Belli, Fevzi] Univ Paderborn, Paderborn, Germany.
   [Belli, Fevzi; Tuglular, Tugkan] Izmir Inst Technol, Dept Comp Engn, Izmir, Turkiye.
   [Ufuktepe, Ekincan] Univ Missouri, Elect Engn & Comp Sci, Columbia, MO 65201 USA.
C3 University of Paderborn; Izmir Institute of Technology; University of
   Missouri System; University of Missouri Columbia
RP Tuglular, T (corresponding author), Izmir Inst Technol, Dept Comp Engn, Izmir, Turkiye.
EM belli@upd.de; tugkantuglular@iyte.edu.tr; euh46@missouri.edu
RI ; Belli, Fevzi/H-5721-2018; UFUKTEPE, EKINCAN/V-7217-2017
OI Tuglular, Tugkan/0000-0001-6797-3913; Belli, Fevzi/0000-0002-8421-3497;
   UFUKTEPE, EKINCAN/0000-0002-0156-4321
CR AHO AV, 1991, IEEE T COMMUN, V39, P1604, DOI 10.1109/26.111442
   [Anonymous], 2012, 62814 IECPAS
   [Anonymous], SMART HOUSE SPL FEAT
   [Anonymous], ESG SMART HOUSE SPL
   [Anonymous], E MAIL CATALOG SPLS
   [Anonymous], CONFORMIQ DESIGNER
   [Anonymous], ESG TEST SUITE DESIG
   [Anonymous], BANK ACCOUNT CATALOG
   Basile D, 2020, SCI COMPUT PROGRAM, V187, DOI 10.1016/j.scico.2019.102344
   Basile D, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P117, DOI 10.1145/3109729.3109741
   Belli F, 2006, SOFTW TEST VERIF REL, V16, P3, DOI 10.1002/stvr.335
   Belli F, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2001.989456
   Belli F., 2013, INT C SOFTW TECHN, P72
   Belli F., 2021, HOLISTIC VIEW SOFTWA
   Belli F, 2007, APPL INTELL, V26, P161, DOI 10.1007/s10489-006-0008-0
   Belli F, 2021, IEEE I C SQRS-C, P1079, DOI 10.1109/QRS-C55045.2021.00162
   Belli F, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P718
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   Cichos H, 2011, LECT NOTES COMPUT SC, V6981, P425, DOI 10.1007/978-3-642-24485-8_31
   Classen A., 2011, THESIS
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Dijkstra E. W., 2022, NUMER MATH, V1, P287, DOI DOI 10.1007/BF01386390
   El-Fakih K., 2019, IEEE T SOFTWARE ENG, V47, P1029
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Feature IDE, US
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Gronniger H., 2008, INFORM BERICHT, V1, P76
   Gruler A, 2008, LECT NOTES COMPUT SC, V5051, P113, DOI 10.1007/978-3-540-68863-1_8
   KASYANOV VN, 1975, DOKL AKAD NAUK SSSR+, V221, P1020
   Lackner D.-I. H., 2016, DOMAIN CTR PRODUCT L
   Lackner H., ARXIV
   Lackner H, 2017, ADV COMPUT, V107, P157, DOI 10.1016/bs.adcom.2017.07.001
   Lukasiewycz M, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1723
   Myhill J., 1957, TR57624 WADD, V57, P112
   Olimpiew EM, 2009, LECT NOTES COMPUT SC, V5791, P76
   Plath M, 2001, SCI COMPUT PROGRAM, V41, P53, DOI 10.1016/S0167-6423(00)00018-6
   Reuys A, 2005, LECT NOTES COMPUT SC, V3520, P519
   Seidl C., 2019, AUTOMOTIVE SYSTEMS S, P77, DOI DOI 10.1007/978-3-030-12157-0{_}5
   SPLOT Research, US
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P287, DOI 10.1016/j.jlamp.2015.11.006
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Tuglular T, 2019, P INT COMP SOFTW APP, P197, DOI 10.1109/COMPSAC.2019.00035
   Weissleder S., ARXIV
NR 44
TC 0
Z9 0
U1 3
U2 3
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD FEB
PY 2024
VL 34
IS 02
BP 203
EP 238
DI 10.1142/S021819402350050X
PG 36
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IZ7I1
UT WOS:001170228100002
DA 2024-08-05
ER

PT J
AU Wei, X
   Lin, YD
   Hu, QT
AF Wei, Xiao
   Lin, Yidian
   Hu, Qitao
TI Dialogue Generation Model with Hierarchical Encoding and Semantic
   Segmentation of Dialogue Context
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Open-domain dialogue system; semantic segmentation; dialogue generation;
   encoder-decoder model; transformer
AB Dialogue generation, as a crucial subtask of dialogue systems, is garnering increasing attention in the field of Natural Language Processing (NLP). The success of dialogue generation relies on effectively utilizing context information to ensure coherent and diverse responses. However, current approaches heavily rely on external sources rather than leveraging the inherent dialogue content. We propose a new approach to address this challenge by introducing semantic segmentation from the field of image processing into NLP. Our contribution lies in the development of a Dialogue Generation model with Hierarchical Encoding and Semantic segmentation of dialogue Context, which is called DGHESC. This model is topic and speaker-aware, capturing the flow of topic and speaker information within the dialogue context using a hierarchical transformer-based framework. Specifically, we extract semantic information at the word-level for each utterance, segment the dialogue context based on topic and speaker semantics, and employ attention mechanisms to model the context at the utterance-level. Experimental results on two open-domain datasets demonstrate the effectiveness of DGHESC. It enhances response quality and achieves state-of-the-art performances on the datasets.
C1 [Wei, Xiao; Lin, Yidian; Hu, Qitao] Shanghai Univ, Sch Comp Engn & Sci, Shanghai 200444, Peoples R China.
C3 Shanghai University
RP Hu, QT (corresponding author), Shanghai Univ, Sch Comp Engn & Sci, Shanghai 200444, Peoples R China.
EM xwei@shu.edu.cn; linyidian@shu.edu.cn; qitaohushu@gmail.com
OI Wei, Xiao/0000-0002-6258-6129; Lin, Yidian/0000-0001-8453-7478
CR Adiwardana D., ARXIV
   Akama R., ARXIV
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Bao SQ, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P85
   Bao Siqi, 2022, FINDINGS ASS COMPUTA, P107
   Chen W, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P4852
   Danescu-Niculescu-Mizil Cristian, 2011, Proceedings of the 2nd Workshop on Cognitive Modeling and Computational Linguistics, P76
   Feng S., ARXIV
   Feng Y., 2022, FINDINGS ASS COMPUTA, P7199
   Gu XD, 2021, AAAI CONF ARTIF INTE, V35, P12911
   Hearst MA, 1997, COMPUT LINGUIST, V23, P33
   Jia Q., ARXIV
   Lewis M, 2019, P 58 ANN M ASS COMP, DOI [10.18653/v1/2020.acl-main.703, DOI 10.18653/V1/2020.ACL-MAIN.703]
   Li J., 2016, N AM CHAPT ASS COMP, P110
   Li QT, 2022, AAAI CONF ARTIF INTE, P10993
   Li Y, 2017, Long Papers, V1, P986
   Majumder BP, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P9194
   Mo YJ, 2022, NEUROCOMPUTING, V493, P626, DOI 10.1016/j.neucom.2022.01.005
   Park Yookoon, 2018, P 2018 C N AM CHAPT, P1792, DOI DOI 10.18653/V1/N18-1162
   Reimers N, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P567
   Serban IV, 2016, AAAI CONF ARTIF INTE, P3776
   Serban IV, 2017, AAAI CONF ARTIF INTE, P3295
   Shang LF, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1577
   Shen L, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P5497
   Tian ZL, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 2, P231, DOI 10.18653/v1/P17-2036
   Vaswani A, 2017, ADV NEUR IN, V30
   Vinyals Oriol, 2015, ARXIV151106391
   Wang XZ, 2021, IEEE T CYBERNETICS, V51, P4400, DOI 10.1109/TCYB.2020.2987064
   Wang XZ, 2016, INT J SOFTW ENG KNOW, V26, P1341, DOI 10.1142/S0218194016400076
   Xing C, 2018, AAAI CONF ARTIF INTE, P5610
   Xu K, 2019, P INT C LEARN REPR
   Yoshikoshi T, 2022, NAACL 2022: THE 2022 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES: PROCEEDINGS OF THE STUDENT RESEARCH WORKSHOP, P222
   Zhang HN, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P3721
   Zhang Shuying, 2020, P INT C COMP LING CO, P4067
   Zhang Tianyi, 2020, P ICLR
   Zhang YZ, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020): SYSTEM DEMONSTRATIONS, P270
   Zhao X., ARXIV
NR 37
TC 0
Z9 0
U1 0
U2 0
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD MAR
PY 2024
VL 34
IS 03
BP 427
EP 447
DI 10.1142/S0218194024400011
EA MAR 2024
PG 21
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OT3N7
UT WOS:001190000000002
DA 2024-08-05
ER

PT J
AU Asensi, CC
   Martínez, JVB
   Muñoz, LA
   Pérez, FM
AF Asensi, Carlos Calatayud
   Martinez, Jose Vicente Berna
   Munoz, Lucia Arnau
   Perez, Francisco Macia
TI Modeling and Control of Drinking Water Supply Infrastructures Through
   Multi-Agent Systems for Sustainability
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Intelligent control; infrastructure modeling; multi-agent system;
   intentions; behaviors
ID OPTIMIZATION; IMPLEMENTATION
AB Traditionally, drinking water supply infrastructures have been designed to store as much water as possible and to do so during the energy cheap hours. This approach is unsustainable today. The use of digital systems capable of modeling the behavior of infrastructures and the creation of intelligent control systems can help to make drinking water supply systems more efficient and effective, while still meeting minimum service requirements. This work proposes the development of a control system, based on multi-agent systems (MAS), capable of generating an intelligent control over a drinking water infrastructure, based on the use of local interests of the agents and with an emergent behavior coherent with the needs. To validate the proposal, a simulator based on the infrastructures of a medium-sized Spanish city of 5000 inhabitants has been built and the control has been simulated using the MAS. The results show how the system can maintain the objectives set, handling unknown situations, and facilitating the development of future physical systems based on a just-in-time paradigm that guarantees sustainability, as it allows the generation of virtualizations of the infrastructures and their behavior, thus being able to study the best option for an infrastructure to resolve a supply situation.
C1 [Asensi, Carlos Calatayud] Aguas Valencia SA, Avda Marques Turia, Valencia 46005, Spain.
   [Martinez, Jose Vicente Berna; Munoz, Lucia Arnau; Perez, Francisco Macia] Univ Alicante, Dept Informat Technol & Computat, Carretera San Vicente del Raspeig S-N, San Vicente Del Raspeig 03690, Spain.
C3 Universitat d'Alacant
RP Martínez, JVB (corresponding author), Univ Alicante, Dept Informat Technol & Computat, Carretera San Vicente del Raspeig S-N, San Vicente Del Raspeig 03690, Spain.
EM ccalatayud@globalomnium.com; jvberna@ua.es; lucia.arnau@ua.es;
   pmacia@dtic.ua.es
RI Maciá Pérez, Francisco/L-5339-2014; Berna Martinez, Jose
   Vicente/L-7691-2014
OI Maciá Pérez, Francisco/0000-0002-2516-4728; Calatayud Asensi,
   Carlos/0009-0007-5744-631X; Berna Martinez, Jose
   Vicente/0000-0002-9007-6054; Arnau Munoz, Lucia/0009-0008-4555-4409
FU O+/-ce of the Vice President of Research of the University of Alicante
   [UAIND22-01B]; Agencia Valenciana de la Innovacion [INNTA3/2022/3]
FX This work was supported by the UAIND22-01B Project \Adaptive Control of
   UrbanSupply Systems" by the O +/- ce of the Vice President of Research
   of the University of Alicante, and the INNTA3/2022/3 project \Adaptive
   Control of Urban SupplySystems", by Agencia Valenciana de la Innovacion.
CR Berna-Martinez J. V., 2011, INT J ADV ENG SCI TE, V8, P32
   BERNAMARTINEZ JV, 2013, RES J APPL SCI ENG T, V5, P2180
   Candelieri A, 2018, J GLOBAL OPTIM, V71, P213, DOI 10.1007/s10898-018-0641-2
   Dorri A, 2018, IEEE ACCESS, V6, P28573, DOI 10.1109/ACCESS.2018.2831228
   Good N, 2015, IEEE T SMART GRID, V6, P2333, DOI 10.1109/TSG.2015.2399974
   Hoogesteger J, 2017, ENVIRON SCI POLICY, V77, P107, DOI 10.1016/j.envsci.2017.08.002
   Kaya D, 2021, Energy Management and Energy Efficiency in Industry: Practical Examples (Green Energy and Technology), P329
   Knorn S, 2016, IEEE T CONTROL NETW, V3, P334, DOI 10.1109/TCNS.2015.2468991
   Li L, 2021, CHEM ENG J, V405, DOI 10.1016/j.cej.2020.126673
   MASWaterControlSimulator, 2023, PUBLIC REPOSITORY GI
   Merei G, 2016, APPL ENERG, V168, P171, DOI 10.1016/j.apenergy.2016.01.083
   Ming B, 2017, J WATER RES PLAN MAN, V143, DOI [10.1061/(ASCE)WR.1943-5452.0000828, 10.1061/(asce)wr.1943-5452.0000828]
   Nasruddin, 2019, SUSTAIN ENERGY TECHN, V35, P48, DOI 10.1016/j.seta.2019.06.002
   Perez FM, 2022, MICROPROCESS MICROSY, V89, DOI 10.1016/j.micpro.2022.104431
   Shen W., 2019, Multi-Agent Systems for Concurrent Intelligent Design and Manufacturing
   Skiena S. S., 1998, ALGORITHM DESIGN MAN, V2
   Xiang XJ, 2021, ENVIRON IMPACT ASSES, V86, DOI 10.1016/j.eiar.2020.106515
   Xiao M, 2021, COMPUT APPL ENG EDUC, V29, P350, DOI 10.1002/cae.22235
NR 18
TC 0
Z9 0
U1 1
U2 1
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD MAY
PY 2024
VL 34
IS 05
BP 775
EP 791
DI 10.1142/S0218194024500025
EA MAR 2024
PG 17
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SB5X4
UT WOS:001187989200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Zhang, Y
   Liu, JJ
   Qi, L
   Meredith, G
AF Zhang, Yang
   Liu, Jingjing
   Qi, Lin
   Meredith, Grant
TI Consistency Checking for Refactoring from Coarse-Grained Locks to
   Fine-Grained Locks
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Refactoring; consistency checking; parallel extended finite automaton;
   dependency analysis
ID VERIFICATION; PROGRAMS
AB Refactoring for locks is widely used to improve the scalability and performance of concurrent programs. However, when refactoring from coarse-grained locks to fine-grained locks, the behavior of concurrent programs may be changed. To this end, we present LockCheck, a consistency-checking approach based on the parallel extended finite automaton for fine-grained locks. First, we model the critical sections of concurrent programs through control flow analysis and dependency analysis. Second, we sequentialize the concurrent programs to get all the possible transition paths. Furthermore, it reduces the exploration of the redundant paths using partial order theory to obtain the compared transition paths. Finally, we combine consistency rules to check the consistency of the program before and after refactoring. We evaluated LockCheck in five open-source projects. A total of 1528 refactoring operations have been evaluated and 93 inconsistent refactoring operations have been detected. The results show that LockCheck can effectively detect inconsistent behavior when coarse-grained locks are refactored into fine-grained locks.
C1 [Zhang, Yang; Liu, Jingjing; Qi, Lin] Hebei Univ Sci & Technol, Sch Informat Sci & Engn, Shijiazhuang 050018, Peoples R China.
   [Meredith, Grant] Federat Univ Australia, Global Profess Sch, Ballarat, Australia.
C3 Hebei University of Science & Technology; Federation University
   Australia
RP Qi, L (corresponding author), Hebei Univ Sci & Technol, Sch Informat Sci & Engn, Shijiazhuang 050018, Peoples R China.
EM uzhangyang@foxmail.com; 18633117234@163.com; 6021104@qq.com;
   g.meredith@federation.edu.au
FU Hebei Natural Science Foundation [F2023208001, F2024208010]; Hebei
   Oversea High-level Talent Foundation [C20230358]
FX The authors also gratefully acknowledge the insightful comments and
   suggestions ofthe reviewers, which have improved the presentation. This
   work is partially supported by the Hebei Natural Science Foundation
   under Grant Nos. F2023208001 and F2024208010 and the Hebei Oversea
   High-level Talent Foundation under Grant No.C20230358 .
CR Abadi M, 2019, INT J PARALLEL PROG, V47, P59, DOI 10.1007/s10766-017-0548-4
   Almogahed A, 2023, IEEE ACCESS, V11, P99143, DOI 10.1109/ACCESS.2023.3313186
   [Anonymous], 2020, About us
   Cai YD, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P784, DOI 10.1145/3540250.3549110
   Cassandra, US
   Cassez F, 2015, LECT NOTES COMPUT SC, V9450, P233, DOI 10.1007/978-3-662-48899-7_17
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Costea A, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3546942
   DIXON A, 2021, 2021 36 ANN ACM IEEE, P1
   Farzan A., ARXIV
   Farzan A, 2023, P ACM PROGRAM LANG, V7, DOI 10.1145/3571242
   Freedomotic, US
   Godefroid P, 1996, LECT NOTES COMPUT SC, V1032, P11
   Hsqldb, US
   Jgroups, US
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   MAZURKIEWICZ A, 1987, LECT NOTES COMPUT SC, V255, P279
   Ouni H, 2019, INT CONF APPL CONCUR, P23, DOI 10.1109/ACSD.2019.00007
   Safeaccount, US
   Schäfer M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P71, DOI 10.1145/1985793.1985804
   Sin'ya R, 2013, PROC INT CONF PARAL, P220, DOI 10.1109/ICPP.2013.31
   STOTTS PD, 1994, J SYST SOFTWARE, V27, P27, DOI 10.1016/0164-1212(94)90112-0
   Tao BX, 2014, PROC IEEE INT CONF S, P361, DOI 10.1109/ICSME.2014.58
   Xalan, US
   Yang Zhang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P565, DOI 10.1145/3395363.3404368
   Yu T., 2016, P 25 INT S SOFTW TES, P389, DOI DOI 10.1145/2931037.2931070
   Zhang Y, 2021, IEEE ACCESS, V9, P149287, DOI 10.1109/ACCESS.2021.3120414
   Zhang Y, 2019, IEEE ACCESS, V7, P104900, DOI 10.1109/ACCESS.2019.2931953
   Zhang Y, 2019, IEEE ACCESS, V7, P66292, DOI 10.1109/ACCESS.2019.2919203
   Zhu SH, 2023, PROC INT CONF SOFTW, P1342, DOI 10.1109/ICSE48619.2023.00118
NR 30
TC 0
Z9 0
U1 2
U2 2
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD JUL
PY 2024
VL 34
IS 07
BP 1063
EP 1093
DI 10.1142/S0218194024500141
EA JUN 2024
PG 31
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZY9V8
UT WOS:001240464600001
DA 2024-08-05
ER

PT J
AU Yuan, ZC
   Hu, XD
   Zhang, G
   Ma, ZM
AF Yuan, Zhongchen
   Hu, Xingda
   Zhang, Gang
   Ma, Zongmin
TI Integration of UML Class Diagrams Based on Semantics and Structure
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Software design reuse; UML class diagram; equivalent element;
   heterogeneous integration; conflict solution
ID SOFTWARE REUSE; RETRIEVAL
AB As a high-level reuse, software design reuse has received more and more attention because of its important impact on the subsequent development stages. Usually, the design models are typically represented as some graphs or diagrams, in which Unified Modeling Language (UML) class diagram is so widely used in software design that it has become the de facto standard. There has been some research on the reuse of UML class diagrams so far, mainly focusing on matching and retrieval. However, it is worth noting that there are many similar class diagrams modeling the same object or some related class diagrams modeling different aspects of the same object in the reuse repository. As a matter of fact, the primary step to achieve a high-quality reuse is to have high-quality software artifacts, so the well-designed UML class diagrams become a necessary resource for software design reuse. Therefore, it is necessary to integrate these class diagrams so that they have stronger modeling ability, and eliminating redundancy is another benefit of the integration. Up to now, there has been little discussion about the integration of class diagrams, so we propose an integration approach based on semantics and structure in this paper. The equivalent elements that can identify the semantically merged parts are defined, and the possible conflict items are listed from both semantic and structural aspects. The integration procedure composed of three stages is proposed, in which an approach combining semantic common class diagrams (SCCDs) and structural common graph sequence (SCGS) is combined to determine the merged parts, the integration issue of heterogeneous class diagrams is considered from the proposed abstract models, and the conflict resolution for each conflict item is described by examples. The experimental results show the effectiveness of our proposed integration approach.
C1 [Yuan, Zhongchen; Hu, Xingda] Shenyang Univ Technol, Sch Chem Proc Automat, Liaoyang 111004, Peoples R China.
   [Zhang, Gang] Shenyang Univ Technol, Sch Software, Shenyang 110870, Peoples R China.
   [Ma, Zongmin] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211106, Peoples R China.
C3 Shenyang University of Technology; Shenyang University of Technology;
   Nanjing University of Aeronautics & Astronautics
RP Yuan, ZC (corresponding author), Shenyang Univ Technol, Sch Chem Proc Automat, Liaoyang 111004, Peoples R China.
EM yuanzhongchen@163.com
FU National Natural Science Foundation of China [61370075, 61772269];
   Scientific Research Funds of the Education Department of Liaoning
   Province China [LJKZ0146, LJKZ0165, JYTMS20231250]
FX The work is supported by the National Natural Science Foundation of
   China (Nos. 61370075 and 61772269). The work is also supported by the
   Scientific Research Funds of the Education Department of Liaoning
   Province China (LJKZ0146, LJKZ0165 and JYTMS20231250).
CR Achar R., 2015, Automatic builds of large software repositories
   Agarwal R, 2003, COMMUN ACM, V46, P248, DOI 10.1145/903893.903944
   Ahmed M., 2015, Afr. J. Comput. ICT, V8, P95
   Al-Khiaty Mojeeb Al-Rhman, 2016, Lecture Notes on Software Engineering, V4, P41, DOI 10.7763/LNSE.2016.V4.221
   Ali FM, 2004, INFORM SOFTWARE TECH, V46, P499, DOI 10.1016/S0950-5849(03)00089-2
   Budhkar S., 2011, Int. J. Comput. Appl, V29, P36
   Bunke H., 2000, P VIS INT, V2000, P82
   Chechik M, 2012, INNOV SYST SOFTW ENG, V8, P3, DOI 10.1007/s11334-011-0155-2
   Costa V. O., 2014, P 2014 INT C SOFTW E, P318
   Elasri H, 2018, Arxiv, DOI arXiv:1801.04482
   Fahrenberg U, 2014, LECT NOTES COMPUT SC, V8411, P63
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Gomes P, 2004, AI COMMUN, V17, P13
   Ko H., 2021, Proceedings, V74, P13, DOI DOI 10.3390/PROCEEDINGS2021074013
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Lewis W. D., 2001, Coyote Papers: Working Papers in Linguistics, P9
   Ma ZM, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106456
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Meng L., 2013, INT J HYBRID INFORM, V6, P1
   Mikkonen T, 2019, IEEE SOFTWARE, V36, P105, DOI 10.1109/MS.2018.2884883
   MILLER G. A., 1998, WordNet: An electronic lexical database
   Minhas NasirMehmood., 2015, J SOFTWARE ENG APPL, V8, P372
   Muhamad Z. H., 2019, Int. J. Electr. Comput. Eng, V9, P3069
   Nikiforova O., 2015, P 10 INT C SOFTW ENG, P147
   OFarrell R., 2009, P 2009 SPRING SIM MU, P56
   Pottinger R.A., 2003, P 29 VLDB C, P826, DOI DOI 10.1016/B978-012722442-8/50081-1
   Qiu DH, 2013, 2013 SIXTH INTERNATIONAL CONFERENCE ON ADVANCED COMPUTATIONAL INTELLIGENCE (ICACI), P75, DOI 10.1109/ICACI.2013.6748477
   Rising L., 1998, The Patterns Handbook: Techniques, Strategies and Applications, P9
   Robles K, 2012, INFORM SOFTWARE TECH, V54, P72, DOI 10.1016/j.infsof.2011.07.003
   Salami HO, 2014, INT JOINT CONF COMP, P324, DOI 10.1109/JCSSE.2014.6841889
   Saval G., 2009, P 3 INT WORKSH VAR M, P127
   Wangoo D. P., 2018, P 2018 4 INT C COMP, P1
   West D. B., 1996, Introduction to graph theory, V2
   Yuan ZC, 2023, INT J SOFTW ENG KNOW, V33, P1169, DOI 10.1142/S0218194023500286
   Yuan ZC, 2020, REQUIR ENG, V25, P213, DOI 10.1007/s00766-019-00317-w
   Zhang X., 2012, P 2012 INT C TRUSTW, P506
   杨云峰, 1999, [西安公路交通大学学报, Journal of Xian Highway University], P67
NR 37
TC 0
Z9 0
U1 4
U2 4
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 MAY 31
PY 2024
DI 10.1142/S0218194024500207
EA MAY 2024
PG 32
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SP1G6
UT WOS:001235557100001
DA 2024-08-05
ER

PT J
AU Luna, RA
   Garrigós, I
   Zubcoff, J
   González-Mora, C
AF Luna, Reynaldo Alvarez
   Garrigos, Irene
   Zubcoff, Jose
   Gonzalez-Mora, Cesar
TI Model-Driven Approach for Making Citizen Science Data FAIR
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Citizen science; DCAT profile; FAIR; PPSR core; model-driven
AB Citizen Science (CS) initiatives have proliferated in different scientific and social fields, producing vast amounts of data. Existing CS projects usually adopt PPSR Core as a data and metadata standard. However, these projects are still not FAIR (Findable, Accessible, Interoperable and Reusable)-compliant. We propose to use DCAT as a data and metadata standard since it helps to improve the interoperability of CS data catalogs and all the FAIR features. For this purpose, in this paper we present a model-driven approach to make CS data FAIR. Our approach has the following contributions: (i) the definition of a metamodel based on PPSR Core, (ii) the definition of a DCAT profile for CS, (iii) a definition of set of automated transformations from PPSR Core to DCAT. Finally, the implementation of the model-driven process has been validated by evaluating several FAIR metrics. The results show that our proposal has significantly improved the FAIR quality of CS projects.
C1 [Luna, Reynaldo Alvarez] Univ Informat Sci, Artificial Intelligence Res Grp, Havana, Cuba.
   [Garrigos, Irene; Zubcoff, Jose; Gonzalez-Mora, Cesar] Univ Alicante, Wake Res Grp, Alicante, Spain.
C3 Universitat d'Alacant
RP Luna, RA (corresponding author), Univ Informat Sci, Artificial Intelligence Res Grp, Havana, Cuba.
EM rluna@uci.cu; igarrigos@dlsi.ua.es; jose.zubcoff@ua.es; cgmora@ua.es
RI ; Garrigos, Irene/R-6595-2018
OI Alvarez Luna, Reynaldo/0000-0002-5279-7598; Garrigos,
   Irene/0000-0001-5869-5245; Gonzalez Mora, Cesar/0000-0002-6878-5321
FU European Union Next Generation EU/PRTR; European Union Next Generation
   EU/PRTR [TED2021130890B-C21]
FX No Statement Available
CR Alvarez R, 2022, LECT NOTES COMPUT SC, V13362, P162, DOI 10.1007/978-3-031-09917-5_11
   Baker B, 2016, BIOSCIENCE, V66, P921, DOI 10.1093/biosci/biw120
   Barthelemy F, 2022, ELECTRON GOV-INT J, V18, P137, DOI 10.1504/EG.2022.121856
   Benhamed OM, 2023, DATA INTELLIGENCE, V5, P184, DOI 10.1162/dint_a_00161
   Bonter DN, 2021, FRONT ECOL EVOL, V9, DOI 10.3389/fevo.2021.619682
   Bowser A., 2020, CITIZEN SCI THEORY P, V5, P18, DOI [10.5334/cstp.303, DOI 10.5334/CSTP.303]
   core.citizenscience.org, 2023, PPSR CORE
   D. C. M. Initiative, 2021, DCMI MET TERMS
   D. C. T. Group, 2023, DARWIN CORE BIODIVER
   Dcat, 2023, US
   De Pourcq K., 2018, IMPORTANCE DATA STAN
   Devaraju A., 2021, Data Science Journal, V20, P1, DOI [DOI 10.5334/DSJ-2021-004, 10.5334/dsj-2021-004]
   F. D. M. M. W. Group, 2020, FAIR DATA MATURITY M
   Fraisl D, 2022, NAT REV METHOD PRIME, V2, DOI 10.1038/s43586-022-00144-4
   De Marina PCG, 2021, IEEE ACCESS, V9, P76354, DOI 10.1109/ACCESS.2021.3082182
   González-Mora C, 2020, J WEB ENG, V19, P1147, DOI 10.13052/jwe1540-9589.197810
   González-Mora C, 2020, LECT NOTES COMPUT SC, V12128, P512, DOI 10.1007/978-3-030-50578-3_36
   Haklay M., 2021, Sci. Citizen Sci, P13, DOI [DOI 10.1007/978-3-030-58278-4_2, DOI 10.1007/978-3-030-58278-42]
   Hansen J. S., 2021, BIOL INVASIONS, V12, P3419
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Khin M.S., 2020, Data and Information Management, V4, P279, DOI DOI 10.2478/DIM-2020-0019
   Klímek J, 2019, J WEB SEMANT, V55, P69, DOI 10.1016/j.websem.2018.11.001
   Kullenberg C, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0147152
   Lange Christoph, 2022, Designing Data Spaces: Te Ecosystem Approach to Competitive Advantage, P111, DOI [10.1007/978-3-030-93975-5_7, DOI 10.1007/978-3-030-93975-5_7]
   Lemmens R., 2021, CONCEPTUAL MODEL PAR, P159
   Liu H-Y., 2021, SCI CITIZEN SCI, P439, DOI DOI 10.1007/978-3-030-58278-4_22
   Lukyanenko R, 2020, INFORM SYST FRONT, V22, P961, DOI 10.1007/s10796-019-09915-z
   Musen MA, 2022, SCI DATA, V9, DOI 10.1038/s41597-022-01815-3
   Noy N, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P1365, DOI 10.1145/3308558.3313685
   Pareti P, 2022, J WEB SEMANT, V74, DOI 10.1016/j.websem.2022.100721
   Perello J., 2021, SCI CITIZEN SCI, P517, DOI 10.1007/978-3-030-58278-4_26
   Peter M, 2021, PEOPLE NAT, V3, P294, DOI 10.1002/pan3.10193
   Robinson LD, 2018, CITIZEN SCIENCE, P27
   Roche J, 2020, FRONT SOCIOL, V5, DOI 10.3389/fsoc.2020.613814
   Roman D, 2021, DATA TECHNOL APPL, V55, P622, DOI 10.1108/DTA-10-2020-0253
   Schade S., 2017, 1 MONDAY, V22, pJRC107260
   Schema.org, 2023, About us
   Spasiano A, 2021, SUSTAINABILITY-BASEL, V13, DOI 10.3390/su13147904
   Suman AB, 2023, SUSTAINABILITY-BASEL, V15, DOI 10.3390/su15054496
   Suter S, 2023, ENVIRON MONIT ASSESS, V195, DOI 10.1007/s10661-022-10887-y
   U. Data Metadata WG, 2019, PPSR CORE DATA METAD
   Vohland K., 2021, The science of citizen science, V1A
   Wilkinson Mark D, 2016, Sci Data, V3, P160018, DOI 10.1038/sdata.2016.18
   Wilkinson MD, 2018, SCI DATA, V5, DOI 10.1038/sdata.2018.118
NR 44
TC 0
Z9 0
U1 0
U2 0
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD JUN
PY 2024
VL 34
IS 06
BP 891
EP 907
DI 10.1142/S0218194024500074
EA APR 2024
PG 17
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6U6
UT WOS:001209627900001
DA 2024-08-05
ER

PT J
AU Wu, D
   Li, T
   Zhao, YR
   Liu, JR
   Tang, ZF
   Yang, Z
AF Wu, Di
   Li, Tong
   Zhao, Yiran
   Liu, Junrui
   Tang, Zifang
   Yang, Zhen
TI A Novel Entity and Relation Joint Interaction Learning Approach for
   Entity Alignment
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Knowledge graph embedding; entity alignment; semi-supervised framework
ID AWARE
AB Entity alignment (EA) aims to find equivalent entities in knowledge graphs (KGs) from multiple data sources and is a crucial step in integrating KGs. Recent studies learn the similarity of entity embeddings by aggregating neighboring entities. However, these methods solely compare neighboring entities and do not incorporate the connected relation between an entity and its neighbors. In this paper, we propose a novel Entity and Relation joint Interaction Learning (ERIL) approach, which effectively captures the interaction between entities and relations, enhancing the precision of alignment across different KGs. Specifically, the ERIL model jointly learns the neighborhood features of entities and the spatial structure of relations to train a shared permutation matrix, capturing comprehensive associative relations within KGs. Moreover, a semi-supervised iterative framework is designed to leverage the positive interactions between entities and relations to identify more aligned entities. Extensive experiments are conducted on five benchmark datasets to demonstrate the effectiveness of ERIL compared with existing state-of-the-art EA methods. On DBP15K, our model ERIL outperforms currently available EA methods by 1.9% on Hits@10.
C1 [Wu, Di; Li, Tong; Zhao, Yiran; Liu, Junrui; Tang, Zifang; Yang, Zhen] Beijing Univ Technol, Fac Informat Technol, Beijing 100124, Peoples R China.
C3 Beijing University of Technology
RP Li, T (corresponding author), Beijing Univ Technol, Fac Informat Technol, Beijing 100124, Peoples R China.
OI Liu, Junrui/0000-0003-1632-1354; zhao, yi ran/0000-0002-7838-3457
FU National Key R&D Program of China [2022YFB3103104]; Major Research Plan
   of National Natural Science Foundation of China [92167102]; Importation
   and Development of High-Caliber Talents Project of Beijing Municipal
   Institutions [CITTCD20190308]; Project of Beijing Municipal Education
   Commission [KM202110005025]; Beijing Natural Science Foundation Project
   [Z200002]; Engineering Research Center of Intelligent Perception and
   Autonomous Control, Ministry of Education
FX This work is partially supported by National Key R&D Program of
   China(No. 2022YFB3103104), the Major Research Plan of National Natural
   Science Foundation of China (92167102), the Importation and Development
   of High-Caliber Talents Project of Beijing Municipal Institutions
   (CIT&TCD20190308),the Project of Beijing Municipal Education Commission
   (No. KM202110005025), Beijing Natural Science Foundation Project (No.
   Z200002), and Engineering Research Center of Intelligent Perception and
   Autonomous Control, Ministry of Education.
CR Bollacker K., 2008, P 2008 ACM SIGMOD IN, P1247, DOI 10.1145/1376616.1376746
   Cai W., PROC 31 INT JOINT C, P1930
   Cai WS, 2022, INFORM PROCESS MANAG, V59, DOI 10.1016/j.ipm.2021.102790
   Chen MH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1511
   Gaur M, 2022, AAAI CONF ARTIF INTE, P10672
   Jiang TT, 2022, PATTERN RECOGN, V124, DOI 10.1016/j.patcog.2021.108433
   Lehmann J, 2015, SEMANT WEB, V6, P167, DOI 10.3233/SW-140134
   Liu X, 2022, PROCEEDINGS OF THE ACM WEB CONFERENCE 2022 (WWW'22), P860, DOI 10.1145/3485447.3511945
   Liu ZY, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P6355
   O'Connor K, 2022, STUD HIGH EDUC, V47, P412, DOI 10.1080/03075079.2020.1750585
   Sun ZQ, 2020, AAAI CONF ARTIF INTE, V34, P222
   Sun ZQ, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4396
   Sun Z, 2018, 12TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS), P297, DOI 10.1145/3240323.3240361
   Wang S., 2022, Advances in Neural Information Processing Systems, P5882
   Wang ZC, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P349
   Wu YT, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5278
   Wu YT, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P240
   Wu Yuting, 2020, ACL, P6477, DOI DOI 10.18653/V1/2020.ACLMAIN.578
   Xie CX, 2023, APPL SCI-BASEL, V13, DOI 10.3390/app13095748
   Xin KX, 2022, WSDM'22: PROCEEDINGS OF THE FIFTEENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P1197, DOI 10.1145/3488560.3498523
   Zhu H, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4258
   Zhu Q, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2241, DOI 10.1145/3366423.3380289
   Zhu Y, 2021, AAAI CONF ARTIF INTE, V35, P4749
NR 23
TC 0
Z9 0
U1 4
U2 4
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD MAY
PY 2024
VL 34
IS 05
BP 821
EP 843
DI 10.1142/S0218194024500049
EA MAR 2024
PG 23
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SB5X4
UT WOS:001186255600002
DA 2024-08-05
ER

PT J
AU Wang, PY
   Liu, SY
AF Wang, Pingyan
   Liu, Shaoying
TI Toward Pointer-Analysis-Based Vulnerability Discovery in Human-Machine
   Pair Programming
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Human-Machine Pair Programming; pointer analysis; security; taint
   analysis; vulnerability
ID TO ANALYSIS
AB Pointer analysis is the underlying technique of many static analysis tools for vulnerability discovery. It has proved to be effective in identifying a variety of vulnerabilities, such as buffer overflow vulnerabilities and injection vulnerabilities. However, most existing pointer analysis approaches require whole-program availability, i.e. the program to be analyzed should be complete, which may hinder a timely analysis during the coding phase. In this paper, we present two approaches, exhaustive and demand-driven pointer analyses, both of which are applied to a paradigm known as Human-Machine Pair Programming. The ideas enable us to discover security flaws as early as in the coding phase. In this paper, we describe in detail how our approaches maintain flow sensitivity and propagate points-to and taint information in an incremental fashion. We conduct an evaluation of our approaches on SecuriBench Micro and show that the approaches can capture all the potential vulnerabilities in the test cases, though several false alarms are reported.
C1 [Wang, Pingyan; Liu, Shaoying] Hiroshima Univ, Grad Sch Adv Sci & Engn, Higashihiroshima 7398511, Japan.
C3 Hiroshima University
RP Liu, SY (corresponding author), Hiroshima Univ, Grad Sch Adv Sci & Engn, Higashihiroshima 7398511, Japan.
EM pingyanwang@hiroshima-u.ac.jp; sliu@hiroshima-u.ac.jp
OI Wang, Pingyan/0000-0002-1085-5999; Liu, Shaoying/0000-0002-6748-5052
FU JST SPRING [JPMJSP2132]
FX This work was supported by JST SPRING under Grant Number JPMJSP2132
CR Aho M. S., 2007, COMPILERS PRINCIPLES, V37
   Andersen L. O., 1994, Ph.D. dissertation
   [Anonymous], 2017, INT J SYST ASSUR ENG, V8, P512
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Chess J., 2007, SECURE PROGRAMMING S, V13
   Cowan F., 2000, P DARPA INF SURVIVAB, P119
   Dagenais B, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P313
   Dor N, 1998, ACM SIGPLAN NOTICES, V33, P27, DOI 10.1145/277633.277637
   Durumeric Z, 2014, PROCEEDINGS OF THE 2014 ACM INTERNET MEASUREMENT CONFERENCE (IMC'14), P475, DOI 10.1145/2663716.2663755
   Emanuelsson P, 2008, ELECTRON NOTES THEOR, V217, P5, DOI 10.1016/j.entcs.2008.06.039
   FindBugs, FIND BUGS JAV PROGR
   github, AP DRUID 0 17 0
   github, LDAP INJECTION APACH
   github, SEC MICR
   Goseva-Popstojanova K, 2017, PROC INT SYMP SOFTW, P152, DOI 10.1109/ISSRE.2017.42
   Grech Y., 2017, P ACMPROGRAM LANG, V1, P1
   Heintze N, 2001, ACM SIGPLAN NOTICES, V36, P24, DOI 10.1145/381694.378802
   Imtiaz N, 2019, PROC INT SYMP SOFTW, P323, DOI 10.1109/ISSRE.2019.00040
   Landi W., 1992, ACM Letters on Programming Languages and Systems, V1, P323, DOI 10.1145/161494.161501
   LANDI W, 1992, SIGPLAN NOTICES, V27, P235, DOI 10.1145/143103.143137
   Larus JB, 2004, IEEE SOFTWARE, V21, P92, DOI 10.1109/MS.2004.1293079
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   Liu S., 2018, INT WORKSH STRUCT OB, P3
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   Moore H., 2013, Security flaws in universal plug and play: Unplug, don't play
   Rountev A, 1999, LECT NOTES COMPUT SC, V1687, P235, DOI 10.1145/318774.318945
   Rountev B. G., 2001, 10 INT C COMP CONSTR, P20
   Smaragdakis Yannis, 2015, FOUND TRENDS PROGRAM, V1, P1, DOI DOI 10.1561/2500000014
   Sridharan M, 2005, ACM SIGPLAN NOTICES, V40, P59, DOI 10.1145/1103845.1094817
   Steensgaard B., 1996, 23 ANN ACM SIGACT SI, P32, DOI [10.1145/237721.237727, DOI 10.1145/237721.237727]
   Su ZD, 2006, ACM SIGPLAN NOTICES, V41, P372, DOI 10.1145/1111320.1111070
   Teto JK, 2017, PROCEEDINGS OF THE SOUTHEAST CONFERENCE ACM SE'17, P102, DOI 10.1145/3077286.3077571
   Tripp O, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P87, DOI 10.1145/1542476.1542486
   Wang PY, 2024, J SYST SOFTWARE, V208, DOI 10.1016/j.jss.2023.111902
   Wang PY, 2022, J INTERNET TECHNOL, V23, P1129, DOI 10.53106/160792642022092305021
   Yan H, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P327, DOI 10.1145/3180155.3180178
NR 37
TC 0
Z9 0
U1 2
U2 2
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD MAY
PY 2024
VL 34
IS 05
BP 751
EP 774
DI 10.1142/S0218194024500013
EA FEB 2024
PG 24
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SB5X4
UT WOS:001174580800002
DA 2024-08-05
ER

PT J
AU Wan, ZX
   Xie, CL
   Lv, QR
   Fan, YS
AF Wan, Zexuan
   Xie, Chunli
   Lv, Quanrun
   Fan, Yasheng
TI Semantic Code Clone Detection Based on Community Detection
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Code clone detection; semantic clone; community detection; centrality
   analysis; siamese network
ID CENTRALITY
AB Semantic code clone detection is to find code snippets that are structurally or syntactically different, but semantically identical. It plays an important role in software reuse, code compression. Many existing studies have achieved good performance in non-semantic clone, but semantic clone is still a challenging task. Recently, several works have used tree or graph, such as Abstract Syntax Tree (AST), Control Flow Graph (CFG) or Program Dependency Graph (PDG) to extract semantic information from source codes. In order to reduce the complexity of tree and graph, some studies transform them into node sequences. However, this transformation will lose some semantic information. To address this issue, we propose a novel high-performance method that utilizes community detection to extract features of AST while preserving its semantic information. First, based on the AST of source code, we exploit community detection to split AST into different subtrees to extract the underlying semantics information of different code blocks, and use centrality analysis to quantify the semantic information as the weight of AST nodes. Then, the AST is converted into a sequence of tokens with weights, and a Siamese neural network model is used to detect the similarity of token sequences for semantic code clone detection. Finally, to evaluate our approach, we conduct experiments on two standard benchmark datasets, Google Code Jam (GCJ) and BigCloneBench (BCB). Experimental results show that our model outperforms the eight publicly available state-of-the-art methods in detecting code clones. It is five times faster than the tree-based method (ASTNN) in terms of time complexity.
C1 [Wan, Zexuan; Xie, Chunli; Lv, Quanrun; Fan, Yasheng] Technol Jiangsu Normal Univ, Sch Comp Sci, Xuzhou 221116, Peoples R China.
RP Xie, CL (corresponding author), Technol Jiangsu Normal Univ, Sch Comp Sci, Xuzhou 221116, Peoples R China.
EM wanzexuan123@163.com; xiechunti@jsnu.edu.cn; 1727176727@qq.com;
   1480007629@qq.com
FU National Natural Science Foundation of China [62276119]; Jiangsu Normal
   University Graduate Research and Practice Innovation Program
   [2022XKT1530]
FX This work was supported by the National Natural Science Foundation of
   China General Fund under Grant 62276119, the Jiangsu Normal University
   Graduate Research and Practice Innovation Program under Grant
   2022XKT1530.
CR Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Blondel VD, 2008, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2008/10/P10008
   Chunrong Fang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P516, DOI 10.1145/3395363.3397362
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   FREEMAN LC, 1977, SOCIOMETRY, V40, P35, DOI 10.2307/3033543
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Hu TC, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P89, DOI 10.1145/3597926.3598040
   Hu YT, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556927
   Hua W, 2021, IEEE T RELIAB, V70, P304, DOI 10.1109/TR.2020.3001918
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kingma D. P., 2014, arXiv
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Liang H., 2021, P 34 INT JOINT C NEU, P1
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Marchiori M, 2000, PHYSICA A, V285, P539, DOI 10.1016/S0378-4371(00)00311-3
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, DOI 10.48550/ARXIV.1301.3781]
   Roy C. K., 2007, Technical Report No. 2007-541
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Tai KS, 2015, Arxiv, DOI arXiv:1503.00075
   Shi E., 2021, arXiv
   Svajlenko J, 2017, PROC IEEE ACM INT C, P27, DOI 10.1109/ICSE-C.2017.3
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Wang PC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/3180155.3180179
   Wang RC, 2024, AUTOMAT SOFTW ENG, V31, DOI 10.1007/s10515-024-00413-4
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/saner48275.2020.9054857, 10.1109/SANER48275.2020.9054857]
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wu Y., 2022, P 37 IEEE ACM INT C, P1
   Wu YM, 2024, IEEE T RELIAB, V73, P1310, DOI 10.1109/TR.2023.3312294
   Wu YM, 2020, IEEE INT CONF AUTOM, P821, DOI 10.1145/3324884.3416562
   Yue Q., 2021, Comput. Sci, V48, P509
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
   Zou Y, 2020, IEEE INT CONF AUTOM, P931, DOI 10.1145/3324884.3416541
NR 42
TC 0
Z9 0
U1 0
U2 0
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 JUL 26
PY 2024
DI 10.1142/S0218194024500323
EA JUL 2024
PG 32
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6M6
UT WOS:001277841300001
DA 2024-08-05
ER

PT J
AU Suhaila, SS
   Krishnan, KS
AF Suhaila, S. Syed
   Krishnan, K. Sundara
TI Improving Windows Malware Detection Using the Random Forest Algorithm
   and Multi-View Analysis
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Malware detection; static analysis; dynamic analysis; locality sensitive
   hashing; local binary pattern; random forest
ID MACHINE LEARNING TECHNIQUES; TEXTURE CLASSIFICATION
AB Cybercriminals motivated by malign purpose and financial gain are rapidly developing new variants of sophisticated malware using automated tools, and most of these malware target Windows operating systems. This serious threat demands efficient techniques to analyze and detect zero-day, polymorphic and metamorphic malware. This paper introduces two frameworks for Windows malware detection using random forest algorithms. The first scheme uses features obtained from static and dynamic analysis for training, and the second scheme uses features obtained from static, dynamic, malware image analysis, location-sensitive hashing and file format inspections. We carried out an extensive experiment on two feature sets, and the proposed schemes are evaluated using seven standard evaluation metrics. The experiment results demonstrate that the second scheme recognizes unseen malware better than the first scheme and three state-of-the-art works. The findings show that the second scheme's multi-view feature set contributes to its 99.58% accuracy and lowers false positive rate of 0.54%.
C1 [Suhaila, S. Syed; Krishnan, K. Sundara] HCAH India, Karaikkudi, Tamilnadu, India.
RP Suhaila, SS (corresponding author), HCAH India, Karaikkudi, Tamilnadu, India.
EM syedsuhaila63@gmail.com; sundarakrishnank@gmail.com
CR Amer E, 2021, COMPUT SECUR, V110, DOI 10.1016/j.cose.2021.102449
   Bai JR, 2016, SECUR COMMUN NETW, V9, P4227, DOI 10.1002/sec.1600
   Bilar D, 2007, INT J ELECTRON SECUR, V1, P156, DOI 10.1504/IJESDF.2007.016865
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Casolare Rosangela, 2022, Procedia Computer Science, P145, DOI 10.1016/j.procs.2022.09.047
   Chawla N, 2021, IEEE T INF FOREN SEC, V16, P3426, DOI 10.1109/TIFS.2021.3080510
   Chemmakha M, 2022, IFAC PAPERSONLINE, V55, P771, DOI 10.1016/j.ifacol.2022.07.406
   Ciss S., 2015, HAL OPEN SCI
   Damodaran A, 2017, J COMPUT VIROL HACKI, V13, P1, DOI 10.1007/s11416-015-0261-z
   Das S, 2016, IEEE T INF FOREN SEC, V11, P289, DOI 10.1109/TIFS.2015.2491300
   Drew J, 2017, EURASIP J INF SECUR, DOI 10.1186/s13635-017-0055-6
   Ferguson Justin., 2008, REVERSE ENG CODE IDA
   Ho TK, 1998, IEEE T PATTERN ANAL, V20, P832, DOI 10.1109/34.709601
   Hussain Abrar, 2022, Proceedings of International Conference on Information Technology and Applications: ICITA 2021. Lecture Notes in Networks and Systems (350), P619, DOI 10.1007/978-981-16-7618-5_53
   Jinbo Zhang, 2020, 2020 International Conference on Computer Information and Big Data Applications (CIBDA). Proceedings, P233, DOI 10.1109/CIBDA50819.2020.00059
   Kamboj A, 2023, EGYPT INFORM J, V24, P81, DOI 10.1016/j.eij.2022.12.002
   Kirda E., 2011, ENCY CRYPTOGRAPHY SE, P751
   Krishnan KS, 2020, INT J WAVELETS MULTI, V18, DOI 10.1142/S0219691320500423
   Kumar A, 2019, J KING SAUD UNIV-COM, V31, P252, DOI 10.1016/j.jksuci.2017.01.003
   Kumara MAA, 2018, FUTURE GENER COMP SY, V79, P431, DOI 10.1016/j.future.2017.06.002
   Neha S., 2021, Glob. Trans. Proc, V2, DOI DOI 10.1016/J.GLTP.2021.01.004
   Nguyen Nhu T., 2020, ICDAR '20: Proceedings of the 2020 on Intelligent Cross-Data Analysis and Retrieval Workshop, P9, DOI 10.1145/3379174.3392318
   Ojala T, 1996, PATTERN RECOGN, V29, P51, DOI 10.1016/0031-3203(95)00067-4
   Ojala T, 2002, IEEE T PATTERN ANAL, V24, P971, DOI 10.1109/TPAMI.2002.1017623
   Oliver Jonathan, 2013, 2013 Fourth Cybercrime and Trustworthy Computing Workshop (CTC), P7, DOI 10.1109/CTC.2013.9
   Oliver J., 2021, P 2021 23 EUROPEAN C, P1, DOI DOI 10.23919/EPE21ECCEEUROPE50061.2021.9570434
   Or-Meir O, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3329786
   Panker T, 2021, KNOWL-BASED SYST, V226, DOI 10.1016/j.knosys.2021.107095
   Pavithra J., 2023, J CYBER SEC, V4, P135
   Petrosyan A., 2023, STAT ANN NUMBER MALW
   Qaiser S., 2018, Int. J. Comput. Appl., V181, P25, DOI [DOI 10.5120/IJCA2018917395, 10.5120/ijca2018917395]
   Raabe M., 2016, AUTOMATICALLY EXTRAC
   Rácz A, 2019, MOLECULES, V24, DOI 10.3390/molecules24152811
   Sharma S., 2018, SOFT COMPUT THEOR AP, V742, P332
   Shhadat I, 2020, PROCEDIA COMPUT SCI, V170, P917, DOI 10.1016/j.procs.2020.03.110
   Singh J, 2021, J SYST ARCHITECT, V112, DOI 10.1016/j.sysarc.2020.101861
   Ucci D, 2019, COMPUT SECUR, V81, P123, DOI 10.1016/j.cose.2018.11.001
   WANG L, 1990, PATTERN RECOGN, V23, P905, DOI 10.1016/0031-3203(90)90135-8
   Wuchner T., 2014, Proceedings of the 9th ACM Symposium on Information, Computer and Communications Security - ASIA CCS '14, P271
   Xu ZW, 2018, LECT NOTES COMPUT SC, V10699, P53, DOI 10.1007/978-3-319-73830-7_6
   Zhang YC, 2022, IEEE T RELIAB, V71, P309, DOI 10.1109/TR.2020.3020954
   Zhao YT, 2019, SECUR COMMUN NETW, DOI 10.1155/2019/2674684
NR 42
TC 0
Z9 0
U1 3
U2 3
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD JUN
PY 2024
VL 34
IS 06
BP 909
EP 939
DI 10.1142/S0218194024500086
EA APR 2024
PG 31
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6U6
UT WOS:001201827700001
DA 2024-08-05
ER

PT J
AU Zhang, WX
   Wang, WW
   Zhao, RL
AF Zhang, Weixi
   Wang, Weiwei
   Zhao, Ruilian
TI Flaky Test Detection Based on Adaptive Latest Position Execution for
   Concurrent Android Applications
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Android application; concurrency; flaky test detection; latest execution
   position for asynchronous event; adaptive compelled execution strategy
AB Tests may pass or fail under the same conditions. These tests are commonly known as flaky tests. In Android applications, the primary reason for flaky tests is attributed to its event-driven programming paradigm and multi-threading concurrency mechanism. It may activate an unexpected event order when a test is executed, causing test flakiness. The later the execution of asynchronous events, the more likely it is to result in test flakiness. Inspired by this deduction, this paper puts forward a flaky test detection method for concurrent Android applications based on adaptive latest position execution. In more detail, the latest execution positions of each asynchronous event are identified by analyzing the sequential dependencies between events. On this basis, the asynchronous event is scheduled at the corresponding position, thereby trying to change the test results and detecting flaky tests. To validate the effectiveness and efficiency of our approach, a series of experiments are conducted on 16 known flaky test cases across 7 Android applications. The experimental results show that compared with the state-of-the-art tool FlakeScanner, the flaky test detection rate of our approach improves by 18.75%.
C1 [Zhang, Weixi; Zhao, Ruilian] Beijing Univ Chem Technol, Coll Informat Sci & Technol, Beijing 100029, Peoples R China.
   [Wang, Weiwei] Beijing Inst Petrochem Technol, Coll Informat Engn, Beijing 102699, Peoples R China.
C3 Beijing University of Chemical Technology
RP Zhao, RL (corresponding author), Beijing Univ Chem Technol, Coll Informat Sci & Technol, Beijing 100029, Peoples R China.; Wang, WW (corresponding author), Beijing Inst Petrochem Technol, Coll Informat Engn, Beijing 102699, Peoples R China.
EM wangweiwei@bipt.edu.cn; rlzhao@mail.buct.edu.cn
OI Wang, Weiwei/0000-0003-4860-1553
CR Ahmad A, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1791
   Alshammari A, 2021, PROC INT CONF SOFTW, P1572, DOI 10.1109/ICSE43902.2021.00140
   [Anonymous], 2015, P 2015 INT S SOFTWAR, P83
   [Anonymous], 2014, P 2014 INT S SOFTW T
   Thorve S, 2018, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2018.00062
   Dong Z, 2021, Arxiv, DOI arXiv:2005.10762
   Dong Z, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P367, DOI 10.1145/3468264.3468584
   Fatima S, 2023, IEEE T SOFTWARE ENG, V49, P1912, DOI 10.1109/TSE.2022.3201209
   Fazzini M, 2020, IEEE INT CONF AUTOM, P1204, DOI 10.1145/3324884.3418927
   Gao ZB, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P55, DOI 10.1109/ICSE.2015.28
   Gruber M, 2021, IEEE INT CONF SOFTW, P148, DOI 10.1109/ICST49551.2021.00026
   Hashemi N, 2022, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSME55016.2022.00011
   Lam W, 2020, PROC INT SYMP SOFTW, P403, DOI 10.1109/ISSRE5003.2020.00045
   Lam W, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P101, DOI 10.1145/3293882.3330570
   Lam W, 2019, IEEE INT CONF SOFTW, P312, DOI 10.1109/ICST.2019.00038
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Parry O, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3476105
   Shi A, 2016, IEEE INT CONF SOFTW, P80, DOI 10.1109/ICST.2016.40
   Silva D, 2020, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME46990.2020.00037
   Verdecchia R, 2021, IEEE ACCESS, V9, P76119, DOI 10.1109/ACCESS.2021.3082424
   Wang X., 2020, Appl. Res. Comput, VS01
NR 21
TC 0
Z9 0
U1 0
U2 0
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 JUN 14
PY 2024
DI 10.1142/S0218194024500232
EA JUN 2024
PG 26
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TZ8S1
UT WOS:001245178300001
DA 2024-08-05
ER

PT J
AU Eldanasory, NA
   Idrees, AM
   Yehia, E
AF Eldanasory, Naglaa A.
   Idrees, Amira M.
   Yehia, Engy
TI EFSP: An Enhanced Full Scrum Process Model
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Agile process model; Scrum; EFSP model; software process enhancement;
   quality
ID AGILE-STAGE-GATE; SOFTWARE-DEVELOPMENT
AB Scrum has emerged as the most widely used and desired Agile approach for providing corporate strategic competency by establishing a solid foundation for project management. However, there are several issues confronted during its implementation. Some researchers tried to solve specific areas of Scrum issues except only research that covers several aspects without resolving all of them. So, this study presents the EFSP model for improving maintainability, security and reusability. Methodologically, in this study, we carry out the following tasks: (i) apply Mark or 7C model on requirements, and (ii) identify Scrum aspects (artifacts and/or activities) that should be expanded as follows: adding the concept of systematic reusability into sprint planning, classifying the requirements into four layers according to clean architecture into sprint backlog, and evolutionary model into sprint. This model offers solutions to these problems while maintaining the simplicity and flexibility of Scrum. The system evaluation results have achieved an improvement in maintainability by reducing technical debt from 1.6% to 0.9%, security from 10 to 3, timeliness from 5 to 2, and improving team productivity from 1.24 to 2.78. The EFSP model may be utilized to develop a standard in other projects.
C1 [Eldanasory, Naglaa A.] Helwan Univ, Fac Commerce & Business Adm, Business Informat Syst Dept, Cairo, Egypt.
   [Idrees, Amira M.] Future Univ Egypt, Fac Comp & Informat Technol, Cairo, Egypt.
   [Yehia, Engy] Helwan Univ, Fac Commerce & Business Adm, Informat Syst Dept, Cairo, Egypt.
C3 Egyptian Knowledge Bank (EKB); Helwan University; Egyptian Knowledge
   Bank (EKB); Future University in Egypt; Egyptian Knowledge Bank (EKB);
   Helwan University
RP Idrees, AM (corresponding author), Future Univ Egypt, Fac Comp & Informat Technol, Cairo, Egypt.
EM Naglaa.Aly21@commerce.helwan.edu.eg; amira.mohamed@fue.edu.eg;
   engy_yehia@commerce.helwan.edu.eg
OI aly, naglaa/0000-0002-8052-8774
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Albarqi Aysha Abdullah, 2018, International Journal of Information Engineering and Electronic Business, V10, P23, DOI 10.5815/ijieeb.2018.03.04
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Alsaber L., 2021, B ELECT ENG INFORM, V10, P319
   Amiri N., 2020, MAJLESI J MECHATRON, V9, P1
   Anand R. Vijay, 2018, International Journal of Internet Technology and Secured Transactions, V8, P150
   Anwer Faiza, 2017, International Journal of Modern Education and Computer Science, V9, P25, DOI 10.5815/ijmecs.2017.06.04
   Anwer F, 2018, INT J COMPUT SCI NET, V18, P161
   Arango Eduardo C., 2021, Software Engineering and Algorithms: Proceedings of 10th Computer Science On-line Conference 2021. Lecture Notes in Networks and Systems, P667, DOI 10.1007/978-3-030-77442-4_56
   Ashraf Sara, 2017, International Journal of Modern Education and Computer Science, V9, P16, DOI 10.5815/ijmecs.2017.08.03
   Ashraf Sara, 2018, International Journal of Modern Education and Computer Science, V10, P24, DOI 10.5815/ijmecs.2018.01.03
   Bonocore G., 2022, HANDS ON SOFTWARE AR
   Cafaro L, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1544, DOI 10.1145/3167132.3167297
   Choi B, 2002, EXPERT SYST APPL, V23, P173, DOI 10.1016/S0957-4174(02)00038-6
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Conforto EC, 2016, J ENG TECHNOL MANAGE, V40, P1, DOI 10.1016/j.jengtecman.2016.02.003
   Cooper RG, 2018, RES TECHNOL MANAGE, V61, P17, DOI 10.1080/08956308.2018.1421380
   Cooper RG, 2016, RES TECHNOL MANAGE, V59, P21, DOI 10.1080/08956308.2016.1117317
   Dalkir K., 2013, KNOWLEDGE MANAGEMENT, DOI DOI 10.4324/9780080547367
   Dayanandan U, 2016, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON INFORMATICS AND ANALYTICS (ICIA' 16), DOI 10.1145/2980258.2980459
   Carvalho WCD, 2012, P INT C CHIL COMPUT, P74, DOI 10.1109/SCCC.2011.11
   Demarest M, 1997, LONG RANGE PLANN, V30, P374, DOI 10.1016/S0024-6301(97)90250-8
   Fahad M, 2017, INT J COMPUT SCI NET, V17, P259
   Firestone J. M., 2002, J KMCI, V2, P111
   Galvis-Lista Ernesto, 2013, JISTEM J.Inf.Syst. Technol. Manag., V10, P323
   Gandomani T. J., 2017, C 5 INT C ADV COMP C, P1
   Gandomani TJ, 2019, 2019 IEEE 5TH CONFERENCE ON KNOWLEDGE BASED ENGINEERING AND INNOVATION (KBEI 2019), P56, DOI 10.1109/KBEI.2019.8735008
   Gandornani TJ, 2016, COMPUT HUM BEHAV, V62, P257, DOI 10.1016/j.chb.2016.04.009
   Gill, 2018, SOFTWARE ENG
   Hassanein E. E., 2020, INT J COMPUT SCI INF, V18, P123
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Jayasudha R., 2017, ASIAN J PHARM CLIN R, V10, P143, DOI DOI 10.22159/AJPCR.2017.V10S1.19597
   Kiani A. T., 2020, 2020 20 IEEE INT C, P1, DOI DOI 10.1109/eeeic/icpseurope49358.2020.9160531
   Kundu, 2020, SOFTWARE ENG SYSTEMA
   Layton M. C., 2022, SCRUM DUMMIES
   Lewis, 2020, CLEAN CODE COMPREHEN
   Linz T., 2014, Testing in Scrum: A Guide for Software Quality Assurance in the Agile World
   Malhotra V., 2020, SINGLE REFERENCE GUI
   Mcadam R., 1999, A Critical Review of Knowledge Management Models
   Morris D., 2017, SCRUM EASY STEPS IDE
   Nawaz, 2021, INT J ED MANAG ENG, V11, P43
   Neelu L, 2021, SN APPL SCI, V3, DOI 10.1007/s42452-021-04305-0
   Oinas-Kukkonen, 2004, PROC 5 EUR C ORGAN K, P17
   Patil R., 2021, MASTERING ADV SCRUM
   Patil SP, 2018, 2018 INTERNATIONAL CONFERENCE ON ADVANCES IN COMMUNICATION AND COMPUTING TECHNOLOGY (ICACCT), P314, DOI 10.1109/ICACCT.2018.8529405
   Qureshi M. Rizwan Jameel, 2017, International Journal of Modern Education and Computer Science, V9, P41, DOI 10.5815/ijmecs.2017.11.05
   Gómez DR, 2006, EDUCAR, V37, P25, DOI 10.5565/rev/educar.187
   S. Alliance, 2018, STAT SCRUM 2017 2018
   Saeeda H, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2247
   Schwaber K, The Scrum guide 2020
   Schwaber K., 2002, SERIES AGILE SOFTWAR, V1, P158
   Senapathi M, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2322
   Sharma S, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND AUTOMATION (ICCCA), P867, DOI 10.1109/CCAA.2016.7813837
   SonarQube, 2023, SONARQUBE TOOL
   Soukaina Najihi, 2022, International Journal of Advanced Computer Science and Applications, P239
   Spoladore D, 2022, COMPUT IND, V140, DOI 10.1016/j.compind.2022.103690
   Tavakoli Z., 2016, INT J SOFTW ENG TECH, V2, P16
   Thenmozhi, 2018, INT J ADV RES COMPUT, V9, P564
   Timperi, 2004, T 765650 SEMINAR SOF
   Vardy A., 2016, SCRUM ULTIMATE BEGIN
   Zuzek T, 2020, CONCURRENT ENG-RES A, V28, P255, DOI 10.1177/1063293X20958541
NR 61
TC 1
Z9 1
U1 11
U2 11
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD MAY
PY 2024
VL 34
IS 05
BP 729
EP 749
DI 10.1142/S0218194023500699
EA FEB 2024
PG 21
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SB5X4
UT WOS:001155750700001
DA 2024-08-05
ER

PT J
AU Zhang, B
   Zhang, HC
   Ren, R
   Wen, Z
   Wang, Q
AF Zhang, Bing
   Zhang, Hongchang
   Ren, Rong
   Wen, Zhen
   Wang, Qian
TI Approach to Detect Windows Malware Based on Malicious Tendency Image and
   ResNet Algorithm
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Windows malware detection; ResNet; deep learning; transfer learning
ID BEHAVIOR
AB Timely detection of self-replicating malware in the high market share Windows operating system can effectively prevent personal or corporate financial losses. The form and characteristics of malware are constantly evolving, leading to a concept drift issue that gradually decreases the effectiveness of traditional detection methods. Therefore, we propose WinMDet, a Windows malware detection method based on malicious tendency image and ResNet algorithm. First, to tackle the complexity and difficulty in accurately characterizing malware features, WinMDet retains detailed malware features and encodes them into malicious tendency images to better describe malware across different periods. Secondly, WinMDet utilizes previously generated malicious tendency images to train the initial detection model. Then, to alleviate the issue of malware concept drift, WinMDet employs Local Maximum Mean Discrepancy (LMMD) as the criterion for model transfer, enhancing the initial detection model's ability to distinguish between malware and benign software. We conducted a comprehensive evaluation of WinMDet using common metrics such as accuracy, precision and recall. The results indicate that WinMDet performs remarkably well in terms of accuracy, exceeding 82%. Additionally, significant improvements were observed in precision and recall, surpassing 82.42% and 82.06%, respectively. After employing our LMMD-based transfer method, the initial detection model improved the detection accuracy of malware in 2021 and 2022 by approximately 4.22% to 8.06%. The false negative rate decreased by at most 4.34%, and the false positive rate decreased by at most 4.61%.
C1 [Zhang, Bing; Zhang, Hongchang; Ren, Rong; Wen, Zhen; Wang, Qian] Yanshan Univ, Sch Informat Sci & Engn, Qinhuangdao 066004, Hebei, Peoples R China.
   [Zhang, Bing; Zhang, Hongchang; Wen, Zhen; Wang, Qian] Yanshan Univ, Key Lab Software Engn, Qinhuangdao 066004, Hebei, Peoples R China.
   [Ren, Rong] Hebei Port Grp Co Ltd, Tang Shan 063200, Hebei, Peoples R China.
C3 Yanshan University; Yanshan University
RP Ren, R (corresponding author), Yanshan Univ, Sch Informat Sci & Engn, Qinhuangdao 066004, Hebei, Peoples R China.; Ren, R (corresponding author), Hebei Port Grp Co Ltd, Tang Shan 063200, Hebei, Peoples R China.
EM bingzhang@ysu.edu.cn; henanzahnghong@163.com; renrongysu@hotmail.com;
   wenzmail@163.com; wangqianysu@163.com
OI zhang, hongchang/0000-0002-7306-7850; Zhang, Bing/0000-0002-9867-8439
FU National Natural Science Foundation of China [62376240]; S&T Program of
   Hebei [226Z0701G, 236Z0702G, 236Z0304G]; Natural Science Foundation of
   Hebei Province [F2022203026, F2022203089]; Science Research Project of
   Hebei Education Department [BJK2022029]; Innovation Capability
   Improvement Plan Project of Hebei Province [22567637H]
FX This work was supported by National Natural Science Foundation of China
   (no. 62376240), S&T Program of Hebei (nos. 226Z0701G, 236Z0702G and
   236Z0304G), the Natural Science Foundation of Hebei Province (nos.
   F2022203026 and F2022203089), Science Research Project of Hebei
   Education Department (no. BJK2022029) and Innovation Capability
   Improvement Plan Project of Hebei Province (no. 22567637H). The authors
   are grateful to the valuable comments and suggestions of the reviewers.
CR 360 Software Market, 360 SECURITY CO WIND
   Agarap A. F., 2017, ARXIV
   Al-Asli M, 2019, 2019 INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCES (ICCIS), P422, DOI 10.1109/iccisci.2019.8716381
   Alazab M., 2010, Proceedings Second Cybercrime and Trustworthy Computing Workshop (CTC 2010), P52, DOI 10.1109/CTC.2010.8
   Anderson H. S., 2018, ARXIV
   [Anonymous], HUORONG SECURITY REP
   [Anonymous], 2018, Operating system market share Democratic People's Republic of Korea: May 2017 - May 2018
   AV-TEST, TOTAL AMOUNT MALWARE
   AV-TEST, AV TEST SECURITY REP
   Ding YX, 2020, J AMB INTEL HUM COMP, DOI 10.1007/s12652-020-02196-4
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Huawei Software Market, HUAWEI WINDOWS SOFTW
   Huda S, 2018, FUTURE GENER COMP SY, V83, P193, DOI 10.1016/j.future.2017.12.037
   Jordaney R, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P625
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kumar Y, 2023, COMPUT SECUR, V125, DOI 10.1016/j.cose.2022.102961
   Loss Landscape Visualization, RESNET50 RESIDUAL SU
   Malwarebytes, WHAT IS MALWARE
   Mercaldo F, 2020, J COMPUT VIROL HACKI, V16, P157, DOI 10.1007/s11416-019-00346-7
   Mithal T., 2016, EMERGING RES COMPUTI, P555
   Nissim N, 2014, EXPERT SYST APPL, V41, P5843, DOI 10.1016/j.eswa.2014.02.053
   Obaidat I, 2022, COMPUT SECUR, V113, DOI 10.1016/j.cose.2021.102547
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Raff E., 2017, P 10 ACM WORKSH ART, P121, DOI DOI 10.1145/3128572.3140442
   Raff E., 2018, WORKSH 32 AAAI C ART, P268, DOI DOI 10.48550/ARXIV.1710.09435
   Rahali Abir, 2020, ICCNS 2020: 10th International Conference on Communication and Network Security, P70, DOI 10.1145/3442520.3442522
   Ring M, 2021, COMPUT SECUR, V109, DOI 10.1016/j.cose.2021.102389
   Ronen R., 2018, ARXIV
   Rustam F, 2023, J PARALLEL DISTR COM, V172, P32, DOI 10.1016/j.jpdc.2022.10.001
   Shijo PV, 2015, PROCEDIA COMPUT SCI, V46, P804, DOI 10.1016/j.procs.2015.02.149
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Singh A., 2012, P 5 ACM WORKSH SEC A, P81, DOI DOI 10.1145/2381896.2381910
   Tencent Software Market, TENCENT PC MANAGER W
   Ünver HM, 2020, SN APPL SCI, V2, DOI 10.1007/s42452-020-3132-2
   VirusShare, MALICIOUS SOFTWARE S
   Yang RQ, 2022, IEEE T DEPEND SECURE, V19, P1621, DOI 10.1109/TDSC.2020.3032570
   Zhang ZQ, 2020, AAAI CONF ARTIF INTE, V34, P1210
   Zhu YC, 2021, IEEE T NEUR NET LEAR, V32, P1713, DOI 10.1109/TNNLS.2020.2988928
NR 38
TC 0
Z9 0
U1 1
U2 1
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD JUL
PY 2024
VL 34
IS 07
BP 1173
EP 1197
DI 10.1142/S0218194024500256
EA JUN 2024
PG 25
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZY9V8
UT WOS:001257256800001
DA 2024-08-05
ER

PT J
AU Zhang, XM
   Li, XR
   Wang, HY
AF Zhang, Xiaoming
   Li, Xinrui
   Wang, Huiyong
TI Fine-Grained Entity-Type Completion Based on Neighborhood-Attention and
   Cartesian-Polar Coordinates Mapping
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Knowledge graph; entity type; attention mechanism; semantic space
   mapping; Polar coordinate
AB Entities refer to things that exist objectively, and entity types are concepts abstracted from entities that have the same features or properties. However, the entity types in the knowledge graph are always incomplete. Currently, the main approach for predicting missing entity types is to learn structured representations of entities and types separately, which ignores neighborhood semantic knowledge of the entity. Therefore, this paper proposes the aggregation neighborhood semantics model for type completion (ANSTC), which extracts neighborhood triple features of target entities with two attentional mechanisms. Meanwhile, the spatial mapping module in ANSTC maps entities from Cartesian coordinate to Polar coordinate system, which can map similar vectors onto a concentric circle and then rotate the angle according to the fine-grained difference to achieve entity-to-type transformation. Moreover, we add semantic features from text to the entity representations to enrich semantics. Through experimental comparison on the FB15K and YAGO43K dataset, we get similar results to the baseline. We also construct person dataset in computer domain, and the values of MRR, Hit@1, Hit@3 and Hit@10 are improved compared with the ConnectE model. The experimental results demonstrate that our model can effectively predict the fine-grained entity types in the domain dataset, and achieve state-of-the-art performance.
C1 [Zhang, Xiaoming; Li, Xinrui; Wang, Huiyong] Hebei Univ Sci & Technol, Sch Informat Sci & Engn, Shijiazhuang, Peoples R China.
C3 Hebei University of Science & Technology
RP Wang, HY (corresponding author), Hebei Univ Sci & Technol, Sch Informat Sci & Engn, Shijiazhuang, Peoples R China.
EM wanghuiyong815@163.com
OI Zhang, Xiaoming/0000-0002-7091-1155
FU Hebei Natural Science Foundation [F2022208002]; Science and Technology
   Project of Hebei Education Department (Key program) [ZD2021048]
FX This research was supported by Hebei Natural Science Foundation (Grant
   No. F2022208002) and funded by Science and Technology Project of Hebei
   Education Department (Key program) (Grant No. ZD2021048).
CR Auer S, 2007, LECT NOTES COMPUT SC, V4825, P722, DOI 10.1007/978-3-540-76298-0_52
   Balbi S, 2022, ENVIRON EVID, V11, DOI 10.1186/s13750-022-00258-y
   Biswas R, 2022, LECT NOTES COMPUT SC, V13489, P392, DOI 10.1007/978-3-031-19433-7_23
   Biswas R, 2021, PROCEEDINGS OF THE 11TH KNOWLEDGE CAPTURE CONFERENCE (K-CAP '21), P81, DOI 10.1145/3460210.3493575
   Bordes A., 2013, Advances in Neural Information Processing Systems, V26
   Cardone B, 2023, ALGORITHMS, V16, DOI 10.3390/a16030128
   Chen S, 2020, AAAI CONF ARTIF INTE, V34, P7529
   Chen Tongfei, 2020, P 58 ANN M ASS COMP, P8465
   Chen Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P2668
   Dai HL, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1 (ACL-IJCNLP 2021), P1790
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Feng Y., 2022, FINDINGS ASS COMPUTA, P1
   Ge X, 2022, PATTERN RECOGN LETT, V157, P97, DOI 10.1016/j.patrec.2022.03.024
   Hou F, 2021, KNOWL INF SYST, V63, P845, DOI 10.1007/s10115-021-01549-5
   Ji GL, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P687
   Kipf T.N., 2017, INT C LEARN REPR, P1
   Kliegr T, 2014, LREC 2014 - NINTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P3517
   Li BZ, 2022, T ASSOC COMPUT LING, V10, P607, DOI 10.1162/tacl_a_00479
   Lin YK, 2015, AAAI CONF ARTIF INTE, P2181
   Ma SH, 2017, LECT NOTES ARTIF INT, V10534, P717, DOI 10.1007/978-3-319-71249-9_43
   Moon C, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P2215, DOI 10.1145/3132847.3133095
   Nathani D, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4710
   Ni R., 2022, IEEE INT C BIG DAT, P3687
   Nickel M., 2011, ICML, P809
   Nickel M, 2016, AAAI CONF ARTIF INTE, P1955
   Onoe Y, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1 (ACL-IJCNLP 2021), P2051
   Pan WR, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2021, P2240
   Schlichtkrull M, 2018, LECT NOTES COMPUT SC, V10843, P593, DOI 10.1007/978-3-319-93417-4_38
   Stewart M, 2020, KR2020: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P748
   Suchanek F.M., 2007, P 16 INT C WORLD WID, P697, DOI 10.1145/1242572.1242667
   Sun ZY, 2022, INT J COAL PREP UTIL, V42, P221, DOI [10.1080/19392699.2019.1590346, 10.1109/eurosime.2019.8724592]
   Velickovic P, 2018, INT C LEARN REPR, DOI DOI 10.48550/ARXIV.1710.10903
   Wang SS, 2022, NEUROCOMPUTING, V508, P305, DOI 10.1016/j.neucom.2022.07.031
   Wang Z, 2014, AAAI CONF ARTIF INTE, P1112
   Wu JJ, 2022, LECT NOTES ARTIF INT, V13088, P137, DOI 10.1007/978-3-030-95408-6_11
   Xie RB, 2016, AAAI CONF ARTIF INTE, P2659
   Xie Ruobing, 2016, P 25 INT JOINT C ART, P2965, DOI DOI 10.1016/J.JSB.2015.11.003
   Xu JC, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1318
   Zhang ZQ, 2020, AAAI CONF ARTIF INTE, V34, P3065
   Zhao Y, 2023, IEEE T KNOWL DATA EN, V35, P4608, DOI 10.1109/TKDE.2022.3142056
   Zhao Y, 2021, KNOWL-BASED SYST, V215, DOI 10.1016/j.knosys.2020.106630
   Zou CL, 2022, LECT NOTES COMPUT SC, V13261, P39, DOI 10.1007/978-3-031-06981-9_3
   Zuo X., 2022, P 29 INT C COMP LING, P2405
NR 43
TC 0
Z9 0
U1 3
U2 3
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 JUN 19
PY 2024
DI 10.1142/S0218194024500268
EA JUN 2024
PG 28
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UR2R6
UT WOS:001249725000001
DA 2024-08-05
ER

PT J
AU Mao, CY
   Li, LJ
   Liu, L
   Ma, ZX
AF Mao, Caiyun
   Li, Longjie
   Liu, Li
   Ma, Zhixin
TI Identification of Key Classes in Software Systems Based on Static
   Analysis and Voting Mechanism
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Key class identification; software systems; static analysis; voting
   mechanism
ID INDEX
AB Identifying key classes of a software system can help developers understand the system quickly, reduce the time for system maintenance, and prevent security risks caused by defects in key classes. So far, many approaches have been proposed to identify key classes from software systems. However, some approaches select too many key class candidates, making it inconvenient and difficult for developers to start understanding the system from these classes. For the other approaches, although the number of key class candidates is not large, their effectiveness needs to be further improved. To this end, in this paper, we propose a new model, named SAVM, to detect key classes by combining static analysis and a voting mechanism. First, we extract structural information from the source codes of a software system and construct a class coupling network (CCN) using this information. Then, we present the VRWD method that iteratively identifies important nodes in CCN based on a voting mechanism. Specifically, in each iteration, a node votes for its outgoing neighbors and in the meantime receives votes from its incoming neighbors. Afterward, the node that attains the highest voting score is elected as the important node in this turn. Finally, the corresponding classes of the selected important nodes are the key class candidates. The effectiveness of the proposed model and eight other baselines is evaluated in eight open-source Java projects. The experimental results show that although no method performs the best in all projects, according to the average ranking of the Friedman test, our method overall performs better compared to the baselines. In addition, this paper also proves through experiments that our approach can be applied to large-scale software projects. These indicate that our approach is a valuable technique for developers.
C1 [Mao, Caiyun; Li, Longjie; Liu, Li; Ma, Zhixin] Lanzhou Univ, Sch Informat Sci & Engn, Lanzhou 730000, Gansu, Peoples R China.
   [Ma, Zhixin] Key Lab Media Convergence Technol & Commun, Lanzhou 730000, Gansu, Peoples R China.
C3 Lanzhou University
RP Li, LJ; Ma, ZX (corresponding author), Lanzhou Univ, Sch Informat Sci & Engn, Lanzhou 730000, Gansu, Peoples R China.; Ma, ZX (corresponding author), Key Lab Media Convergence Technol & Commun, Lanzhou 730000, Gansu, Peoples R China.
EM ljli@lzu.edu.cn; mazhx@lzu.edu.cn
OI Mao, Caiyun/0009-0001-5573-9772; Li, Longjie/0000-0001-5866-617X
FU Science and Technology Program of Gansu Province [23YFGA0005,
   21ZD8RA008]; Supercomputing Center of Lanzhou University
FX This work was supported in part by the Science and Technology Program of
   Gansu Province (Nos. 23YFGA0005 and 21ZD8RA008) and the Supercomputing
   Center of Lanzhou University.
CR Abreu FB, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P47, DOI 10.1109/CSMR.2001.914968
   Brito e Abreu F., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P13, DOI 10.1109/CSMR.2000.827300
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   Du X, 2022, AXIOMS, V11, DOI 10.3390/axioms11100491
   Du X, 2021, IEEE ACCESS, V9, P114767, DOI 10.1109/ACCESS.2021.3105475
   FREEMAN LC, 1977, SOCIOMETRY, V40, P35, DOI 10.2307/3033543
   Hirsch JE, 2005, P NATL ACAD SCI USA, V102, P16569, DOI 10.1073/pnas.0507655102
   [姜淑娟 Jiang Shujuan], 2015, [电子学报, Acta Electronica Sinica], V43, P2062
   Jiang W, 2020, MATH PROBL ENG, V2020, DOI 10.1155/2020/3849561
   Jin BH, 2007, CHINESE SCI BULL, V52, P855, DOI 10.1007/s11434-007-0145-9
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Li H, 2021, IEEE ACCESS, V9, P28076, DOI 10.1109/ACCESS.2021.3058450
   ora I., 2016, IEEE 10 JUBL INT S A, P122
   Page L., 1998, Technical Report
   Pan WF, 2023, IEEE T SOFTWARE ENG, V49, P1118, DOI 10.1109/TSE.2022.3171469
   Pan WF, 2021, IEEE T SOFTWARE ENG, V47, P2272, DOI 10.1109/TSE.2019.2946357
   [潘伟丰 Pan Weifeng], 2018, [电子学报, Acta Electronica Sinica], V46, P1071
   Pan WF, 2018, FUTURE GENER COMP SY, V81, P188, DOI 10.1016/j.future.2017.10.006
   Perin F., 2010, 4 WORKSH FAMIX MOOS, P1
   Siegmund J., 2016, IEEE 23 INT C SOFTW, P122
   Solé RV, 2004, LECT NOTES PHYS, V650, P189
   Sora I, 2019, INFORM SOFTWARE TECH, V116, DOI 10.1016/j.infsof.2019.106176
   Sora I, 2016, 2016 IEEE 11TH INTERNATIONAL SYMPOSIUM ON APPLIED COMPUTATIONAL INTELLIGENCE AND INFORMATICS (SACI), P317, DOI 10.1109/SACI.2016.7507393
   Spinellis D., 2003, Code Reading: The Open Source Perspective
   Steidl D., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P93, DOI 10.1109/WCRE.2012.19
   Vale LD, 2019, INT J SOFTW ENG KNOW, V29, P1439, DOI 10.1142/S0218194019500451
   Wang LH, 2022, ENTROPY-SWITZ, V24, DOI 10.3390/e24050652
   Wang M., 2012, J. Comput. Inf. Syst, V8, P10205
   [王木生 Wang Musheng], 2011, [计算机科学与探索, Journal of Frontiers of Computer Science & Technology], V5, P891
   Zaidman A, 2008, J SOFTW MAINT EVOL-R, V20, P387, DOI 10.1002/smr.370
   Zhang JX, 2016, SCI REP-UK, V6, DOI 10.1038/srep27823
   [张健雄 Zhang Jianxiong], 2021, [计算机科学, Computer Science], V48, P149
NR 33
TC 0
Z9 0
U1 1
U2 1
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 MAY 25
PY 2024
DI 10.1142/S0218194024500220
EA MAY 2024
PG 23
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RV8R4
UT WOS:001230532900001
DA 2024-08-05
ER

PT J
AU Wang, RC
   Fan, MM
   Yan, Y
   Jiang, SJ
AF Wang, Rongcun
   Fan, Mingmei
   Yan, Yue
   Jiang, Shujuan
TI Combining Error Guessing and Logical Reasoning for Software Fault
   Localization via Deep Learning
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Fault localization; error guessing; logical reasoning; execution
   dependency; stack trace
AB Automated fault localization has been extensively studied to improve the effectiveness of software debugging. Existing automated fault localization methods neglect the guidance of the simple and easily available debugging information on fault localization. To bridge manual fault localization with automated fault localization, we propose a fault localization approach combining error guessing and logical reasoning via deep learning. The proposed approach simulates the actual debugging process. Specifically, developers' debugging experience and context dependencies between methods are mapped into two different types of coverage matrices. The constructed matrices are fed to a convolutional neural network (CNN) to predict whether a method is buggy or not. To validate the effectiveness of the proposed approach, we designed and constructed the empirical study on the widely used Defect4J datasets. With respect to the top-n (n=1,3,5) metric, our approach outperforms the state-of-the-art DeepFL and other five methods including Ochai, Muse, MULTRIC, TraPT and FLUCSS. Particularly, compared with the above methods, our approach has an improvement of 5-182% for top-1. In terms of MFR and MAR, the proposed approach is slightly lower than the best DeepFL but better than the other five methods. The approach we presented achieving the unification of manual and automatic debugging can aid in the improvement of fault localization accuracy.
C1 [Wang, Rongcun; Fan, Mingmei; Yan, Yue; Jiang, Shujuan] China Univ Min & Technol, Sch Comp Sci & Technol, 1 Daxue Rd, Xuzhou, Jiangsu, Peoples R China.
   [Wang, Rongcun] Wuhan Inst Technol, Hubei Key Lab Intelligent Robot, 206 Guanggu 1st Rd,Donghu New & High Technol Dev Z, Wuhan, Hubei, Peoples R China.
C3 China University of Mining & Technology; Wuhan Institute of Technology
RP Jiang, SJ (corresponding author), China Univ Min & Technol, Sch Comp Sci & Technol, 1 Daxue Rd, Xuzhou, Jiangsu, Peoples R China.
EM shjjiang@cumt.edu.cn
OI Jiang, Shujuan/0000-0003-0643-0565
FU National Natural Science Foundation of China [61673384]; Hubei Key
   Laboratory of Intelligent Robot (Wuhan Institute of Technology) Open
   Fund [HBIR202008]
FX The authors would like to thank the anonymous reviewers for their
   valuable comments and helpful suggestions. This work is supported by the
   National Natural Science Foundation of China under grant no. 61673384
   and partially supported by Hubei Key Laboratory of Intelligent Robot
   (Wuhan Institute of Technology) Open Fund under grant no. HBIR202008.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Beszédes A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P468, DOI [10.1109/SANER48275.2020.9054820, 10.1109/saner48275.2020.9054820]
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Dao T, 2017, INT C PROGRAM COMPRE, P241, DOI 10.1109/ICPC.2017.29
   International Software Testing Qualifications Board, 2014, Standard glossary of terms used in software testing
   Jo JH, 2021, INT J SOFTW INNOV, V9, P66, DOI 10.4018/IJSI.2021070105
   Jones J. A., 2005, ASE, P273
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kim Y, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3345628
   Kochhar P. S., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P165
   Kuma T, 2020, INT C PROGRAM COMPRE, P376, DOI 10.1145/3387904.3389290
   Lam Patrick, 2011, Cetus Users and Compiler Infastructure Workshop, V15, P35
   Le T.-D. B., 2016, P 25 INT S SOFT TEST, P177
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Li Y, 2021, PROC INT CONF SOFTW, P661, DOI 10.1109/ICSE43902.2021.00067
   Lou YL, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P664, DOI 10.1145/3468264.3468580
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   McMaster S, 2005, PROC IEEE INT CONF S, P539
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Papadakis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P691, DOI 10.1109/ICST.2012.159
   Papadakis M., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P1293
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Parnin C., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis ISSTA, P199
   Ribeiro H., 2019, INT SYMP EMP SOFTWAR, P1, DOI DOI 10.1109/esem.2019.8870182
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sarhan QI, 2021, IEEE INT WORK C SO, P103, DOI 10.1109/SCAM52516.2021.00021
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Wang Q., 2015, P INT S SOFTW TEST A
   Wang RC, 2020, IEICE T INF SYST, VE103D, P1328, DOI 10.1587/transinf.2019EDP7207
   Wong W. E., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P21, DOI 10.1109/SERE.2012.12
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wong WE, 2009, INT J SOFTW ENG KNOW, V19, P573, DOI 10.1142/S021819400900426X
   Xiao X, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106653
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Yoo S., 2014, Res. Note, V14, P14
   Yoo S, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078840
   Zhang MS, 2021, IEEE T SOFTWARE ENG, V47, P1089, DOI 10.1109/TSE.2019.2911283
   Zhang Z, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106486
   Zhang Z, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2312
   Zhang Z, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P445, DOI [10.1109/SANER.2019.8668002, 10.1109/saner.2019.8668002]
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 51
TC 0
Z9 0
U1 1
U2 1
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 MAY 28
PY 2024
DI 10.1142/S0218194024500219
EA MAY 2024
PG 27
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SA6W5
UT WOS:001231788700001
DA 2024-08-05
ER

PT J
AU Zhang, XM
   Meng, KK
   Wang, HY
AF Zhang, Xiaoming
   Meng, Kaikai
   Wang, Huiyong
TI TRAFMEL: Multimodal Entity Linking Based on Transformer Reranking and
   Multimodal Co-Attention Fusion
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Multimodal knowledge graph; multimodal entity linking; candidate entity
   generation; multimodal co-attention fusion
AB Multimodal entity linking aims to link mentions to target entities in the multimodal knowledge graph. The current multimodal entity linking mainly focuses on the global fusion of text and image, seldom fully exploring the correlation between modalities. In order to improve the fusion effect of multimodal feature, we propose a multimodal entity linking model based on a Multimodal Co-Attention Fusion strategy. This strategy is designed to enable text and image to guide each other for extracting features, thus making full exploration of the correlation between modalities to improve the fine-grained feature fusion effect. Furthermore, we also design a candidate entity generation strategy based on Transformer, which combines multiple candidate entity sets and adjusts the candidate entity ranking to obtain high-quality candidate entity sets. We perform experiments on domain datasets and public datasets, and the experimental results demonstrate that our model has a good performance in candidate entity generation and multimodal feature fusion, outperforming the state-of-the-art baseline models.
C1 [Zhang, Xiaoming; Meng, Kaikai; Wang, Huiyong] Hebei Univ Sci & Technol, Sch Informat Sci & Engn, Shijiazhuang, Peoples R China.
C3 Hebei University of Science & Technology
RP Wang, HY (corresponding author), Hebei Univ Sci & Technol, Sch Informat Sci & Engn, Shijiazhuang, Peoples R China.
EM wanghuiyong815@163.com
OI Zhang, Xiaoming/0000-0002-7091-1155
FU Hebei Natural Science Foundation [F2022208002]; Science and Technology
   Project of Hebei Education Department [ZD2021048]
FX The authors declare that there is no conflict of interest in this
   research. This research was supported by the Hebei Natural Science
   Foundation (Grant No. F2022208002) and Science and Technology Project of
   Hebei Education Department (Key program)(Grant No. ZD2021048).
CR Adjali Omar, 2020, Advances in Information Retrieval, 42nd European Conference on IR Research, ECIR 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12035), P463, DOI 10.1007/978-3-030-45439-5_31
   Adjali O, 2020, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2020), P4285
   Ayoola T, 2022, 2022 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, NAACL-HLT 2022, P209
   Chen SZ, 2016, MM'16: PROCEEDINGS OF THE 2016 ACM MULTIMEDIA CONFERENCE, P571, DOI 10.1145/2964284.2967286
   Cucerzan S., 2007, P 2007 JOINT C EMPIR, P708
   D'Auria D., 2023, INTELL SYST APPL, V17, P200161
   Dai YM, 2021, IEEE WINT CONF APPL, P3559, DOI 10.1109/WACV48630.2021.00360
   De Cao N, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P7662
   De Cao N, 2022, T ASSOC COMPUT LING, V10, P274, DOI 10.1162/tacl_a_00460
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dost S, 2022, DATA KNOWL ENG, V138, DOI 10.1016/j.datak.2021.101975
   Fang Z, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P640, DOI 10.1145/3366423.3380146
   Gan JR, 2021, PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON MULTIMEDIA, MM 2021, P993, DOI 10.1145/3474085.3475400
   Hori C, 2017, IEEE I CONF COMP VIS, P4203, DOI 10.1109/ICCV.2017.450
   Joao RS, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P851, DOI 10.1145/3341105.3373883
   Lai T, 2022, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), P3696
   Le P, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4081
   Li L, 2022, ELECTRONICS-SWITZ, V11, DOI 10.3390/electronics11142134
   Li XT, 2020, AAAI CONF ARTIF INTE, V34, P11418
   Liu Y, 2019, LECT NOTES COMPUT SC, V11503, P459, DOI 10.1007/978-3-030-21348-0_30
   Milne David, 2008, P 17 ACM C INFORM KN, P509
   Moon S., 2018, Long Papers, V1, P2000
   Mueller D, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P1024
   Nie F., 2018, P 22 C COMP NAT LANG, P476
   PengYuan Li, 2021, 2021 International Conference on Computer Information Science and Artificial Intelligence (CISAI), P491, DOI 10.1109/CISAI54367.2021.00100
   Peters ME, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P43
   Ratinov L., 2011, P 49 ANN M ASS COMP, P1375
   Sakor A, 2020, CIKM '20: PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, P3141, DOI 10.1145/3340531.3412777
   Shen W, 2015, IEEE T KNOWL DATA EN, V27, P443, DOI 10.1109/TKDE.2014.2327028
   Sui X., 2022, P 29 INT C COMP LING, P2429
   Wang M, 2020, BIG DATA RES, V22, DOI 10.1016/j.bdr.2020.100159
   Wang P, 2022, PROCEEDINGS OF THE 45TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '22), P938, DOI 10.1145/3477495.3531867
   Wang W, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P1705
   Wang X, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P5590
   Wang XW, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P4785
   Wei ZP, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P1476
   Wen L, 2020, NEURAL COMPUT APPL, V32, P6111, DOI 10.1007/s00521-019-04097-w
   Wu L, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P6397
   Yang S., 2021, ADV NEUR IN, V34
   Yao ZH, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P2517
   Zhang Gongrui, 2023, Database Systems for Advanced Applications: 28th International Conference, DASFAA 2023, Proceedings. Lecture Notes in Computer Science (13945), P607, DOI 10.1007/978-3-031-30675-4_45
   Zhang HB, 2022, FRONT INFORM TECH EL, V23, P1620, DOI 10.1631/FITEE.2100495
   Zhang L, 2021, LECT NOTES COMPUT SC, V12682, P533, DOI 10.1007/978-3-030-73197-7_35
   Zhang QW, 2018, AAAI CONF ARTIF INTE, P4446
   Zheng QS, 2022, DATA INTELLIGENCE, V4, P493, DOI 10.1162/dint_a_00146
   Zhou SY, 2020, T ASSOC COMPUT LING, V8, P109, DOI 10.1162/tacl_a_00303
   Zhou XC, 2021, COMM COM INF SC, V1466, P315, DOI 10.1007/978-981-16-6471-7_27
NR 47
TC 0
Z9 0
U1 13
U2 13
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD JUN
PY 2024
VL 34
IS 06
BP 973
EP 997
DI 10.1142/S021819402450013X
EA MAY 2024
PG 25
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6U6
UT WOS:001223008500002
DA 2024-08-05
ER

PT J
AU Xiong, HZ
   Hou, G
   Qin, YY
   Wang, J
   Kong, WQ
AF Xiong, Huanzhang
   Hou, Gang
   Qin, Yueyuan
   Wang, Jie
   Kong, Weiqiang
TI A Dual Relaxation Method for Neural Network Verification
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Neural networks; robustness verification; formal methods; dual-neuron
   relaxation
AB In the robustness verification of neural networks, formal methods have been used to give deterministic guarantees for neural networks. However, recent studies have found that the verification method of single-neuron relaxation in this field has an inherent convex barrier that affects its verification capability. To address this problem, we propose a new verification method by combining dual-neuron relaxation and linear programming. This method captures the dependencies between different neurons in the same hidden layer by adding a two-neuron joint constraint to the linear programming model, thus overcoming the convex barrier problem caused by relaxation for only a single neuron. Our method avoids the combination of exponential inequality constraints and can be computed in polynomial time. Experimental results show that we can obtain tighter bounds and achieve more accurate verification than single-neuron relaxation methods.
C1 [Xiong, Huanzhang; Hou, Gang; Qin, Yueyuan; Wang, Jie; Kong, Weiqiang] Dalian Univ Technol, Sch Software Technol, Dalian 116621, Peoples R China.
   [Xiong, Huanzhang; Hou, Gang; Qin, Yueyuan; Wang, Jie; Kong, Weiqiang] Key Lab Ubiquitous Network & Serv Software Liaonin, Dalian 116621, Peoples R China.
C3 Dalian University of Technology
RP Hou, G (corresponding author), Dalian Univ Technol, Sch Software Technol, Dalian 116621, Peoples R China.; Hou, G (corresponding author), Key Lab Ubiquitous Network & Serv Software Liaonin, Dalian 116621, Peoples R China.
EM xbaiiiii@mail.dlut.edu.cn; hougang@dlut.edu.cn;
   yueyuan@mail.dlut.edu.cn; wangjie1003@163.com; wqkong@dlut.edu.cn
OI Hou, Gang/0009-0009-0102-9140
CR [Anonymous], 2023, LLC Gurobi Optimization Gurobi optimizer-Gurobi
   Bunel R, 2020, J MACH LEARN RES, V21
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Dathathri S., 2020, Advances in Neural Information Processing Systems, V33, P5318
   De Palma A., 2021, P 9 INT C LEARN REPR, P1
   De Palma A, 2021, Arxiv, DOI arXiv:2104.06718
   Deng L., 2012, IEEE Signal Process. Mag., V29, P141
   Ehlers R, 2017, LECT NOTES COMPUT SC, V10482, P269, DOI 10.1007/978-3-319-68167-2_19
   Ferrari C., 2022, arXiv
   Gowal S, 2019, IEEE I CONF COMP VIS, P4841, DOI 10.1109/ICCV.2019.00494
   Henriksen P, 2020, FRONT ARTIF INTEL AP, V325, P2513, DOI 10.3233/FAIA200385
   Henriksen P., 2021, IJCAI, P2549, DOI DOI 10.24963/IJCAI.2021/351
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Krizhevsky A., 2012, Learning multiple layers of features from tiny images, DOI DOI 10.1145/3079856.3080246
   Lu J., 2020, P INT C LEARN REPR, P1
   Mirman M, 2018, PR MACH LEARN RES, V80
   Müller MN, 2022, Arxiv, DOI arXiv:2103.03638
   Rocamora EA, 2022, ADV NEUR IN
   Salman H, 2019, 33 C NEURAL INFORM P, V32
   Singh G., 2019, INT C LEARN REPR
   Singh G, 2019, 33 C NEURAL INFORM P, V32
   Singh G, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290354
   Tjeng V, 2019, Arxiv, DOI arXiv:1711.07356
   Ugare S, 2023, P ACM PROGRAM LANG, V7, DOI 10.1145/3591299
   Wang S., 2021, ADV NEURAL INFORM PR, V34, P29909
   Wang SQ, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1599
   Wang SQ, 2018, ADV NEUR IN, V31
   Wong E, 2018, PR MACH LEARN RES, V80
   Xu K., 2020, P 34 C NEUR INF PROC, P1129
   Xu Keyulu, 2021, INT C LEARN REPR
   Xue ZY, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P1182, DOI 10.1145/3597926.3598127
   Zhang H, 2022, ADV NEUR IN
   Zhang H, 2018, ADV NEUR IN, V31
NR 33
TC 0
Z9 0
U1 0
U2 0
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 MAY 27
PY 2024
DI 10.1142/S0218194024500177
EA MAY 2024
PG 22
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SA6W7
UT WOS:001231788900002
DA 2024-08-05
ER

PT J
AU Wang, J
   Zhang, S
AF Wang, Jun
   Zhang, Shuang
TI Sentiment-Time Heterogeneous Residual Graph Attention Transformer for
   Session-Based Recommendation
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Session-based recommendation; graph neural network;
   sentiment-time-heterogeneous graph; residual graph attention transformer
AB Session-Based Recommendation (SBR) systems are facing considerable challenges, with their primary objective being to implement precise recommendations based on users' historical behavior sequences. Graph Neural Networks (GNNs) have emerged as powerful tools for processing graph-structured data in recommendation systems. Although recent research has advanced in this area, a significant gap remains in the in-depth exploration of transitional relationships between user interests. Additionally, real-world recommendation scenarios typically involve various heterogeneous relationships, which contain a wealth of information that can significantly enhance the learning of user preferences. To address this research gap, in this paper, we introduce a model termed the Sentiment-Time Heterogeneous Residual Graph Attention Transformer (STH-ResGAT), which is designed to capture the dynamic nature of user interests and the complexity inherent in heterogeneous graphs. In STH-ResGAT, we develop a Sentiment-Time-Heterogeneous Graph (STH-Graph) that integrates sentiment and time factors into the edges of the graph structure. Furthermore, the Residual Graph Attention Transformer for Heterogeneous Networks (ResGAT-Het) is designed to manage diverse node and edge types based on the STH-Graph. Extensive experiments are conducted on four widely-used benchmark datasets: Ciao, Yelp, Epinions and LibraryThing. The results demonstrate that our proposed STH-ResGAT method significantly outperforms previous state-of-the-art baseline approaches.The implementation of ResGAT-Het is available in https://github.com/zhangyu2234/ResGAT-Het.git.
C1 [Wang, Jun] Yantai Inst Sci & Technol, Dept Ocean Engn, Yantai 265600, Shandong, Peoples R China.
   [Zhang, Shuang] Yantai Inst Sci & Technol, Dept Data Intelligence, Yantai 265600, Shandong, Peoples R China.
RP Zhang, S (corresponding author), Yantai Inst Sci & Technol, Dept Data Intelligence, Yantai 265600, Shandong, Peoples R China.
CR Chen C, 2019, PROCEEDINGS OF THE 42ND INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '19), P225, DOI 10.1145/3331184.3331192
   Chen C, 2019, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'19), P177, DOI 10.1145/3289600.3290982
   Chen JY, 2017, SIGIR'17: PROCEEDINGS OF THE 40TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P335, DOI 10.1145/3077136.3080797
   Chen L, 2020, AAAI CONF ARTIF INTE, V34, P27
   Chen M., 2023, P WSDM, P544
   Fan WQ, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P417, DOI 10.1145/3308558.3313488
   Golbeck J, 2006, LECT NOTES COMPUT SC, V3986, P93
   Hu BB, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P1531, DOI 10.1145/3219819.3219965
   Hu ZN, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2704, DOI 10.1145/3366423.3380027
   Huang C, 2021, AAAI CONF ARTIF INTE, V35, P4115
   Jamali M, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P397
   Jin JR, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P75, DOI 10.1145/3394486.3403050
   Long XL, 2021, PROCEEDINGS OF THE 30TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, CIKM 2021, P1160, DOI 10.1145/3459637.3482480
   Ma H, 2011, P 4 ACM INT C WEB SE, P287, DOI 10.1145/1935826.1935877
   Ma H, 2008, P 17 ACM C INF KNOWL, P931, DOI DOI 10.1145/1458082.1458205
   Shi C, 2019, IEEE T KNOWL DATA EN, V31, P357, DOI 10.1109/TKDE.2018.2833443
   Shi C, 2017, IEEE T KNOWL DATA EN, V29, P17, DOI 10.1109/TKDE.2016.2598561
   Shi C, 2014, IEEE T KNOWL DATA EN, V26, P2479, DOI 10.1109/TKDE.2013.2297920
   Song WP, 2019, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'19), P555, DOI 10.1145/3289600.3290989
   Sunt YZ, 2011, PROC VLDB ENDOW, V4, P992
   Tang G, 2022, KNOWL-BASED SYST, V251, DOI 10.1016/j.knosys.2022.109204
   Velickovic P, 2017, ARXIV
   Wang C-C, 2017, ADV NEURAL INFORM PR, DOI DOI 10.48550/ARXIV.1706.02216
   Wang HW, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2000, DOI 10.1145/3308558.3313411
   Wang X, 2019, AAAI CONF ARTIF INTE, P5329
   Wang X, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2022, DOI 10.1145/3308558.3313562
   Wang XD, 2019, SIGBIOMED WORKSHOP ON BIOMEDICAL NATURAL LANGUAGE PROCESSING (BIONLP 2019), P165, DOI 10.1145/3331184.3331267
   Wang XJ, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2051, DOI 10.1145/3097983.3098096
   Wei Wei, 2023, WWW '23: Proceedings of the ACM Web Conference 2023, P790, DOI 10.1145/3543507.3583206
   Wu JC, 2021, SIGIR '21 - PROCEEDINGS OF THE 44TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P726, DOI 10.1145/3404835.3462862
   Wu L, 2022, IEEE T KNOWL DATA EN, V34, P4753, DOI 10.1109/TKDE.2020.3048414
   Wu QT, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2091, DOI 10.1145/3308558.3313442
   Wu SW, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3535101
   Xiao J., 2017, ARXIV
   Yao S., 2020, P ANN M ASS COMPUTAT, P7145
   Zhang CX, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P793, DOI 10.1145/3292500.3330961
   Zhao JA, 2021, AAAI CONF ARTIF INTE, V35, P4697
NR 37
TC 0
Z9 0
U1 4
U2 4
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD MAY
PY 2024
VL 34
IS 05
BP 793
EP 820
DI 10.1142/S0218194024500037
EA MAR 2024
PG 28
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SB5X4
UT WOS:001186255600001
DA 2024-08-05
ER

PT J
AU Yang, Y
   Wang, WW
   Li, Z
   Zhang, LS
   Pan, CY
AF Yang, Yang
   Wang, Weiwei
   Li, Zheng
   Zhang, Lieshan
   Pan, Chaoyue
TI Security Development Lifecycle-Based Adaptive Reward Mechanism for
   Reinforcement Learning in Continuous Integration Testing Optimization
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Continuous integration testing; reinforcement learning; test case
   prioritization; reward mechanism
ID PRIORITIZATION
AB Continuous automated testing throughout each cycle can ensure the security of the continuous integration (CI) development lifecycle. Test case prioritization (TCP) is a critical factor in optimizing automated testing, which prioritizes potentially failed test cases and improves the efficiency of automated testing. In CI automated testing, the TCP is a continuous decision-making process that can be solved with reinforcement learning (RL). RL-based CITCP can continuously generate a TCP strategy for each CI development lifecycle, with the reward mechanism as the core. The reward mechanism consists of the reward function and the reward strategy. However, there are new challenges to RL-based CITCP in real-industry CI testing. With high-frequency iteration, the reward function is often calculated with a fixed length of historical information, ignoring the spatial characteristics of the current cycle. Therefore, the dynamic time window (DTW)-based reward function is proposed to perform the reward calculation, which adaptively adjusts the recent historical information range based on the integration cycle. Moreover, with low-failure testing, the reward strategy usually only rewards failure test cases, which creates a sparse reward problem in RL. To address this issue, the similarity-based reward strategy is proposed, which increases the reward objects of some passed test cases, similar to the failure test cases. The DTW-based reward function and the similarity-based reward strategy together constitute the proposed adaptive reward mechanism in RL-based CITCP. To validate the effectiveness of the adaptive reward mechanism, experimental verification is carried out on 13 industrial data sets. The experimental results show that the adaptive reward mechanism can improve the TCP effect, where the average NAPFD is maximally improved by 7.29%, the average Recall is maximally improved by 6.04% and the average TTF is improved by 6.81 positions with a maximum of 63.77.
C1 [Yang, Yang; Zhang, Lieshan] Zhejiang Sci Tech Univ, Sch Informat Sci & Engn, Hangzhou 310018, Zhejiang, Peoples R China.
   [Wang, Weiwei] Beijing Inst Petrochem Technol, Sch Informat Engn, Beijing 100095, Peoples R China.
   [Li, Zheng; Pan, Chaoyue] Beijing Univ Chem Technol, Coll Informat Sci & Technol, Beijing 100029, Peoples R China.
C3 Zhejiang Sci-Tech University; Beijing University of Chemical Technology
RP Zhang, LS (corresponding author), Zhejiang Sci Tech Univ, Sch Informat Sci & Engn, Hangzhou 310018, Zhejiang, Peoples R China.
EM yangyang0070@zstu.edu.cn; vivioe_wang@163.com; lizheng@mail.buct.edu.cn;
   zhanglieshan@zstu.edu.cn; pcy2021@e-chinalife.com
RI Li, Zheng/L-8594-2015
OI Li, Zheng/0000-0002-3938-7033; Yang, Yang/0000-0001-9257-4631; Wang,
   Weiwei/0000-0003-4860-1553
CR Bagherzadeh M, 2022, IEEE T SOFTWARE ENG, V48, P2836, DOI 10.1109/TSE.2021.3070549
   Bin Noor T, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P58, DOI 10.1109/ISSRE.2015.7381799
   Cannizzo F, 2008, AGILE 2008, PROCEEDINGS, P501, DOI 10.1109/Agile.2008.31
   Cartaxo EG, 2011, SOFTW TEST VERIF REL, V21, P75, DOI 10.1002/stvr.413
   Chen S., 2011, P 4 IEEE INT C SOFTW, P1
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Cheng RX, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P452, DOI 10.1145/3460319.3464810
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Fang CR, 2014, SOFTWARE QUAL J, V22, P335, DOI 10.1007/s11219-013-9224-0
   Flemström D, 2018, SOFTWARE QUAL J, V26, P1421, DOI 10.1007/s11219-017-9401-7
   Greca R, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3579851
   Haghighatkhah A, 2018, J SYST SOFTWARE, V146, P80, DOI 10.1016/j.jss.2018.08.061
   Hao D, 2016, FRONT COMPUT SCI-CHI, V10, P769, DOI 10.1007/s11704-016-6112-3
   Hemmati H., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P327, DOI 10.1109/ICST.2011.12
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Huang RB, 2017, P INT COMP SOFTW APP, P3, DOI 10.1109/COMPSAC.2017.271
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kim Jeongho, 2017, P S APPL COMP MARR M, V17, P1409, DOI [10.1145/3019612.3019831, DOI 10.1145/3019612.3019831]
   Ledru Y, 2012, AUTOMAT SOFTW ENG, V19, P65, DOI 10.1007/s10515-011-0093-0
   Liang J., 2018, Cost-effective techniques for continuous integration testing
   Lima J. A. P., 2023, J. Software Eng. Res. Dev, V11, P1
   Lima JAP, 2022, IEEE T SOFTWARE ENG, V48, P453, DOI 10.1109/TSE.2020.2992428
   Liu WL, 2007, INT C COMP AID DES C, P252
   Marijan D, 2023, SOFTWARE QUAL J, V31, P1415, DOI 10.1007/s11219-023-09646-0
   Marijan D, 2016, PROC IEEE INT CONF S, P568, DOI 10.1109/ICSME.2016.77
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Masri W, 2007, IEEE T SOFTWARE ENG, V33, P454, DOI 10.1109/TSE.2007.1020
   Miranda B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P222, DOI 10.1145/3180155.3180210
   Orellana G, 2017, IEEE WORK CONF MIN S, P451, DOI 10.1109/MSR.2017.25
   Pan CY, 2021, THE 12TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, INTERNETWARE 2020, P189, DOI 10.1145/3457913.3457930
   Pan RQ, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10066-6
   Pinto G, 2018, SOFTWARE PRACT EXPER, V48, P2223, DOI 10.1002/spe.2637
   Lima JAP, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106268
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Sharif A, 2021, PROC IEEE INT CONF S, P525, DOI 10.1109/ICSME52107.2021.00053
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Wang R., 2015, INT C SOFTW ENG KNOW, P358
   Wiering M, 2012, ADAPT LEARN OPTIM, V12, P1, DOI 10.1007/978-3-642-27645-3
   Wu ZL, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3361258
   Xiao L, 2020, DISTRIB PARALLEL DAT, V38, P687, DOI 10.1007/s10619-020-07291-1
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Yang Y, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110787
   Yaraghi AS, 2023, IEEE T SOFTWARE ENG, V49, P1615, DOI 10.1109/TSE.2022.3184842
   Zhang CJ, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY AND INDUSTRIAL ENGINEERING, VOLS I AND II, P171, DOI 10.1109/QSIC.2010.16
   [张凯峰 Zhang Kaifeng], 2019, [计算机研究与发展, Journal of Computer Research and Development], V56, P254
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
NR 49
TC 0
Z9 0
U1 0
U2 0
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 JUN 7
PY 2024
DI 10.1142/S0218194024500244
EA JUN 2024
PG 27
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TH6W3
UT WOS:001240424700001
DA 2024-08-05
ER

PT J
AU Adil, M
   Fronza, I
   Pahl, C
AF Adil, Mahum
   Fronza, Ilenia
   Pahl, Claus
TI How did COVID-19 Impact Software Design Activities in Global Software
   Engineering - Systematic Review
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Global Software Engineering (GSE); human aspects of distributed
   development; GSE education and training
ID WORK; COLLABORATION; DIMENSIONS; TOOLS; CLOUD
AB Background: Global Software Engineering (GSE) extends geographical, temporal, and cultural boundaries in distributed environments. Over the past two decades, GSE research has evolved to manage software development for distributed teams. The COVID-19 pandemic highlights the need for comprehensive research, particularly during the software design phase, to support team collaboration in distributed development. Aim: This study systematically analyzes the evolution of research emphasis in the GSE field, specifically exploring on whether the research focuses increasing on software design due to the global pandemic. Method: We systematically analyzed the existing literature in two phases. In the first phase of our study, we mapped GSE research over the two decades leading to the pandemic (2000-2020). In the second phase, we used the forward snowballing approach to examine the literature on the software design phase published between 2020 and 2022. Results: The analysis of 592 research studies in the two phases reveals various trends in GSE research. Evaluation research is the most explored research type in methods and processes, and human aspects of development. Despite the paradigm shift caused by the COVID-19 pandemic that increased reliance on distributed teams, results show that while software organizations are extensively studied across all software engineering phases, the software design phase remains one of the least explored areas. Conclusion: This work highlights the evolving GSE research trends, emphasizing the rising significance of collaborative software design in distributed settings. Our findings address current research gaps and underscore the need for further research on software design activities. This contribution envisions a more collaborative, adaptable GSE field, guiding future research to support distributed teams.
C1 [Adil, Mahum; Fronza, Ilenia; Pahl, Claus] Free Univ Bozen Bolzano, Fac Engn, Bolzano, Italy.
C3 Free University of Bozen-Bolzano
RP Fronza, I (corresponding author), Free Univ Bozen Bolzano, Fac Engn, Bolzano, Italy.
EM mahum.adil@student.unibz.it; ilenia.fronza@unibz.it; claus.pahl@unibz.it
OI Adil, Mahum/0000-0001-6452-6085
CR Adil M., 2023, PROC 25 INT C ENTERP, V2, P126
   Adil M., 2023, PROC 25 INT C ENTERP, V2, P65
   Ågerfalk PJ, 2008, LECT NOTES COMPUT SC, V5007, P1, DOI 10.1007/978-3-540-79588-9_1
   Akbar MA, 2020, IEEE ACCESS, V8, P191242, DOI 10.1109/ACCESS.2020.3031365
   [Anonymous], 2006, PROC 11 ANN SIGCSE C
   Beecham S, 2017, INT CONF GLOBAL SOFT, P11, DOI 10.1109/ICGSE.2017.8
   Beecham S, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P41, DOI 10.1109/ICGSE.2013.14
   Begel A, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P195, DOI 10.1109/ICGSE.2008.17
   Boden A, 2010, IEEE SOFTWARE, V27, P58, DOI 10.1109/MS.2009.113
   Bosnic I, 2019, INT CONF GLOBAL SOFT, P162, DOI 10.1109/ICGSE.2019.00037
   Bosnic I, 2019, ACM T COMPUT EDUC, V19, DOI 10.1145/3274529
   Braught G, 2018, ACM T COMPUT EDUC, V18, DOI 10.1145/3145476
   Britto Ricardo, 2016, Journal of Software Engineering Research and Development, V4, DOI 10.1186/s40411-016-0029-2
   Britto R, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110699
   Cardon PW, 2015, INT J BUS COMMUN, V52, P273, DOI 10.1177/2329488414525446
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Cico O, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110736
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cockburn A., 2006, Agile software development: the cooperative game
   Corral Luis, 2022, SIGITE '22: The 23rd Annual Conference on Information Technology Education, P66, DOI 10.1145/3537674.3554755
   Crnkovic I, 2012, PROC INT CONF SOFTW, P1225, DOI 10.1109/ICSE.2012.6227020
   Cunha RFV, 2020, INT CONF GLOBAL SOFT, P71, DOI 10.1145/3372787.3389302
   Damian D., 2006, 28th International Conference on Software Engineering Proceedings, P685, DOI 10.1145/1134285.1134391
   Deshpande Sadhana, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P67, DOI 10.1109/ICGSE.2010.16
   Dingsoyr T, 2014, LECT NOTES BUS INF P, V199, P1
   Ebert C, 2017, IEEE SOFTWARE, V34, P98, DOI 10.1109/MS.2017.4121226
   Ebert C, 2016, INT CONF GLOBAL SOFT, P144, DOI 10.1109/ICGSE.2016.19
   El Bajta M, 2018, TSINGHUA SCI TECHNOL, V23, P690, DOI 10.26599/TST.2018.9010029
   Esbensen M., 2015, Proceedings of the 2015 ACM International Conference on Interactive Tabletops and Surfaces, ITS 2015, November, P161, DOI [DOI 10.1145/2817721, DOI 10.1145/2817721.2817746]
   Faniran VT, 2017, 2017 1ST INTERNATIONAL CONFERENCE ON NEXT GENERATION COMPUTING APPLICATIONS (NEXTCOMP), P36, DOI 10.1109/NEXTCOMP.2017.8016173
   Farmer M, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P95
   Flor NV, 2006, COMMUN ACM, V49, P57, DOI 10.1145/1164394.1164421
   Fronza I, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET 2022), P165, DOI 10.1109/ICSE-SEET55299.2022.9794249
   Garcia I, 2023, IEEE ACCESS, V11, P24655, DOI 10.1109/ACCESS.2023.3254904
   Gotel O, 2009, CONF SOFTW ENG EDUC, P271, DOI 10.1109/CSEET.2009.36
   Gumm DC, 2006, IEEE SOFTWARE, V23, P45, DOI 10.1109/MS.2006.122
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 2005, PROC INT CONF SOFTW, P524
   Hidayati Anita, 2020, ICSIM '20: Proceedings of the 3rd International Conference on Software Engineering and Information Management, P110, DOI 10.1145/3378936.3378966
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Husin WSW, 2019, PROCEDIA COMPUT SCI, V161, P178, DOI 10.1016/j.procs.2019.11.113
   Hussain W, 2017, INT CONF GLOBAL SOFT, P21, DOI 10.1109/ICGSE.2017.16
   ICGSE, 2021, CALL RES PAPERS
   Ilyas M, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2540
   Jalali S., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P45, DOI 10.1109/ICGSE.2010.14
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Lal R, 2018, PROCEEDINGS 2018 ACM/IEEE 13TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING ICGSE 2018, P59, DOI 10.1145/3196369.3196378
   Lamersdorf A, 2009, INT CONF GLOBAL SOFT, P41, DOI 10.1109/ICGSE.2009.12
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Lescher C., 2010, P 15 EUR C PATT LANG, P1
   Mahmood S, 2017, INFORM SOFTWARE TECH, V91, P102, DOI 10.1016/j.infsof.2017.06.009
   Mancl D, 2020, LECT NOTES BUS INF P, V396, P309, DOI 10.1007/978-3-030-58858-8_32
   Manteli C., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P40, DOI 10.1109/ICGSE.2011.16
   Marek Krzysztof, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P24, DOI 10.1007/978-3-030-67084-9_2
   Marques AB, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P21, DOI 10.1109/ICGSE.2013.12
   Miller C, 2021, PROC INT CONF SOFTW, P624, DOI 10.1109/ICSE43902.2021.00064
   Moe N. B., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P1, DOI 10.1109/ICGSE.2012.33
   Neumann Michael, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P40, DOI 10.1007/978-3-030-67084-9_3
   Noll J., 2011, ACM INROADS, V1, P66, DOI DOI 10.1145/1835428.1835445
   Noll J, 2016, 2016 IEEE 11TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING WORKSHOPS (ICGSEW), P55, DOI 10.1109/ICGSEW.2016.21
   Noll J, 2016, INT CONF GLOBAL SOFT, P179, DOI 10.1109/ICGSE.2016.33
   Nugraha CD, 2021, 2021 5TH INTERNATIONAL CONFERENCE ON INFORMATICS AND COMPUTATIONAL SCIENCES (ICICOS 2021), DOI [10.1109/ICICoS53627.2021.9651829, 10.1109/ICICOS53627.2021.9651829]
   Oza N, 2013, LECT NOTES COMPUT SC, V7983, P229, DOI 10.1007/978-3-642-39259-7_19
   Paasivaara M, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P87, DOI 10.1109/ICGSE.2008.38
   Paasivaara M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P285, DOI 10.1109/ICSE.2015.157
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Portillo-Rodriguez Javier, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P13, DOI 10.1109/ICGSE.2010.12
   Portillo-Rodríguez J, 2012, INFORM SOFTWARE TECH, V54, P663, DOI 10.1016/j.infsof.2012.02.006
   Prikladnicki R, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P262
   Richardson I., 2010, IT OUTSOURCING CONCE, P1534, DOI DOI 10.1109/CSEET.2007.24
   Sahay S., 2003, GLOBAL IT OUTSOURCIN
   Sako M, 2021, COMMUN ACM, V64, P20, DOI 10.1145/3451223
   Saleem N, 2019, INT CONF GLOBAL SOFT, P76, DOI 10.1109/ICGSE.2019.00027
   Shah H, 2015, INT CONF GLOBAL SOFT, P13, DOI 10.1109/ICGSE.2015.25
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Sievi-Korte O, 2020, LECT NOTES COMPUT SC, V12562, P315, DOI 10.1007/978-3-030-64148-1_20
   Sinha R, 2020, ISOFT: PROCEEDINGS OF THE 13TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3385032.3385037
   Smite D, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111552
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Sommerville I., 2011, Software engineering, V9th ed.
   Stray V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110717
   Stray V, 2019, INT CONF GLOBAL SOFT, P111, DOI 10.1109/ICGSE.2019.00031
   Tofan Dan, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P192, DOI 10.1007/978-3-642-39031-9_17
   Trainer EH, 2018, J SYST SOFTWARE, V144, P328, DOI 10.1016/j.jss.2018.06.028
   Vizcaíno A, 2023, ACM T COMPUT EDUC, V23, DOI 10.1145/3592620
   Vizcaíno A, 2019, ACM T COMPUT EDUC, V19, DOI 10.1145/3218279
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wohlin C., 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Chadli SY, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-3670-7
   Zahedi M, 2016, INT J INFORM MANAGE, V36, P995, DOI 10.1016/j.ijinfomgt.2016.06.007
NR 91
TC 0
Z9 0
U1 2
U2 2
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD JUN
PY 2024
VL 34
IS 06
BP 941
EP 971
DI 10.1142/S0218194024500098
EA APR 2024
PG 31
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6U6
UT WOS:001207836600001
DA 2024-08-05
ER

PT J
AU Ge, XT
   Li, XY
   Sun, YY
   Qing, MS
   Zheng, HT
   Zhang, HB
   Wu, XY
AF Ge, Xiuting
   Li, Xuanye
   Sun, Yuanyuan
   Qing, Mingshuang
   Zheng, Haitao
   Zhang, Huibin
   Wu, Xianyu
TI Pattern Mining-Based Warning Prioritization by Refining Abstract Syntax
   Tree
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Warning prioritization; pattern mining; actionable warnings
AB Static code analysis tools (SATs) are widely used to detect potential defects in software projects. However, the usability of SATs is seriously hindered by a large number of unactionable warnings. Currently, many warning prioritization approaches are proposed to improve the usability of SATs. These approaches mainly extract different warning features to capture the statistical or historical information of warnings, thereby ranking actionable warnings in front of unactionable warnings. Such features are extracted by extremely relying on domain knowledge. However, the precise domain knowledge is difficult to be acquired. Also, the domain knowledge obtained in a project cannot be directly applied to other projects due to different application scenarios among different projects. To address the above problem, we propose a pattern mining-based warning prioritization approach based on the warning-related Abstract Syntax Tree (AST). To automatically mine actionable warning patterns, our approach leverages an advanced technique to collect actionable warnings, designs an algorithm to extract the warning-related AST, and mines patterns from ASTs of all actionable warnings. To prioritize the newly reported warnings, our approach combines exact and fuzzing matching techniques to calculate the similarity score between patterns of the newly reported warnings and the mined actionable warning patterns. We compare our approach with four typical baselines on five open-source and large-scale Java projects. The results show that our approach outperforms four baselines and achieves the maximum MAP (0.76) and MRR (2.19). Besides, a case study on Defect4J dataset demonstrates that our approach can discover 83% of true defects in the top 10 warnings.
C1 [Ge, Xiuting; Li, Xuanye; Zheng, Haitao; Zhang, Huibin; Wu, Xianyu] GuangDong Tops Soft Pk co LTD, Guangzhou, Peoples R China.
   [Ge, Xiuting; Li, Xuanye] Shanghai Key Lab Comp Software Evaluating & Testin, Shanghai, Peoples R China.
   [Ge, Xiuting; Li, Xuanye; Sun, Yuanyuan; Qing, Mingshuang] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Nanjing University
RP Zheng, HT (corresponding author), GuangDong Tops Soft Pk co LTD, Guangzhou, Peoples R China.
EM dg20320002@smail.nju.edu.cn; 522022320077@smail.nju.edu.cn;
   962sun@163.com; 594673773@qq.com; zht@gdsoftpark.com;
   zhanghb@gdsoftpark.com; wuxy@gdsoftpark.com
CR Avgustinov P, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P437, DOI 10.1109/ICSE.2015.62
   Ayewah N., 2007, P 7 ACM SIGPLAN SIGS, P1
   Barik T, 2016, PROC IEEE INT CONF S, P212, DOI 10.1109/ICSME.2016.63
   Berman Maxwell, 2019, 2019 18th IEEE International Conference On Machine Learning And Applications (ICMLA), P1322, DOI 10.1109/ICMLA.2019.00215
   Cheirdari F, 2018, IEEE INT CONF BIG DA, P4782, DOI 10.1109/BigData.2018.8622456
   Dang B. H., 2020, SOUTHEASTCON, V2, P1
   Emanuelsson P, 2008, ELECTRON NOTES THEOR, V217, P5, DOI 10.1016/j.entcs.2008.06.039
   Fang C., 2017, P 26 INT C SOFTW ENG, P278
   Ge XT, 2023, Arxiv, DOI arXiv:2312.00324
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Haihao Shen, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P299, DOI 10.1109/ICST.2011.51
   Hanam Q., 2014, P 11 WORK C MIN SOFT, P152
   Heckman S. S., 2007, XRDS: Crossroads, The ACM Magazine for Students, V14, P1
   Heckman S, 2011, INFORM SOFTWARE TECH, V53, P363, DOI 10.1016/j.infsof.2010.12.007
   Heckman S, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P161, DOI 10.1109/ICST.2009.45
   Heckman S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P41
   Honglei Zhu, 2018, International Journal of Computers and Applications, V40, P157, DOI 10.1080/1206212X.2017.1397342
   HUNT JW, 1977, COMMUN ACM, V20, P350, DOI 10.1145/359581.359603
   Jongwon Yoon, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P3, DOI 10.1109/APSEC.2014.81
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kang HJ, 2022, PROC INT CONF SOFTW, P698, DOI 10.1145/3510003.3510214
   Kanwal J, 2012, J COMPUT SCI TECH-CH, V27, P397, DOI 10.1007/s11390-012-1230-3
   Kharkar A, 2022, PROC INT CONF SOFTW, P1307, DOI 10.1145/3510003.3510153
   Kim S., 2007, 4 INT WORKSH MIN SOF, P27
   Koc U, 2019, IEEE INT CONF SOFTW, P288, DOI 10.1109/ICST.2019.00036
   Koc U, 2017, MAPL'17: PROCEEDINGS OF THE 1ST ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P35, DOI 10.1145/3088525.3088675
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Kremenek T, 2003, LECT NOTES COMPUT SC, V2694, P295
   Kremenek T., 2004, Software Engineering Notes, V29, P83, DOI 10.1145/1041685.1029909
   Lavazza L., 2020, INT C QUAL INF COMM, P144
   Lee S, 2019, IEEE INT CONF SOFTW, P391, DOI 10.1109/ICST.2019.00048
   Liu K., 2019, INT C SOFTW AN EV RE, P1
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Marcilio D, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110671
   Marcilio D, 2019, INT C PROGRAM COMPRE, P209, DOI 10.1109/ICPC.2019.00040
   Mingshuang Qing, 2021, 2021 8th International Conference on Dependable Systems and Their Applications (DSA), P20, DOI 10.1109/DSA52907.2021.00012
   Muske T, 2016, IEEE INT WORK C SO, P157, DOI 10.1109/SCAM.2016.25
   Nam J, 2019, INFORM SOFTWARE TECH, V112, P164, DOI 10.1016/j.infsof.2019.04.014
   Qing MS, 2021, IEEE I C SQRS-C, P685, DOI 10.1109/QRS-C55045.2021.00103
   Ruthruff JR, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P341, DOI 10.1145/1368088.1368135
   Sharma M, 2012, INT CONF INTELL SYST, P539, DOI 10.1109/ISDA.2012.6416595
   Tran KT, 2022, 2022 29TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, APSEC, P447, DOI 10.1109/APSEC57359.2022.00060
   Tripp O, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P762, DOI 10.1145/2660267.2660339
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Wang JJ, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239523
   Wu Y., 2011, 2011 8 IEEE INT C AD, P408, DOI DOI 10.1109/AVSS.2011.6027363
   Xiaoran X., 2017, P 26 INT C SOFTW ENG, P723
   Yang XQ, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09948-6
   Yüksel U, 2013, PROC IEEE INT CONF S, P532, DOI 10.1109/ICSM.2013.89
   Zhang YW, 2020, SOFT COMPUT, V24, P1045, DOI 10.1007/s00500-019-03942-3
NR 50
TC 0
Z9 0
U1 0
U2 0
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 JUL 23
PY 2024
DI 10.1142/S0218194024500293
EA JUL 2024
PG 27
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZG2K5
UT WOS:001274074600001
DA 2024-08-05
ER

PT J
AU Gao, B
   Qin, HW
   Ma, XQ
AF Gao, Bin
   Qin, Hongwu
   Ma, Xiuqin
TI Multi-Label Classification of Pure Code
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Multi-label classification; code classification; encoder; pre-trained
   model
AB Currently, there is a significant amount of public code in the IT communities, programming forums and code repositories. Many of these codes lack classification labels, or have imprecise labels, which causes inconvenience to code management and retrieval. Some classification methods have been proposed to automatically assign labels to the code. However, these methods mainly rely on code comments or surrounding text, and the classification effect is limited by the quality of them. So far, there are a few methods that rely solely on the code itself to assign labels to the code. In this paper, an encoder-only method is proposed to assign multiple labels to the code of an algorithmic problem, in which UniXcoder is employed to encode the input code and the encoding results correspond to the output labels through the classification heads. The proposed method relies only on the code itself. We construct a dataset to evaluate the proposed method, which consists of source code in three programming languages (C++, Java, Python) with a total size of approximately 120K. The results of the comparative experiment show that the proposed method has better performance in multi-label classification task of pure code than encoder-decoder methods.
C1 [Gao, Bin; Qin, Hongwu; Ma, Xiuqin] Northwest Normal Univ, Coll Comp Sci & Engn, Dept Software Engn, Lanzhou 730070, Peoples R China.
   [Qin, Hongwu; Ma, Xiuqin] Univ Teknol MARA, Inst Big Data Analyt & Arti ?cial Intelligence IBD, Shah Alam 40450, Selangor, Malaysia.
C3 Northwest Normal University - China; Universiti Teknologi MARA
RP Qin, HW (corresponding author), Northwest Normal Univ, Coll Comp Sci & Engn, Dept Software Engn, Lanzhou 730070, Peoples R China.; Qin, HW (corresponding author), Univ Teknol MARA, Inst Big Data Analyt & Arti ?cial Intelligence IBD, Shah Alam 40450, Selangor, Malaysia.
EM gaobin_mail@163.com; qinhongwu@nwnu.edu.cn; maxiuqin@nwnu.edu.cn
FU National Natural Science Foundation of China [62162055]; Gansu
   Provincial University Teacher Innovation Foundation [2024A-006]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant No. 62162055, and in part by the Gansu
   Provincial University Teacher Innovation Foundation under Grant No.
   2024A-006.
CR Adoma AF, 2020, I COMP CONF WAVELET, P117, DOI 10.1109/ICCWAMTIP51612.2020.9317379
   Ameer I, 2022, IEEE ACCESS, V10, P8779, DOI 10.1109/ACCESS.2022.3143819
   Chourasia P, 2022, INT C PROGRAM COMPRE, P471, DOI 10.1145/3524610.3527914
   Daya G., 2022, P 60 INT C ANN M ASS, P7212, DOI DOI 10.18653/V1/2022.ACL-LONG.499
   Daya G., 2021, P INT C LEARN REPR
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Kementchedjhieva Y, 2023, Arxiv, DOI arXiv:2305.05627
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   LeetCode, Online programming and algorithm practice platform
   Li J, 2018, Arxiv, DOI arXiv:1711.09573
   Liu FDR, 2021, Arxiv, DOI arXiv:2110.08426
   Liu NY, 2021, NEURAL PROCESS LETT, V53, P375, DOI 10.1007/s11063-020-10411-8
   Liu WF, 2021, INT J COMPUT INT SYS, V14, DOI 10.1007/s44196-021-00055-4
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Loshchilov I., 2018, INT C LEARN REPR
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Maletic J. I., 1999, 14th IEEE International Conference on Automated Software Engineering, P251, DOI 10.1109/ASE.1999.802296
   Nam J., 2017, Adv. Neural Inf. Process. Syst, V30, P5413
   NewCoder, About us
   Octoverse GitHub, An annual survey conducted by GitHub targeting community developers
   Parihar S, 2017, ITICSE'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P92, DOI 10.1145/3059009.3059026
   Qian WB, 2023, INFORM FUSION, V100, DOI 10.1016/j.inffus.2023.101948
   Raffel C, 2020, J MACH LEARN RES, V21
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2666356.2594321, 10.1145/2594291.2594321]
   Sanh V, 2020, Arxiv, DOI [arXiv:1910.01108, 10.48550/arXiv.1910.01108]
   Secil U., 2002, P 8 INT C KNOWL DISC, P632
   Song Rui, 2023, Applied Intelligence. The International Journal of Research on Intelligent Systems for Real Life Complex Problems, P8761, DOI 10.1007/s10489-022-03896-4
   Tang TC, 2020, IEEE ACCESS, V8, P193248, DOI 10.1109/ACCESS.2020.3030468
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Yang Z., 2019, P ADV NEUR INF PROC, V32
   Zeng L., 2021, P WIRELESS COMMUNICA, V1, P9956207
NR 32
TC 0
Z9 0
U1 0
U2 0
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 JUL 29
PY 2024
DI 10.1142/S0218194024500311
EA JUL 2024
PG 19
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZX7O6
UT WOS:001278652300001
DA 2024-08-05
ER

PT J
AU Ma, YF
   Chen, L
AF Ma, Yanfang
   Chen, Liang
TI The Evolution Mechanism of Correctness for Cyber-Physical System
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Limit; correctness; bisimulation; formalization; CPS
AB Cyber-physical Systems (CPS) are widely used in all areas of life. Ensuring the correctness of CPS remains an enduring challenge during its development and design phases. One approach to ascertain the correctness of CPS is behavior equivalence based on bisimulation. However, whether the implementation development process develops in the right direction has an important impact on obtaining the correct system implementation. Especially, the development process of complex CPS often yields a multitude of implementation versions, the correlation among these versions partly signifies the correctness of the development process. This paper formalizes the relationship between the implementation versions and establishes a formal description of the development process progressing in the correct direction, leveraging the concept of a "limit idea." Initially, we introduce the concept of "limit bisimulation" for CPS systems to delineate implementations acquired during the CPS development process. Specific limit bisimulations are demonstrated to represent distinct scenarios within the development process. Subsequently, the convergence mechanism of implementations is modeled through bisimulation limits, encapsulating the CPS's specification as the ultimate goal of obtained implementations during the development process. Finally, the congruence property of the bisimulation limit is proved, which accounts for the relation between specification and implementation versions can be decomposed into a refinement hierarchy. The limit theorem of bisimulation in CPS can help the designer and developer of CPS to comprehend the development course better.
C1 [Ma, Yanfang] Changzhou Inst Technol, Sch Comp Sci & Informat Engn, Changzhou 213032, Peoples R China.
   [Chen, Liang] Changzhou Inst Technol, Sch Math, Changzhou 213032, Peoples R China.
C3 Changzhou Institute of Technology; Changzhou Institute of Technology
RP Ma, YF (corresponding author), Changzhou Inst Technol, Sch Comp Sci & Informat Engn, Changzhou 213032, Peoples R China.
EM clmyf@163.com; Chenl@czu.cn
OI Chen, Liang/0000-0002-3788-6904
FU National Natural Science Foundation of China [62162014]; Natural Science
   Foundation of Anhui Province [2108085MF204]; Abroad Visiting of
   Excellent Young Talents of Universities in Anhui Province
   [GXGWFX2019022]
FX This research was supported by the National Natural Science Foundation
   of China(No. 62162014), the Natural Science Foundation of Anhui Province
   (No.2108085MF204), the Abroad Visiting of Excellent Young Talents of
   Universities in Anhui Province (No. GXGWFX2019022).
CR Banach R, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2301
   Engelking R., 1977, GEN TOPOLOGY
   Graf S, 2018, LECT NOTES COMPUT SC, V11119, P19, DOI 10.1007/978-3-030-00244-2_2
   Groote JF, 2018, ALGORITHMS, V11, DOI 10.3390/a11090131
   Groote JF, 2017, ACM T COMPUT LOG, V18, DOI 10.1145/3060140
   Guan Y, 2020, J SYST ARCHITECT, V106, DOI 10.1016/j.sysarc.2020.101707
   He J., 2003, EQUATING BISIMULATIO
   Huang X, 2020, APPL MATH COMPUT, V380
   JARUS N, 2016, 7 INT GREEN SUST COM, P1
   Jarus N, 2019, IEEE HI ASS SYS ENGR, P107, DOI 10.1109/HASE.2019.00025
   Kacianka S, 2018, IEEE SYS MAN CYBERN, P3165, DOI 10.1109/SMC.2018.00536
   Kelley J. L., 1975, GEN TOPOLOGY
   Khan SMU, 2018, APPL SCI-BASEL, V8, DOI 10.3390/app8020221
   Lang F, 2021, FORM METHOD SYST DES, V58, P83, DOI 10.1007/s10703-021-00360-w
   Lanotte R, 2021, THEOR COMPUT SCI, V869, P29, DOI 10.1016/j.tcs.2020.12.045
   Lanotte R, 2020, ACM T PRIV SECUR, V23, DOI 10.1145/3373270
   Lanotte R, 2017, LECT NOTES COMPUT SC, V10168, P115, DOI 10.1007/978-3-319-53733-7_8
   Lee E. A., 2010, 3 INT WORKSH EQ BAS, P11
   Li Ran, 2022, Formal Methods and Software Engineering: 23rd International Conference on Formal Engineering Methods, ICFEM 2022, Proceedings. Lecture Notes in Computer Science (13478), P244, DOI 10.1007/978-3-031-17244-1_15
   Li R, 2022, 2022 26TH INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS 2022), P123, DOI 10.1109/ICECCS54210.2022.00023
   Liu JH, 2022, SECUR COMMUN NETW, V2022, DOI 10.1155/2022/8995704
   Ma Y., 2011, J INF COMPUT SCI, V8, P2875
   Ma YF, 2017, ADV INTELL SYST, V510, P213, DOI 10.1007/978-3-319-46206-6_22
   Ma YF, 2013, J COMPUT SCI TECH-CH, V28, P1097, DOI 10.1007/s11390-013-1400-y
   Ma YF, 2017, ELECTRON NOTES THEOR, V333, P73, DOI 10.1016/j.entcs.2017.08.007
   Ma YF, 2009, ELECTRON NOTES THEOR, V257, P55, DOI 10.1016/j.entcs.2009.11.026
   [马艳芳 Ma Yanfang], 2013, [计算机研究与发展, Journal of Computer Research and Development], V50, P626
   Nath B, 2022, INT C CYBER WARFARE, P591
   Nenzi L, 2022, LOG METH COMPUT SCI, V18, DOI 10.46298/LMCS-18(1:4)2022
   Ouchani S., 2020, SMART APPL DAT AN 3, V1207, P59
   Pan HY, 2015, INT J APPROX REASON, V56, P28, DOI 10.1016/j.ijar.2014.10.001
   Plotkin G. D., 1981, FN19 DAIMI AARH U
   Sanwal MU, 2015, LECT NOTES COMPUT SC, V9361, P132, DOI 10.1007/978-3-319-25141-7_10
   Shcherbakov M, 2022, ACM TRANS CYBER-PHYS, V6, DOI 10.1145/3486252
   [拓明福 Tuo Mingfu], 2016, [空军工程大学学报. 自然科学版, Journal of Air Force Engineering University. Natural Science Edition], V17, P40
   Tyagi AK., 2021, Internet of Things and Cyber-Physical Systems, V1, P22, DOI DOI 10.1016/J.IOTCPS.2021.12.002
   Yang YH, 2023, INT J CONTROL AUTOM, V21, P2980, DOI 10.1007/s12555-022-0415-y
   Ye D, 2020, NEUROCOMPUTING, V390, P69, DOI 10.1016/j.neucom.2020.01.075
   Ying M. S., 2001, TOPOLOGY PROCESS CAL
   Ying MS, 2002, THEOR COMPUT SCI, V275, P1, DOI 10.1016/S0304-3975(01)00124-4
   Ying Zhou, 2018, 2018 IEEE/ACIS 17th International Conference on Computer and Information Science (ICIS). Proceedings, P166, DOI 10.1109/ICIS.2018.8466527
NR 41
TC 0
Z9 0
U1 2
U2 2
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD JUL
PY 2024
VL 34
IS 07
BP 1095
EP 1134
DI 10.1142/S0218194024500153
EA MAY 2024
PG 40
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZY9V8
UT WOS:001223008500001
DA 2024-08-05
ER

PT J
AU Wang, YQ
   Zhao, YX
   Wang, X
   Tang, WD
   Zhang, JH
   Wang, SL
   Wang, P
   Hu, J
AF Wang, Yuqiong
   Zhao, Yuxiao
   Wang, Xiang
   Tang, Weidong
   Zhang, Jinhui
   Wang, Shaolei
   Wang, Peng
   Hu, Jian
TI Robotic Process Automation Efficiency for Mobile App Testing: An
   Empirical Investigation
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE RPA; efficiency; software testing; GUI testing
AB In today's rapidly evolving software environment, the graphical user interface (GUI) plays a crucial role in providing intuitive, user-friendly interaction. However, traditional intrusive GUI testing methods often face challenges such as interrupting user workflows, requiring significant manual effort and insufficient test scenario coverage. Non-intrusive testing methods, such as Robotic Process Automation (RPA), offer a solution to validate GUI functionality without modifying the application's code or affecting the user experience. RPA systems automate repetitive tasks by simulating user interactions, becoming valuable tools in GUI testing. However, challenges like limited computational resources, time constraints, or restricted exploration capabilities may limit the efficiency of individual RPA agents, thus restricting coverage and effectiveness.To address this issue, this study explores the performance of a single RPA agent versus an RPA cluster under different testing conditions, using three popular testing methods: Monkey, Stoat and Q-testing. Experimental results indicate that an RPA cluster outperforms a single RPA in GUI coverage and error detection, making a significant contribution to the field of non-intrusive GUI exploration testing. The findings of this study provide directions for future research to ensure the delivery of high-quality mobile applications.
C1 [Wang, Yuqiong; Zhao, Yuxiao; Wang, Xiang; Tang, Weidong; Zhang, Jinhui; Wang, Shaolei; Wang, Peng; Hu, Jian] Nari Grp Corp, State Grid Elect Power Res Inst, Nanjing 211106, Peoples R China.
   [Wang, Yuqiong; Zhao, Yuxiao; Wang, Xiang; Tang, Weidong; Zhang, Jinhui; Wang, Shaolei] China Realtime Database Co Ltd, Nanjing 210012, Peoples R China.
C3 Nari Group Corp; State Grid Corporation of China
RP Wang, P; Hu, J (corresponding author), Nari Grp Corp, State Grid Elect Power Res Inst, Nanjing 211106, Peoples R China.
EM wangpeng@sgepri.sgcc.com.cn; hujian@sgepri.sgcc.com.cn
FU Key Technologies and Platform Development for Virtual Digital Employee
   Construction in Electric Power Enterprises [524623220006]; NARI Group
   Cooperation Technology Program [SGNR0000KJJS2206005]
FX The research was funded by Key Technologies and Platform Development for
   Virtual Digital Employee Construction in Electric Power Enterprises
   (524623220006) and NARI Group Cooperation Technology Program
   (SGNR0000KJJS2206005).
CR Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Banerjee D, 2019, IEEE ACCESS, V7, P1888, DOI 10.1109/ACCESS.2018.2886272
   Banerjee D, 2018, IEEE ACCESS, V6, P56378, DOI 10.1109/ACCESS.2018.2873284
   Banerjee D, 2018, IEEE ACCESS, V6, P37858, DOI 10.1109/ACCESS.2018.2854754
   Banerjee D, 2018, IEEE ACCESS, V6, P34075, DOI 10.1109/ACCESS.2018.2846761
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Chiatti A, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P948, DOI 10.1145/3167132.3167236
   Cooper N, 2021, PROC INT CONF SOFTW, P957, DOI 10.1109/ICSE43902.2021.00091
   Eskonen J, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS (ACSOS 2020), P160, DOI 10.1109/ACSOS49614.2020.00038
   Fang XX, 2016, CHINA COMMUN, V13, P227, DOI 10.1109/CC.2016.7582314
   Gu TX, 2019, PROC INT CONF SOFTW, P269, DOI 10.1109/ICSE.2019.00042
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   Heiskanen A., 2021, THESIS
   Holmberg M, 2022, IEEE ICST WORKSHOP, P199, DOI 10.1109/ICSTW55395.2022.00043
   Jian-Ping L., 2012, P 3 INT C NETW DISTR, P194
   Jiménez-Ramírez A, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2259
   Jing Cheng, 2021, 2021 International Conference on Intelligent Computing, Automation and Applications (ICAA), P245, DOI 10.1109/ICAA53760.2021.00052
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Maciel Lucas, 2022, 2022 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P475, DOI 10.1109/SEAA56994.2022.00079
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mao K, 2017, IEEE SOFTWARE, V34, P11, DOI 10.1109/MS.2017.49
   Pan M., 2020, P 29 ACM SIGSOFT INT, P153, DOI [DOI 10.1145/3395363.3397354, 10.1145/3395363.3397354]
   Qian J, 2020, PROC INT CONF SOFTW, P297, DOI 10.1145/3377811.3380431
   Ran DZ, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P55, DOI [10.1145/3510457.3513027, 10.1109/ICSE-SEIP55303.2022.9793948]
   Romdhana A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3502868
   Salihu I. A., 2016, P 14 INT C ADV MOB C, P50, DOI DOI 10.1145/3007120.3011072
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Wetzlmaier T, 2016, IEEE INT CONF SOFTW, P416, DOI 10.1109/ICST.2016.51
   White TD, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P307, DOI 10.1145/3293882.3330551
   Xiao XS, 2019, PROC INT CONF SOFTW, P257, DOI 10.1109/ICSE.2019.00041
   Xie ML, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1655, DOI 10.1145/3368089.3417940
   Yan JW, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P360, DOI 10.1145/3213846.3229500
   Yan JW, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P42, DOI 10.1109/QRS.2017.14
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Yu SC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1066, DOI 10.1109/ASE.2019.00103
   Yu ZW, 2016, PROCEEDINGS OF 2016 IEEE 18TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS; IEEE 14TH INTERNATIONAL CONFERENCE ON SMART CITY; IEEE 2ND INTERNATIONAL CONFERENCE ON DATA SCIENCE AND SYSTEMS (HPCC/SMARTCITY/DSS), P144, DOI [10.1109/HPCC-SmartCity-DSS.2016.0031, 10.1109/HPCC-SmartCity-DSS.2016.44]
   Zhang T, 2022, INT J DISTRIB SENS N, V18, DOI 10.1177/15501329221115375
   Zhang ZQ, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P805, DOI 10.1145/3533767.3543292
   Zheng Y, 2021, PROC INT CONF SOFTW, P423, DOI 10.1109/ICSE43902.2021.00048
NR 40
TC 0
Z9 0
U1 1
U2 1
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD JUL
PY 2024
VL 34
IS 07
BP 1025
EP 1046
DI 10.1142/S0218194024500116
EA MAY 2024
PG 22
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZY9V8
UT WOS:001223008900001
DA 2024-08-05
ER

PT J
AU Liang, SW
   He, ZT
AF Liang, Shuwen
   He, Zhitao
TI Automated Test Case Generation for Path Coverage by Using
   Multi-Objective Particle Swarm Optimization Algorithm with Reinforcement
   Learning and Relationship Matrix Strategies
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Automated test case generation; path coverage; multi-objective particle
   swarm optimization; reinforcement learning
ID COLONY OPTIMIZATION; MOPSO; SELECTION; IFOGSIM
AB Software testing is an important phase in software life cycle, and test case generation occupies the main part of the testing workload. Path coverage is the most stringent and difficult coverage criteria, so automatic test case generation for path coverage (ATCG-PC) is an important task in software testing. ATCG-PC is usually abstracted as an optimization search problem, and the commonly used solution algorithm is swarm intelligence algorithm. This paper proposes a path coverage test case generation algorithm based on improved multi-objective particle swarm optimization (IMOPSO) algorithm. The algorithm uses the multi-objective strategy to generate test cases for a group of similar paths at a time, and is supplemented by the particle action selection strategy based on reinforcement learning and the secondary search algorithm based on relationship matrix, which makes use of the similarity information between paths to speed up the early convergence and help to quickly reach the optimal solution around the local optimal position. By grouping the paths according to the similarity, the algorithm reduces the test case consumption, and improves the efficiency of test case generation. Experimental results show that, compared with the existing methods, the proposed algorithm can achieve higher path coverage with less test case consumption and is also suitable for large-scale programs.
C1 [Liang, Shuwen; He, Zhitao] Beihang Univ, Sch Comp Sci & Engn, 37 Xueyuan Rd, Beijing 100191, Peoples R China.
C3 Beihang University
RP He, ZT (corresponding author), Beihang Univ, Sch Comp Sci & Engn, 37 Xueyuan Rd, Beijing 100191, Peoples R China.
EM liangsw101@gmail.com; zhitaohe@vip.sina.com
CR Ahmed MA, 2008, COMPUT OPER RES, V35, P3107, DOI 10.1016/j.cor.2007.01.012
   Ammann P., 2016, Introduction to Software Testing
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Biswas S., 2015, 2015 INT C EL ENG IN, P1
   Cai GC, 2021, ENG APPL ARTIF INTEL, V106, DOI 10.1016/j.engappai.2021.104454
   Coello CAC, 2002, IEEE C EVOL COMPUTAT, P1051, DOI 10.1109/CEC.2002.1004388
   Dai XH, 2021, COMPUT IND ENG, V156, DOI 10.1016/j.cie.2021.107290
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Dorigo M, 2006, IEEE COMPUT INTELL M, V1, P28, DOI 10.1109/MCI.2006.329691
   Fan X, 2015, ACSR ADV COMPUT, V16, P287
   Gong DW, 2011, J SYST SOFTWARE, V84, P2222, DOI 10.1016/j.jss.2011.06.028
   Gopi P, 2016, COMPUTE 2016, P137, DOI 10.1145/2998476.2998492
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Gupta N, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P219, DOI 10.1109/ASE.2000.873666
   Han X, 2017, IET SOFTW, V11, P41, DOI 10.1049/iet-sen.2016.0066
   Hojjati A, 2018, J HYDROL HYDROMECH, V66, P323, DOI 10.2478/johh-2018-0006
   HORGAN TR, 1994, COMPUTER, V27, P60, DOI 10.1109/2.312032
   Huang H, 2018, IEEE T IND INFORM, V14, P5005, DOI 10.1109/TII.2018.2856881
   Jaiswal Updesh, 2021, IC3 '21: 2021 Thirteenth International Conference on Contemporary Computing (IC3-2021), P475, DOI 10.1145/3474124.3474197
   Jatana N, 2020, NEURAL PROCESS LETT, V52, P767, DOI 10.1007/s11063-020-10288-7
   Khari M, 2020, SOFT COMPUT, V24, P9143, DOI 10.1007/s00500-019-04444-y
   Khari M, 2019, SOFT COMPUT, V23, P1933, DOI 10.1007/s00500-017-2906-y
   King J. C., 1975, SIGPLAN Notices, V10, P228, DOI 10.1145/390016.808444
   Lee C, 2012, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON APAC 2011
   Liu FQ, 2022, IEEE T EMERG TOP COM, V10, P1075, DOI 10.1109/TETC.2021.3070968
   Liu FQ, 2021, IEEE TETCI, V5, P491, DOI 10.1109/TETCI.2019.2914280
   Liu FQ, 2017, CAAI T INTELL TECHNO, V2, P73, DOI 10.1049/trit.2017.0004
   Lv XW, 2018, IET SOFTW, V12, P306, DOI 10.1049/iet-sen.2017.0260
   Mala DJ, 2010, IET SOFTW, V4, P334, DOI 10.1049/iet-sen.2009.0079
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Maragathavalli P, 2011, Arxiv, DOI arXiv:1103.0125
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mohi-Aldeen SM, 2016, APPL SOFT COMPUT, V49, P1118, DOI 10.1016/j.asoc.2016.09.044
   Mostaghim S, 2003, PROCEEDINGS OF THE 2003 IEEE SWARM INTELLIGENCE SYMPOSIUM (SIS 03), P26, DOI 10.1109/sis.2003.1202243
   Otto M., 2024, Chemometrics: Statistics and Computer Application in Analytical Chemistry
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Sahin O, 2016, APPL SOFT COMPUT, V49, P1202, DOI 10.1016/j.asoc.2016.09.045
   Sahoo Rashmi Rekha, 2020, Advanced Computing and Intelligent Engineering. Proceedings of ICACIE 2018. Advances in Intelligent Systems and Computing (AISC 1089), P589, DOI 10.1007/978-981-15-1483-8_49
   SOLIS FJ, 1981, MATH OPER RES, V6, P19, DOI 10.1287/moor.6.1.19
   Tian T, 2016, AUTOMAT SOFTW ENG, V23, P469, DOI 10.1007/s10515-014-0173-z
   Tiwari S, 2013, PROCEEDINGS OF THE 2013 10TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P363, DOI 10.1109/ITNG.2013.58
   Tracey N, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/ASE.1998.732680
   WATKINS CJCH, 1992, MACH LEARN, V8, P279, DOI 10.1007/BF00992698
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Yang JJ, 2009, COMPUT MATH APPL, V57, P1995, DOI 10.1016/j.camwa.2008.10.009
   Yao XJ, 2014, COMPUT INTEL NEUROSC, V2014, DOI 10.1155/2014/591294
   Zhang XL, 2019, J SYST ENG ELECTRON, V30, P1132, DOI 10.21629/JSEE.2019.06.09
   Zhao WZ, 2018, ADV ENG SOFTW, V123, P51, DOI 10.1016/j.advengsoft.2018.05.011
NR 48
TC 0
Z9 0
U1 3
U2 3
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 MAY 22
PY 2024
DI 10.1142/S0218194024500189
EA MAY 2024
PG 29
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RR1K2
UT WOS:001229294800001
DA 2024-08-05
ER

PT J
AU Wang, HF
   Yang, K
   Wu, T
AF Wang, Haifeng
   Yang, Kun
   Wu, Tong
TI Optimizing Mutation-Based Fault Localization Through Contribution-Based
   Test Case Reduction
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article; Early Access
DE Software debugging; fault localization; mutation-based fault
   localization; test case reduction
ID STRATEGY
AB Fault localization is an expensive phase of software debugging processes. Although Mutation-based Fault Localization (MBFL) is a promising technique, its computational cost remains high due to the extensive mutation executions involved in mutation analysis. Previous studies have primarily focused on reducing costs by decreasing the mutant numbers and optimizing the execution, yielding promising results. However, test case reduction has also proven to be effective in reducing costs in MBFL. In this paper, we propose an approach called Contribution-Based Test Case Reduction (CBTCR) aimed at enhancing MBFL efficiency. CBTCR assesses the contribution value of each test case and selects them accordingly. The reduced test suite is then used for mutant execution. We evaluate CBTCR on 543 real software faults from Defects4J benchmark. Results show that CBTCR outperforms other MBFL test case reduction strategies (e.g. FTMES, IETCR), in terms of the Top-N and MAP metrics. Moreover, CBTCR achieves an average cost reduction of 87.06%, while maintaining accuracy comparable to those of the original MBFL techniques. This research paper presents an innovative and effective solution for optimizing MBFL, which can significantly reduce the cost and time required for software debugging.
C1 [Wang, Haifeng; Yang, Kun; Wu, Tong] Ctr Adv Metering Infrastruct, Natl Inst Metrol, Beijing 100029, Peoples R China.
C3 National Institute of Metrology China
RP Wu, T (corresponding author), Ctr Adv Metering Infrastruct, Natl Inst Metrol, Beijing 100029, Peoples R China.
EM wut@nim.ac.cn
FU National Quality Infrastructure of China [2023YFF0612801]
FX The work is supported by the National Quality Infrastructure of China
   (Grant no. 2023YFF0612801).
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Arrieta A, 2018, INFORM SOFTWARE TECH, V100, P18, DOI 10.1016/j.infsof.2018.03.008
   Bagherzadeh M, 2022, IEEE T SOFTWARE ENG, V48, P2836, DOI 10.1109/TSE.2021.3070549
   Chaleshtari NB, 2020, EMPIR SOFTW ENG, V25, P4282, DOI 10.1007/s10664-020-09845-4
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Du B, 2022, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE55969.2022.00038
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Just R., 2014, P 2014 INT S SOFTW T, P315, DOI DOI 10.1145/2610384.2610388
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Keller F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P114, DOI 10.1109/QRS.2017.22
   Kim Y, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3345628
   Kochhar P. S., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P165
   Kooli M, 2017, MICROPROCESS MICROSY, V50, P102, DOI 10.1016/j.micpro.2017.02.007
   Le T.-D. B., 2016, P 25 INT S SOFT TEST, P177
   Li X., 2022, 34 INT C SOFTW ENG K, P166
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li Z, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110661
   Liu HY, 2023, SOFTWARE PRACT EXPER, V53, P1061, DOI 10.1002/spe.3178
   Liu Y, 2018, INFORM SCIENCES, V422, P572, DOI 10.1016/j.ins.2017.09.006
   Liu Y, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P126, DOI 10.1109/QRS.2017.23
   de Oliveira AAL, 2018, PROC INT SYMP SOFTW, P155, DOI 10.1109/ISSRE.2018.00026
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Moffat A, 2009, ACM T INFORM SYST, V27, DOI 10.1145/1416950.1416952
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Papadakis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P691, DOI 10.1109/ICST.2012.159
   Papadakis M., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P1293
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Tian Z, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556949
   Wang HF, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2512
   Wang HF, 2022, IEEE T RELIAB, V71, P1157, DOI 10.1109/TR.2022.3162039
   Wang HF, 2022, INT J SOFTW ENG KNOW, V32, P1, DOI 10.1142/S0218194022500012
   Wang HF, 2020, IEEE ACCESS, V8, P124297, DOI 10.1109/ACCESS.2020.3004145
   Widyasari R, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10189-4
   Wilcoxon F., 1992, Breakthroughs in statistics: methodology and distribution, P196, DOI [DOI 10.2307/3001968, 10.1093/jee/39.2.269, DOI 10.1093/JEE/39.2.269, DOI 10.1007/978-1-4612-4380-916]
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Yan Y, 2023, INFORM SOFTWARE TECH, V160, DOI 10.1016/j.infsof.2023.107245
   Yoo S, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078840
   Zeng MH, 2022, PROC INT CONF SOFTW, P958, DOI 10.1145/3510003.3510073
   Zhang Lingming, 2013, P 2013 INT S SOFTWAR, P235, DOI 10.1145/2483760.2483782
   Zhang MS, 2021, IEEE T SOFTWARE ENG, V47, P1089, DOI 10.1109/TSE.2019.2911283
   Zhang Z., 2023, IEEE Trans. Softw. Eng, V49
   Zhao G., 2022, Appl. Intell, V52, P1
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 49
TC 0
Z9 0
U1 0
U2 0
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD 2024 JUL 5
PY 2024
DI 10.1142/S021819402450027X
EA JUL 2024
PG 28
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XN2L0
UT WOS:001262297900001
DA 2024-08-05
ER

PT J
AU Zou, YF
   Wang, HQ
   Lv, HW
   Zhao, S
   Tian, HY
AF Zou, Yifan
   Wang, Huiqiang
   Lv, Hongwu
   Zhao, Shuai
   Tian, Haoye
TI A Cross-Project Defect Prediction Approach Based on Code Semantics and
   Cross-Version Structural Information
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Cross-project defect prediction; deep learning; abstract syntax tree;
   class dependency network
ID FRAMEWORK
AB Context: Cross-project defect prediction (CPDP), due to the potential of adaption by industry in realistic scenarios, had gained significant attention from the research community. Currently, existing CPDP studies use static statistical features designed by experts, which might not capture the semantic and structural aspects of software, resulting in low accuracy in defect prediction. Meanwhile, they tend to overlook the valuable iterative information brought about by version updates in mature software projects.Objective: This paper introduces DETECTOR, a novel CPDP approach based on coDE semanTic and cross-vErsion struCTural infORmation to leverage cross-versions features of the software and improve the performance of CPDP.Methods: DETECTOR parses source code to exploit Abstract Syntax Trees (ASTs) and cross-version software network (Cross-SN) that consists of internal class dependency network and cross-version class dependency edges. It utilizes Attention-based Bi-LSTM and simplified graph convolutional neural networks to automatically extract software features from ASTs and Cross-SN. The extracted features are fused using gate(& sdot;) to generate more effective cross-version features. Finally the source project is selected to carry out the data used to train the classifier to predict the defects.Results: Empirical studies on seven open-source Java projects, the experiment results show that: (1) DETECTOR outperforms the state-of-the-art models in CPDP; (2) our proposed cross-version dependent edges positively contribute to DETECTOR performance; (3) gate(& sdot;) outperforms existing strategies in fusion features; (4) more multi-versions information enhance DETECTOR's performance.Conclusion: DETECTOR can predict more defects in CPDP and improve the accuracy and effectiveness of prediction.
C1 [Zou, Yifan; Wang, Huiqiang; Lv, Hongwu; Zhao, Shuai] Harbin Engn Univ, Coll Comp Sci & Technol, Harbin 150000, Peoples R China.
   [Tian, Haoye] Univ Melbourne, Grattan St, Parkville, Vic 3052, Australia.
C3 Harbin Engineering University; University of Melbourne
RP Zou, YF (corresponding author), Harbin Engn Univ, Coll Comp Sci & Technol, Harbin 150000, Peoples R China.
EM ivan@hrbeu.edu.cn; wanghuiqiang@hrbeu.edu.cn; lvhongwu@hrbeu.edu.cn;
   zhaoshuai@hrbeu.edu.cn; haoye.tian@unimelb.edu.au
OI LV, Hongwu/0000-0002-1917-3978; Wang, Huiqiang/0000-0002-1007-5589;
   TIAN, Haoye/0000-0002-8049-3997; Zou, Yifan/0000-0003-3215-7478
FU National Natural Science Foundation of China [62272126]; Fundamental
   Research Funds for the Central Universities; Special Project for
   Industrial Foundation Reconstruction and High Quality Development of
   Manufacturing Industry by the Ministry of Industry and Information
   Technology [TC220A04X-1]; Natural Science Foundation of Heilongjiang
   [LH2021F001]
FX The research was supported by the National Natural Science Foundation of
   China (no.62272126), the Fundamental Research Funds for the Central
   Universities, Special Project for Industrial Foundation Reconstruction
   and High Quality Development of Manufacturing Industry by the Ministry
   of Industry and Information Technology (no.TC220A04X-1), the Natural
   Science Foundation of Heilongjiang (LH2021F001).
CR Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Bai JJ, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106985
   Batool I, 2022, COMPUT ELECTR ENG, V100, DOI 10.1016/j.compeleceng.2022.107886
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Chen DY, 2019, IEEE ACCESS, V7, P184832, DOI 10.1109/ACCESS.2019.2961129
   Chen X, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2234
   Deng JH, 2020, IET SOFTW, V14, P443, DOI 10.1049/iet-sen.2019.0149
   Esteves G, 2020, AUTOMAT SOFTW ENG, V27, P369, DOI 10.1007/s10515-020-00277-4
   Fang DB, 2022, IEEE T RELIAB, V71, P512, DOI 10.1109/TR.2022.3165115
   Feng S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106662
   Giray G, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111537
   Goel L, 2017, 2017 4TH IEEE UTTAR PRADESH SECTION INTERNATIONAL CONFERENCE ON ELECTRICAL, COMPUTER AND ELECTRONICS (UPCON), P680, DOI 10.1109/UPCON.2017.8251131
   [何鹏 He Peng], 2018, [电子学报, Acta Electronica Sinica], V46, P257
   He P, 2013, MATH PROBL ENG, V2013, DOI 10.1155/2013/869356
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1063, DOI 10.1145/3180155.3182542
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kotti Z, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3572905
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li H, 2019, INT JOINT C NEURAL N
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li ZQ, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1658
   Liu JY, 2023, J SYST SOFTWARE, V204, DOI 10.1016/j.jss.2023.111753
   Liu XY, 2022, 2022 29TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, APSEC, P318, DOI 10.1109/APSEC57359.2022.00044
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nam Jaechang., 2014, SURVEY SOFTWARE DEFE
   Omri S., 2020, P IEEEACM 42 INT C S, P209, DOI [DOI 10.1145/3387940.3391463, 10.1145/3387940.3391463]
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Qu Y, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09965-5
   Qu Y, 2018, IEEE INT CONF AUTOM, P844, DOI 10.1145/3238147.3240469
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Sun Y, 2021, INT J SOFTW ENG KNOW, V31, P889, DOI 10.1142/S0218194021500273
   Sun Y, 2020, IET SOFTW, V14, P825, DOI 10.1049/iet-sen.2019.0389
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tong HA, 2023, J SYST SOFTWARE, V202, DOI 10.1016/j.jss.2023.111721
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Velickovic P, 2017, ARXIV
   Wang H, 2021, IEEE T RELIAB, V70, P711, DOI 10.1109/TR.2020.3047396
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wen WZ, 2022, IEEE ACCESS, V10, P110385, DOI 10.1109/ACCESS.2022.3214536
   Wikipedia Contributors, 2023, WIK CONTR BOEING
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wu F, 2019, PR MACH LEARN RES, V97
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xing Y, 2022, PATTERN RECOGN LETT, V160, P50, DOI 10.1016/j.patrec.2022.04.039
   Xu JZ, 2021, IMPACT ASSESS PROJ A, V39, P429, DOI [10.1109/TR.2020.3040191, 10.1080/14615517.2020.1848242]
   Yu X, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106847
   Zeng C, 2021, PROC INT SYMP SOFTW, P69, DOI 10.1109/ISSRE52982.2021.00020
   Zhang SG, 2023, INT J SOFTW ENG KNOW, V33, P543, DOI 10.1142/S0218194023500079
   Zhang SG, 2023, INT J SOFTW ENG KNOW, V33, P343, DOI 10.1142/S0218194022500784
   Zhang YW, 2020, J SYST SOFTWARE, V166, DOI 10.1016/j.jss.2020.110585
   Zhang YW, 2020, SOFT COMPUT, V24, P1045, DOI 10.1007/s00500-019-03942-3
   Zhao YY, 2022, INFORM SOFTWARE TECH, V149, DOI 10.1016/j.infsof.2022.106939
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zhou CY, 2022, INFORM SOFTWARE TECH, V152, DOI 10.1016/j.infsof.2022.107057
   Zhou YB, 2022, J ELECTRON MATER, V51, P2766, DOI 10.1007/s11664-021-09266-z
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zou QY, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106588
NR 69
TC 0
Z9 0
U1 4
U2 4
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD JUL
PY 2024
VL 34
IS 07
BP 1135
EP 1171
DI 10.1142/S0218194024500165
EA MAY 2024
PG 37
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZY9V8
UT WOS:001231788900001
DA 2024-08-05
ER

PT J
AU Hung-Cuong, N
   Quyet-Thang, H
AF Hung-Cuong, Nguyen
   Quyet-Thang, Huynh
TI An Imperfect Debugging Non-Homogeneous Poisson Process Software
   Reliability Model Based on a 3-Parameter S-Shaped Function
SO INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING
LA English
DT Article
DE Software reliability modeling; non-homogeneous Poisson process; S-shaped
   curve; maximum likelihood estimation; predictability
ID GROWTH
AB Considering the testing process of the software system as a stochastic process is a primary approach to the software reliability modeling technique. Besides some popular distributions, the Poisson distribution has been considered the best based on its advantage when modeling the times at which arrivals enter a system. In the non-homogeneous Poisson process group of models, the S-shaped function is a value curve with many good results. This paper proposes a new imperfect debugging software reliability model based on (1) an Imperfect debugging assumption (the testing process could cause new faults); and (2) the Fault detection rate can be controlled more effectively by the appearance of a growth-rate-controller. The real data from industrial projects verify the application of this model based on good popular criteria values.
C1 [Hung-Cuong, Nguyen] Hung Vuong Univ, Fac Engn Technol, Viet Tri City, Phu Tho Provinc, Vietnam.
   [Quyet-Thang, Huynh] Hanoi Univ Sci & Technol, Sch Informat & Commun Technol, Hanoi City, Vietnam.
C3 Hanoi University of Science & Technology (HUST)
RP Hung-Cuong, N (corresponding author), Hung Vuong Univ, Fac Engn Technol, Viet Tri City, Phu Tho Provinc, Vietnam.
EM cuongnh@hvu.edu.vn; thanghq@soict.hust.edu.vn
OI Nguyen, Hung-Cuong/0000-0001-7292-3611
FU Hung Vuong University [HV02.2023]
FX The authors are grateful to the Editor and referees for their helpful
   suggestions to improve this paper. This research is supported by the
   Hung Vuong University under grant number HV02.2023. We also thank Ngo
   Tuan-Phong for his careful reading of the paper and some propositions
   for improvements.
CR AKAIKE H, 1974, IEEE T AUTOMAT CONTR, VAC19, P716, DOI 10.1109/TAC.1974.1100705
   Anjum Mohd, 2013, International Journal of Information Technology and Computer Science, V5, P1, DOI 10.5815/ijitcs.2013.02.01
   EHRLICH W, 1993, IEEE SOFTWARE, V10, P33, DOI 10.1109/52.199726
   Garg R, 2022, IEEE T RELIAB, V71, P149, DOI 10.1109/TR.2021.3104232
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Hoang P., 2007, SYSTEM SOFTWARE RELI
   Pham H, 2014, OPTIMIZATION, V63, P1481, DOI 10.1080/02331934.2013.854787
   Hung-Cuong N., 2014, INT C NAT COMP COMM, P212
   Hung-Cuong N., 2014, International Journal of Applied Information Systems, V7, P1, DOI DOI 10.5120/IJAIS14-451257
   JACOBY R, 1990, PROCEEDINGS : THE FOURTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P13, DOI 10.1109/CMPSAC.1990.139307
   Kantam R. R. L., 2009, INT J PERFORM ENG, V5, P275, DOI DOI 10.23940/IJPE.09.3.P275.MAG
   Kaswan K. S., 2022, SCI PROGRAMMING-NETH, V2022, P1
   Li SQ, 2022, J SYST SOFTWARE, V191, DOI 10.1016/j.jss.2022.111367
   LITTLEWOOD B, 1981, IEEE T RELIAB, V30, P313, DOI 10.1109/TR.1981.5221099
   Liu XM, 2022, J SYST ENG ELECTRON, V33, P360, DOI 10.23919/JSEE.2022.000038
   Nguyen HC, 2022, IET SOFTW, V16, P214, DOI 10.1049/sfw2.12055
   OHBA M, 1984, LECT NOTES ECON MATH, V235, P144
   Pham H, 1999, IEEE T RELIAB, V48, P169
   Pham H., 1997, INT J RELIAB QUAL SA, V4, P269, DOI DOI 10.1142/S0218539397000199
   Pham H., 2014, Vietnam Journal of Computer Science, V1, P39, DOI DOI 10.1007/S40595-013-0003-4
   Pham H, 2007, INT J AUTOM COMPUT, V4, P325, DOI 10.1007/s11633-007-0325-8
   Pradhan V, 2022, J INF SCI ENG, V38, P343, DOI 10.6688/JISE.202203_38(2).0004
   Sagar BB, 2016, AIN SHAMS ENG J, V7, P973, DOI 10.1016/j.asej.2015.05.009
   SCHWARZ G, 1978, ANN STAT, V6, P461, DOI 10.1214/aos/1176344136
   Song KY, 2017, APPL SCI-BASEL, V7, DOI 10.3390/app7100983
   Tian Q, 2022, MATHEMATICS-BASEL, V10, DOI 10.3390/math10101744
   Tian Q, 2022, MATHEMATICS-BASEL, V10, DOI 10.3390/math10101689
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   YAMADA S, 1992, INT J SYST SCI, V23, P2241, DOI 10.1080/00207729208949452
NR 29
TC 0
Z9 0
U1 0
U2 0
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-1940
EI 1793-6403
J9 INT J SOFTW ENG KNOW
JI Int. J. Softw. Eng. Knowl. Eng.
PD JUN
PY 2024
VL 34
IS 06
BP 869
EP 889
DI 10.1142/S0218194024500062
EA APR 2024
PG 21
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6U6
UT WOS:001193898300001
DA 2024-08-05
ER

EF