FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU May, R
   Baron, N
   Krüger, J
   Leich, T
AF May, Richard
   Baron, Niklas
   Krueger, Jacob
   Leich, Thomas
TI Pandemic startup software engineering: An experience report on the
   development of a COVID-19 certificate verification system
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE COVID-19; Pandemic; Startup; Verification system; Empirical study
ID COMPANIES; SURVIVAL; SUCCESS
AB The COVID-19 virus has caused a global pandemic that has heavily impacted daily life. Rapid advances in testing and vaccinating led to an additional use case besides the well-known contact-tracing apps: certificateverification systems. Verification systems are often commissioned by local authorities to enable more public life, and are often developed by smaller organizations or startups. So, the development of verification systems differs from other software projects, featuring interesting and unique properties. In this article, we present an experience report on the development of one verification system by a German startup, focusing on three properties: working in a pandemic, developing a product for handling a pandemic, and the startup context. To this end, we surveyed nine startup developers and analyzed the results with two experts from the startup. We found that the developers focused on fast delivery to cope with the time pressure of releasing the verification system, which is why some phases of typical development processes were hardly carried out. As a result, while the verification system is successful, we also identified negative effects of the properties (e.g., programming mistakes, well-being). We discuss our findings to guide researchers and practitioners in preparing for software engineering in future emergencies. Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board.
C1 [May, Richard; Baron, Niklas; Leich, Thomas] Harz Univ Appl Sci, Wernigerode, Germany.
   [Krueger, Jacob] Eindhoven Univ Technol, Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP Krüger, J (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM rmay@hs-harz.de; nbaron@hs-harz.de; j.kruger@tue.nl; tleich@hs-harz.de
OI May, Richard/0000-0001-7186-404X
CR Abuhammad S, 2020, PATIENT PREFER ADHER, V14, P1639, DOI 10.2147/PPA.S276183
   Ahmed N, 2020, IEEE ACCESS, V8, P134577, DOI 10.1109/ACCESS.2020.3010226
   Almeida P, 2003, RES POLICY, V32, P301, DOI 10.1016/S0048-7333(02)00101-4
   Alshamrani A., 2015, International Journal of Computer Science Issues (IJCSI), V12, P106
   Alves C, 2020, INT REQUIR ENG CONF, P311, DOI 10.1109/RE48521.2020.00041
   Bano M, 2021, IEEE SOFTWARE, V38, P7, DOI 10.1109/MS.2020.3029311
   Biddle N, 2022, DATA POLICY, V4, DOI 10.1017/dap.2021.36
   Chipendo T, 2022, PAN AFR MED J, V42, DOI 10.11604/pamj.2022.42.204.34040
   Ciotti M, 2020, CRIT REV CL LAB SCI, V57, P365, DOI 10.1080/10408363.2020.1783198
   Neto PADS, 2022, IEEE T SOFTWARE ENG, V48, P3342, DOI 10.1109/TSE.2021.3088759
   Eisenstadt M, 2020, IEEE OPEN J ENG MED, V1, P148, DOI 10.1109/OJEMB.2020.2999214
   Enaya MF, 2024, J SYST SOFTWARE, V213, DOI 10.1016/j.jss.2024.112020
   Erikson S, 2021, GLOB POLICY, V12, P97, DOI 10.1111/1758-5899.12888
   Garousi V, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111136
   Garousi V, 2021, BMJ HEALTH CARE INFO, V28, DOI 10.1136/bmjhci-2021-100320
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Glasow P.A., 2005, Technical Report MP 05W0000077
   Grilli L, 2011, INT SMALL BUS J, V29, P626, DOI 10.1177/0266242610372845
   Groenewegen G, 2012, J APPL ECON BUS RES, V2, P155
   Groves R. M., 2011, SURVEY METHODOLOGY
   Gupta R, 2021, J LOCAT BASED SERV, V15, P198, DOI 10.1080/17489725.2021.1899319
   Hazzan O., 2008, Agile Software Engineering
   Kajko-Mattsson Mira, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P617, DOI 10.1109/CSSE.2008.1370
   Karamitsos I., 2021, Modern Management Based on Big Data II and Machine Learning and Intelligent Systems III, P133
   Karopoulos G, 2021, IEEE ACCESS, V9, P138003, DOI 10.1109/ACCESS.2021.3117781
   Klotins E, 2019, EMPIR SOFTW ENG, V24, P68, DOI 10.1007/s10664-018-9620-y
   Krüger J, 2020, PROC IEEE INT CONF S, P46, DOI 10.1109/ICSME46990.2020.00015
   Lasch F, 2007, MANAGE DECIS, V45, P62, DOI 10.1108/00251740710718962
   Liang F, 2020, SOC MEDIA SOC, V6, DOI 10.1177/2056305120947657
   Manabe YC, 2020, JAMA-J AM MED ASSOC, V324, P2153, DOI 10.1001/jama.2020.21694
   Mathers N., 1998, SURVEYS QUESTIONNAIR
   Morley J, 2020, NATURE, V582, P29, DOI 10.1038/d41586-020-01578-0
   Muñoz-Bullon F, 2015, ENTREP REGION DEV, V27, P80, DOI 10.1080/08985626.2014.999719
   Munzert S, 2021, NAT HUM BEHAV, V5, P247, DOI 10.1038/s41562-020-01044-x
   Papadaki M., 2021, J. Enterp. Inf. Manag.
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Philipp Albrecht Jan, 2016, European Data Protection Law Review, V2, P287
   Piguillem F., 2020, Optimal COVID-19 Quarantine and Testing Policies
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Reelfs J.H., 2020, Ratio, DOI DOI 10.1145/3405837.3411378
   Rowe F, 2020, INT J INFORM MANAGE, V55, DOI 10.1016/j.ijinfomgt.2020.102178
   Russo D, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P364, DOI 10.1109/ICSE-SEIP52600.2021.00048
   Russo D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09945-9
   Salamzadeh A., 2015, INT C EMPL ED ENTR, P1
   Seto E, 2021, J MED INTERNET RES, V23, DOI 10.2196/25726
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Sun RX, 2021, PROC INT CONF SOFTW, P1085, DOI 10.1109/ICSE43902.2021.00101
   Sutcliffe A, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P39, DOI 10.1109/ICSE-SEIS52602.2021.00013
   Van Selm M, 2006, QUAL QUANT, V40, P435, DOI 10.1007/s11135-005-8081-8
   Velavan TP, 2020, TROP MED INT HEALTH, V25, P278, DOI 10.1111/tmi.13383
   Vergallo GM, 2021, MEDICINA-LITHUANIA, V57, DOI 10.3390/medicina57101077
   Wahsheh HAM, 2021, INT CONF INFORM COMM, P324, DOI 10.1109/ICICS52457.2021.9464565
   Wang TT, 2021, AGE AGEING, V50, P55, DOI 10.1093/ageing/afaa222
   Ward JK, 2022, NAT MED, V28, P232, DOI 10.1038/s41591-021-01661-7
   Wen HH, 2020, L N INST COMP SCI SO, V335, P297, DOI 10.1007/978-3-030-63086-7_17
   White L, 2021, J MED ETHICS, V47, DOI 10.1136/medethics-2020-107061
   Wymant C, 2021, NATURE, V594, P408, DOI 10.1038/s41586-021-03606-z
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
NR 58
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112106
DI 10.1016/j.jss.2024.112106
EA JUN 2024
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8S1
UT WOS:001251721600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Basu, S
   Das, A
   Saha, A
   Chakrabarti, A
   Sur-Kolay, S
AF Basu, Saikat
   Das, Arnav
   Saha, Amit
   Chakrabarti, Amlan
   Sur-Kolay, Susmita
TI FragQC : An efficient quantum error reduction technique using quantum
   circuit fragmentation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Quantum circuit fragmentation; Hybrid quantum systems; Quantum error;
   Graph partitioning; Genetic algorithm; Circuit cutting; Quantum
   annealing
ID SCHEME; COMPUTATION
AB Quantum computers must meet extremely stringent qualitative and quantitative requirements on their qubits in order to solve real -life problems. Quantum circuit fragmentation techniques divide a large quantum circuit into a number of sub -circuits that can be executed on the smaller noisy quantum hardware available. However, the process of quantum circuit fragmentation involves finding an ideal cut that has exponential time complexity and also the classical post -processing required to reconstruct the output. In this paper, we represent a quantum circuit using a weighted graph and propose a novel classical graph partitioning algorithm for selecting an efficient fragmentation that reduces the entanglement between the sub -circuits along with balancing the estimated error in each sub -circuit. We also demonstrate a comparative study of different classical and quantum approaches to graph partitioning for finding such a cut. We present FragQC , a software tool that cuts a quantum circuit into sub -circuits when its error probability exceeds a certain threshold. With this proposed approach, we achieve an increase in fidelity of 13.38% compared to direct execution without cutting the circuit, and 7.88% over the state-of-the-art ILP-based method for the benchmark circuits. The code for FragQC is available at https://github.com/arnavdas88/FragQC.
C1 [Basu, Saikat; Das, Arnav; Saha, Amit; Chakrabarti, Amlan] Univ Calcutta, AK Choudhury Sch Informat Technol, Kolkata, India.
   [Basu, Saikat] LTIMindtree Ltd, Kolkata, India.
   [Das, Arnav] St Xaviers Univ, Dept Comp Sci, Kolkata, India.
   [Saha, Amit] Inst Natl Rech Informat & Automat INRIA, Paris, France.
   [Saha, Amit] PSL Univ, Ecole Normale Super ENS, Paris, France.
   [Sur-Kolay, Susmita] Indian Stat Inst, Adv Comp & Microelect Unit, Kolkata, India.
C3 University of Calcutta; Universite PSL; Ecole Normale Superieure (ENS);
   Indian Statistical Institute; Indian Statistical Institute Kolkata
RP Basu, S (corresponding author), LTIMindtree Ltd, Kolkata, India.
EM saikat.basu@ltimindtree.com; arnav.das88@gmail.com; amit.saha@inria.fr
RI Chakrabarti, Amlan/U-7020-2019; SAHA, AMIT/KYQ-1439-2024
OI Chakrabarti, Amlan/0000-0003-4380-3172; Das, Arnav/0000-0003-3751-3056;
   Saha, Amit/0000-0003-2583-9825
CR Ayral T, 2021, Arxiv, DOI arXiv:2102.03788
   Ayral T, 2020, IEEE COMP SOC ANN, P138, DOI 10.1109/ISVLSI49217.2020.00034
   Baek C, 2020, QUANTUM SCI TECHNOL, V5, DOI 10.1088/2058-9565/ab5887
   Basu S, 2022, ACM T QUANTUM COMPUT, V3, DOI 10.1145/3539613
   Bhoumik D, 2023, Arxiv, DOI arXiv:2309.06005
   Born M, 1928, Z PHYS, V51, P165, DOI 10.1007/BF01343193
   Bravyi S, 2016, PHYS REV X, V6, DOI 10.1103/PhysRevX.6.021043
   Bruzewicz CD, 2019, APPL PHYS REV, V6, DOI 10.1063/1.5088164
   Bui TN, 1996, IEEE T COMPUT, V45, P841, DOI 10.1109/12.508322
   Cacciapuoti AS, 2020, IEEE NETWORK, V34, P137, DOI 10.1109/MNET.001.1900092
   Cai ZY, 2023, REV MOD PHYS, V95, DOI 10.1103/RevModPhys.95.045005
   Caleffi M, 2022, Arxiv, DOI arXiv:2212.10609
   Campbell ET, 2017, NATURE, V549, P172, DOI 10.1038/nature23460
   Chatterjee T., 2022, SN Computer Science, V3, DOI 10.1007/s42979-022-01207-9
   Deb K., 2016, Decision Sciences, P161, DOI DOI 10.1201/9781315183176-12/MULTI-OBJECTIVE-OPTIMIZATION-KALYANMOY-DEB-KARTHIK-SINDHYA-JUSSI-HAKANEN
   Farhi E., 2000, arXiv, DOI DOI 10.48550/ARXIV.QUANT-PH/0001106
   Ferrari Davide, 2021, IEEE Transactions on Quantum Engineering, V2, DOI 10.1109/TQE.2021.3053921
   Fiduccia C.M., 1982, Design Automation, P175, DOI [10.1145/800263.809204, DOI 10.1145/800263.809204, DOI 10.1109/DAC.1982.1585498]
   Fowler AG, 2012, PHYS REV A, V86, DOI 10.1103/PhysRevA.86.032324
   Gokhale P, 2019, PROCEEDINGS OF THE 2019 46TH INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA '19), P554, DOI 10.1145/3307650.3322253
   Gottesman D, 1999, LECT NOTES COMPUT SC, V1509, P302
   Graham TM, 2022, NATURE, V604, P457, DOI 10.1038/s41586-022-04603-6
   Grassl M, 1999, LECT NOTES COMPUT SC, V1719, P231
   Illiano J, 2022, COMPUT NETW, V213, DOI 10.1016/j.comnet.2022.109092
   Karypis G, 1998, SIAM J SCI COMPUT, V20, P359, DOI 10.1137/S1064827595287997
   Karypis G, 1998, J PARALLEL DISTR COM, V48, P96, DOI 10.1006/jpdc.1997.1404
   Karypis G., 1999, Proceedings 1999 Design Automation Conference (Cat. No. 99CH36361), P343, DOI 10.1109/DAC.1999.781339
   Karypis G, 1997, DES AUT CON, P526, DOI 10.1145/266021.266273
   Kernighan B. W., 1970, Bell System Technical Journal, V49, P291
   Kim C, 2020, IEEE ACCESS, V8, P188853, DOI 10.1109/ACCESS.2020.3031607
   Koch J, 2007, PHYS REV A, V76, DOI 10.1103/PhysRevA.76.042319
   Laflamme R, 1996, PHYS REV LETT, V77, P198, DOI 10.1103/PhysRevLett.77.198
   Leuenberger MN, 2001, NATURE, V410, P789, DOI 10.1038/35071024
   Li A, 2022, Arxiv, DOI arXiv:2005.13018
   Loss D, 1998, PHYS REV A, V57, P120, DOI 10.1103/PhysRevA.57.120
   Lucas A, 2014, FRONT PHYS-LAUSANNE, V2, DOI 10.3389/fphy.2014.00005
   Majumdar R, 2021, Arxiv, DOI arXiv:2106.02812
   Majumdar R, 2016, Arxiv, DOI arXiv:1612.08044
   Nautrup HP, 2019, QUANTUM-AUSTRIA, V3, DOI 10.22331/q-2019-12-16-215
   Nielsen M. A., 2011, Quantum Computation and Quantum Information
   Nielsen M.A., 2010, Quantum Computation and Quantum Information: 10th Anniversary Edition, DOI DOI 10.1017/CBO9780511976667
   Peng TY, 2020, PHYS REV LETT, V125, DOI 10.1103/PhysRevLett.125.150504
   Perlin MA, 2021, Arxiv, DOI arXiv:2005.12702
   Perlin MA, 2021, NPJ QUANTUM INFORM, V7, DOI 10.1038/s41534-021-00390-6
   Preskill J, 2018, QUANTUM-AUSTRIA, V2, DOI 10.22331/q-2018-08-06-79
   Quetschlich N, 2023, QUANTUM-AUSTRIA, V7
   Saha A, 2022, PHYS REV A, V105, DOI 10.1103/PhysRevA.105.062453
   Shor, 1995, Phys Rev A, V52, pR2493, DOI 10.1103/PhysRevA.52.R2493
   Steane AM, 1996, PHYS REV LETT, V77, P793, DOI 10.1103/PhysRevLett.77.793
   Tang W., 2022, arXiv
   Tang W, 2021, ASPLOS XXVI: TWENTY-SIXTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P473, DOI 10.1145/3445814.3446758
   Terhal BM, 2015, REV MOD PHYS, V87, P307, DOI 10.1103/RevModPhys.87.307
   Ushijima-Mwesigwa H., 2017, arXiv
   Wootton JR, 2020, QUANTUM SCI TECHNOL, V5, DOI 10.1088/2058-9565/aba038
NR 54
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112085
DI 10.1016/j.jss.2024.112085
EA MAY 2024
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SZ5Z8
UT WOS:001238298200001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Das, S
   Deb, N
   Cortesi, A
   Chaki, N
AF Das, Souvick
   Deb, Novarun
   Cortesi, Agostino
   Chaki, Nabendu
TI Extracting goal models from natural language requirement specifications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Natural language requirements; Natural language processing; Transformer
   model; Entity type recognition; Contextual vector; Synonymy vector
ID USER STORIES; UML MODELS; TOOL
AB Unstructured (or, semi-structured) natural language is mostly used to capture the requirement specifications both for legacy software systems and for modern day software systems. The adoption of a formal approach to the specification of the requirements, using goal models, enables rigorous and formal inspections while analyzing the requirements for satisfiability, consistency, completeness, conflicts and ambiguities. However, such a formal approach is often considered burdening for the analysts' activity as it requires additional skills, and is therefore, discarded a priori. This works aims to bridge the gap between natural language requirement specifications and efficient goal model analysis techniques. We propose a framework that uses extensive natural language processing techniques to transform a set of unstructured natural language requirement specifications to the corresponding goal model. We combine techniques such as parts-of-speech tagging, dependency parsing, contextual and synonymy vector generation with the FiBER transformer model. An extensive unbiased crowdsourced evaluation of the proposed framework has been performed, showing an acceptability rate (total and partial combined) of 95%. Time and space analyses of our framework also demonstrate the scalability of the proposed solution.
C1 [Chaki, Nabendu] Univ Calcutta, JD 2 Sect 3, Kolkata 700106, West Bengal, India.
   [Deb, Novarun] Indian Inst Informat Technol Vadodara, Block 9,Sect 28, Gandhinagar 382028, Gujarat, India.
   [Das, Souvick; Cortesi, Agostino] Ca Foscari Univ, 155 Via Torino, I-30170 Venice, Italy.
C3 University of Calcutta; Universita Ca Foscari Venezia
RP Das, S (corresponding author), Ca Foscari Univ, 155 Via Torino, I-30170 Venice, Italy.
EM souvick.das@unive.it; novarun_deb@iiitvadodara.ac.in; cortesi@unive.it;
   nabendu@ieee.org
RI Cortesi, Agostino/F-9637-2011; Chaki, Nabendu/A-5869-2015
OI Cortesi, Agostino/0000-0002-0946-5440; Chaki,
   Nabendu/0000-0003-3242-680X
FU SERICS - PNRR NextGeneration EU [PE00000014]; A iNEST - PNRR
   NextGeneration EU [ECS 00000043]
FX Work partially supported by SERICS (PE00000014) and iNEST (ECS 00000043)
   projects funded by PNRR NextGeneration EU.
CR Abdelzad V, 2015, ISTAR, P61
   Abdelzad V, 2015, LECT NOTES COMPUT SC, V9369, P159, DOI 10.1007/978-3-319-24912-4_12
   Agarwal O., 2019, P 2 WORKSHOP COMPUTA, P1, DOI [10.18653/v1/W19-2801, DOI 10.18653/V1/W19-2801]
   [Anonymous], 2009, Requirements Engineering: From System Goals to UML Models to Software
   Arora C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P250, DOI 10.1145/2976767.2976769
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Basar A., 2021, Software requirement-specific entity extraction using transformer models.
   Bhatia J., 2016, Mining Privacy Goals from Privacy Policies using Hybridized Task Recomposition., V25, P1
   Bragilovski M, 2022, LECT NOTES COMPUT SC, V13216, P131, DOI 10.1007/978-3-030-98464-9_11
   Bruch S, 2019, PROCEEDINGS OF THE 2019 ACM SIGIR INTERNATIONAL CONFERENCE ON THEORY OF INFORMATION RETRIEVAL (ICTIR'19), P75, DOI 10.1145/3341981.3344221
   Casagrande E, 2014, IEEE T SOFTWARE ENG, V40, P941, DOI 10.1109/TSE.2014.2339811
   Cheikhi L, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P17, DOI 10.1109/IWSM-Mensura.2013.13
   Chen D., 2014, P 2014 C EMP METH NA, P740, DOI DOI 10.3115/V1/D14-1082
   Chong E.K., 2013, An Introduction to Optimization., V75
   Cleland-Huang J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P39
   Cowie J, 1996, COMMUN ACM, V39, P80, DOI 10.1145/234173.234209
   Dalpiaz F, 2019, INFORM SOFTWARE TECH, V110, P3, DOI 10.1016/j.infsof.2018.12.007
   Darimont R., 1996, Software Engineering Notes, V21, P179, DOI 10.1145/250707.239131
   Das Souvick, 2021, SN Computer Science, V2, P1
   Deeptimahanti D. K., 2011, P 4 INDIA SOFTWARE E, P165, DOI 10.1145/1953355.1953378
   Deeptimahanti DK, 2009, IEEE INT CONF AUTOM, P680, DOI 10.1109/ASE.2009.48
   Deshpande G, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P136, DOI 10.1109/REW53955.2021.00025
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Canedo ED, 2020, ENTROPY-SWITZ, V22, DOI 10.3390/e22091057
   Dozat Timothy, 2017, Proceedings of the CoNLL 2017 Shared Task: Multilingual Parsing from Raw Text to Universal Dependencies, P20, DOI DOI 10.18653/V1/K17-3002
   Duran MB, 2015, IEEE INT WORKSH MODE, P53
   Ferrari A, 2017, INT REQUIR ENG CONF, P502, DOI 10.1109/RE.2017.29
   Giorgini P, 2005, ENG APPL ARTIF INTEL, V18, P159, DOI 10.1016/j.engappai.2004.11.017
   Günes T, 2020, INT REQUIR ENG CONF, P382, DOI 10.1109/RE48521.2020.00052
   Herwanto GB, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P406, DOI 10.1109/REW53955.2021.00072
   Hey T, 2020, INT REQUIR ENG CONF, P169, DOI 10.1109/RE48521.2020.00028
   Hocker F., 2009, Requirements Engineering und Management., V46, P94
   Hull E., 2002, Requirements Engineering, P187
   Ibrahim Mohd., 2010, 2 INT C COMP RES DEV, P200, DOI DOI 10.1109/ICCRD.2010.71
   Jackson Micheal., 1995, SOFTWARE REQUIREMENT
   Karaa WB, 2016, SOFTWARE PRACT EXPER, V46, P1443, DOI 10.1002/spe.2384
   Kochbati T, 2021, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P28, DOI 10.5220/0010197800280040
   Kof L, 2005, LECT NOTES COMPUT SC, V3513, P91
   Kumar DD, 2008, PROCEEDINGS OF THE 2008 ADVANCED SOFTWARE ENGINEERING & ITS APPLICATIONS, P77, DOI 10.1109/ASEA.2008.25
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P490, DOI 10.1109/RE.2017.82
   Landhäusser M, 2014, SOFTWARE QUAL J, V22, P121, DOI 10.1007/s11219-013-9210-6
   Letsholo KJ, 2013, IEEE INT CONF AUTOM, P738, DOI 10.1109/ASE.2013.6693146
   Lewis M., 2019, arXiv
   Li G, 2022, IEEE ACCESS, V10, P30080, DOI 10.1109/ACCESS.2022.3159238
   Liaskos S., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P135, DOI 10.1109/RE.2010.26
   Liaskos S, 2012, INFORM SYST, V37, P767, DOI 10.1016/j.is.2012.05.006
   Lima M, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P427, DOI 10.1145/3350768.3350776
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Loshchilov I, 2019, Arxiv, DOI [arXiv:1711.05101, 10.48550/arXiv.1711.05101, DOI 10.48550/ARXIV.1711.05101]
   Lucassen G, 2016, REQUIR ENG, V21, P383, DOI 10.1007/s00766-016-0250-x
   Mikolov T., 2013, Advances in Neural Information Processing Systems, P3111
   More P., 2012, International Journal of Applied Information Systems, V1, P19, DOI 10.5120/ijais12-450222
   Mussbacher Gunter., 2007, 2 INT WORKSHOP REQUI
   Navarro-Almanza R, 2017, 2017 5TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2017), P116, DOI 10.1109/CONISOFT.2017.00021
   Ouyang L., 2022, arXiv
   Patwardhan M, 2018, IEEE INT CONF AUTOM, P850, DOI 10.1145/3238147.3240727
   Popescu Daniel, 2007, Innovations for Requirements Analysis. From Stakeholders' Needs to Formal Designs.14th Monterey Workshop 2007. Revised Selected Papers, P103
   Raffel C, 2020, J MACH LEARN RES, V21
   Robeer M, 2016, INT REQUIR ENG CONF, P196, DOI 10.1109/RE.2016.40
   Sagar VBRV, 2014, J SYST SOFTWARE, V88, P25, DOI 10.1016/j.jss.2013.08.036
   Sanh V, 2020, Arxiv, DOI [arXiv:1910.01108, 10.48550/arXiv.1910.01108]
   Santorini Beatrice, 1990, Part-of-speech tagging guidelines for the Penn treebank project
   Shimada H, 2018, COMM COM INF SC, V809, P175, DOI 10.1007/978-981-10-7796-8_14
   Spijkman T, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106535
   Straka Milan, 2017, P CONLL 2017 SHARED, P88, DOI DOI 10.18653/V1/K17-3009
   Tabassum J, 2020, Arxiv, DOI arXiv:2005.01634
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Weber-Jahnke JH, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING IN HEALTH CARE, P42, DOI 10.1109/SEHC.2009.5069605
   Ye DH, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P90, DOI 10.1109/SANER.2016.10
   Yu E., 2002, Agent-Oriented Software Engineering II. Second International Workshop, AOSE 2001. Revised Papers and Invited Contributions (Lecture Notes in Computer Science Vol.2222), P206
   Yu Eric., 2011, SOCIAL MODELING REQU, V11, P2011, DOI DOI 10.7551/MITPRESS/7549.003.0005
   Yu YJ, 2008, LECT NOTES ARTIF INT, V4994, P1
   Zeman Daniel, 2018, Proceedings of the CoNLL 2018 Shared Task: Multilingual parsing from raw text to universal dependencies, P1
   Zhou N., 2004, Automatic acquisition of linguistic patterns for conceptual modeling.
   Zhou QX, 2022, PROCEEDINGS OF THE 25TH INTERNATIONAL ACM/IEEE CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022, P199, DOI 10.1145/3550355.3552415
NR 75
TC 2
Z9 2
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111981
DI 10.1016/j.jss.2024.111981
EA JAN 2024
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JY0E3
UT WOS:001176594500001
OA hybrid, Green Published
DA 2024-08-05
ER

PT J
AU Qin, FY
   Zheng, Z
   Sui, YL
   Gong, SQ
   Shi, ZP
   Trivedi, KS
AF Qin, Fangyun
   Zheng, Zheng
   Sui, Yulei
   Gong, Siqian
   Shi, Zhiping
   Trivedi, Kishor S.
TI Cross-project concurrency bug prediction using domain-adversarial neural
   network ☆
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software bug prediction; Cross-project bug prediction; Concurrency bug;
   Domain adaptation
ID DEFECT PREDICTION; SOFTWARE; MODEL
AB In recent years, software bug prediction has shown to be effective in narrowing down the potential bug modules and boosting the efficiency and precision of existing testing and analysis tools. However, due to its non-deterministic nature and low presence, concurrency bug labeling is a challenging task, which limits the implementation of within -project concurrency bug prediction. This paper proposes DACon, a DomainAdversarial neural network-based cross -project Con currency bug prediction approach to tackle this problem by leveraging information from another related project. By combining a set of designed concurrency code metrics with widely used sequential code metrics, DACon uses SMOTE (Synthetic Minority Over -sampling TEchnique) and domain-adversarial neural network to mitigate two challenges including the severe class imbalance between concurrency bug-prone samples and concurrency bug-free samples, and shift between source and target distribution during bug prediction implementation. Our evaluation on 20 pair-wise groups of experiments constructed from 5 real -world projects indicates that cross -project concurrency bug prediction is feasible, and DACon can effectively predict concurrency bugs across different projects.
C1 [Qin, Fangyun; Shi, Zhiping] Capital Normal Univ, Coll Informat Engn, Beijing 100048, Peoples R China.
   [Qin, Fangyun; Gong, Siqian] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Zheng, Zheng] Beihang Univ, Sch Automat Sci & Elect Engn, Beijing 100191, Peoples R China.
   [Sui, Yulei] Univ New South Wales, Sch Comp Sci & Engn, Sydney, Australia.
   [Gong, Siqian] Beijing Jiaotong Univ, Sch Mech Elect & Control Engn, Beijing 100044, Peoples R China.
   [Trivedi, Kishor S.] Duke Univ, Dept Elect & Comp Engn, Durham, NC 27708 USA.
C3 Capital Normal University; Nanjing University; Beihang University;
   University of New South Wales Sydney; Beijing Jiaotong University; Duke
   University
RP Shi, ZP (corresponding author), Capital Normal Univ, Coll Informat Engn, Beijing 100048, Peoples R China.
EM fyqin@cnu.edu.cn; zhengz@buaa.edu.cn; y.sui@unsw.edu.au;
   gongsq@bjtu.edu.cn; shizp@cnu.edu.cn; ktrivedi@duke.edu
FU National Natural Science Foun-dation of China [62372021, 61772055,
   61876111, 61872169, 62103034]; R&D Program of Beijing Municipal
   Education Commission [KZ20231002822]
FX This work was supported by the National Natural Science Foun-dation of
   China (grant numbers 62372021, 61772055, 61876111, 61872169 and
   62103034) , and R&D Program of Beijing Municipal Education Commission
   (grant number KZ20231002822) .
CR Akiba T, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2623, DOI 10.1145/3292500.3330701
   [Anonymous], Java platform�, standard 6 API specification
   Asadollah SA, 2017, J INTERNET SERV APPL, V8, DOI 10.1186/s13174-017-0055-2
   Asadollah SA, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON COMPLEX FAULTS AND FAILURES IN LARGE SOFTWARE SYSTEMS (COUFLESS), P41, DOI 10.1109/COUFLESS.2015.14
   Bergstra J., 2011, Advances in Neural Information Processing Systems, P2546
   Bradbury J.S., 2006, Tech. rep.
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Buda M, 2018, NEURAL NETWORKS, V106, P249, DOI 10.1016/j.neunet.2018.07.011
   Carrozza G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P262, DOI 10.1109/ICST.2013.21
   Chakraborty T, 2021, IEEE T RELIAB, V70, P481, DOI 10.1109/TR.2020.3020238
   Chanudaud S, 2000, POSITIF, P97, DOI 10.1109/ICDSN.2000.857521
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen HW, 2021, IEEE T SOFTWARE ENG, V47, P2803, DOI 10.1109/TSE.2020.2968520
   Ciancarini P, 2017, IEEE IJCNN, P721, DOI 10.1109/IJCNN.2017.7965923
   Ciancarini P, 2016, ADV INTELL SYST, V422, P287, DOI 10.1007/978-3-319-27896-4_24
   Cotroneo D, 2016, J SYST SOFTWARE, V113, P27, DOI 10.1016/j.jss.2015.11.021
   Cotroneo D, 2013, PROC INT SYMP SOFTW, P178, DOI 10.1109/ISSRE.2013.6698917
   Cotroneo D, 2013, PERFORM EVALUATION, V70, P163, DOI 10.1016/j.peva.2012.09.004
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Fonseca P, 2010, I C DEPEND SYS NETWO, P221, DOI 10.1109/DSN.2010.5544315
   Ganin Y, 2016, J MACH LEARN RES, V17
   Gesi J., 2021, P 15 ACM IEEE INT S, P1
   Goetz B., 2006, Java Concurrency in Practice
   Gong LN, 2020, IEEE T RELIAB, V69, P40, DOI 10.1109/TR.2019.2895462
   Habib A, 2018, IEEE INT CONF AUTOM, P41, DOI 10.1145/3238147.3238212
   Hall M., 2009, SIGKDD Explor. Newsl, V11, P10, DOI [10.1145/1656274.1656278, DOI 10.1145/1656274.1656278]
   Herbold S, 2021, IEEE T SOFTWARE ENG, V47, P2617, DOI 10.1109/TSE.2019.2957794
   Hosmer DW, 2013, WILEY SER PROBAB ST, P89
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Keshavarz H, 2024, J SYST SOFTWARE, V210, DOI 10.1016/j.jss.2024.111984
   Lea D., 2000, Concurrent Programming in Java
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Liu P, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P318, DOI 10.1145/2635868.2635881
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mockus A, 2009, INT SYMP EMP SOFTWAR, P292
   Mohamed S.H., 2019, arXiv
   Musuvathi M, 2007, ACM SIGPLAN NOTICES, V42, P446, DOI 10.1145/1273442.1250785
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nam Jaechang., 2014, SURVEY SOFTWARE DEFE
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Polato I., 2015, PeerJ PrePr., V3
   Qin FY, 2019, IEEE T RELIAB, V68, P1134, DOI 10.1109/TR.2018.2864960
   Qin FY, 2017, IEEE PAC RIM INT SYM, P135, DOI 10.1109/PRDC.2017.27
   Qin FY, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P43, DOI 10.1109/QRS.2015.17
   Qiu SJ, 2019, IET SOFTW, V13, P393, DOI 10.1049/iet-sen.2018.5131
   Qu Y, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09965-5
   Qu Y, 2021, IEEE T SOFTWARE ENG, V47, P348, DOI 10.1109/TSE.2019.2892959
   Rajapaksha D, 2022, IEEE T SOFTWARE ENG, V48, P2814, DOI 10.1109/TSE.2021.3070559
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   TAYLOR RN, 1992, IEEE T SOFTWARE ENG, V18, P206, DOI 10.1109/32.126769
   TehraniJamsaz A, 2021, IEEE ICST WORKSHOP, P226, DOI 10.1109/ICSTW52544.2021.00046
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Wu F, 2018, IEEE T RELIAB, V67, P581, DOI 10.1109/TR.2018.2804922
   Xu Z, 2019, J COMPUT SCI TECH-CH, V34, P1039, DOI 10.1007/s11390-019-1959-z
   Yang YM, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3503509
   Yu TT, 2019, IEEE T SOFTWARE ENG, V45, P558, DOI 10.1109/TSE.2018.2791521
   Zhang F, 2013, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2013.46
   Zhao KS, 2021, IEEE T RELIAB, V70, P848, DOI 10.1109/TR.2021.3060937
   Zhou B., 2015, P 19 INT C EV ASS SO, P1
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 76
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112077
DI 10.1016/j.jss.2024.112077
EA MAY 2024
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TL7K4
UT WOS:001241480400001
DA 2024-08-05
ER

PT J
AU Wang, XH
   Zhang, T
   Tan, YS
   Shang, WY
   Li, Y
AF Wang, Xiaohui
   Zhang, Tao
   Tan, Youshuai
   Shang, Weiyi
   Li, Yao
TI How to effectively mine app reviews concerning software ecosystem? A
   survey of review characteristics
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE App review; Literature review; Software ecosystem
ID SENTIMENT ANALYSIS; MOBILE; USERS; POPULARITY; PREDICTION; PRIVACY;
   FRAUD
AB App reviews in app stores offer valuable insights into many activities in the software ecosystem, e.g., software development, app marketing, security. As app reviews are known to be error -prone, commonly short, dynamic, and to hold domain -specific knowledge, we need mining strategies tailored to these characteristics. To help developers or researchers mine reviews more effectively, in this study, we conduct a systematic literature review on app review mining from the perspective of the characteristics. This survey was conducted on 167 papers published between 2012 and 2022 and focuses on three phases in app review mining: (a) the 167 papers were thoroughly examined to extract practices for the collection of app reviews; (b) a detailed list of review characteristics was summarized through a key -point investigation; (c) the survey presents common handling and applications for each review characteristic. Compared with other literature reviews on app review mining, our paper provides insights from the micro perspective. We have noted a growing trend in the analysis of app reviews, with review rating being the most frequently employed review characteristic. We also observed that the Google Play Store stands out as the most commonly used app distribution platform, and simple random sampling prevails as the most popular review sampling strategy compared to stratified sampling and keypoint investigation. Additionally, we have identified domain knowledge, textual content, dynamic nature, and sentiment of reviews as the most promising review characteristics for future studies.
C1 [Wang, Xiaohui; Zhang, Tao; Tan, Youshuai; Li, Yao] Macau Univ Sci & Technol, Sch Comp Sci & Engn, Taipa, Macao Special A, Peoples R China.
   [Shang, Weiyi] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON, Canada.
C3 Macau University of Science & Technology; University of Waterloo
RP Zhang, T (corresponding author), Macau Univ Sci & Technol, Sch Comp Sci & Engn, Taipa, Macao Special A, Peoples R China.
EM 2109853wim20002@student.must.edu.mo; tazhang@must.edu.mo;
   2109853jim20001@student.must.edu.mo; wshang@uwaterloo.ca;
   2109853gia30001@student.must.edu.mo
RI Zhang, Tao/E-5634-2012
OI Zhang, Tao/0000-0002-6272-4069; Wang, Xiaohui/0009-0004-5674-8752
FU Macao Science and Technology Development Fund (FDCT) , Macau SAR
   [0014/2022/A]
FX This work was supported by the Macao Science and Technology Development
   Fund (FDCT) , Macau SAR (Grant ID: 0014/2022/A) .
CR Abou Khalil Z, 2022, INT SYMP EMP SOFTWAR, P227, DOI 10.1145/3544902.3546239
   Ali Mohamed, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P79, DOI 10.1109/MOBILESoft.2017.3
   AlOmar EA, 2021, CHI '21: PROCEEDINGS OF THE 2021 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3411764.3445281
   Alqahtani F, 2019, ADJUNCT PUBLICATION OF THE 27TH CONFERENCE ON USER MODELING, ADAPTATION AND PERSONALIZATION (ACM UMAP '19 ADJUNCT), P343, DOI 10.1145/3314183.3323676
   Alqahtani F, 2020, HEALTH INFORM J, V26, P2042, DOI 10.1177/1460458219896492
   Alshangiti M, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P558, DOI 10.1145/3540250.3549174
   Alshayban A, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P984, DOI 10.1145/3540250.3549118
   Alshayban A, 2020, PROC INT CONF SOFTW, P1323, DOI 10.1145/3377811.3380392
   Anam A.I., 2013, INT ACM SIGACCESS C, P1
   Assi M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09988-y
   Bano M, 2021, INT REQUIR ENG CONF, P106, DOI 10.1109/RE51729.2021.00017
   Bao L, 2022, IEEE T EVOLUT COMPUT, V26, P844, DOI 10.1109/TEVC.2021.3109576
   Besmer AR, 2020, INT J INF SECUR PRIV, V14, P74, DOI 10.4018/IJISP.2020100105
   Bhandari Upasna, 2013, Information Retrieval Technology. 9th Asia Information Retrieval Societies Conference, AIRS 2013. Proceedings: LNCS 8281, P440, DOI 10.1007/978-3-642-45068-6_38
   Caldeira Clara, 2017, AMIA Annu Symp Proc, V2017, P495
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Cen L., 2015, P 2015 SIAM INT C DA, DOI [DOI 10.1137/1.9781611974010.74, 10.1137/1.9781611974010.74]
   Chen JD, 2019, AAAI CONF ARTIF INTE, P6252
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen N, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P305, DOI 10.1145/2684822.2685305
   Chen QY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447808
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Clarke S., 2014, MIT Sloan Manageme. Rev
   Corral L, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P22, DOI 10.1109/MobileSoft.2015.10
   Dabrowski J, 2022, 2022 30TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE (RE 2022), P114, DOI 10.1109/RE54965.2022.00017
   Dabrowski J, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10065-7
   Dabrowski J, 2020, LECT NOTES COMPUT SC, V12127, P401, DOI 10.1007/978-3-030-49435-3_25
   Dalpiaz F, 2019, LECT NOTES COMPUT SC, V11412, P55, DOI 10.1007/978-3-030-15538-4_4
   de Alva F.E.M., 2015, AUSTR COMP HUM INT C, P598
   de Araújo AF, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1321, DOI 10.1145/3412841.3442006
   Deka B, 2017, UIST'17: PROCEEDINGS OF THE 30TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P845, DOI 10.1145/3126594.3126651
   Deocadez Roger., 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering, P320
   Dhinakaran VT, 2018, INT REQUIR ENG CONF, P170, DOI 10.1109/RE.2018.00026
   Di Sorbo A, 2021, IEEE T SOFTWARE ENG, V47, P1587, DOI 10.1109/TSE.2019.2930519
   Di Sorbo A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2316
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Doosti B, 2018, Arxiv, DOI arXiv:1807.04191
   dos Santos R.P., 2010, P 4 EUR C SOFTW ARCH, P135
   Nguyen DC, 2019, P IEEE S SECUR PRIV, P555, DOI 10.1109/SP.2019.00012
   Ebrahimi F, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3561155
   Eiband M, 2019, PROCEEDINGS OF IUI 2019, P96, DOI 10.1145/3301275.3302262
   Eler MM, 2019, PROCEEDINGS OF THE 18TH BRAZILIAN SYMPOSIUM ON HUMAN FACTORS IN COMPUTING SYSTEMS (IHC 2019), DOI 10.1145/3357155.3358477
   Etaiwi L, 2020, P INT COMP SOFTW APP, P912, DOI 10.1109/COMPSAC48688.2020.0-151
   Farooq U, 2020, IEEE INT CONF BIG DA, P699, DOI 10.1109/BigData50022.2020.9377983
   Fereidouni Moghis, 2022, 2022 IEEE International Conference on Big Data (Big Data), P535, DOI 10.1109/BigData55660.2022.10020586
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gao C., 2021, ACM Trans. Softw. Eng. Methodol, V31, P1
   Gao C., 2022, IEEE Trans. Reliab.
   Gao CY, 2022, IEEE T SOFTWARE ENG, V48, P3025, DOI 10.1109/TSE.2021.3076179
   Gao CY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P163, DOI 10.1109/ASE.2019.00025
   Gao CY, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P904, DOI 10.1145/3236024.3264595
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Gao CY, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P35, DOI 10.1109/ISSRE.2015.7381797
   Geiger FX, 2018, Arxiv, DOI arXiv:1809.10069
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Ghose A, 2011, IEEE T KNOWL DATA EN, V23, P1498, DOI 10.1109/TKDE.2010.188
   Goul M., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P4168, DOI 10.1109/HICSS.2012.421
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Greenheld G, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P66, DOI 10.1109/ASWEC.2018.00017
   Groen EC, 2017, INT REQUIR ENG CONF, P80, DOI 10.1109/RE.2017.73
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guerrouj L, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P321, DOI 10.1109/SANER.2015.7081842
   Guo H, 2020, PROC INT CONF SOFTW, P628, DOI 10.1145/3377811.3380924
   Guzman Emitza, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321214
   Guzman E, 2019, INT REQUIR ENG CONF, P381, DOI 10.1109/RE.2019.00049
   Guzman E, 2018, PROC INT CONF SOFTW, P13, DOI 10.1145/3183428.3183436
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Guzman E, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P167, DOI 10.1109/VISSOFT.2014.33
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Ha E, 2013, 2013 IEEE CONSUMER COMMUNICATIONS AND NETWORKING CONFERENCE (CCNC), P149, DOI 10.1109/CCNC.2013.6488439
   Hadi MA, 2020, PROC IEEE INT CONF S, P593, DOI 10.1109/ICSME46990.2020.00062
   Haering M, 2021, PROC INT CONF SOFTW, P970, DOI 10.1109/ICSE43902.2021.00092
   Haggag Omar, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P329, DOI 10.1145/3530019.3535346
   Harkous H, 2022, P IEEE S SECUR PRIV, P2469, DOI [10.1109/SP46214.2022.9833729, 10.1109/SP46214.2022.00133]
   Hassan S, 2022, EUR CON SFTWR MTNCE, P890, DOI 10.1109/SANER53432.2022.00107
   Hassan S, 2020, IEEE T SOFTWARE ENG, V46, P773, DOI 10.1109/TSE.2018.2869395
   Hassan S, 2018, EMPIR SOFTW ENG, V23, P1275, DOI 10.1007/s10664-017-9538-9
   Hatamian M, 2019, COMPUT SECUR, V83, P332, DOI 10.1016/j.cose.2019.02.010
   He RD, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P388, DOI 10.18653/v1/P17-1036
   Higashi K., 2018, INT C SOFTW ENG KNOW, P125
   Hoon L., 2012, P 24 AUSTR COMPUTER, P245, DOI DOI 10.1145/2414536.2414578
   Hoon L., 2016, AUSTR C COMP HUM INT, P643
   Hoon Leonard., 2013, Proceedings of the 25th Australian Computer-Human Interaction Conference: Augmentation, Application, Innovation, Collaboration, P229
   Hu HY, 2019, EMPIR SOFTW ENG, V24, P7, DOI 10.1007/s10664-018-9617-6
   Hu XW, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P533, DOI 10.1145/3540250.3549141
   Hu YY, 2021, PROC INT CONF SOFTW, P933, DOI 10.1109/ICSE43902.2021.00089
   Hu YY, 2021, IEEE T DEPEND SECURE, V18, P1033, DOI 10.1109/TDSC.2019.2908939
   Hu YY, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P332, DOI [10.1109/SANER.2019.8668035, 10.1109/saner.2019.8668035]
   Huebner J, 2021, IEEE SOFTWARE, V38, P96, DOI 10.1109/MS.2020.3014669
   Huebner J, 2018, 17TH INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS MULTIMEDIA (MUM 2018), P293, DOI 10.1145/3282894.3282895
   Iacob C., 2013, INT BCS HUM COMP INT, P1
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Ikram M, 2017, 2017 IEEE 16TH INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA), P343
   Indurkhya N., 2010, Handbook of natural language processing, V2
   Islam MR, 2018, J SYST SOFTWARE, V145, P125, DOI 10.1016/j.jss.2018.08.030
   Jansen S, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106219
   Jha N, 2019, EMPIR SOFTW ENG, V24, P3659, DOI 10.1007/s10664-019-09716-7
   Jha N, 2018, EMPIR SOFTW ENG, V23, P3734, DOI 10.1007/s10664-018-9605-x
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Keertipati S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916003
   Khalajzadeh H., 2022, IEEE Trans. Softw. Eng
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Khalid H, 2016, IEEE SOFTWARE, V33, P34, DOI 10.1109/MS.2015.29
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Khalid H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1474, DOI 10.1109/ICSE.2013.6606749
   Kitchenham B. e. a., 2007, Technical report EBSE-2007-01, DOI DOI 10.1145/1134285.1134500
   Kong DG, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P530, DOI 10.1145/2810103.2813689
   Kübler R, 2018, J MARKETING, V82, P20, DOI 10.1509/jm.16.0140
   Kuehnhausen M, 2013, 2013 IEEE INTERNATIONAL MULTI-DISCIPLINARY CONFERENCE ON COGNITIVE METHODS IN SITUATION AWARENESS AND DECISION SUPPORT (COGSIMA), P30, DOI 10.1109/CogSIMA.2013.6523820
   Kurtanovic Z, 2018, REQUIR ENG, V23, P357, DOI 10.1007/s00766-018-0293-2
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   Lemon KN, 2016, J MARKETING, V80, P69, DOI 10.1509/jm.15.0420
   Letier E, 2019, LECT NOTES COMPUT SC, V11412, P183, DOI 10.1007/978-3-030-15538-4_14
   Li HY, 2015, IEEE DATA MINING, P241, DOI 10.1109/ICDM.2015.28
   Li Ruyi, 2021, OzCHI '21: 33rd Australian Conference on Human-Computer Interaction, P26, DOI 10.1145/3520495.3520496
   Li SS, 2017, SIGIR'17: PROCEEDINGS OF THE 40TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P1137, DOI 10.1145/3077136.3080741
   Licorish S. A., 2017, INT C EV ASS SOFTW E, P108
   Lin B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3490388
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Lin DY, 2019, EMPIR SOFTW ENG, V24, P170, DOI 10.1007/s10664-018-9627-4
   Linares-Vasquez M., 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Liu M, 2015, IEEE T KNOWL DATA EN, V27, P2049, DOI 10.1109/TKDE.2015.2405557
   Liu P, 2020, IEEE WORK CONF MIN S, P548, DOI 10.1145/3379597.3387503
   Lu Mengmeng., 2017, P 21 INT C EVALUATIO, P344, DOI DOI 10.1145/3084226.3084241
   Luiz W, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1909, DOI 10.1145/3178876.3186168
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Malgaonkar S, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106798
   Malik H, 2020, FUTURE GENER COMP SY, V107, P659, DOI 10.1016/j.future.2018.02.008
   Man YC, 2016, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2016.27
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Luna JM, 2019, WIRES DATA MIN KNOWL, V9, DOI 10.1002/widm.1329
   Martens D, 2019, EMPIR SOFTW ENG, V24, P3316, DOI 10.1007/s10664-019-09706-9
   Martens D, 2019, IEEE SOFTWARE, V36, P32, DOI 10.1109/MS.2019.2923603
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   Mathews C, 2021, PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES (ICSOFT), P386, DOI 10.5220/0010576503860397
   McIlroy S, 2017, IEEE SOFTWARE, V34, P64, DOI 10.1109/MS.2015.149
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Mekala RR, 2021, INT REQUIR ENG CONF, P139, DOI 10.1109/RE51729.2021.00020
   Morales-Ramirez I, 2017, INT REQUIR ENG CONF, P424, DOI 10.1109/RE.2017.41
   Morales-Ramirez I, 2015, APPL ONTOL, V10, P297, DOI 10.3233/AO-150150
   Nayebi M, 2018, EMPIR SOFTW ENG, V23, P2764, DOI 10.1007/s10664-018-9601-1
   Nema P, 2022, PROC INT CONF SOFTW, P112, DOI 10.1145/3510003.3510079
   Noei E., 2019, P 29 ANN INT C COMP, P54
   Noei E, 2021, IEEE T SOFTWARE ENG, V47, P367, DOI 10.1109/TSE.2019.2893171
   Noei E, 2019, EMPIR SOFTW ENG, V24, P1964, DOI 10.1007/s10664-019-09684-y
   Noei E, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P283, DOI 10.1145/3236024.3236044
   Noei E, 2017, EMPIR SOFTW ENG, V22, P3088, DOI 10.1007/s10664-017-9507-3
   Obie HO, 2022, IEEE WORK CONF MIN S, P321, DOI 10.1145/3524842.3527937
   Oehri E, 2020, INT REQUIR ENG CONF, P44, DOI 10.1109/RE48521.2020.00017
   Ouyang Y, 2019, IEEE T MOBILE COMPUT, V18, P1760, DOI 10.1109/TMC.2018.2868933
   Pagano D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P953, DOI 10.1109/ICSE.2013.6606645
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Panthum T, 2021, 2021 IEEE/ACIS 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P15, DOI 10.1109/SERA51205.2021.9509277
   Park DH, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P533, DOI 10.1145/2766462.2767759
   Petz Gerald, 2013, Human-Computer Interaction and Knowledge Discovery in Complex, Unstructured, Big Data. Third International Workshop, HCI-KDD 2013. Held at SouthCHI 2013. Proceedings: LNCS 7947, P35, DOI 10.1007/978-3-642-39146-0_4
   Vu PM, 2016, IEEE INT CONF AUTOM, P726, DOI 10.1145/2970276.2970365
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Rahman M, 2017, IEEE T KNOWL DATA EN, V29, P1329, DOI 10.1109/TKDE.2017.2667658
   Rahman M, 2021, IEEE T KNOWL DATA EN, V33, P3648, DOI 10.1109/TKDE.2020.2975170
   Rocha L, 2015, J WEB SEMANT, V34, P27, DOI 10.1016/j.websem.2015.05.006
   Sänger M, 2017, LECT NOTES COMPUT SC, V10260, P3, DOI 10.1007/978-3-319-59569-6_1
   Sayagh M, 2020, IEEE T SOFTWARE ENG, V46, P646, DOI 10.1109/TSE.2018.2867847
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Scherr S, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P44, DOI 10.1109/SEAA.2017.45
   Shah FA, 2019, COMM COM INF SC, V1077, P173, DOI 10.1007/978-3-030-29157-0_8
   Singh Ashwin, 2022, HT '22: Proceedings of the 33rd ACM Conference on Hypertext and Social Media, P186, DOI 10.1145/3511095.3536368
   Srisopha Kamonphop, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P336, DOI 10.1145/3383219.3383258
   Srisopha K., 2020, ACM IEEE INT S EMP S, P1
   Srisopha K, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P119, DOI 10.1145/3463274.3463311
   Srisopha K, 2019, PROC IEEE INT CONF S, P76, DOI 10.1109/ICSME.2019.00017
   Su'a T, 2017, IUI'17: PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P517, DOI 10.1145/3025171.3025178
   Sun KX, 2021, INT C PROGRAM COMPRE, P149, DOI 10.1109/ICPC52881.2021.00023
   Taba SES, 2014, LECT NOTES COMPUT SC, V8541, P370, DOI 10.1007/978-3-319-08245-5_22
   Tao CQ, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106290
   Tavakoli M, 2018, EXPERT SYST APPL, V113, P186, DOI 10.1016/j.eswa.2018.05.037
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Tushev M, 2022, PROC INT CONF SOFTW, P762, DOI 10.1145/3510003.3510201
   Uddin Md Kafil, 2020, MobiQuitous '20: MobiQuitous 2020 - 17th EAI International Conference on Mobile and Ubiquitous Systems: Computing, Networking and Services, P18, DOI 10.1145/3448891.3448953
   Uddin MK, 2020, P IEEE I C SERV COMP, P370, DOI 10.1109/SCC49832.2020.00055
   unram-Lea S, 2022, ACM C HUM FACT COMP, P1
   van Oordt S, 2021, INT REQUIR ENG CONF, P221, DOI 10.1109/RE51729.2021.00027
   van Vliet M, 2020, LECT NOTES COMPUT SC, V12045, P143, DOI 10.1007/978-3-030-44429-7_11
   Vasa R., 2012, P 24 AUSTR COMP HUM, P241, DOI DOI 10.1145/2414536.2414577
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wang C, 2021, ASIA PAC SOFWR ENG, P520, DOI 10.1109/APSEC53868.2021.00061
   Wang C, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267428
   Wang L, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1489, DOI 10.1145/3540250.3558966
   Wang R, 2020, IEEE T MOBILE COMPUT, V19, P2933, DOI 10.1109/TMC.2019.2934441
   Wang TL, 2018, ASIA PAC SOFWR ENG, P494, DOI 10.1109/APSEC.2018.00064
   Wang XJ, 2022, IEEE INT C S Q R S, P242, DOI 10.1109/QRS57517.2022.00034
   Wang YW, 2022, PROC INT CONF SOFTW, P2427, DOI 10.1145/3510003.3510189
   Wei Jiang, 2014, Advances in Knowledge Discovery and Data Mining. 18th Pacific-Asia Conference, PAKDD 2014. Proceedings: LNCS 8444, P584, DOI 10.1007/978-3-319-06605-9_48
   Wei LL, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P672, DOI 10.1145/3106237.3106294
   Williams G, 2018, INT REQUIR ENG CONF, P64, DOI 10.1109/RE.2018.00-51
   Wohlin C., 2014, P 18 INT C EV ASS SO, DOI DOI 10.1145/2601248.2601268
   Wu HY, 2021, PROC INT CONF SOFTW, P922, DOI 10.1109/ICSE43902.2021.00088
   Yadav A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P572, DOI [10.1109/SANER48275.2020.9054843, 10.1109/saner48275.2020.9054843]
   Yang AZH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10086-2
   Yang H., 2015, INT C SOFTW ENG KNOW, P7
   Yao Y, 2017, ACM T INFORM SYST, V35, DOI 10.1145/3015458
   Yin HS, 2018, ASIA PAC SOFWR ENG, P1, DOI 10.1109/APSEC.2018.00014
   Yu L, 2023, IEEE T SOFTWARE ENG, V49, P1464, DOI 10.1109/TSE.2022.3178096
   Zhang JZ, 2019, INFORM SOFTWARE TECH, V108, P30, DOI 10.1016/j.infsof.2018.12.002
   Zhang L, 2018, J COMPUT SCI TECH-CH, V33, P876, DOI 10.1007/s11390-018-1864-x
   Zhang T, 2021, IEEE T SOFTWARE ENG, V47, P2590, DOI 10.1109/TSE.2019.2956941
   Zhang YX, 2022, IEEE T MOBILE COMPUT, V21, P1566, DOI 10.1109/TMC.2020.3029718
   Zhang YX, 2022, IEEE T MOBILE COMPUT, V21, P728, DOI 10.1109/TMC.2020.3012767
   Zhou Y, 2021, IEEE T SOFTWARE ENG, V47, P2755, DOI 10.1109/TSE.2020.2967383
   Zhu HS, 2015, IEEE T CYBERNETICS, V45, P1303, DOI 10.1109/TCYB.2014.2349954
   Zhu HS, 2015, IEEE T KNOWL DATA EN, V27, P74, DOI 10.1109/TKDE.2014.2320733
NR 217
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112040
DI 10.1016/j.jss.2024.112040
EA APR 2024
PG 45
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RM2P0
UT WOS:001228017900001
DA 2024-08-05
ER

PT J
AU Liu, HZ
   Huang, CQ
   Sun, K
   Yin, JC
   Wu, XY
   Wang, J
   Zhang, QL
   Zheng, Y
   Nigam, V
   Liu, F
   Sifakis, J
AF Liu, Hezhen
   Huang, Chengqiang
   Sun, Ke
   Yin, Jiacheng
   Wu, Xiaoyu
   Wang, Jin
   Zhang, Qunli
   Zheng, Yang
   Nigam, Vivek
   Liu, Feng
   Sifakis, Joseph
TI Design for dependability - State of the art and trends
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Design for dependability; Risk analysis; Risk mitigation; Risk
   assessment; Run-time assurance; Dependable AI systems
ID FAULT INJECTION; RELIABILITY ASSESSMENT; ONLINE VERIFICATION; BAYESIAN
   NETWORKS; SYSTEMS; MODEL; AVAILABILITY; ARCHITECTURE; PROPAGATION;
   VEHICLES
AB This paper presents an overview of design for dependability as a process involving three distinct but interrelated activities: risk analysis, risk mitigation, and risk assessment. Although these activities have been the subject of numerous works, few of them address the issue of their integration into rigorous design flows. Moreover, most existing results focus on dependability for small-size safety-critical systems with specific static architectures. They cannot be applied to large systems, such as autonomous systems with dynamic heterogeneous architectures and AI components. The overwhelming complexity and lack of interpretability of AI present challenges to model-based techniques and require empirical approaches. Furthermore, it is impossible to cope with all potential risks at design time; run-time assurance techniques are necessary to cost-effectively achieve the desired degree of dependability. The paper synthesizes the state of the art showing particularly the impact of new trends stemming from the integration of AI components in design flows. It argues that these trends will have a profound impact on design methods and the level of dependability. It advocates the need for a new theoretical basis for dependability engineering that allows the integration of traditional model-based approaches and data-driven techniques in the search for trade-offs between efficiency and dependability.
C1 [Liu, Hezhen; Huang, Chengqiang; Sun, Ke; Yin, Jiacheng; Wu, Xiaoyu; Wang, Jin; Zhang, Qunli; Zheng, Yang] Huawei Technol Co Ltd, Shenzhen, Peoples R China.
   [Nigam, Vivek; Liu, Feng] Huawei Technol Co Ltd, Riesstr 25, Munich, Germany.
   [Sifakis, Joseph] Univ Grenoble Alpes, Verimag, Grenoble, France.
C3 Huawei Technologies; Huawei Technologies; Communaute Universite Grenoble
   Alpes; Institut National Polytechnique de Grenoble; Universite Grenoble
   Alpes (UGA); Centre National de la Recherche Scientifique (CNRS)
RP Liu, HZ; Huang, CQ (corresponding author), Huawei Technol Co Ltd, Shenzhen, Peoples R China.
EM liuhezhen2@huawei.com; huangchengqiang@huawei.com
RI Zhang, Qun/KMY-3621-2024
CR Adcock R., 2022, Guide to the Systems Engineering Body of Knowledge (SEBoK)
   Althoff M, 2014, IEEE T ROBOT, V30, P903, DOI 10.1109/TRO.2014.2312453
   Amin Z., 2015, INT J COMPUT APPL, V116, P11, DOI DOI 10.5120/20435-2768
   [Anonymous], 2022, SAE J3187_202202
   [Anonymous], 2018, ISO 26262-1
   [Anonymous], 2018, TimeNet homepage.
   [Anonymous], 2024, CPN IDE homepage.
   [Anonymous], 2015, ISO/IEC/IEEE 15288:2015.
   [Anonymous], 2016, IEC61078
   [Anonymous], 1989, P 3 INT WORKSH PETR
   [Anonymous], 2015, Runtime Assurance Framework Development for Highly Adaptive Flight Control Systems
   Apostolakis GE, 2004, RISK ANAL, V24, P515, DOI 10.1111/j.0272-4332.2004.00455.x
   Ashwin TR, 2018, J POWER SOURCES, V385, P141, DOI 10.1016/j.jpowsour.2018.03.010
   Aviation, 2017, What are the design parameters for airliner safety
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   AVIZIENIS A, 1985, IEEE T SOFTWARE ENG, V11, P1491, DOI 10.1109/TSE.1985.231893
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Bittner B, 2014, LECT NOTES COMPUT SC, V8822, P82, DOI 10.1007/978-3-319-12214-4_7
   BMW group, 2020, Safety assessment report: SAE level 3 automated driving system
   Bobbio A, 2001, RELIAB ENG SYST SAFE, V71, P249, DOI 10.1016/S0951-8320(00)00077-6
   Bojarski M., 2016, End-to-end deep learning for self-driving cars.
   Bozga M, 2021, Arxiv, DOI arXiv:2109.06478
   Bozzano M, 2013, IEEE INT C ENG COMP, P198, DOI 10.1109/ICECCS.2013.37
   Brosch F, 2012, IEEE T SOFTWARE ENG, V38, P1319, DOI 10.1109/TSE.2011.94
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Cai BP, 2019, IEEE T IND INFORM, V15, P2146, DOI 10.1109/TII.2018.2858281
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Catelani M, 2019, IEEE SYST J, V13, P2089, DOI 10.1109/JSYST.2018.2840220
   Cepin M, 2011, ASSESSMENT OF POWER SYSTEM RELIABILITY: METHODS AND APPLICATIONS, P1
   Chawla S., 2013, P 2013 SIAM INT C DA, P189, DOI DOI 10.1137/1.9781611972832.21
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen ZT, 2019, PROCEEDINGS OF SC19: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/3295500.3356177
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng Z., 2019, C RES ADAPT CONVERGE, P161, DOI [10.1145/3338840.3355641, DOI 10.1145/3338840.3355641]
   Cheraghlou MN, 2019, J NETW SYST MANAG, V27, P930, DOI 10.1007/s10922-019-09491-2
   Cheraghlou MN, 2016, J NETW COMPUT APPL, V61, P81, DOI 10.1016/j.jnca.2015.10.004
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   Chu T.-L., 2018, NUREG/CR-7233.
   Ciardo G., 1993, IMA VOLUMES MATH ITS, V48, P145, DOI DOI 10.1007/978-1-4613-8351-2_11
   Colbourn Ch.J., 1987, The Combinatorics of Network Reliability
   Coppens B., 2018, The Continuing Arms Race: Code-Reuse Attacks and Defenses, P211
   Costa CHA, 2014, INT CONF HIGH PERFOR, P707, DOI 10.1109/SC.2014.63
   Darwiche A, 2009, MODELING AND REASONING WITH BAYESIAN NETWORKS, P1, DOI 10.1017/CBO9780511811357
   David P, 2010, RELIAB ENG SYST SAFE, V95, P431, DOI 10.1016/j.ress.2009.11.015
   Day J., 2012, INFOTECH AEROSPACE
   Delange J., 2014, Technical report
   Denise A, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P25, DOI 10.1109/ISSRE.2004.2
   Doguc O, 2012, RELIAB ENG SYST SAFE, V104, P96, DOI 10.1016/j.ress.2012.03.016
   Dohmen K., 1998, the electronic journal of combinatorics, pR36
   Entrena L, 2011, FRONT ELECTRON TEST, V41, P141, DOI 10.1007/978-1-4419-6993-4_6
   Epstein S, 2005, RELIAB ENG SYST SAFE, V88, P195, DOI 10.1016/j.ress.2004.07.013
   Eslami M, 2020, INTEGRATION, V71, P154, DOI 10.1016/j.vlsi.2019.11.006
   Fabarisov T, 2021, Arxiv, DOI arXiv:2101.01283
   FENELON P, 1993, J SYST SOFTWARE, V21, P279, DOI 10.1016/0164-1212(93)90029-W
   Franco N, 2022, Arxiv, DOI arXiv:2205.00900
   Fricks RB, 2017, P REL MAINT S
   Gokhale SS, 2007, IEEE T DEPEND SECURE, V4, P32, DOI 10.1109/TDSC.2007.4
   Gouraud SD, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P5, DOI 10.1109/ASE.2001.989785
   Gudemann Matthias, 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P132, DOI 10.1109/HASE.2010.24
   Guerrero-Balaguera JD, 2022, 2022 IEEE 31ST INTERNATIONAL SYMPOSIUM ON INDUSTRIAL ELECTRONICS (ISIE), P959, DOI 10.1109/ISIE51582.2022.9831549
   Gui H, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P399, DOI 10.1145/2736277.2741081
   HAMMING RW, 1950, BELL SYST TECH J, V29, P147, DOI 10.1002/j.1538-7305.1950.tb00463.x
   Hendrycks D, 2019, Arxiv, DOI arXiv:1903.12261
   Hendrycks D, 2021, PROC CVPR IEEE, P15257, DOI 10.1109/CVPR46437.2021.01501
   Herder JN, 2009, I C DEPEND SYS NETWO, P33, DOI 10.1109/DSN.2009.5270357
   Hsueh MC, 1997, COMPUTER, V30, P75, DOI 10.1109/2.585157
   Hu WM, 2020, IEEE T KNOWL DATA EN, V32, P218, DOI 10.1109/TKDE.2018.2882404
   Hwang I, 2010, IEEE T CONTR SYST T, V18, P636, DOI 10.1109/TCST.2009.2026285
   Goodfellow IJ, 2015, Arxiv, DOI [arXiv:1412.6572, DOI 10.48550/ARXIV.1412.6572]
   Jard C., 2005, International Journal on Software Tools for Technology Transfer, V7, P297, DOI 10.1007/s10009-004-0153-x
   Jayakumar A.V., 2020, Ph.D. thesis
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Joy AM, 2015, 2015 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER ENGINEERING AND APPLICATIONS (ICACEA), P342, DOI 10.1109/ICACEA.2015.7164727
   Ju WH, 2016, PROCEDIA ENGINEER, V135, P418, DOI 10.1016/j.proeng.2016.01.150
   Junna Zhang, 2018, Wireless Communications and Mobile Computing, V2018, DOI 10.1155/2018/9787503
   Kadri N, 2019, J SYST ARCHITECT, V92, P39, DOI 10.1016/j.sysarc.2018.10.001
   Kaseb MR, 2019, FUTURE GENER COMP SY, V91, P493, DOI 10.1016/j.future.2018.08.015
   Katz G, 2017, Arxiv, DOI arXiv:1702.01135
   Kececioglu D., 1991, RELIABILITY ENG HDB, V1
   Kevin Forsberg H.C., 2005, Visualizing Project Management., Vthird
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kjaerulff U.B., 2013, Bayesian networks and influence diagrams: A guide to construction and analysis, Vsecond, DOI [10.1007/978-1-4614-5104-4, DOI 10.1007/978-1-4614-5104-4]
   Kooli M, 2014, 2014 9TH IEEE INTERNATIONAL CONFERENCE ON DESIGN & TECHNOLOGY OF INTEGRATED SYSTEMS IN NANOSCALE ERA (DTIS 2014)
   Kumari P, 2021, J KING SAUD UNIV-COM, V33, P1159, DOI 10.1016/j.jksuci.2018.09.021
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Langseth H, 2007, RELIAB ENG SYST SAFE, V92, P92, DOI 10.1016/j.ress.2005.11.037
   LAPRIE JC, 1992, IEEE T SOFTWARE ENG, V18, P130, DOI 10.1109/32.121755
   Le VH, 2022, PROC INT CONF SOFTW, P1356, DOI 10.1145/3510003.3510155
   Lee BH, 2001, P REL MAINT S, P7, DOI 10.1109/RAMS.2001.902434
   Lee J, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106272
   Leveson N.G., 2019, Shortcomings of the bow tie and other safety tools based on linear causality
   Leveson N.G., 2018, STPA Handbook
   Levy S, 2020, PROCEEDINGS OF THE 14TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '20), P1155
   Li J, 2018, CYBERSECURITY, V1, DOI 10.1186/s42400-018-0002-y
   Li ZN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P89, DOI 10.1109/ICSE-NIER.2019.00031
   Liang HL, 2018, IEEE T RELIAB, V67, P1199, DOI 10.1109/TR.2018.2834476
   Liu JC, 2020, IEEE T SMART GRID, V11, P2381, DOI 10.1109/TSG.2019.2953716
   Liu T, 2019, PROCEEDINGS OF THE 2019 56TH ACM/EDAC/IEEE DESIGN AUTOMATION CONFERENCE (DAC), DOI 10.1145/3316781.3317742
   Liu YN, 2017, ICCAD-IEEE ACM INT, P131, DOI 10.1109/ICCAD.2017.8203770
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma ZH, 2019, QUAL RELIAB ENG INT, V35, P2278, DOI 10.1002/qre.2502
   Madsen AL, 2003, LECT NOTES ARTIF INT, V2711, P594
   Markowski AS, 2011, PROCESS SAF ENVIRON, V89, P205, DOI 10.1016/j.psep.2011.04.005
   Marquez D, 2010, RELIAB ENG SYST SAFE, V95, P412, DOI 10.1016/j.ress.2009.11.012
   Marrone S, 2014, INT J SOFTW TOOLS TE, V16, P669, DOI 10.1007/s10009-014-0320-7
   MARSAN MA, 1984, ACM T COMPUT SYST, V2, P93, DOI 10.1145/190.191
   Massey J.L., 1992, Advances in Information Systems Science., DOI [10.1007/978-1-4615-9053-8_5, DOI 10.1007/978-1-4615-9053-8_5]
   Mehmed A., 2020, 2020 INT S IND EL AP, P1, DOI [10.1109/INDEL50386.2020.9266146, DOI 10.1109/INDEL50386.2020.9266146]
   Meynen S, 2020, IEEE SYS MAN CYBERN, P401, DOI [10.1109/smc42975.2020.9282986, 10.1109/SMC42975.2020.9282986]
   Microsoft contributors, 2023, Fault domain awareness.
   Mohammed B, 2016, 2016 INT IEEE CONFERENCES ON UBIQUITOUS INTELLIGENCE & COMPUTING, ADVANCED & TRUSTED COMPUTING, SCALABLE COMPUTING AND COMMUNICATIONS, CLOUD AND BIG DATA COMPUTING, INTERNET OF PEOPLE, AND SMART WORLD CONGRESS (UIC/ATC/SCALCOM/CBDCOM/IOP/SMARTWORLD), P542, DOI [10.1109/UIC-ATC-ScalCom-CBDCom-IoP-SmartWorld.2016.158, 10.1109/UIC-ATC-ScalCom-CBDCom-IoP-SmartWorld.2016.0094]
   Müller S, 2020, SCI COMPUT PROGRAM, V196, DOI 10.1016/j.scico.2020.102478
   Muniyandi AP, 2012, PROCEDIA ENGINEER, V30, P174, DOI 10.1016/j.proeng.2012.01.849
   Nagalingam D, 2020, MICROELECTRON RELIAB, V108, DOI 10.1016/j.microrel.2020.113629
   Narodytska N, 2016, Arxiv, DOI arXiv:1612.06299
   Natella R, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2841425
   Nguyen HD, 2021, INT J INFORM MANAGE, V57, DOI 10.1016/j.ijinfomgt.2020.102282
   Nguyen TA, 2019, IEEE ACCESS, V7, P9273, DOI 10.1109/ACCESS.2019.2891282
   Nidhra S., 2012, Int. J. Embed. Syst. Appl., V2, P29, DOI [DOI 10.5121/IJESA.2012.2204, 10.5121/ijesa.2012.2204]
   Norsys Software Corp, 2023, Netica 6.08 Bayesian network software from norsys.
   Nouri Ayoub, 2018, International Journal of Critical Computer-Based Systems, V8, P340
   Paltrinieri N, 2013, J LOSS PREVENT PROC, V26, P683, DOI 10.1016/j.jlp.2013.01.006
   Paolieri M, 2021, IEEE T SOFTWARE ENG, V47, P1211, DOI 10.1109/TSE.2019.2917202
   Papernot N, 2018, Arxiv, DOI arXiv:1610.00768
   Park S., 2017, Ph.D. thesis
   Patrick OConnor A.K., 2012, Practical Reliability Engineering., Vfifth
   Peach G, 2020, IEEE T COMPUT AID D, V39, P3492, DOI 10.1109/TCAD.2020.3012647
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pek C, 2020, NAT MACH INTELL, V2, P518, DOI 10.1038/s42256-020-0225-y
   Petri C. A., 1962, KOMMUNIKATION AUTOMA
   Price CJ, 2002, RELIAB ENG SYST SAFE, V76, P1, DOI 10.1016/S0951-8320(01)00136-3
   Proskurin S, 2020, P IEEE S SECUR PRIV, P563, DOI 10.1109/SP40000.2020.00041
   Prosvirnova T., 2013, IFAC Proc, V46, P127, DOI DOI 10.3182/20130904-3-UK-4041.00028,4THIFAC
   Rauber J, 2018, Arxiv, DOI arXiv:1707.04131
   Rippel O, 2021, INT C PATT RECOG, P6726, DOI 10.1109/ICPR48806.2021.9412109
   Sahner R., 1995, Performance and Reliability Analysis of Computer Systems: An Example-Based Approach using the SHARPE Software Package
   Salih N.K., 2022, 2022 IEEE S IND EL A, P1, DOI [10.1109/ISIEA54517.2022.9873679, DOI 10.1109/ISIEA54517.2022.9873679]
   Schneider C, 2015, SOFTWARE PRACT EXPER, V45, P1375, DOI 10.1002/spe.2250
   Segismundo A, 2008, INT J QUAL RELIAB MA, V25, P899, DOI 10.1108/02656710810908061
   Shalev-Shwartz S, 2018, Arxiv, DOI arXiv:1708.06374
   Sharma K., 2018, J ADV RES AERONAUTIC, V5, P1
   Shlyannikov V., 2020, Russ. Aeronaut, V63, P14
   Sifakis J, 2018, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.272.1
   Sorin D., 2009, FAULT TOLERANT COMPU
   Spreafico C, 2017, COMPUT SCI REV, V25, P19, DOI 10.1016/j.cosrev.2017.05.002
   Srisakaokul Siwakorn, 2018, AAAI WORKSH, P384
   Standard S., 2022, Standard ISO 21448:2022
   Stapelberg R.F., 2009, HDB RELIABILITY AVAI
   Stewart D, 2021, RELIAB ENG SYST SAFE, V213, DOI 10.1016/j.ress.2021.107649
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Szegedy C, 2014, Arxiv, DOI arXiv:1312.6199
   Tazi N, 2017, ENERGIES, V10, DOI 10.3390/en10030276
   Thomas IV J.P., 2013, Ph.D. thesis
   Tian Jing, 2014, PHM SOC EUR C, V2, DOI 10.36001/phme.2014.v2i1.1554
   Tsai T, 2021, I C DEPEND SYS NETWO, P284, DOI 10.1109/DSN48987.2021.00041
   Von Neumann J, 1956, Automata Studies, V34, P43, DOI 10.1515/9781400882618-003
   Wallace M, 2005, ELECTRON NOTES THEOR, V141, P53, DOI 10.1016/j.entcs.2005.02.051
   WAYMO, 2018, Waymo reaches 5 million self-driven miles.
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Weyns Danny, 2017, Software Engineering for Self-Adaptive Systems III. Assurances. International Seminar. Revised Selected and Invited Papers: LNCS 9640, P31, DOI 10.1007/978-3-319-74183-3_2
   Weyns D, 2021, An Introduction to Self-Adaptive Systems: A Contemporary Software Engineering Perspective, DOI [10.1002/9781119574910, DOI 10.1002/9781119574910]
   Xie M., 1991, Software Reliability Modelling, V1
   Xing J, 2012, 2012 PROCEEDINGS - ANNUAL RELIABILITY AND MAINTAINABILITY SYMPOSIUM (RAMS)
   Xing L., 2015, Binary Decision Diagrams and Extensions for System Reliability Analysis
   Yoneyama J, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE), P201, DOI 10.5220/0007618102010209
   Yuan XB, 2018, IEEE ACCESS, V6, P11289, DOI 10.1109/ACCESS.2018.2810386
   Zheng Y, 2021, IEEE INT SYMP SOFTW, P235, DOI 10.1109/ISSREW53611.2021.00068
   Zhong X, 2010, RELIAB ENG SYST SAFE, V95, P1174, DOI 10.1016/j.ress.2010.05.004
   Ziade H., 2004, Int. Arab J. Inf. Technol, V1, P171
   Zibin Zheng, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P398, DOI 10.1109/ISSRE.2010.28
   Zolghadri A, 2018, ENG APPL ARTIF INTEL, V68, P249, DOI 10.1016/j.engappai.2017.10.012
NR 171
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111989
DI 10.1016/j.jss.2024.111989
EA FEB 2024
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NE9Z2
UT WOS:001198907300001
DA 2024-08-05
ER

PT J
AU Sembey, R
   Hoda, R
   Grundy, J
AF Sembey, Ruchi
   Hoda, Rashina
   Grundy, John
TI Emerging technologies in higher education assessment and feedback
   practices: A systematic literature review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Emerging technologies; Artificial intelligence; Learning analytics;
   Extended reality; Assessment; Feedback; Systematic literature review
ID FORMATIVE ASSESSMENT; LEARNING ANALYTICS; REALITY; PRINCIPLES;
   SIMULATION; DESIGN
AB The use of Emerging Technologies, such as Artificial Intelligence (AI), Learning Analytics (LA) and Extended Reality (XR) applications, in higher education has proliferated in recent times, as these technologies are considered to have a significant impact on the future of postsecondary teaching and learning. We wanted to find out the emerging technologies used in computing education, its evaluation and effectiveness, and limitations and gaps for future research. We carried out a Systematic Literature Review study on the use of Emerging Technologies in higher education computing education to identify the state of the art in the use of these three groups of technologies for assessment and feedback practices. After systematic search and filtering from a search pool of 3038 studies published between 2016 and 2021, we selected 38 articles for detailed meta-analysis. Our findings reveal that 71% of the reviewed studies are journal articles, 50% studies focus on learning analytics, and the majority of the studies employ quantitative approaches. The results from this systematic review suggest that XR technologies have received least attention to date in computing education (amongst the emerging technologies considered for the review) and there is a lack of frameworks for design, evaluation and use of emerging technologies in higher education. The findings of this review will be beneficial for researchers and educators to obtain an in-depth understanding of the main areas of application of emerging technologies in higher education computing education, an inventory of emerging technology tools used for assessment and feedback, effectiveness indicators, and evaluation approaches that have been used. For evidence-based guidance on future assessment and feedback practices using emerging technologies, we also present a brief research agenda, drawing attention to the need to trial more XR, focus on formative assessment and feedback practices, better understand impact of human-centric issues and take more thoughtful consideration of ethics in the use of emerging technologies in computing education.
C1 [Sembey, Ruchi; Hoda, Rashina; Grundy, John] Monash Univ, Fac Informat Technol, Dept Software Syst & Cybersecur, Clayton, Vic 3800, Australia.
C3 Monash University
RP Sembey, R (corresponding author), Monash Univ, Fac Informat Technol, Dept Software Syst & Cybersecur, Clayton, Vic 3800, Australia.
EM ruchi.sembey@monash.edu; rashina.hoda@monash.edu; john.grundy@monash.edu
RI Grundy, John/I-6681-2012
OI Grundy, John/0000-0003-4928-7076; Hoda, Rashina/0000-0001-5147-8096
FU RTP PhD Scholarship, Australia; ARC Laureate Fellowship, Australia
   [FL190100035]
FX Sembey is supported by a RTP PhD Scholarship, Australia. Grundy is
   supported by ARC Laureate Fellowship, Australia FL190100035.
CR Azevedo J.M., 2019, Int. J. Inf. Learn. Technol.
   Baker T., 2019, Educ-AI-tion rebooted? Exploring the future of artificial intelligence in schools and colleges
   Brown M., 2020, EDUCAUSE
   Cavalcanti AP., 2021, Computers and Education: Artificial Intelligence, V2, P100027, DOI DOI 10.1016/J.CAEAI.2021.100027
   Cen L, 2016, INT J COMP-SUPP COLL, V11, P187, DOI 10.1007/s11412-016-9234-6
   Cerezo R, 2020, J COMPUT HIGH EDUC, V32, DOI 10.1007/s12528-019-09225-y
   Chang CY, 2019, ENFANCE, P413
   Chango W, 2021, J COMPUT HIGH EDUC, V33, P614, DOI 10.1007/s12528-021-09298-8
   Chou CY, 2020, INT J EDUC TECHNOL H, V17, DOI 10.1186/s41239-020-00233-y
   Doble C, 2019, INT J ARTIF INTELL E, V29, P258, DOI 10.1007/s40593-019-00176-0
   Drey T, 2020, CHI'20: EXTENDED ABSTRACTS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3334480.3382789
   EDUCAUSE, 2019, 2019 EDUCAUSE horizon report
   EDUCAUSE, 2021, 2021 EDUCAUSE horizon report
   Febriani I., 2018, International Journal of Engineering & Technology, V7, P33, DOI [10.14419/ijet.v7i4.11.20684, DOI 10.14419/IJET.V7I4.11.20684]
   Feng ZA, 2018, COMPUT EDUC, V127, P252, DOI 10.1016/j.compedu.2018.09.002
   Gerdes A, 2017, INT J ARTIF INTELL E, V27, P65, DOI 10.1007/s40593-015-0080-x
   Gikandi JW, 2011, COMPUT EDUC, V57, P2333, DOI 10.1016/j.compedu.2011.06.004
   Gonçalves AL, 2018, INT CONF PORTUG SOC
   Grivokostopoulou F, 2017, INT J ARTIF INTELL E, V27, P207, DOI 10.1007/s40593-016-0116-x
   Guo W., 2020, IIE ANN C P, P1
   Hattie J, 2007, REV EDUC RES, V77, P81, DOI 10.3102/003465430298487
   Heim Michael., 1993, The Metaphysics of Virtual Reality
   Hlaoui YB, 2016, COMPUT APPL ENG EDUC, V24, P951, DOI 10.1002/cae.21770
   Hooshyar D, 2016, ETR&D-EDUC TECH RES, V64, P787, DOI 10.1007/s11423-016-9433-x
   Jensen L, 2018, EDUC INF TECHNOL, V23, P1515, DOI 10.1007/s10639-017-9676-0
   Kitchenham B., 2004, PROCEDURES PERFORMIN
   Klopfer E, 2008, ETR&D-EDUC TECH RES, V56, P203, DOI 10.1007/s11423-007-9037-6
   Kochmar E, 2022, INT J ARTIF INTELL E, V32, P323, DOI 10.1007/s40593-021-00267-x
   Lee Haden Hooyeon, 2021, SIGCSE '21: Proceedings of the 52nd ACM Technical Symposium on Computer Science Education, P101, DOI 10.1145/3408877.3432463
   Leite A, 2020, SIGCSE 2020: PROCEEDINGS OF THE 51ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P44, DOI 10.1145/3328778.3366921
   Lim LA, 2020, AUSTRALAS J EDUC TEC, V36, P15, DOI 10.14742/ajet.6370
   Lim LA, 2021, ASSESS EVAL HIGH EDU, V46, P339, DOI 10.1080/02602938.2020.1782831
   Martin F, 2020, ETR&D-EDUC TECH RES, V68, P1613, DOI 10.1007/s11423-020-09812-2
   Martin F, 2016, J UNIV TEACH LEARN P, V13
   Matcha W, 2019, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON LEARNING ANALYTICS & KNOWLEDGE (LAK'19), P461, DOI 10.1145/3303772.3303787
   Means Barbara, 2014, Learning Online: What Research Tells Us about Whether, When and How, DOI [10.4324/9780203095959, DOI 10.4324/9780203095959]
   Menchaca I., 2016, P 4 INT C TECHN EC E, P369
   Merchant Z, 2014, COMPUT EDUC, V70, P29, DOI 10.1016/j.compedu.2013.07.033
   MILGRAM P, 1994, IEICE T INF SYST, VE77D, P1321
   Narciss S, 2013, DIGIT EDUC REV, P7
   Nguyen Q., 2016, Quarterly Review of Distance Education, V17, P13
   Nicol DJ, 2006, STUD HIGH EDUC, V31, P199, DOI 10.1080/03075070600572090
   Nyland R, 2017, J COMPUT HIGH EDUC, V29, P201, DOI 10.1007/s12528-016-9122-0
   Ochoa X, 2020, BRIT J EDUC TECHNOL, V51, P1615, DOI 10.1111/bjet.12987
   Omer U, 2020, SUSTAINABILITY-BASEL, V12, DOI 10.3390/su12176990
   Pardo A, 2019, BRIT J EDUC TECHNOL, V50, P128, DOI 10.1111/bjet.12592
   Perikos I, 2017, INT J ARTIF INTELL E, V27, P475, DOI 10.1007/s40593-017-0139-y
   Pigott TD, 2020, REV EDUC RES, V90, P24, DOI 10.3102/0034654319877153
   Pinargote-Ortega M, 2021, J COMPUT HIGH EDUC, V33, P684, DOI 10.1007/s12528-021-09296-w
   Radianti J, 2020, COMPUT EDUC, V147, DOI 10.1016/j.compedu.2019.103778
   RAMAPRASAD A, 1983, BEHAV SCI, V28, P4, DOI 10.1002/bs.3830280103
   Ribeiro J, 2019, 2019 10TH INTERNATIONAL CONFERENCE ON E-EDUCATION, E-BUSINESS, E-MANAGEMENT AND E-LEARNING (IC4E 2019), P1, DOI 10.1145/3306500.3306515
   Ruiz J, 2020, IEEE T LEARN TECHNOL, V13, P833, DOI 10.1109/TLT.2020.3028596
   Santos MEC, 2014, IEEE T LEARN TECHNOL, V7, P38, DOI 10.1109/TLT.2013.37
   Sharma K, 2020, LAK20: THE TENTH INTERNATIONAL CONFERENCE ON LEARNING ANALYTICS & KNOWLEDGE, P480, DOI 10.1145/3375462.3375498
   Shum SB, 2016, LAK '16 CONFERENCE PROCEEDINGS: THE SIXTH INTERNATIONAL LEARNING ANALYTICS & KNOWLEDGE CONFERENCE,, P213, DOI 10.1145/2883851.2883955
   Shute VJ, 2008, REV EDUC RES, V78, P153, DOI 10.3102/0034654307313795
   SOLAR, 2022, What is learning analytics?-society for learning analytics research (SoLAR)
   Souza DM, 2016, CONF SOFTW ENG EDUC, P147, DOI 10.1109/CSEET.2016.48
   Swiecki Z., 2022, Computers and Education: Artificial Intelligence, V3, DOI DOI 10.1016/J.CAEAI.2022.100075
   Taher M.T., 2017, 2017 ASEE ANN C EXP
   Tempelaar D, 2020, ASSESS EVAL HIGH EDU, V45, P579, DOI 10.1080/02602938.2019.1677855
   Tham J, 2018, IEEE T PROF COMMUN, V61, P178, DOI 10.1109/TPC.2018.2804238
   Tsai YS, 2021, LAK21 CONFERENCE PROCEEDINGS: THE ELEVENTH INTERNATIONAL CONFERENCE ON LEARNING ANALYTICS & KNOWLEDGE, P511, DOI 10.1145/3448139.3448212
   Veletsianos G, 2010, ISS ONLINE EDUC, P1
   Villamane M., 2016, TEEM 16 P 4 INT C TE, P363, DOI [10.1145/3012430.3012541, DOI 10.1145/3012430.3012541]
   Wang DQ, 2021, J COMPUT ASSIST LEAR, V37, P487, DOI 10.1111/jcal.12502
   Wang P, 2018, INT J ENV RES PUB HE, V15, DOI 10.3390/ijerph15061204
   Zawacki-Richter O, 2019, INT J EDUC TECHNOL H, V16, DOI 10.1186/s41239-019-0171-0
   Zheng LQ, 2022, BRIT J EDUC TECHNOL, V53, P130, DOI 10.1111/bjet.13156
NR 70
TC 1
Z9 1
U1 39
U2 39
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111988
DI 10.1016/j.jss.2024.111988
EA FEB 2024
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LJ0U4
UT WOS:001186317700001
OA Green Published, hybrid
DA 2024-08-05
ER

PT J
AU Ayala-Rivera, V
   Portillo-Dominguez, AO
   Pasquale, L
AF Ayala-Rivera, Vanessa
   Portillo-Dominguez, A. Omar
   Pasquale, Liliana
TI GDPR compliance via software evolution: Weaving security controls in
   software design
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software evolution; Privacy and security; Software design; Data
   protection; GDPR; Compliance
ID FRAMEWORK
AB Software should comply with international privacy laws, like the General Data Protection Regulation (GDPR). However, implementing appropriate technical controls is often an error-prone and time-consuming process. This is partly due to the limited knowledge of software engineers about privacy and security. This paper proposes SoCo, a semi-automated approach to support organizations in achieving software compliance with the GDPR data protection principles. To do so, SoCo supports engineers in identifying and integrating appropriate technical controls in sequence diagrams during the design phase. SoCo includes a technique to assist engineers to identify data processing activities in software applications modeled as sequence diagrams that may need to comply with the GDPR, a catalog of privacy and security controls that engineers can use to fix non-compliant activities, and a technique to implement such controls in the non-compliant sequence diagrams. Our evaluation results show that SoCo can help software engineers identify and design appropriate security controls to address GDPR violations and required moderate manual effort when applied to a substantive open -source application.
C1 [Ayala-Rivera, Vanessa; Portillo-Dominguez, A. Omar] Technol Univ Dublin TU Dublin, Dublin, Ireland.
   [Ayala-Rivera, Vanessa] Natl Coll Ireland NCI, Dublin, Ireland.
   [Pasquale, Liliana] Univ Coll Dublin UCD, Dublin, Ireland.
   [Pasquale, Liliana] SFI Res Ctr Software Lero, Dublin, Ireland.
C3 University College Dublin
RP Portillo-Dominguez, AO (corresponding author), Technol Univ Dublin TU Dublin, Dublin, Ireland.
EM vanessa.ayalarivera@tudublin.ie; omar.portillo@tudublin.ie;
   liliana.pasquale@ucd.ie
FU Science Foundation Ireland (SFI) [18/IF/6343, 10/CE/I1855, 13/RC/2094_2,
   15/SIRG/3501]
FX This work was supported by Science Foundation Ireland (SFI) under Grants
   number 18/IF/6343, 10/CE/I1855, 13/RC/2094_2, and 15/SIRG/3501.
CR Aberkane AJ, 2021, IEEE ACCESS, V9, P66542, DOI 10.1109/ACCESS.2021.3076921
   Acar Y, 2016, 2016 IEEE CYBERSECURITY DEVELOPMENT (IEEE SECDEV 2016), P3, DOI [10.1109/SecDev.2016.20, 10.1109/SecDev.2016.013]
   Alhazmi Abdulrahman, 2021, Pers Ubiquitous Comput, V25, P879, DOI 10.1007/s00779-021-01544-1
   Ali N., 2015, ANN PRIV FOR, P144
   Alkubaisy D., 2021, ENASE, P67
   Altova GmbH, Altova UModel
   Amaral O, 2022, IEEE T SOFTWARE ENG, V48, P4647, DOI 10.1109/TSE.2021.3124332
   Amaral O, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P16, DOI 10.1109/REW53955.2021.00009
   Andrade VC, 2022, PROCEEDINGS OF THE 21TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, SBOS 2022, DOI 10.1145/3571473.3571480
   [Anonymous], CIS Critical Security Controls v8 Mapping to NIST CSF
   [Anonymous], You Can't Have Privacy Without Security-National Cybersecurity Alliance
   [Anonymous], Fenixedu
   [Anonymous], 2016, Official Journal of European Union, pL119
   Ayala-Rivera V., SoCo's supplementary material and prototype tool, DOI [10.5281/zenodo.11851250, DOI 10.5281/ZENODO.11851250]
   Ayala-Rivera V., SoCo's GitHub Repository
   Ayala-Rivera V, 2018, INT REQUIR ENG CONF, P136, DOI 10.1109/RE.2018.00023
   Bodorik P., 2014, IEEE Softw
   Boduch A., 2016, Flux architecture
   Bratthall L., 2002, Empirical Software Engineering, V7, P9, DOI 10.1023/A:1014866909191
   Brazilian Federal Government, 2018, Brazilian general data protection law (LGPD)
   Bu F, 2020, INT J INFORM MANAGE, V53, DOI 10.1016/j.ijinfomgt.2020.102124
   Buse RPL, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P643
   Butler S, 2015, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSM.2015.7332450
   Cachopo Joao., 2011, The FenixEdu Project: an Open-Source Academic Information Platform
   California State Legislature, 2018, California consumer privacy act (CCPA)
   Canedo ED, 2020, ENTROPY-SWITZ, V22, DOI 10.3390/e22040429
   Cavoukian A., 2012, Operationalizing privacy by design: A guide to implementing
   Cavoukian A., 2011, Privacy by Design The 7 Foundational Principles Implementation and Mapping of Fair Information Practices
   CIS, CIS PET wiki
   Cohen W.W., 2003, IIWeb, V2003
   Colesky M, 2016, 2016 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2016), P33, DOI 10.1109/SPW.2016.23
   Coleti TA, 2020, IEEE ACCESS, V8, P75184, DOI 10.1109/ACCESS.2020.2988566
   Cortina S, 2021, COMM COM INF SC, V1442, P107, DOI 10.1007/978-3-030-85521-5_8
   Deloitte, Deloitte GDPR vision and approach
   Deng MN, 2011, REQUIR ENG, V16, P3, DOI 10.1007/s00766-010-0115-7
   DPC Ireland, GDPR readiness checklist tools
   DPC Ireland, Data Protection Commission-Case Studies
   DPC Ireland, 2019, Report
   Ehecatl Morales-Trujillo M., 2019, Clei Electr J.
   Federal Trade Commission, 1996, Staff report
   Gali N, 2019, EXPERT SYST APPL, V129, P169, DOI 10.1016/j.eswa.2019.03.048
   Guaman DS, 2021, IEEE ACCESS, V9, P15961, DOI 10.1109/ACCESS.2021.3053130
   Hadar I, 2018, EMPIR SOFTW ENG, V23, P259, DOI 10.1007/s10664-017-9517-1
   Hernan S, 2006, MSDN MAG, V21, P68
   Hoepman JH, 2014, IFIP ADV INF COMM TE, V428, P446
   IAPP, 2022, Report
   ICO UK, UK GDPR guidance and resources
   ICO UK, How do we document our processing activities?
   International Association of Privacy Professionals, Global Comprehensive Privacy Law Mapping Chart
   Isaca, GDPR Readiness, Assessment & Compliance
   ISO/IEC, ISO/IEC 29100
   ISO/IEC, ISO/IEC 27001
   ISO/IEC, ISO/IEC 27002:2022
   James B., SDLC Risk Management Framework
   Jatnika D, 2019, PROCEDIA COMPUT SCI, V157, P160, DOI 10.1016/j.procs.2019.08.153
   Kabanov Ilya, 2016, 2016 14th Annual Conference on Privacy, Security and Trust (PST), P551, DOI 10.1109/PST.2016.7907015
   Kilic E., 2023, 2023 8 INT C SMART S, P1
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Koffel C., 2010, HCI pattern collection V2
   Krebs FB, Passwords in Plain Text
   KU Leuven, Linddun
   Kundu D, 2013, IET SOFTW, V7, P12, DOI 10.1049/iet-sen.2011.0080
   Lamprecht A.-L., 2020, Data Sci., V3, P37, DOI DOI 10.3233/DS-190026
   Lopez T, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P31, DOI 10.1109/ICSE-SEIS.2019.00012
   Martín YS, 2018, 2018 3RD IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW 2018), P108, DOI 10.1109/EuroSPW.2018.00021
   Maynooth University, Possible personal data in a university 2
   Mcadam T., RMS GDPR roadmap to compliance
   Mouheb D, 2016, INNOV SYST SOFTW ENG, V12, P41, DOI 10.1007/s11334-015-0263-5
   Muller C., 2009, EMNLP, P1338
   Nanayakkara S., 2022, Managing Information Technology Projects: Building a Body of Knowledge in IT Project Management, P411
   New Zealand Government, Learning from Privacy Incidents
   New Zealand Parliamentary Counsel Office, 2020, Privacy act 2020, New Zealand legislation
   Truong NB, 2020, IEEE T INF FOREN SEC, V15, P1746, DOI 10.1109/TIFS.2019.2948287
   NIST, 2020, Tech. Rep., (800-53), DOI DOI 10.6028/NIST.SP.800-53R4
   ObjectAid, ObjectAid
   OECD, The OECD Privacy Framework
   Paolone G, 2020, COMPUTERS, V9, DOI 10.3390/computers9030056
   Parada A. G., 2011, Proceedings of the 2011 Brazilian Symposium on Computing System Engineering (SBESC 2011), P99, DOI 10.1109/SBESC.2011.22
   Peixoto M, 2020, LECT NOTES COMPUT SC, V12045, P116, DOI 10.1007/978-3-030-44429-7_8
   People's Republic of China, 2020, Personal information protection law of the People's Republic of China
   Pinheiro J., 2020, P DIG PRIV SEC C, P43
   Piras L., 2021, J. Data Intell, V2, P136
   Piras L, 2019, LECT NOTES COMPUT SC, V11711, P78, DOI 10.1007/978-3-030-27813-7_6
   PlantUML, PlantUML
   Portillo-Dominguez AO, 2016, SOFTWARE PRACT EXPER, V46, P1705, DOI 10.1002/spe.2391
   PRIPARE, Privacy Patterns
   Rauf I, 2022, 15TH INTERNATIONAL CONFERENCE ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2022), P86, DOI 10.1145/3528579.3529180
   Rhahla M, 2021, J INF SECUR APPL, V61, DOI 10.1016/j.jisa.2021.102896
   Robol M, 2022, Arxiv, DOI arXiv:2206.06406
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   SAS, SAS roadmap to GDPR
   Senarath A., 2018, P 22 INT C EV ASS SO, P211, DOI DOI 10.1145/3210459.3210484
   SonicWall, 2024, SonicWall Cyber Threat Report: Shifting Front Lines
   Thevarmannil M., 2023, 10 Types of Threat Modeling Methodology To Use in
   Torre D, 2020, Arxiv, DOI arXiv:2007.12046
   UCD, Possible personal data in a university 1
   Ulven JB, 2021, FUTURE INTERNET, V13, DOI 10.3390/fi13020039
   Vanezi E, 2020, LECT NOTES BUS INF P, V385, P569, DOI 10.1007/978-3-030-50316-1_40
   Visual Paradigm, Visual Paradigm The No.1 Development Tool Suite
   Votipka D, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P109
   Wuyts K, 2015, LINDDUN PRIVACY THRE
   Yilmaz S, 2020, NEURAL COMPUT APPL, V32, P2909, DOI 10.1007/s00521-020-04725-w
   Zahadat N., 2023, Ransomware as an imminent and destructive cyber-threat of the digital world
NR 104
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112144
DI 10.1016/j.jss.2024.112144
EA JUN 2024
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XM3E6
UT WOS:001262053000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Villamizar, H
   Kalinowski, M
   Lopes, H
   Mendez, D
AF Villamizar, Hugo
   Kalinowski, Marcos
   Lopes, Helio
   Mendez, Daniel
TI Identifying concerns when specifying machine learning-enabled systems: A
   perspective-based approach☆
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Requirements engineering; Machine learning-enabled systems; Technology
   transfer; Case study
ID ACCEPTANCE; MODEL
AB Engineering successful machine learning (ML)-enabled systems poses various challenges from both a theoretical and a practical side. Among those challenges are how to effectively address unrealistic expectations of ML capabilities from customers, managers and even other team members, and how to connect business value to engineering and data science activities composed by interdisciplinary teams. In this paper, we present PerSpecML , a perspective-based approach for specifying ML-enabled systems that helps practitioners identify which attributes, including ML and non -ML components, are important to contribute to the overall system's quality. The approach involves analyzing 60 concerns related to 28 tasks that practitioners typically face in ML projects, grouping them into five perspectives: system objectives, user experience, infrastructure, model, and data. Together, these perspectives serve to mediate the communication between business owners, domain experts, designers, software and ML engineers, and data scientists. The creation of PerSpecML involved a series of formative evaluations conducted in different contexts: (i) in academia, (ii) with industry representatives, and (iii) in two real industrial case studies. As a result of the diverse validations and continuous improvements, PerSpecML stands as a promising approach, poised to positively impact the specification of ML-enabled systems, particularly helping to reveal key components that would have been otherwise missed without using PerSpecML . Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board .
C1 [Villamizar, Hugo; Kalinowski, Marcos; Lopes, Helio] Pontifical Catholic Univ Rio de Janeiro, Rio De Janeiro, Brazil.
   [Mendez, Daniel] Blekinge Inst Technol, Karlskrona, Sweden.
C3 Pontificia Universidade Catolica do Rio de Janeiro; Blekinge Institute
   Technology
RP Villamizar, H (corresponding author), Pontifical Catholic Univ Rio de Janeiro, Rio De Janeiro, Brazil.
EM hvillamizar@inf.puc-rio.br; kalinowski@inf.puc-rio.br;
   lopes@inf.puc-rio.br; daniel.mendez@bth.se
OI Kalinowski, Marcos/0000-0003-1445-3425; Villamizar,
   Hugo/0000-0003-4142-6967; Mendez Fernandez, Daniel/0000-0003-0619-6027
FU CAPES; CNPq [312827/2020-2]
FX We would like to thank the employees of Loggi, of the ExACTa Initiative
   at PUC-Rio and of Americanas S.A. Thanks also for the financial support
   of the Brazilian CAPES and CNPq agencies (grant 312827/2020-2) .
CR Ahmad K, 2023, APPL SOFT COMPUT, V143, DOI 10.1016/j.asoc.2023.110455
   Ahmad K, 2023, INFORM SOFTWARE TECH, V158, DOI 10.1016/j.infsof.2023.107176
   Ahmad K, 2021, INT REQUIR ENG CONF, P1, DOI 10.1109/RE51729.2021.00008
   Aho T, 2020, LECT NOTES COMPUT SC, V12562, P153, DOI 10.1007/978-3-030-64148-1_10
   Alves Antonio Pedro Santos, 2023, INT C PRODUCT FOCUSE, P159
   Apple Inc, 2020, Human-interface-guidelines for ML solutions
   Barash G, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1048, DOI 10.1145/3338906.3340442
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Belani H, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P252, DOI 10.1109/REW.2019.00051
   Berry DM, 2022, LECT NOTES COMPUT SC, V13216, P19, DOI 10.1007/978-3-030-98464-9_2
   Carleton Anita D, 2021, Technical Report
   Challa H, 2020, 2020 IEEE SEVENTH INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE 2020), P61, DOI 10.1109/AIRE51212.2020.00016
   Chuprina Tatiana, 2021, JOINT WORKSH 27 INT, V2857
   Cysneiros LM, 2018, INT REQUIR ENG CONF, P382, DOI 10.1109/RE.2018.00-21
   Dalpiaz F, 2020, IEEE SOFTWARE, V37, P7, DOI 10.1109/MS.2020.2986047
   Damian D, 2007, IEEE SOFTWARE, V24, P21, DOI 10.1109/MS.2007.55
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dimitrakopoulos G, 2019, SIMUL MODEL PRACT TH, V91, P28, DOI 10.1016/j.simpat.2018.11.005
   Dorard Louis, 2015, Machine Learning Canvas
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Fosnot CT, 2013, CONSTRUCTIVISM THEOR
   Gartner, 2020, Gartner Identifies the Top Strategic Technology Trends for 2021
   Google Corporation, 2021, People + AI guidebook
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Habibullah KM, 2023, REQUIR ENG, V28, P283, DOI 10.1007/s00766-022-00395-3
   Herrmann Andrea, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P347, DOI 10.1007/978-3-642-37422-7_25
   Hulten Geoff, 2019, Building Intelligent Systems: A Guide to Machine Learning Engineering
   Ishikawa Fuyuki, 2019, 2019 IEEE/ACM Joint 7th International Workshop on Conducting Empirical Studies in Industry (CESI) and 6th International Workshop on Software Engineering Research and Industrial Practice (SER&IP). Proceedings, P2, DOI 10.1109/CESSER-IP.2019.00009
   iso, 2011, ISO/IEC 25010, ISO/ IEC 25010: 2011
   ISO/IEC, 2012, ISO/IEC 25012: Software engineering-software product quality requirements and evaluation (SQuaRE)-data quality model
   Kalinowski M, 2020, LECT NOTES COMPUT SC, V12562, P106, DOI 10.1007/978-3-030-64148-1_7
   Kastner Christian, 2020, Machine learning is requirements engineering-on the role of bugs, verification, and validation in machine learning
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Kontio J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P271
   Kuwajima H, 2020, MACH LEARN, V109, P1103, DOI 10.1007/s10994-020-05872-w
   Lewis Grace A., 2021, 2021 IEEE/ACM 1st Workshop on AI Engineering - Software Engineering for AI (WAIN), P133, DOI 10.1109/WAIN52551.2021.00028
   Lwakatare LE, 2019, LECT NOTES BUS INF P, V355, P227, DOI 10.1007/978-3-030-19034-7_14
   Maffey KR, 2023, New Ideas and Emergi, P31, DOI 10.1109/ICSE-NIER58687.2023.00012
   Martínez-Fernández S, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487043
   Microsoft Corporation, 2022, Microsoft's framework for building AI systems responsibly
   MITCHELL T, 1989, ANNU REV COMPUT SCI, V4, P417
   Nahar N, 2023, 2023 IEEE/ACM 2ND INTERNATIONAL CONFERENCE ON AI ENGINEERING - SOFTWARE ENGINEERING FOR AI, CAIN, P171, DOI 10.1109/CAIN58948.2023.00034
   Nahar N, 2022, PROC INT CONF SOFTW, P413, DOI 10.1145/3510003.3510209
   Nakamichi K, 2020, INT REQUIR ENG CONF, P260, DOI 10.1109/RE48521.2020.00036
   Nalchigar S, 2021, REQUIR ENG, V26, P237, DOI 10.1007/s00766-020-00343-z
   Nascimento de Souza, 2019, Empirical Software Engineering and Measurement, P1
   Neace K, 2018, REQUIR ENG, V23, P509, DOI 10.1007/s00766-017-0278-6
   Passi S, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P39, DOI 10.1145/3287560.3287567
   Pei ZY, 2022, INT REQUIR ENG CONF, P166, DOI 10.1109/REW56159.2022.00039
   Rahimi M, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P241, DOI 10.1109/REW.2019.00049
   Sculley D, 2015, ADV NEUR IN, V28
   Service RW, 2009, ORGAN RES METHODS, V12, P614, DOI 10.1177/1094428108324514
   Siebert J, 2022, SOFTWARE QUAL J, V30, P307, DOI 10.1007/s11219-021-09557-y
   Turner M, 2010, INFORM SOFTWARE TECH, V52, P463, DOI 10.1016/j.infsof.2009.11.005
   Villamizar Hugo, 2022, 2022 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P112, DOI 10.1109/SEAA56994.2022.00025
   Villamizar H, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P29, DOI 10.1109/SEAA53835.2021.00013
   Villamizar Hugo, 2023, PerSpecML-machine learning-online published miro template
   Villamizar Hugo, 2022, 2022 25 WORKSH REQ E
   Vogelsang A, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P245, DOI 10.1109/REW.2019.00050
   Wagner S, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3306607
   Wang Chong, 2018, P 12 ACM IEEE INT S, P1
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
NR 62
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112053
DI 10.1016/j.jss.2024.112053
EA APR 2024
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SK7I2
UT WOS:001234407600001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Lim, JW
   Chiew, TK
   Su, MT
   Ong, S
   Subramaniam, H
   Mustafa, MB
   Chiam, YK
AF Lim, Jin Wei
   Chiew, Thiam Kian
   Su, Moon Ting
   Ong, Simying
   Subramaniam, Hema
   Mustafa, Mumtaz Begum
   Chiam, Yin Kia
TI Test case information extraction from requirements specifications using
   NLP-based unified boilerplate approach
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Natural language processing; Test case generation; Automation; Software
   requirements; Software Testing; Test Case
ID TEST-CASE GENERATION; AUTOMATIC-GENERATION
AB Automated testing which extracts essential information from software requirements written in natural language offers a cost-effective and efficient solution to error-free software that meets stakeholders' requirements in the software industry. However, natural language can cause ambiguity in requirements and increase the challenges of automated testing such as test case generation. Negative requirements also cause inconsistency and are often neglected. This research aims to extract test case information (actors, conditions, steps, system response) from positive and negative requirements written in natural language (i.e. English) using natural language processing (NLP). We present a unified boilerplate that combines Rupp's and EARS boilerplates, and serves as the grammar guideline for requirements analysis. Extracted information is populated in a test case template, becoming the building blocks for automated test case generation. An experiment was conducted with three public requirements specifications from PURE datasets to investigate the correctness of information extracted using this proposed approach. The results presented correctness of 50 % (Mdot), 61.7 % (Pointis) and 10 % (Npac) on information extracted. The lower correctness on negative over positive requirements was observed. The correctness by specific categories is also analysed, revealing insights into actors, steps, conditions, and system response extracted from positive and negative requirements.
C1 [Lim, Jin Wei; Chiew, Thiam Kian; Su, Moon Ting; Ong, Simying; Subramaniam, Hema; Mustafa, Mumtaz Begum; Chiam, Yin Kia] Univ Malaya, Fac Comp Sci & Informat Technol, Dept Software Engn, Kuala Lumpur 50603, Malaysia.
C3 Universiti Malaya
RP Chiew, TK (corresponding author), Univ Malaya, Fac Comp Sci & Informat Technol, Dept Software Engn, Kuala Lumpur 50603, Malaysia.
EM tkchiew@um.edu.my
RI SUBRAMANIAM, HEMA/AAA-8502-2022; Mustafa, Mumtaz Begum/A-7277-2013;
   Chiew, Thiam Kian/B-8382-2010; CHIAM, YIN KIA/B-8380-2010; Ong,
   SimYing/A-7559-2011
OI SUBRAMANIAM, HEMA/0000-0002-0663-5678; Mustafa, Mumtaz
   Begum/0000-0002-2835-4084; Chiew, Thiam Kian/0000-0002-4272-7860; CHIAM,
   YIN KIA/0000-0003-1107-7719; Ong, SimYing/0000-0002-6876-3050
FU Universiti Malaya, Malaysia [GPF097B-2020-A]
FX <STRONG> </STRONG>This research was supported by Universiti Malaya,
   Malaysia under the RU Grant GPF097B-2020-A Model-driven Approach For
   Generation Of Positive And Negative Requirements Based On Use Cases
   Written In Natural Languages.
CR [Anonymous], 2008, IEEE Std, DOI [DOI 10.1109/IEEESTD.2008.4578383, 10.1109/IEEESTD.2008.4578383]
   Aoyama Y., 2020, IEEE ICCE, DOI [10.1109/icce46568.2020.9043022, DOI 10.1109/icce46568.2020.9043022]
   Aoyama Y, 2021, CONSUM COMM NETWORK, DOI 10.1109/CCNC49032.2021.9369549
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Arora C, 2014, INT WORKSH REQUIRE, P1, DOI 10.1109/RePa.2014.6894837
   Bird S., 2009, Natural Language Processing with Python, DOI DOI 10.5555/1717171
   Carvalho G, 2014, SCI COMPUT PROGRAM, V95, P275, DOI 10.1016/j.scico.2014.06.007
   Hue CTM, 2019, INT J SOFTW ENG KNOW, V29, P1313, DOI 10.1142/S0218194019500414
   Ferrari A, 2017, INT REQUIR ENG CONF, P502, DOI 10.1109/RE.2017.29
   Fischbach J, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P263, DOI 10.1109/REW.2019.00053
   Gropler R., 2021, CEUR WORKSHOP PROC, V21, P18
   Lindsay PA, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P118, DOI 10.1109/ASWEC.2015.23
   Loper E., 2002, NLTK P ACL 02 WORKSH, DOI [10.3115/1118108.1118117, DOI 10.3115/1118108.1118117]
   Mai PX, 2018, PROC INT SYMP SOFTW, P58, DOI [10.1109/ISSRE.2018.00017, 10.1109/1SSRE.2018.00017]
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Mustafa A, 2021, CMC-COMPUT MATER CON, V67, P1819, DOI 10.32604/cmc.2021.014391
   Salam M.A., 2022, Int. J. Comput. Appl., V183, P12, DOI [10.5120/ijca2022921919, DOI 10.5120/IJCA2022921919]
   Shweta, 2020, J INTELL FUZZY SYST, V39, P2047, DOI 10.3233/JIFS-179871
   Tiwari S., 2022, NL2RT: a tool to translate natural language text into requirements templates (RTs), P262, DOI [10.1109/RE54965.2022.00035, DOI 10.1109/RE54965.2022.00035]
   Tiwari S, 2019, PROCEEDINGS OF THE 12TH INNOVATIONS ON SOFTWARE ENGINEERING CONFERENCE (ISEC), DOI 10.1145/3299771.3299774
   Wang CH, 2022, IEEE T SOFTWARE ENG, V48, P585, DOI 10.1109/TSE.2020.2998503
NR 22
TC 0
Z9 0
U1 10
U2 10
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 112005
DI 10.1016/j.jss.2024.112005
EA FEB 2024
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NU3Z4
UT WOS:001202941800001
DA 2024-08-05
ER

PT J
AU Heldal, R
   Nguyen, NT
   Moreira, A
   Lago, P
   Duboc, L
   Betz, S
   Coroama, VC
   Penzenstadler, B
   Porras, J
   Capilla, R
   Brooks, I
   Oyedeji, S
   Venters, CC
AF Heldal, Rogardt
   Nguyen, Ngoc-Thanh
   Moreira, Ana
   Lago, Patricia
   Duboc, Leticia
   Betz, Stefanie
   Coroama, Vlad C.
   Penzenstadler, Birgit
   Porras, Jari
   Capilla, Rafael
   Brooks, Ian
   Oyedeji, Shola
   Venters, Colin C.
TI Sustainability competencies and skills in software engineering: An
   industry perspective
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Sustainability; Software engineering; Education; Software competencies;
   Sustainable development goals; Skills
AB Context: Achieving the UN Sustainable Development Goals (SDGs) demands a shift by industry, governments, society, and individuals to reach adequate levels of awareness and actions to address sustainability challenges. Software systems will play an important role in moving towards these targets. Sustainability skills are necessary to support the development of software systems and to provide sustainable IT -supported services for citizens. Gap: While there is a growing number of academic bodies including sustainability education in engineering and computer science curricula, there is not yet comprehensive research on the competencies and skills required by IT professionals to develop such systems. Research goal: This study aims to identify the industrial sustainability needs for education and training from software engineers' perspective. For this, we answer the following questions: (1) what are the interests of organisations with an IT division with respect to sustainability? (2) what do organisations want to achieve with respect to sustainability, and how? and (3) what are the sustainability-related competencies and skills that organisations need to achieve their sustainability goals? Methodology: We conducted a qualitative study with interviews and focus groups with experts from twentyeight organisations with an IT division from nine countries to understand their interests, goals, and achievements related to sustainability, and the skills and competencies needed to achieve their goals. Results: Our findings show that organisations are interested in sustainability, both idealistically and increasingly for core business reasons. They seek to improve the sustainability of software processes and products but encounter difficulties, like the trade-off between short-term financial profitability and long-term sustainability goals or an unclear understanding of sustainability concepts from a software engineering perspective. To fill these gaps, they have promoted in-house training courses, collaborated with universities, and sent employees to external training. The acquired competencies should support translating environmental and social benefits into economic ones and make sustainability an integral part of software development.
C1 [Heldal, Rogardt; Nguyen, Ngoc-Thanh] Western Norway Univ Appl Sci, Bergen, Norway.
   [Moreira, Ana] NOVA Univ Lisbon, NOVA Sch Sci & Technol, NOVA LINCS, Lisbon, Portugal.
   [Lago, Patricia] Vrije Univ Amsterdam, Amsterdam, Netherlands.
   [Duboc, Leticia] Univ Ramon Llull, Barcelona, Spain.
   [Betz, Stefanie] Furtwangen Univ, Furtwangen, Germany.
   [Coroama, Vlad C.] Roegen Ctr Sustainabil, Zurich, Switzerland.
   [Coroama, Vlad C.] Tech Univ Berlin, Berlin, Germany.
   [Penzenstadler, Birgit] Chalmers Univ Technol, Gothenburg, Sweden.
   [Betz, Stefanie; Penzenstadler, Birgit; Porras, Jari; Capilla, Rafael; Oyedeji, Shola] LUT Univ, Lappeenranta, Finland.
   [Porras, Jari; Capilla, Rafael] Univ Rey Juan Carlos, Mostoles, Spain.
   [Brooks, Ian] Univ West England Bristol, Bristol, England.
   [Venters, Colin C.] Univ Huddersfield, Huddersfield, England.
   [Venters, Colin C.] European Org Nucl Res CERN, Meyrin, Switzerland.
   [Porras, Jari] Aalto Univ, Aalto, Finland.
C3 Western Norway University of Applied Sciences; Universidade Nova de
   Lisboa; Vrije Universiteit Amsterdam; Universitat Ramon Llull; Technical
   University of Berlin; Chalmers University of Technology;
   Lappeenranta-Lahti University of Technology LUT; Universidad Rey Juan
   Carlos; University of Huddersfield; Aalto University
RP Heldal, R (corresponding author), Western Norway Univ Appl Sci, Bergen, Norway.
EM rohe@hvl.no
RI Penzenstadler, Birgit S/B-1582-2015; Betz, Stefanie/AGI-1451-2022;
   Venters, Colin/T-9541-2019; Lago, Patricia/ABH-2308-2020; Moreira,
   Ana/F-4770-2011
OI Penzenstadler, Birgit S/0000-0002-5771-0455; Betz,
   Stefanie/0000-0002-3613-5893; Venters, Colin/0000-0001-8664-9107; Lago,
   Patricia/0000-0002-2234-0845; Moreira, Ana/0000-0003-2046-2766
FU SFI SmartOcean NFR, Norway [309612/F40]; KISS, United States
   [16DHBKI061]; Federal Ministry of Education and Research, Germany; NOVA
   LINCS, Portugal [UIDB/04516/2020]; Catalan Government (Departament de
   Recerca i Universitats) [2021 SGR 01396]; VU Digital Sustainability
   Center (DiSC), the Netherlands; FCT.IP, Portugal, Portugal
FX The authors would like to thank all the interviewees who took part in
   the study and the reviewers for their valuable feedback. This work is
   supported by SFI SmartOcean NFR, Norway Project 309612/F40, by KISS,
   United States (16DHBKI061) with the financial support of the Federal
   Ministry of Education and Research, Germany, by NOVA LINCS, Portugal
   (UIDB/04516/2020) with the financial support of FCT.IP, Portugal,
   Portugal, by the Catalan Government (Departament de Recerca i
   Universitats) for the grant 2021 SGR 01396 given to the HER group, and
   by the funding from the VU Digital Sustainability Center (DiSC) , the
   Netherlands.
CR [Anonymous], 2017, Education at a glance 2017: OECD indicators, DOI DOI 10.1787/EAG-2017-EN
   Becker C, 2016, IEEE SOFTWARE, V33, P56, DOI 10.1109/MS.2015.158
   Becker C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P467, DOI 10.1109/ICSE.2015.179
   Betz S., 2022, P 55 HAW INT C SYST
   Bocken NMP, 2020, LONG RANGE PLANN, V53, DOI 10.1016/j.lrp.2019.101950
   Brundtland G.H., Technical Report A/42/427
   Chitchyan R, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P533, DOI 10.1145/2889160.2889217
   Cohen L., 2018, Research Methods in Education, DOI [10.4324/9781315456539, DOI 10.4324/9781315456539]
   Cooper V, 2017, INFORM SYST J, V27, P379, DOI 10.1111/isj.12109
   Coroama Vlad C., 2019, P 6 INT C ICT SUST I
   Coroama Vlad C., 2009, EnviroInfo, V2, P347
   de Souza M.R., 2014, 2 WORKSH SUST SOFTW
   Dzhengiz T, 2020, J BUS ETHICS, V162, P881, DOI 10.1007/s10551-019-04360-z
   Easterbrook S., 2008, Guide to Advanced Empirical Software Eng, P285, DOI [10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-5_11]
   Escoto X, 2022, J CLEAN PROD, V338, DOI 10.1016/j.jclepro.2022.130589
   Eurostat, 2008, European Communities: Methodologies and working papers
   Groher I, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P350, DOI 10.1109/SEAA.2017.70
   Hilty LM, 2015, ADV INTELL SYST, V310, P3, DOI 10.1007/978-3-319-09228-7_1
   Judith H., 2022, The importance of skills for the sustainability of business
   Karita L., 2021, J. Softw. Eng. Res. Dev., V9, P1
   Kasurinen J, 2017, INT WORKS EMERG TREN, P15, DOI 10.1109/WETSoM.2017.3
   Kontio J., 2008, Guide to advanced empirical software engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54]
   Lago P., 2013, ACM SIGSOFT Softw. Eng. Not., V38, P31, DOI 10.1145/2413038.2413062
   Lago P, 2015, COMMUN ACM, V58, P70, DOI 10.1145/2714560
   Malmodin J, 2014, PROCEEDINGS OF THE 2014 CONFERENCE ICT FOR SUSTAINABILITY, P179
   Mann Samuel, 2011, The Green Graduate: Educating Every Student as a Sustainable Practitioner
   Morgenstern EK, 2007, FOREST CHRON, V83, P485, DOI 10.5558/tfc83485-4
   Oppenheim J., 2017, Bus. Sustain. Dev. Comm.
   Rogers M, 2015, INT J SUST HIGHER ED, V16, P523, DOI 10.1108/IJSHE-02-2013-0018
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seele P, 2017, SUSTAIN SCI, V12, P183, DOI 10.1007/s11625-017-0426-4
   Stone Jeffrey A., 2019, International Journal of Modern Education and Computer Science11, V2, P1
   Terrafinity, 2023, Sustainability skills for everyone ...  not just the professionals ...
   Vaismoradi M., 2016, FORUM QUAL SOC RES, V6, P100, DOI DOI 10.5430/JNEP.V6N5P100
   Vehovar V., 2016, SAGE HDB SURVEY METH, DOI DOI 10.4135/9781473957893.N22
   Venters CC, 2018, J SYST SOFTWARE, V138, P174, DOI 10.1016/j.jss.2017.12.026
   von Carlowitz H.-C., 1732, Sylvicultura Oeconomica Oder HauSSwirthliche Nachricht und NaturmaSSige Anweisung zur Wilden Baum-Zucht Nebst Grundlicher Darstellung Wie... dem allenthalben und insgemein einreissenden Grossen Holtz-Mangel, V1
   Watson MK, 2013, J CLEAN PROD, V61, P106, DOI 10.1016/j.jclepro.2013.09.010
NR 38
TC 0
Z9 0
U1 5
U2 5
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111978
DI 10.1016/j.jss.2024.111978
EA FEB 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KY5A2
UT WOS:001183529300001
OA hybrid, Green Submitted, Green Published
DA 2024-08-05
ER

PT J
AU Ferreira, F
   Borges, HS
   Valente, MT
AF Ferreira, Fabio
   Borges, Hudson Silva
   Valente, Marco Tulio
TI Refactoring react-based Web apps☆
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Refactoring; React; JavaScript; Software design
AB Refactoring is a well-known technique to improve software quality. However, there are relevant domains where refactoring has not been studied in-depth before, such as JavaScript front-end frameworks. To fill this gap, we empirically study refactorings that developers perform when maintaining and evolving REACT-based Web applications. By manually inspecting 320 refactoring commits performed in open source projects, we catalog 69 distinct refactoring operations of which 25 are specific to REACT code, 17 are adaptations of traditional refactorings for the REACT context, 22 are traditional refactorings, and six are specific to JavaScript and CSS code. The catalog of refactorings proposed in this article might support practitioners when improving the maintainability of REACT applications.
C1 [Ferreira, Fabio; Valente, Marco Tulio] Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, Brazil.
   [Ferreira, Fabio] Sudeste MG Campus Barbacena, Ctr Informat, Barbacena, Brazil.
   [Borges, Hudson Silva] UFMS, Dept Comp Sci, Belo Horizonte, Brazil.
C3 Universidade Federal de Minas Gerais; Universidade Federal de Mato
   Grosso do Sul
RP Ferreira, F (corresponding author), Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, Brazil.; Ferreira, F (corresponding author), Sudeste MG Campus Barbacena, Ctr Informat, Barbacena, Brazil.
EM fabio.ferreira@ifsudestemg.edu.br
FU CNPq; FAPEMIG; CAPES
FX Our research is supported by CNPq, FAPEMIG, and CAPES.
CR Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   Aniche M, 2018, EMPIR SOFTW ENG, V23, P2121, DOI 10.1007/s10664-017-9540-2
   Beck K., 2000, Extreme Programming Explained: Embrace Change
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Brito Aline, 2023, J. Softw.: Evol. Process, V1, P1
   Diniz JP, 2020, IEEE INT WORK C SO, P249, DOI 10.1109/SCAM51674.2020.00033
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Ferreira F, 2023, INFORM SOFTWARE TECH, V155, DOI 10.1016/j.infsof.2022.107111
   Ferreira F, 2022, SOFTWARE PRACT EXPER, V52, P947, DOI 10.1002/spe.3044
   Fowler M., 2018, Refactoring: improving the design of existing code
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Hora A, 2021, IEEE WORK CONF MIN S, P317, DOI 10.1109/MSR52588.2021.00044
   Hora A, 2020, EMPIR SOFTW ENG, V25, P1798, DOI 10.1007/s10664-020-09809-8
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Ksontini E, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P781, DOI 10.1109/ASE51524.2021.9678585
   Mazinanian D, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P496, DOI 10.1145/2635868.2635879
   Mesbah A, 2012, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2012.6227174
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Nederlof A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P4, DOI 10.1145/2591062.2591170
   Peruma A., 2020, P IEEE ACM 42 INT C, P350, DOI DOI 10.1145/3387940.3392189
   Schellinx Harold., 2012, Ultra
   Serdar CC, 2021, BIOCHEM MEDICA, V31, DOI 10.11613/BM.2021.010502
   Sharma T, 2015, IEEE SOFTWARE, V32, P44, DOI 10.1109/MS.2015.105
   Silva D, 2021, IEEE T SOFTWARE ENG, V47, P2786, DOI 10.1109/TSE.2020.2968072
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Tang YM, 2021, PROC INT CONF SOFTW, P238, DOI 10.1109/ICSE43902.2021.00033
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tsantalis Nikolaos, 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
NR 32
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
AR 112105
DI 10.1016/j.jss.2024.112105
EA JUN 2024
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UQ6V9
UT WOS:001249572500001
DA 2024-08-05
ER

PT J
AU Alanazi, A
   Alfayez, R
AF Alanazi, Afit
   Alfayez, Reem
TI What is discussed about Flutter on Stack Overflow (SO)
   question-and-answer (Q&A) website: An empirical study*
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Stack overflow; Flutter; Mobile development; Topic modeling; Empirical
   study
ID CORRELATION-COEFFICIENTS; AGREEMENT
AB Context: Mobile applications are growing in prevalence. Cross-platform application is one of the main challenges within mobile application development. Aiming to facilitate the process of mobile application development, the software engineering community developed multiple solutions to support cross-platform application development. Flutter is a recent cross-platform software development kit (SDK) that has been rising in popularity. Objective: This study aims to gain a better understanding of Flutter stance on Stack Overflow (SO). Method: The study identified and analyzed 176,876 Flutter-related questions to understand the interest towards Flutter. The study utilized Latent Dirichlet Allocation (LDA) to identify Flutter-related topics discussed within the identified questions. Subsequently, a number of heuristics were utilized to gauge the popularity and difficulty of topics. Results: The study revealed that interest towards Flutter was steadily increasing on SO until it dropped in 2023 and SO users discuss 12 Flutter-related topics, with the topic of setup and build automation being the most popular and most difficult. Conclusion: This study highlights the interest towards Flutter on SO, identifies Flutter-related topics discussed on the website, and assess the topics popularity and difficulty. Software researchers, practitioners, educators, and Flutter contributors may utilize the results to steer their future Flutter-related efforts.
C1 [Alanazi, Afit; Alfayez, Reem] King Saud Univ, Coll Comp & Informat Sci, Riyadh, Saudi Arabia.
C3 King Saud University
RP Alfayez, R (corresponding author), King Saud Univ, Coll Comp & Informat Sci, Riyadh, Saudi Arabia.
EM reealfayez@ksu.edu.sa
RI Alfayez, Reem/KJL-9125-2024; Alfayez, Reem/HTM-7118-2023
OI Alfayez, Reem/0000-0001-6782-247X; Alfayez, Reem/0000-0001-6782-247X
FU Deanship of Scientific Research (DSR) in King Saud University
FX The authors would like to thank Deanship of Scientific Research (DSR) in
   King Saud University for funding and supporting this research through
   the initiative of DSR Graduate Students Research Support (GSR) .
CR Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Abdi H., 2007, Encyclopedia of Measurement and Statistics, P508
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Alfayez R, 2022, 2022 IEEE/ACIS 20TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P106, DOI 10.1109/SERA54885.2022.9806760
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Beyer S, 2014, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSME.2014.88
   Bird S., 2009, Natural Language Processing with Python, DOI DOI 10.5555/1717171
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Ceci L., 2021, Mobile app usage-Statistics & facts
   Davis N., 2005, Softw. Tech News, V8, P3
   Fincher S, 2005, EXPERT SYST, V22, P89, DOI 10.1111/j.1468-0394.2005.00299.x
   Galitz W. O., 2007, The essential guide to user interface design: an introduction to GUI design principles and techniques
   Gisev N, 2013, RES SOC ADMIN PHARM, V9, P330, DOI 10.1016/j.sapharm.2012.04.004
   Han JX, 2020, EMPIR SOFTW ENG, V25, P2694, DOI 10.1007/s10664-020-09819-6
   Haque MU, 2020, P 14 ACM IEEE INT S, P1
   Hubert M., 2010, International Encyclopedia of Statistical Science
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Kitchenham Barbara Ann, 2015, Evidencebased software engineering and systematic reviews, V4
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Medhi J., 1992, Statistical Methods: An Introductory Text
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Miola A., 2020, Flutter complete reference: Create beautiful, fast and native apps for any device
   Payne R., 2019, Beginning app development with flutter: Create cross-platform mobile apps
   Puth MT, 2015, ANIM BEHAV, V102, P77, DOI 10.1016/j.anbehav.2015.01.010
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Rehurek R., 2010, P LREC 2010 WORKSH N, DOI DOI 10.13140/2.1.2393.1847
   Rombach H.D., 1994, Encycl. Softw. Eng., V1, P6
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Schober P, 2018, ANESTH ANALG, V126, P1763, DOI 10.1213/ANE.0000000000002864
   Silva CC, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10026-0
   Vailshery L.S., 2022, Cross-platform mobile frameworks used by software developers worldwide from 2019 to 2021
   Vendome C, 2019, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2019.00014
   Windmill E., 2020, Flutter in Action
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Zou J, 2017, INFORM SOFTWARE TECH, V84, P19, DOI 10.1016/j.infsof.2016.12.003
NR 40
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
AR 112089
DI 10.1016/j.jss.2024.112089
EA MAY 2024
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TP0E4
UT WOS:001242338500001
DA 2024-08-05
ER

PT J
AU Huang, FQ
   Madeira, H
AF Huang, Fuqun
   Madeira, Henrique
TI Advancing modern code review effectiveness through human error
   mechanisms
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code review; Human error; Developer; Software quality assurance;
   Cognitive psychology
ID SOFTWARE; INSPECTIONS
AB Modern code reviews tend to take a lightweight process, in which the accuracy and efficiency of identifying defects rely heavily on code reviewers' experience. The human errors of developers, as a significant cause of software defects, is a key to identifying defects. However, there is a lack of understanding of the human error mechanisms underlying defects in code. This paper proposes an innovative code review method for identifying defects by pinpointing the scenarios that developers tend to commit errors. The method was validated by two experimental studies that involved 40 participants of about 5 years' programming experience and modest code review experience. The experiment shows that the proposed method has significantly improved True Positives and Sensitivity by about 400 %, improved Precision by approximately 200 %, and reduced around one-third of False Positives. The effects were consistent across different tasks and different code reviewers.
C1 [Huang, Fuqun] Western Washington Univ, Dept Comp Sci, Bellingham, WA 98225 USA.
   [Madeira, Henrique] Univ Coimbra, Syst Univ Coimbra, Ctr Informat, P-3030790 Coimbra, Portugal.
C3 Western Washington University; Universidade de Coimbra
RP Huang, FQ (corresponding author), Western Washington Univ, Dept Comp Sci, Bellingham, WA 98225 USA.
EM huangf2@wwu.edu
RI Huang, Fuqun/E-5467-2013
OI Huang, Fuqun/0000-0001-7973-5808
FU European Social Fund [CISUCUID/CEC/00326/2020]
FX This work was supported in part by the Grant CISUCUID/CEC/00326/2020,
   funded in part by the European Social Fund, through the Regional
   Operational Program Centro 2020. We are especially thankful to all the
   participants of the study.
CR [Anonymous], 1990, IEEE Std 610.12-1990, DOI DOI 10.1109/IEEESTD.1990.101064
   Anu V, 2016, PROC INT SYMP SOFTW, P65, DOI 10.1109/ISSRE.2016.41
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Baum T, 2019, EMPIR SOFTW ENG, V24, P1762, DOI 10.1007/s10664-018-9676-8
   Baum T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P85, DOI 10.1145/2950290.2950323
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Byrne MD, 1997, COGNITIVE SCI, V21, P31, DOI 10.1016/S0364-0213(99)80018-4
   Chen Q., 2022, P 44 INT C SOFTW ENG
   Davila N, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110951
   Dogan E, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106737
   Dunsmore A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P467, DOI 10.1109/ICSE.2000.870437
   Duraes J, 2016, PROC INT SYMP SOFTW, P87, DOI 10.1109/ISSRE.2016.53
   Ebert F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09909-5
   Fagan ME, 1999, IBM SYST J, V38, P258, DOI 10.1147/sj.382.0258
   Fan YR, 2018, EMPIR SOFTW ENG, V23, P3346, DOI 10.1007/s10664-018-9602-0
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Goncalves Pavlina Wurzel, 2022, Proceedings of the ACM on Human-Computer Interaction, V6, DOI 10.1145/3512945
   Gonçalves PW, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10123-8
   Hijazi H., 2022, IEEE Trans. Softw. Eng., P1
   Hijazi H, 2023, IEEE T SOFTWARE ENG, V49, P626, DOI 10.1109/TSE.2022.3158543
   Hijazi H, 2021, PROC INT SYMP SOFTW, P476, DOI 10.1109/ISSRE52982.2021.00056
   Hong Y, 2022, EUR CON SFTWR MTNCE, P1034, DOI 10.1109/SANER53432.2022.00121
   Huang AFQ, 2012, PROCEEDINGS 18TH ISSAT INTERNATIONAL CONFERENCE ON RELIABILITY & QUALITY IN DESIGN, P44
   Huang F., 2021, 32 INT S SOFTW REL E
   Huang F., 2016, 9 INT WORKSH COOP HU
   Huang FQ, 2023, IEEE ACCESS, V11, P3626, DOI 10.1109/ACCESS.2023.3234490
   Huang FQ, 2017, CHINESE J AERONAUT, V30, P1054, DOI 10.1016/j.cja.2017.03.005
   Kalyan A, 2016, IEEE INT C ENG COMP, P191, DOI [10.1109/ICECCS.2016.21, 10.1109/ICECCS.2016.032]
   Khoshnoud F, 2022, IEEE WORK CONF MIN S, P137, DOI 10.1145/3524842.3527997
   Kitagawa N, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P64, DOI [10.1145/2897586.2897605, 10.1109/CHASE.2016.022]
   Laitenberger O, 1997, INFORM SOFTWARE TECH, V39, P781, DOI 10.1016/S0950-5849(97)00030-X
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mirsaeedi E, 2020, PROC INT CONF SOFTW, P1183, DOI 10.1145/3377811.3380335
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Perry DE, 2002, IEEE T SOFTWARE ENG, V28, P695, DOI 10.1109/TSE.2002.1019483
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Reason J.T., 1990, Human error, DOI [DOI 10.1017/CBO9781139062367, 10.1017/CBO9781139062367]
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Spadini D, 2019, PROC INT CONF SOFTW, P1061, DOI 10.1109/ICSE.2019.00110
   Thongtanunam P, 2021, IEEE T SOFTWARE ENG, V47, P2698, DOI 10.1109/TSE.2020.2964660
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tufano R, 2022, PROC INT CONF SOFTW, P2291, DOI 10.1145/3510003.3510621
   Wilkerson JW, 2012, IEEE T SOFTWARE ENG, V38, P547, DOI 10.1109/TSE.2011.46
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
NR 47
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112060
DI 10.1016/j.jss.2024.112060
EA MAY 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SV2O5
UT WOS:001237159400001
OA hybrid
DA 2024-08-05
ER

PT J
AU Li, ZY
   Cai, GZ
   Yu, QY
   Liang, P
   Mo, R
   Liu, H
AF Li, Zengyang
   Cai, Guangzong
   Yu, Qinyi
   Liang, Peng
   Mo, Ran
   Liu, Hui
TI Bug priority change: An empirical study on Apache projects
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Bug priority change; Open source software; Empirical study
AB In issue tracking systems, each bug is assigned a priority level (e.g., Blocker, Critical, Major, Minor, or Trivial in JIRA from highest to lowest), which indicates the urgency level of the bug. In this sense, understanding bug priority changes helps to arrange the work schedule of participants reasonably, and facilitates a better analysis and resolution of bugs. According to the data extracted from JIRA deployed by Apache, a proportion of bugs in each project underwent priority changes after such bugs were reported, which brings uncertainty to the bug fixing process. However, there is a lack of in-depth investigation on the phenomenon of bug priority changes, which may negatively impact the bug fixing process. Thus, we conducted a quantitative empirical study on bugs with priority changes through analyzing 32 non -trivial Apache open source software projects. The results show that: (1) 8.3% of the bugs in the selected projects underwent priority changes; (2) the median priority change time interval is merely a few days for most (28 out of 32) projects, and half (50. 7%) of bug priority changes occurred before bugs were handled; (3) for all selected projects, 87.9% of the bugs with priority changes underwent only one priority change, most priority changes tend to shift the priority to its adjacent priority, and a higher priority has a greater probability to undergo priority change; (4) bugs that require bug -fixing changes of higher complexity or that have more comments are likely to undergo priority changes; and (5) priorities of bugs reported or allocated by a few specific participants are more likely to be modified, and maximally only one participant in each project tends to modify priorities.
C1 [Li, Zengyang; Cai, Guangzong; Yu, Qinyi; Mo, Ran] Cent China Normal Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Li, Zengyang; Cai, Guangzong; Yu, Qinyi; Mo, Ran] Cent China Normal Univ, Hubei Prov Key Lab Artificial Intelligence & Smar, Wuhan, Peoples R China.
   [Liang, Peng] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Liu, Hui] Huazhong Univ Sci & Technol, Sch Artificial Intelligence & Automat, Wuhan, Peoples R China.
C3 Central China Normal University; Central China Normal University; Wuhan
   University; Huazhong University of Science & Technology
RP Liang, P (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
EM zengyangli@ccnu.edu.cn; guangzongcai@mails.ccnu.edu.cn;
   qinyiyu@mails.ccnu.edu.cn; liangp@whu.edu.cn; moran@ccnu.edu.cn;
   hliu@hust.edu.cn
FU Natural Science Foundation of Hubei Province of China [2021CFB577];
   National Natural Science Foundation of China [62176099, 62172311];
   Knowledge Innovation Program of Wuhan-Shuguang Project
   [2022010801020280]
FX This work is supported by the Natural Science Foundation of Hubei
   Province of China under Grant No. 2021CFB577, the National Natural
   Science Foundation of China under Grant Nos. 62176099 and 62172311, and
   the Knowledge Innovation Program of Wuhan-Shuguang Project under Grant
   No. 2022010801020280.
CR Akbarinasaji S, 2018, J SYST SOFTWARE, V136, P173, DOI 10.1016/j.jss.2017.02.021
   Al-Sabbagh K, 2022, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2022, P42, DOI 10.1145/3558489.3559070
   Alenezi M, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P112, DOI 10.1109/ICMLA.2013.114
   Almhana R, 2020, IEEE INT WORK C SO, P87, DOI 10.1109/SCAM51674.2020.00015
   Apache, 2023, Guidelines for creating a Jira ticket
   Basili V.R., 1992, SOFTWARE MODELING ME
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Chauhan Ambuj, 2020, Computing in Engineering and Technology. Proceedings of ICCET 2019. Advances in Intelligent Systems and Computing (AISC 1025), P327, DOI 10.1007/978-981-32-9515-5_31
   Cheng C, 2017, J COMPUT SCI TECH-CH, V32, P396, DOI 10.1007/s11390-017-1728-9
   Etemadi V, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110967
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Field A., 2013, Discovering Statistics using IBM SPSS Statistics, Vthird, P374, DOI DOI 10.1016/B978-012691360-6/50012-4
   Gavidia-Calderon C, 2021, IEEE T SOFTWARE ENG, V47, P2143, DOI 10.1109/TSE.2019.2944608
   Gökçeoglu M, 2021, J SYST SOFTWARE, V179, DOI 10.1016/j.jss.2021.110993
   Habayeb M, 2018, IEEE T SOFTWARE ENG, V44, P1224, DOI 10.1109/TSE.2017.2757480
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Izadi M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10085-3
   Kanwal J, 2012, J COMPUT SCI TECH-CH, V27, P397, DOI 10.1007/s11390-012-1230-3
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kumari M., 2018, P 18 INT C INT SYST, P571
   Li Z., 2024, Replication package for "an exploratory study on just-in-time multi-programming-language bug prediction
   Li ZY, 2020, INT J SOFTW ENG KNOW, V30, P1779, DOI 10.1142/S0218194020400306
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Motwani M, 2018, EMPIR SOFTW ENG, V23, P2901, DOI [10.1007/s10664-017-9550-0, 10.1145/3180155.3182533]
   Najafi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P279, DOI 10.1145/3338906.3338944
   Oliveira E, 2020, EMPIR SOFTW ENG, V25, P2519, DOI 10.1007/s10664-020-09820-z
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sharma M, 2012, INT CONF INTELL SYST, P539, DOI 10.1109/ISDA.2012.6416595
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Tian Y, 2016, EMPIR SOFTW ENG, V21, P2298, DOI 10.1007/s10664-015-9409-1
   Vieira RG, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10213-7
   Yu L, 2010, LECT NOTES ARTIF INT, V6441, P356, DOI 10.1007/978-3-642-17313-4_35
   Yuan W, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106234
   Zou WQ, 2020, IEEE T SOFTWARE ENG, V46, P836, DOI 10.1109/TSE.2018.2870414
NR 35
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2024
VL 212
AR 112019
DI 10.1016/j.jss.2024.112019
EA MAR 2024
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QE2S1
UT WOS:001219142700001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Macedo, JN
   Rodrigues, E
   Viera, M
   Saraiva, J
AF Macedo, Jose Nuno
   Rodrigues, Emanuel
   Viera, Marcos
   Saraiva, Joao
TI Zipper-based embedding of strategic attribute grammars
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Strategic programming; Attribute grammars; Functional zippers
AB Strategic term re-writing and attribute grammars are two powerful programming techniques widely used in language engineering. The former relies on strategies to apply term re-write rules in defining largescale language transformations, while the latter is suitable to express context-dependent language processing algorithms. These two techniques can be expressed and combined via a powerful navigation abstraction: generic zippers. This results in a concise zipper-based embedding offering the expressiveness of both techniques. In addition, we increase the functionalities of strategic programming, enabling the definition of outwards traversals; i.e. outside the starting position. Such elegant embedding has a severe limitation since it recomputes attribute values. This paper presents a proper and efficient embedding of both techniques. First, attribute values are memoized in the zipper data structure, thus avoiding their re-computation. Moreover, strategic zipper based functions are adapted to access such memoized values. We have hosted our memoized zipper-based embedding of strategic attribute grammars both in the Haskell and Python programming languages. Moreover, we benchmarked the libraries supporting both embedding against the state-of-the-art Haskell-based Strafunski and Scala-based Kiama libraries. The first results show that our Haskell Ztrategic library is very competitive against those two well established libraries.
C1 [Macedo, Jose Nuno; Rodrigues, Emanuel; Saraiva, Joao] Univ Minho, HASLab, Braga, Portugal.
   [Macedo, Jose Nuno; Rodrigues, Emanuel; Saraiva, Joao] Univ Minho, INESC TEC, Braga, Portugal.
   [Viera, Marcos] Univ la Republ, Montevideo, Uruguay.
C3 Universidade do Minho; Universidade do Minho; INESC TEC; Universidad de
   la Republica, Uruguay
RP Macedo, JN (corresponding author), Univ Minho, HASLab, Braga, Portugal.; Macedo, JN (corresponding author), Univ Minho, INESC TEC, Braga, Portugal.
EM jose.n.macedo@inesctec.pt; jose.e.rodrigues@inesctec.pt;
   mviera@fing.edu.uy; saraiva@di.uminho.pt
RI Saraiva, João/L-6113-2015
OI Saraiva, João/0000-0002-5686-7151; Macedo, Jose Nuno/0000-0002-0282-5060
CR Adams MD, 2010, WGP 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON GENERIC PROGRAMMING, P13
   Almeida JB, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3236777
   Balland E, 2007, LECT NOTES COMPUT SC, V4533, P36
   BIRD RS, 1984, ACTA INFORM, V21, P239, DOI 10.1007/BF00264249
   Burger Christoff., PROC 2015 ACM SIGPLA, DOI DOI 10.1145/2814251.2814257
   Cordy J.R., 2004, Electron. Notes Theor. Comput. Sci, V110, P3, DOI [DOI 10.1016/J.ENTCS.2004.11.006, https://doi.org/10.1016/j.entcs.2004.11.006, 10.1016/j.entcs.2004.11.006]
   Cowie J., 2005, Tech. Rep.
   Ekman T, 2007, ACM SIGPLAN NOTICES, V42, P1, DOI 10.1145/1297105.1297029
   Fernandes JP, 2019, SCI COMPUT PROGRAM, V173, P71, DOI 10.1016/j.scico.2018.10.006
   GRAY RW, 1992, COMMUN ACM, V35, P121, DOI 10.1145/129630.129637
   Huet G., 1997, Journal of Functional Programming, V7, P549, DOI 10.1017/S0956796897002864
   Knuth D. E., 1968, Mathematical Systems Theory, V2, P127, DOI 10.1007/BF01692511
   KNUTH DE, 1990, LECT NOTES COMPUT SC, V461, P1
   Kramer L, 2020, PROCEEDINGS OF THE 13TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, SLE 2020, P210, DOI 10.1145/3426425.3426943
   Kuiper M, 1998, LECT NOTES COMPUT SC, V1383, P298
   Lammel R., 2002, Practical Aspects of Declarative Languages. 4th International Symposium, PADL 2002. Proceedings (Lecture Notes in Computer Science Vol.2257), P137
   Luttik Sebastiaan P., 1997, Proceedings of the 2nd International Conference on Theory and Practice of Algebraic Specifications, Algebraic'97, page, P9
   Macedo Jose Nuno, 2023, PEPM 2023: Proceedings of the 2023 ACM SIGPLAN International Workshop on Partial Evaluation and Program Manipulation, P41, DOI 10.1145/3571786.3573019
   Macedo Jose Nuno, 2022, Functional and Logic Programming: 16th International Symposium, FLOPS 2022, Proceedings. Lecture Notes in Computer Science (13215), P112, DOI 10.1007/978-3-030-99461-7_7
   Martins P, 2016, SCI COMPUT PROGRAM, V132, P2, DOI 10.1016/j.scico.2016.03.005
   Martins P, 2013, LECT NOTES COMPUT SC, V8129, P135, DOI 10.1007/978-3-642-40922-6_10
   MERNIK M, 1995, SIGPLAN NOTICES, V30, P71, DOI 10.1145/202176.202185
   REPS T, 1984, SIGPLAN NOTICES, V19, P42, DOI 10.1145/390011.808247
   Saraiva J, 2002, LECT NOTES COMPUT SC, V2487, P268
   Sheard T, 2002, ACM SIGPLAN NOTICES, V37, P60, DOI 10.1145/636517.636528
   Sloane AM, 2014, LECT NOTES COMPUT SC, V8706, P191, DOI 10.1007/978-3-319-11245-9_11
   Sloane AM, 2010, ELECTRON NOTES THEOR, V253, P205, DOI 10.1016/j.entcs.2010.08.043
   Söderberg E, 2013, LECT NOTES COMPUT SC, V8225, P302, DOI 10.1007/978-3-319-02654-1_17
   Swierstra SD, 1999, LECT NOTES COMPUT SC, V1608, P150
   van den Brand M. G. J., 2001, Electronic Notes in Theoretical Computer Science, V44, DOI 10.1016/S1571-0661(04)80917-4
   Van Wyk E, 2008, ELECTRON NOTES THEOR, V203, P103, DOI 10.1016/j.entcs.2008.03.047
   Visser E., 2001, Rewriting Techniques and Applications. 12th International Conference, RTA 2001. Proceedings (Lecture Notes in Computer Science Vol.2051), P357
   VOGT HH, 1989, SIGPLAN NOTICES, V24, P131, DOI 10.1145/74818.74830
NR 34
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111975
DI 10.1016/j.jss.2024.111975
EA FEB 2024
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT2N9
UT WOS:001202641500001
OA hybrid
DA 2024-08-05
ER

PT J
AU Jorgensen, M
AF Jorgensen, Magne
TI A systematic literature review on characteristics of the front-end phase
   of agile software development projects and their connections to project
   success
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Agile software development; Cost estimation; Benefits estimation;
   Front-end phase
AB Context: Software development of new products and services often involves a front-end phase where user needs are analysed, costs and benefits are estimated, and initial plans are created. Goal: This study aims to learn more about how the introduction of agile software development has affected practices and outcomes related to cost and benefit estimation in this front-end phase and to understand better what would improve this phase. Method: We identified, reviewed and aggregated the results from 42 relevant research articles by searching literature databases and snowballing relevant articles. Results: The front-end phase of agile was found to be, on average, similar and just as comprehensive as that of non-agile software development. This may be unfortunate, given the finding that more successful agile software development is connected with less detail in cost estimation and planning-related activities. A less comprehensive front-end phase may be especially beneficial for low-risk agile software development. Conclusion: The results of this review suggest that agile principles, so far, have had a limited influence on the front-end phase. We recommend more flexibility and context-dependency in how the front-end phase of agile software development is conducted, including less comprehensive estimation and planning activities for low-risk software development contexts.
C1 [Jorgensen, Magne] Simula Metropolitan Ctr Digital Engn, Oslo, Norway.
RP Jorgensen, M (corresponding author), Simula Metropolitan Ctr Digital Engn, Oslo, Norway.
CR Abrahamsson P, 2017, Arxiv, DOI arXiv:1709.08439
   Bechtel J, 2022, IEEE T ENG MANAGE, V69, P3514, DOI 10.1109/TEM.2021.3130068
   Bilgaiyan S., 2017, J. Eng. Sci. Technol. Rev., V10, P52
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   Boehm B, 1996, IEEE SOFTWARE, V13, P73, DOI 10.1109/52.526834
   Choo AS, 2014, PROD OPER MANAG, V23, P1462, DOI 10.1111/poms.12219
   Cohen D., 2003, Dacs Soar Rep., V11
   Cohn M., 2005, Agile Estimating and Planning
   Dima A.M., 2018, J. Int. Stud. (2071-8330), V11
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Edison H, 2022, IEEE T SOFTWARE ENG, V48, P2709, DOI 10.1109/TSE.2021.3069039
   Edkins Andrew, 2013, Engineering Project Organization Journal, V3, P71, DOI 10.1080/21573727.2013.775942
   Fernández-Diego M, 2020, IEEE ACCESS, V8, P166768, DOI 10.1109/ACCESS.2020.3021664
   Furulund K.M., 2007, 7 INT C QUAL SOFT QS
   Halkjelsvik T, 2012, PSYCHOL BULL, V138, P238, DOI 10.1037/a0025996
   Hannay J.E., 2021, Benefit/Cost-Driven Software Development: With Benefit Points and Size Points
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Jorgensen M., 2014, P 18 INT C EV ASS SO
   Jorgensen M., 2023, AN 26 C IB AM ENG SO
   Jorgensen M, 2019, IEEE SOFTWARE, V36, P39, DOI 10.1109/MS.2018.2884863
   Kupiainen E, 2015, INFORM SOFTWARE TECH, V62, P143, DOI 10.1016/j.infsof.2015.02.005
   Lappi T, 2017, INT J MANAG PROJ BUS, V10, P263, DOI 10.1108/IJMPB-04-2016-0031
   Larsen ASA, 2021, ADM SCI, V11, DOI 10.3390/admsci11030066
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Mahnic V, 2012, J SYST SOFTWARE, V85, P2086, DOI 10.1016/j.jss.2012.04.005
   Meier SR, 2008, PROJ MANAG J, V39, P59, DOI 10.1002/pmj.20035
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Nguyen T.S., 2020, 10 INT C ENG PROJ PR
   Rainer A., 1999, P 6 INT SOFTW METR S
   Serrador P, 2015, IEEE T ENG MANAGE, V62, P462, DOI 10.1109/TEM.2015.2448059
   Serrador P, 2015, INT J PROJ MANAG, V33, P1040, DOI 10.1016/j.ijproman.2015.01.006
   Sudarmaningtyas P, 2021, PERTANIKA J SCI TECH, V29, P837, DOI 10.47836/pjst.29.2.08
   Usman M., 2014, P 10 INT C PRED MOD
   Usman Muhammad., 2015, P 19 INT C EV ASS SO, P1, DOI DOI 10.1145/2745802.2745813
   Vyas M., 2018, International Journal of Recent Research Aspects, V5, P1
   Wang L., 2007, 15 EUR C INF SYST
   Williams T, 2019, PROD PLAN CONTROL, V30, P1137, DOI 10.1080/09537287.2019.1594429
   Zwikael O., 2020, Public Adminstration Quarterly, V44, P331
   Zwikael O, 2023, IEEE T ENG MANAGE, V70, P220, DOI 10.1109/TEM.2021.3053585
NR 39
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112155
DI 10.1016/j.jss.2024.112155
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZL6R5
UT WOS:001275498700001
DA 2024-08-05
ER

PT J
AU Zhu, YH
   Wang, J
   Li, B
   Zhao, YQ
   Zhang, ZK
   Xiong, YM
   Chen, SP
AF Zhu, Yuhan
   Wang, Jian
   Li, Bing
   Zhao, Yuqi
   Zhang, Zekun
   Xiong, Yiming
   Chen, Shiping
TI MicroIRC: Instance-level Root Cause Localization for Microservice
   Systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Microservice; Root cause localization; Graph neural network; Service
   instance
ID DIAGNOSIS
AB The use of microservice architecture is gaining popularity in the development of web applications. However, identifying the root cause of a failure can be challenging due to the complexity of interconnected microservices, long service invocation links, dynamic changes in service states, and the abundance of service deployment nodes. Furthermore, as each microservice may have multiple instances, it can be difficult to identify instancelevel failures promptly and effectively when the microservice topology and failure types change dynamically. To address this issue, we propose MicroIRC (Instance-level Root Cause Localization for Microservice Systems), a novel metrics-based approach that localizes root causes at the instance level while exhibiting robustness to adapt to dynamic changes in topology and new types of anomalies. We begin by training a graph neural network to fit different root cause types based on extracted time series features of microservice system metrics. Next, we construct a heterogeneous weighted topology (HWT) of microservice systems and execute a personalized random walk to identify root cause candidates. These candidates, along with real-time metrics from the anomalous time window, are then fed into the trained graph neural network to generate a ranked root cause list. Experiments conducted on five real-world datasets demonstrate that MicroIRC can accurately locate the root cause of microservices at the instance level, achieving a precision rate of 93.1% for the top five results. Furthermore, compared to the state-of-the-art methods, MicroIRC can improve the accuracy of root cause localization by more than 17% at the service level and more than 11.5% at the instance level. Remarkably, it exhibits robustness in scenarios involving new failure types, achieving an accuracy of 84.2% for the top result amid dynamic topological changes.
C1 [Zhu, Yuhan; Wang, Jian; Li, Bing; Zhao, Yuqi; Zhang, Zekun; Xiong, Yiming] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Chen, Shiping] CSIRO, Data61, Eveleigh, Australia.
C3 Wuhan University; Commonwealth Scientific & Industrial Research
   Organisation (CSIRO)
RP Wang, J (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
EM jianwang@whu.edu.cn; bingli@whu.edu.cn
RI Chen, Shiping/B-7492-2011
OI Chen, Shiping/0000-0002-4603-0024; Zhao, Yuqi/0000-0002-2642-5109
FU National Natural Science Foundation of China [62032016]; Key Research
   and Development Program of Hubei Province [2021BAA031]; Foundation of
   Yunnan Key Lab of Service Computing [YNSC23102]
FX This work is supported by the National Natural Science Foundation of
   China (No. 62032016) , the Key Research and Development Program of Hubei
   Province (No. 2021BAA031) , and the Foundation of Yunnan Key Lab of
   Service Computing (No. YNSC23102) .
CR Akoglu L, 2015, DATA MIN KNOWL DISC, V29, P626, DOI 10.1007/s10618-014-0365-y
   Aubet F.-X., 2018, Measurements, V120, P160
   Baarzi AF, 2021, PROCEEDINGS OF THE 2021 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '21), P427, DOI 10.1145/3472883.3486999
   Brandón A, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110432
   Chakraborty S., 2023, P ACM WEB C 2023, P2905, DOI [10.1145/3543507.3583274, DOI 10.1145/3543507.3583274]
   Chen JJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P111, DOI 10.1109/ICSE-SEIP.2019.00020
   Chen PF, 2019, IEEE T SERV COMPUT, V12, P214, DOI 10.1109/TSC.2016.2607739
   Chen RB, 2022, LECT NOTES COMPUT SC, V13740, P264, DOI 10.1007/978-3-031-20984-0_18
   Chen YH, 2023, INFORM SOFTWARE TECH, V153, DOI 10.1016/j.infsof.2022.107083
   Cheng K, 2023, IEEE T PARALL DISTR, V34, P1294, DOI 10.1109/TPDS.2023.3238429
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Du QF, 2018, LECT NOTES COMPUT SC, V11337, P560, DOI 10.1007/978-3-030-05063-4_42
   Fu KH, 2022, IEEE T PARALL DISTR, V33, P1825, DOI 10.1109/TPDS.2021.3128037
   Gan Y, 2021, ASPLOS XXVI: TWENTY-SIXTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P135, DOI 10.1145/3445814.3446700
   Glorot X., 2011, P 14 INT C ART INT S, V15, P315, DOI DOI 10.1002/ECS2.1832
   Hamilton WL, 2017, ADV NEUR IN, V30
   He SL, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P60, DOI 10.1145/3236024.3236083
   He ZL, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556904
   Huo YT, 2023, PROC INT CONF SOFTW, P881, DOI 10.1109/ICSE48619.2023.00082
   Kandula S, 2009, SIGCOMM 2009, P243
   Li ZY, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P996, DOI 10.1145/3540250.3549092
   Li ZY, 2021, INT WORKSH QUAL SERV, DOI 10.1109/IWQOS52092.2021.9521340
   Li ZL, 2022, INT J SOFTW ENG KNOW, V32, P1155, DOI 10.1142/S0218194022500395
   Lin JJ, 2018, LECT NOTES COMPUT SC, V11236, P3, DOI 10.1007/978-3-030-03596-9_1
   Lin QW, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P102, DOI 10.1145/2889160.2889232
   Liu DW, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P338, DOI 10.1109/ICSE-SEIP52600.2021.00043
   Liu P, 2019, PROC INT SYMP SOFTW, P35, DOI 10.1109/ISSRE.2019.00014
   Ma M, 2022, IEEE T SERV COMPUT, V15, P1399, DOI 10.1109/TSC.2020.2993251
   Ma M, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P246, DOI 10.1145/3366423.3380111
   Ma M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P60, DOI [10.1109/ICWS.2019.00022, 10.1109/1CWS.2019.00022]
   Mariani L, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110464
   Marwede N, 2009, EUR CON SFTWR MTNCE, P47, DOI 10.1109/CSMR.2009.15
   Meng CY, 2023, IEEE INT CONF AUTOM, P53, DOI 10.1109/ASE56229.2023.00038
   Meng Y, 2020, 2020 IEEE/ACM 28TH INTERNATIONAL SYMPOSIUM ON QUALITY OF SERVICE (IWQOS), DOI 10.1109/iwqos49365.2020.9213058
   Myunghwan Kim, 2013, Performance Evaluation Review, V41, P93
   Pan Y., 2023, IEEE Trans. Dependable Secure Comput., P1
   Qiu HR, 2020, PROCEEDINGS OF THE 14TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '20), P805
   Sedghpour MRS, 2022, IEEE INT SYMP SERV O, P176, DOI 10.1109/SOSE55356.2022.00027
   Soldani J, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3501297
   Soldani J, 2022, LECT NOTES COMPUT SC, V13272, P74, DOI 10.1007/978-3-031-16092-9_6
   Sun Chang-Ai, 2023, 2023 IEEE International Conference on Web Services (ICWS), P7, DOI 10.1109/ICWS60048.2023.00013
   Tian Zhang, 1996, SIGMOD Record, V25, P103, DOI 10.1145/235968.233324
   Tong Ganghao, 2023, 2023 IEEE International Conference on Web Services (ICWS), P393, DOI 10.1109/ICWS60048.2023.00058
   Usman M, 2022, IEEE ACCESS, V10, P86904, DOI 10.1109/ACCESS.2022.3193102
   Wang HZ, 2019, PROC VLDB ENDOW, V12, P1942, DOI 10.14778/3352063.3352105
   Wang L., J. Softw.: Evol. Process., pe2433
   Wang P, 2018, 2018 18TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND GRID COMPUTING (CCGRID), P492, DOI 10.1109/CCGRID.2018.00076
   Weng JP, 2018, IEEE ACM T NETWORK, V26, P1646, DOI 10.1109/TNET.2018.2843805
   Wu CH, 2021, PROC INT SYMP SOFTW, P91, DOI 10.1109/ISSRE52982.2021.00022
   Wu L, 2021, LECT NOTES COMPUT SC, V12632, P85, DOI 10.1007/978-3-030-76352-7_13
   Wu L, 2020, IEEE IFIP NETW OPER, DOI 10.1109/noms47738.2020.9110353
   Wu L, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON CLOUD INTELLIGENCE (CLOUDINTELLIGENCE 2021), P31, DOI 10.1109/CloudIntelligence52565.2021.00015
   Xie SY, 2023, Arxiv, DOI arXiv:2303.14620
   Yu GB, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P3087, DOI 10.1145/3442381.3449905
   Yu YB, 2019, J NETW COMPUT APPL, V147, DOI 10.1016/j.jnca.2019.102441
   Yuan Y, 2019, IEEE INT CONF CLOUD, P124, DOI 10.1109/CLOUD.2019.00031
   Zhang L., 2020, IEEE INT C NETW SENS, P1
   Zhang L, 2022, IEEE T DEPEND SECURE, V19, P2695, DOI 10.1109/TDSC.2021.3069715
   Zhang ZY, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P86, DOI 10.1109/SEAA53835.2021.00020
   Zhao YQ, 2022, KNOWL-BASED SYST, V258, DOI 10.1016/j.knosys.2022.109983
   Zhou NWL, 2023, IEEE T SOFTWARE ENG, V49, P2722, DOI 10.1109/TSE.2022.3229221
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
NR 63
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112145
DI 10.1016/j.jss.2024.112145
EA JUN 2024
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YD2N2
UT WOS:001266484500001
DA 2024-08-05
ER

PT J
AU Quin, F
   Weyns, D
   Galster, M
   Silva, CC
AF Quin, Federico
   Weyns, Danny
   Galster, Matthias
   Silva, Camila Costa
TI A/B testing: A systematic literature review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE A/B testing; systematic literature review; A/B test engineering
ID SOFTWARE; EXPERIMENTATION; KNOWLEDGE; PRODUCT; MODELS
AB A/B testing, also referred to as online controlled experimentation or continuous experimentation, is a form of hypothesis testing where two variants of a piece of software are compared in the field from an end user's point of view. A/B testing is widely used in practice to enable data-driven decision making for software development. While a few studies have explored different facets of research on A/B testing, no comprehensive study has been conducted on the state-of-the-art in A/B testing. Such a study is crucial to provide a systematic overview of the field of A/B testing driving future research forward. To address this gap and provide an overview of the state-of-the-art in A/B testing, this paper reports the results of a systematic literature review that analyzed primary studies. The research questions focused on the subject of A/B testing, how A/B tests are designed and executed, what roles stakeholders have in this process, and the open challenges in the area. Analysis of the extracted data shows that the main targets of A/B testing are algorithms, visual elements, and workflow and processes. Single classic A/B tests are the dominating type of tests, primarily based in hypothesis tests. Stakeholders have three main roles in the design of A/B tests: concept designer, experiment architect, and setup technician. The primary types of data collected during the execution of A/B tests are product/system data, user-centric data, and spatio-temporal data. The dominating use of the test results are feature selection, feature rollout, continued feature development, and subsequent A/B test design. Stakeholders have two main roles during A/B test execution: experiment coordinator and experiment assessor. The main reported open problems are related to the enhancement of proposed approaches and their usability. From our study we derived three interesting lines for future research: strengthen the adoption of statistical methods in A/B testing, improving the process of A/B testing, and enhancing the automation of A/B testing.
C1 [Quin, Federico; Weyns, Danny] Distrinet, KU Leuven, Celestijnenlaan 200A, B-3000 Leuven, Belgium.
   [Weyns, Danny] Linnaeus Univ, Univ Platsen 1, S-35252 Vaxjo, Sweden.
   [Galster, Matthias; Silva, Camila Costa] Univ Canterbury, 69 Creyke Rd, Christchurch 8140, New Zealand.
C3 KU Leuven; Linnaeus University; University of Canterbury
RP Weyns, D (corresponding author), Distrinet, KU Leuven, Celestijnenlaan 200A, B-3000 Leuven, Belgium.; Weyns, D (corresponding author), Linnaeus Univ, Univ Platsen 1, S-35252 Vaxjo, Sweden.
EM federico-quin@hotmail.com; danny.weyns@lnu.se;
   matthias.galster@canterbury.ac.nz; camila.costasilva@canterbury.ac.nz
RI ; Weyns, Danny/J-1267-2018
OI Costa Silva, Camila Mariane/0000-0002-3690-1711; Quin,
   Federico/0000-0002-3065-1483; Weyns, Danny/0000-0002-1162-0817
CR Abhishek V, 2017, WWW'17 COMPANION: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P610, DOI 10.1145/3041021.3054196
   Agarwal D, 2014, WSDM'14: PROCEEDINGS OF THE 7TH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P173, DOI 10.1145/2556195.2556252
   Aharon M, 2019, PROCEEDINGS OF THE 28TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM '19), P2793, DOI 10.1145/3357384.3357801
   Aharon M, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1993, DOI 10.1145/3292500.3330740
   Aiello L, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P185, DOI 10.1145/2983323.2983840
   Akase R, 2021, LECT NOTE NETW SYST, V278, P172, DOI 10.1007/978-3-030-79725-6_17
   Alfaro-Flores R, 2021, 2021 XLVII LATIN AMERICAN COMPUTING CONFERENCE (CLEI 2021), DOI 10.1109/CLEI53233.2021.9639977
   Almeida J, 2022, LECT NOTE NETW SYST, V470, P532, DOI 10.1007/978-3-031-04829-6_48
   Amatriain X, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P2201, DOI 10.1145/2505515.2514701
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   [Anonymous], 2014, P 15 ACM C EC COMPUT, DOI [10.1145/2600057.2602871, DOI 10.1145/2600057.2602871]
   Appiktala N, 2017, IEEE INT CONF BIG DA, P1620, DOI 10.1109/BigData.2017.8258096
   Auer F, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106551
   Auer F, 2018, EUROMICRO CONF PROC, P335, DOI 10.1109/SEAA.2018.00062
   Bakshy E, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P108, DOI 10.1145/2736277.2741082
   Barajas Joel, P 6 INT WORKSHOP DAT, DOI DOI 10.1145/2351356.2351364
   Barajas Joel, 2012, P 6 INT WORKSHOP DAT, DOI DOI 10.1145/2351356.2351361
   Basili Victor R., 1994, The Goal Question Metric Approach, VI
   Blask T, 2013, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON E-BUSINESS (ICE-B 2013), P312
   Blask T, 2011, 2011 PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON E-BUSINESS (ICE-B 2011), P14
   Borisyuk F, 2021, KDD '21: PROCEEDINGS OF THE 27TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2584, DOI 10.1145/3447548.3467081
   Borodovsky Slava, 2011, 2011 IEEE 11 INT C D, P733, DOI DOI 10.1109/ICDMW.2011.19
   Brown Alex, 2016, Proceedings of the Association for Information Science and Technology, V53, P1, DOI [DOI 10.1002/PRA2.2016.14505301040, 10.1002/pra2.2016.14505301040,arXiv:https://asistdl.onlinelibrary.wiley.com/doi/pdf/10.1002/pra2, DOI 10.1002/PRA2.2016.14505301040,ARXIV:HTTPS://ASISTDL.ONLINELIBRARY.WILEY.COM/DOI/PDF/10.1002/PRA2]
   Budylin R, 2018, WSDM'18: PROCEEDINGS OF THE ELEVENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P55, DOI 10.1145/3159652.3159699
   Cai TC, 2021, LECT NOTES COMPUT SC, V12683, P499, DOI 10.1007/978-3-030-73200-4_34
   Cámara J, 2009, LECT NOTES COMPUT SC, V5648, P370, DOI 10.1007/978-3-642-02818-2_30
   Chakraborty S, 2021, INFORMATICS-BASEL, V8, DOI 10.3390/informatics8030049
   Chen GD, 2017, WSDM'17: PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P547, DOI 10.1145/3018661.3018700
   Chen NY, 2019, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'19), P501, DOI 10.1145/3289600.3291000
   Chen R, 2017, IEEE INT CONF BIG DA, P1635, DOI 10.1109/BigData.2017.8258098
   Claeys E, 2017, LECT NOTES COMPUT SC, V10584, P52, DOI 10.1007/978-3-319-68765-0_5
   Creswell JW, 2012, Educational research planning, conducting and evaluating quantitative and qualitative research, DOI DOI 10.1017/CBO9781107415324.004
   da Costa RT, 2011, REV BRAS PSIQUIATR, V33, P144, DOI 10.1590/S1516-44462011000200009
   Dai XY, 2022, ACM T INFORM SYST, V40, DOI 10.1145/3464303
   Daneva M, 2014, J SYST SOFTWARE, V95, P1, DOI 10.1016/j.jss.2014.06.035
   de Feijter R, 2018, LECT NOTES BUS INF P, V318, P244, DOI 10.1007/978-3-319-91704-7_16
   de Souza WS, 2022, 2022 IEEE 46TH ANNUAL COMPUTERS, SOFTWARE, AND APPLICATIONS CONFERENCE (COMPSAC 2022), P860, DOI 10.1109/COMPSAC54236.2022.00136
   Deng A, 2013, P 6 ACM INT C WEB SE, P123, DOI [DOI 10.1145/2433396.2433413, 10.1145/2433396.2433413]
   Deng A, 2021, KDD '21: PROCEEDINGS OF THE 27TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2743, DOI 10.1145/3447548.3467129
   Deng A, 2017, WSDM'17: PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P641, DOI 10.1145/3018661.3018677
   Deng A, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P609, DOI 10.1145/2566486.2568028
   Deng A, 2015, WWW'15 COMPANION: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P923, DOI 10.1145/2740908.2742563
   Dimmery D, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2914, DOI 10.1145/3292500.3330771
   Dmitriev P, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1427, DOI 10.1145/3097983.3098024
   Dmitriev P, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON BIG DATA (BIG DATA), P1367, DOI 10.1109/BigData.2016.7840744
   DOBAJ J, 2022, P 17 S SOFTWARE ENG, P132, DOI [DOI 10.1145/3524844.3528057, 10.1145]
   Drutsa A, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1301, DOI 10.1145/3038912.3052664
   Drutsa A, 2017, ACM T WEB, V11, DOI 10.1145/2856822
   Drutsa A, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P256, DOI 10.1145/2736277.2741116
   Drutsa Alexey, P 24 ACM INT C INFOR, P763, DOI DOI 10.1145/2806416.2806496
   Duan WT, 2021, WSDM '21: PROCEEDINGS OF THE 14TH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P193, DOI 10.1145/3437963.3441737
   Duivesteijn W, 2017, LECT NOTES ARTIF INT, V10536, P114, DOI 10.1007/978-3-319-71273-4_10
   Eckroth J, 2019, AAAI CONF ARTIF INTE, P9357
   Efron Bradley, 1993, An Introduction to the Bootstrap, DOI 10.1007/978-1-4899-4541-9
   Ermis B, 2020, CIKM '20: PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, P2405, DOI 10.1145/3340531.3412723
   Erthal Vladimir M., 2022, CIBSE 2022 25 IBERO
   Esteller-Cucala M, 2019, ADJUNCT PUBLICATION OF THE 27TH CONFERENCE ON USER MODELING, ADAPTATION AND PERSONALIZATION (ACM UMAP '19 ADJUNCT), P153, DOI 10.1145/3314183.3323853
   Fabijan A, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P109, DOI 10.1109/SEAA53835.2021.00023
   Fabijan A, 2020, IEEE SOFTWARE, V37, P60, DOI 10.1109/MS.2018.2875842
   Fabijan A, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2156, DOI 10.1145/3292500.3330722
   Fabijan A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.2113
   Fabijan A, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P18, DOI 10.1109/SEAA.2017.47
   Fabijan A, 2017, PROC INT CONF SOFTW, P770, DOI 10.1109/ICSE.2017.76
   Fabijan A, 2015, LECT NOTES BUS INF P, V210, P139, DOI 10.1007/978-3-319-19593-3_12
   Fabijan Aleksander, 2016, Agile Processes, in Software Engineering, and Extreme Programming, P39, DOI [10.1007/978-3-319-33515-5_4, DOI 10.1007/978-3-319-33515-5_4]
   Fairstein Y, 2022, WSDM'22: PROCEEDINGS OF THE FIFTEENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P252, DOI 10.1145/3488560.3498420
   Feit EM, 2019, MARKET SCI, V38, P1038, DOI 10.1287/mksc.2019.1194
   Freno A, 2017, PROCEEDINGS OF THE ELEVENTH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'17), P251, DOI 10.1145/3109859.3109897
   Fu K, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P3337, DOI 10.1145/3394486.3403386
   Funk B, 2009, ICE-B 2009: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON E-BUSINESS, P37
   Galster M, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P11, DOI 10.1109/WICSA.2016.10
   Giaimo F, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110781
   Gomez-Uribe CA, 2016, ACM TRANS MANAG INF, V6, DOI 10.1145/2843948
   Goswami A, 2015, PROCEEDINGS 2015 IEEE INTERNATIONAL CONFERENCE ON BIG DATA, P1094, DOI 10.1109/BigData.2015.7363863
   Gruson A, 2019, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'19), P420, DOI 10.1145/3289600.3291027
   Gui H, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P399, DOI 10.1145/2736277.2741081
   Gupchup J, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P387, DOI 10.1145/3269206.3271747
   Gupta S., 2020, INT C ADV COMPUT DAT, P66
   Gupta S., 2019, ACM SIGKDD Explorations Newsletter, V21, P20, DOI 10.1145/3331651.3331655.
   Gupta S, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P1, DOI 10.1109/ICSA.2018.00009
   He Y, 2022, COMPANION PROCEEDINGS OF THE WEB CONFERENCE 2022, WWW 2022 COMPANION, P136, DOI 10.1145/3487553.3524220
   He Y, 2017, PR INT CONF DATA SC, P640, DOI 10.1109/DSAA.2017.64
   Humble Jez, 2010, Continuous Delivery: Reliable software releases through Build, Test and Deployment Automation
   Jiang H, 2020, IEEE INT CONF BIG DA, P1533, DOI 10.1109/BigData50022.2020.9377996
   Johari R, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1517, DOI 10.1145/3097983.3097992
   Ju NQ, 2019, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'19), P492, DOI 10.1145/3289600.3291025
   Kaplan J, 2020, Arxiv, DOI [arXiv:2001.08361, DOI 10.48550/ARXIV.2001.08361]
   Kharitonov E, 2017, WSDM'17: PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P651, DOI 10.1145/3018661.3018708
   Kharitonov E, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P473, DOI 10.1145/2766462.2767729
   King R., 2017, Designing with Data: Improving the User Experience with A/B Testing, V1st ed.
   Kitchenham B. e. a., 2007, Technical report EBSE-2007-01, DOI DOI 10.1145/1134285.1134500
   Kohavi R, 2020, TRUSTWORTHY ONLINE CONTROLLED EXPERIMENTS: A PRACTICAL GUIDE TO A/B TESTING, P1, DOI 10.1017/9781108653985
   Kohavi R., 2017, Encyclopedia of Machine Learning and Data Mining, V7, P922, DOI [DOI 10.1007/978-1-4899-7687-1_891, DOI 10.1007/978-1-4899-7687-1891]
   Kohavi R., 2011, ACM SIGKDD Explorations Newsl, V12, P31, DOI DOI 10.1145/1964897.1964905
   Kohavi R, 2017, HARVARD BUS REV, V95, P74
   Kohavi R, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1857, DOI 10.1145/2623330.2623341
   Kohavi R, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1168
   Kohavi R, 2009, DATA MIN KNOWL DISC, V18, P140, DOI 10.1007/s10618-008-0114-1
   Kohavi Ron, P 18 ACM SIGKDD INT, P786, DOI 10.1145/2339530.2339653
   Kornilova A, 2021, WSDM '21: PROCEEDINGS OF THE 14TH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P976, DOI 10.1145/3437963.3441812
   Koukouvis K, 2016, LECT NOTES COMPUT SC, V9823, P133, DOI 10.1007/978-3-319-45892-2_10
   Kumar A, 2019, INFORM SYST RES, V30, P819, DOI 10.1287/isre.2018.0833
   Kumar Ratnakar, 2017, 2017 2nd International Conference on Communication and Electronics Systems (ICCES). Proceedings, P350, DOI 10.1109/CESYS.2017.8321296
   Lalmas M, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1929, DOI 10.1145/2783258.2788581
   Lee MR, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P491, DOI 10.1145/3219819.3219905
   Lettner F, 2013, LECT NOTES COMPUT SC, V8112, P458, DOI 10.1007/978-3-642-53862-9_58
   Li CB, 2021, PROCEEDINGS OF THE 30TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, CIKM 2021, P3898, DOI 10.1145/3459637.3481931
   Li H, 2022, PROCEEDINGS OF THE ACM WEB CONFERENCE 2022 (WWW'22), P182, DOI 10.1145/3485447.3512063
   Li LH, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P37, DOI 10.1145/2684822.2685311
   Li PL, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P170, DOI 10.1109/ICSE-SEIP52600.2021.00026
   Li PL, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P21, DOI 10.1109/ICSE-SEIP.2019.00011
   Li YY, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1657, DOI 10.1145/3132847.3132855
   Liou Kevin, 2020, P 21 ACM C EC COMPUT, P837, DOI DOI 10.1145/3391403.3399542
   Liu S, 2019, EUROMICRO CONF PROC, P29, DOI 10.1109/SEAA.2019.00013
   Liu YC, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P300, DOI 10.1109/SEAA53835.2021.00046
   Machmouchi W, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P757, DOI 10.1145/3132847.3132850
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Madlberger Maria, 2021, 20 INT C WWWINTERNET, P3
   Mahdavi-Hezavehi S, 2017, INFORM SOFTWARE TECH, V90, P1, DOI 10.1016/j.infsof.2017.03.013
   Masuda T, 2022, VACCINE, V40, P2044, DOI 10.1016/j.vaccine.2022.02.030
   Mattos DI, 2020, EUROMICRO CONF PROC, P101, DOI 10.1109/SEAA51224.2020.00026
   Mattos DI, 2018, LECT NOTES BUS INF P, V314, P277, DOI 10.1007/978-3-319-91602-6_20
   Mattos DI, 2017, LECT NOTES COMPUT SC, V10611, P146, DOI 10.1007/978-3-319-69926-4_12
   Mattos DI, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P256, DOI 10.1109/SEAA.2017.15
   Miikkulainen R, 2020, AI MAG, V41, P44
   Okoshi T, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2792, DOI 10.1145/3292500.3330732
   Ozawa T, 2016, PROCEDIA COMPUT SCI, V96, P1147, DOI 10.1016/j.procs.2016.08.157
   Pelleg D, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P1080, DOI 10.1145/2818048.2820022
   Peska Ladislav, 2020, HT '20: Proceedings of the 31st ACM Conference on Hypertext and Social Media, P291, DOI 10.1145/3372923.3404781
   Poyarkov A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P235, DOI 10.1145/2939672.2939688
   Qu J, 2016, LECT NOTES COMPUT SC, V9746, P491, DOI 10.1007/978-3-319-40409-7_46
   Quin Federico, 2023, Study systematic literature review on A/B testing
   Renz J, 2016, LAK '16 CONFERENCE PROCEEDINGS: THE SIXTH INTERNATIONAL LEARNING ANALYTICS & KNOWLEDGE CONFERENCE,, P304, DOI 10.1145/2883851.2883876
   Reza Mohi, 2021, L@S '21: Proceedings of the Eighth ACM Conference on Learning @ Scale, P15, DOI 10.1145/3430895.3460128
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Ros R, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P35, DOI 10.1145/3194760.3194766
   Rosenfeld N, 2017, WWW'17 COMPANION: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P602, DOI 10.1145/3041021.3054190
   Sajeev S, 2021, KDD '21: PROCEEDINGS OF THE 27TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P3522, DOI 10.1145/3447548.3467165
   Satyal S, 2019, INFORM SYST, V84, P283, DOI 10.1016/j.is.2018.06.007
   Satyal S, 2017, LECT NOTES COMPUT SC, V10445, P113, DOI 10.1007/978-3-319-65000-5_7
   Saveski M, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1027, DOI 10.1145/3097983.3098192
   Schermann G, 2016, MIDDLEWARE '16: PROCEEDINGS OF THE 17TH INTERNATIONAL MIDDLEWARE CONFERENCE, DOI 10.1145/2988336.2988348
   Shariat S, 2017, KNOWL INF SYST, V51, P37, DOI 10.1007/s10115-016-0972-6
   Shi FJ, 2015, IT PROF, V17, P18, DOI 10.1109/MITP.2015.96
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Silberstein N, 2020, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM '20), P546, DOI 10.1145/3336191.3371798
   Siqueira JG, 2018, PROCEEDINGS OF THE 14TH BRAZILIAN SYMPOSIUM ON INFORMATION SYSTEMS (SBSI2018), P104, DOI 10.1145/3229345.3229360
   Siroker D, 2013, A/B TESTING: THE MOST POWERFUL WAY TO TURN CLICKS INTO CUSTOMERS, P1
   Spang B, 2021, PROCEEDINGS OF THE 2021 ACM INTERNET MEASUREMENT CONFERENCE, IMC 2021, P80, DOI 10.1145/3487552.3487851
   Sriraman A, 2019, PROCEEDINGS OF THE 2019 46TH INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA '19), P513, DOI 10.1145/3307650.3322227
   Stewart M, 2023, Arxiv, DOI arXiv:2309.08181
   Sun F, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P7, DOI 10.1145/3269206.3271722
   Szpektor Idan, 2013, P 22 INT C WORLD WID, P1249, DOI DOI 10.1145/2488388.2488497
   Tagami Y, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1955, DOI 10.1145/2623330.2623334
   Tamburrelli G, 2014, LECT NOTES COMPUT SC, V8636, P184, DOI 10.1007/978-3-319-09940-8_13
   Tang Diane, 2010, P 16 ACM SIGKDD INT, P17, DOI DOI 10.1145/1835804.1835810
   Toslali Mert, 2020, HOTCLOUD 2020 12 USE
   Tsigkanos Christos, 2023, Computational Science - ICCS 2023: 23rd International Conference, Proceedings. Lecture Notes in Computer Science (14073), P321, DOI 10.1007/978-3-031-35995-8_23
   Tu Y, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P1574, DOI 10.1145/3442381.3450075
   Ueoka Y, 2020, UMAP'20: PROCEEDINGS OF THE 28TH ACM CONFERENCE ON USER MODELING, ADAPTATION AND PERSONALIZATION, P358, DOI 10.1145/3340631.3394875
   Vanderdonckt Jean, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3331160
   Vasthimal DK, 2019, 2019 IEEE 5TH INTL CONFERENCE ON BIG DATA SECURITY ON CLOUD (BIGDATASECURITY) / IEEE INTL CONFERENCE ON HIGH PERFORMANCE AND SMART COMPUTING (HPSC) / IEEE INTL CONFERENCE ON INTELLIGENT DATA AND SECURITY (IDS), P230, DOI 10.1109/BigDataSecurity-HPSC-IDS.2019.00052
   Vaswani A, 2023, Arxiv, DOI arXiv:1706.03762
   Viet HT, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P2288, DOI 10.1145/3397271.3401434
   Walper D, 2020, ETRA 2020 SHORT PAPERS: ACM SYMPOSIUM ON EYE TRACKING RESEARCH & APPLICATIONS, DOI 10.1145/3379156.3391351
   Wang J, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P1209, DOI 10.1145/2736277.2741126
   Wang WN, 2021, WSDM '21: PROCEEDINGS OF THE 14TH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P202, DOI 10.1145/3437963.3441779
   Wang Y, 2019, PROCEEDINGS OF THE 28TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM '19), P2425, DOI 10.1145/3357384.3358143
   Wang ZN, 2022, PROCEEDINGS OF THE ACM WEB CONFERENCE 2022 (WWW'22), P2247, DOI 10.1145/3485447.3512097
   Wei JS, 2022, Arxiv, DOI arXiv:2206.07682
   Wu JJW, 2023, J SYST SOFTWARE, V203, DOI 10.1016/j.jss.2023.111703
   Wu JJW, 2023, INFORM SOFTWARE TECH, V155, DOI 10.1016/j.infsof.2022.107115
   Wu L, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P2387, DOI 10.1145/3397271.3401444
   Wu YH, 2022, PROCEEDINGS OF THE 28TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, KDD 2022, P2079, DOI 10.1145/3534678.3539325
   Xia T, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P11, DOI 10.1109/ICSE-SEIP.2019.00010
   Xie YX, 2021, WSDM '21: PROCEEDINGS OF THE 14TH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P949, DOI 10.1145/3437963.3441742
   Xie YX, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P876, DOI 10.1145/3219819.3219860
   Xu Y, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2227, DOI 10.1145/2783258.2788602
   Xu Y, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P313, DOI [10.1145/2939672.2939703, 10.1007/978-3-319-32025-0_20]
   Xu YB, 2021, WSDM '21: PROCEEDINGS OF THE 14TH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P409, DOI 10.1145/3437963.3441821
   Xu Y, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1945
   Yaman SG, 2017, J SYST SOFTWARE, V133, P195, DOI 10.1016/j.jss.2017.07.009
   Yang WS, 2018, IEEE INT CONF BIG DA, P4101, DOI 10.1109/BigData.2018.8622067
   Ye L, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P2291, DOI 10.1145/3442381.3449982
   Ye Runlong, 2022, SIGITE '22: The 23rd Annual Conference on Information Technology Education, P16, DOI 10.1145/3537674.3554740
   Yoneda T, 2019, 2019 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2019), P124, DOI 10.1145/3350546.3352509
   Young S., 2014, Weav. J. Libr. User Exp, V1, DOI [10.3998/weave.12535642.0001.101, DOI 10.3998/WEAVE.12535642.0001.101]
   Yu M, 2020, AAAI CONF ARTIF INTE, V34, P10310
   Zhang HF, 2010, PROCEEDINGS OF THE SECOND INTERNATIONAL POSTGRADUATE CONFERENCE ON INFRASTRUCTURE AND ENVIRONMENT, VOL 2, P111, DOI 10.1109/SOLI.2010.5551598
   Zhao ZY, 2017, PR INT CONF DATA SC, P69, DOI 10.1109/DSAA.2017.65
   Zhu XZ, 2023, Arxiv, DOI arXiv:2305.17144
NR 191
TC 3
Z9 3
U1 3
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 112011
DI 10.1016/j.jss.2024.112011
EA MAR 2024
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NX3O4
UT WOS:001203715600001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Dang, XY
   Wang, JY
   Gong, DW
   Yao, XJ
   Wei, CQ
   Xu, B
AF Dang, Xiangying
   Wang, Jinyong
   Gong, Dunwei
   Yao, Xiangjuan
   Wei, Changqing
   Xu, Biao
TI Test data generation for covering mutation-based path using MGA for MPI
   program
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Message passing interface (MPI); Software testing; Mutation testing;
   Multi-population genetic algorithm (MGA); Test data generation
ID PERFORMANCE; CRITERIA
AB Message Passing Interface (MPI) is a communication protocol used for parallel programming in various languages, valued for its reliability and broad applicability. Mutation testing is a software testing method for systematically simulating software faults. However, the significant number of inserted mutation branches in the program escalates the testing cost. To address this issue, we propose the comprehensive PMTDGM framework. The framework first generates mutation -based paths based on the relevancy of mutant branches and the difficulty of mutant branch coverage, followed by the establishment of a multitask model of path coverage. Finally, we employ a multi -population genetic algorithm (MGA) to generate test data. Our experiments, performed on six MPI programs of varying sizes and structures, demonstrate that the mutation -based paths have the small test sets and are easy to cover. Additionally, the multitask model and MGA can significantly improve the efficiency of generating test data and reduce the cost of mutation testing for MPI programs compared to traditional methods.
C1 [Dang, Xiangying; Wang, Jinyong] Xuzhou Univ Technol, Sch Informat Engn, Sch Big Data, Xuzhou 221018, Peoples R China.
   [Gong, Dunwei] Qingdao Univ Sci & Technol, Coll Automat & Elect Engn, Qingdao 266061, Peoples R China.
   [Yao, Xiangjuan; Wei, Changqing] China Univ Min & Technol, Sch Math, Xuzhou 221116, Peoples R China.
   [Xu, Biao] Shantou Univ, Dept Elect Engn, Shantou 515063, Peoples R China.
C3 Xuzhou University of Technology; Qingdao University of Science &
   Technology; China University of Mining & Technology; Shantou University
RP Wang, JY (corresponding author), Xuzhou Univ Technol, Sch Informat Engn, Sch Big Data, Xuzhou 221018, Peoples R China.
EM jinyongw@xzit.edu.cn
RI Gong, Dunwei/HDO-3693-2022
FU National Natural Science Foundation of China [42230704]; Major Project
   of Natural Science Research of the Jiangsu Higher Education Institutions
   of China [21KJA520006]; Xuzhou Science and Technology Plan Project
   [KC21007]; Natural Science Foundation of Guangdong Province of China
   [2021A1515011709]
FX This work is jointly supported by National Natural Science Foundation of
   China (No. 42230704) , Major Project of Natural Science Research of the
   Jiangsu Higher Education Institutions of China under Grant (No.
   21KJA520006) , Xuzhou Science and Technology Plan Project under Grant
   (No. KC21007) , and Natural Science Foundation of Guangdong Province of
   China under Grant (No. 2021A1515011709) .
CR Akhmetova D., 2017, Interoperability of Gaspi and Mpi in Large Scale Scientific Applications
   Bradbury J.S., 2006, Mutation Operators for Concurrent Java (J2SE 5.0)
   Carver RH, 2010, CONCURR COMP-PRACT E, V22, P2445, DOI 10.1002/cpe.1573
   Christakis M, 2003, Detection of Asynchronous Message Passing Errors Using Static Analysis
   Dang XY, 2022, IEEE T SOFTWARE ENG, V48, P2141, DOI 10.1109/TSE.2021.3052987
   Dang XY, 2020, IEEE T RELIAB, V69, P334, DOI 10.1109/TR.2019.2922684
   [党向盈 Dang Xiangying], 2016, [计算机学报, Chinese Journal of Computers], V39, P2355
   Dave M, 2016, Mutation Testing and Test Data Generation Approaches: A Review
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Engler D., 2003, Operating Systems Review, V37, P237, DOI 10.1145/1165389.945468
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Gligoric Milos., 2010, MuTMuT: Efficient exploration for mutation testing of multithreaded code
   Gong Dun-Wei, 2016, Journal of Software, V27, P2008, DOI 10.13328/j.cnki.jos.004844
   Gong DW, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3423132
   Gong DW, 2020, INFORM SOFTWARE TECH, V124, DOI 10.1016/j.infsof.2020.106318
   [巩敦卫 Gong Dunwei], 2017, [电子学报, Acta Electronica Sinica], V45, P1518
   Gong DW, 2017, INFORM SOFTWARE TECH, V81, P82, DOI 10.1016/j.infsof.2016.05.001
   Gropp W, 1996, PARALLEL COMPUT, V22, P789, DOI 10.1016/0167-8191(96)00024-5
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   Hager G., 2010, Computer, V11, P34
   Hamlet R.G, 1994, Adv. Comput., V41, P191
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Harman M., 2011, Strong Higher Order Mutationbased Test Data Generation
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Jatana N, 2017, E-INFORMATICA, V11, P59, DOI 10.5277/e-Inf170103
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Kintis M., 2017, Empir. Softw. Eng., V8, P1
   Koppol PV, 2002, IEEE T SOFTWARE ENG, V28, P607, DOI 10.1109/TSE.2002.1010062
   Kusano M., 2013, CCmutator: A Mutation Generator for Concurrency Constructs in Multithreaded C/C++ Applications
   Offutt A., 1996, An Experimental Determination of Sufficient Mutant Operators
   OFFUTT AJ, 1987, SIGPLAN NOTICES, V22, P177, DOI 10.1145/960114.29669
   [潘峰 Pan Feng], 2021, [中国科学. 信息科学, Scientia Sinica Informationis], V51, P565
   Papadakis M., 2010, Towards Automating the Generation of Mutation Tests
   Papadakis M., 2010, Automatic Mutation Test Case Generation Via Dynamic Symbolic Execution
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Papadakis M, 2011, SOFTWARE QUAL J, V19, P691, DOI 10.1007/s11219-011-9142-y
   Protopopov BV, 2001, J PARALLEL DISTR COM, V61, P449, DOI 10.1006/jpdc.2000.1674
   Sen A, 2009, Mutation Operators for Concurrent System C Designs
   Silva R.A., 2012, Mutation Operators for Concurrent System C Designs
   Silva RA, 2017, INFORM SOFTWARE TECH, V81, P19, DOI 10.1016/j.infsof.2016.01.017
   Souza F.C., 2014, Test Data Generation Techniques for Mutation Testing: A Systematic Mapping
   Souza P., 2013, Concurr. Comput.: Pract. Exper., V25, P149
   Souza PSL, 2014, CONCURR COMP-PRACT E, V26, P21, DOI 10.1002/cpe.2937
   Souza SRS, 2008, CONCURR COMP-PRACT E, V20, P1893, DOI 10.1002/cpe.1297
   Tian T, 2016, AUTOMAT SOFTW ENG, V23, P469, DOI 10.1007/s10515-014-0173-z
   Tokumoto S, 2016, IEEE INT CONF SOFTW, P320, DOI 10.1109/ICST.2016.18
   Vakkalanka S., 2008, Implementing Efficient Dynamic Formal Verification Methods for MPI Programse
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Wu L.L, 2011, Empirical Study of Concurrency Mutation Operators for Java
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yao XJ, 2014, COMPUT INTEL NEUROSC, V2014, DOI 10.1155/2014/591294
   [张功杰 Zhang Gongjie], 2015, [计算机学报, Chinese Journal of Computers], V38, P2318
   [张岩 Zhang Yan], 2013, [计算机学报, Chinese Journal of Computers], V36, P2429
   Zheng H, 2010, 2ND IEEE INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL (ICACC 2010), VOL. 2, P431, DOI 10.1109/ICACC.2010.5486640
NR 59
TC 2
Z9 2
U1 8
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111962
DI 10.1016/j.jss.2024.111962
EA JAN 2024
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IH1H8
UT WOS:001165341100001
DA 2024-08-05
ER

PT J
AU Yang, HH
   Xu, L
   Liu, C
   Huangfu, LW
AF Yang, Huanhuan
   Xu, Ling
   Liu, Chao
   Huangfu, Luwen
TI Query-oriented two-stage attention-based model for code search
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code search; Attention mechanism; Query-oriented attention mechanism;
   Code structural feature
AB Applying code search models to search through a large-scale codebase can significantly contribute to developers finding and reusing existing code. Researchers have applied deep learning (DL) techniques to code search models, which first compute deeper semantics representation for query and candidate code snippets, and then rank code snippets. However, these models do not well deeply analyze the semantics gap (i.e., the difference and correlation between queries written in natural language and code in programming languages), or suitably apply the correlation to the code search task. Moreover, most DL -based models use complex networks, slowing down code search tasks. To build the correlation of two languages, and apply the correlation well to code search task, we propose a query-oriented code search model named QobCS. QobCS leverage two attention-based stages, which are simple and quick, and the cooperation of the two stages bridges the semantic gap between code and query. Stage1 learns deeper semantics representation for code and query. Stage2 applies their deeper semantic correlation and query's intention to learn better code representation. We evaluated QobCS on two datasets. On dataset1/dataset2 with 485k/542k code snippets, QobCS achieves the MRRs of 0.701/0.595, outperforming DL -based code search models DeepCS, CARLCS-CNN, UNIF, and our prior study TabCS. For efficiency, our model shows desirable performances on both datasets compared to DL -based models.
C1 [Yang, Huanhuan; Xu, Ling; Liu, Chao] Chongqing Univ, Key Lab Dependable Serv Comp Cyber Phys Soc, Minist Educ, Chongqing, Peoples R China.
   [Yang, Huanhuan; Xu, Ling; Liu, Chao] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
   [Huangfu, Luwen] San Diego State Univ, Fowler Coll Business, San Diego, CA 92182 USA.
   [Huangfu, Luwen] San Diego State Univ, Ctr Human Dynam Mobile Age, San Diego, CA 92182 USA.
C3 Chongqing University; Chongqing University; California State University
   System; San Diego State University; California State University System;
   San Diego State University
RP Xu, L (corresponding author), Chongqing Univ, Key Lab Dependable Serv Comp Cyber Phys Soc, Minist Educ, Chongqing, Peoples R China.
EM yanghh@cqu.edu.cn; xuling@cqu.edu.cn; liu.chao@cqu.edu.cn;
   lhuangfu@sdsu.edu
OI Huangfu, Vivian L./0000-0003-3926-7901
FU National Key Research and Development Project [2018YFB2101200];
   Fundamental Research Funds for the Central Universities [2019CDYGYB014,
   2020CDCGRJ037]; National Nature Science Foundation of China [62002034];
   National Defense Basic Scientific Research Program [WDZC20205500308]
FX <B>Acknowledgments</B> This work was supported in part by the National
   Key Research and Development Project (No. 2018YFB2101200) , the
   Fundamental Research Funds for the Central Universities (No.
   2019CDYGYB014 and No. 2020CDCGRJ037) , the National Nature Science
   Foundation of China (No. 62002034) and the National Defense Basic
   Scientific Research Program (No. WDZC20205500308) .
CR Alon U., 2018, code2seq: Generating sequences from structured representations of code
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Cheng Y, 2022, INT C PROGRAM COMPRE, P533, DOI 10.1145/3524610.3527889
   Eberhart Z, 2022, EUR CON SFTWR MTNCE, P140, DOI 10.1109/SANER53432.2022.00028
   Feng Zhangyin, 2020, ARXIV200208155
   Gang H.A., Syst. Softw., P170
   Gardner MW, 1998, ATMOS ENVIRON, V32, P2627, DOI 10.1016/S1352-2310(97)00447-0
   Graph A.S., 2015, Abstract syntax tree
   Gu W., 2020, CRaDLe: Deep code retrieval based on semantic dependency learning
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Guo D., 2021, 9 INT C LEARNING REP
   Hoffmann R, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P13
   Hu Fan, 2023, WSDM '23: Proceedings of the Sixteenth ACM International Conference on Web Search and Data Mining, P994, DOI 10.1145/3539597.3570383
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jing Y., 2018, Pattern Recognit. Lett.
   Kingma D.P., 2015, PROC INT C LEARN RE
   Ling X, 2021, ACM T KNOWL DISCOV D, V15, DOI 10.1145/3447571
   Liu C., 2021, ACM Trans. Softw. Eng. Methodol. (TOSEM)
   Liu JK, 2019, M CONT JURISPRUD CHI, P29, DOI [10.1145/3315508.3329975, 10.1007/978-981-13-3756-7_2]
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Shuai J, 2020, INT C PROGRAM COMPRE, P196, DOI 10.1145/3387904.3389269
   Stylos J., 2006, 2006 IEEE S VIS LANG
   Sun ZS, 2022, PROC INT CONF SOFTW, P1609, DOI 10.1145/3510003.3510160
   Sundermeyer M, 2012, 13TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2012 (INTERSPEECH 2012), VOLS 1-3, P194
   Tang Z, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1193, DOI 10.1109/ASE51524.2021.9678882
   Tao CQ, 2023, IEEE T RELIAB, V72, P302, DOI 10.1109/TR.2022.3171309
   Tay Y., 2018, 24 ACM SIGKDD INT C
   Wan Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P13, DOI 10.1109/ASE.2019.00012
   Wang CZ, 2022, NEURAL NETWORKS, V145, P22, DOI 10.1016/j.neunet.2021.09.025
   Wang WH, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3409331
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Xu L., 2021, 2021 IEEE INT C SOFT
   Xu ZW, 2023, Arxiv, DOI [arXiv:2303.07104, 10.48550/arXiv.2303.07104, DOI 10.48550/ARXIV.2303.07104]
   Yin WP, 2017, Arxiv, DOI arXiv:1702.01923
   Zeng C., 2021, deGraphCS: Embedding variable-based flow graph for neural code search
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zugner D., 2021, Language-agnostic representation learning of source code from structure and context
NR 40
TC 0
Z9 0
U1 4
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111948
DI 10.1016/j.jss.2023.111948
EA JAN 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID4K2
UT WOS:001164372600001
DA 2024-08-05
ER

PT J
AU Bertolotti, F
   Cazzola, W
   Favalli, L
AF Bertolotti, Francesco
   Cazzola, Walter
   Favalli, Luca
TI ☆piler: Compilers in search of compilations
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Programming languages; Source-to-source transpilers
ID LANGUAGE; FRAMEWORK
AB Compilers pose significant challenges in their development as software products. Language developers face the complexities of ensuring efficiency, adhering to good design practices, and maintaining the overall codebase. These factors make it difficult to predict the unexpected impact of updates on existing software built on the current compiler stack. Furthermore, software created for a specific compiler often lacks reusability for other compiler environments. In this study, we propose a comprehensive framework for the uniform development of compilers that addresses these issues. Our approach involves developing compilers as a collection of small transpilation units, referred to as deltas. The transpilation infrastructure takes source code written in a particular source language and searches for a path of deltas to generate equivalent source code in the target language. By adopting this methodology, language developers can easily update their languages by introducing new deltas into the system. Existing code remains unaffected as old transpilation paths remain available. To support this framework, we have devised a metric space for efficient delta search. This metric space enables us to define a non-overestimating heuristic function, which proves valuable in solving the search problem. Leveraging the A* search algorithm, we can efficiently transpile programs from a source language to the target language. To evaluate the effectiveness of our approach, we conducted a benchmark comparison between the A* search algorithm and the simpler breadth-first search (BFS) algorithm. The benchmark consisted of over 100 transpilation searches, providing valuable insights into the performance and capabilities of this framework.
C1 [Bertolotti, Francesco; Cazzola, Walter; Favalli, Luca] Univ Milan, Comp Sci Dept, Milan, Italy.
C3 University of Milan
RP Cazzola, W (corresponding author), Univ Milan, Comp Sci Dept, Milan, Italy.
EM bertolotti@di.unimi.it; cazzola@di.unimi.it; favalli@di.unimi.it
OI Bertolotti, Francesco/0000-0002-3867-6175; FAVALLI,
   LUCA/0000-0001-7452-2440
FU MUR project "T-LADIES" [PRIN 2020TL3X8X]
FX This work was partly supported by the MUR project "T-LADIES" (PRIN
   2020TL3X8X) .
CR Abate C, 2019, P IEEE COMPUT SECUR, P256, DOI 10.1109/CSF.2019.00025
   Albrecht P. F., 1980, SIGPLAN Notices, V15, P183, DOI 10.1145/947783.948658
   Alon U., 2019, P 7 INT C LEARNING R
   Barthwal A, 2009, LECT NOTES COMPUT SC, V5502, P160, DOI 10.1007/978-3-642-00590-9_12
   Bertolotti F, 2023, IEEE T SOFTWARE ENG, V49, P4677, DOI 10.1109/TSE.2023.3310793
   Bertolotti F, 2023, J SYST SOFTWARE, V202, DOI 10.1016/j.jss.2023.111704
   Bertolotti F, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3514232
   Bhatia S., 2023, P 37 EUROPEAN C OBJE
   Bolz C. F., 2009, ICOOOLPS, P18, DOI DOI 10.1145/1565824.1565827
   Box D., 2002, Essential.Net: The Common Language Runtime, V1
   Cazzola W, 2018, COMPUT LANG SYST STR, V51, P71, DOI 10.1016/j.cl.2017.07.003
   Chen JJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3363562
   Churchill M, 2015, LECT NOTES COMPUT SC, V8989, P132, DOI 10.1007/978-3-662-46734-3_4
   Coco E.J., 2018, Comput. Appl. Int. J., V5
   Cui X, 2011, INT J COMPUT SCI NET, V11, P125
   Diaz Bilotto P.N., 2016, Modern Software Engineering Methodologies for Mobile and Cloud Environments, P240
   Folliot B., 1998, P 8 ACM SIGOPS EUROP, P175
   Grimmer M, 2018, ACM T PROGR LANG SYS, V40, DOI 10.1145/3201898
   Grönniger H, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P925
   HART PE, 1968, IEEE T SYST SCI CYB, VSSC4, P100, DOI 10.1109/TSSC.1968.300136
   Horadam KJ, 2014, DISCRETE APPL MATH, V167, P310, DOI 10.1016/j.dam.2013.10.037
   Kats LCL, 2010, ACM SIGPLAN NOTICES, V45, P918, DOI 10.1145/1932682.1869535
   Kats LCL, 2010, ACM SIGPLAN NOTICES, V45, P444, DOI 10.1145/1932682.1869497
   Keep AW, 2013, ACM SIGPLAN NOTICES, V48, P343, DOI [10.1145/2544174.2500618, 10.1145/2500365.2500618]
   Klint P, 2011, LECT NOTES COMPUT SC, V6491, P222, DOI 10.1007/978-3-642-18023-1_6
   Kolovos D., 2008, Ph.D. thesis
   Krahn Holger, 2010, International Journal on Software Tools for Technology Transfer, V12, P353, DOI 10.1007/s10009-010-0142-1
   Kühn T, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P131, DOI 10.1145/3336294.3336301
   Kuhn Thomas, 2016, P 20 INT SOFTWARE PR, P50
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/cgo.2004.1281665
   Ling M, 2022, PROC IEEE ACM INT C, P354, DOI [10.1145/3510454.3528640, 10.1109/ICSE-Companion55297.2022.9793767]
   Lunnikivi H, 2020, LECT NOTES COMPUT SC, V12471, P127, DOI 10.1007/978-3-030-60939-9_9
   Méndez-Acuña D, 2016, COMPUT LANG SYST STR, V46, P206, DOI 10.1016/j.cl.2016.09.004
   Meyerovich LA, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2509136.2509515
   Meyerovich Leo A., 2012, P ACM INT S NEW IDEA, P39
   Mosses PD, 2019, ELECTRON P THEOR COM, P29, DOI 10.4204/EPTCS.310.4
   Mosses PD, 2019, J COMPUT LANG, V50, P39, DOI 10.1016/j.jvlc.2018.11.003
   Nystrom N, 2003, LECT NOTES COMPUT SC, V2622, P138
   Odersky M, 2014, COMMUN ACM, V57, P76, DOI 10.1145/2591013
   Pech V., 2013, P 2013 INT C PRINC P, P165, DOI [DOI 10.1145/2500828.2500846, 10.1145/2500828.2500846]
   Quinlan D., 2000, Parallel Processing Letters, V10, P215, DOI 10.1016/S0129-6264(00)00021-4
   Quinlan D., 2011, P CETUS USERS COMPIL, P1
   Rose LM, 2014, SOFTW SYST MODEL, V13, P735, DOI 10.1007/s10270-012-0296-2
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Roziere Baptiste, 2020, Advances in neural information processing systems, V33, P20601
   Rumpe B., 2021, Handbook
   Sarkar D, 2004, ACM SIGPLAN NOTICES, V39, P201, DOI 10.1145/1016848.1016878
   Schultes D, 2021, 2021 IEEE/ACM 8TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2021), P73, DOI 10.1109/MobileSoft52590.2021.00017
   Seymour K, 2003, CONCURR COMP-PRACT E, V15, P207, DOI 10.1002/cpe.657
   Shi K, 2020, J COMPUT LANG, V59, DOI 10.1016/j.cola.2020.100979
   Slee M., 2007, White Paper 5
   Stefik A., 2014, P 2014 ACM INT S NEW, P283
   Sun CN, 2016, ACM SIGPLAN NOTICES, V51, P849, DOI 10.1145/3022671.2984038
   TENNENT RD, 1976, COMMUN ACM, V19, P437, DOI 10.1145/360303.360308
   Vacchi E, 2015, COMPUT LANG SYST STR, V43, P1, DOI 10.1016/j.cl.2015.02.001
   van Binsbergen LT, 2016, COMPANION PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY COMPANION'16), P8, DOI 10.1145/2892664.2893464
   Venners B, 2000, Inside the Java Virtual Machine
   Vinoski S, 1997, IEEE COMMUN MAG, V35, P46, DOI 10.1109/35.565655
   Voelter M, 2012, PROC INT CONF SOFTW, P1449, DOI 10.1109/ICSE.2012.6227070
   Wachsmuth GH, 2014, IEEE SOFTWARE, V31, P35, DOI 10.1109/MS.2014.100
   Wimmer C., 2012, P 3 ANN C SYSTEMS PR, P1
   Wolczko M., 1999, P OOPSLA WORKSHOP SI
   Wurthinger Thomas, 2013, P 2013 ACM INT S NEW, P187, DOI [10.1145/2509578.2509581, DOI 10.1145/2509578.2509581]
NR 63
TC 1
Z9 1
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2024
VL 212
AR 112006
DI 10.1016/j.jss.2024.112006
EA MAR 2024
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4F6
UT WOS:001206622500001
OA hybrid, Green Published
DA 2024-08-05
ER

PT J
AU Bettini, L
   Di Salle, A
   Iovino, L
   Pierantonio, A
AF Bettini, Lorenzo
   Di Salle, Amleto
   Iovino, Ludovico
   Pierantonio, Alfonso
TI Supporting reusable model migration with Edelta
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE MDE; Coupled evolution; Co-evolution; Migration; Adaptation
ID COEVOLUTION; METAMODELS
AB In Model-Driven Engineering, metamodels define the vocabulary of concepts and relations that designers use to define a wide range of artifacts, including models, transformations, and editors. Therefore, whenever a metamodel undergoes modifications, the depending artifacts may no longer be valid, and consistency needs to be repaired through coupled evolution techniques. While several approaches have been proposed over the last decades, they are artifact- and domain-specific and do not facilitate the reuse of migration strategies. Indeed, migration strategies are often hard-coded for a given project in a specific domain. In this paper, we propose the novel concept of migration patterns to leverage reuse across different domains and projects. The approach extends the existing Edelta framework and has been evaluated by considering several case studies identified in a systematic literature review.
C1 [Bettini, Lorenzo] Univ Firenze, I-50134 Florence, Italy.
   [Di Salle, Amleto; Iovino, Ludovico] Gran Sasso Sci Inst, I-67100 Laquila, Italy.
   [Pierantonio, Alfonso] Univ Aquila, I-67100 Laquila, Italy.
C3 University of Florence; Gran Sasso Science Institute (GSSI); University
   of L'Aquila
RP Bettini, L (corresponding author), Univ Firenze, I-50134 Florence, Italy.
EM lorenzo.bettini@unifi.it; amleto.disalle@gssi.it;
   ludovico.iovino@gssi.it; alfonso.pierantonio@univaq.it
OI Iovino, Ludovico/0000-0001-6552-2609
FU PRIN project "T-LADIES" [2020TL3X8X, P20224K9EK, ECS00000041,
   PE0000020]; MUR (Italy) Department of Excellence
FX This work was partially supported by the PRIN project "T-LADIES" n.
   2020TL3X8X, by the COmmunity-Based Organized Littering (COBOL) national
   research project (PRIN 2022 PNRR program Contract P20224K9EK), by the
   PNRR MUR project VITALITY (ECS00000041), Spoke 2 ASTRA-"Advanced Space
   Technologies and Research Alliance", of the PNRR MUR project CHANGES
   (PE0000020), Spoke 5 "Science and Technologies for Sustainable
   Diagnostics of Cultural Heritage", and by the MUR (Italy) Department of
   Excellence 2023-2027 for GSSI.
CR Anguel F, 2014, INT CONF COMP SCI, P142, DOI 10.1109/CSIT.2014.6805992
   Barriga A., 2020, P 23 ACM IEEE INT C, P1
   Beck K., 2003, Test Driven Development: By Example
   Bettini L., 2020, P 23 ACM IEEE INT C, P1
   Bettini L., 2017, MODELS SATELLITE EVE, P71
   Bettini L, 2022, SOFTW SYST MODEL, V21, P1689, DOI 10.1007/s10270-022-01034-9
   Bettini L, 2022, INT J SOFTW TOOLS TE, V24, P247, DOI 10.1007/s10009-022-00646-2
   Bettini L, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a14
   Bettini L, 2019, IEEE ACCESS, V7, P16364, DOI 10.1109/ACCESS.2019.2891357
   Cadavid J., 2012, Ph.D. thesis
   Cicchetti A., 2008, P 2 WORKSH MOD DRIV, V1
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Demuth A, 2016, J SYST SOFTWARE, V111, P281, DOI 10.1016/j.jss.2015.03.003
   Di Ruscio Davide, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P20, DOI 10.1007/978-3-642-33654-6_2
   Di Ruscio D., 2011, PROC 2 INT WORKSHOP, P30
   Di Ruscio D, 2016, LECT NOTES COMPUT SC, V9764, P231, DOI 10.1007/978-3-319-42061-5_15
   Garcés K, 2014, SOFTW SYST MODEL, V13, P789, DOI 10.1007/s10270-012-0297-1
   Garcés K, 2009, LECT NOTES COMPUT SC, V5562, P34, DOI 10.1007/978-3-642-02674-4_4
   Garcia J., 2012, INT C SOFTW LANG ENG, P144
   Hebig R, 2017, IEEE T SOFTWARE ENG, V43, P396, DOI 10.1109/TSE.2016.2610424
   Hebig R, 2013, LECT NOTES COMPUT SC, V8107, P436, DOI 10.1007/978-3-642-41533-3_27
   Herrmannsdoerfer M, 2009, LECT NOTES COMPUT SC, V5653, P52, DOI 10.1007/978-3-642-03013-0_4
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P163, DOI 10.1007/978-3-642-19440-5_10
   Iovino L, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a3
   Kessentini W., 2020, P 23 ACM IEEE INT C, P68, DOI DOI 10.1145/3239372.3239375
   Kessentini W, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P101, DOI 10.1145/3239372.3239375
   Kessentini W, 2016, LECT NOTES COMPUT SC, V9764, P138, DOI 10.1007/978-3-319-42061-5_9
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Krause Christian, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P76, DOI 10.1007/978-3-642-38883-5_10
   Paige RF, 2016, J SYST SOFTWARE, V111, P272, DOI 10.1016/j.jss.2015.08.047
   Paternostro M., 2006, Advanced features of the eclipse modeling framework
   Rose LM, 2014, SOFTW SYST MODEL, V13, P735, DOI 10.1007/s10270-012-0296-2
   Rose LM, 2014, SOFTW SYST MODEL, V13, P323, DOI 10.1007/s10270-012-0245-0
   Rose LM, 2010, LECT NOTES COMPUT SC, V6394, P61
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Rutle A, 2020, SOFTW SYST MODEL, V19, P1107, DOI 10.1007/s10270-020-00805-6
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Steinberg D., 2008, EMF: Eclipse Modeling Framework
   Taentzer Gabriele, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P326, DOI 10.1007/978-3-642-33654-6_22
   Taentzer G, 2013, LECT NOTES COMPUT SC, V8107, P254, DOI 10.1007/978-3-642-41533-3_16
   Wagelaar Dennis, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P192, DOI 10.1007/978-3-642-30476-7_13
   Williams J. R., 2012, P 6 INT WORKSH MOD E, P39
   Wimmer M., 2010, P 2 INT WORKSH MOD T, V711, P65
   Wohlin C., 2014, 18 INT C EV ASS SOFT, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   Yu IC, 2015, MODELSWARD 2015 PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P86
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 46
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2024
VL 212
AR 112012
DI 10.1016/j.jss.2024.112012
EA MAR 2024
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NX1G6
UT WOS:001203655600001
OA hybrid, Green Published
DA 2024-08-05
ER

PT J
AU Pishchukhina, O
   Gordieieva, D
   Rainer, A
AF Pishchukhina, Olga
   Gordieieva, Daria
   Rainer, Austen
TI Delivering computing module for the large part-time software development
   class from pre- to post-pandemic: An online learning experience
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software engineering education; Technology -enhanced learning; Virtual
   learning environment; Online technologies in education
ID PERFORMANCE; EDUCATION
AB Introduction: Covid-19 pandemic brought dramatic changes to higher education settings, particularly for curriculum delivery, moving quickly to online learning. This paper discusses teaching experience covering practices of technology-enhanced learning for the MSc Computing Foundations module (20 CATS) for a large class studying part-time Software Engineering course at the School of Electronics, Electrical Engineering and Computer Science (EEECS), Queen's University Belfast (QUB) during 2019-2022 academic years. We compare oncampus learning with the abrupt shift to online learning during the pandemic and with sustainable online learning a year later. The objective of this study is to answer how part-time software development students perceived their technology-enhanced learning experience from pre- to post-pandemic and to evaluate the impact of the shift to online learning for the part-time class Methods: This study is based on data collected during 2019/2020, 2020/2021, 2021/2022 academic years. Methodology types employed in this study include online observation with statistics collected from the virtual learning environment (VLE) Canvas, quantitative analysis, individual student surveys on teaching techniques and module content Results: This study provided an effective online teaching method for Computer Foundation module, reviewing the impact of different curriculum items and online educational activities starting with content delivery - both synchronous and asynchronous - and moving on to VLE Canvas discussion forums, ungraded formative quizzes, in-term formative assessment in the form of mock exam and, finally, to online summative assessment delivered on VLE Canvas. We investigate positive and negative aspects of technology-enhanced learning from pre- to postpandemic according to part-time adult students studying the MSc software development program and focus on how this effective learning environment contributes to education practice with a view what developments are worth retaining post-pandemic and what did not work well. Analysis of the data from individual student surveys on teaching techniques and module content for the Computing Foundations module allowed us to conclude that students perceived very positive their technology-enhanced learning experience after shifting to online learning. We also found out that changing the module delivery format (from face-to-face to online) did not affect the results of the students' performance. Conclusion and implications: Adaptation of the MSc Computing Foundation module to a new model of distance learning has proved to be successful, so we can conclude that this delivery format is appropriate for this target audience. This study explored the effectiveness of the pedagogical approach while also gaining valuable insights into the software development student experience of learning in the VLE. The findings from this study may contribute to developing effective teaching practices in software engineering education and adult learning, and improve the preparation of future software professionals in the IT industry.
C1 [Pishchukhina, Olga; Gordieieva, Daria; Rainer, Austen] Queens Univ Belfast, 18 Malone Rd,Comp Sci Bldg, Belfast BT9 5BN, North Ireland.
   [Gordieieva, Daria] Lutsk Natl Tech Univ, 75 Lvivska Str, UA-43018 Lutsk, Ukraine.
C3 Queens University Belfast; Ministry of Education & Science of Ukraine;
   Lutsk National Technical University
RP Gordieieva, D (corresponding author), Queens Univ Belfast, 18 Malone Rd,Comp Sci Bldg, Belfast BT9 5BN, North Ireland.
EM d.gordieieva@qub.ac.uk
OI Rainer, Austen/0000-0001-8868-263X; Gordieieva,
   Daria/0000-0003-0474-3138
FU British Academy
FX This research is partially supported by the British Academy. This have
   had impact on educational activities and strong effect on authors'
   teaching practice that is reflected in the paper. We thank the anonymous
   reviewers for their comments on the first version of this manuscript.
CR Adeliyi A, 2021, UKICER '21: PROCEEDINGS OF THE 2021 UNITED KINGDOM AND IRELAND COMPUTING EDUCATION RESEARCH CONFERENCE, DOI 10.1145/3481282.3481290
   Ali S, 2018, INFORM TECHNOL PEOPL, V31, P156, DOI 10.1108/ITP-10-2016-0246
   Alon L., 2023, Lecture Notes in Computer Science. Cham, V13971, DOI [10.1007/978-3-031-28035-1_33, DOI 10.1007/978-3-031-28035-1_33]
   [Anonymous], 2022, Postgraduate Taught Experience Survey
   [Anonymous], 2018, about us
   [Anonymous], 2021, National Student Survey - NSS
   [Anonymous], 2022, 2022 State Of Student Success & Engagement in Higher Education in the UK
   Anzovino ME, 2020, J CHEM EDUC, V97, P3240, DOI 10.1021/acs.jchemed.0c00766
   Balogh J., 2016, A Practical Guide to Creating Quality Exams, V1st
   Brown A.H., 2016, The essentials of instructional design: Connecting fundamental principles with process and practice, V3rd, DOI DOI 10.4324/9781315757438
   Brown A, 2022, HIGH EDUC RES DEV, V41, P284, DOI 10.1080/07294360.2020.1860912
   Carless D., 2020, P KEYN 1 PED HIGH ED
   Casalone G, 2023, HELIYON, V9, DOI 10.1016/j.heliyon.2023.e16464
   Casper AMA, 2022, J ENG EDUC, V111, P703, DOI 10.1002/jee.20473
   Crick Tom, 2020, UKICER '20: Proceedings of the United Kingdom & Ireland Computing Education Research Conference, P31, DOI 10.1145/3416465.3416472
   Crick T, 2021, IEEE GLOB ENG EDUC C, P1054, DOI 10.1109/EDUCON46332.2021.9453846
   De Guzman M.J.J, 2020, Asian J. Multidiscip. Stud., V3, P28
   DfE, 2020, Working Futures 2017-2027: long-run labour market and skills projections for the UK
   Dhawan Shivangi, 2020, Journal of Educational Technology Systems, V49, P5, DOI 10.1177/0047239520934018
   Duncan S., 2020, User experience initiatives informing online course design at the Vet School
   Duncan S., 2019, Top tasks surveys have identified what really matters to students using Learn
   Farrell A.M., 2021, UCD Report, DOI [10.5281/zenodo.4574650, DOI 10.5281/ZENODO.4574650]
   Fiorini LA, 2022, J ADULT CONTIN EDUC, V28, P354, DOI 10.1177/14779714221082691
   Flynn S, 2022, INT J LIFELONG EDUC, V41, P168, DOI 10.1080/02601370.2021.2022792
   Gardner AC, 2022, AM J DISTANCE EDUC, V36, P176, DOI 10.1080/08923647.2021.1928434
   Gikandi JW, 2011, COMPUT EDUC, V57, P2333, DOI 10.1016/j.compedu.2011.06.004
   Gill S.S., 2022, How COVID-19 changed computer science education
   Giray G, 2021, EDUC INF TECHNOL, V26, P6651, DOI 10.1007/s10639-021-10454-x
   Gonzalez T, 2020, PLOS ONE, V15, DOI 10.1371/journal.pone.0239490
   Gray A., 2022, Canvas VLE Templates-AY22/23
   Herrador-Alcaide TC, 2019, INT J EDUC TECHNOL H, V16, DOI 10.1186/s41239-019-0148-z
   Hodges C., 2020, Educause Review
   Horrell E., 2021, A card sort study has revealed how students expect to navigate Learn for hybrid learning
   Hrastinski S., 2008, EDUCAUSE Q, V31, P51, DOI DOI 10.4324/9780203134528-11
   Isbell LM, 2009, TEACH PSYCHOL, V36, P185, DOI 10.1080/00986280902959960
   Learning and Work Institute, 2022, Rates of adult participation in learning
   Learning and Work Institute, 2022, Adult Participation in Learning Survey 2022
   Lee C., 2022, What is item analysis? And other important exam design principles
   Lee K, 2022, EDUC REV, V74, P460, DOI 10.1080/00131911.2021.1978401
   Linnes C, 2022, EDUC SCI, V12, DOI 10.3390/educsci12100721
   Long H.E., 2006, COLL TEACH, V54, P237
   Martin F, 2019, INTERNET HIGH EDUC, V42, P34, DOI 10.1016/j.iheduc.2019.04.001
   Maslov I, 2021, INT J INF LEARN TECH, V38, P344, DOI 10.1108/IJILT-03-2021-0046
   Mbunge E., 2021, COVID-19 and online learning: factors influencing students' academic performance in first-year computer programming courses in higher education, DOI [10.2139/ssrn.3757988, DOI 10.2139/SSRN.3757988]
   McGowan A., 2022, P 7 INT C HUM INT EM, DOI [10.54941/ahfe100887.IHIET-AI2022, DOI 10.54941/AHFE100887.IHIET-AI2022]
   OECD, 2020, Reducing skills imbalances in Northern Ireland
   OECD, 2020, Creating a culture of lifelong learning in Northern Ireland
   Office for Students, 2020, Digital poverty' risks leaving students behind
   Ouhbi S, 2020, IEEE GLOB ENG EDUC C, P202, DOI [10.1109/EDUCON45650.2020.9125353, 10.1109/educon45650.2020.9125353]
   Pick L., 2021, Reflections, V31, P2
   Pishchukhina O, 2022, PROCEEDINGS OF THE 2022 31ST ANNUAL CONFERENCE OF THE EUROPEAN ASSOCIATION FOR EDUCATION IN ELECTRICAL AND INFORMATION ENGINEERING (EAEEIE), P289, DOI 10.1109/EAEEIE54893.2022.9820299
   Pishchukhina O, 2021, EAEEIE ANN CONF, P158, DOI 10.1109/EAEEIE50507.2021.9530953
   Pishchukhina O, 2021, EAEEIE ANN CONF, P188, DOI 10.1109/EAEEIE50507.2021.9530851
   PWC, 2020, PWC: COVID-19: UK industry focus-where next for universities?
   PWC, 2021, COVID-19 recovery and improvement: locking-in the benefits and overcoming the challenges
   QUB, 2022, Software development (Part Time)
   Queen's University Belfast, 2023, Student Evaluation Of Teaching
   Roache D., 2020, INT STUDIES ED ADM, V48, P103
   Roy H, 2020, J CLIN DIAGN RES, V14, pAC01, DOI 10.7860/JCDR/2020/44869.13797
   Schmidt M., 2020, Learner and User Experience Research: An Introduction for the Field of Learning Design Technology
   Sekulich K.M., 2020, Delta Kappa Gamma Bulletin, V86, P17
   Snowball JD, 2012, INNOV EDUC TEACH INT, V49, P195, DOI 10.1080/14703297.2012.677658
   Stewart WH, 2022, J RES TECHNOL EDUC, V54, pS273, DOI 10.1080/15391523.2021.1891996
   Straights W., 2007, COLL TEACH, V55, P170, DOI 10/1379296701
   Tawfik AA, 2022, TECHNOL KNOWL LEARN, V27, P309, DOI 10.1007/s10758-020-09482-2
   Padilla-Carmona MT, 2016, REV COMPLUT EDUC, V27, P1229, DOI 10.5209/rev_RCED.2016.v27.n3.47669
   The University of Edinburg, 2021, Usability tests have revealed how students and staff use Learn for hybrid teaching and learning
   Toti Giulia, 2021, SN Comput Sci, V2, P378, DOI 10.1007/s42979-021-00733-2
   UNESCO, 2021, COVID-19: reopening and reimagining universities, survey on higher education through the UNESCO National Commissions
   UNESCO, 2022, UNESCO HED Roadmap 2030. BEYOND LIMITS. New Ways to Reinvent Higher Education
   Universities UK, 2022, Lessons from the pandemic: making the most of technologies in teaching
   UPP Foundation, 2021, Students prioritise a return to face to face teaching from September 2021
   Van Wart M., 2019, PAN PACIFIC J BUSINE, V10, P1
   Wiliam D., 2013, Voices in the Middle, V21, P15
   Yu ZG, 2021, INT J EDUC TECHNOL H, V18, DOI 10.1186/s41239-021-00252-3
   Zamboglou L., 2022, Understanding what really matters to students
   Zanjani N, 2017, AUSTRALAS J EDUC TEC, V33, P19, DOI 10.14742/ajet.2938
NR 77
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111959
DI 10.1016/j.jss.2024.111959
EA FEB 2024
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KQ5T2
UT WOS:001181453100001
OA Green Published, hybrid
DA 2024-08-05
ER

PT J
AU Boll, A
   Rani, P
   Schultheiss, A
   Kehrer, T
AF Boll, Alexander
   Rani, Pooja
   Schultheiss, Alexander
   Kehrer, Timo
TI Beyond code: Is there a difference between comments in visual and
   textual languages?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Documentation; Graphical; Diagram; Knowledge-transfer; Simulink;
   Model-driven engineering; Comment clones; Taxonomy
AB Code comments are crucial for program comprehension and maintenance. To better understand the nature and content of comments, previous work proposed taxonomies of comment information for textual languages, notably classical programming languages. However, paradigms such as model -driven or model -based engineering often promote the use of visual languages, to which existing taxonomies are not directly applicable. Taking MATLAB/Simulink as a representative of a sophisticated and widely used modeling environment, we extend a multi-language comment taxonomy onto new (visual) comment types and two new languages: Simulink and MATLAB. Furthermore, we outline Simulink commenting practices and compare them to textual languages. We analyze 259,267 comments from 9095 Simulink models and 17,792 MATLAB scripts. We identify the comment types, their usage frequency, classify comment information, and analyze their correlations with model metrics. We manually analyze 757 comments to extend the taxonomy. We also analyze commenting guidelines and developer adherence to them. Our extended taxonomy, SCoT (Simulink Comment Taxonomy), contains 25 categories. We find that Simulink comments, although often duplicated, are used at all model hierarchy levels. Of all comment types, Annotations are used most often; Notes scarcely. Our results indicate that Simulink developers, instead of extending comments, add new ones, and rarely follow commenting guidelines. Overall, we find Simulink comment information comparable to textual languages, which highlights commenting practice similarity across languages.
C1 [Boll, Alexander; Kehrer, Timo] Univ Bern, Bern, Switzerland.
   [Rani, Pooja] Univ Zurich, Zurich, Switzerland.
   [Schultheiss, Alexander] Paderborn Univ, Paderborn, Germany.
C3 University of Bern; University of Zurich; University of Paderborn
RP Boll, A (corresponding author), Univ Bern, Bern, Switzerland.
EM alexander.boll@inf.unibe.ch; rani@ifi.uzh.ch;
   alexander.boll@inf.unibe.ch; timo.kehrer@unibe.ch
RI Kehrer, Timo/AAI-6563-2020
OI Kehrer, Timo/0000-0002-2582-5557; Schultheiss,
   Alexander/0000-0002-1509-1449; Boll, Alexander/0000-0002-9881-9748
CR Abrahao S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P229, DOI 10.1109/MODELS.2017.5
   Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Amorim T, 2023, J OBJECT TECHNOL, V22, DOI 10.5381/jot.2023.22.2.a12
   [Anonymous], 1978, ACM Trans. Math. Softw.
   Barnard P., 2005, AIAA MOD SIM TECHN C, p5,888
   Blasi A, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111069
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Boll A, 2022, INNOV SYST SOFTW ENG, DOI 10.1007/s11334-022-00442-w
   Boll A, 2021, SOFTW SYST MODEL, V20, P2111, DOI 10.1007/s10270-021-00883-0
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Chowdhury SA, 2018, 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P45, DOI 10.1145/3196478.3196484
   de Brito M. A. G., 2011, 2011 International Conference on Clean Electrical Power, P99, DOI 10.1109/ICCEP.2011.6036361
   ELSHOFF JL, 1982, COMMUN ACM, V25, P512, DOI 10.1145/358589.358596
   Haghighatkhah A, 2017, J SYST SOFTWARE, V128, P25, DOI 10.1016/j.jss.2017.03.005
   He H, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1217, DOI 10.1145/3338906.3342494
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huang YA, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3582570
   Huang Y, 2020, SOFTWARE PRACT EXPER, V50, P227, DOI 10.1002/spe.2772
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jaskolka M, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P46, DOI 10.1109/MODELS50736.2021.00014
   Jay Graylin, 2009, Journal of Software Engineering and Applications, V2, P137, DOI 10.4236/jsea.2009.23020
   Jerzyk Marcel, 2023, Developments in Information and Knowledge, V7, P543
   Jingyi Zhang, 2018, Web Information Systems and Applications. 15th International Conference, WISA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11242), P39, DOI 10.1007/978-3-030-02934-0_4
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   Kostic M, 2023, ENG APPL ARTIF INTEL, V124, DOI 10.1016/j.engappai.2023.106485
   Kostic Marija, 2022, P 9 ICETRAN C
   Liebel G, 2014, LECT NOTES COMPUT SC, V8767, P166, DOI 10.1007/978-3-319-11653-2_11
   Lin B, 2023, IEEE T SOFTWARE ENG, V49, P1640, DOI 10.1109/TSE.2022.3185458
   Liu SF, 2023, P INT COMP SOFTW APP, P892, DOI 10.1109/COMPSAC57700.2023.00119
   Maalej W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2622669
   Mall R., 2018, Fundamentals of Software Engineering
   Misra V, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P110, DOI 10.1145/3341105.3374009
   Nurvitadhi Eriko, 2003, 33 ANN FRONT ED 2003, V1, pT3C
   Pantelic V, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P503, DOI 10.5220/0007586005030510
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Rani P, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111515
   Rani P, 2021, IEEE INT WORK C SO, P165, DOI 10.1109/SCAM52516.2021.00028
   Rani P, 2021, IEEE INT WORK C SO, P153, DOI 10.1109/SCAM52516.2021.00027
   Rani P, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111047
   Rani P, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09981-5
   Raskin Jef, 2005, Queue, V3, P64, DOI DOI 10.1145/1053331.1053354
   Schaap A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P47, DOI 10.1145/3270112.3270115
   Schroeder Jan, 2016, P 25 INT S SOFTW TES, P154
   Schulze CD, 2016, LECT NOTES COMPUT SC, V9781, P219, DOI 10.1007/978-3-319-42333-3_17
   Shrestha Sohil Lal, 2023, 2023 ACM/IEEE 26th International Conference on Model Driven Engineering Languages and Systems (MODELS), P273, DOI 10.1109/MODELS58315.2023.00024
   Shrestha SL, 2022, IEEE WORK CONF MIN S, P237, DOI 10.1145/3524842.3528001
   Shrestha Sohil Lal, 2023, Replicability study: Corpora for understanding Simulink models & projects
   Sridharan M, 2022, IEEE WORK CONF MIN S, P242, DOI 10.1145/3524842.3527998
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Storey MA, 2009, IEEE T SOFTWARE ENG, V35, P470, DOI 10.1109/TSE.2009.15
   Triola MF, 2006, Elementary statistics
   Wang C, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3546949
   Weiland Jens, 2014, P 8 INT WORKSH VAR M, P1
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   Wirfs-Brock Rebecca, 2003, Object Design: Roles, Responsibilities, and Collaborations
   Woodfield S. N., 1981, 5th International Conference on Software Engineering, P215
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Zhang XW, 2023, IEEE T SOFTWARE ENG, V49, P2285, DOI 10.1109/TSE.2022.3216279
NR 59
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
DI 10.1016/j.jss.2024.112087
EA MAY 2024
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TW9D3
UT WOS:001244404900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Mayr-Dorn, C
   Ratiu, CC
   de Paula, LM
   Keplinger, F
   Egyed, A
   Walden, G
AF Mayr-Dorn, Christoph
   Ratiu, Cosmina-Cristina
   de Paula, Luciano Marchezan
   Keplinger, Felix
   Egyed, Alexander
   Walden, Gala
TI Actionable light-weight process guidance
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Process; Constraints; Quality assurance; Traceability; Engineering
   guidance; Repairs
ID SOFTWARE; REQUIREMENTS; REPAIR; TRACEABILITY; ENVIRONMENTS; CONSISTENCY;
   SAFETY
AB Software engineering organizations in safety-critical domains require rigorous processes that include explicit software quality assurance measures (QA) to achieve high-quality and safe engineering artifacts. One major challenge for engineers is adhering to the correct process that is applicable in their specific working context, to understand which steps are ready to start, what actions are missing to complete their step, and when rework has happened. In this paper, we propose and evaluate ProGuide, a framework that provides actionable, light-weight process guidance by continuously assessing pre-conditions, post-conditions, and QA constraints. In case of a violation, it provides concrete repair actions. Evaluation on a safety-critical open source system and engineers from our industry partner Bosch showed that repairs are complete and small in number, and resulted in less frustration and fewer mistakes compared to being provided with no process guidance. Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board.
C1 [Mayr-Dorn, Christoph; Ratiu, Cosmina-Cristina; de Paula, Luciano Marchezan; Keplinger, Felix; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
   [Walden, Gala] Robert Bosch AG, Vienna, Austria.
C3 Johannes Kepler University Linz; Bosch
RP Mayr-Dorn, C (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
EM christoph.mayr-dorn@jku.at; cosmina-cristina.ratiu@jku.at;
   luciano.marchezan_de_paula@jku.at; alexander.egyed@jku.at;
   gala.walden@at.bosch.com
FU Austrian Science Fund (FWF) [10.55776/P34805, 10.55776/P31989]; state of
   Upper Austria [LIT -2019 -8 -SEE -118]; LIT Secure and Correct Systems
   Lab; Austrian Federal Ministry for Climate Action, Environment, Energy,
   Mobility, Innovation and Technology [881844]; Austrian Federal Ministry
   for Digital and Economic Affairs; Province of Upper Austria; Province of
   Styria
FX This work was funded by the Austrian Science Fund (FWF) under the grant
   numbers 10.55776/P34805 and 10.55776/P31989, by the state of Upper
   Austria via LIT -2019 -8 -SEE -118 and the LIT Secure and Correct
   Systems Lab, and by the FFG, Contract No. 881844: Pro 2 Future is funded
   within the Austrian COMET Program Competence Centers for Excellent
   Technologies under the auspices of the Austrian Federal Ministry for
   Climate Action, Environment, Energy, Mobility, Innovation and
   Technology, the Austrian Federal Ministry for Digital and Economic
   Affairs and of the Provinces of Upper Austria and Styria. COMET is
   managed by the Austrian Research Promotion Agency FFG.
CR Alajrami Sami, 2016, Computer Safety, Reliability and Security. 35th International Conference, SAFECOMP 2016. Proceedings: LNCS 9922, P309, DOI 10.1007/978-3-319-45477-1_24
   Ali S, 2014, LECT NOTES COMPUT SC, V8769, P223, DOI 10.1007/978-3-319-11743-0_16
   Bandinelli S, 1996, IEEE T SOFTWARE ENG, V22, P841, DOI 10.1109/32.553634
   Bangor A, 2009, J USABILITY STUD, V4, P114
   Barriga A., 2020, ACM IEEE INT C MOD D, P24
   Barthelmess P, 2003, INFORM SOFTWARE TECH, V45, P911, DOI 10.1016/S0950-5849(03)00091-0
   Brooke J., 1996, SUS-a quick and dirty usability scale, DOI [DOI 10.1201/9781498710411-35, DOI 10.1201/9781498710411]
   Brosgol B., 2010, Do-178c: A new standard for software safety certification
   Cabanillas C, 2022, IEEE T SERV COMPUT, V15, P1564, DOI 10.1109/TSC.2020.3001292
   Cleland-Huang J., Dronology Public Datasets
   Cleland-Huang J, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P109, DOI 10.1145/3183399.3183408
   Cleland-Huang Jane, 2014, FOSE, P55, DOI DOI 10.1145/2593882.2593891
   Colantoni A, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P450, DOI 10.1109/MODELS-C53483.2021.00069
   Cugola G., 1999, Proceedings. IEEE 8th International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises (WET ICE'99), P32, DOI 10.1109/ENABL.1999.805172
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Diebold P, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1879
   Dumas M., 2016, Managing Software Process Evolution: Traditional, Agile and beyond-How to Handle Process Change, P165, DOI [10.1007/978-3-319, DOI 10.1007/978-3-319]
   Egyed A, 2018, COMPUTER, V51, P28, DOI 10.1109/MC.2018.1451666
   Ellner R, 2010, LECT NOTES COMPUT SC, V6138, P116, DOI 10.1007/978-3-642-13595-8_11
   Fernstrom C., 1993, Second International Conference on the Software Process. Continuous Software Process Improvement (Cat. No.93TH0509-0), P12, DOI 10.1109/SPCON.1993.236825
   Food U. Administration D., 2022, Code of federal regulations-title 21-part 820 quality system regulation
   Geppert A, 1998, INFORM SYST, V23, P235, DOI 10.1016/S0306-4379(98)00011-8
   Gruhn V, 2002, ANN SOFTW ENG, V14, P363, DOI 10.1023/A:1020522111961
   Grundy J. C., 1998, Automated Software Engineering, V5, P27, DOI 10.1023/A:1008606308460
   Hachemi A, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2456
   Hart SG., 2006, P HUM FACT ERG SOC A, V50, P904, DOI [10.1177/154193120605000909, DOI 10.1177/154193120605000909]
   Henriksson J, 2018, PROCEEDINGS 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR AI IN AUTONOMOUS SYSTEMS (SEFAIAS), P47, DOI 10.1145/3194085.3194090
   Junkermann G., 1994, Software Process Modelling and Technology, P103
   Khelladi DE, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P113, DOI 10.1145/3357766.3359546
   Khelladi DE, 2017, J SYST SOFTWARE, V134, P242, DOI 10.1016/j.jss.2017.09.010
   Klare H, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P156, DOI 10.1145/3270112.3275335
   Knuplesch D, 2017, INFORM SYST, V64, P381, DOI 10.1016/j.is.2016.10.006
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Kramer DB, 2014, FOOD DRUG LAW J, V69, P1
   Kretschmer R, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2020.110889
   Kumar A, 2013, INFORMS J COMPUT, V25, P543, DOI 10.1287/ijoc.1120.0520
   LaMarca A., 1999, ECSCW'99. Proceedings of the Sixth European Conference on Computer Supported Cooperative Work, P1
   Ly LT, 2015, INFORM SYST, V54, P209, DOI 10.1016/j.is.2015.02.007
   Macedo N, 2017, IEEE T SOFTWARE ENG, V43, P615, DOI 10.1109/TSE.2016.2620145
   Macher G., 2017, INT C COMP SAF REL S, P273
   Mäder P, 2013, IEEE SOFTWARE, V30, P58, DOI 10.1109/MS.2013.60
   Maggi Fabrizio Maria, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P132, DOI 10.1007/978-3-642-23059-2_13
   Marchezan L, 2022, 2022 IEEE/ACM JOINT 16TH INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES AND 17TH ACM/IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICSSP/ICGSE 2022), P82, DOI 10.1145/3529320.3529330
   Maro S, 2022, REQUIR ENG, V27, P53, DOI 10.1007/s00766-021-00361-5
   Maro S, 2018, J SYST SOFTWARE, V141, P85, DOI 10.1016/j.jss.2018.03.060
   Mayr-Dorn C., 2023, Supporting online material
   Mayr-Dorn C, 2021, PROC INT CONF SOFTW, P1298, DOI 10.1109/ICSE43902.2021.00118
   McHugh M, 2014, J SOFTW-EVOL PROC, V26, P504, DOI 10.1002/smr.1608
   Mosquera D, 2022, LECT NOTES BUS INF P, V452, P73, DOI 10.1007/978-3-031-07481-3_9
   Murphy-Hill E., 2014, Recommendation Systems in Software Engineering, P223, DOI DOI 10.1007/978-3-642-45135-59
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI DOI 10.1145/514183.514186
   Ohrndorf M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3419017
   Ohrndorf M, 2018, PROC IEEE ACM INT C, P105, DOI 10.1145/3183440.3183498
   Oliveira P, 2017, COMM COM INF SC, V748, P216, DOI 10.1007/978-3-319-64218-5_17
   Pohl K, 1999, ACM T SOFTW ENG METH, V8, P343, DOI 10.1145/322993.322995
   Puissant JP, 2015, SOFTW SYST MODEL, V14, P461, DOI 10.1007/s10270-013-0317-9
   Rahimi M, 2018, EMPIR SOFTW ENG, V23, P2198, DOI 10.1007/s10664-017-9561-x
   Ratiu CC, 2023, Arxiv, DOI arXiv:2312.13012
   Reder Alexander, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P202, DOI 10.1007/978-3-642-33666-9_14
   Rempel P, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P747, DOI 10.1145/2889160.2892657
   Rempel P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P943, DOI 10.1145/2568225.2568290
   Robillard M.P., 2014, Recomm Syst Softw Eng
   Torres W, 2021, SOFTW SYST MODEL, V20, P897, DOI 10.1007/s10270-020-00834-1
   Tröls MA, 2022, SOFTW SYST MODEL, V21, P2489, DOI 10.1007/s10270-022-00984-4
   van Beest NRTP, 2014, INFORM SYST, V39, P45, DOI 10.1016/j.is.2013.07.003
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
   Winkler D, 2019, COMM COM INF SC, V1060, P339, DOI 10.1007/978-3-030-28005-5_26
   Xiang Zhao, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P110, DOI 10.1109/ICSSP.2012.6225953
   Zhao X., 2013, P INT C SOFTW SYST P, P56, DOI [10.1145/2486046.2486057, DOI 10.1145/2486046.2486057]
NR 70
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112064
DI 10.1016/j.jss.2024.112064
EA APR 2024
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SO1F4
UT WOS:001235294200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Ayas, HM
   Hebig, R
   Leitner, P
AF Ayas, Hamdy Michael
   Hebig, Regina
   Leitner, Philipp
TI An empirical investigation on the competences and roles of practitioners
   in Microservices-based Architectures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Microservices; Technical competences; Practitioners profiles; Developer
   roles; Stackoverflow
AB Microservices-based Architectures (MSAs) are gaining popularity since, among others, they enable rapid and independent delivery of software at scale, facilitating the delivery of business value. Additionally, there are attempts towards understanding practitioners' roles and technical knowledge. MSAs call for affinity in several technologies as well as business domains. This diversity makes it challenging to scope and describe the roles of practitioners. In addition, practitioners often do not receive training and contents of MSA training remain largely undefined, even though there are challenges in finding or developing relevant technical expertise. In this research, we determine the different technical roles that are required in MSAs, along with their detailed competences. We use public online forums (e.g., StackOverflow), where developers share technical knowledge. We analyze 13,517 public profiles of software engineers, deriving their technical competences. Our taxonomy of technical competences in MSAs, contains 11 competences clusters, organized in 3 collections of competences - Web Technologies, DevOps, and Data Technologies. In addition, we derive the roles of microservice practitioners and the characteristics of their roles. Our findings organize the technical competences of MSAs practitioners and determine the training topics and combination of topics that can prepare engineers for MSAs.
C1 [Ayas, Hamdy Michael; Leitner, Philipp] Chalmers Univ Gothenburg, CSE Dept, Gothenburg, Sweden.
   [Hebig, Regina] Univ Rostock, Inst Comp Sci, Rostock, Germany.
C3 Chalmers University of Technology; University of Rostock
RP Ayas, HM (corresponding author), Chalmers Univ Gothenburg, CSE Dept, Gothenburg, Sweden.
EM ayas@chalmers.se; regina.hebig@uni-rostock.de;
   philipp.leitner@chalmers.se
CR Ayas HM, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10308-9
   Baskarada S, 2020, J COMPUT INFORM SYST, V60, P428, DOI 10.1080/08874417.2018.1520056
   Blondel VD, 2008, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2008/10/P10008
   Brooks F. P., 1975, MYTHICAL MAN MONTH E
   Buchgeher G, 2017, LECT NOTES COMPUT SC, V10475, P208, DOI 10.1007/978-3-319-65831-5_15
   Capiluppi A, 2013, EMPIR SOFTW ENG, V18, P60, DOI 10.1007/s10664-011-9191-7
   Cerny T., 2023, How to Classify, and How to Detect Them
   DeMarco T., 1999, IEEE Software, V16, DOI 10.1109/52.805476
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Dragoni N., 2017, PRESENT ULTERIOR SOF, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Dragoni N, 2018, LECT NOTES COMPUT SC, V10742, P95, DOI 10.1007/978-3-319-74313-4_8
   Fritzsch J, 2019, PROC IEEE INT CONF S, P481, DOI 10.1109/ICSME.2019.00081
   Hassan S, 2020, SOFTWARE PRACT EXPER, V50, P1651, DOI 10.1002/spe.2869
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Lambiotte R, 2009, Arxiv, DOI [arXiv:0812.1770, 10.48550/arXiv.0812.1770physics.soc-ph, DOI 10.1109/TNSE.2015.2391998]
   Liang JT, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P170, DOI 10.1145/3540250.3549082
   Marlow J., 2013, P 2023 C COMP SUPP C, P117, DOI [10.1145/2441776.2441792, DOI 10.1145/2441776.2441792]
   Meesters M., 2022, P 1 INT C AI ENG SOF, P136, DOI DOI 10.1145/3522664.3528594
   Michael Ayas H., 2022, 2022 48 EUROMICRO C, P92, DOI [10.1109/SEAA56994.2022.00022, DOI 10.1109/SEAA56994.2022.00022]
   Michael Ayas H., 2021, P 15 ACMIEEE INT S E, P1
   Michael Ayas H., 2023, Replication package: An empirical investigation on the competences and roles of practitioners in Microservices-based Architectures, DOI [10.5281/zenodo.7898566, DOI 10.5281/ZENODO.7898566]
   Miranda Guilherme, 2022, SBCARS '22: Proceedings of the 16th Brazilian Symposium on Software Components, Architectures, and Reuse, P60, DOI 10.1145/3559712.3559715
   Montandon JE, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106485
   Montandon JE, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106429
   Newman S., 2015, Building Microservices
   Sarma A, 2016, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2016.35
   Singer L.G., 2013, Improving the adoption of software engineering practices through persuasive interventions
   Smith EK, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P15, DOI [10.1145/2897586.2897596, 10.1109/CHASE.2016.011]
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Waseem M, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P135, DOI [10.1145/3510457.3513079, 10.1109/ICSE-SEIP55303.2022.9793911]
   Waseem M, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111061
   Wu MH, 2022, EUR CON SFTWR MTNCE, P432, DOI 10.1109/SANER53432.2022.00058
   Zhou X, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111521
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
NR 35
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112055
DI 10.1016/j.jss.2024.112055
EA APR 2024
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RJ6V1
UT WOS:001227344600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Goerer, B
   Aydemir, FB
AF Goerer, Binnur
   Aydemir, Fatma Basak
TI Exploring the REIT architecture for requirements elicitation interview
   training with robotic and virtual tutors
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software engineering education; Requirements elicitation interview
   training; Empirical evaluation; Generic architecture; Robotic tutor;
   Virtual tutor
ID ACCEPTANCE; EDUCATION; ANXIETY; GAME; INSTRUCTION; EXPERIENCES;
   ENGAGEMENT; MODEL; SIZE; AGE
AB Requirements elicitation interviews are a widely adopted technique where the interview success depends on the interviewer's preparedness and communication skills. Students can enhance these skills through practice interviews. However, organizing practice interviews for many students presents scalability challenges, given the time and effort required to involve stakeholders in each session. To address this, we propose REIT, an extensible architecture for Requirements Elicitation Interview Training system leveraging technologies such as robots and voice systems. REIT has components to support both the interview phase, wherein students act as interviewers while the system assumes the role of an interviewee, and the feedback phase, during which the system assesses students' performance and offers contextual and behavioral feedback to enhance their interviewing skills. We demonstrate the applicability of REIT through two implementations: RoREIT with a physical robotic agent and VoREIT with a virtual voice -only agent. We empirically evaluated both instances with a group of graduate students. The participants appreciated both systems. They demonstrated higher learning gain when trained with RoREIT, but they found VoREIT more engaging and easier to use. These findings indicate that each system has distinct benefits and drawbacks, suggesting that educators can customize REIT for various settings, considering preferences and available resources.
C1 [Goerer, Binnur] Bogazici Univ, Istanbul, Turkiye.
   [Aydemir, Fatma Basak] Bogazici Univ, Dept Comp Engn, Istanbul, Turkiye.
C3 Bogazici University; Bogazici University
RP Goerer, B (corresponding author), Bogazici Univ, Istanbul, Turkiye.
EM binnur.gorer@alum.bogazici.edu.tr; basak.aydemir@bogazici.edu.tr
RI Aydemir, Fatma Başak/AAF-3242-2020
OI Aydemir, Fatma Başak/0000-0003-3833-3997
FU Scientific and Technological Research Council of Turkiye;  [118C255]
FX The second author has been partially supported by the Scientific and
   Technological Research Council of Turkiye through BIDEB 2232 grant no.
   118C255.
CR Ahmad Muneeb Imtiaz, 2017, Multimodal Technologies and Interaction, V1, P14, DOI [10.3390/mti1030014, DOI 10.3390/MTI1030014]
   Alraimi KM, 2015, COMPUT EDUC, V80, P28, DOI 10.1016/j.compedu.2014.08.006
   Andrews B, 2006, J AFFECT DISORDERS, V95, P29, DOI 10.1016/j.jad.2006.05.003
   [Anonymous], 2003, Analyzing quantitative data
   [Anonymous], 2009, Requirements Engineering: From System Goals to UML Models to Software
   Appleton JJ, 2006, J SCHOOL PSYCHOL, V44, P427, DOI 10.1016/j.jsp.2006.04.002
   Ascalon ME, 2007, APPL MEAS EDUC, V20, P153, DOI 10.1080/08957340701301272
   Bano M, 2019, REQUIR ENG, V24, P259, DOI 10.1007/s00766-019-00313-0
   Barros Pablo, 2020, SN Comput Sci, V1, P321, DOI 10.1007/s42979-020-00325-6
   Bartlett ME, 2022, ACM T HUM-ROBOT INTE, V11, DOI 10.1145/3495246
   Beaudry A, 2010, MIS QUART, V34, P689
   Belpaeme T, 2018, SCI ROBOT, V3, DOI 10.1126/scirobotics.aat5954
   Bondie RS, 2019, REV RES EDUC, V43, P336, DOI 10.3102/0091732X18821130
   Cao Y., 2009, P 14 INT C INT US IN, P335, DOI DOI 10.1145/1502650.1502697
   Caponetto I, 2014, PROC EUR CONF GAME, P50
   Cer D, 2018, Arxiv, DOI arXiv:1803.11175
   Chang YP, 2023, Arxiv, DOI [arXiv:2307.03109, DOI 10.1145/3641289]
   Ciolacu M, 2018, INT SYM DES TECH ELE, P23, DOI 10.1109/SIITME.2018.8599203
   Cramer H., 2016, PMS, V9
   Darwish H, 2014, 2014 INTERNATIONAL CONFERENCE ON WEB AND OPEN ACCESS TO LEARNING (ICWOAL), DOI 10.1109/ICWOAL.2014.7009195
   Daun M, 2021, INT REQUIR ENG CONF, P257, DOI 10.1109/RE51729.2021.00030
   Daun M, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P307, DOI 10.1109/REW.2017.31
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Davis RO, 2023, J EDUC COMPUT RES, V61, P30, DOI 10.1177/07356331221100556
   de Winter JFC, 2010, Pract Assess Res Eval, V15, P1, DOI [10.7275/BJ1P-TS64, DOI 10.7275/BJ1P-TS64]
   Debnath S, 2020, LECT NOTES COMPUT SC, V12045, P160, DOI 10.1007/978-3-030-44429-7_12
   Engwall O, 2022, INT J SOC ROBOT, V14, P1067, DOI 10.1007/s12369-021-00849-8
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Ferrari A, 2024, Arxiv, DOI arXiv:2104.02410
   Ferrari A, 2020, REQUIR ENG, V25, P417, DOI 10.1007/s00766-020-00334-0
   Garbers B., 2006, 2006 ANN C EXP, P11
   García I, 2020, COMPUT STAND INTER, V67, DOI 10.1016/j.csi.2019.103377
   Garcia I, 2019, COMPUT APPL ENG EDUC, V27, P249, DOI 10.1002/cae.22072
   Goerer B, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2608
   Gorer B., 2023, Emerging technologies in requirements elicitation interview training: Robotic and virtual tutors experimental material, DOI DOI 10.5281/ZENODO.7861906
   Görer B, 2023, Intern Req Engg Work, P44, DOI 10.1109/REW57809.2023.00015
   Gouaillier D, 2008, Arxiv, DOI [arXiv:0807.3223, DOI 10.48550/ARXIV.0807.3223]
   Grivokostopoulou F, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10051739
   Gururangan S, 2020, Arxiv, DOI [arXiv:2004.10964, DOI 10.48550/ARXIV.2004.10964]
   Hadar I, 2014, REQUIR ENG, V19, P143, DOI 10.1007/s00766-012-0163-2
   Hainey T, 2011, COMPUT EDUC, V56, P21, DOI 10.1016/j.compedu.2010.09.008
   Hake RR, 1998, AM J PHYS, V66, P64, DOI 10.1119/1.18809
   Han J, 2005, 2005 IEEE INTERNATIONAL WORKSHOP ON ROBOT AND HUMAN INTERACTIVE COMMUNICATION (RO-MAN), P378
   Hoffman G, 2020, ACM T HUM-ROBOT INTE, V10, DOI 10.1145/3412374
   Holzinger A, 2011, UNIVERSAL ACCESS INF, V10, P245, DOI 10.1007/s10209-010-0212-x
   Hong SJ, 2013, DECIS SUPPORT SYST, V56, P122, DOI 10.1016/j.dss.2013.05.008
   Ibrahim Z., 2019, 2019 IEEE INT C ENG, P1
   Kakeshita T, 2015, 3RD INTERNATIONAL CONFERENCE ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY (ACIT 2015) 2ND INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND INTELLIGENCE (CSI 2015), P40, DOI 10.1109/ACIT-CSI.2015.16
   Kirschner PA, 2002, LEARN INSTR, V12, P1, DOI 10.1016/S0959-4752(01)00014-7
   Konlog R.I., 2023, REFSQ Co-Located Events
   Kwon JH, 2013, INT J HUM-COMPUT ST, V71, P978, DOI 10.1016/j.ijhcs.2013.07.003
   Laiq M, 2020, INT WORKS RE ENG E T, P1, DOI 10.1109/REET51203.2020.00007
   Lecoeuche R, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P190, DOI 10.1109/ICRE.1998.667825
   Lee KM, 2006, INT J HUM-COMPUT ST, V64, P962, DOI 10.1016/j.ijhcs.2006.05.002
   Leoste J, 2021, COMPUTERS, V10, DOI 10.3390/computers10090110
   Leyzberg D., 2012, P ANN M COGNITIVE SC
   Li J, 2015, INT J HUM-COMPUT ST, V77, P23, DOI 10.1016/j.ijhcs.2015.01.001
   Liaw SS, 2008, COMPUT EDUC, V51, P864, DOI 10.1016/j.compedu.2007.09.005
   Liu Y, 2023, Soft Engg Education, P141, DOI 10.1109/ICSE-SEET58685.2023.00020
   Lu J, 2022, ETR&D-EDUC TECH RES, V70, P1951, DOI 10.1007/s11423-022-10152-6
   McCarthy J, 2004, PERS PSYCHOL, V57, P607, DOI 10.1111/j.1744-6570.2004.00002.x
   Merchant Z, 2014, COMPUT EDUC, V70, P29, DOI 10.1016/j.compedu.2013.07.033
   Nachar N, 2008, TUTOR QUANT METHODS, V4, P13, DOI 10.20982/tqmp.04.1.p013
   Nakamura T, 2014, 2014 INTERNATIONAL CONFERENCE ON TEACHING, ASSESSMENT AND LEARNING (TALE), P375, DOI 10.1109/TALE.2014.7062566
   Ni JJ, 2023, ARTIF INTELL REV, V56, P3055, DOI 10.1007/s10462-022-10248-8
   Ochoa O, 2019, PROC FRONT EDUC CONF
   Ogata S., 2012, P 5 IND SOFTW ENG C, P105
   Olejnik S, 2003, PSYCHOL METHODS, V8, P434, DOI 10.1037/1082-989X.8.4.434
   Paschoal LN, 2018, 2018 XLIV LATIN AMERICAN COMPUTER CONFERENCE (CLEI 2018), P839, DOI 10.1109/CLEI.2018.00105
   Pelletier K., 2022, 2022 EDUCAUSE HORIZO
   Peng Liang, 2010, 2010 5th International Workshop on Requirements Engineering Education and Training (REET 2010), P1, DOI 10.1109/REET.2010.5633115
   Powell DM, 2021, J BUS PSYCHOL, V36, P829, DOI 10.1007/s10869-020-09708-1
   Quigley M., 2009, P ICRA OP SOURC SOFT, V3, P5, DOI DOI 10.1109/IECON.2015.7392843
   Radford A., 2022, Technical Report, P2022
   Radzikowski K, 2019, EURASIP J AUDIO SPEE, DOI 10.1186/s13636-018-0146-4
   Roohr KC, 2017, STUD HIGH EDUC, V42, P2284, DOI 10.1080/03075079.2016.1143925
   Rosenberg M.J., 1969, Artifacts Behav. Res., V21, P1
   RUSSELL JA, 1980, J PERS SOC PSYCHOL, V39, P1161, DOI 10.1037/h0077714
   Salam H, 2022, Arxiv, DOI arXiv:2209.15370
   Salthouse TA, 1996, PSYCHOL REV, V103, P403, DOI 10.1037/0033-295X.103.3.403
   Schirmer A, 2017, TRENDS COGN SCI, V21, P216, DOI 10.1016/j.tics.2017.01.001
   Seyff N, 2019, LECT NOTES COMPUT SC, V11412, P289, DOI 10.1007/978-3-030-15538-4_21
   Seyff N, 2009, LECT NOTES COMPUT SC, V5512, P147, DOI 10.1007/978-3-642-02050-6_13
   Shin J, 2019, FRONT PSYCHOL, V10, DOI 10.3389/fpsyg.2019.00825
   Sitzmann T, 2011, PERS PSYCHOL, V64, P489, DOI 10.1111/j.1744-6570.2011.01190.x
   Sjoberg DIK, 2023, IEEE T SOFTWARE ENG, V49, P1374, DOI 10.1109/TSE.2022.3176725
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Syrdal D.S., 2009, Adapt. Emergent Behav. Complex Syst.
   Timotheou S, 2023, EDUC INF TECHNOL, V28, P6695, DOI 10.1007/s10639-022-11431-8
   Trowler V., 2010, The Higher Education Academy, V11, P1, DOI DOI 10.1037/0022-0663.85.4.571
   Vega Katia, 2009, Proceedings Simposio Brasileiro de Sistemas Colaborativos (SBSC 2009), P116, DOI 10.1109/SBSC.2009.11
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   Vilar Elisangela, 2020, Design, User Experience, and Usability. Case Studies in Public and Personal Interactive Systems. 9th International Conference, DUXU 2020 Held as Part of the 22nd HCI International Conference, HCII 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12202), P351, DOI 10.1007/978-3-030-49757-6_25
   Wagner J, 2023, IEEE T PATTERN ANAL, V45, P10745, DOI 10.1109/TPAMI.2023.3263585
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Woolson R. F., 2007, International Encyclopedia of Statistical Science, P1, DOI 10.1002/0470011815. b2a15177
   Yang HD, 2004, DECIS SUPPORT SYST, V38, P19, DOI 10.1016/S0167-9236(03)00062-9
   Yasin A, 2018, INFORM SOFTWARE TECH, V95, P179, DOI 10.1016/j.infsof.2017.12.002
   Zhang IY, 2022, INT J SELECT ASSESS, V30, P302, DOI 10.1111/ijsa.12365
   Zhao Y, 2021, J EDUC CHANG, V22, P3, DOI 10.1007/s10833-021-09417-3
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 102
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2024
VL 212
AR 112018
DI 10.1016/j.jss.2024.112018
EA MAR 2024
PG 27
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QM7P5
UT WOS:001221358600001
DA 2024-08-05
ER

PT J
AU Meckenstock, JN
AF Meckenstock, Jan-Niklas
TI Shedding light on the dark side - A systematic literature review of the
   issues in agile software development methodology use
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Agile software development methodologies; Issues in ASD; Dark side of
   ASD; Information systems development agility; Systematic Literature
   Review
ID SUCCESS FACTORS; CHALLENGES
AB Context: Agile software development (ASD) methodologies address problems of traditional approaches, but can also cause various issues. A systematization of the spectrum of negative facets and how they arise has not been developed, leaving the dark side of ASD opaque. Objective: The paper systematizes findings on various negative facets to define what specific issues constitute the dark side of ASD. It also examines how relationships among these issues define the complexity of the downside. Method: A literature review of 70 articles was conducted following Kitchenham & Charters (2007). The content analysis employed the coding procedure by Gioia et al. (2013) to systematize the negative aspects of ASD methodologies. Results: The paper reveals 90 issues, grouped into 18 coherent themes. Six levels of manifestation point to the primarily affected constituents in ASD projects. In addition, 65 relationships among issues are explored, providing explanations for the complexity of the dark side of ASD. Conclusion: The systematization shows what aspects constitute the dark side of ASD, emphasizing its multidimensional nature along issues such as reduced developer well-being, product quality and development productivity. The analysis of how its complexity is defined reveals that customer misbehavior and delivery pressure are significant origins of other issues.
C1 [Meckenstock, Jan-Niklas] Univ Bamberg, Chair Ind Informat Syst, Weberei 5, D-96047 Bamberg, Germany.
C3 Otto Friedrich University Bamberg
RP Meckenstock, JN (corresponding author), Univ Bamberg, Chair Ind Informat Syst, Weberei 5, D-96047 Bamberg, Germany.
EM jan-niklas.meckenstock@uni-bamberg.de
CR Abrantes JF, 2011, INT SYMP EMP SOFTWAR, P355, DOI 10.1109/ESEM.2011.47
   Alami A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10208-4
   Alzoubi YI, 2016, INFORM MANAGE-AMSTER, V53, P22, DOI 10.1016/j.im.2015.08.003
   Baham C, 2022, INFORM SYST J, V32, P103, DOI 10.1111/isj.12336
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Elbanna A., 2009, AMCIS 2009 P
   Fitriani WR, 2016, INT C ADV COMP SCI I, P155, DOI 10.1109/ICACSIS.2016.7872736
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   Fowler M., 2001, Software Development, V9, P28
   Gioia DA, 2013, ORGAN RES METHODS, V16, P15, DOI 10.1177/1094428112452151
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Kitchenham B., 2007, GUIDELINES PERFORMIN, P1, DOI DOI 10.1145/1134285.1134500
   Kitchenham B., 2004, Keele University Technical Report TR/SE-0401
   Kude T, 2019, INFORM SYST RES, V30, P1145, DOI 10.1287/isre.2019.0856
   Kupiainen E, 2015, INFORM SOFTWARE TECH, V62, P143, DOI 10.1016/j.infsof.2015.02.005
   Meckenstock J.-N., 2022, ECIS 2022 P
   Overhage S., 2011, HAWAII INT C SYSTEM
   Overhage S., 2012, ECIS 2012 P
   Paré G, 2023, J DECIS SYST, DOI 10.1080/12460125.2023.2197701
   Paré G, 2015, INFORM MANAGE-AMSTER, V52, P183, DOI 10.1016/j.im.2014.08.008
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Racheva Z, 2010, LECT NOTES COMPUT SC, V6156, P131, DOI 10.1007/978-3-642-13792-1_12
   Racheva Z, 2009, LECT NOTES BUS INF P, V32, P141
   Rohunen A, 2010, LECT NOTES COMPUT SC, V6156, P77, DOI 10.1007/978-3-642-13792-1_8
   Sandberg J, 2011, ORGANIZATION, V18, P23, DOI 10.1177/1350508410372151
   Schlauderer S., 2013, ICIS 2013 P
   Silva FS, 2015, INFORM SOFTWARE TECH, V58, P20, DOI 10.1016/j.infsof.2014.09.012
   Strauss A. L., 1990, Basics of qualitative research
   Tarhan A, 2014, INFORM SOFTWARE TECH, V56, P477, DOI 10.1016/j.infsof.2013.12.002
   Tripp JF, 2016, J ASSOC INF SYST, V17, P267
   Usman M., 2014, P 10 INT C PREDICTIV
   VersionOne, 2021, 14th Annual State of Agile Report
   VersionOne, 2020, 13th Annual State of Agile Report
   VersionOne, 2018, 11th Annual State of Agile Report
   VersionOne, 2019, 12th Annual State of Agile Report
   Vidgen R, 2009, INFORM SYST RES, V20, P355, DOI 10.1287/isre.1090.0237
   Wohlin C., 2014, P 18 INT C EV ASS SO, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   Wolfswinkel JF, 2013, EUR J INFORM SYST, V22, P45, DOI 10.1057/ejis.2011.51
NR 44
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111966
DI 10.1016/j.jss.2024.111966
EA MAR 2024
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI2V1
UT WOS:001206586000001
DA 2024-08-05
ER

PT J
AU Kraemer, M
   Bormann, P
   Wuerz, HM
   Kocon, K
   Frechen, T
   Schmid, J
AF Kraemer, Michel
   Bormann, Pascal
   Wuerz, Hendrik M.
   Kocon, Kevin
   Frechen, Tobias
   Schmid, Jonas
TI A cloud-based data processing and visualization pipeline for the fibre
   roll-out in Germany
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Data processing; Point clouds; Panorama imagery; Cloud computing; 3D
   visualization
ID GENERATION
AB To support the roll-out of fibre broadband Internet in Germany, Deutsche Telekom has set itself the goal of connecting more than 2.5 million households per year to FTTH (Fibre to the Home). However, planning and approval processes have been very complex and time-consuming in the past due to high communication overhead between stakeholders, missing automation, and lack of information about planning areas. Telekom addresses this problem by collecting large amounts of geospatial data (3D point clouds and 360(degrees) panorama images), which can be used to automatically find suitable routes for fibre optic lines, to determine possible locations for distribution cabinets, as well as to build a 3D visualization helping to create detailed plans and to present them to decision makers. This speeds up planning tremendously, but processing this data and creating the visualization in a short time requires automation. In this systems paper, we present a data processing platform that we have built and operated together with Telekom over the course of the last six and a half years. The platform makes use of the cloud to manage Big Data in a scalable and elastic manner. It builds upon research results from us, specifically a scientific workflow management system to automate processing, as well as Fibre3D, a web-based tool that planners can use to display the processed data and to perform fine-planning. Besides the technological aspects, this paper also describes a practical use case that shows how the platform and Fibre3D help Telekom speed up the planning and approval process. We also summarize lessons learned and give recommendations for the design of systems similar to ours. With the presented technology, Telekom has been able to already connect more than 8 million households to FTTH and expects to even improve on this in the future. We consider our collaboration, therefore, an example of how well knowledge and technology transfer between research and industry can work, and, at the same time, what impact it can have on society.
C1 [Kraemer, Michel; Bormann, Pascal; Wuerz, Hendrik M.; Kocon, Kevin] Fraunhofer Inst Comp Graph Res IGD, Fraunhoferstr 5, D-64283 Darmstadt, Germany.
   [Kraemer, Michel; Bormann, Pascal; Wuerz, Hendrik M.; Kocon, Kevin] Tech Univ Darmstadt, Karolinenplatz 5, D-64289 Darmstadt, Germany.
   [Frechen, Tobias] Deutsch Telekom IT GmbH, Landgrabenweg 151, D-53227 Bonn, Germany.
   [Schmid, Jonas] Deutsch Telekom Tech GmbH, Alpenstr 8, D-90441 Nurnberg, Germany.
C3 Fraunhofer Gesellschaft; Technical University of Darmstadt
RP Kraemer, M (corresponding author), Fraunhofer Inst Comp Graph Res IGD, Fraunhoferstr 5, D-64283 Darmstadt, Germany.
EM michel.kraemer@igd.fraunhofer.de
OI Kramer, Michel/0000-0003-2775-5844
CR Adeleke A.K., 2018, Ph.D. thesis
   Alonso G, 1997, LECT NOTES COMPUT SC, V1262, P238
   [Anonymous], 2021, Cesium,
   Argo, 2022, Argo workflows
   Azavea, 2022, GeoTrellis
   Babahajiani P, 2017, MACH VISION APPL, V28, P679, DOI 10.1007/s00138-017-0845-3
   Berland A, 2017, URBAN FOR URBAN GREE, V21, P11, DOI 10.1016/j.ufug.2016.11.006
   BMDV, 2021, Bundesministeriums fur Digitales und Verkehr. Richtlinie "Forderung zur Unterstutzung des Gigabitausbaus der Telekommunikationsnetze in der Bundesrepublik Deutschland
   Bormann P., 2020, SMART TOOLS APPS GRA, P153, DOI [10.2312/stag.20201250, DOI 10.2312/STAG.20201250]
   Bottaccioli L, 2018, IEEE SYST J, V12, P2832, DOI 10.1109/JSYST.2017.2726350
   Cesium, 2018, CesiumGS/3d-tiles: Specification for streaming massive heterogeneous 3D geospatial datasets
   Dean J, 2008, COMMUN ACM, V51, P107, DOI 10.1145/1327452.1327492
   Deelman E, 2015, FUTURE GENER COMP SY, V46, P17, DOI 10.1016/j.future.2014.10.008
   Del Esposte AD, 2017, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON SMART CITIES AND GREEN ICT SYSTEMS (SMARTGREENS), P35, DOI 10.5220/0006306200350046
   Del Esposte AD, 2019, FUTURE GENER COMP SY, V93, P427, DOI 10.1016/j.future.2018.10.026
   Du Y, 2017, IOP C SER EARTH ENV, V59, DOI 10.1088/1755-1315/59/1/012070
   Flyte, 2022, Flyte
   Fraunhofer, 2022, Steep workflow management system
   Google, 2022, Street View
   Hadoop, 2022, Apache Hadoop
   Hobu, 2020, Entwine
   Hughes JN, 2015, PROC SPIE, V9473, DOI 10.1117/12.2177233
   Kang J, 2018, ISPRS J PHOTOGRAMM, V145, P44, DOI 10.1016/j.isprsjprs.2018.02.006
   Kessing M., 2023, Netze-Bilanz 2023: Glasfaser und 5G legen weiter zu
   Kessing M., 2022, Starke Jahresbilanz: 5Gund Glasfasernetze wachsen weiter
   Kessing M., 2022, Deutsche Telekom sets even faster pace for fiber rollout
   Khan Zaheer, 2013, 2013 IEEE/ACM 6th International Conference on Utility and Cloud Computing (UCC), P381, DOI 10.1109/UCC.2013.77
   Kocon K, 2022, AGILE GIScience, V3, DOI 10.5194/agile-giss-3-42-2022
   Kocon K, 2021, IEEE INT CONF BIG DA, P109, DOI 10.1109/BigData52589.2021.9671659
   Krämer M, 2019, FUTURE GENER COMP SY, V99, P308, DOI 10.1016/j.future.2019.04.042
   Krämer M, 2015, COMPUT GRAPH-UK, V49, P69, DOI 10.1016/j.cag.2015.02.005
   Kramer M., 2021, Communications in Computer and Information Science, V1446, P32, DOI [10.1007/978-3-030-83014-4_2, DOI 10.1007/978-3-030-83014-4_2]
   Kramer M., 2018, Ph.D. thesis, DOI [10.13140/RG.2.2.30034.66248, DOI 10.13140/RG.2.2.30034.66248]
   Krämer M, 2021, J CLOUD COMPUT-ADV S, V10, DOI 10.1186/s13677-021-00229-7
   Krylovskiy A, 2015, 2015 3RD INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD) AND INTERNATIONAL CONFERENCE ON OPEN AND BIG (OBD), P25, DOI 10.1109/FiCloud.2015.55
   Li XJ, 2019, LANDSCAPE URBAN PLAN, V191, DOI 10.1016/j.landurbplan.2018.07.011
   Liu ZY, 2019, J CLEAN PROD, V228, P303, DOI 10.1016/j.jclepro.2019.04.262
   Lu Y, 2019, LANDSCAPE URBAN PLAN, V191, DOI 10.1016/j.landurbplan.2018.08.029
   Ludlow D., 2012, 26 ANN AESOP C ANK T
   Medeiros C. B., 1996, Proceedings of the Seventh Israeli Conference on Computer Systems and Software Engineering, P129, DOI 10.1109/ICCSSE.1996.554918
   OECD, 2022, Organisation for Economic Co-operation and Development (OECD). Fixed and mobile broadband subscriptions per 100 inhabitants-June 2022
   Organisation for Economic Co-operation and Development (OECD), 2022, Total fixed and mobile broadband subscriptions by country
   Organisation for Economic Co-operation and Development (OECD), 2022, Percentage of fibre connections in total broadband-June 2022
   Reiterer A, 2020, REMOTE SENS-BASEL, V12, DOI 10.3390/rs12162530
   Sanchez A., 2023, Breitbandausbau: Telekom bietet jetzt 6 Millionen reine GlasfaserAnschlusse
   Schütz M, 2020, COMPUT GRAPH FORUM, V39, P155, DOI 10.1111/cgf.14134
   Schutz M., 2016, Potree: Rendering large point clouds in web browsers
   Shurtz R., 2019, JSON compression: Alternative binary formats and compression methods
   Tukaani, 2009, Tukaani. The.xz file format
   Wang CY, 2023, PROC CVPR IEEE, P7464, DOI 10.1109/CVPR52729.2023.00721
   Wang RS, 2018, IEEE J-STARS, V11, P606, DOI 10.1109/JSTARS.2017.2781132
   Wong K.-Y., 2022, Weights YoloV7
   Wurz H.M., 2023, AGILE: GIScience Series, V4, P53, DOI [10.5194/agile-giss-4-53-2023, DOI 10.5194/AGILE-GISS-4-53-2023]
   Zaharia M., 2010, HOTCLOUD, V10, P95
   Santana EFZ, 2018, ACM COMPUT SURV, V50, DOI 10.1145/3124391
NR 55
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 112008
DI 10.1016/j.jss.2024.112008
EA FEB 2024
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NC7H4
UT WOS:001198310000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Broy, M
AF Broy, Manfred
TI Time, causality, and realizability: Engineering interactive, distributed
   software systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Interaction; Distribution; Specification; Verification; Time; Interface
AB Today, software systems are distributed, concurrent, interactive, embedded, and often time-critical. They communicate and cooperate by data exchange. Introducing notions of time, causality, and realizability into interface-based data flow models results into a powerful model for engineering cyber-physical and, generally, distributed software systems. Architectures and their specification are designed by the concurrent composition of systems. This approach provides high expressive power supporting explicitly specification of interface behavior, encapsulation, abstraction, refinement, verification, concurrent composition, and modularity. The key idea is a formal, semantically coherent modelling, and specification framework that integrates the specification of timecritical and non-time-critical software embedded into cyber-physical systems. The approach supports the refinement of interface specifications of non-time-critical systems into interface specifications of time-critical systems and vice versa. This leads to an integrated specification and design approach for time-critical data flow architectures with soft, firm as well as hard time-critical requirements.
C1 [Broy, Manfred] Tech Univ Munich, Inst Informatik, D-80290 Munich, Germany.
C3 Technical University of Munich
RP Broy, M (corresponding author), Tech Univ Munich, Inst Informatik, D-80290 Munich, Germany.
EM broy@in.tum.de
CR ABADI M, 1993, ACM T PROGR LANG SYS, V15, P73, DOI 10.1145/151646.151649
   Banach S., 1922, Fundam. Math, V3, P133, DOI [10.4064/fm-3-1-133-181, DOI 10.4064/FM-3-1-133-181]
   BERRY G, 1992, THEOR COMPUT SCI, V96, P217, DOI 10.1016/0304-3975(92)90185-I
   Berry G, 2000, FOUNDAT COMPUT, P425
   Broy M., 2001, Specification and Development of Interactive Systems. Focus on Streams, Interfaces and Refinement
   Broy M., 2024, An Axiomatic Basis for System Design
   Broy M, 2023, THEOR COMPUT SCI, V974, DOI 10.1016/j.tcs.2023.114106
   Broy M, 2023, COMMUN ACM, V66, P62, DOI 10.1145/3569927
   Broy M, 2018, FORM METHOD SYST DES, V52, P33, DOI 10.1007/s10703-017-0304-9
   Broy M, 2015, COMPUTER, V48, P96, DOI 10.1109/MC.2015.139
   Broy M, 2015, INFORM COMPUT, V241, P277, DOI 10.1016/j.ic.2014.12.019
   Broy M, 2009, NATO SCI PEAC SECUR, V22, P75, DOI 10.3233/978-1-58603-976-9-75
   Broy M, 2010, COMPUT J, V53, P1758, DOI 10.1093/comjnl/bxq005
   Cardelli L, 1998, LECT NOTES COMPUT SC, V1378, P140, DOI 10.1007/BFb0053547
   Chandy K.M., 1988, PARALLEL PROGRAM DES
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   de Bakker J, 2000, FOUNDAT COMPUT, P99
   Dennis J. B., 1974, Programming Symposium, P362
   Dijkstra E. W., 1968, Programming languages, P43
   Dijkstra EdsgerW., 1963, Over de Sequentialiteit van Procesbeschrijvingen
   Geisberger E., 2012, AGENDACPS INTEGRIERT
   Gupta V, 1997, LECT NOTES COMPUT SC, V1201, P331, DOI 10.1007/BFb0014736
   Gurevich Yuri., 2000, ACM Trans. Comput. Log, V1
   Henzinger TA, 2003, P IEEE, V91, P84, DOI 10.1109/JPROC.2002.805825
   Herzberg D, 2005, FORM ASP COMPUT, V17, P1, DOI 10.1007/s00165-004-0051-8
   Hoare C.A.R, 1985, Communicating Sequential Processes
   KAHN G., 1974, SEMANTICS SIMPLE LAN, P471
   Kahn Gilles, 1977, Information Processing, P993
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   Lee EA, 2009, COMMUN ACM, V52, P70, DOI 10.1145/1506409.1506426
   Leeuwen J.V., 1990, Algorithms and Complexity, VA
   Milner R., 1980, A Calculus for Communicating Systems, volume 92, DOI DOI 10.1007/3-540-10235-3
   Milner Robin, 1999, Communicating and mobile systems: The pi calculus
   Misra J, 2005, NATO SCI SER II-MATH, V195, P285
   Neubeck P., 2012, Dissertation.
   OWICKI S, 1976, ACTA INFORM, V6, P319, DOI 10.1007/BF00268134
   Park D, 1981, Theoretical Computer Science, V104, P167, DOI [DOI 10.1007/BFB0017309, 10.1007/BFb0017309]
   Petri C. A., 1962, IFIP C, P386
   Rich E., 2008, Automata, computability and complexity: theory and applications
   Selic B., 2011, Int. J. Software and Informatics, V5, P313
   Selic B., 2020, Private Communication.
   Selic B, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.3.a2
   Tripakis S, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1985342.1985345
NR 43
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111940
DI 10.1016/j.jss.2023.111940
EA JAN 2024
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GT9W9
UT WOS:001155052100001
DA 2024-08-05
ER

PT J
AU Firouzi, E
   Ghafari, M
AF Firouzi, Ehsan
   Ghafari, Mohammad
TI Time to separate from StackOverflow and match with ChatGPT for
   encryption
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Java cryptography; Symmetric encryption; Security; StackOverflow;
   ChatGPT
ID VULNERABILITIES
AB Cryptography is known as a challenging topic for developers. We studied StackOverflow posts to identify the problems that developers encounter when using Java Cryptography Architecture (JCA) for symmetric encryption. We investigated security risks that are disseminated in these posts, and we examined whether ChatGPT helps avoid cryptography issues. We found that developers frequently struggle with key and IV generations, as well as padding. Security is a top concern among developers, but security issues are pervasive in code snippets. ChatGPT can effectively aid developers when they engage with it properly. Nevertheless, it does not substitute human expertise, and developers should remain alert.
C1 [Firouzi, Ehsan; Ghafari, Mohammad] Tech Univert Clausthal, Clausthal Zellerfeld, Germany.
RP Ghafari, M (corresponding author), Tech Univert Clausthal, Clausthal Zellerfeld, Germany.
EM ehsan.firouzi@tu-clausthal.de; mohammad.ghafari@tu-clausthal.de
CR Acar Y, 2017, P IEEE S SECUR PRIV, P154, DOI 10.1109/SP.2017.52
   Afrose S, 2023, IEEE T SOFTWARE ENG, V49, P485, DOI 10.1109/TSE.2022.3154717
   Ami A.S., 2022, 2022 IEEE S SEC PRIV
   André PM, 2022, PROC IEEE INT CONF S, P389, DOI 10.1109/ICSME55016.2022.00045
   Asare O, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10380-1
   Barker E., 2020, NIST Special Publication 800-57 Part 1 Revision 5
   Barker E., 2017, RECOMMENDATION TRIPL
   Bhargavan K, 2016, Sweet32: Birthday attacks on 64-bit block ciphers in TLS and OpenVpn
   Braga A, 2017, PROC INT SYMP SOFTW, P170, DOI 10.1109/ISSRE.2017.27
   Bühlmann N, 2022, 37TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1580, DOI 10.1145/3477314.3507123
   Chung L, 2012, Non-functional requirements in software engineering, V5
   Nguyen DC, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1065, DOI 10.1145/3133956.3133977
   Ferguson N., 2011, J WILEY SONS
   Firouzi E., 2020, P 14 ACM IEEE INT S, DOI DOI 10.1145/3382494.3422165
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Fu Y, 2023, Security weaknesses of copilot generated code in GitHub
   Gajrani J, 2017, CONSUM COMM NETWORK, P854, DOI 10.1109/CCNC.2017.7983245
   Green M, 2016, IEEE SECUR PRIV, V14, P40, DOI 10.1109/MSP.2016.111
   Gutmann P, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P315
   Hansen J, 2017, Gnupg frequently asked questions
   Hazhirpasand M., 2020, P 14 ACM IEEE INT S, P1
   Hazhirpasand M., 2019, 2019 ACMIEEE INT S E, P1, DOI DOI 10.1109/ESEM.2019.8870184
   Hazhirpasand M, 2021, 2021 18TH INTERNATIONAL CONFERENCE ON PRIVACY, SECURITY AND TRUST (PST), DOI 10.1109/PST52912.2021.9647786
   Hazhirpasand M, 2021, IEEE INT C S Q R S, P18, DOI 10.1109/QRS54544.2021.00013
   Hazhirpasand M, 2021, PROC IEEE INT CONF S, P659, DOI 10.1109/ICSME52107.2021.00076
   Hazhirpasand M, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P185, DOI 10.1109/ASEW52652.2021.00045
   Jalote P, 2004, 15 INT S SOFTW REL E
   Kafader S, 2021, PROC IEEE INT CONF S, P402, DOI 10.1109/ICSME52107.2021.00042
   Kallehbasti MMP, 2023, Soft Anal Evol Reeng, P743, DOI 10.1109/SANER56733.2023.00083
   Kavian A, 2024, P 28 INT C EV ASS SO
   Kruger S, 2017, CrySL: Validating correct usage of cryptographic APIs
   Kruger S, 2019, IEEE Trans. Softw. Eng.
   Lazar D, 2014, P 5 AS PAC WORKSH SY, DOI DOI 10.1145/2637166.2637237
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   Mindermann K, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P143, DOI 10.1109/QRS.2018.00028
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Oracle, 2021, Java cryptography architecture
   Patnaik N, 2019, PROCEEDINGS OF THE FIFTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2019), P245
   Pearce H, 2022, P IEEE S SECUR PRIV, P754, DOI 10.1109/SP46214.2022.00057
   Perry N, 2023, PROCEEDINGS OF THE 2023 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, CCS 2023, P2785, DOI 10.1145/3576915.3623157
   Piccolboni Luca, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P1972, DOI 10.1109/SP40001.2021.00010
   Rahaman S, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2455, DOI 10.1145/3319535.3345659
   Rahman Akond, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P200, DOI 10.1109/MSR.2019.00040
   Sandoval G, 2023, PROCEEDINGS OF THE 32ND USENIX SECURITY SYMPOSIUM, P2205
   Shao S, 2014, 2014 IEEE 12TH INTERNATIONAL CONFERENCE ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING (DASC)/2014 IEEE 12TH INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTING (EMBEDDEDCOM)/2014 IEEE 12TH INTERNATIONAL CONF ON PERVASIVE INTELLIGENCE AND COMPUTING (PICOM), P75, DOI 10.1109/DASC.2014.22
   Stackexchange, 2023, Stack exchange directory listing-internet archive
   Vaudenay S, 2002, LECT NOTES COMPUT SC, V2332, P534
   Verdi M, 2022, IEEE T SOFTWARE ENG, V48, P1497, DOI 10.1109/TSE.2020.3023664
   Wesslen A., 2012, Experimentation in Software Engineering
   Wetzels J, 2023, 2023 CYBER-PHYSICAL SYSTEMS AND INTERNET-OF-THINGS WEEK, CPS-IOT WEEK WORKSHOPS, P7, DOI 10.1145/3576914.3587485
   Zhang Y, 2023, IEEE T SOFTWARE ENG, V49, P288, DOI 10.1109/TSE.2022.3150302
   Zhang Y, 2022, INT C PROGRAM COMPRE, P190, DOI 10.1145/3524610.3527749
NR 52
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112135
DI 10.1016/j.jss.2024.112135
EA JUN 2024
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XI2V8
UT WOS:001260997000001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Gutiérrez-Fernández, AM
   Chacón-Luna, A
   Benavides, D
   Fuentes, L
   Rabiser, R
AF Gutierrez-Fernandez, Antonio M.
   Eva Chacon-Luna, Ana
   Benavides, David
   Fuentes, Lidia
   Rabiser, Rick
TI Variability management and software product line knowledge in software
   companies
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software product lines
ID ADOPTION
AB Software product line engineering aims to systematically generate similar products or services within a given domain to reduce cost and time to market while increasing reuse. Various studies recognize the success of product line engineering in different domains. Software variability have increased over the years in many different domains such as mobile applications, cyber-physical systems or car control systems to just mention a few. However, software product line engineering is not as widely adopted as other software development technologies. In this paper, we present an empirical study conducted through a survey distributed to many software development companies. Our goal is to understand their need of software variability management and the level of knowledge the companies have regarding software product line engineering. The survey was answered by 127 participants from more than a hundred of different software development companies. Our study reveals that most of companies manage a catalog of similar products in a way or another (e.g. cloneand-own, common modules that are statically imported,etc.), they mostly document the features of products using text or spreed sheet based documents and more than 66% of companies identify a base product from which they derive other similar products. We also found a correlation between the lack of Software Product Line (SPL) knowledge and the absence of reuse practices. Notably, this is the first study that explore software variability needs regardless of a company's prior knowledge of SPL. The results encourages further research to understand the reason for the limited knowledge and application of software product line engineering practices, despite the growing demand of variability management.
C1 [Eva Chacon-Luna, Ana] Univ Estatal Milagro, Km 1 1-2 Via Km 26, Milagro, Ecuador.
   [Gutierrez-Fernandez, Antonio M.; Benavides, David] Univ Seville, ETSII, I3US, Av Reina Mercedes S-N, Seville 41012, Spain.
   [Fuentes, Lidia] Univ Malaga, ITIS Software, Malaga, Spain.
   [Rabiser, Rick] Johannes Kepler Univ Linz, LIT CPS Lab, CDL VaSiCS, Altenberger Str 69, A-4040 Linz, Austria.
C3 Universidad Estatal de Milagro; University of Sevilla; Universidad de
   Malaga; Johannes Kepler University Linz
RP Gutiérrez-Fernández, AM (corresponding author), Univ Seville, ETSII, I3US, Av Reina Mercedes S-N, Seville 41012, Spain.
EM amgutierrez@us.es; achaconl1@unemi.edu.ec; benavides@us.es; lff@uma.es;
   rick.rabiser@jku.at
RI Rabiser, Rick/B-8673-2017; Benavides, David/K-2791-2014
OI Rabiser, Rick/0000-0003-3862-1112; Chacon-Luna, Ana
   E./0000-0001-6966-5033; Benavides, David/0000-0002-8449-3273; Gutierrez
   Fernandez, Antonio Manuel/0000-0002-2669-5942
FU FEDER/Ministry of Science, Innovation and Universities, State Research
   Agency, CDTI, Junta de Andalucia; H2020/EU [PID2021-122812OB-I00];
   TASOVA PLUS research network [RED2022- 134337-T]; MIDAS [IDI-20230256];
   LEIA [UMA18-FEDERJA-157]; DAEMON [101017109]; Austrian Federal Ministry
   for Digital and Economic Affairs; National Foundation for Research,
   Technology and Development; Christian Doppler Research Association
FX This work was partially supported by FEDER/Ministry of Science,
   Innovation and Universities, State Research Agency, CDTI, Junta de
   Andalucia and H2020/EU with the following grants: project Data -pl
   (PID2021-122812OB-I00) , TASOVA PLUS research network (RED2022-
   134337-T) , MIDAS (IDI-20230256) , LEIA (UMA18-FEDERJA-157) and DAEMON
   (101017109) . The financial support by the Austrian Federal Ministry for
   Digital and Economic Affairs, the National Foundation for Research,
   Technology and Development, and the Christian Doppler Research
   Association is gratefully acknowledged. We also want to thank Anna -Lena
   Hager for proofreading the article and helping us to improve it.
CR Bastos JF, 2017, J SYST SOFTWARE, V131, P112, DOI 10.1016/j.jss.2017.05.052
   Benavides D., 2014, 8 INT WORKSH VAR MOD
   Berger T, 2020, EMPIR SOFTW ENG, V25, P1755, DOI 10.1007/s10664-019-09787-6
   Bosch J., 2000, Design and Use of Software Architectures-Adopting and Evolving a Product-Line Approach
   Chacón-Luna AE, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P82, DOI 10.1145/3307630.3342421
   Ebert C, 2014, IEEE SOFTWARE, V31, P21, DOI 10.1109/MS.2014.72
   El-Sharkawy S, 2019, INFORM SOFTWARE TECH, V106, P1, DOI 10.1016/j.infsof.2018.08.015
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Chacón-Luna AE, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106389
   Fink A., 2003, The survey handbook, V2nd
   Fischer S, 2023, J SYST SOFTWARE, V199, DOI 10.1016/j.jss.2023.111624
   Freimut B., 2002, Report: ViSEK/007/E
   Helferich A, 2006, COMMUN ACM, V49, P66, DOI 10.1145/1183236.1183268
   Horcas JM, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P164, DOI 10.1145/3336294.3336304
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B., 2002, ACM SIGSOFT Softw. Eng. Notes, V27, P17
   Kitchenham B., 2004, PROCEDURES PERFORMIN, DOI DOI 10.5144/0256-4947.2017.79
   Kitchenham B.A., 2015, Evidence-based Software Engineering and Systematic Reviews, V4, P426
   Kitchenham B. A., 2008, Guide to Advanced Empirical Software Engineering, P63, DOI DOI 10.1007/978-1-84800-044-5_3
   Kitchenham BA., 2001, SIGSOFT SOFTW ENG NO, V26, P16, DOI DOI 10.1145/505532.505535
   Kitchenharn B., 2003, Software Engineering Notes, V28, P24, DOI 10.1145/638750.638758
   Lamancha B.P., 2010, SOFTWARE DATA TECHNO, P58
   Lindohf R, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09913-9
   Lopez-Herrejon RE, 2015, IEEE ICST WORKSHOP
   Luna Ana Eva Chacon, 2022, SPLC '22: Proceedings of the 26th ACM International Systems and Software Product Line Conference, P117, DOI 10.1145/3503229.3547060
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Martinez J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P38, DOI 10.1145/3109729.3109748
   Horcas JM, 2023, SOFTW SYST MODEL, V22, P377, DOI 10.1007/s10270-022-01011-2
   Mukelabai M, 2018, IEEE INT CONF AUTOM, P155, DOI 10.1145/3238147.3238201
   Nuseibeh B., 2000, Proceedings of the Conference on the Future of Software Engineering, P35, DOI DOI 10.1145/336512.336523
   Pohl K., 2005, Software product line engineering: foundations, principles and techniques, DOI [DOI 10.1007/3-540-28901-1, 10.1007/3-540-28901-1]
   Raatikainen M, 2019, J SYST SOFTWARE, V149, P485, DOI 10.1016/j.jss.2018.12.027
   Rabiser R, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P14, DOI 10.1145/3233027.3233028
   Robson C., 2002, REAL WORLD RES
   Schackmann H., 2006, 2006 INT WORKSH SOFT, P13
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Song QY, 2023, INFORM SOFTWARE TECH, V156, DOI 10.1016/j.infsof.2022.107135
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Van der Linden F.J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
NR 42
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112114
DI 10.1016/j.jss.2024.112114
EA JUN 2024
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WY9I0
UT WOS:001258547400001
OA hybrid
DA 2024-08-05
ER

PT J
AU Rigas, ES
   Lagakis, P
   Karadimas, M
   Logaras, E
   Latsou, D
   Hatzikou, M
   Poulakidas, A
   Billis, A
   Bamidis, P
AF Rigas, Emmanouil S.
   Lagakis, Paris
   Karadimas, Makis
   Logaras, Evangelos
   Latsou, Dimitra
   Hatzikou, Magda
   Poulakidas, Athanasios
   Billis, Antonis
   Bamidis, Panagiotis
TI Semantic interoperability for an AI-based applications platform for
   smart hospitals using HL7 FHIR
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Semantic; Interoperability; FHIR; Smart hospital; Digital healthcare;
   Artificial intelligence; Application platform
ID HEALTH-CARE
AB The digitization of the healthcare domain has the potential to drastically improve healthcare services, reduce the time to diagnosis, and lower costs. However, digital applications for the healthcare domain need to be interoperable to maximize their potential. Additionally, with the rapid expansion of Artificial Intelligence (AI) and, specifically, Machine Learning (ML), large amounts of diverse types of data are being utilized. Thus, to achieve interoperability in such applications, the adoption of common semantic data models becomes imperative. In this paper, we describe the adoption of such a common semantic data model, using the wellknown Health Level Seven Fast Health Interoperability Resources (HL7 FHIR) standard, in a platform that assists in the creation and storage of a plethora of AI-based applications for several medical conditions. The FHIR server's efficiency is being showcased by using it in an application predicting coronary artery stenosis as well as for managing the platform's key performance indicators.
C1 [Rigas, Emmanouil S.; Lagakis, Paris; Logaras, Evangelos; Billis, Antonis; Bamidis, Panagiotis] Aristotle Univ Thessaloniki, Sch Med, Lab Med Phys & Digital Innovat, Thessaloniki, Greece.
   [Rigas, Emmanouil S.; Bamidis, Panagiotis] Aristotle Univ Thessaloniki, AHEPA Univ Hosp, Thessaloniki, Greece.
   [Karadimas, Makis; Poulakidas, Athanasios] Netcompany Intrasoft, Athens, Greece.
   [Latsou, Dimitra; Hatzikou, Magda] Pharmecons Easy Access, Athens, Greece.
C3 Aristotle University of Thessaloniki; Aristotle University of
   Thessaloniki; Ahepa University Hospital
RP Rigas, ES (corresponding author), Aristotle Univ Thessaloniki, Sch Med, Lab Med Phys & Digital Innovat, Thessaloniki, Greece.; Rigas, ES (corresponding author), Aristotle Univ Thessaloniki, AHEPA Univ Hosp, Thessaloniki, Greece.
EM erigas@auth.gr
OI Bamidis, Panagiotis/0000-0002-9936-5805; Latsou,
   Dimitra/0000-0002-9451-0102; Lagakis, Paraskevas/0000-0002-0605-9172;
   Rigas, Emmanouil/0000-0002-8042-9135
FU HosmartAI project - "Hospital Smart development based on AI" from the
   European Union's Horizon 2020 research and innovation programme
   [101016834]
FX This work has been supported by the HosmartAI project - "Hospital Smart
   development based on AI", which has received funding from the European
   Union's Horizon 2020 research and innovation programme under grant
   agreement No 101016834
CR Aarts AA, 2015, SCIENCE, V349, DOI 10.1126/science.aac4716
   Baskar S, 2020, COMPUT COMMUN, V149, P17, DOI 10.1016/j.comcom.2019.10.004
   Cardoso L, 2018, HEALTH CARE DELIVERY AND CLINICAL SCIENCE: CONCEPTS, METHODOLOGIES, TOOLS, AND APPLICATIONS, P689, DOI 10.4018/978-1-5225-3926-1.ch036
   Duda SN, 2022, J AM MED INFORM ASSN, V29, P1642, DOI 10.1093/jamia/ocac105
   Hodapp D, 2022, J INF TECHNOL-UK, V37, P407, DOI 10.1177/02683962211064304
   Iroju Olaronke, 2013, International Journal of Innovation and Applied Studies, V3, P262
   Kiourtis A, 2019, INT J MED INFORM, V132, DOI 10.1016/j.ijmedinf.2019.104002
   Kush RD, 2020, J BIOMED INFORM, V107, DOI 10.1016/j.jbi.2020.103421
   Kyparissidis Kokkinidis Ilias, 2022, PCI '22: Proceedings of the 26th Pan-Hellenic Conference on Informatics, P335, DOI 10.1145/3575879.3576014
   Lehne M, 2019, NPJ DIGIT MED, V2, DOI 10.1038/s41746-019-0158-1
   Mirowski P, 2018, SOC STUD SCI, V48, P171, DOI 10.1177/0306312718772086
   Morley J, 2020, SOC SCI MED, V260, DOI 10.1016/j.socscimed.2020.113172
   Ngiam KY, 2019, LANCET ONCOL, V20, pE262, DOI 10.1016/S1470-2045(19)30149-4
   Nosek BA, 2015, SCIENCE, V348, P1422, DOI 10.1126/science.aab2374
   Olaronke I, 2016, PROCEEDINGS OF 2016 FUTURE TECHNOLOGIES CONFERENCE (FTC), P1152, DOI 10.1109/FTC.2016.7821747
   Panch T, 2019, NPJ DIGIT MED, V2, DOI 10.1038/s41746-019-0155-4
   Qayyum A, 2021, IEEE REV BIOMED ENG, V14, P156, DOI 10.1109/RBME.2020.3013489
   Reda R, 2019, ADV INTELL SYST, V869, P399, DOI 10.1007/978-3-030-01057-7_32
   Rubí JNS, 2020, INT J DISTRIB SENS N, V16, DOI 10.1177/1550147719889591
   Saripalle R, 2019, J BIOMED INFORM, V94, DOI 10.1016/j.jbi.2019.103188
   Secinaro S, 2021, BMC MED INFORM DECIS, V21, DOI 10.1186/s12911-021-01488-9
   Vicente-Saez R, 2018, J BUS RES, V88, P428, DOI 10.1016/j.jbusres.2017.12.043
   Vorisek CN, 2022, JMIR MED INF, V10, DOI 10.2196/35724
   Walsh I, 2021, NAT METHODS, V18, P1122, DOI 10.1038/s41592-021-01205-4
NR 24
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
AR 112093
DI 10.1016/j.jss.2024.112093
EA MAY 2024
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UJ8F3
UT WOS:001247774600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Nguyen, S
   Nguyen, TT
   Vu, TT
   Do, TD
   Ngo, KT
   Vo, HD
AF Nguyen, Son
   Nguyen, Thu-Trang
   Vu, Thanh Trong
   Do, Thanh-Dat
   Ngo, Kien-Tuan
   Vo, Hieu Dinh
TI Code-centric learning-based just-in-time vulnerability detection
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Just-in-time vulnerability detection; Code-centric; Code change
   representation; Graph-based model; Commit-level bugs
ID GRAPH
AB Attacks against computer systems exploiting software vulnerabilities can cause substantial damage to the cyber infrastructure of our modern society and economy. To minimize the consequences, it is vital to detect and fix vulnerabilities as soon as possible. Just -in -time vulnerability detection (JIT-VD) discovers vulnerability -prone ("dangerous") commits to prevent them from being merged into source code and causing vulnerabilities. By JIT-VD, the commits' authors, who understand the commits properly, can review these dangerous commits and fix them if necessary while the relevant modifications are still fresh in their minds. In this paper, we propose CodeJIT , a novel graph -based code -centric learning -based approach for just -in -time vulnerability detection. The key idea of CodeJIT is that the meaning of the code changes of a commit is the direct and deciding factor for determining if the commit is dangerous for the code. Based on that idea, we design a novel graph -based representation, Code Transformation Graph (CTG) to represent the semantics of code changes in terms of both code syntactic structure and program dependencies. A graph neural network (GNN) model is developed to capture the meaning of the code changes represented by our graph -based representation and learn to discriminate between dangerous and safe commits. We conducted experiments to evaluate the JIT-VD performance of CodeJIT on a dataset of 20K+ dangerous and safe commits in 506 real -world projects from 1998 to 2022. Our results show that CodeJIT significantly improves the state-of-the-art JIT-VD methods by up to 66% in Recall, 136% in Precision, and 68% in F1. Moreover, CodeJIT correctly classifies nearly 9/10 of dangerous/safe (benign) commits and even detects 69 commits that fix a vulnerability yet produce other issues in source code.
C1 [Nguyen, Son; Nguyen, Thu-Trang; Vu, Thanh Trong; Do, Thanh-Dat; Ngo, Kien-Tuan; Vo, Hieu Dinh] VNU Univ Engn & Technol, Fac Informat Technol, Hanoi, Vietnam.
C3 Vietnam National University Hanoi
RP Vo, HD (corresponding author), VNU Univ Engn & Technol, Fac Informat Technol, Hanoi, Vietnam.
EM sonnguyen@vnu.edu.vn; trang.nguyen@vnu.edu.vn; thanhvu@vnu.edu.vn;
   20020045@vnu.edu.vn; tuanngokien@vnu.edu.vn; hieuvd@vnu.edu.vn
OI Vo, Hieu/0000-0002-9407-1971; Do, Thanh Dat/0009-0008-2226-6447
FU Vietnam National Foundation for Sci-ence and Technology Development
   (NAFOSTED) [102.03-2023.14]
FX This research is supported by Vietnam National Foundation for Sci-ence
   and Technology Development (NAFOSTED) under grant number 102.03-2023.14.
CR Allamanis M, 2016, PR MACH LEARN RES, V48
   Amodio M., 2017, arXiv
   Bhandari G, 2021, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE '21), P30, DOI 10.1145/3475960.3475985
   Braz L, 2022, PROC INT CONF SOFTW, P1317, DOI 10.1145/3510003.3511560
   Busbridge D, 2019, Arxiv, DOI arXiv:1904.05811
   Cao SC, 2022, PROC INT CONF SOFTW, P1456, DOI 10.1145/3510003.3510219
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Checkmarx, 2022, Checkmarx
   Cheng JH, 2018, CHI 2018: EXTENDED ABSTRACTS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3170427.3188467
   Cheng X, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P519, DOI 10.1145/3533767.3534371
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Ding YRB, 2022, EUR CON SFTWR MTNCE, P959, DOI 10.1109/SANER53432.2022.00114
   Ding YRB, 2020, IEEE INT CONF AUTOM, P275, DOI 10.1145/3324884.3416587
   Ding ZS, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10118-5
   Dong JH, 2022, PROC INT CONF SOFTW, P970, DOI 10.1145/3510003.3510069
   Duan X, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4665
   Elder S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10179-6
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Flawfinder, 2022, Flawfinder
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Gascon H., 2013, P ACM WORKSH ART INT, P45
   Godefroid P, 2017, IEEE INT CONF AUTOM, P50, DOI 10.1109/ASE.2017.8115618
   Guo P.J., 2010, P 32 ACM IEEE INT C, V1, P495, DOI 10.1145/1806799.1806871
   Gvero T, 2015, ACM SIGPLAN NOTICES, V50, P416, DOI [10.1145/2814270.2814295, 10.1145/2858965.2814295]
   Hin D, 2022, IEEE WORK CONF MIN S, P596, DOI 10.1145/3524842.3527949
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hoan Anh Nguyen, 2019, 2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE). Proceedings, P819, DOI 10.1109/ICSE.2019.00089
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Iannone E, 2023, IEEE T SOFTWARE ENG, V49, P44, DOI 10.1109/TSE.2022.3140868
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kang J, 2021, SOFTWARE PRACT EXPER, V51, P748, DOI 10.1002/spe.2927
   Ngo KT, 2021, ASIA PAC SOFWR ENG, P327, DOI 10.1109/APSEC53868.2021.00040
   Kim S, 2017, P IEEE S SECUR PRIV, P595, DOI 10.1109/SP.2017.62
   Krasner H., 2021, The Cost of Poor Software Quality in the US: A 2020 Report
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li Y, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360588
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2016, ANN COMPUT SECURITY, P201, DOI 10.1145/2991079.2991102
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Li ZY, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1035, DOI 10.1145/3540250.3549081
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2539, DOI 10.1145/3133956.3138840
   Liu SQ, 2022, IEEE T SOFTWARE ENG, V48, P1800, DOI 10.1109/TSE.2020.3038681
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   liwerski J., 2005, ACM sigsoft software engineering notes, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147]
   Lomio F, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111283
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   Mikolov T., 2013, ARXIV, DOI DOI 10.48550/ARXIV.1301.3781
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Nguyen S., 2024, Code-centric learning-based just-in-time vulnerability detectio
   Nguyen S., 2023, P 15 IEEE INT C KNOW
   Nguyen S, 2023, J SYST SOFTWARE, V204, DOI 10.1016/j.jss.2023.111786
   Nguyen S, 2020, PROC INT CONF SOFTW, P1372, DOI 10.1145/3377811.3380926
   Ni C, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P672, DOI 10.1145/3540250.3549165
   Nie LY, 2021, NEUROCOMPUTING, V459, P97, DOI 10.1016/j.neucom.2021.05.039
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Schlichtkrull M, 2018, LECT NOTES COMPUT SC, V10843, P593, DOI 10.1007/978-3-319-93417-4_38
   SonarQube, 2022, SonarQube
   Sparks S, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P477, DOI 10.1109/ACSAC.2007.27
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Tian YC, 2022, PROC INT CONF SOFTW, P2389, DOI 10.1145/3510003.3510205
   Vo HD, 2023, INFORM SOFTWARE TECH, V164, DOI 10.1016/j.infsof.2023.107304
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang HY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464689
   Wu B., 2022, IEEE Trans. Dependable Secure Comput.
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yang LM, 2017, IEEE GLOB COMM CONF
   Zeng ZR, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P427, DOI 10.1145/3460319.3464819
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 79
TC 2
Z9 2
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112014
DI 10.1016/j.jss.2024.112014
EA APR 2024
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SQ1C0
UT WOS:001235813700001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Leong, IT
   Barbosa, R
AF Leong, Iat Tou
   Barbosa, Raul
TI Translating meaning representations to behavioural interface
   specifications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software engineering; Formal specification; Software verification; Java
   modelling language; Compilers
AB Higher -order logic can be used for meaning representation in natural language processing to encode the semantic relationships in text. Alternatively, using a formal specification language for meaning representation is more precise for specifying programs and widely supported by automatic theorem provers, while deductive verification based on higher order logic is less common for mainstream programming languages. This paper addresses the research question of translating higher -order logic meaning representations generated from method -level code comments into a formal specification language that extends first -order logic. Doing so requires resolving possible ambiguities in determining the appropriate semantics for predicates. This is an open challenge in the path toward using natural language processing with formal methods. To address this, the paper proposes an approach and constructs a compiler for translating meaning representations, generated from Java programs with method -level comments, into Java Modelling Language. We evaluate the compiler on a set of representative benchmarks, including programs and specifications from the Java API, by generating Java Modelling Language specifications and statically checking them with a theorem prover. Results show that in 94% of the cases Java Modelling Language is accurately generated and in 97% of those cases it can be automatically checked with a state-of-the-art theorem prover.
C1 [Leong, Iat Tou; Barbosa, Raul] Univ Coimbra, Dept Informat Engn, CISUC, Coimbra, Portugal.
C3 Universidade de Coimbra
RP Leong, IT (corresponding author), Univ Coimbra, Dept Informat Engn, CISUC, Coimbra, Portugal.
EM itleong@dei.uc.pt; rbarbosa@dei.uc.pt
OI Barbosa, Raul/0000-0002-2916-7571; Leong, Iat Tou/0000-0002-8019-0603
FU FCT-Foundation for Science and Technology, I.P./MCTES through national
   funds (PIDDAC) [UIDP/00326/2020, UIDB/00326/2020]
FX This work is funded by the FCT-Foundation for Science and Technology,
   I.P./MCTES through national funds (PIDDAC) , within the scope of CISUC
   R&D Unit-UIDB/00326/2020 or project code UIDP/00326/2020.
CR Ahrendt W., 2005, Softw. Syst. Model., V4, P32
   Bajwa Imran Sarwar, 2012, Computational Linguistics and Intelligent Text Processing. Proceedings 13th International Conference (CICLing 2012), P178, DOI 10.1007/978-3-642-28604-9_15
   Bajwa IS, 2010, IEEE INT ENTERP DIST, P204, DOI 10.1109/EDOC.2010.33
   Banarescu L., 2013, P 7 LING ANN WORKSH, P178
   Barbosa H, 2019, LECT NOTES ARTIF INT, V11716, P35, DOI 10.1007/978-3-030-29436-6_3
   Bertram Vincent, 2022, SLE 2022: Proceedings of the 15th ACM SIGPLAN International Conference on Software Language Engineering, P260, DOI 10.1145/3567512.3567534
   Bird S., 2009, Natural Language Processing with Python, DOI DOI 10.5555/1717171
   Blasi A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P242, DOI 10.1145/3213846.3213872
   Bos J, 2016, COMPUT LINGUIST, V42, P527, DOI 10.1162/COLI_a_00257
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Cabot J, 2022, ACM/IEEE 25TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022 COMPANION, P908, DOI 10.1145/3550356.3561542
   Cabral G, 2008, ELECTRON NOTES THEOR, V195, P171, DOI 10.1016/j.entcs.2007.08.032
   Carvalho G, 2015, LECT NOTES COMPUT SC, V9276, P283, DOI 10.1007/978-3-319-22969-0_20
   Chalin P, 2006, LECT NOTES COMPUT SC, V4111, P342
   Cok DR, 2011, LECT NOTES COMPUT SC, V6617, P472, DOI 10.1007/978-3-642-20398-5_35
   Cok DR, 2005, LECT NOTES COMPUT SC, V3362, P108
   Curran James R, 2007, P 45 ANN M ACL INT P, P33, DOI DOI 10.3115/1557769.1557781
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Delahaye Mickael., 2013, Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1230, DOI [10.1145/2480362.2480593, DOI 10.1145/2480362.2480593]
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   Ghosh S, 2016, Arxiv, DOI arXiv:1403.3142
   Goffi A, 2016, P 25 INT S SOFTW TES, DOI [DOI 10.1145/2931037.2931061, 10.1145/2931037.2931061]
   Kirchner F, 2015, FORM ASP COMPUT, V27, P573, DOI 10.1007/s00165-014-0326-7
   Leavens Gary T., 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI DOI 10.1145/1127878.1127884
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Martínez-Gómez P, 2016, PROCEEDINGS OF 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL-2016): SYSTEM DEMONSTRATIONS, P85
   Menghi C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/3338906.3338920
   Meyer B., 1997, Object-Oriented Software Construction, V2
   Motwani M, 2019, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2019.00035
   ones C.B., 1986, International Series in Computer Science
   OWRE S, 1992, LECT NOTES ARTIF INT, V607, P748
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Schmitt X, 2019, 2019 SIXTH INTERNATIONAL CONFERENCE ON SOCIAL NETWORKS ANALYSIS, MANAGEMENT AND SECURITY (SNAMS), P338, DOI [10.1109/snams.2019.8931850, 10.1109/SNAMS.2019.8931850]
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Slind K, 2008, LECT NOTES COMPUT SC, V5170, P28, DOI 10.1007/978-3-540-71067-7_6
   Tan L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P11, DOI 10.1145/1985793.1985796
   teedman M., 1996, Linguistic Inquiry
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Zhai J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P25, DOI 10.1145/3368089.3409716
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
NR 42
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 112009
DI 10.1016/j.jss.2024.112009
EA FEB 2024
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QO1Q2
UT WOS:001221725900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Massacci, F
   Papotti, A
   Paramitha, R
AF Massacci, Fabio
   Papotti, Aurora
   Paramitha, Ranindya
TI Addressing combinatorial experiments and scarcity of subjects by
   provably orthogonal and crossover experimental designs
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Design of experiments; Crossover experimental design; Full factorial
   design; Orthogonal design
ID 2-TREATMENT
AB Context: Experimentation in Software and Security Engineering is a common research practice, in particular with human subjects.
   Problem: The combinatorial nature of software configurations and the difficulty of recruiting experienced subjects or running complex and expensive experiments make the use of full factorial experiments unfeasible to obtain statistically significant results.
   Contribution: Provide comprehensive alternative Designs of Experiments (DoE) based on orthogonal designs or crossover designs that provably meet desired requirements such as balanced pair-wise configurations or balanced ordering of scenarios to mitigate bias or learning effects. We also discuss and formalize the statistical implications of these design choices, in particular for crossover designs.
   Artifact: We made available the algorithmic construction of the design for l = 2, 3, 4, 5 levels for arbitrary K factors and illustrated their use with examples from security and software engineering research.
C1 [Massacci, Fabio; Paramitha, Ranindya] Univ Trento, I-38122 Trento, Italy.
   [Massacci, Fabio; Papotti, Aurora] Vrije Univ Amsterdam, NL-1081HV Amsterdam, Netherlands.
C3 University of Trento; Vrije Universiteit Amsterdam
RP Massacci, F (corresponding author), Univ Trento, I-38122 Trento, Italy.; Massacci, F (corresponding author), Vrije Univ Amsterdam, NL-1081HV Amsterdam, Netherlands.
EM fabio.massacci@ieee.org; a.papotti@vu.nl; ranindya.paramitha@unitn.it
RI Paramitha, Ranindya/KRQ-1510-2024
OI Paramitha, Ranindya/0000-0002-6682-4243; Papotti,
   Aurora/0000-0003-3207-7662
CR Agresti Alan., 2007, STAT ART SCI LEARNIN
   Amador J, 2023, PROCEEDINGS OF THE NINETEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, SOUPS 2023, P263
   Antony J, 2021, TQM J, V33, P987, DOI 10.1108/TQM-09-2020-0223
   Aoyama Hideki, 2017, International Conference Interfaces and Human Computer Interaction 2017. Proceedings, P10
   Atta M, 2022, NEURAL COMPUT APPL, V34, P14373, DOI 10.1007/s00521-022-07215-3
   Barron A., 1997, Experimentation
   Basak S.K., 2023, arXiv
   Charness G, 2012, J ECON BEHAV ORGAN, V81, P1, DOI 10.1016/j.jebo.2011.08.009
   Chen J., 2022, P 18 USENIX S US PRI, P671
   Chew JY, 2023, COMPANION OF THE ACM/IEEE INTERNATIONAL CONFERENCE ON HUMAN-ROBOT INTERACTION, HRI 2023, P127, DOI 10.1145/3568294.3580056
   Chong CY, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: JOINT TRACK ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-JSEET 2021), P20, DOI 10.1109/ICSE-SEET52601.2021.00011
   Cicirello A, 2022, MECH SYST SIGNAL PR, V170, DOI 10.1016/j.ymssp.2021.108619
   Cummings R, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P3037, DOI 10.1145/3460120.3485252
   Dell'Amico M, 2018, LECT NOTES COMPUT SC, V10710, P158, DOI 10.1007/978-3-319-72926-8_14
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   FLEISS JL, 1989, CONTROL CLIN TRIALS, V10, P237, DOI 10.1016/0197-2456(89)90065-2
   FREEMAN PR, 1989, STAT MED, V8, P1421, DOI 10.1002/sim.4780081202
   Gargiulo F, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11188293
   GRIEVE AP, 1985, BIOMETRICS, V41, P979, DOI 10.2307/2530969
   GRIZZLE JE, 1965, BIOMETRICS, V21, P467, DOI 10.2307/2528104
   Gümüs DB, 2023, INFORM SCIENCES, V619, P153, DOI 10.1016/j.ins.2022.11.008
   Huaman N., 2022, P 18 USENIX S US PRI, P313
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jones B., 2014, Design and Analysis of Cross-Over Trials
   Juristo N., 2013, Basics of Software Engineering Experimentation
   Kacker RN, 2021, MATH COMPUT SCI, V15, P715, DOI 10.1007/s11786-021-00502-7
   KACKER RN, 1991, J RES NATL INST STAN, V96, P577, DOI 10.6028/jres.096.034
   Kanchana B, 1999, ECBS '99, IEEE CONFERENCE AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P188, DOI 10.1109/ECBS.1999.755879
   Kaushik S, 2023, PROCEEDINGS OF THE NINETEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, SOUPS 2023, P361
   Kersten L, 2023, PROCEEDINGS OF THE NINETEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, SOUPS 2023, P97
   Kitchenham B, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P65
   Kitchenham B, 2022, IEEE T SOFTWARE ENG, V48, P2802, DOI 10.1109/TSE.2021.3070480
   Kuhtreiber P., 2022, SOUPS'22, P117
   Langer M., 2022, SOUPS'22, P407
   Lee K, 2022, IEEE ROBOT AUTOM LET, V7, P1620, DOI 10.1109/LRA.2022.3141204
   Lee S, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P304, DOI 10.1145/3460120.3484553
   Ling C, 2007, INT J HUM-COMPUT INT, V22, P271, DOI 10.1080/10447310709336965
   Liu E, 2023, PROCEEDINGS OF THE NINETEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, SOUPS 2023, P77
   Malkin N., 2022, P 18 USENIX S US PRI, P633
   Mayer P., 2022, P 18 USENIX S US PRI, P77
   McCall M, 2023, PROCEEDINGS OF THE NINETEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, SOUPS 2023, P301
   McCormick M, 2022, SUSTAINABILITY-BASEL, V14, DOI 10.3390/su14137959
   Naiakshina A, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376791
   Naiakshina A, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P297
   Naiakshina A, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P311, DOI 10.1145/3133956.3134082
   Papotti Aurora, 2024, Zenodo, DOI 10.5281/ZENODO.10679479
   Papotti A, 2022, Arxiv, DOI arXiv:2209.07211
   Rader E, 2023, PROCEEDINGS OF THE NINETEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, SOUPS 2023, P457
   Rainer A, 2022, INFORM SOFTWARE TECH, V151, DOI 10.1016/j.infsof.2022.107002
   Rong GP, 2012, CONF SOFTW ENG EDUC, P120, DOI 10.1109/CSEET.2012.22
   Roy RK, 2010, A Primer on the Taguchi Method
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Sebastio S, 2020, COMPUT SECUR, V93, DOI 10.1016/j.cose.2020.101775
   Seo C, 2021, IEEE ACCESS, V9, P103988, DOI 10.1109/ACCESS.2021.3099773
   Serafini R, 2023, PROCEEDINGS OF THE NINETEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, SOUPS 2023, P321
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Solouma N, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12062885
   Tahaei M, 2022, PROCEEDINGS OF THE 2022 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI' 22), DOI 10.1145/3491102.3501957
   Tanco M, 2008, J ENG DESIGN, V19, P447, DOI 10.1080/09544820701749124
   Tyasnurita R, 2017, IEEE C EVOL COMPUTAT, P1474, DOI 10.1109/CEC.2017.7969477
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Vescan A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09947-7
   Volkamer M., 2022, SOUPS'22, P233
   Whalen T., 2022, P 18 USENIX S US PRI, P599
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Yoshikawa R., 2022, SOUPS'22, P19
   Zheng S., 2022, P 18 USENIX S US PRI, P253
   Zibaei S, 2023, PROCEEDINGS OF THE NINETEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, SOUPS 2023, P211
   Zibaei Samira., 2022, Eighteenth Symposium on Usable Privacy and Security (SOUPS 2022), P581
NR 70
TC 1
Z9 1
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111990
DI 10.1016/j.jss.2024.111990
EA FEB 2024
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ2U2
UT WOS:001200027400001
OA hybrid
DA 2024-08-05
ER

PT J
AU Casaluce, R
   Burattin, A
   Chiaromonte, F
   Lafuente, AL
   Vandin, A
AF Casaluce, Roberto
   Burattin, Andrea
   Chiaromonte, Francesca
   Lafuente, Alberto Lluch
   Vandin, Andrea
TI White-box validation of quantitative product lines by statistical model
   checking and process mining
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software product lines; Product line engineering; Probabilistic
   modeling; Statistical model checking; Process mining; Attack-defense
   trees
ID VERIFICATION
AB We propose a novel methodology to validate software product line (PL) models by integrating Statistical Model Checking (SMC) with Process Mining (PM). We consider the feature-oriented language QFLan from the PL engineering domain. QFLan allows to model PL equipped with rich cross-tree and quantitative constraints, as well as aspects of dynamic PLs such as the staged configurations. This richness allows us to easily obtain models with infinite state-space, calling for simulation-based analysis techniques, like SMC. For example, we use a running example with infinite state space. SMC is a family of analysis techniques based on the generation of samples of the dynamics of a system. SMC aims at estimating properties of a system like the probability of a given event (e.g., installing a feature), or the expected value of quantities in it (e.g., the average price of products from the studied family). Instead, PM is a family of data -driven techniques that uses logs collected on the execution of an information system to identify and reason about its underlying execution process. This often regards identifying and reasoning about process patterns, bottlenecks, and possibilities for improvement. In this paper, to the best of our knowledge, we propose, for the first time, the application of Process Mining (PM) techniques to the byproducts of Statistical Model Checking (SMC) simulations. This aims to enhance the utility of SMC analyses. Typically, if SMC gives unexpected results, the modeler has to discover whether these come from actual characteristics of the system, or from bugs in the model. This is done in a black-box manner, only based on the obtained numerical values. We improve on this by using PM to get a white-box perspective on the dynamics of the system observed by SMC. Roughly speaking, we feed the samples generated by SMC to PM tools, obtaining a compact graphical representation of the observed dynamics. This mined PM model is then transformed into a mined QFLan model, making it accessible to PL engineers. Using two well-known PL models, we show that our methodology is effective (helps in pinpointing issues in models, and in suggesting fixes), and that it scales to complex models. We also show that it is general, by applying it to the security domain.
C1 [Casaluce, Roberto; Chiaromonte, Francesca; Vandin, Andrea] Scuola Super Sant Anna, Inst Econ & L?MbeDS, Pisa, Italy.
   [Burattin, Andrea; Lafuente, Alberto Lluch; Vandin, Andrea] DTU Tech Univ Denmark, Lyngby, Denmark.
   [Chiaromonte, Francesca] Penn State Univ, Dept Stat, State Coll, PA USA.
   [Chiaromonte, Francesca] Penn State Univ, Huck Inst Life Sci, State Coll, PA USA.
C3 Scuola Superiore Sant'Anna; Technical University of Denmark;
   Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Pennsylvania Commonwealth System of
   Higher Education (PCSHE); Pennsylvania State University
RP Vandin, A (corresponding author), Scuola Super Sant Anna, Inst Econ & L?MbeDS, Pisa, Italy.
EM roberto.casaluce@santannapisa.it; andrea.vandin@santannapisa.it;
   francesca.chiaromonte@santannapisa.it; albl@dtu.dk;
   andrea.vandin@santannapisa.it
RI Lafuente, Alberto Lluch/G-4413-2011; Vandin, Andrea/L-4563-2018
OI Lafuente, Alberto Lluch/0000-0001-7405-0818; Vandin,
   Andrea/0000-0002-2606-7241; Casaluce, Roberto/0000-0002-5786-9167
CR Agha G, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3158668
   [Anonymous], 2015, SPIN 2015 P 22 INT S, V9232
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482, DOI 10.1109/ICSE.2013.6606594
   Bartoletti M., 2022, LEVERAGING APPL FORM
   Belzner Lenz, 2014, Specification, Algebra, and Software. Essays Dedicated to Kokichi Futatsugi: LNCS 8373, P188, DOI 10.1007/978-3-642-54624-2_10
   Berti A, 2019, Arxiv, DOI arXiv:1905.06169
   Burdek J., 2014, P 8 INT WORKSHOP VAR, DOI DOI 10.1145/2556624.2556627
   Casaluce Roberto, 2023, Business Process Management Workshops: BPM 2022 International Workshops, Revised Selected Papers. Lecture Notes in Business Information Processing (460), P243, DOI 10.1007/978-3-031-25383-6_18
   Chrszon P, 2018, FORM ASP COMPUT, V30, P45, DOI 10.1007/s00165-017-0432-4
   Ciancia V, 2016, LECT NOTES COMPUT SC, V9952, P657, DOI 10.1007/978-3-319-47166-2_46
   Clarke D, 2011, ACM SIGPLAN NOTICES, V46, P13, DOI 10.1145/1942788.1868298
   Clarke E, 2003, TIME-ICTL 2003: 10TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING AND FOURTH INTERNATIONAL CONFERENCE ON TEMPORAL LOGIC, PROCEEDINGS, P7
   Classen Andreas, 2012, International Journal on Software Tools for Technology Transfer, V14, P589, DOI 10.1007/s10009-012-0234-1
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2014, SCI COMPUT PROGRAM, V80, P416, DOI 10.1016/j.scico.2013.09.019
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Cordy M., 2013, Lecture Notes in Computer Science, V7740, P1, DOI [DOI 10.1007/978-3-642-36249, 10.1007/978-3-642-36249-1_1, DOI 10.1007/978-3-642-36249-1_1]
   Cordy M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P141
   Cordy M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P472, DOI 10.1109/ICSE.2013.6606593
   Corradini F, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111007
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Dimovski AS, 2020, INT J SOFTW TOOLS TE, V22, P35, DOI 10.1007/s10009-019-00528-0
   Dimovski AS, 2019, LECT NOTES COMPUT SC, V11424, P192, DOI 10.1007/978-3-030-16722-6_11
   Dimovski A, 2017, INT J SOFTW TOOLS TE, V19, P585, DOI 10.1007/s10009-016-0425-2
   Dimovski AS, 2017, LECT NOTES COMPUT SC, V10202, P406, DOI 10.1007/978-3-662-54494-5_24
   Dubslaff C, 2015, LECT NOTES COMPUT SC, V8989, P180, DOI 10.1007/978-3-662-46734-3_5
   Erwig M, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063245
   Fischbein D., 2006, P 2006 WORKSHOP ROLE
   Gilmore S, 2014, LECT NOTES COMPUT SC, V8739, P71, DOI 10.1007/978-3-319-10181-1_5
   Hermanns H, 2008, LECT NOTES COMPUT SC, V5123, P162
   Hu JY, 2022, AEROSP SCI TECHNOL, V123, DOI 10.1016/j.ast.2022.107494
   Konsta AM, 2024, COMPUT SECUR, V137, DOI 10.1016/j.cose.2023.103602
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Legay A, 2016, LECT NOTES COMPUT SC, V9899, P23, DOI 10.1007/978-3-319-45994-3_2
   Leucker Martin, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P131, DOI 10.1007/978-3-642-34026-0_11
   Lochau M, 2016, J LOG ALGEBR METHODS, V85, P245, DOI 10.1016/j.jlamp.2015.09.004
   Macedo N, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P373, DOI 10.1145/2950290.2950318
   Meinicke J, 2016, IEEE INT CONF AUTOM, P483, DOI 10.1145/2970276.2970322
   Muschevici R, 2016, SOFTW SYST MODEL, V15, P1181, DOI 10.1007/s10270-015-0475-z
   Pianini D, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P416, DOI 10.1109/HPCSim.2014.6903715
   Plath M, 2001, SCI COMPUT PROGRAM, V41, P53, DOI 10.1016/S0167-6423(00)00018-6
   Research and Technology Organisation of NATO, 2008, RTO Technical Report TR-IST-049
   Sabouri H, 2012, P INT COMP SOFTW APP, P680, DOI 10.1109/COMPSAC.2012.95
   Sebastio S., 2013, 7 INT C VALUETOOLS 1, P310, DOI DOI 10.4108/ICST.VALUETOOLS.2013.254377
   ter Beek Maurice H., 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P450, DOI 10.1007/978-3-642-32759-9_36
   ter Beek M.H., 2014, P 2 FME WORKSHOP FOR, P31, DOI [10.1145/2593489.2593493, DOI 10.1145/2593489.2593493]
   ter Beek M. H., 2014, SPLC 14, V2, P70, DOI DOI 10.1145/2647908.2655969
   ter Beek M.H., 2015, P 19 INT C SOFTWARE, P11, DOI DOI 10.1145/2791060.2791087
   ter Beek MH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-020-09930-8
   ter Beek MH, 2021, COMPUT SECUR, V109, DOI 10.1016/j.cose.2021.102381
   ter Beek MH, 2020, IEEE T SOFTWARE ENG, V46, P321, DOI 10.1109/TSE.2018.2853726
   ter Beek MH, 2017, LECT NOTES COMPUT SC, V10202, P387, DOI 10.1007/978-3-662-54494-5_23
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P287, DOI 10.1016/j.jlamp.2015.11.006
   ter Beek MH, 2015, ELECTRON P THEOR COM, P56, DOI 10.4204/EPTCS.182.5
   Tribastone M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P82, DOI 10.1145/2648511.2648520
   U.S. Department of Defense, 2009, Defense Acquisition Guidebook, Section 8.5.3.3
   Van Der Aalst W., 2016, PROCESS MINING DATA, DOI [10.1007/978-3-662-49851-4_1, DOI 10.1007/978-3-662-49851-4]
   Vandin A., 2022, J. Econom. Dynam. Control
   Vandin A, 2018, LECT NOTES COMPUT SC, V10951, P329, DOI 10.1007/978-3-319-95582-7_19
   Weijters A. J. M. M., 2017, Technische Universiteit Eindhoven, Tech. Rep. WP, V166, P1
   Younes HLS, 2005, LECT NOTES COMPUT SC, V3576, P253
NR 61
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111983
DI 10.1016/j.jss.2024.111983
EA JAN 2024
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KO5N6
UT WOS:001180922500001
OA hybrid, Green Submitted, Green Published
DA 2024-08-05
ER

PT J
AU Wang, Q
   Moreno, IL
AF Wang, Quan
   Moreno, Ignacio Lopez
TI Version control of speaker recognition systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Speaker recognition; Version control; Deployment; Simulation; Biometrics
AB This paper discusses one of the most challenging practical engineering problems in speaker recognition systems - the version control of models and user profiles. A typical speaker recognition system consists of two stages: the enrollment stage , where a profile is generated from user-provided enrollment audio; and the runtime stage , where the voice identity of the runtime audio is compared against the stored profiles. As technology advances, the speaker recognition system needs to be updated for better performance. However, if the stored user profiles are not updated accordingly, version mismatch will result in meaningless recognition results. In this paper, we describe different version control strategies for speaker recognition systems that had been carefully studied at Google from years of engineering practice. These strategies are categorized into three groups according to how they are deployed in the production environment: device-side deployment, server -side deployment, and hybrid deployment. To compare different strategies with quantitative metrics under various network configurations, we present SpeakerVerSim, an easily-extensible Python-based simulation framework for different server -side deployment strategies of speaker recognition systems.
C1 [Wang, Quan; Moreno, Ignacio Lopez] Google, 111 8th Ave, New York, NY 10011 USA.
C3 Google Incorporated
RP Wang, Q (corresponding author), Google, 111 8th Ave, New York, NY 10011 USA.
EM quanw@google.com
CR Alakeel AM, 2010, INT J COMPUT SCI NET, V10, P153
   Alvarez R, 2016, INTERSPEECH, P2746, DOI 10.21437/Interspeech.2016-128
   Bolme DS, 2020, IEEE/IAPR INTERNATIONAL JOINT CONFERENCE ON BIOMETRICS (IJCB 2020), DOI 10.1109/ijcb48548.2020.9304933
   Buyya Rajkumar, 2009, 2009 International Conference on High Performance Computing & Simulation (HPCS), P1, DOI 10.1109/HPCSIM.2009.5192685
   Casanova H, 2014, J PARALLEL DISTR COM, V74, P2899, DOI 10.1016/j.jpdc.2014.06.008
   Chen C., 2014, 2014 IEEE INT C ACOU, P4087, DOI 10.1109/ICASSP.2014.68543702[5]T
   Chowdhury FARR, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON ACOUSTICS, SPEECH AND SIGNAL PROCESSING (ICASSP), P5359, DOI 10.1109/ICASSP.2018.8461587
   DAVIS SB, 1980, IEEE T ACOUST SPEECH, V28, P357, DOI 10.1109/TASSP.1980.1163420
   De Silva Sam, 2017, Biometric Technology Today, V2017, P5, DOI 10.1016/S0969-4765(17)30033-4
   Dehak N, 2011, IEEE T AUDIO SPEECH, V19, P788, DOI 10.1109/TASL.2010.2064307
   Ding S., 2022, P INTERSPEECH
   Ding S., 2020, ODYSSEY
   Ding SJ, 2022, INTERSPEECH, P3744, DOI 10.21437/Interspeech.2022-856
   Ghomi EJ, 2017, J NETW COMPUT APPL, V88, P50, DOI 10.1016/j.jnca.2017.04.007
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Gupta Monika, 2021, Google Tensor is a milestone for machine learning
   Hebert M., 2008, Springer handbook of speech processing, P743
   HERMANSKY H, 1990, J ACOUST SOC AM, V87, P1738, DOI 10.1121/1.399423
   Hinton G, 2015, Arxiv, DOI arXiv:1503.02531
   Jia Y, 2018, ADV NEUR IN, V31
   Kenny P., 2005, CRIM, Montreal, V14, P28
   KERSTA LG, 1962, J ACOUST SOC AM, V34, P725, DOI 10.1121/1.1937211
   Kim C, 2016, IEEE-ACM T AUDIO SPE, V24, P1315, DOI 10.1109/TASLP.2016.2545928
   Kinnunen T, 2010, SPEECH COMMUN, V52, P12, DOI 10.1016/j.specom.2009.08.009
   LeCun Y., 1990, Advances in neural information processing systems, P598
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Li C, 2017, Arxiv, DOI arXiv:1705.02304
   Limoncelli T.A., 2014, The Practice of Cloud System Administration: DevOps and SRE Practices for Web Services, V2
   Mallick A., 2022, P MACH LEARN SYST, V4, P77
   Nakkiran P, 2015, 16TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION (INTERSPEECH 2015), VOLS 1-5, P1473
   OMalley T., 2023, INT C AC SPEECH SIGN, P1
   Pelecanos J., 2022, ODYSSEY
   Pelecanos J, 2021, INTERSPEECH, P4603, DOI 10.21437/Interspeech.2021-641
   Pinsky Y., 2017, Tomato, Tomahto. google Home Now Supports Multiple Users
   Prabhavalkar R, 2015, INT CONF ACOUST SPEE, P4704, DOI 10.1109/ICASSP.2015.7178863
   Ratner A, 2019, Arxiv, DOI arXiv:1904.03257
   Reynolds DA, 2000, DIGIT SIGNAL PROCESS, V10, P19, DOI 10.1006/dspr.1999.0361
   Rikhye R., 2022, ODYSSEY
   Rikhye R., 2021, AUTOMATIC SPEECH REC
   Rikhye R, 2021, INTERSPEECH, P4204, DOI 10.21437/Interspeech.2021-204
   Rybakov O, 2023, Arxiv, DOI arXiv:2305.16619
   Sanders P., 2019, Sequential and Parallel Algorithms and Data Structures
   Scott DW, 2015, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118575574
   Shangguan Y, 2020, Arxiv, DOI arXiv:1909.12408
   Snyder D, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON ACOUSTICS, SPEECH AND SIGNAL PROCESSING (ICASSP), P5329
   Snyder D, 2016, IEEE W SP LANG TECH, P165, DOI 10.1109/SLT.2016.7846260
   Timur T.D., 2019, INT C COMP ENG NETW, P1
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan L, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON ACOUSTICS, SPEECH AND SIGNAL PROCESSING (ICASSP), P4879, DOI 10.1109/ICASSP.2018.8462665
   Wang Q, 2020, INTERSPEECH, P2677, DOI 10.21437/Interspeech.2020-1193
   Wang Q, 2019, INTERSPEECH, P2728, DOI 10.21437/Interspeech.2019-1101
   Waskom ML., 2021, J OPEN SOURCE SOFTW, V6, P3021, DOI DOI 10.21105/JOSS.03021
   Wu ZF, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON ACOUSTICS, SPEECH AND SIGNAL PROCESSING (ICASSP 2021), P6014, DOI 10.1109/ICASSP39728.2021.9414505
   Xia W, 2022, INT CONF ACOUST SPEE, P8077, DOI 10.1109/ICASSP43922.2022.9746531
   Zheng G., 2004, Proceedings. 18th International Parallel and Distributed Processing Symposium
NR 55
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112122
DI 10.1016/j.jss.2024.112122
EA JUN 2024
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WL2B4
UT WOS:001254947600001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Shen, BW
   Meng, N
AF Shen, Bowen
   Meng, Na
TI ConflictBench: A benchmark to evaluate software merge tools
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Empirical; Software merge; Conflict; Benchmark
AB In collaborative software development, programmers create branches for simultaneous program editing, and merge branches to integrate edits. When branches divergently edit the same text, the edits conflict and cannot get co -applied. Tools were built to automatically merge software branches, to detect conflicts, and to resolve conflicts along the way. However, there is no third -party benchmark or metric to comprehensively evaluate or compare those tools. This paper presents ConflictBench, our novel benchmark to evaluate software merge tools. ConflictBench consists of 180 merging scenarios extracted from 180 open -source Java projects. For each scenario, we sampled a conflicting chunk (i.e., conflict) reported by git-merge. Because git-merge sometimes wrongly reports conflicts, with our manual inspection, we labeled 136 of the 180 chunks as true conflicts, and 44 chunks as false conflicts. To facilitate tool evaluation, we also defined a systematic method of manual analysis toanalyze all program versions involved in each merging scenario, and to summarize the root causes as well as developers' resolution strategies. We further defined three novel metrics to evaluate merge tools. By applying five stateof-the-art tools to ConflictBench, we observed that ConflictBench is effective to characterize different tools. It helps reveal limitations of existing tools and sheds light on future research.
C1 [Shen, Bowen; Meng, Na] Virginia Polytech Inst & State Univ, Blacksburg, VA 24060 USA.
C3 Virginia Polytechnic Institute & State University
RP Shen, BW (corresponding author), Virginia Polytech Inst & State Univ, Blacksburg, VA 24060 USA.
EM bowenshe@vt.edu; nm8247@vt.edu
OI Meng, Na/0000-0002-0230-5524
FU NSF [USA-2006278]
FX This works was supported by NSF, USA-1845446 and NSF, USA-2006278.
CR Ahmed I, 2017, INT SYMP EMP SOFTWAR, P58, DOI 10.1109/ESEM.2017.12
   [Anonymous], 2021, jFSTMerge
   [Anonymous], 2018, Thufv/automerge: Resolve conflicts via version space algebra in structured merge
   [Anonymous], 2023, Git merge conflicts
   [Anonymous], 2023, Git-git-merge
   [Anonymous], 2014, Merge branch 'OperatorAsObservable' of github.com:akarnokd/RxJava into merge-asObservable
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Brindescu C, 2020, EMPIR SOFTW ENG, V25, P562, DOI 10.1007/s10664-019-09735-4
   Cavalcanti G, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1002, DOI 10.1109/ASE.2019.00097
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   Cavalcanti G, 2015, INT SYMP EMP SOFTWAR, P267, DOI 10.1109/ESEM.2015.7321191
   Eibl J., 2007, The KDiff3 Handbook
   Estler HC, 2014, INT CONF GLOBAL SOFT, P26, DOI 10.1109/ICGSE.2014.17
   Ghiotto G, 2020, IEEE T SOFTWARE ENG, V46, P892, DOI 10.1109/TSE.2018.2871083
   GitHub, 2019, se-sic/jdime: syntactic merge tool for java
   GitHub, 2017, joliebig/featurehouse: language independent software composition and merging
   GitHub, symbolk/IntelliMerge: A graph-based refactoring-aware three-way merging tool for java programs
   Nguyen HL, 2018, COMPUT SUPP COOP W J, V27, P741, DOI 10.1007/s10606-018-9323-3
   Lessenich O, 2018, AUTOMAT SOFTW ENG, V25, P279, DOI 10.1007/s10515-017-0227-0
   Mahmoudi M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P151, DOI [10.1109/saner.2019.8668012, 10.1109/SANER.2019.8668012]
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Owhadi-Kareshk M, 2019, Arxiv, DOI arXiv:1907.06274
   Pan R, 2021, PROC INT CONF SOFTW, P785, DOI 10.1109/ICSE43902.2021.00077
   Seibt G, 2022, IEEE T SOFTWARE ENG, V48, P4590, DOI 10.1109/TSE.2021.3123143
   Shen B, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360596
   Shen BW, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3546944
   Yuzuki R, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P21, DOI 10.1109/SWAN.2015.7070484
   Zhu FM, 2022, LECT NOTES COMPUT SC, V13649, P70, DOI 10.1007/978-3-031-21213-0_5
   Zhu FM, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276536
NR 30
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112084
DI 10.1016/j.jss.2024.112084
EA MAY 2024
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SX6N7
UT WOS:001237788700001
DA 2024-08-05
ER

PT J
AU Franke, B
   Li, ZB
   Morton, M
   Steuwer, M
AF Franke, Bjoern
   Li, Zhibo
   Morton, Magnus
   Steuwer, Michel
TI Collection skeletons: Declarative abstractions for data collections
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Containers; Collections; Data structures; Properties
ID PARALLEL; LEVEL
AB Modern programming languages provide programmers with rich abstractions for data collections as part of their standard libraries, e.g., Containers in the C++ STL, the Java Collections Framework, or the Scala Collections API. Typically, these collections frameworks are organised as hierarchies that provide programmers with common abstract data types (ADTs) like lists, queues, and stacks. While convenient, this approach introduces problems which ultimately affect application performance due to users over-specifying collection data types limiting implementation flexibility. In this article, we develop Collection Skeletons which provide a novel, declarative approach to data collections. Using our framework, programmers explicitly select properties for their collections, thereby truly decoupling specification from implementation. By making collection properties explicit, immediate benefits materialise in forms of reduced risk of over-specification and increased implementation flexibility. We have prototyped our declarative abstractions for collections as a C++ library, and demonstrate that benchmark applications rewritten to use Collection Skeletons incur little or no overhead. We also show how Collection Skeletons help shielding the application developer from parallel implementation details, either by encapsulating implicit parallelism or through explicit properties that capture the requirements of parallel algorithmic skeletons. We observe performance improvements across most of the 17 benchmarks resulting from the use of Collection Skeletons before trying to parallelise those benchmarks, while also enhancing performance portability across three different hardware platforms.
C1 [Franke, Bjoern; Li, Zhibo] Univ Edinburgh, Sch Informat, 10 Crichton St, Edinburgh EH8 9AB, Scotland.
   [Morton, Magnus] Huawei Cent Software Inst, 2 Semple St, Edinburgh EH3 8BL, Scotland.
   [Steuwer, Michel] TU Berlin, Inst Software Engn & Theoret Comp Sci, Room E N 367,Einsteinufer 17, D-10587 Berlin, Germany.
C3 University of Edinburgh; Technical University of Berlin
RP Li, ZB (corresponding author), Univ Edinburgh, Sch Informat, 10 Crichton St, Edinburgh EH8 9AB, Scotland.
EM bfranke@inf.ed.ac.uk; zhibo.li@ed.ac.uk; magnus.morton@huawei.com;
   michel.steuwer@tu-berlin.de
OI Steuwer, Michel/0000-0001-5048-0741
FU Huawei-Edinburgh Joint Lab, United Kingdom; Oracle for providing
   computational resources through the Cloud Starter Award; Intel
FX The authors would like to thank the reviewers for their constructive
   feedback and comments. They would also like to extend their gratitude to
   Chris Vasiladiotis and Murray Cole. This work was supported by a grant
   from Huawei-Edinburgh Joint Lab, United Kingdom. Additionally, the
   authors are grateful to Oracle for providing computational resources
   through the Cloud Starter Award, and to Intel for their support via the
   oneAPI Student Ambassador program.
CR Agrawal C., 2021, Kruskal disjoint
   [Anonymous], 2023, Specifications: oneAPI
   [Anonymous], 2023, GitHub-khizmax/libcds: A C++ library of concurrent data structures-github.com
   [Anonymous], 2017, GitHub-rafa32/quantum-shor: Implementation of a quantum computer simulator together with shor's algorithm.-github.com
   Augonnet C, 2009, LECT NOTES COMPUT SC, V5704, P863, DOI 10.1007/978-3-642-03869-3_80
   Basios M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P118, DOI 10.1145/3236024.3236043
   Benoit A, 2005, LECT NOTES COMPUT SC, V3648, P761
   Bensoussan C, 2016, LECT NOTES COMPUT SC, V9764, P121, DOI 10.1007/978-3-319-42061-5_8
   Bhojasia M., 2013, Joseph
   Buss A., 2010, P 3 ANN HAIF EXP SYS, DOI 10.1145
   Carlisle M.C., 1996, Olden: Parallelizing Programs with Dynamic Data Structures on Distributed-Memory Machines
   Che SA, 2009, I S WORKL CHAR PROC, P44, DOI 10.1109/IISWC.2009.5306797
   Chen L, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3356579
   Ciechanowicz P., 2010, Proceedings of the 2010 IEEE 12th International Conference on High Performance Computing and Communications (HPCC 2010), P108, DOI 10.1109/HPCC.2010.23
   Cole M.I., 1989, Algorithmic skeletons: Structured management of parallel computation
   Costa D., 2017, P 8 ACM SPEC INT C P, P389, DOI [10.1145/3030207.3030221, DOI 10.1145/3030207.3030221]
   Costa D, 2018, INT SYM CODE GENER, P16, DOI 10.1145/3168825
   Danelutto M, 2002, LECT NOTES COMPUT SC, V2330, P844
   Danelutto M, 2021, INT J PARALLEL PROG, V49, P177, DOI 10.1007/s10766-020-00684-w
   De Wael M., 2015, 2015 ACM INT S NEW I, P61, DOI [10.1145/2814228.2814231, DOI 10.1145/2814228.2814231]
   Diego, 2021, GitHub-dlb04/infix-to-postfix ubinfix to postfix
   Doyle J., 1976, Information Processing Letters, V5, P146, DOI 10.1016/0020-0190(76)90061-2
   Edwards H. Carter, 2013, 2013 Extreme Scaling Workshop (xsw 2013), P18, DOI 10.1109/XSW.2013.7
   Ernstsson A, 2021, INT J PARALLEL PROG, V49, P846, DOI 10.1007/s10766-021-00704-3
   Fisher J., 2011, GitHub-airplug/libactor: Actor model library for C-github.com
   Franke Bjorn, 2022, SLE 2022: Proceedings of the 15th ACM SIGPLAN International Conference on Software Language Engineering, P189, DOI 10.1145/3567512.3567528
   González-Vélez H, 2010, SOFTWARE PRACT EXPER, V40, P1135, DOI 10.1002/spe.1026
   Grelck C, 2005, J FUNCT PROGRAM, V15, P353, DOI 10.1017/S0956796805005538
   Hermann T., 2018, GitHub-Dobiasd/FunctionalPlus: Functional Programming Library for C++. Write concise and readable C++ code
   Hornung R.D., 2014, Technical Report Tech. Rep. LLNL-TR-661403, DOI 10.2172/1169830
   Huang TW, 2022, IEEE T PARALL DISTR, V33, P1303, DOI 10.1109/TPDS.2021.3104255
   Jarek D., 2015, GitHub-djarek/md5lamacz: A multithreaded brute-force MD5 hashed password cracker
   Jung C, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P86
   Koranne S., 2011, Handbook of Open Source Tools, P127, DOI [DOI 10.1007/978-1-4419-7719-96, 10.1007/978-1-4419-7719-9_6]
   Lattner C., 2021, Test-suite/SingleSource/Benchmarks/Shootout/hash.c at master llvm-mirror/test-suite-github.com
   Leyton M, 2010, EUROMICRO WORKSHOP P, P289, DOI 10.1109/PDP.2010.26
   Liskov B., 1974, SIGPLAN Notices, V9, P50, DOI 10.1145/942572.807045
   Louw G., 2020, GitHub-glouw/tinn: A tiny neural network library-github.com
   Majidi A, 2019, LECT NOTES COMPUT SC, V11882, P159, DOI 10.1007/978-3-030-34627-0_12
   Marcell J., 2009, GitHub-jasmarc/scheduler: CPU scheduling simulator-github.com
   Marr S., 2018, C 2 INT C ART SCI EN, P135, DOI [10.1145/3191697.3214334, DOI 10.1145/3191697.3214334]
   McCool M, 2012, STRUCTURED PARALLEL PROGRAMMING: PATTERNS FOR EFFICIENT COMPUTATION, P1, DOI 10.1016/B978-0-12-415993-8.00001-3
   Naftalin Maurice., 2006, JAVA GENERICS COLLEC
   Odersky M., 2019, The architecture of scala collections
   Pataki N., 2010, arXiv, DOI [10.48550/arXiv.1012.0038, DOI 10.48550/ARXIV.1012.0038]
   Poldner M, 2008, COMM COM INF SC, V10, P204
   Rosseta Code Contributors, 2022, Rosetta code-Rosetta code
   Schöttle M, 2019, IEEE ACM INT WORKS M, P71, DOI 10.1109/MiSE.2019.00018
   Stein C., 2001, Introduction to Algorithms, V2nd
   Stepanov A., 1995, Tech. Rep. HPL-95-11(R.1)
   Stratton J. A., 2012, Parboil: A revised benchmark suite for scientific and commercial throughput computing
   Thoman P, 2022, INT J PARALLEL PROG, V50, P341, DOI 10.1007/s10766-022-00731-8
   Trinder P. W., 1998, Journal of Functional Programming, V8, P23, DOI 10.1017/S0956796897002967
   Vasiladiotis C., 2020, Mischung-suite/programs/ising/data/original_source/ising.c at master compor/mischung-suite-github.com
   von Koch TJKE, 2018, CC'18: PROCEEDINGS OF THE 27TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION, P174, DOI 10.1145/3178372.3179513
   Walker DW, 1996, SUPERCOMPUTER, V12, P56
   Wang CP, 2022, P ACM PROGRAM LANG, V6, DOI 10.1145/3527312
   Whelan T., 2002, Mp3
   Xu GQ, 2013, LECT NOTES COMPUT SC, V7920, P1, DOI 10.1007/978-3-642-39038-8_1
NR 59
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112042
DI 10.1016/j.jss.2024.112042
EA APR 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL3P2
UT WOS:001227784100001
OA Green Accepted, hybrid
DA 2024-08-05
ER

PT J
AU de Castro, D
   Cortiñas, A
   Luaces, MR
   Pedreira, O
   Places, A
AF de Castro, David
   Cortinas, Alejandro
   Luaces, Miguel R.
   Pedreira, Oscar
   Saavedra Places, Angeles
TI Local features: Enhancing variability modeling in software product
   lines☆
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software product line engineering; Variability specification; Feature
   models; Web -based geographic information systems
AB Context and motivation: Software Product Lines (SPL) enable the creation of software product families with shared core components using feature models to model variability. Choosing features from a feature model to generate a product may not be sufficient in certain situations because the application engineer may need to be able to decide on configuration time the system's elements to which a certain feature will be applied. Therefore, there is a need to select which features have to be included in the product but also to which of its elements they have to be applied. Objective: We introduce local features that are selectively applied to specific parts of the system during product configuration. Results: We formalize local features using multimodels to establish relationships between local features and other elements of the system models. The paper includes examples illustrating the motivation for local features, a formal definition, and a domain -specific language for specification and implementation. Finally, we present a case study in a real scenario that shows how the concept of local features allowed us to define the variability of a complex system. The examples and the application case show that the proposal achieves higher customization levels at the application engineering phase.
C1 [de Castro, David; Cortinas, Alejandro; Luaces, Miguel R.; Pedreira, Oscar; Saavedra Places, Angeles] Univ A Coruna, Ctr Invest CITIC, Database Lab, La Coruna 15071, Spain.
C3 Universidade da Coruna
RP Pedreira, O (corresponding author), Univ A Coruna, Ctr Invest CITIC, Database Lab, La Coruna 15071, Spain.
EM david.decastro@udc.es; alejandro.cortinas@udc.es; luaces@udc.es;
   oscar.pedreira@udc.es; asplaces@udc.es
FU EU through Interreg Spain-Portugal/POCTEP [0064_GRESINT_1_E]; MCIN/AEI
   [PID2022-141027NB-C21]; EU/ERDF A way of making Europe; GAIN/Xunta de
   Galicia [GRC: ED431C 2021/53]; Xunta de Galicia; Department of Culture,
   Education, Vocational Training and Universities; Galician universities
   for the reinforcement of the research centers of the Galician University
   System (CIGUS)
FX This work has been partially funded by the following grants:
   0064_GRESINT_1_E partially funded by EU through the Interreg
   Spain-Portugal/POCTEP; PID2022-141027NB-C21 (EarthDL) : partially funded
   by MCIN/AEI/10.13039/501100011033 and EU/ERDF A way of making Europe;
   PID2021-122554OB-C33 (OASSIS) : partially funded by
   MCIN/AEI/10.13039/501100011033 and EU/ERDF A way of making Europe; GRC:
   ED431C 2021/53, partially funded by GAIN/Xunta de Galicia; CITIC is
   funded by the Xunta de Galicia through the collaboration agreement
   between the Department of Culture, Education, Vocational Training and
   Universities and the Galician universities for the reinforcement of the
   research centers of the Galician University System (CIGUS) .
CR Alférez M, 2019, SOFTWARE QUAL J, V27, P307, DOI 10.1007/s11219-017-9400-8
   Alvarado SH, 2020, J WEB ENG, V19, P167, DOI 10.13052/jwe1540-9589.1923
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Barkmeyer E., 2003, Tech. Rep. NISTIR 6928, DOI [10.6028/NIST.IR.6928, DOI 10.6028/NIST.IR.6928]
   Batory D, 2006, COMMUN ACM, V49, P45, DOI 10.1145/1183236.1183264
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P174, DOI 10.1145/3307630.3342403
   Cortinas Alejandro, 2022, SPLC '22: Proceedings of the 26th ACM International Systems and Software Product Line Conference, P66, DOI 10.1145/3503229.3547035
   Cortiñas A, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P190, DOI 10.1145/3106195.3106222
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2487, P156
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   De castro David, 2022, SPLC '22: Proceedings of the 26th ACM International Systems and Software Product Line Conference, P199, DOI 10.1145/3546932.3547006
   Galindo Jose A., 2020, SPLC '20: Proceedings of the 24th ACM International Systems and Software Product Line Conference - Volume B on ZZZ, P52, DOI 10.1145/3382026.3425773
   González-Huerta J, 2013, LECT NOTES COMPUT SC, V8107, P388, DOI 10.1007/978-3-642-41533-3_24
   González-Huerta J, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P251, DOI 10.1109/QUATIC.2012.14
   Iglesias A, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P62, DOI 10.5220/0007343500620071
   Kang K.C., 1990, Tech. Rep. CMU/SEI-90-TR-021, P1
   Karatas AS, 2013, SCI COMPUT PROGRAM, V78, P2295, DOI 10.1016/j.scico.2012.06.004
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Riebisch M., 2002, P 6 WORLD C INT DES, P1
   Rincon Luisa, 2015, 2015 10th Computing Colombian Conference (10CCC). Proceedings, P71, DOI 10.1109/ColumbianCC.2015.7333414
   Sharp D., 1998, DIGITAL AVIONICS SYS, V2, DOI [10.1109/DASC.1998.739846, DOI 10.1109/DASC.1998.739846]
   Siegmund N, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P338, DOI 10.1145/3368089.3409675
   Sousa G., 2016, P 20 INT SYST SOFTW, P79, DOI [10.1145/2934466.2934475, DOI 10.1145/2934466.2934475]
   Trujillo S, 2007, PROC INT CONF SOFTW, P44
   Voelter Markus, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P70, DOI 10.1109/SPLC.2011.25
   Weiss D.M., 1999, Software Product-Line Engineering: A Family-Based Software Development Process
   Weiss D.M., 2006, P 10 INT SOFTW PROD, P237, DOI [10.1109/SPLINE.2006.1691614, DOI 10.1109/SPLINE.2006.1691614]
NR 33
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112035
DI 10.1016/j.jss.2024.112035
EA APR 2024
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB1V2
UT WOS:001218337900001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Guo, A
   Feng, Y
   Cheng, YZ
   Chen, ZY
AF Guo, An
   Feng, Yang
   Cheng, Yizhen
   Chen, Zhenyu
TI Semantic-guided fuzzing for virtual testing of autonomous driving
   systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software testing; Fuzz testing; Driving scenario description language;
   Autonomous driving system
AB Autonomous driving systems (ADS) have achieved spectacular development and have been utilized in numerous safety -critical tasks. Nonetheless, in spite of their considerable advancement, ADS perception components with high complexity and low interpretability often demonstrate unexpected corner -case behaviors. Several realworld accidents involving self -driving cars even lead to fatalities. Before rolling the autonomous vehicles out to the end -users, it is vital to test and guarantee the safety of ADS. As one of the most critical autonomous driving testing techniques, the prevailing virtual testing depends on the tester using tool -specific languages to code traffic simulation programs correctly. However, this process often requires plenty of effort, and it may fail to capture various rare events from complex driving situations that require sophisticated awareness of the surroundings. In this paper, we design and implement a semantic -guided scene fuzzing framework for autonomous driving systems, namely FuzzScene, based on the metamorphic testing theory. It employs driving scenario description language for scenario representation and equips a tree -based mutation strategy to generate tests with proper oracle information. To improve the testing efficiency and detect misbehaviors under different settings, we propose a unique sampling strategy and construct a testing guidance criterion to optimize FuzzScene. We experiment FuzzScene with multiple steering controllers to evaluate its performance on different tasks. The experiment results show that the semantic transformed driving scenarios generated by FuzzScene efficiently detect hundreds of inconsistent behaviors of ADS. Also, the results confirm that FuzzScene can improve steering precision by retraining with the generated scenes.
C1 [Guo, An; Feng, Yang; Cheng, Yizhen; Chen, Zhenyu] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
   [Chen, Zhenyu] Nanjing Univ, Shenzhen Res Inst, Shenzhen, Peoples R China.
C3 Nanjing University; Nanjing University
RP Feng, Y (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
EM guoan218@smail.nju.edu.cn; fengyang@nju.edu.cnn;
   yz_cheng@smail.nju.edu.cn; yz_cheng@smail.nju.edu.cn
OI Guo, An/0009-0005-8661-6133
FU National Natural Science Foundation of China [61932012]; Science,
   Technology and Innovation Commission of Shenzhen Municipality, China
   [CJGJZD20200617103001003, 2021Szvup057]
FX We would like to thank anonymous reviewers for their insightful and
   constructive comments. This research was partially funded by the
   National Natural Science Foundation of China under Grant No. 61932012,
   and the Science, Technology and Innovation Commission of Shenzhen
   Municipality, China (No. CJGJZD20200617103001003 and No.
   No.2021Szvup057) .
CR Abeysirigoonawardena Y, 2019, IEEE INT CONF ROBOT, P8271, DOI [10.1109/icra.2019.8793740, 10.1109/ICRA.2019.8793740]
   Akutsu T, 2015, THEOR COMPUT SCI, V590, P2, DOI 10.1016/j.tcs.2014.10.012
   Althoff Matthias, 2018, 2018 IEEE International Conference on Service Operations and Logistics, and Informatics (SOLI), P157, DOI 10.1109/SOLI.2018.8476801
   asam.net, 2020, ASAM
   Atlidakis V, 2020, Arxiv, DOI arXiv:2005.11498
   Bagschik G, 2018, IEEE INT VEH SYM, P1813, DOI 10.1109/IVS.2018.8500632
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Ben Braiek H, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110542
   Bender P, 2014, IEEE INT VEH SYM, P420, DOI 10.1109/IVS.2014.6856487
   Bojarski Mariusz, 2016, arXiv
   Burkhard G., 2018, PROC 18 INTERNATION, P683
   Chao QW, 2020, COMPUT GRAPH FORUM, V39, P287, DOI 10.1111/cgf.13803
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P79
   de Gelder E, 2017, IEEE INT VEH SYM, P589, DOI 10.1109/IVS.2017.7995782
   Deb Kalyanmoy, 2014, International Journal of Artificial Intelligence and Soft Computing, V4, P1, DOI 10.1504/IJAISC.2014.059280
   Deb K., 1995, Complex Systems, V9, P115
   Diaz-Diaz A, 2022, IEEE INT VEH SYM, P1211, DOI 10.1109/IV51971.2022.9827297
   Ding WH, 2021, IEEE ROBOT AUTOM LET, V6, P1551, DOI 10.1109/LRA.2021.3058873
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   Eberlein Martin, 2020, INT S SEARCH BAS SOF, DOI [DOI 10.1007/978-3-030, DOI 10.1007/978-3-030-59762-7_8]
   foretellix.com, 2020, Measurable scenario description language reference
   Fremont DJ, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P63, DOI 10.1145/3314221.3314633
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Gangopadhyay B, 2019, IEEE INT C INTELL TR, P1961, DOI 10.1109/ITSC.2019.8917103
   Gao F, 2019, MATH PROBL ENG, V2019, DOI 10.1155/2019/3737486
   Gildenblat Jacob, 2016, Visualizations for understanding the regressed wheel steering angle for self driving cars
   Guo A, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P480, DOI 10.1145/3533767.3534397
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Haklay M, 2008, IEEE PERVAS COMPUT, V7, P12, DOI 10.1109/MPRV.2008.80
   Han Jia Cheng, 2020, P IEEE ACM 42 INT C, P380
   Hauer F, 2019, IEEE INT C INTELL TR, P2950, DOI 10.1109/ITSC.2019.8917326
   Hu ZC, 2018, 2018 ACM INTERNATIONAL CONFERENCE ON COMPUTING FRONTIERS, P138, DOI 10.1145/3203217.3203241
   ipg-automotive.com, 2024, Tests of camera-based systems made easy through direct injection of image data
   japantimes.co.jp, 2022, Japan approves use of highly autonomous 'level-4' self-driving vehicles from april'23
   Junietz P, 2018, IEEE INT C INTELL TR, P491, DOI 10.1109/ITSC.2018.8569959
   Kalra N, 2016, TRANSPORT RES A-POL, V94, P182, DOI 10.1016/j.tra.2016.09.010
   Kaur P, 2021, 2021 FOURTH INTERNATIONAL CONFERENCE ON CONNECTED AND AUTONOMOUS DRIVING (METROCAD 2021), DOI 10.1109/MetroCAD51599.2021.00018
   Kim Seulbae, 2022, CCS '22: Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security, P1753, DOI 10.1145/3548606.3560558
   Li GP, 2020, PROC INT SYMP SOFTW, P25, DOI 10.1109/ISSRE5003.2020.00012
   Li J, 2018, CYBERSECURITY, V1, DOI 10.1186/s42400-018-0002-y
   Li W, 2019, SCI ROBOT, V4, DOI 10.1126/scirobotics.aaw0863
   Liang HL, 2018, IEEE T RELIAB, V67, P1199, DOI 10.1109/TR.2018.2834476
   Lou GN, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P31, DOI 10.1145/3540250.3549111
   Luo YX, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P279, DOI [10.1109/ASE51524.2021.967883, 10.1109/ASE51524.2021.9678883]
   Majumdar R, 2021, Arxiv, DOI arXiv:1902.01084
   Masuda S, 2018, IET INTELL TRANSP SY, V12, P1088, DOI 10.1049/iet-its.2018.5335
   Miller BP, 2022, IEEE T SOFTWARE ENG, V48, P2028, DOI 10.1109/TSE.2020.3047766
   Mullins GE, 2018, J SYST SOFTWARE, V137, P197, DOI 10.1016/j.jss.2017.10.031
   NVIDIA, 2016, Nvidia-autopilot-keras
   PEGASUS, 2019, Scenario description
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Queiroz R, 2019, IEEE INT VEH SYM, P287, DOI 10.1109/IVS.2019.8814107
   Rong GD, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294422
   Schoner H.-P., 2018, 18 INTERNATIONALES S, P1083
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   sia.nikkei.com, 2022, Baidu's self-driving taxis now a common sight in Beijing
   Sun J, 2022, IEEE T INTELL TRANSP, V23, P14088, DOI 10.1109/TITS.2021.3136353
   Tang SC, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3579642
   .theverge.com, 2022, US releases new driver-assist crash data, and surprise, it's mostly tesla
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Udacity, 2016, "Using deep learning to predict steering angles
   Ulbrich S, 2015, IEEE INT C INTELL TR, P982, DOI 10.1109/ITSC.2015.164
   vector.com, Scenario-Based Testing with OpenSCENARIO
   Wang YY, 2022, IEEE T INTELL TRANSP, V23, P23809, DOI 10.1109/TITS.2022.3191088
   Yan M, 2023, Arxiv, DOI arXiv:2010.04946
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang SA, 2018, IEEE INT C INTELL TR, P3935, DOI 10.1109/ITSC.2018.8569800
   Zhang XZ, 2020, IEEE SYS MAN CYBERN, P973, DOI [10.1109/SMC42975.2020.9283417, 10.1109/smc42975.2020.9283417]
   Zhang YH, 2018, IEEE T INTELL VEHICL, V3, P276, DOI 10.1109/TIV.2018.2843178
   Zhao XY, 2019, PROC INT SYMP SOFTW, P13, DOI 10.1109/ISSRE.2019.00012
   Zhong ZY, 2023, IEEE T SOFTWARE ENG, V49, P1860, DOI 10.1109/TSE.2022.3195640
   Zhong ZY, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P493, DOI 10.1145/3533767.3534223
   Zhou HS, 2020, PROC INT CONF SOFTW, P347, DOI 10.1145/3377811.3380422
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
NR 79
TC 0
Z9 0
U1 4
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2024
VL 212
AR 112017
DI 10.1016/j.jss.2024.112017
EA MAR 2024
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QA1T6
UT WOS:001218076100001
DA 2024-08-05
ER

PT J
AU Gou, QW
   Dong, YW
   Wu, YJ
   Ke, Q
AF Gou, Qianwen
   Dong, Yunwei
   Wu, Yujiao
   Ke, Qiao
TI RRGcode: Deep hierarchical search-based code generation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Hierarchical search; Re-ranking; Semantic comparison; Code generation
AB Retrieval-augmented code generation strengthens the generation model by using a retrieval model to select relevant code snippets from a code corpus. The synergy between retrieval and generation ensures that the generated code closely corresponds to the intended functionality. Existing methods simply feed the retrieved results to the generation model. However, if the retrieval corpus contains erroneous or sub-optimal code examples, there is a risk that the model may replicate these mistakes in the generated code. To tackle these problems, we propose RRGcode (Retrieval, Re-ranking, and Generation for code generation), a deep hierarchical search-based code generation framework that fine-tunes initial retrieved code rankings, reducing the risk of replicating errors from the retrieval corpus and enhancing the generation of higher-quality, more reliable code. Specifically, it first retrieves relevant code candidates from a large code corpus. Then, a reranking model reconstructs the search space through a detailed semantic comparison between code candidates and the query, ensuring that only the most relevant and accurate candidates are considered. Finally, the reranked top -K codes, along with the query, serve as input for the code generation model. Extensive experiments are conducted to evaluate the effectiveness of generated code by RRGcode, demonstrating state-of-the-art performance in code generation tasks.
C1 [Gou, Qianwen; Wu, Yujiao] Northwestern Polytech Univ, Sch Comp Sci, Xian 710129, Peoples R China.
   [Dong, Yunwei] Northwestern Polytech Univ, Sch Software, Xian 710129, Peoples R China.
   [Ke, Qiao] Northwestern Polytech Univ, Sch Math & Stat, Xian 710129, Peoples R China.
C3 Northwestern Polytechnical University; Northwestern Polytechnical
   University; Northwestern Polytechnical University
RP Ke, Q (corresponding author), Northwestern Polytech Univ, Sch Math & Stat, Xian 710129, Peoples R China.
EM qiaoke@nwpu.edu.cn
FU National Natural Science Foundation of China [12201498]; Natural Science
   Foundation of Shaanxi Province, China [2022JQ-003]
FX This research is supported by the Major Program of the National Natural
   Science Foundation of China (No. 62192733, No. 62192730) ,r the National
   Natural Science Foundation of China (No. 12201498) and the Natural
   Science Foundation of Shaanxi Province, China (No. 2022JQ-003) .
CR Achiam OJ, 2023, Arxiv, DOI arXiv:2303.08774
   Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Amory Abduljawad A., 2012, 2012 Seventh International Conference on Digital Information Management (ICDIM 2012), P221, DOI 10.1109/ICDIM.2012.6360121
   Balntas V., 2016, BMVC, V1, P3, DOI DOI 10.5244/C.30.119
   Bonfanti S, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2205
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Gou QW, 2024, FRONT COMPUT SCI-CHI, V18, DOI 10.1007/s11704-023-2678-8
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Guo DY, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P7212
   Guo RQ, 2016, JMLR WORKSH CONF PRO, V51, P482
   Guu K, 2020, PR MACH LEARN RES, V119
   Hashimoto TB, 2018, ADV NEUR IN, V31
   Hayati SA, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P925
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Toman SH, 2020, Arxiv, DOI arXiv:2008.00150
   Karpukhin V, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P6769
   Lewis P., 2020, ADV NEURAL INFORM PR, P9459, DOI DOI 10.48550/ARXIV.2005.11401
   Ling X, 2021, ACM T KNOWL DISCOV D, V15, DOI 10.1145/3447571
   Liu S., 2021, 9 INT C LEARN REPR I
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Lu S., 2021, P NEUR INF PROC SYST
   Lu S, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P6227
   Min S, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P6997
   Ozturk S., 2020, Avrupa Bilim Teknol. Derg., P39
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Parvez MR, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2021, P2719
   Petroni F, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P2463
   Radford A., 2019, OpenAI blog, V1, P9
   Ren S, 2020, Arxiv, DOI [arXiv:2009.10297, 10.48550/arXiv.2009.10297]
   Roberts A, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P5418
   Robertson Stephen, 2009, Foundations and Trends in Information Retrieval, V3, P333, DOI 10.1561/1500000019
   Shrivastava A, 2014, ADV NEUR IN, V27
   Vaswani A, 2017, ADV NEUR IN, V30
   Xu FF, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487569
   Xu Y, 2022, PROCEEDINGS OF THE SECOND DIALDOC WORKSHOP ON DOCUMENT-GROUNDED DIALOGUE AND CONVERSATIONAL QUESTION ANSWERING (DIALDOC 2022), P93
   Yang G, 2022, KNOWL-BASED SYST, V237, DOI 10.1016/j.knosys.2021.107858
   Yang MF, 2022, CHIN SPACE SCI TECHN, V42, P1, DOI 10.16708/j.cnki.1000-758X.2022.0046
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang Z, 2021, INT J MACH LEARN CYB, V12, P1649, DOI 10.1007/s13042-020-01264-7
   Zhao DJ, 2022, LECT NOTES COMPUT SC, P181, DOI 10.1007/978-3-031-00129-1_12
   Zhu XN, 2022, EUR CON SFTWR MTNCE, P1089, DOI 10.1109/SANER53432.2022.00126
NR 44
TC 1
Z9 1
U1 17
U2 17
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111982
DI 10.1016/j.jss.2024.111982
EA JAN 2024
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JX9Z6
UT WOS:001176589800001
DA 2024-08-05
ER

PT J
AU Guerra, EM
   Ivo, AAS
   Pereira, FO
   Robbes, R
   Janes, A
   Silveira, FF
AF Guerra, Eduardo Martins
   Ivo, Andre A. S.
   Pereira, Fernando O.
   Robbes, Romain
   Janes, Andrea
   Silveira, Fabio Fagundes
TI Impermanent identifiers: Enhanced source code comprehension and
   refactoring
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Source code identifiers; Program comprehension; Software refactoring;
   Software evolution
ID INFORMATION-TECHNOLOGY; ACCEPTANCE
AB In response to the prevailing challenges in contemporary software development, this article introduces an innovative approach to code augmentation centered around Impermanent Identifiers . The primary goal is to enhance the software development experience by introducing dynamic identifiers that adapt to changing contexts, facilitating more efficient interactions between developers and source code, ultimately advancing comprehension, maintenance, and collaboration in software development. Additionally, this study rigorously evaluates the adoption and acceptance of Impermanent Identifiers within the software development landscape. Through a comprehensive empirical examination, we investigate how developers perceive and integrate this approach into their daily programming practices, exploring perceived benefits, potential barriers, and factors influencing its adoption. In summary, this article charts a new course for code augmentation, proposing Impermanent Identifiers as its cornerstone while assessing their feasibility and acceptance among developers. This interdisciplinary research seeks to contribute to the continuous improvement of software development practices and the progress of code augmentation technology.
C1 [Guerra, Eduardo Martins; Robbes, Romain] Free Univ Bozen Bolzano, Bozen Bolzano, Italy.
   [Ivo, Andre A. S.; Pereira, Fernando O.] Natl Inst Space Res INPE, Sao Jose Dos Campos, SP, Brazil.
   [Silveira, Fabio Fagundes] Univ Fed Sao Paulo, Sao Jose Dos Campos, SP, Brazil.
   [Janes, Andrea] Free Univ Bozen Bolzano, Bolzano, Italy.
C3 Free University of Bozen-Bolzano; Instituto Nacional de Pesquisas
   Espaciais (INPE); Universidade Federal de Sao Paulo (UNIFESP); Free
   University of Bozen-Bolzano
RP Guerra, EM (corresponding author), Free Univ Bozen Bolzano, Bozen Bolzano, Italy.
EM eduardo.guerra@unibz.it; andre.ivo@inpe.gov.br; fernando.opc@gmail.com;
   romain.robbes@gmail.com; andrea.janes@unibz.it; fsilveira@unifesp.br
RI ; Janes, Andrea/B-5388-2015
OI Guerra, Eduardo/0000-0001-5555-3487; Janes, Andrea/0000-0002-1423-6773
FU Free University of Bozen-Bolzano, Italy; ADVERB project
FX The authors would like to extend their profound gratitude to the Free
   University of Bozen-Bolzano, Italy for the generous funding and support
   provided for the ADVERB project. The collaboration with the institution
   and the financial support were instrumental in the completion of this
   study. This work was partially funded by the ADVERB project, with
   support from the Free University of Bozen-Bolzano, Italy, and we
   acknowledge the significance of this contribution to the success of this
   research project. We appreciate the Free University of Bozen-Bolzano for
   their belief in our research and their ongoing commitment to advancing
   knowledge and innovation.
CR Abebe SL, 2009, WORK CONF REVERSE EN, P95, DOI 10.1109/WCRE.2009.26
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   [Anonymous], 1908, BIOMETRIKA, V6, P1
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Arnaoudova V, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P949, DOI 10.1109/ICSE.2015.301
   Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   Atkins DL, 2002, IEEE T SOFTWARE ENG, V28, P625, DOI 10.1109/TSE.2002.1019478
   Beelders TR, 2016, J EYE MOVEMENT RES, V9
   Beniamini G, 2017, INT C PROGRAM COMPRE, P45, DOI 10.1109/ICPC.2017.18
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Bland JM, 1997, BRIT MED J, V314, P572, DOI 10.1136/bmj.314.7080.572
   Brown S., 2023, The C4 Model for Visualising Software Architecture
   Buckner J, 2005, PROG COMPREHEN, P149, DOI 10.1109/WPC.2005.22
   Calcagno C, 2011, LECT NOTES COMPUT SC, V6617, P459, DOI 10.1007/978-3-642-20398-5_33
   Chin WW, 1998, QUANT METH SER, P295
   Corazza A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P233, DOI 10.1109/ICSM.2012.6405277
   Corral L, 2015, 2015 IEEE/ACM FOURTH INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P1, DOI 10.1109/GREENS.2015.8
   COWLISHAW MF, 1987, IBM J RES DEV, V31, P73, DOI 10.1147/rd.311.0073
   Cresswell J.W., 2012, Educ. Res., V10, P1
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   Edwards J, 2005, ACM SIGPLAN NOTICES, V40, P505, DOI 10.1145/1103845.1094851
   English F., 2006, Encyclopedia of Educational Leadership and Administration, P970, DOI DOI 10.4135/9781412939584
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Field A., 2013, Discovering Statistics using IBM SPSS Statistics, Vthird, P374, DOI DOI 10.1016/B978-012691360-6/50012-4
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Fowler M., 2018, Refactoring: improving the design of existing code
   Fowler M., 2009, TwoHardThings
   Guerra E., 2016, P 11 LAT AM C PATT L, P1
   Guerrouj L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1385, DOI 10.1109/ICSE.2013.6606723
   Hackett B., 2006, P 14 ACM SIGSOFT INT, P69
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Henseler J, 2009, ADV INT MARKETING, V20, P277, DOI 10.1108/S1474-7979(2009)0000020014
   HILL Manuela Magalhaes., 2002, Investigacao por Questionario
   Hofmeister J, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P217, DOI 10.1109/SANER.2017.7884623
   Hora A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1102, DOI 10.1145/3180155.3180212
   Host EW, 2009, LECT NOTES COMPUT SC, V5653, P294, DOI 10.1007/978-3-642-03013-0_14
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Janes A., 2018, P 33 ACM IEEE INT C, P876
   JetBrains, 2023, Inlay hints | intellij platform plugin SDK
   Jun J, 2019, TOTAL QUAL MANAG BUS, V30, pS83, DOI 10.1080/14783363.2019.1665820
   Kaplan D., 2009, STRUCTURAL EQUATION
   Lawrie D, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P213, DOI 10.1109/SCAM.2007.17
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lima P, 2023, INFORM SOFTWARE TECH, V154, DOI 10.1016/j.infsof.2022.107089
   Liu K, 2019, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2019.00019
   Martin R.C., 2009, Clean Code: A Handbook of Agile Software Craftmanship
   McConnell S., 2004, Best Practices for Developers, Vsecond
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Microsoft, 2023, Visual Studio Code
   Microsoft, 2022, VS code API
   Murphy GC, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P73, DOI 10.1109/ICSE-NIER.2019.00027
   Murphy-Hill E., 2014, Recommendation Systems in Software Engineering, P223, DOI DOI 10.1007/978-3-642-45135-59
   Petrescu CC, 2023, J SYST SOFTWARE, V202, DOI 10.1016/j.jss.2023.111693
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Preacher KJ, 2007, MULTIVAR BEHAV RES, V42, P185, DOI 10.1080/00273170701341316
   Ringle C.M., 2014, Brazilian Journal of Marketing, V13, P54, DOI [DOI 10.5585/REMARK.V13I2.2717, 10.5585/remark.v13i2.2717, 10.5585/bjm.v13i2.2717]
   Robbes R., 2012, INT S FDN SOFTW ENG
   Sanchez H, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P251, DOI 10.1109/SANER.2015.7081835
   Sarstedt M., 2021, Handbook of market research, P1, DOI [DOI 10.1080/1743727X.2015.1005806, 10.1007/978-3-030-80519-7, DOI 10.1007/978-3-030-80519-7, 10.1007/978-3-319-05542-815-2]
   Sawant AA, 2016, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSME.2016.64
   Schankin A, 2018, INT C PROGRAM COMPRE, P31, DOI 10.1145/3196321.3196332
   SCHWARTZ MD, 1984, SIGPLAN NOTICES, V19, P122, DOI 10.1145/502949.502887
   Sharafi Z., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P27
   Sliwerski J., 2005, ESEC SIGSOFT FSE, P107
   Sulír M, 2018, J VISUAL LANG COMPUT, V49, P46, DOI 10.1016/j.jvlc.2018.10.001
   Thomas J, 2008, BMC MED RES METHODOL, V8, DOI 10.1186/1471-2288-8-45
   Ungar D, 1997, COMMUN ACM, V40, P38, DOI 10.1145/248448.248457
   Vasilescu B, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3106237.3106289
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Venkatesh V, 2012, MIS QUART, V36, P157
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
NR 72
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112137
DI 10.1016/j.jss.2024.112137
EA JUN 2024
PG 27
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XB8V5
UT WOS:001259323900001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Cheng, JX
   Chen, YZ
   Cao, YZ
   Wang, HP
AF Cheng, Jianxin
   Chen, Yizhou
   Cao, Yongzhi
   Wang, Hanpin
TI A vulnerability detection framework with enhanced graph feature learning
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Vulnerability detection; Software security; Code representation; Control
   flow graph; Graph neural network
AB Vulnerability detection in smart contracts is critical to secure blockchain systems. Existing methods represent the bytecode as a graph structure and leverage graph neural networks to learn graph features for vulnerability detection. However, these methods are limited to handling the long-range dependencies between nodes. This means that they might focus on learning local node feature while ignoring global node information. In this paper, we propose a novel vulnerability detection framework with E nhanced G raph F eature L earning (EGFL), which aims to extract the global node information and utilize it to improve vulnerability detection in smart contracts. Specifically, we first represent the bytecode as a Control Flow Graph (CFG). To extract global node information, EGFL constructs a linear node feature matrix from CFG, and uses the feature -aware and relationship -aware modules to handle long-range dependencies between nodes. Meanwhile, a graph neural network is adopted to extract the local node feature from CFG. Subsequently, we fuse the global node information and local node feature to generate an enhanced graph feature for capturing more vulnerability features. We evaluate EGFL on the benchmark dataset with six types of smart contract vulnerabilities. Results show that EGFL outperforms fourteen state-of-the-art vulnerability detection methods by 10.83%-60.28% in F1 score.
C1 [Cheng, Jianxin; Chen, Yizhou; Cao, Yongzhi; Wang, Hanpin] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing, Peoples R China.
   [Cheng, Jianxin; Chen, Yizhou; Cao, Yongzhi; Wang, Hanpin] Peking Univ, Sch Comp Sci, Beijing, Peoples R China.
   [Cao, Yongzhi] Zhongguancun Lab, Beijing, Peoples R China.
   [Wang, Hanpin] Guangzhou Univ, Sch Comp Sci & Cyber Engn, Guangzhou, Peoples R China.
C3 Peking University; Peking University; Zhongguancun Laboratory; Guangzhou
   University
RP Wang, HP (corresponding author), Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing, Peoples R China.; Wang, HP (corresponding author), Peking Univ, Sch Comp Sci, Beijing, Peoples R China.
EM jianxin@stu.pku.edu.cn; yizhouchen@stu.pku.edu.cn; caoyz@pku.edu.cn;
   whpxhy@pku.edu.cn
FU National Key R&D Program of China [2021YFF1201102]; National Natural
   Science Foundation of China [62172016, 61932001]
FX <B>Acknowledgments</B> This work was supported by the National Key R&D
   Program of China under Grant 2021YFF1201102 and the National Natural
   Science Foundation of China under Grants 62172016 and 61932001.
CR Breidenbach M., 2017, A framework for bug hunting on the ethereum blockchain
   Cai J, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111550
   Chen D, 2023, J SYST SOFTWARE, V202, DOI 10.1016/j.jss.2023.111705
   Chung JY, 2015, PR MACH LEARN RES, V37, P2067
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dong YK, 2023, INFORM SOFTWARE TECH, V158, DOI 10.1016/j.infsof.2023.107168
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Gilmer J, 2017, PR MACH LEARN RES, V70
   He JH, 2023, J SYST SOFTWARE, V199, DOI 10.1016/j.jss.2023.111627
   Hellendoorn V. J., 2020, INT C LEARN REPR
   Huang JJ, 2021, IEEE T INF FOREN SEC, V16, P2144, DOI 10.1109/TIFS.2021.3050051
   Tann WJW, 2019, Arxiv, DOI arXiv:1811.06632
   Kipf T.N., 2017, INT C LEARN REPR, P1
   Li Y., 2018, INT C LEARN REPR, P1, DOI DOI 10.48550/ARXIV.1707.01926
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Liao ZQ, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P980, DOI 10.1145/3597926.3598111
   Liao ZQ, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P752, DOI 10.1145/3533767.3534222
   Liu HY, 2023, J SYST SOFTWARE, V204, DOI 10.1016/j.jss.2023.111775
   Liu H, 2019, INT C PROGRAM COMPRE, P105, DOI 10.1109/ICPC.2019.00024
   Liu Z., 2021, P 30 INT JOINT C ART, P2751
   Liu ZG, 2023, IEEE T KNOWL DATA EN, V35, P1296, DOI 10.1109/TKDE.2021.3095196
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Mi F, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (ICBC), DOI 10.1109/ICBC51069.2021.9461050
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Pasqua M, 2023, J SYST SOFTWARE, V200, DOI 10.1016/j.jss.2023.111653
   Pennington J., 2014, P C EMP METH NAT LAN, P1532, DOI DOI 10.3115/V1/D14-1162
   Qian Peng, 2023, WWW '23: Proceedings of the ACM Web Conference 2023, P2220, DOI 10.1145/3543507.3583367
   Sendner C., 2023, P 2023 C NETW DISTR, P1
   Shi X., 2015, Advances in neural information processing systems, V28, P802, DOI [10.5555/2969239.2969329, 10.48550/arXiv.1506.04214, DOI 10.48550/ARXIV.1506.04214, DOI 10.5555/2969239.2969329]
   Tang W, 2023, J SYST SOFTWARE, V199, DOI 10.1016/j.jss.2023.111623
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF, 2021, 2021 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2021), P103, DOI 10.1109/EuroSP51992.2021.00018
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Vacca A, 2021, J SYST SOFTWARE, V174, DOI 10.1016/j.jss.2020.110891
   Vaswani A., 2017, Advances in neural information processing systems, P5998
   Velickovic P, 2018, INT C LEARN REPR, DOI DOI 10.48550/ARXIV.1710.10903
   Viglianisi E, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110647
   Wang C, 2019, PR MACH LEARN RES, V97
   Wang W, 2021, IEEE T NETW SCI ENG, V8, P1133, DOI 10.1109/TNSE.2020.2968505
   Wen XC, 2023, PROC INT CONF SOFTW, P2275, DOI 10.1109/ICSE48619.2023.00191
   Yang Z, 2023, ACM T SOFTW ENG METH, V32, DOI [10.1145/3534117, 10.11686/cyxb2022405]
   Yang Z, 2021, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC52881.2021.00010
   Yuan DW, 2023, J SYST SOFTWARE, V202, DOI 10.1016/j.jss.2023.111699
   Zeng QR, 2022, 2022 IEEE 46TH ANNUAL COMPUTERS, SOFTWARE, AND APPLICATIONS CONFERENCE (COMPSAC 2022), P1742, DOI 10.1109/COMPSAC54236.2022.00277
   Zhang Fengji, 2022, Information and Software Technology, DOI 10.1016/j.infsof.2022.106922
   Zhang JW, 2023, IEEE T SOFTWARE ENG, V49, P4196, DOI 10.1109/TSE.2023.3286586
   Zhang LJ, 2022, COMPUT NETW, V217, DOI 10.1016/j.comnet.2022.109289
   Zhuang Y, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3283
NR 50
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112118
DI 10.1016/j.jss.2024.112118
EA JUN 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WF1Q5
UT WOS:001253367500001
DA 2024-08-05
ER

PT J
AU Wang, HC
   Devine, P
   Tizard, J
   Shahamiri, SR
   Blincoe, K
AF Wang, Hechen
   Devine, Peter
   Tizard, James
   Shahamiri, Seyed Reza
   Blincoe, Kelly
TI Conversation in forums: How software forum posts discuss potential
   development insights
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software product forums; Content analysis; User feedback; Software
   quality; Contextual information
AB User feedback on software usage is utilised by developers to improve their software. Software product forums are platforms rich in software-related user feedback, such as forum threads containing bug reports or requests for new features. However, previous studies have mainly focused on analysing user feedback from software product forums as individual sentences, which can lead to missing insights and a lack of understanding of the overall context of forum posts. To fill this gap in research, this work examines user feedback found in software product forum posts to investigate the differences between content classifications found in forum sentences and posts. We manually evaluated software product forum posts collected from two open-sourced software product forums and discovered five new types of user feedback that can only be identified when examining user feedback in the form of forum posts. Additionally, we examined the association between sentence classifications found within software product forums. Our results indicate that contextual information complimenting product improvement insights can be found in software product forums, with a confidence of 0.75 and 0.69 for the association between apparent bug and application usage sentences. This information can be used to reduce manual efforts required to chase up missing contextual information when attempting to understand or fix software issues. We also provide insights into the progression of posts in software product forums at the thread-level, and our progression flowchart can be used to summarise the sequence of events in software product forum threads. Our findings reveal the importance of looking at user feedback within software product forums in the format of forum posts to identify new insights on user feedback for software improvements. Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board.
C1 [Wang, Hechen; Devine, Peter; Tizard, James; Shahamiri, Seyed Reza; Blincoe, Kelly] Univ Auckland, Human Aspects Software Engn Lab, Auckland, New Zealand.
C3 University of Auckland
RP Wang, HC (corresponding author), Univ Auckland, Human Aspects Software Engn Lab, Auckland, New Zealand.
EM hwan531@aucklanduni.ac.nz; k.blincoe@auckland.ac.nz
RI Shahamiri, Seyed Reza/G-4389-2011
OI Shahamiri, Seyed Reza/0000-0003-1543-5931; Blincoe,
   Kelly/0000-0003-4092-9706
CR Agarwal R., 1994, P 20 INT C VER LARG, V1215, P487, DOI DOI 10.5555/645920.672836
   AlZu'bi S, 2018, 2018 FIFTH INTERNATIONAL CONFERENCE ON SOCIAL NETWORKS ANALYSIS, MANAGEMENT AND SECURITY (SNAMS), P323, DOI 10.1109/SNAMS.2018.8554909
   Assimakopoulos D, 2006, R&D MANAGE, V36, P97, DOI 10.1111/j.1467-9310.2005.00418.x
   Bettenburg Nicolas, 2008, Proc. European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE), P308, DOI [10.1145/1453101.1453146, DOI 10.1145/1453101.1453146]
   Bickart B., 2001, J INTERACT MARK, V15, P31, DOI DOI 10.1002/DIR.1014
   Blatter P, 2022, L N INST COMP SCI SO, V452, P230, DOI 10.1007/978-3-031-22324-2_18
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Dabrowski J, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10065-7
   de Araújo AF, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1321, DOI 10.1145/3412841.3442006
   Devine P, 2022, 2022 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON NATURAL LANGUAGE-BASED SOFTWARE ENGINEERING (NLBSE 2022), P1, DOI 10.1145/3528588.3528652
   Devine P, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P87, DOI 10.1109/REW53955.2021.00020
   Devlin J, 2018, ARXIV
   Diamantopoulos T., 2020, Mining Software Engineering Data for Software Reuse, P75
   El Mezouar M, 2018, EMPIR SOFTW ENG, V23, P1704, DOI 10.1007/s10664-017-9559-4
   Frith Jordan., 2017, Communication Design Quarterly Review, V4, P12
   Gottipati S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P323, DOI 10.1109/ASE.2011.6100069
   Haering M, 2021, PROC INT CONF SOFTW, P970, DOI 10.1109/ICSE43902.2021.00092
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hey T, 2020, INT REQUIR ENG CONF, P169, DOI 10.1109/RE48521.2020.00028
   Holtz P, 2012, J MEDIA PSYCHOL-GER, V24, P55, DOI 10.1027/1864-1105/a000062
   Iqbal T, 2021, INT REQUIR ENG CONF, P128, DOI 10.1109/RE51729.2021.00019
   Jafarzadeh Ali Akbar, 2017, Journal of Forest Science (Prague), V63, P370, DOI [10.17221/7/2017-JFS, 10.17221/7/2017-jfs]
   Khan JA, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2309
   Khan JA, 2019, INT REQUIR ENG CONF, P63, DOI 10.1109/RE.2019.00018
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Martens D, 2019, INT REQUIR ENG CONF, P131, DOI 10.1109/RE.2019.00024
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Mekala RR, 2021, INT REQUIR ENG CONF, P139, DOI 10.1109/RE51729.2021.00020
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nayebi M, 2018, EMPIR SOFTW ENG, V23, P2764, DOI 10.1007/s10664-018-9601-1
   Noei E., 2019, P 29 ANN INT C COMP, P54
   Nugroho YS, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10032-2
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Rahimi M., 2014, Proc.of the 29th ACM/IEEE Int. Conf. on Autom. Soft. Eng, P479
   Seyff N, 2014, PROCEEDINGS OF THE 1ST INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2014), P99, DOI 10.1145/2593902.2593927
   Soni A, 2020, J CASES INF TECHNOL, V22, P1, DOI 10.4018/JCIT.2020100101
   Swamy K.R., 2015, Int. J. Innov. Technol. Res., V3, P2401
   Tizard J., 2022, IEEE Trans. Softw. Eng.
   Tizard J, 2022, REQUIR ENG, V27, P293, DOI 10.1007/s00766-021-00357-1
   Tizard J, 2019, INT REQUIR ENG CONF, P17, DOI 10.1109/RE.2019.00014
   Wang HC, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P293, DOI 10.1109/REW53955.2021.00052
   Wu TY, 2023, IEEE-CAA J AUTOMATIC, V10, P1122, DOI 10.1109/JAS.2023.123618
NR 43
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
AR 112108
DI 10.1016/j.jss.2024.112108
EA MAY 2024
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UN6Q1
UT WOS:001248781800001
OA hybrid
DA 2024-08-05
ER

PT J
AU Glock, J
   Pichler, J
   Pinzger, M
AF Glock, Johann
   Pichler, Josef
   Pinzger, Martin
TI PASDA: A partition-based semantic differencing approach with best effort
   classification of undecided cases
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Equivalence checking; Program analysis; Symbolic execution
ID SYMBOLIC EXECUTION; EQUIVALENCE
AB Equivalence checking is used to verify whether two programs produce equivalent outputs when given equivalent inputs. Research in this field mainly focused on improving equivalence checking accuracy and runtime performance. However, for program pairs that cannot be proven to be either equivalent or nonequivalent, existing approaches only report a classification result of unknown , which provides no information regarding the programs' non -/equivalence. In this paper, we introduce PASDA, our partition -based semantic differencing approach with best effort classification of undecided cases. While PASDA aims to formally prove non -/equivalence of analyzed program pairs using a variant of differential symbolic execution, its main novelty lies in its handling of cases for which no formal non -/equivalence proof can be found. For such cases, PASDA provides a best effort equivalence classification based on a set of classification heuristics. We evaluated PASDA with an existing benchmark consisting of 141 non -/equivalent program pairs. PASDA correctly classified 61%-74% of these cases at timeouts from 10 s to 3600 s. Thus, PASDA achieved equivalence checking accuracies that are 3%-7% higher than the best results achieved by three existing tools. Furthermore, PASDA's best effort classifications were correct for 70%-75% of equivalent and 55%-85% of non-equivalent cases across the different timeouts.
C1 [Glock, Johann; Pinzger, Martin] Univ Klagenfurt, Dept Informat Syst, Univ str 65-67, A-9020 Klagenfurt, Austria.
   [Pichler, Josef] Univ Appl Sci Upper Austria, Sch Informat Commun & Media, Softwarepk 11, A-4232 Hagenberg, Austria.
C3 University of Klagenfurt
RP Glock, J (corresponding author), Univ Klagenfurt, Dept Informat Syst, Univ str 65-67, A-9020 Klagenfurt, Austria.
EM johann.glock@aau.at
RI Glock, Johann/KSL-9033-2024
OI Glock, Johann/0000-0002-0152-8611; Pinzger, Martin/0000-0002-5536-3859
FU Austrian Science Fund (FWF) [10.55776/P36698]
FX This research was funded in whole or in part by the Austrian Science
   Fund (FWF) 10.55776/P36698. For open access purposes, the author has
   applied a CC BY public copyright license to any author accepted
   manuscript version arising from this submission.
CR Anonymous, 2023, Zenodo
   Backes John, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P99, DOI 10.1007/978-3-642-39176-7_7
   Badihi S., 2022, GitHub-resess/ARDiff
   Badihi S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P13, DOI 10.1145/3368089.3409757
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Barthe Gilles, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P200, DOI 10.1007/978-3-642-21437-0_17
   Beckert Bernhard, 2018, Principled Software Development, P41, DOI [DOI 10.1007/978-3-319-98047-8_3, 10.1007/978-3-319-98047-8_3]
   Beyer D., 2013, ESEC FSE, P389, DOI [10.1145/2491411.2491429, DOI 10.1145/2491411.2491429]
   Böhme M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P302, DOI 10.1109/ICSE.2013.6606576
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cadar C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/1985793.1985995
   Cousot P., 1977, Conference Record of the Fourth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P238, DOI [10.1145/512950.512973, DOI 10.1145/512950.512973]
   Dahiya M, 2017, LECT NOTES COMPUT SC, V10695, P127, DOI 10.1007/978-3-319-71237-6_7
   Danglot B, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110398
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C
   Fedyukovich G, 2016, LECT NOTES COMPUT SC, V9780, P433, DOI 10.1007/978-3-319-41540-6_24
   Felsing D, 2014, P 29 ACM IEEE INT C, P349, DOI [10.1145/2642937.2642987, DOI 10.1145/2642937.2642987]
   Godefroid P., 2011, INT S SOFTWARE TESTI, P23, DOI [10.1145/2001420.2001424, DOI 10.1145/2001420.2001424]
   Godlin B, 2009, DES AUT CON, P466
   Grazia LD, 2023, IEEE T SOFTWARE ENG, V49, P2366, DOI 10.1109/TSE.2022.3218859
   Jakobs MC, 2022, LECT NOTES COMPUT SC, V13241, P184, DOI 10.1007/978-3-030-99429-7_11
   Jakobs MC, 2021, FME WORKS FORM, P130, DOI 10.1109/FormaliSE52586.2021.00019
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kuchta T, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3208952
   Lahiri Shuvendu K., 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P712, DOI 10.1007/978-3-642-31424-7_54
   LaToza Thomas D., 2010, Evaluation and Usability of Programming Languages and Tools, P1, DOI [DOI 10.1145/1937117.1937125, 10.1145/1937117.1937125]
   Le W, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1047, DOI 10.1145/2568225.2568304
   Mercaldo F, 2021, IEEE T SOFTWARE ENG, V48, P2643, DOI 10.1109/TSE.2021.3067061
   Mercer E., 2012, ACM SIGSOFT Softw. Eng. Not., V37, P1, DOI DOI 10.1145/2382756.2382801
   Mora F, 2018, IEEE INT CONF AUTOM, P441, DOI [10.1145/3238117.3238178, 10.1145/3238147.3238178]
   Noller Y, 2020, PROC INT CONF SOFTW, P1273, DOI 10.1145/3377811.3380363
   Parnin C., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis ISSTA, P199
   Partush N, 2014, ACM SIGPLAN NOTICES, V49, P811, DOI [10.1145/2714064.2660245, 10.1145/2660193.2660245]
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Pasareanu C S, 2010, P IEEE ACM INT C AUT, P179, DOI [10.1145/1858996.1859035, DOI 10.1145/1858996.1859035]
   Person S., 2008, P 16 ACM SIGSOFT INT, P226, DOI [10.1145/1453101.1453131, DOI 10.1145/1453101.1453131]
   Person S, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P504
   Raghavan S, 2004, PROC IEEE INT CONF S, P188, DOI 10.1109/ICSM.2004.1357803
   Ramos David A., 2011, P 23 INT C COMP AID, P669, DOI [DOI 10.1007/978-3-642-22110-1_55, 10.1007/978-3-642]
   Sarhan QI, 2022, IEEE ACCESS, V10, P10618, DOI 10.1109/ACCESS.2022.3144079
   Sharma V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P123, DOI 10.1145/3368089.3409734
   Sun H, 2016, PROC INT CONF SOFTW, P1051, DOI 10.1145/2884781.2884820
   The Apache Software Foundation, 2007, StopWatch (Apache Commons Lang 2.4 API)
   The Java PathFinder Contributors, 2005, GitHub: Java PathFinder (JPF)
   Thomas, 2000, INT J SOFTW TOOLS TE, V2, P366, DOI [10.1007/s100090050043, DOI 10.1007/S100090050043]
   Winter E, 2023, IEEE T SOFTWARE ENG, V49, P1823, DOI 10.1109/TSE.2022.3194188
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wu XH, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1252, DOI 10.1109/ASE51524.2021.9678795
   Wu XH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P503, DOI 10.1145/3468264.3468605
   Yang GW, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2629536
NR 53
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112037
DI 10.1016/j.jss.2024.112037
EA APR 2024
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QM9D5
UT WOS:001221398700001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Fu, Y
   Yan, M
   He, PJ
   Liu, C
   Zhang, XH
   Yang, D
AF Fu, Ying
   Yan, Meng
   He, Pinjia
   Liu, Chao
   Zhang, Xiaohong
   Yang, Dan
TI End-to-end log statement generation at block-level
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Log statement; End-to-end; Block-level; Deep learning
AB Logging is crucial in software development for addressing runtime issues but can pose challenges. Logging encompasses four essential sub -tasks: whether to log (Whether), where to log (Position), which log level (Level), and what information to log (Message). While existing approaches have performed well, they suffer from two limitations. Firstly, they address only a subset of the logging sub -tasks. Secondly, most of them focus on generating single log statements at class or method level, potentially overlooking multiple log statements within those scopes. To address these issues, we propose ELogger, which enables end -to -end log statement generation at block -level. Furthermore, ELogger implements block -level log generation, enabling it to handle multiple log statements within different code blocks of a method. Evaluation results indicate that ELogger correctly predicts all four sub -tasks in 19.55% of cases. Compared to the baselines that combined existing approaches for endto -end log statement generation, ELogger demonstrates a significant improvement with a 50.85% to 78.21% average increase. Additionally, ELogger correctly predicts whether to log in 71.68% of cases, two sub -tasks (Whether and Position) in 58.29% of cases, and three sub -tasks (Whether, Position, and Level) in 41.97% of cases, all of which outperform the baselines.
C1 [Fu, Ying; Yan, Meng; Liu, Chao; Zhang, Xiaohong] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
   [He, Pinjia] Chinese Univ Hong Kong CUHK Shenzhen, Sch Data Sci, Shenzhen, Peoples R China.
   [Yang, Dan] Southwest Jiaotong Univ, Chengdu, Peoples R China.
C3 Chongqing University; The Chinese University of Hong Kong, Shenzhen;
   Southwest Jiaotong University
RP Yan, M (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
EM fuying@cqu.edu.cn; mengy@cqu.edu.cn; hepinjia@cuhk.edu.cn;
   liu.chao@cqu.edu.cn; xhongz@cqu.edu.cn; dyang@cqu.edu.cn
FU National Natural Science Foundation of China [62372071, 62202074];
   Chongqing Technology Innovation and Application Development Project
   [CST-B2022TIAD-STX0007, CSTB2023TIAD-STX0025]; Fun-damental Research
   Funds for the Central Universities [2023CD-JKYJH013]
FX This work was supported in part by the National Natural Science
   Foundation of China (No. 62372071 and 62202074) , the Chongqing
   Technology Innovation and Application Development Project (No.
   CST-B2022TIAD-STX0007 and No. CSTB2023TIAD-STX0025) , and the
   Fun-damental Research Funds for the Central Universities (No.
   2023CD-JKYJH013) .
CR Babenko A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P237
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Banerjee S., 2005, P ACL WORKSHOP INTRI, P65, DOI DOI 10.3115/1626355.1626389
   Berrocal E, 2014, IEEE INT C CL COMP, P1, DOI 10.1109/CLUSTER.2014.6968757
   Breier Jakub, 2015, Information Science and Applications, P449, DOI 10.1007/978-3-662-46578-3_53
   Chen AR, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P126, DOI 10.1109/ICSE-Companion.2019.00055
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Cliff N., 1996, ORDINAL METHODS BEHA
   Das A, 2020, INT PARALL DISTRIB P, P1092, DOI 10.1109/IPDPS47924.2020.00115
   Das A, 2018, HPDC '18: PROCEEDINGS OF THE 27TH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE PARALLEL AND DISTRIBUTED COMPUTING, P40, DOI 10.1145/3208040.3208051
   Ding ZS, 2022, EUR CON SFTWR MTNCE, P349, DOI 10.1109/SANER53432.2022.00051
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Fu YY, 2023, IEEE T SERV COMPUT, V16, P3537, DOI 10.1109/TSC.2023.3289488
   Guan W, 2023, IEEE T SERV COMPUT, V16, P3412, DOI 10.1109/TSC.2023.3262405
   Guo DY, 2022, Arxiv, DOI arXiv:2203.03850
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   Jia T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P25, DOI 10.1109/ICWS.2017.12
   Jia ZY, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P61, DOI 10.1109/SANER.2018.8330197
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Lee C, 2023, PROC INT CONF SOFTW, P1750, DOI 10.1109/ICSE48619.2023.00150
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Li ZH, 2021, PROC INT CONF SOFTW, P1461, DOI 10.1109/ICSE43902.2021.00131
   Li ZH, 2020, IEEE INT CONF AUTOM, P361, DOI 10.1145/3324884.3416636
   Lin C.-Y., 2004, TEXT SUMMARIZATION B, P74, DOI DOI 10.2307/3105454
   Lin QW, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P480, DOI 10.1145/3236024.3236060
   Liu FC, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1777, DOI 10.1145/3319535.3363224
   Liu ZX, 2021, IEEE T SOFTWARE ENG, V47, P2012, DOI 10.1109/TSE.2019.2941943
   Lu J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P3, DOI 10.1145/3236024.3236071
   Mastropaolo A, 2024, J SYST SOFTWARE, V210, DOI 10.1016/j.jss.2023.111947
   Mastropaolo A, 2022, PROC INT CONF SOFTW, P2279, DOI 10.1145/3510003.3511561
   Nagappan Meiyappan, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P41, DOI 10.1109/ISSRE.2009.23
   Nagaraj K., 2012, Structured comparative analysis of systems logs to diagnose performance problems, P353
   Nandi A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P215, DOI 10.1145/2939672.2939712
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Tsung-Yi Lin, 2017, 2017 IEEE International Conference on Computer Vision (ICCV), P2999, DOI 10.1109/ICCV.2017.324
   Le VH, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P492, DOI 10.1109/ASE51524.2021.9678773
NR 40
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112146
DI 10.1016/j.jss.2024.112146
EA JUN 2024
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XM3O4
UT WOS:001262062800001
DA 2024-08-05
ER

PT J
AU Xiao, JM
   Xu, ZP
   Chen, SP
   Lei, G
   Fan, GD
   Cao, YL
   Deng, SG
   Feng, ZY
AF Xiao, Jianmao
   Xu, Zhipeng
   Chen, Shiping
   Lei, Gang
   Fan, Guodong
   Cao, Yuanlong
   Deng, Shuiguang
   Feng, Zhiyong
TI Confix: Combining node-level fix templates and masked language model for
   automatic program repair
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Automatic program repair; Fix templates; Masked language model
AB Automatic program repair (APR) is a promising technique to fix program defects by generating patches. In the current APR techniques, template-based and learning-based techniques have demonstrated different advantages. Template-based APR techniques rely on pre-defined fix templates, providing higher controllability but limited by the variety of templates and edit expressiveness. In contrast, learning-based APR techniques treat repair as a neural machine translation task, improving the edit expressiveness through training neural networks. However, this technique also faces the influence of quality and variety of training data, leading to numerous errors and redundant code generation. To overcome their limitations, this paper proposes an innovative APR technique called Confix. Confix first constructs a code information tree to assist in mining edit changes during historical repair. It then further enriches the types of fix templates using node information in the tree. Afterward, Confix defines masked lines based on node-level fix templates to control the scope of patch generation, avoiding redundant semantic code generation. Finally, Confix leverages the powerful edit expressiveness of the masked language model and combines it with fix strategies to generate correct patches more efficiently and accurately. Experimental results show that Confix exhibits state-of-the-art performance on the Defects4J 1.2 and QuixBugs benchmarks.
C1 [Xiao, Jianmao; Lei, Gang] Jiangxi Normal Univ, Sch Software, Nanchang, Peoples R China.
   [Xu, Zhipeng] Jiangxi Normal Univ, Sch Digital Ind, Shangrao, Peoples R China.
   [Chen, Shiping] CSIRO Data61, Sydney, NSW, Australia.
   [Fan, Guodong; Feng, Zhiyong] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Cao, Yuanlong] Jiangxi Normal Univ, Sch Comp & Informat Engn, Nanchang, Peoples R China.
   [Deng, Shuiguang] Zhejiang Univ, Coll Comp Sci & Technol, Zhejiang, Peoples R China.
C3 Jiangxi Normal University; Jiangxi Normal University; Commonwealth
   Scientific & Industrial Research Organisation (CSIRO); Tianjin
   University; Jiangxi Normal University; Zhejiang University
RP Xiao, JM (corresponding author), Jiangxi Normal Univ, Sch Software, Nanchang, Peoples R China.
EM jm_xiao@jxnu.edu.cn
RI Chen, Shiping/B-7492-2011
OI Chen, Shiping/0000-0002-4603-0024
FU Natural Science Foundation of Jiangxi Province [20224BAB212015,
   20224ACB202007]; National Natural Science Foundation of China [62067003,
   62262030, 62363015]; Jiangxi Provincial 03 Special Project; Jiangxi
   Provincial 5G Project [20224ABC03A13, 20232ABC03A26]
FX This work was supported by the Natural Science Foundation of Jiangxi
   Province (Grant No. 20224BAB212015, 20224ACB202007) , Jiangxi Provincial
   03 Special Project and 5G Project (20224ABC03A13, 20232ABC03A26) , the
   National Natural Science Foundation of China under grant No. 62067003,
   62262030 and 62363015.
CR AST wiki page, 2023, about us
   Bavishi R, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P613, DOI 10.1145/3338906.3338952
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Chawathe S. S., 1996, SIGMOD Record, V25, P493, DOI 10.1145/235968.233366
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Drain D, 2021, Arxiv, DOI arXiv:2105.09352
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Hua JR, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P888, DOI 10.1145/236024.3264600
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Jiang T, 2020, BEHAV THER, V51, P675, DOI 10.1016/j.beth.2020.05.002
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Koyuncu A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P314, DOI 10.1145/3338906.3338935
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li Y, 2022, PROC INT CONF SOFTW, P511, DOI 10.1145/3510003.3510177
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Lin Derrick, 2017, P COMP 2017 ACM SIGP
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P456, DOI 10.1109/saner.2019.8667970
   Liu X, 2023, IEEE T KNOWL DATA EN, V35, P857, DOI 10.1109/TKDE.2021.3090866
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Mechtaev S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P129, DOI 10.1145/3180155.3180247
   Radford A., 2019, OpenAI blog, V1, P9
   Shariffdeen RS, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3412376
   Soto M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P221, DOI 10.1109/SANER.2018.8330211
   Vaswani A, 2017, ADV NEUR IN, V30
   Villanueva OM, 2020, GECCO'20: PROCEEDINGS OF THE 2020 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1021, DOI 10.1145/3377930.3389845
   Wang CH, 2020, AAAI CONF ARTIF INTE, V34, P9154
   Wang Y., 2021, arXiv
   Wardat M, 2021, PROC INT CONF SOFTW, P251, DOI 10.1109/ICSE43902.2021.00034
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xia CS, 2023, PROC INT CONF SOFTW, P1482, DOI 10.1109/ICSE48619.2023.00129
   Xia CS, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P959, DOI 10.1145/3540250.3549101
   Xu XZ, 2019, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE.2019.00063
   Yang DH, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10003-7
   Yang SH, 2020, Arxiv, DOI arXiv:2002.07526
   Zhu QH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P341, DOI 10.1145/3468264.3468544
NR 48
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112116
DI 10.1016/j.jss.2024.112116
EA JUN 2024
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WF3J0
UT WOS:001253412500001
DA 2024-08-05
ER

PT J
AU Raselimo, M
   Fischer, B
AF Raselimo, Moeketsi
   Fischer, Bernd
TI Spectrum-based rule- and item-level localization of faults in
   context-free grammars
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software testing and debugging; Grammars and context-free languages
ID AUTOMATIC-GENERATION; AMBIGUITY DETECTION
AB We describe and evaluate spectrum -based methods aimed at finding faults in context -free grammars. In their basic form, they take as input a test suite and a parser for the grammar that is modified to collect grammar spectra (i.e., the sets of grammar elements used in attempts to parse the individual test cases), and return as output a ranked list of suspicious elements. We define grammar spectra suitable for localizing faults on the level of the grammar rules (i.e., rule spectra) and the rules' individual symbols (i.e., item spectra), respectively. We show how both types of grammar spectra can be collected by both LL and LR parsers, and how the JavaCC, ANTLR, and CUP parser generators can be modified and used to automate the collection of the grammar spectra. We also show how grammar spectra can be synthesized directly from test cases derived from a grammar, and how such synthetic spectra can be used to localize differences between a grammar and a black -box system under test. We first evaluate our approach over a large number of medium-sized single fault grammars, which we constructed by fault seeding from a common origin grammar. At the rule level, it ranks the rules containing the seeded faults within the top five rules in about 40%-70% of the cases, depending on the applied parsing technique, test suite, and ranking metric, and pinpoints them (i.e., correctly identifies them as unique most suspicious rule) in about 10%-30% of the cases, with significantly better results for the synthetic spectra. At the item level, our approach remains remarkably effective despite the larger number of possible locations, provided it is coupled with a simple tie -breaking strategy that prefers items with the right -most designated position over other items from the same rules in a tie. It typically ranks the seeded faults within the top five positions in about 30%-60% of the cases, and pinpoints them in about 15%-40% of the cases. This specialized item -level localization also significantly outperforms a simplistic extension of the rule -level localization, where all positions within a rule are given the same score. We further evaluate our approach over grammars that contain real faults. We show that an iterative method can be used to localize and manually remove one by one multiple faults in grammars submitted by students enrolled in various compiler engineering courses; in most iterations, the top -ranked rule already contains an error, and no error is ranked outside the top five ranked rules. We finally apply our approach to a large open -source SQLite grammar and show where this version deviates from the language accepted by the actual SQLite system.
C1 [Raselimo, Moeketsi; Fischer, Bernd] Stellenbosch Univ, Stellenbosch, South Africa.
C3 Stellenbosch University
RP Fischer, B (corresponding author), Stellenbosch Univ, Stellenbosch, South Africa.
EM 22374604@sun.ac.za; bfischer@sun.ac.za
FU National Research Foundation (NRF), South Africa [113364,
   SRUG2204234463]; SU Consolidoc bursary
FX The financial assistance of the National Research Foundation (NRF),
   South Africa under Grants 113364 and SRUG2204234463 towards this
   research is hereby acknowledged. M. Raselimo was also supported by an SU
   Consolidoc bursary.
CR de Souza HA, 2017, Arxiv, DOI arXiv:1607.04347
   Abreu R., 2009, Ph.D. thesis
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   [Anonymous], 1990, IEEE Std 610.12-1990, DOI DOI 10.1109/IEEESTD.1990.101064
   ANTLR, 2018, ANTLR 4.7.2
   Basten HJS, 2010, LECT NOTES COMPUT SC, V6255, P76, DOI 10.1007/978-3-642-14808-8_6
   Bendrissou Bachir, 2023, FUZZING 2023: Proceedings of the 2nd International Fuzzing Workshop, P3, DOI 10.1145/3605157.3605170
   BIRD DL, 1983, IBM SYST J, V22, P229, DOI 10.1147/sj.223.0229
   Brabrand C, 2010, SCI COMPUT PROGRAM, V75, P176, DOI 10.1016/j.scico.2009.11.002
   Callaghan D, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P1445, DOI 10.1145/3597926.3598148
   CANTOR DG, 1962, J ACM, V9, P477, DOI 10.1145/321138.321145
   CELENTANO A, 1980, SOFTWARE PRACT EXPER, V10, P897, DOI 10.1002/spe.4380101104
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   CUP, 2014, CUP 0.11b
   Debroy Vidroha, 2011, P 2011 ACM S APPL CO, P1457, DOI [10.1145/1982185.1982498, DOI 10.1145/1982185.1982498]
   Diekmann L., 2020, LIPIcs, V166, DOI [10.4230/LIPIcs.ECOOP.2020.6, DOI 10.4230/LIPICS.ECOOP.2020.6]
   Fischer Bernd, 2012, Software Language Engineering. 4th International Conference, SLE 2011. Revised Selected Papers, P324, DOI 10.1007/978-3-642-28830-2_18
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Ghanbari A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P19, DOI 10.1145/3293882.3330559
   Gopinath R, 2014, PROC INT SYMP SOFTW, P189, DOI 10.1109/ISSRE.2014.40
   HANFORD KV, 1970, IBM SYST J, V9, P242, DOI 10.1147/sj.94.0242
   Havrikov N, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P189, DOI 10.1109/ASE.2019.00027
   Hoffman DM, 2011, SOFTWARE PRACT EXPER, V41, P427, DOI 10.1002/spe.1017
   Holler Christian, 2012, P 21 USENIX C SECUR, P38
   HOMER W, 1989, SOFTWARE PRACT EXPER, V19, P53, DOI 10.1002/spe.4380190106
   Isradisaikul C, 2015, ACM SIGPLAN NOTICES, V50, P555, DOI [10.1145/2813885.2737961, 10.1145/2737924.2737961]
   Jones J.A., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P273
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiers B., 2016, ANTLR4 grammar for SQLite 3.8.x
   Lammel R., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P201
   Lämmel R, 2006, LECT NOTES COMPUT SC, V3964, P19
   Le TDB, 2013, PROC IEEE INT CONF S, P380, DOI 10.1109/ICSM.2013.52
   Malloy Brian A., 2001, 1 ACIS ANN INT C COM
   MAURER PM, 1992, SOFTWARE PRACT EXPER, V22, P223, DOI 10.1002/spe.4380220303
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Cardona PAN, 2015, CUAD ACT, P154
   OCHIAI AKIRA, 1957, BULL JAPANESE SOC SCI FISH, V22, P526
   Payne A. J., 1978, SIGPLAN Notices, V13, P59, DOI 10.1145/953428.953435
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
   Raselimo Moeketsi, 2021, SLE 2021: Proceedings of the 14th ACM SIGPLAN International Conference on Software Language Engineering, P126, DOI 10.1145/3486608.3486910
   Raselimo M, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P15, DOI 10.1145/3357766.3359538
   Raselimo M, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P83, DOI 10.1145/3357766.3359542
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Ruderman Jesse, 2009, CSS grammar fuzzer
   Ruderman Jesse, 2007, Introducing Jsfunfuzz
   Schmitz S, 2007, LECT NOTES COMPUT SC, V4596, P692
   Schmitz S, 2008, ELECTRON NOTES THEOR, V203, P69, DOI 10.1016/j.entcs.2008.03.045
   Schroer Friedrich Wilhelm, 2001, AMBER, an ambiguity checker for context-free grammars
   Slutz D., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P618
   Steimann F., 2013, P 2013 INT S SOFTW T, P314
   Stijlaart M, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P43, DOI 10.1145/3136014.3136035
   van Heerden P, 2020, PROCEEDINGS OF THE 13TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, SLE 2020, P253, DOI 10.1145/3426425.3426946
   Wen W., 2011, P 23 INT C SOFTW ENG, P213
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Xiaozhen Xue, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P113, DOI 10.1109/ESEM.2013.22
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xu XF, 2011, INT J SOFTW ENG KNOW, V21, P803, DOI 10.1142/S0218194011005505
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Yoshikawa T, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P20, DOI 10.1109/QSIC.2003.1319081
   Zakari A, 2020, INFORM SOFTWARE TECH, V124, DOI 10.1016/j.infsof.2020.106312
   Zelenov SV, 2005, PROGRAM COMPUT SOFT+, V31, P310, DOI 10.1007/s11086-005-0040-6
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
NR 68
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
AR 112067
DI 10.1016/j.jss.2024.112067
EA MAY 2024
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TW4F9
UT WOS:001244276700001
OA hybrid
DA 2024-08-05
ER

PT J
AU Luo, WL
   Chen, PL
   Wan, H
   Zhong, HZ
   Cai, SW
   Xiao, ZH
AF Luo, Weilin
   Chen, Polong
   Wan, Hai
   Zhong, Hongzhen
   Cai, Shaowei
   Xiao, Zhanhao
TI Goal-conflict identification based on local search and fast
   boundary-condition verification based on incremental satisfiability
   filter
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Goal-conflict identification; Boundary condition; Local search; LTL
   satisfiability checking
ID REQUIREMENTS; ALGORITHMS; FRAMEWORK; KNOWLEDGE; CHECKING
AB Identifying boundary conditions (BCs) is of fundamental importance for goal -conflict analysis. BCs are able to capture particular combinations of circumstances that make some special conflicts, namely goal divergences , in which the goals of the requirement cannot be satisfied as a whole. Unfortunately, existing approaches only handle small-scale cases within a reasonable running time and do not consider how to search more general BCs because of the search space explosion and the high computational cost of verifying BCs. In this paper, we observed that the BCs identified by the state-of-the-art (SOTA) approach share similarities in structure. It inspires us to develop a BC identification approach, named LOGION, based on local search, to better exploit the similarity in structures. Specifically, we utilize the structural similarity of BCs to construct the neighborhood relation of our local search algorithm. Besides, we design strengthening and weakening operators of formulae to capture the semantics of more general BCs in local searching. In order to boost the BC verification, we propose a lasso -based incremental satisfiability filter (LISF) . The primary intuition behind LISF is using trace checking as a light -weight pre -checking, and if it is not successful, to call the satisfiability checking. We conduct extensive experiments to evaluate LOGION, comparing against SOTA approaches. Experimental results show that LOGION produces about 1 order of magnitude more general BCs than the SOTA approaches. It is also shown that LISF significantly boosts the speed, especially for large-scale cases (up to about 1 order of magnitude faster on average).
C1 [Luo, Weilin; Chen, Polong; Wan, Hai; Zhong, Hongzhen] Sun Yat Sen Univ, Sch Comp Sci & Engn, Guangzhou, Peoples R China.
   [Cai, Shaowei] Chinese Acad Sci, Key Lab Syst Software, Beijing, Peoples R China.
   [Cai, Shaowei] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
   [Xiao, Zhanhao] Guangdong Polytech Normal Univ, Sch Comp Sci, Guangzhou, Peoples R China.
C3 Sun Yat Sen University; Chinese Academy of Sciences; Chinese Academy of
   Sciences; Institute of Software, CAS; Guangdong Polytechnic Normal
   University
RP Wan, H (corresponding author), Sun Yat Sen Univ, Sch Comp Sci & Engn, Guangzhou, Peoples R China.; Cai, SW (corresponding author), Chinese Acad Sci, Key Lab Syst Software, Beijing, Peoples R China.; Cai, SW (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
EM luowlin5@mail.sysu.edu.cn; chenplong@mail2.sysu.edu.cn;
   wanhai@mail.sysu.edu.cn; zhonghzh5@mail2.sysu.edu.cn; caisw@ios.ac.cn;
   xiaozhanhao@gpnu.edu.cn
FU National Natural Science Foundation of China [62276284, 61976232,
   51978675, 61906216]; Guangdong Basic and Applied Basic Research
   Foundation [2023A1515011 470, 2022A1515011355, 2022A1515012429];
   Guangzhou Science and Technology Project [202201011699, 2024A04J4676];
   Guizhou Provincial Science and Technology Projects [2022-259];
   Humanities and Social Science Research Project of Ministry of Education
   [18YJCZH006]; Fundamental Research Funds for the Central Universities,
   Sun Yat-sen University [23ptpy31]
FX We thank Jianwen Li from East China Normal University for discussion on
   the paper and anonymous referees for helpful comments. This paper was
   supported by the National Natural Science Foundation of China (No.
   62276284, 61976232, 51978675 and 61906216) , Guangdong Basic and Applied
   Basic Research Foundation (No. 2023A1515011 470, 2022A1515011355 and
   2022A1515012429) , Guangzhou Science and Technology Project (No.
   202201011699 and 2024A04J4676) , Guizhou Provincial Science and
   Technology Projects (No. 2022-259) , Humanities and Social Science
   Research Project of Ministry of Education (18YJCZH006) , as well as
   Fundamental Research Funds for the Central Universities, Sun Yat-sen
   University (No. 23ptpy31) .
CR Alrajeh D, 2009, PROC INT CONF SOFTW, P265, DOI 10.1109/ICSE.2009.5070527
   [Anonymous], 2009, Requirements Engineering: From System Goals to UML Models to Software
   Bloem R, 2007, DES AUT TEST EUROPE, P1188
   Cavada R, 2014, LECT NOTES COMPUT SC, V8559, P334, DOI 10.1007/978-3-319-08867-9_22
   De Beukelaer H, 2017, SOFTWARE PRACT EXPER, V47, P921, DOI 10.1002/spe.2459
   Degiovanni R, 2018, IEEE INT CONF AUTOM, P520, DOI 10.1145/3238147.3238220
   Degiovanni R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1125, DOI 10.1145/3180155.3180261
   Degiovanni R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P129, DOI 10.1145/2568225.2568323
   Degiovanni R, 2016, IEEE INT CONF AUTOM, P507, DOI 10.1145/2970276.2970349
   Ellen Christian, 2014, Formal Methods for Industrial Critical Systems. 19th International Conference, FMICS 2014. Proceedings: LNCS 8718, P155, DOI 10.1007/978-3-319-10702-8_11
   Enderton H., 2001, A Mathematical Introduction to Logic
   Ernst Neil A., 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P382, DOI 10.1007/978-3-642-31095-9_25
   Fahmideh M, 2018, J SYST SOFTWARE, V138, P124, DOI 10.1016/j.jss.2017.12.011
   Felfernig A, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P791
   Fisman D, 2009, LECT NOTES COMPUT SC, V5394, P7
   Giannakopoulou D, 2002, LECT NOTES COMPUT SC, V2529, P308
   GLOVER F, 1986, COMPUT OPER RES, V13, P533, DOI 10.1016/0305-0548(86)90048-1
   HANSEN P, 1990, COMPUTING, V44, P279, DOI 10.1007/BF02241270
   Harel D, 2005, LECT NOTES COMPUT SC, V3393, P309
   Hausmann JH, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P105, DOI 10.1109/ICSE.2002.1007960
   Herzig S.J., 2014, Proc. CIRP, V21, P52
   Hoos H H, 2004, Stochastic Local Search: Foundations and Applications
   Jianwen Li, 2015, Hardware and Software: Verification and Testing. 11th International Haifa Verification Conference, HVC 2015. Proceedings: LNCS 9434, P209, DOI 10.1007/978-3-319-26287-1_13
   Kamalrudin M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P531, DOI 10.1145/1985793.1985866
   Kamalrudin M, 2009, IEEE INT CONF AUTOM, P693, DOI 10.1109/ASE.2009.38
   KRAMER J, 1983, IEE PROC-E, V130, P1, DOI 10.1049/ip-e.1983.0001
   Li JW, 2019, FORM METHOD SYST DES, V54, P164, DOI 10.1007/s10703-018-00326-5
   Ltd A, 1999, AMBA specification (Rev. 2)
   Luo WL, 2021, PROC INT CONF SOFTW, P1473, DOI 10.1109/ICSE43902.2021.00132
   Markey N, 2003, LECT NOTES COMPUT SC, V2761, P251
   Maté A, 2014, J SYST SOFTWARE, V88, P102, DOI 10.1016/j.jss.2013.10.011
   Murukannaiah PK, 2015, INT REQUIR ENG CONF, P156, DOI 10.1109/RE.2015.7320418
   Nuseibeh B., 1999, Australas. J. Inf. Syst., V7, P118
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Rico-Juan JR, 2003, PATTERN RECOGN LETT, V24, P1417, DOI 10.1016/S0167-8655(02)00382-3
   SISTLA AP, 1985, J ACM, V32, P733, DOI 10.1145/3828.3837
   Nguyen TH, 2014, SOFTWARE QUAL J, V22, P87, DOI 10.1007/s11219-013-9202-6
   van Lamsweerde A, 1998, PROC INT CONF SOFTW, P53, DOI 10.1109/ICSE.1998.671102
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   ZHANG KZ, 1989, SIAM J COMPUT, V18, P1245, DOI 10.1137/0218082
   Zhong HZ, 2020, ASIA PAC SOFWR ENG, P286, DOI 10.1109/APSEC51365.2020.00037
NR 41
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112036
DI 10.1016/j.jss.2024.112036
EA APR 2024
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SN1I4
UT WOS:001235035800001
DA 2024-08-05
ER

PT J
AU Rossouw, C
   Fischer, B
AF Rossouw, Christoff
   Fischer, Bernd
TI Grammar-based test suite construction using coverage-directed algorithms
   over LR-graphs
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software testing and debugging; Grammars and context-free languages;
   Test case generation; Push-down automata
AB In grammar -based testing, the test suites that drive the system under test are typically constructed from a given context -free grammar through a set of derivations that jointly satisfy some coverage criterion. In this paper, we describe and evaluate a new algorithm that instead constructs test suites from a set of valid paths that cover all edges in a labeled directed graph corresponding to an LR-automaton that accepts the language of the grammar. Vertices in this graph correspond to states in the LR-automaton; two vertices are connected by an edge iff the top of the LR-automaton's stack can change from one state to the other, either by shifting a terminal or non -terminal symbol (push edges), or by reducing with a grammar rule (pop edges). The algorithm constructs a unique reduction path for each pop edge in the graph. These reduction paths are recursively embedded into each other, and any unresolved non -terminal push edges are substituted by shortest derivations for the non -terminal symbol. The algorithm can work with different types of LR-automata, including LR(0)- and LR(1)automata, and can successfully generate a test suite from an LR-graph even if the underlying LR-automaton construction leads to shift/reduce or reduce/reduce conflicts. The algorithm only constructs valid paths over the LR-graphs that correspond to sentences in the language and thus generates only positive tests. We therefore also describe mutations to the positive paths that are guaranteed to generate negative tests without needing any further verification by an oracle. Our algorithm is substantially more efficient than an earlier algorithm that explores LR-graphs with two consecutive breadth -first graph traversals and our experimental evaluation shows that it scales to large production -quality grammars. It is robust against random choices made to resolve ambiguity in the construction of the tests, while the code coverage of the different test suite variants is relatively uniform. Finally, our evaluation shows that the negative test suites constructed by path mutation identify more faults in a set of student grammars than those constructed by rule mutation.
C1 [Rossouw, Christoff; Fischer, Bernd] Stellenbosch Univ, Div Comp Sci, Stellenbosch, South Africa.
C3 Stellenbosch University
RP Fischer, B (corresponding author), Stellenbosch Univ, Div Comp Sci, Stellenbosch, South Africa.
EM 20723806@sun.ac.za; bfischer@sun.ac.za
FU National Research Foundation of South Africa (NRF) [113364,
   SRUG2204234463]; Stellenbosch University
FX <STRONG> </STRONG>This work was partially supported by the National
   Research Foundation of South Africa (NRF) , grant numbers 113364 and
   SRUG2204234463, and a PSP postgraduate bursary from Stellenbosch
   University.
CR Aho A.V., 2006, Compilers: Principles, Techniques, and Tools, VSecond
   ANTLR, 2021, ANTLR grammar repo
   Atlidakis V, 2020, Arxiv, DOI arXiv:2005.11498
   DEREMER FL, 1971, COMMUN ACM, V14, P453, DOI 10.1145/362619.362625
   Fischer Bernd, 2012, Software Language Engineering. 4th International Conference, SLE 2011. Revised Selected Papers, P324, DOI 10.1007/978-3-642-28830-2_18
   GCCGo, 2021, GCCGo
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Graham-Cumming J., 2017, Incident report on memory leak caused by Cloudflare parser bug
   Guo HF, 2015, SOFTWARE PRACT EXPER, V45, P1519, DOI 10.1002/spe.2278
   Harm J., 2000, Informatica (Slovenia), V24
   HARRIS LA, 1987, ACTA INFORM, V24, P191, DOI 10.1007/BF00264364
   Havrikov N, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P189, DOI 10.1109/ASE.2019.00027
   Héam PC, 2015, IEEE ICST WORKSHOP
   Johnson S.C., 1975, YACC
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   Koroglu Y, 2019, INT WORKSH AUTOMAT, P28, DOI 10.1109/AST.2019.00010
   Lammel R., 2001, Fundamental Approaches to Software Engineering. 4th International Conference, FASE 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2029), P201
   Lämmel R, 2006, LECT NOTES COMPUT SC, V3964, P19
   Livinskii V, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428264
   OCHIAI AKIRA, 1957, BULL JAPANESE SOC SCI FISH, V22, P526
   Offutt J., 2006, 2 WORKSH MUT AN ISSR, P12
   Pottier F, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P88, DOI 10.1145/2892208.2892224
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
   Raselimo Moeketsi, 2021, SLE 2021: Proceedings of the 14th ACM SIGPLAN International Conference on Software Language Engineering, P126, DOI 10.1145/3486608.3486910
   Raselimo M, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P15, DOI 10.1145/3357766.3359538
   Raselimo M, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P83, DOI 10.1145/3357766.3359542
   Rossouw Christoff, 2021, SLE 2021: Proceedings of the 14th ACM SIGPLAN International Conference on Software Language Engineering, P143, DOI 10.1145/3486608.3486902
   Rossouw C, 2020, PROCEEDINGS OF THE 13TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, SLE 2020, P133, DOI 10.1145/3426425.3426938
   Smith P., 2020, Hyacc
   Soremekun E.O., 2021, SOFTWARE ENG 2021 FA, VP-310, P97, DOI [10.18420/SE2021_36, DOI 10.18420/SE2021_36]
   SQLite, 2021, Lemon
   SQLite, 2021, Sqlite
   Srivastava P, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P244, DOI 10.1145/3460319.3464814
   Tomita M., 1985, P 9 INT JOINT C ART, P756
   van Heerden P, 2020, PROCEEDINGS OF THE 13TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, SLE 2020, P253, DOI 10.1145/3426425.3426946
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Zelenov S, 2006, LECT NOTES COMPUT SC, V3997, P187
NR 37
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112068
DI 10.1016/j.jss.2024.112068
EA MAY 2024
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TD1D8
UT WOS:001239222700001
OA hybrid
DA 2024-08-05
ER

PT J
AU Fucci, D
   Alégroth, E
   Felderer, M
   Johannesson, C
AF Fucci, Davide
   Alegroth, Emil
   Felderer, Michael
   Johannesson, Christoffer
TI Evaluating software security maturity using OWASP SAMM: Different
   approaches and stakeholders perceptions
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE OWASP SAMM; Industry-academia collaboration; Software security
AB Background: Recent years have seen a surge in cyber-attacks, which can be prevented or mitigated using software security activities. OWASP SAMM is a maturity model providing a versatile way for companies to assess their security posture and plan for improvements. Objective: We perform an initial SAMM assessment in collaboration with a company in the financial domain. Our objective is to assess a holistic inventory of the company security -related activities, focusing on how different roles perform the assessment and how they perceive the instrument used in the process. Methodology: We perform a case study to collect data using SAMM in a lightweight and novel manner through assessment using an online survey with 17 participants and a focus group with seven participants. Results: We show that different roles perceive maturity differently and that the two assessments deviate only for specific practices making the lightweight approach a viable and efficient solution in industrial practice. Our results indicate that the questions included in the SAMM assessment tool are answered easily and confidently across most roles. Discussion: Our results suggest that companies can productively use a lightweight SAMM assessment. We provide nine lessons learned for guiding industrial practitioners in the evaluation of their current security posture as well as for academics wanting to utilize SAMM as a research tool in industrial settings. Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board.
C1 [Fucci, Davide; Alegroth, Emil; Felderer, Michael] Blekinge Inst Technol, Karlskrona, Sweden.
   [Felderer, Michael] German Aerosp Ctr DLR, inst Software Technol, Cologne, Germany.
   [Felderer, Michael] Univ Cologne, Cologne, Germany.
   [Johannesson, Christoffer] Ericsson, Karlskrona, Sweden.
C3 Blekinge Institute Technology; Helmholtz Association; German Aerospace
   Centre (DLR); University of Cologne; Ericsson
RP Fucci, D (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM davide.fucci@bth.se; emil.alegroth@bth.se; micheal.felderer@bth.se;
   christoffer.johannesson@ericsson.com
RI Fucci, Davide/C-1463-2015
OI Fucci, Davide/0000-0002-0679-4361
FU KKS foundation through the S.E.R.T. Research Profile project at Blekinge
   Institute of Technology
FX This work was supported by the KKS foundation through the S.E.R.T.
   Research Profile project at Blekinge Institute of Technology.
CR Assal H, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P281
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   De Win B, 2009, INFORM SOFTWARE TECH, V51, P1152, DOI 10.1016/j.infsof.2008.01.010
   Geer D, 2010, COMPUTER, V43, P12, DOI 10.1109/MC.2010.159
   Jaatun MG, 2015, LECT NOTES COMPUT SC, V9290, P120, DOI 10.1007/978-3-319-23318-5_7
   Kassou M., 2012, 2012 International Conference on Multimedia Computing and Systems (ICMCS), P912, DOI 10.1109/ICMCS.2012.6320279
   Lima MVM, 2017, IEEE SYS MAN CYBERN, P1196, DOI 10.1109/SMC.2017.8122775
   McGraw G, 2004, IEEE SECUR PRIV, V2, P80, DOI 10.1109/MSECP.2004.1281254
   Ramirez A, 2020, 2020 13TH CMI CONFERENCE ON CYBERSECURITY AND PRIVACY (CMI) - DIGITAL TRANSFORMATION - POTENTIALS AND CHALLENGES(51275), P7, DOI 10.1109/CMI51275.2020.9322704
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Such JM, 2016, COMPUT SECUR, V60, P117, DOI 10.1016/j.cose.2016.03.009
   Tashi I, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P756, DOI 10.1109/ARES.2009.28
   Teodoro N., 2011, 2011 International Conference on Information Society (i-Society), P457
   Weir C, 2022, IEEE SECUR PRIV, V20, P8, DOI 10.1109/MSEC.2022.3150238
   Weir C, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1326, DOI [10.1145/3468264.3473926, 10.1145/34682643473926]
   Wen SF, 2017, PROC CONF OPEN INNOV, P364, DOI 10.23919/FRUCT.2017.8250205
NR 16
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 1121062
DI 10.1016/j.jss.2024.112062
EA MAY 2024
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SY0H5
UT WOS:001237888500001
OA hybrid
DA 2024-08-05
ER

PT J
AU Romero-Organvidez, D
   Horcas, JM
   Galindo, JA
   Benavides, D
AF Romero-Organvidez, David
   Horcas, Jose-Miguel
   Galindo, Jose A.
   Benavides, David
TI Data visualization guidance using a software product line approach
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Effective communication; Graphs; Tables; Software product line;
   Variability; Visualization
ID DESIGN; MODEL; VARIABILITY
AB Data visualization aims to convey quantitative and qualitative information effectively by determining which techniques and visualizations are most appropriate for different situations and why. Various software solutions can produce numerous visualizations of the same data set. However, data visualization encompasses a wide range of visual configurations that depend on factors such as the type of data being displayed, the different displays (e.g., scatter plots, line graphs, and pie charts), the visual components used to represent the data (e.g., lines, dots, and bars), and the specific visual attributes of those components (e.g., color, shape, size, and length). A similar problem arises when designing data tables, where the dimensionality of the data and its complexity influence the choice of the most appropriate structure (e.g., unidirectional, bidirectional). Often, this broad spectrum of configurations requires a visualization expert who knows which techniques are best for which type of data source and what is to be conveyed. Typically, researchers and developers lack knowledge of data visualization best practices and must learn the design principles that enable effective communication and the technical details of the specific software tool they use to generate visualizations. This paper proposes a software product line approach to model and realize the variability of the visualization design process, using feature models to encode knowledge about design best practices in graphs and charts. Our approach involves solving visualization design variability through a stepwise configuration process and evaluating the proposal for a specific software visualization tool. Our solution facilitates effective communication of quantitative results by helping researchers and developers select and generate the most effective visualizations for each case. This approach opens up new opportunities for research at the intersection of data visualization and variability.
C1 [Romero-Organvidez, David; Galindo, Jose A.; Benavides, David] Univ Seville, Dept Comp Languages & Syst, Ave Reina Mercedes, Seville 41012, Spain.
   [Horcas, Jose-Miguel] Univ Malaga, ITIS Software, Malaga, Spain.
   [Romero-Organvidez, David; Galindo, Jose A.; Benavides, David] Univ Seville, Res Inst I3US, Seville, Spain.
C3 University of Sevilla; Universidad de Malaga; University of Sevilla
RP Romero-Organvidez, D (corresponding author), Univ Seville, Dept Comp Languages & Syst, Ave Reina Mercedes, Seville 41012, Spain.; Romero-Organvidez, D (corresponding author), Univ Seville, Res Inst I3US, Seville, Spain.
EM drorganvidez@us.es; horcas@uma.es; jagalindo@us.es; benavides@us.es
RI Horcas Aguilera, Jose Miguel/R-3564-2018; Galindo, Jose A/F-7232-2010;
   Benavides, David/K-2791-2014
OI Horcas Aguilera, Jose Miguel/0000-0002-7771-0575; Galindo, Jose
   A/0000-0001-9293-9784; Benavides, David/0000-0002-8449-3273; Romero
   Organvidez, David/0000-0002-8228-3483
FU FEDER/Ministry of Science, Innovation and Universities/Junta de
   Andalucia/State Research Agen-cy/CDTI [PID2022-138486OB-I00]; TASOVA
   PLUS research network [RED2022-134337-T]; MIDAS [IDI-20230256]; FEDER
   funds [PREP2022-000335, IRIS PID2021-122812OB-I00]; MICIN/AEI; FSE+
   Thanks to Mario Perez Montoro (Universitat de Barcelona); Jorge Garcia
   Gutierrez (Universidad de Sevilla);  [LEIA UMA18-FEDERJA-157];  [DAEMON
   H2020-101017109]
FX This work was partially supported by FEDER/Ministry of Science,
   Innovation and Universities/Junta de Andalucia/State Research
   Agen-cy/CDTI with the following grants: Data-pl (PID2022-138486OB-I00) ,
   TASOVA PLUS research network (RED2022-134337-T) and MIDAS (IDI-20230256)
   . Also, the work from the University of Malaga is supported by the
   projects IRIS PID2021-122812OB-I00 (co-financed by FEDER funds) , LEIA
   UMA18-FEDERJA-157, and DAEMON H2020-101017109. David Romero-Organvidez
   is supported by PREP2022-000335, financed by
   MICIN/AEI/10.13039/501100011033 and by FSE+ Thanks to Mario Perez
   Montoro (Universitat de Barcelona) and Jorge Garcia Gutierrez
   (Universidad de Sevilla) for their contribution to the evaluation of
   this article.
CR Aghababaeyan Z, 2022, Arxiv, DOI arXiv:2112.12591
   Alférez M, 2019, SOFTWARE QUAL J, V27, P307, DOI 10.1007/s11219-017-9400-8
   Apel S., 2013, Feature-Oriented Software Product Lines, P3, DOI DOI 10.1007/978-3-642-37521-7
   Asadi M, 2016, EMPIR SOFTW ENG, V21, P1706, DOI 10.1007/s10664-014-9353-5
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D., 2024, J. Syst. Softw., DOI [10.2139/ssrn.4764657, DOI 10.2139/SSRN.4764657]
   Bertin Jacques, 1983, Semiology of graphics
   Bigelow A, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL WORKING CONFERENCE ON ADVANCED VISUAL INTERFACES, AVI 2014, P17, DOI 10.1145/2598153.2598175
   Borkin MA, 2013, IEEE T VIS COMPUT GR, V19, P2306, DOI 10.1109/TVCG.2013.234
   Bostock M, 2011, IEEE T VIS COMPUT GR, V17, P2301, DOI 10.1109/TVCG.2011.185
   Braga Jaqueline, 2020, InfoDesign-Revista Brasileira de Design da Informacao, V17, P145, DOI [10.51358/id.v17i2., DOI 10.51358/ID.V17I2]
   Brehmer M., 2014, PROC WORKSHOP TIME E, P147, DOI [10.1145/2669557.2669564, DOI 10.1145/2669557.2669564]
   Bresciani S, 2015, SAGE OPEN, V5, DOI 10.1177/2158244015611451
   Cairo A., 2012, The Functional Art: An Introduction to Information Graphics and Visualization
   Chakraborty M., 2021, Monitoring Cloud-Native Applications, P187, DOI [DOI 10.1007/978-1-4842-6888-96, 10.1007/978-1-4842-6888-9_6]
   Chi E.H., 2002, HUM COM INT, V1
   CLEVELAND WS, 1985, SCIENCE, V229, P828, DOI 10.1126/science.229.4716.828
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Diehl Stephan, 2007, Software visualization: visualizing the structure, behaviour, software
   Dong ES, 2020, LANCET INFECT DIS, V20, P533, DOI 10.1016/S1473-3099(20)30120-1
   Evergreen StephanieD.H., 2019, EFFECTIVE DATA VISUA, V2nd
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Few Stephen, 2012, SHOW ME NUMBERS DESI, Vsecond
   Forsell Camilla, 2012, 4 WORKSH TIM ERR NOV, DOI [10.1145/2442576.2442592, DOI 10.1145/2442576.2442592]
   Freixa P, 2021, PROF INFORM, V30, DOI 10.3145/epi.2021.jul.01
   Friendly M., 2001, Milestones in the history of thematic cartography, statistical graphics, and data visualization
   Furche Tim, 2016, EDBT, V16, P473
   Galindo Jose A., 2023, SPLC '23: Proceedings of the 27th ACM International Systems and Software Product Line Conference - Volume B, P16, DOI 10.1145/3579028.3609008
   Galindo Jose A., 2020, SPLC '20: Proceedings of the 24th ACM International Systems and Software Product Line Conference - Volume B on ZZZ, P52, DOI 10.1145/3382026.3425773
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Gordon Ian E., 2004, Theories of Visual Perception
   Hehman E, 2021, ADV METH PRACT PSYCH, V4, DOI 10.1177/25152459211045334
   Heradio R, 2019, PROC INT CONF SOFTW, P843, DOI 10.1109/ICSE.2019.00091
   Horcas Jose-Miguel, 2022, SPLC '22: Proceedings of the 26th ACM International Systems and Software Product Line Conference, P55, DOI 10.1145/3546932.3546993
   Hunter JD, 2007, COMPUT SCI ENG, V9, P90, DOI 10.1109/MCSE.2007.55
   Illescas S, 2016, 2016 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION, P46, DOI 10.1109/VISSOFT.2016.16
   Isenberg T, 2013, IEEE T VIS COMPUT GR, V19, P2818, DOI 10.1109/TVCG.2013.126
   Jacobson Ivar, 1997, Software Reuse: Architecture, Process, and Organization for Business Success
   Joshi Ankush, 2023, J. Eng. Technol. Appl. Phys., V5, P85, DOI [10.33093/jetap.2023.5.2.10, DOI 10.33093/JETAP.2023.5.2.10]
   Kastner C., 2008, SPLC, P303
   Kirk A., 2012, Data Visualization: a successful design process
   Knaflic CN, 2015, STORYTELLING WITH DATA: A DATA VISUALIZATION GUIDE FOR BUSINESS PROFESSIONALS, P1, DOI 10.1002/9781119055259
   Krüger J, 2018, SOFTWARE PRACT EXPER, V48, P402, DOI 10.1002/spe.2525
   Kurzhals K, 2018, COMPUT GRAPH FORUM, V37, P133, DOI 10.1111/cgf.13407
   Lam H, 2012, IEEE T VIS COMPUT GR, V18, P1520, DOI 10.1109/TVCG.2011.279
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Lau A, 2007, IEEE INT CONF INF VI, P87
   Liang X, 2022, IEEE T COMPUT, V71, P1522, DOI 10.1109/TC.2021.3092201
   Lopez-Herrejon RE, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1912
   Martinez J, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P50, DOI 10.1109/VISSOFT.2014.18
   McKenna S, 2014, IEEE T VIS COMPUT GR, V20, P2191, DOI 10.1109/TVCG.2014.2346331
   Meinicke J, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P233, DOI 10.1145/3377813.3381366
   Meinicke Jens, 2017, Mastering Software Variability with FeatureIDE
   Meyer M, 2015, INFORM VISUAL, V14, P234, DOI 10.1177/1473871613510429
   Midway SR, 2020, PATTERNS, V1, DOI 10.1016/j.patter.2020.100141
   Horcas JM, 2023, SOFTW SYST MODEL, V22, P377, DOI 10.1007/s10270-022-01011-2
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Munoz DJ, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P289, DOI 10.1145/3336294.3336297
   Munzner T, 2009, IEEE T VIS COMPUT GR, V15, P921, DOI 10.1109/TVCG.2009.111
   Murray S., 2017, Interactive data visualization for the web: an introduction to designing with D3
   Nestor D, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P175
   Nestor Daren, 2007, 1 WORKSH VAR MOD SOF, P71
   Nguyen VT, 2021, VIS COMPUT IND BIOME, V4, DOI 10.1186/s42492-021-00092-y
   Ouali Sami, 2021, Int. J. Softw. Eng. Appl., V12, P1, DOI [10.5121/ijsea.2021.12101, DOI 10.5121/IJSEA.2021.12101]
   Pleuss Andreas, 2012, International Journal on Software Tools for Technology Transfer, V14, P497, DOI 10.1007/s10009-012-0252-z
   Pohl K., 2005, Software product line engineering: foundations, principles and techniques, DOI [DOI 10.1007/3-540-28901-1, 10.1007/3-540-28901-1]
   Rabiser D, 2018, SOFTW SYST MODEL, V17, P913, DOI 10.1007/s10270-016-0564-7
   Rabiser R, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P189, DOI 10.1145/3336294.3336310
   Reiser MO, 2007, REQUIR ENG, V12, P57, DOI 10.1007/s00766-007-0046-0
   Romero D, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P80, DOI 10.1145/3461002.3473949
   Romero-Organvidez D., 2023, J. Syst. Softw, DOI [10.2139/ssrn.4536607, DOI 10.2139/SSRN.4536607]
   Rosenholtz R, 2007, J VISION, V7, DOI 10.1167/7.2.17
   Schmitt A, 2018, ADV TRANSDISCIPL ENG, V7, P665, DOI 10.3233/978-1-61499-898-3-665
   Schröter R, 2016, PROC INT CONF SOFTW, P667, DOI 10.1145/2884781.2884823
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
   Simmon Robert, 2013, Subtleties of Color
   Sun Y, 2018, J OPHTHALMOL, V2018, DOI 10.1155/2018/1926736
   Sundermann C., 2023, 27 ACM INT SYST SOFT
   Syriani E, 2018, COMPUT LANG SYST STR, V52, P43, DOI 10.1016/j.cl.2017.11.003
   Tantau Till, 2013, J. Graph Algorithms Appl., V17, P495, DOI [10.7155/jgaa.00301, DOI 10.7155/JGAA.00301]
   Telea AlexandruC., 2014, DATA VISUALIZATION P
   The dblp team, 2022, Dblp computer science bibliography
   Todorovic D., 2008, Gestalt principles, V3, P5345, DOI DOI 10.4249/SCHOLARPEDIA.5345
   Trinidad Pablo, 2008, 12 INT C SOFTW PROD, V2, P295
   Tufte E. R., 1985, TLS-TIMES LIT SUPPL, V7, P15
   Urli S, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P76, DOI 10.1109/VISSOFT.2015.7332417
   Vucetic Slavisa, 2023, Open data visualization by using Javascript libraries
   Walny J, 2020, IEEE T VIS COMPUT GR, V26, P12, DOI 10.1109/TVCG.2019.2934538
   Ward Matthew O., 2010, Interactive Data Visualization : foundations, techniques, and applications
   Ware C., 2020, INFORM VISUALIZATION
   Wickham H, 2009, USE R, P1, DOI 10.1007/978-0-387-98141-3
   Wilkinson L, 2005, INFOVIS 05: IEEE SYMPOSIUM ON INFORMATION VISUALIZATION, PROCEEDINGS, P157, DOI 10.1109/INFVIS.2005.1532142
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wong M., 2010, The Wall Street Journal Guide to Information Graphics: The Dos and Don'ts of Presenting Data, Facts, and Figures
   Xiaoyan Bai, 2010, Proceedings of the Sixth International Conference on Signal-Image Technology & Internet-Based Systems (SITIS 2010), P315, DOI 10.1109/SITIS.2010.58
   Yost B, 2006, IEEE T VIS COMPUT GR, V12, P837, DOI 10.1109/TVCG.2006.184
NR 97
TC 1
Z9 1
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112029
DI 10.1016/j.jss.2024.112029
EA APR 2024
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UT0I2
UT WOS:001250186600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Riganelli, O
   Micucci, D
   Mariani, L
AF Riganelli, Oliviero
   Micucci, Daniela
   Mariani, Leonardo
TI Automatic testing of runtime enforcers with Test4Enforcers
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Runtime enforcement; Testing enforcers; Test case generation; Android
   apps
ID DESIGN
AB Users regularly use apps to access services in a range of domains, such as health, productivity, entertainment, and business. The safety and correctness of the runtime behavior of these apps is thus a key concern for users. Indeed, unreliable apps may generate dissatisfaction, frustration and issues to users. Runtime enforcement techniques can be used to implement software enforcers that monitor executions and apply corrective actions when needed, potentially preventing misbehaviors and failures. However, enforcers might be faulty themselves, applying the wrong actions or missing to apply the right actions. To address this problem, this paper presents Test4Enforcers, an approach to automatically test software enforces. Test4Enforcers relies on an enforcement model describing the strategy that shall be applied at runtime to correct misbehaviors. Test4Enforcers first uses the enforcement model to derive a specification of the test cases that shall be executed to validate any software enforcer implemented from the given model. Then, it automatically turns the test specification into a set of concrete test cases that can be executed against apps augmented with the enforcers. We evaluated Test4Enforces with a set of 3,135 faults injected in the enforcers derived from 13 enforcement models. Results show that Test4Enforcers can automatically reveal 64% of the faults, while existing approaches relying on crash detection can only reveal 6% of the faults. Test4Enforcers is also practical since testing an enforcer required 9 min, in the worst case.
C1 [Riganelli, Oliviero; Micucci, Daniela; Mariani, Leonardo] Univ Milano Bicocca, Milan, Italy.
C3 University of Milano-Bicocca
RP Riganelli, O (corresponding author), Univ Milano Bicocca, Milan, Italy.
EM oliviero.riganelli@unimib.it
RI MICUCCI, DANIELA/AAB-6066-2020; Riganelli, Oliviero/AAD-9285-2020
OI MICUCCI, DANIELA/0000-0003-1261-2234; Riganelli,
   Oliviero/0000-0003-2120-2894
CR Alshahwan N, 2018, LECT NOTES COMPUT SC, V11036, P3, DOI 10.1007/978-3-319-99241-9_1
   Android Docs, 2023, UI/Application exerciser monkey
   Android Docs, 2023, Services overview
   Android Docs, 2023, Handling Lifecycles with Lifecycle-Aware Component
   Android Docs, 2023, Fragment lifecycle
   Android Docs, 2023, Camera API-Releasing the camera
   Android Docs, 2023, The activity lifecycle
   Android Docs, 2023, The Android Profiler
   Android Docs, 2023, Camera API
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P135, DOI 10.1007/978-3-319-75632-5_5
   Belli F, 2015, SOFTWARE QUAL J, V23, P423, DOI 10.1007/s11219-014-9242-6
   Bielova N, 2011, INT J INF SECUR, V10, P239, DOI 10.1007/s10207-011-0137-2
   Ceci L., 2023, NUMBER MOBILE APP DO
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Dai YS, 2009, LECT NOTES COMPUT SC, V5931, P45
   Daian P, 2015, LECT NOTES COMPUT SC, V9333, P342, DOI 10.1007/978-3-319-23820-3_24
   Dalal S.R., 1999, P INT C SOFTW ENG
   Dias Neto A. C., 2007, P ACM INT WORKSH EMP, P31
   Dolzhenko E, 2015, INT J INF SECUR, V14, P47, DOI 10.1007/s10207-014-0239-8
   Dorofeeva R, 2005, LECT NOTES COMPUT SC, V3731, P204
   Dorofeeva R, 2010, INFORM SOFTWARE TECH, V52, P1286, DOI 10.1016/j.infsof.2010.07.001
   Falcone Y., 2012, P INT C RUNT VER
   Falcone Y, 2019, LECT NOTES COMPUT SC, V11757, P48, DOI 10.1007/978-3-030-32079-9_4
   Falcone Y, 2010, LECT NOTES COMPUT SC, V6418, P89, DOI 10.1007/978-3-642-16612-9_9
   Falcone Y, 2011, FORM METHOD SYST DES, V38, P223, DOI 10.1007/s10703-011-0114-4
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   GONENC G, 1970, IEEE T COMPUT, VC 19, P551, DOI 10.1109/T-C.1970.222975
   Gurbuz HG, 2018, SOFTWARE QUAL J, V26, P1327, DOI 10.1007/s11219-017-9386-2
   Guzman M, 2020, LECT NOTES COMPUT SC, V12399, P279, DOI 10.1007/978-3-030-60508-7_15
   Hierons RM, 2016, IEEE T COMPUT, V65, P3370, DOI 10.1109/TC.2016.2532869
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Khoury R, 2012, COMPUT SCI REV, V6, P27, DOI 10.1016/j.cosrev.2012.01.001
   Koetsier J., 2020, Forbes
   Konighofer Bettina, 2022, Principles of Systems Design: Essays Dedicated to Thomas A. Henzinger on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (13660), P650, DOI 10.1007/978-3-031-22337-2_31
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Li YC, 2017, PROC IEEE ACM INT C, P23, DOI 10.1109/ICSE-C.2017.8
   Ligatti J., 2005, Int. J. Inf. Secur., V4, P2, DOI [10.1007/s10207-004-0046-8, DOI 10.1007/S10207-004-0046-8]
   Ligatti J, 2009, ACM T INFORM SYST SE, V12, DOI 10.1145/1455526.1455532
   Liu JR, 2016, PROC INT SYMP SOFTW, P342, DOI 10.1109/ISSRE.2016.15
   Liu YP, 2019, EMPIR SOFTW ENG, V24, P3435, DOI 10.1007/s10664-019-09715-8
   Luo G., 1995, P IF WG 6 1 INT WORK
   Luo QZ, 2014, LECT NOTES COMPUT SC, V8734, P285, DOI 10.1007/978-3-319-11164-3_24
   Magalhaes JP, 2015, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2700325
   Mariani L, 2014, SOFTW TEST VERIF REL, V24, P341, DOI 10.1002/stvr.1538
   Memon A, 2013, WORK CONF REVERSE EN, P11, DOI 10.1109/WCRE.2013.6671275
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Pan M., 2020, P INT S SOFTW TEST A
   Peng C, 2022, PROC IEEE INT CONF S, P543, DOI 10.1109/ICSME55016.2022.00074
   Petrenko A., 1996, P IFIP TC6 INT WORKS
   Rasthofer S, 2015, 2014 NINTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES), P40, DOI 10.1109/ARES.2014.13
   Riganelli Oliviero, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P182, DOI 10.1109/SEAMS.2017.9
   Riganelli O., 2018, P INT S LEV APPL FOR
   Riganelli O, 2019, ACM T AUTON ADAP SYS, V14, DOI 10.1145/3368087
   Riganelli O, 2017, LECT NOTES COMPUT SC, V10548, P241, DOI 10.1007/978-3-319-67531-2_15
   Riganelli O, 2016, IEEE INT SYMP SOFTW, P146, DOI 10.1109/ISSREW.2016.50
   Romdhana A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3502868
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   SIDHU DP, 1989, IEEE T SOFTWARE ENG, V15, P413, DOI 10.1109/32.16602
   Sidiroglou S, 2009, ACM SIGPLAN NOTICES, V44, P37, DOI 10.1145/1508284.1508250
   Taylor P., 2023, Forecast number of mobile users worldwide 2020-2015
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   XDA, 2023, Xposed
NR 63
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111949
DI 10.1016/j.jss.2023.111949
EA JAN 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF4E1
UT WOS:001158056600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Port, D
   Taber, B
   Emkani, P
AF Port, Dan
   Taber, Bill
   Emkani, Parisa
TI Investigating effectiveness and compliance to DevOps policies and
   practices for managing productivity and quality variability
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE DevOps; Software process; Software maintenance; Software reliability;
   Software quality; Software productivity
AB The Mission Design and Navigation Software (MDN) Group at the Jet Propulsion Laboratory (JPL) develops and continuously maintains software systems critical for NASA deep space missions. Due to limited resources and tight schedules, there is always the temptation to prioritize productivity over quality. However, such quality and productivity variations may be manageable during development, but they are too risky for operational use when there is a time-critical need for repair or enhancement and high reliability is essential. As a result, our process must be both highly productive and maintain high quality (e.g., reliability, maintainability, usability). Inspired by the "quality is free " paradigm, we have instituted six policies established from DevOps principles and practices specifically to address maintenance risk caused by high variability in quality and productivity concerns we encountered in the development phase from quality-productivity tradeoffs. CMMI level 3 requirements mandate that process improvements are monitored and adjusted to ensure that policies are adhered to, practices are performed, and that they are effective in producing the desired results. This article presents a process improvement investigation as to whether the DevOps practices, as currently implemented, are effective in achieving the expected effects and impacts for managing variability in quality and productivity. Additionally, we investigate practical methods to assure compliance to the six policies to determine if any adjustments to policy or practice are needed. For this investigation we focus on our flagship system MONTE. We have over 15 years of reliable and accurate quality and productivity data for MONTE, a critical system currently in continual operation and maintenance. Time series cross-correlation analyses were used to compare process productivity and quality characteristics before and after the implementation of DevOps. From this, we found strong evidence that: center dot There is a continual maintenance risk due to variability in productivity and quality. center dot The majority of the DevOps policies and practices are being complied with. center dot The policies and practices have been effective in managing this risk.
C1 [Port, Dan] Univ Hawaii Manoa, Shidler Coll Business, Informat Technol Management Dept, Manoa, HI 96822 USA.
   [Taber, Bill] CALTECH, Jet Prop Lab, Mission Design & Nav Sect, Pasadena, CA USA.
   [Emkani, Parisa] Univ Hawaii Manoa, Coll Nat Sci, Informat & Comp Sci Dept, Manoa, HI USA.
C3 University of Hawaii System; University of Hawaii Manoa; California
   Institute of Technology; National Aeronautics & Space Administration
   (NASA); NASA Jet Propulsion Laboratory (JPL); University of Hawaii
   System; University of Hawaii Manoa
RP Port, D (corresponding author), Univ Hawaii Manoa, Shidler Coll Business, Informat Technol Management Dept, Manoa, HI 96822 USA.
EM dport@hawaii.edu
CR Afzal M., 2023, J. Jilin Univ., V42, P20, DOI [10.17605/OSF.IO/6NYPX, DOI 10.17605/OSF.IO/6NYPX]
   Akbar MA, 2022, IEEE ACCESS, V10, P51343, DOI 10.1109/ACCESS.2022.3174094
   Ali N, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2248
   Amaro R, 2023, IEEE T SOFTWARE ENG, V49, P883, DOI 10.1109/TSE.2022.3166626
   Anandya R., 2021, 2021 INT C INF MULT, DOI [10.1109/icimcis53775.2021.9699240, DOI 10.1109/ICIMCIS53775.2021.9699240]
   Arvanitou EM, 2022, IEEE ACCESS, V10, P61585, DOI 10.1109/ACCESS.2022.3171803
   Azad N, 2022, Lecture Notes in Business Information Processing, P260, DOI [10.1007/978-3-031-20706-8_18.CHALLENGES, DOI 10.1007/978-3-031-20706-8_18.CHALLENGES]
   Azad N, 2023, INFORM SOFTWARE TECH, V157, DOI 10.1016/j.infsof.2023.107150
   Basavegowda Ramu V., 2023, Int. J. Comput. Trends Technol., V71, P35, DOI [10.14445/22312803/IJCTT-V71I6P106, DOI 10.14445/22312803/IJCTT-V71I6P106]
   Bluher T., 2023, Proc. Des. Soc., V3, P1475, DOI [10.1017/pds.2023.148, DOI 10.1017/PDS.2023.148]
   Boehm B.W., 1978, Characteristics of Software Quality
   Calvache C, 2022, Period. Eng. Natur. Sci., V10, P221, DOI [10.21533/pen.v10i3.3086.g1167, DOI 10.21533/PEN.V10I3.3086.G1167]
   Crosby P.B., 1980, Quality is free: The art of making quality certain
   Díaz J, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234199
   Evans S, 2018, CEAS SPACE J, V10, P79, DOI 10.1007/s12567-017-0171-7
   Faaiz SM, 2023, 27TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, EASE 2023, P430, DOI 10.1145/3593434.3594240
   Faustino Joao, 2023, International Journal of Services and Operations Management, P390, DOI 10.1504/IJSOM.2023.129464
   Faustino J, 2022, SOFTWARE PRACT EXPER, V52, P1905, DOI 10.1002/spe.3096
   Fenton N.E., 1997, Software Metrics: A Rigorous and Practical Approach, V2, DOI [10.1007/978-1-4303-6263-9, DOI 10.1007/978-1-4303-6263-9]
   Gokarna M, 2021, DevOps Phases Across Software Development Lifecycle, DOI [10.36227/techrxiv.13207796.v2, DOI 10.36227/TECHRXIV.13207796.V2]
   Grande R, 2024, COMPUT STAND INTER, V87, DOI 10.1016/j.csi.2023.103767
   Grunewald E., 2023, Hawk: DevOps-driven Transparency and Accountability in Cloud Native Systems
   Guerrero J.M., 2020, A Systematic Mapping Study about DevOps
   Hardian B, 2021, ACM International Conference Proceeding Series, DOI [10.1145/3512716.3512718, DOI 10.1145/3512716.3512718]
   Hernández R, 2023, REQUIR ENG, V28, P317, DOI 10.1007/s00766-023-00396-w
   Holt C.C., 1957, Forecasting Seasonals and Trends by Exponentially Weighted Moving Averages, V52
   Humphrey W., 1995, A discipline for software engineering
   Jayakody J.A.V.M.K, 2021, 2021 INT RES C SMART, DOI [10.1109/scse53661.2021.9568348, DOI 10.1109/SCSE53661.2021.9568348]
   Jeffries R, 2009, Quality-Speed Tradeoff-You're Kidding Yourself
   Jones C, 1991, Software Measurement and Control
   Khan M.O., 2020, INDIAN J SCI TECHNOL, V13, P552, DOI [DOI 10.17485/ijst/2020/v13i05/148983, 10.17485/ijst/2020/v13i5/148983]
   Khan MS, 2022, IEEE ACCESS, V10, P14339, DOI 10.1109/ACCESS.2022.3145970
   KnowledgeHut, 2022, History of DevOps
   Krey M., 2022, 55 HAW INT C SYST SC, P7297, DOI 10.24251/HICSS.2022.877
   Luz WP, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.083
   Lwakatare L.E, 2016, ICSEA, V104
   Lwakatare LE, 2019, INFORM SOFTWARE TECH, V114, P217, DOI 10.1016/j.infsof.2019.06.010
   Mamdouh A, 2019, I-Manager's J. Softw. Eng., V14, P21, DOI [10.26634/jse.14.1.16519, DOI 10.26634/JSE.14.1.16519]
   Maroukian K, 2020, Leading DevOps practice and principle adoption, P41, DOI [10.5121/csit.2020.100504, DOI 10.5121/CSIT.2020.100504]
   Marques P, 2023, Arxiv, DOI arXiv:2302.01053
   Mishra A, 2020, COMPUT SCI REV, V38, DOI 10.1016/j.cosrev.2020.100308
   Mohammad SikenderMohsienuddin., 2018, International Journal of Creative Research Thoughts
   Morales JA, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234188
   Muñoz M, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2342
   Narang P, 2022, ENG TECHNOL APPL SCI, V12, P9726, DOI 10.48084/etasr.5315
   Ndayizigamiye P., 2023, Digital-forDevelopment: Enabling Transformation, Inclusion and Sustainability Through ICTs. IDIA 2022, Communications in Computer and Information Science, V1774, DOI [10.1007/978-3-031-28472-4_5, DOI 10.1007/978-3-031-28472-4_5]
   Noorani NM, 2022, AXIOMS, V11, DOI 10.3390/axioms11100498
   Octopus Deploy, 2022, What is DevOps?
   Offerman T, 2022, INT ICE CONF ENG, DOI 10.1109/ICE/ITMC-IAMOT55089.2022.10033313
   Pando B, 2022, PROGRAM COMPUT SOFT+, V48, P658, DOI 10.1134/S0361768822080175
   Pardo C., 2023, Period. Eng. Nat. Sci., V11, P207, DOI [10.21533/pen.v11i2.3474, DOI 10.21533/PEN.V11I2.3474]
   Pedra M.L., 2021, arXiv
   Petrovic N., 2022, SAUM 2022, P35
   Port D, 2023, Softw Engg in Pract, P211, DOI 10.1109/ICSE-SEIP58684.2023.00025
   Rafi S, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2323
   Rutz M., 2019, DevOps: a systematic literature review
   SAID SE, 1984, BIOMETRIKA, V71, P599
   Senapathi M, 2018, P 22 INT C EVALUATIO, DOI [10.1145/3210459.3210465, DOI 10.1145/3210459.3210465]
   Shumway R. H., 2017, TIME SERIES ANAL ITS
   Sravan S.S., 2023, 2023 9 INT C ADV COM, DOI [10.1109/icaccs57279.2023.10113021, DOI 10.1109/ICACCS57279.2023.10113021]
   Srivastav S., 2023, Int. J. Res. Publ. Rev., V4, P2050, DOI [10.55248/gengpi.4.623.45947, DOI 10.55248/GENGPI.4.623.45947]
   Taber B, 2014, 8 INT S EMP SOFTW EN
   Tenzin S., 2022, IARJSET, V9, DOI [10.17148/iarjset.2022.9919, DOI 10.17148/IARJSET.2022.9919]
   Trigo A, 2022, COGENT ENG, V9, DOI 10.1080/23311916.2022.2083474
   vonStorch H, 1995, ANALYSIS OF CLIMATE VARIABILITY, P11
   Wahaballa A, 2015, INT CONF SOFTW ENG, P211, DOI 10.1109/ICSESS.2015.7339039
   Yarlagadda R.T., 2019, Int. J. Creat. Res. Thoughts, VVII, P358
   Zarour M, 2020, JORDAN J COMPUT INFO, V6, P234, DOI 10.5455/jjcit.71-1580581874
   Zulkarnain J., 2022, Int. J. Res. Appl. Technol., V2, P184, DOI [10.34010/injuratech.v2i2.8364, DOI 10.34010/INJURATECH.V2I2.8364]
NR 70
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112030
DI 10.1016/j.jss.2024.112030
EA APR 2024
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RP3X7
UT WOS:001228837300001
DA 2024-08-05
ER

PT J
AU Meixner, K
   Feichtinger, K
   Fadhlillah, HS
   Greiner, S
   Marcher, H
   Rabiser, R
   Biffl, S
AF Meixner, Kristof
   Feichtinger, Kevin
   Fadhlillah, Hafiyyan Sayyid
   Greiner, Sandra
   Marcher, Hannes
   Rabiser, Rick
   Biffl, Stefan
TI Variability modeling of products, processes, and resources in
   cyber-physical production systems engineering
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Variability modeling; Feature modeling; Decision modeling; Production
   process variability; Cyber-physical production system
ID LINES
AB Cyber-Physical Production Systems (CPPSs), such as automated car manufacturing plants, execute a configurable sequence of production steps to manufacture products from a product portfolio. In CPPS engineering, domain experts start with manually determining feasible production step sequences and resources based on implicit knowledge. This process is hard to reproduce and highly inefficient. In this paper, we present the Extended Iterative Process Sequence Exploration (eIPSE) approach to derive variability models for products, processes, and resources from a domain-specific description. To automate the integrated exploration and configuration process for a CPPS, we provide a toolchain which automatically reduces the configuration space and allows to generate CPPS artifacts, such as control code for resources. We evaluate the approach with four real-world use cases, including the generation of control code artifacts, and an observational user study to collect feedback from engineers with different backgrounds. The results confirm the usefulness of the eIPSE approach and accompanying prototype to straightforwardly configure a desired CPPS.
C1 [Meixner, Kristof; Marcher, Hannes] TU Wien, Christian Doppler Lab SQI, Favoritenstr 9-11, A-1040 Vienna, Austria.
   [Meixner, Kristof; Biffl, Stefan] TU Wien, Informat Syst Engn, Favoritenstr 9-11, A-1040 Vienna, Austria.
   [Feichtinger, Kevin] Karlsruhe Inst Technol, KASTEL Dependabil Software intens Syst, CRC 1608,Fasanengarten 5, D-76131 Karlsruhe, Germany.
   [Fadhlillah, Hafiyyan Sayyid] Johannes Kepler Univ Linz, Christian Doppler Lab VaS, Altenberger Str 69, A-4040 Linz, Austria.
   [Greiner, Sandra] Univ Bern, Inst Comp Sci, Software Engn Grp, Neubruckstr 10, CH-3012 Bern, Switzerland.
   [Rabiser, Rick] Johannes Kepler Univ Linz, LIT CPS Lab, Altenberger Str 69, A-4040 Linz, Austria.
C3 Technische Universitat Wien; Technische Universitat Wien; Helmholtz
   Association; Karlsruhe Institute of Technology; Johannes Kepler
   University Linz; University of Bern; Johannes Kepler University Linz
RP Meixner, K (corresponding author), TU Wien, Christian Doppler Lab SQI, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM kristof.meixner@tuwien.ac.at; kevin.feichtinger@kit.edu;
   hafiyyan.fadhlillah@jku.at; sandra.greiner@unibe.ch;
   hannes.marcher@tuwien.ac.at; rick.rabiser@jku.at;
   stefan.biffl@tuwien.ac.at
RI ; Rabiser, Rick/B-8673-2017
OI Greiner, Sandra/0000-0001-8950-0092; Meixner,
   Kristof/0000-0001-7286-1393; Rabiser, Rick/0000-0003-3862-1112; Biffl,
   Stefan/0000-0002-3413-7780
FU Christian Doppler Research Association; Austrian Federal Ministry for
   Digital and Economic Affairs; National Foundation for Research,
   Technology and Development; Deutsche Forschungsgemeinschaft (DFG, German
   Research Foundation) [CRC 1608 - 501798263]; TU Wien Bibliothek
FX The financial support by the Christian Doppler Research Association, the
   Austrian Federal Ministry for Digital and Economic Affairs and the
   National Foundation for Research, Technology and Development is
   gratefully acknowledged. We explicitly want to thank our industry
   partners for their continuous support. Partially funded by the Deutsche
   Forschungsgemeinschaft (DFG, German Research Foundation) - CRC 1608 -
   501798263. The water filter was invented, designed, and produced by
   Askwar Hilonga at Gongalimodel in Tanzania as a low cost frugal product
   line for cleaner water (UN SDG6) . We thank Askwar Hilonga for providing
   and sharing this case study and Yazguel Fidan who initially conducted
   and analyzed the interviews with Askwar Hilonga. The truck models and
   their parts were designed, rendered, and 3D-printed at Czech Technical
   University in Prague-CIIRC. We thank Vaclav Jirkovsk & yacute; and Petr
   Novak for providing and sharing this case study. The chess piece case
   study was provided by TU Wien Pilotfabrik and the Center for Digital
   Production. We thank Alexander Raschendor- fer and Sebastian Kropatschek
   for providing and sharing this case study. The authors acknowledge TU
   Wien Bibliothek for financial support through its Open Access Funding
   Programme.
CR Ananieva S, 2016, PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON FEATURE-ORIENTED SOFTWARE DEVELOPMENT (FOSD'16), P18, DOI 10.1145/3001867.3001870
   APEL S, 2013, FEATURE ORIENTED SOF
   Biffl S., 2017, Multi-Disciplinary Engineering for Cyber-Physical Production Systems, P1, DOI 10.1007/978-3-319-56345-9_1
   Cañete A, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111086
   Clarke D, 2015, MATH STRUCT COMP SCI, V25, P482, DOI 10.1017/S0960129512000941
   Clements Paul, 2002, Software Product Lines: Practices and Patterns
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI [10.1145/2110147.2110167, DOI 10.1145/2110147.2110167]
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Drath R., 2021, AutomationML: A Practical Guide
   Drath R., 2009, Datenaustausch in der Anlagenplanung mit AutomationML: Integration von CAEX, PLCopen XML und COLLADA
   Drath R, 2008, IEEE INT C EMERG, P616, DOI 10.1109/ETFA.2008.4638461
   Fadhlillah Hafiyyan Sayyid, 2023, SPLC '23: Proceedings of the 27th ACM International Systems and Software Product Line Conference - Volume A, P223, DOI 10.1145/3579027.3608994
   Fadhlillah Hafiyyan Sayyid, 2022, SPLC '22: Proceedings of the 26th ACM International Systems and Software Product Line Conference, P34, DOI 10.1145/3503229.3547028
   Fadhlillah H.S., 2023, 28 INT C EMERGING TE, P1
   Fadhlillah HS, 2022, VAMOS'22: 16TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS, DOI 10.1145/3510466.3511273
   Fang M., 2019, Ph.D. thesis
   Fang M, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON PRODUCT LINE APPROACHES IN SOFTWARE ENGINEERING (PLEASE), P21, DOI 10.1109/PLEASE.2013.6608658
   Faulk S.R., 1990, Technical Report, INTRO_SYNTHESIS_PROCESS-90019-N
   Feichtinger Kevin, 2020, SPLC '20: Proceedings of the 24th ACM International Systems and Software Product Line Conference - Volume B on ZZZ, P65, DOI 10.1145/3382026.3425770
   Feichtinger K., 2020, 24 ACM INT SYSTEMS S, VB, P44
   Feichtinger K, 2022, IEEE INT C EMERG, DOI 10.1109/ETFA52439.2022.9921568
   Feichtinger K, 2022, LECT NOTES COMPUT SC, V13297, P79, DOI 10.1007/978-3-031-08129-3_5
   Feichtinger K, 2021, PROCEEDINGS OF 15TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS, VAMOS 2021, DOI 10.1145/3442391.3442400
   Feichtinger K, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P69, DOI 10.1145/3461002.3473945
   Feichtinger K, 2020, EUROMICRO CONF PROC, P179, DOI 10.1109/SEAA51224.2020.00037
   Feldmann S, 2015, IFAC PAPERSONLINE, V48, P211, DOI 10.1016/j.ifacol.2015.06.083
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Geraldi RT, 2020, INFORM SOFTWARE TECH, V124, DOI 10.1016/j.infsof.2020.106293
   Gunes V, 2014, KSII T INTERNET INF, V8, P4242, DOI 10.3837/tiis.2014.12.001
   Hevner A.R., 2007, SCANDINAVIAN J INFOR, V1919, P4
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hubaux A., 2012, 6 INT WORKSHOP VARIA, P149
   IEC, 2014, IEC 62714-1
   IEC, 2012, IEC 61499-1
   Järvenpää E, 2019, J MANUF SYST, V53, P261, DOI 10.1016/j.jmsy.2019.10.003
   Jazdi N., 2010, Mehr systematik fur den anlagenbau und das industrielle losungsgeschaft-gesteigerte effizienz durch domain engineering, V58, P524
   Kästner C, 2012, ACM SIGPLAN NOTICES, V47, P773, DOI 10.1145/2398857.2384673
   Kang K.C., 1990, Feature-Oriented Domain Analysis (FODA) Feasibility Study
   Kowal M, 2017, IFAC PAPERSONLINE, V50, P4336, DOI 10.1016/j.ifacol.2017.08.870
   Krüger J, 2019, J SYST SOFTWARE, V152, P239, DOI 10.1016/j.jss.2019.01.057
   Krüger J, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P237, DOI 10.1145/3106195.3106217
   Lee S., 1989, 3 ORSATIMS C FLEXIBL, P383
   Meinicke Jens, 2017, Mastering Software Variability with FeatureIDE
   Meixner Kristof, 2020, SPLC '20: Proceedings of the 24th ACM International Systems and Software Product Line Conference - Volume B on ZZZ, P96, DOI 10.1145/3382026.3431247
   Meixner K, 2022, VAMOS'22: 16TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS, DOI 10.1145/3510466.3511274
   Meixner K, 2021, IEEE INT C EMERG, DOI 10.1109/ETFA45728.2021.9613674
   Meixner K, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P105, DOI 10.1145/3461002.3473946
   Meixner K, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P49, DOI 10.1145/3307630.3342411
   Meixner K, 2020, PROCEEDINGS OF THE 14TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '20), DOI 10.1145/3377024.3377043
   Monostori L, 2014, PROC CIRP, V17, P9, DOI 10.1016/j.procir.2014.03.115
   Nyberg M., 2021, 25 ACM INT SYSTEMS S
   Oliinyk O, 2017, REQUIR ENG, V22, P105, DOI 10.1007/s00766-015-0237-z
   Paetzold K., 2017, MultiDisciplinary Engineering for Cyber-Physical Production Systems, P27
   Rabiser D, 2018, SOFTW SYST MODEL, V17, P913, DOI 10.1007/s10270-016-0564-7
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Safdar SA, 2021, SOFTW SYST MODEL, V20, P211, DOI 10.1007/s10270-020-00803-8
   Safdar SA, 2016, LECT NOTES COMPUT SC, V9959, P1, DOI 10.1007/978-3-319-46613-2_1
   Schafer Andreas, 2021, SPLC '21: Proceedings of the 25th ACM International Systems and Software Product Line Conference - Volume A, P25, DOI 10.1145/3461001.3473060
   Schleipen M, 2015, AT-AUTOM, V63, P801, DOI 10.1515/auto-2015-0015
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Schmid Klaus., 2011, 5 INT WORKSHOP VARIA, P119, DOI [10.1145/1944892.1944907, DOI 10.1145/1944892.1944907]
   Shull F., 2007, Guide to advanced empirical software engineering
   Singer J., 2008, Guide to Advanced Empirical Software Engineering, P9
   Sundermann C, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3471145
   Tolio T, 2010, CIRP ANN-MANUF TECHN, V59, P672, DOI 10.1016/j.cirp.2010.05.008
   VDI, 2013, VDI/VDE 3695: Engineering of industrial plants
   VDI, 2005, VDI/VDE 3682: Formalised process descriptions
   Wieringa R. J, 2014, Design science methodology for information systems and software engineering
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Zhang B, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON VARIABILITY AND COMPLEXITY IN SOFTWARE DESIGN (VACE), P14, DOI [10.1109/VACE.2016.012, 10.1145/2897045.2897048]
   Zoitl A, 2010, PROC IEEE INT SYMP, P3817, DOI 10.1109/ISIE.2010.5637502
NR 71
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 112007
DI 10.1016/j.jss.2024.112007
EA MAR 2024
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ6L6
UT WOS:001204314300001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Chowdhury, MTA
   Contractor, MR
   Rivero, CR
AF Chowdhury, Md Towhidul Absar
   Contractor, Maheen Riaz
   Rivero, Carlos R.
TI Flexible control flow graph alignment for delivering data-driven
   feedback to novice programming learner
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Automated program repair; Control flow graph; Approximated graph
   alighment; Data driven feedback
AB Supporting learners in introductory programming assignments at scale is a necessity. This support includes automated feedback on what learners did incorrectly. Existing approaches cast the problem as automatically repairing learners' incorrect programs extrapolating the data from an existing correct program from other learners. However, such approaches are limited because they only compare programs with similar control flow and order of statements. A potentially valuable set of repair feedback from flexible comparisons is thus missing. In this paper, we present several modifications to CLARA, a data-driven automated repair approach that is open source, to deal with real-world introductory programs. We extend CLARA's abstract syntax tree processor to handle common introductory programming constructs. Additionally, we propose a flexible alignment algorithm over control flow graphs where we enrich nodes with semantic annotations extracted from programs using operations and calls. Using this alignment, we modify an incorrect program's control flow graph to match correct programs to apply CLARA's original repair process. We evaluate our approach against a baseline on the twenty most popular programming problems in Codeforces. Our results indicate that flexible alignment has a significantly higher percentage of successful repairs at 46% compared to 5% for baseline CLARA. Our implementation is available at https://github.com/towhidabsar/clara.
C1 [Chowdhury, Md Towhidul Absar; Contractor, Maheen Riaz; Rivero, Carlos R.] Rochester Inst Technol, One Lomb Mem Dr, Rochester, NY 14623 USA.
C3 Rochester Institute of Technology
RP Chowdhury, MTA (corresponding author), Rochester Inst Technol, One Lomb Mem Dr, Rochester, NY 14623 USA.
EM mac9908@rit.edu; mc1927@rit.edu; crr@cs.rit.edu
RI ; Rivero, Carlos R./F-3283-2016
OI Chowdhury, Md Towhidul/0000-0002-7260-4693; Rivero, Carlos
   R./0000-0002-5770-950X
CR Ahmed UZ, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3510418
   [Anonymous], 2006, Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, DOI DOI 10.1145/1150402.1150522
   Bizot B., 2016, Technical Report
   Boya Sun, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P21, DOI 10.1109/ISSRE.2010.36
   Chen Mark, 2021, arXiv
   Coetzee D., 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing, P1176
   Contractor MR, 2022, LECT NOTES COMPUT SC, V13284, P323, DOI 10.1007/978-3-031-09680-8_30
   Costa LD, 2021, Arxiv, DOI arXiv:2110.09619
   D'Antoni L, 2016, LECT NOTES COMPUT SC, V9780, P383, DOI 10.1007/978-3-319-41540-6_21
   Edmison B, 2020, 2020 ACM/IEEE 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET 2020), P34, DOI 10.1145/3377814.3381707
   Garcia D. D., 2016, Proceedings of the 47th ACM Technical Symposium on Computing Science Education, SIGCSE'16, P396, DOI DOI 10.1145/2839509.2844660
   Gulwani S, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P465, DOI [10.1145/3192366.3192387, 10.1145/3296979.3192387]
   Harper R., 2016, Practical Foundations for Programming Languages
   Head A, 2017, PROCEEDINGS OF THE FOURTH (2017) ACM CONFERENCE ON LEARNING @ SCALE (L@S'17), P89, DOI 10.1145/3051457.3051467
   Hu Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P388, DOI 10.1109/ASE.2019.00044
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Huang J., 2013, AIED WORKSH
   Kirschner PA, 2006, EDUC PSYCHOL-US, V41, P75, DOI 10.1207/s15326985ep4102_1
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Li WC, 2016, LECT NOTES COMPUT SC, V9679, P315, DOI 10.1007/978-3-319-35122-3_21
   Li Z, 2023, J SYST SOFTWARE, V205, DOI 10.1016/j.jss.2023.111822
   Liu X, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P126, DOI 10.1109/ICSE-SEET.2019.00022
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Marin VJ, 2021, LECT NOTES COMPUT SC, V12677, P247, DOI 10.1007/978-3-030-80421-3_27
   Marin VJ, 2017, PROC INT CONF DATA, P1259, DOI 10.1109/ICDE.2017.169
   Mirzayanov M., 2018, Codeforces: Problem difficulties
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Nguyen A, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P491, DOI 10.1145/2566486.2568023
   Nguyen TD, 2022, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME55016.2022.00022
   Piech C, 2015, PR MACH LEARN RES, V37, P1093
   Pu YW, 2016, COMPANION PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SYSTEMS, PROGRAMMING, LANGUAGES AND APPLICATIONS: SOFTWARE FOR HUMANITY (SPLASH COMPANION'16), P39, DOI 10.1145/2984043.2989222
   Rodriguez C.O., 2012, EUROPEAN J OPEN DIST, V15
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sidiroglou-Douskos S, 2015, ACM SIGPLAN NOTICES, V50, P43, DOI [10.1145/2813885.2737988, 10.1145/2737924.2737988]
   Singh R, 2013, ACM SIGPLAN NOTICES, V48, P15, DOI 10.1145/2499370.2462195
   Solar-Lezama Armando, 2013, International Journal on Software Tools for Technology Transfer, V15, P475, DOI 10.1007/s10009-012-0249-7
   Wang K, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P481, DOI 10.1145/3192366.3192384
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xu SW, 2003, IEEE T SOFTWARE ENG, V29, P360, DOI 10.1109/TSE.2003.1191799
   Yera R, 2017, APPL INTELL, V47, P277, DOI 10.1007/s10489-016-0892-x
   Yi JY, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P740, DOI 10.1145/3106237.3106262
NR 43
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111960
DI 10.1016/j.jss.2024.111960
EA JAN 2024
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HH9N5
UT WOS:001158722100001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Romero-Organvidez, D
   Galindo, JA
   Sundermann, C
   Horcas, JM
   Benavides, D
AF Romero-Organvidez, David
   Galindo, Jose A.
   Sundermann, Chico
   Horcas, Jose-Miguel
   Benavides, David
TI UVLHub: A feature model data repository using UVL and open science
   principles
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Feature models; Software product line; Variability; Dataset; Uvl
ID SYSTEMS
AB Feature models are the de facto standard for modelling variabilities and commonalities in features and relationships in software product lines. They are the base artefacts in many engineering activities, such as product configuration, derivation, or testing. Concrete models in different domains exist; however, many are in private or sparse repositories or belong to discontinued projects. The dispersion of knowledge of feature models hinders the study and reuse of these artefacts in different studies. The Universal Variability Language (UVL) is a community effort textual feature model language that promotes a common way of serializing feature models independently of concrete tools. Open science principles promote transparency, accessibility, and collaboration in scientific research. Although some attempts exist to promote feature model sharing, the existing solutions lack open science principles by design. In addition, existing and public feature models are described using formats not always supported by current tools. This paper presents UVI.Hub, a repository of feature models in UVL format. UVI.Hub provides a front end that facilitates the search, upload, storage, and management of feature model datasets, improving the capabilities of discontinued proposals. Furthermore, the tool communicates with Zenodo - one of the most well-known open science repositories - providing a permanent save of datasets and following open science principles. UVI.Hub includes existing datasets and is readily available to include new data and functionalities in the future. It is maintained by three active universities in variability modelling.
C1 [Romero-Organvidez, David; Galindo, Jose A.; Benavides, David] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
   [Sundermann, Chico] Ulm Univ, Inst Software Engn & Programming Languages, Ulm, Germany.
   [Horcas, Jose-Miguel] Univ Malaga, ITIS Software, Malaga, Spain.
   [Romero-Organvidez, David; Galindo, Jose A.; Benavides, David] Univ Seville, Res Inst I3US, Seville, Spain.
C3 University of Sevilla; Ulm University; Universidad de Malaga; University
   of Sevilla
RP Romero-Organvidez, D (corresponding author), Univ Seville, Dept Comp Languages & Syst, Seville, Spain.; Romero-Organvidez, D (corresponding author), Univ Seville, Res Inst I3US, Seville, Spain.
EM drorganvidez@us.es; jagalindo@us.es; chico.sundermann@uni-ulm.de;
   horcas@uma.es; benavides@us.es
RI Galindo, Jose A/F-7232-2010; Benavides, David/K-2791-2014
OI Galindo, Jose A/0000-0001-9293-9784; Sundermann,
   Chico/0000-0002-5239-3307; Romero Organvidez, David/0000-0002-8228-3483;
   Benavides, David/0000-0002-8449-3273
FU FEDER/Ministry of Science, Innovation and Universities/Junta de
   Andalucia/State Research Agency/CDTI [PID2022-138486OB-I00,
   RED2022-134337-T, IDI-20230256]; Universidad de Malaga [IRIS
   PID2021-122812OB-I00]; FEDER funds; MICIN/AEI [PREP2022-000335]; FSE+
FX This work was partially supported by FEDER/Ministry of Science,
   Innovation and Universities/Junta de Andalucia/State Research
   Agency/CDTI with the following grants: Data-pl (PID2022-138486OB-I00) ,
   TASOVA PLUS research network (RED2022-134337-T) and MI-DAS
   (IDI-20230256) . Also, the work from the Universidad de Malaga is
   supported by the project IRIS PID2021-122812OB-I00 (co-financed by FEDER
   funds) . David Romero-Organvidez is supported by PREP2022-000335,
   financed by MICIN/AEI/10.13039/501100011033 and by FSE+
CR Acher Mathieu, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P424, DOI 10.1109/ASE.2011.6100089
   Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Bangor A, 2008, INT J HUM-COMPUT INT, V24, P574, DOI 10.1080/10447310802205776
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D., 2024, J. Syst. Softw., DOI [10.2139/ssrn.4764657, DOI 10.2139/SSRN.4764657]
   Benavides D., 2007, PROCEEDING 1 INT WOR, P129
   Benavides D, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P323, DOI 10.1145/3336294.3342364
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Bezerra Carla, 2021, SBES '21: Brazilian Symposium on Software Engineering, P121, DOI 10.1145/3474624.3476016
   Bezerra C.I.M., 2016, P 20 INT SYST SOFTW, P314, DOI [10.1145/2934466, DOI 10.1145/2934466.2962730]
   Caffaro Jerome, 2010, GL-Conference Series: Conference Proceedings, V7
   Clements Paul, 2001, Software Product Lines: Practices and Patterns
   Czerniak Andreas, 2019, OpenAIRE: the open science pillar of the EOSC, DOI [10.5281/zenodo.3516519, DOI 10.5281/ZENODO.3516519]
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Feichtinger K, 2021, PROCEEDINGS OF 15TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS, VAMOS 2021, DOI 10.1145/3442391.3442400
   Felfernig A, 2018, J INTELL INF SYST, V51, P161, DOI 10.1007/s10844-017-0492-1
   Felfernig Alexander, 2024, Feature Models: AIDriven Design, Analysis and Applications, DOI [10.1007/978-3-031-61874-1, DOI 10.1007/978-3-031-61874-1]
   Galindo Jose A., 2020, SPLC '20: Proceedings of the 24th ACM International Systems and Software Product Line Conference - Volume B on ZZZ, P52, DOI 10.1145/3382026.3425773
   Galindo JA, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P170, DOI 10.1145/3307630.3342405
   Galindo JA, 2019, COMPUTING, V101, P387, DOI 10.1007/s00607-018-0646-1
   Galindo JA, 2016, SOFTWARE QUAL J, V24, P365, DOI 10.1007/s11219-014-9258-y
   Galindo Jose A., 2023, SPLC 23
   Galindo Jose A., 2010, P 1 INT WORKSH AUT C, V688
   Halin Axel, 2020, SPLC 20, Va, P1
   Horcas Jose M., 2022, SPLC '22: Proceedings of the 26th ACM International Systems and Software Product Line Conference, P42, DOI 10.1145/3503229.3547025
   Joshi A., 2015, BRIT J APPL SCI TECH, V7, P396, DOI DOI 10.9734/BJAST/2015/14975
   Juodisius Paulius., 2019, ART SCI ENG PROGRAM, V3, P2, DOI DOI 10.22152/PROGRAMMING-JOURNAL.ORG/2019/3/2
   KANG K, 1990, CMUSEI90TR21
   Katoch S, 2020, Arxiv, DOI arXiv:1911.10600
   Knüppel A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P291, DOI 10.1145/3106237.3106252
   Le Viet-Man, 2023, P AAAI C ART INT, V37, P6442, DOI 10.1609/aaai.v37i5.25792
   Lewis JR, 2018, J USABILITY STUD, V13, P158
   Martinez J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P38, DOI 10.1145/3109729.3109748
   Meinicke Jens, 2017, Mastering Software Variability with FeatureIDE
   Mendonca M., 2009, P 13 INT SOFTW PROD, P231, DOI DOI 10.1145/1753235.1753267
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761
   Horcas JM, 2023, SOFTW SYST MODEL, V22, P377, DOI 10.1007/s10270-022-01011-2
   Munoz DJ, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P289, DOI 10.1145/3336294.3336297
   Nielsen J., 1990, SIGCHI Bulletin, P249
   NIELSEN J, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P206
   Nielsen Jakob, 1999, Designing web usability
   Nielsen Lars, 2022, Regul. Aff. Watch, V4, P25, DOI [10.54920/SCTO.2022.RAWatch.7.25, DOI 10.54920/SCTO.2022.RAWATCH.7.25]
   Noorian Mahdi, 2011, Feature model debugging based on description logic reasoning
   Plazar Q, 2019, IEEE INT CONF SOFTW, P240, DOI 10.1109/ICST.2019.00032
   Pohl Richard, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P313, DOI 10.1109/ASE.2011.6100068
   Ramachandran R, 2021, EARTH SPACE SCI, V8, DOI 10.1029/2020EA001562
   Rodas-Silva J, 2019, IEEE ACCESS, V7, P69226, DOI 10.1109/ACCESS.2019.2918469
   Romero D, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P80, DOI 10.1145/3461002.3473949
   Romero-Organvidez D, 2024, J SYST SOFTWARE, V213, DOI 10.1016/j.jss.2024.112029
   Sauro J, 2012, QUANTIFYING THE USER EXPERIENCE: PRACTICAL STATISTICS FOR USER RESEARCH, P1
   Segura S, 2008, LECT NOTES COMPUT SC, V5235, P489, DOI 10.1007/978-3-540-88643-3_15
   Segura Sergio, 2014, ASE 2014, DOI [10.1145/2642937.2642939, DOI 10.1145/2642937.2642939]
   Siegmund N, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P268, DOI 10.1145/3106237.3106251
   Sincero Julio, 2007, P INT WORKSH OP SOUR, P9
   Sochos P, 2004, LECT NOTES COMPUT SC, V3263, P138
   Sprey J, 2020, PROCEEDINGS OF THE 14TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '20), DOI 10.1145/3377024.3377036
   Sundermann C., 2023, 27 ACM INT SYST SOFT
   Sundermann C, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10265-9
   Sundermann C, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P73, DOI 10.1145/3461002.3473940
   Sundermann C, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3471145
   Sundermann Chico, 2023, P INT SYST SOFTW PRO
   Webb GI, 1995, USER MODEL USER-ADAP, V5, P117, DOI 10.1007/BF01099758
   Wieringa R. J., 2014, Design Science Methodology for Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
NR 65
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112150
DI 10.1016/j.jss.2024.112150
EA JUL 2024
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YR6W8
UT WOS:001270259300001
OA hybrid
DA 2024-08-05
ER

PT J
AU Akdur, G
   Aydin, MN
   Akdur, G
AF Akdur, Gorkem
   Aydin, Mehmet N.
   Akdur, Gizdem
TI Understanding Virtual Onboarding Dynamics and Developer Turnover
   Intention in the Era of Pandemic
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Virtual onboarding; Remote work; Pandemic; Developers; Job satisfaction;
   Turnover intention; Virtual Onboarding Framework; SPLS; PLS-SEM
ID WORK; COVID-19; IMPACT
AB This study examines the dynamics of virtual onboarding (VO) for Salesforce Commerce Cloud developers during the COVID-19 pandemic in a multinational software company. The newly developed Virtual Integration and Retention Framework (VIRF), which provides an improved understanding of VO, customized to the opportunities and challenges presented by the pandemic, is the fundamental concept of this study. A two-staged, higher-order constructed (HOC) quantitative research approach was used for the study, revealing a negative relationship between VO success and the challenges brought on by the pandemic. This emphasizes how difficult it can be to transition to remote work settings, especially regarding how operational effectiveness and employee well-being interact. Furthermore, the study demonstrates the positive connection between VO success and the delivery of technology and equipment during the pandemic. This result emphasizes how important logistical support is to the effectiveness of remote work arrangements. The study's key findings show positive impact of successful VO on developers' job satisfaction and workplace relationship quality (WRQ). Strong VO practices are essential to improve employee retention, as evidenced by the inverse correlation between these factors and turnover intentions. The study uses mediation analysis, with job satisfaction and WRQ acting as mediators, to further clarify how VO success influences turnover intentions. This study offers an in-depth understanding of VO practices during the pandemic. It discusses the future of remote work and onboarding procedures while navigating the immediate difficulties caused by the outbreak. The study emphasizes how important VO is for improving WRQ, decreasing turnover intentions of developers within the software company, and improving job satisfaction. These insights benefit organizations trying to improve developer integration and retention in changing work environments and improve their remote work strategies.
C1 [Akdur, Gorkem; Aydin, Mehmet N.] Kadir Has Univ, Management Informat Syst Dept, Istanbul, Turkiye.
   [Akdur, Gizdem] Univ Hertfordshire, Ctr Res Publ Hlth & Community Care CRIPACC, Hatfield, England.
C3 Kadir Has University; University of Hertfordshire
RP Akdur, G (corresponding author), Kadir Has Univ, Management Informat Syst Dept, Istanbul, Turkiye.
EM gorkemakdur@gmail.com
OI Akdur, Gorkem/0000-0001-7879-3109; Aydin, Mehmet/0000-0002-3995-6566;
   Akdur, Gizdem/0000-0001-7326-4750
FX This research did not receive grants from public, commercial, or non-
   profit funding agencies. The corresponding author is an employee at the
   case company. No funds, grants, or other support was received.
CR Adeniji C, 2018, DATA BRIEF, V18, P1360, DOI 10.1016/j.dib.2018.04.024
   Ahmed S., 2022, Bus. Stud., V104, P12, DOI [10.47119/IJRP1001041720223518, DOI 10.47119/IJRP1001041720223518]
   Al-Anezi Y H., 2021, International Education Studies, V14, P15, DOI DOI 10.5539/IES.V14N9P15
   Anderson AJ, 2015, EUR J WORK ORGAN PSY, V24, P882, DOI 10.1080/1359432X.2014.966086
   Battisti E, 2022, J BUS RES, V150, P38, DOI 10.1016/j.jbusres.2022.06.010
   Bauer T.N., 2015, Onboarding: The Power of Connection, DOI DOI 10.13140/RG.2.1.4980.6163
   Bauer T.N., 2011, APA Handbook of Industrial and Organizational Psychology, V3, P51, DOI [10.1037/12171-002, DOI 10.1037/12171-002]
   Bavik A, 2016, INT J HOSP MANAG, V58, P44, DOI 10.1016/j.ijhm.2016.07.005
   Blaszczyk M, 2022, SUSTAINABILITY-BASEL, V14, DOI 10.3390/su142013373
   Bolisani E, 2020, MANAG MARK, V15, P458, DOI 10.2478/mmcks-2020-0027
   Britto R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1921
   Byrd T. A., 2004, Information Resources Management Journal, V17, P38, DOI 10.4018/irmj.2004040103
   Chu AMY, 2022, PLOS ONE, V17, DOI 10.1371/journal.pone.0261969
   Crowe S, 2011, BMC MED RES METHODOL, V11, DOI 10.1186/1471-2288-11-100
   CURRY JP, 1986, ACAD MANAGE J, V29, P847, DOI 10.5465/255951
   Dalton M., 2022, Monthly Labor Review, DOI [DOI 10.21916/MLR.2022.8, 10.21916/mlr.2022.8]
   DeMarco T., 2013, Peopleware: productive projects and teams
   Efimov I, 2022, FRONT PSYCHOL, V13, DOI 10.3389/fpsyg.2022.960955
   El Keshky ME, 2020, FRONT PSYCHOL, V11, DOI 10.3389/fpsyg.2020.585897
   English L, 2022, WORK, V71, P295, DOI 10.3233/WOR-210701
   Eriksson A, 2022, INT J ENV RES PUB HE, V19, DOI 10.3390/ijerph192315731
   Errichiello L., 2021, The role of organizational support in effective remote work implementation in the Post-COVID Era, P221, DOI [10.4018/978- 1-7998-6754-8.CH013, DOI 10.4018/978-1-7998-6754-8.CH013]
   Falk R.F., 1992, A Primer for Soft Modeling, V80
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   GmbH SmartPLS, 2023, SmartPLS
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   Grant CA, 2013, EMPL RELAT, V35, P527, DOI 10.1108/ER-08-2012-0059
   Hair J., 2021, Multidisciplin. J., DOI [10.1080/10705511.2022.2108813, DOI 10.1080/10705511.2022.2108813]
   Hair J.F, 2017, A primer on partial least squares structural equation modeling (PLS-SEM), V165
   Hair JF, 2019, EUR BUS REV, V31, P2, DOI 10.1108/EBR-11-2018-0203
   Hansen S., 2023, SSRN Electr. J., DOI [10.2139/ssrn.4380734, DOI 10.2139/SSRN.4380734]
   Harlianto J., 2023, Internat. J. Profess. Bus. Rev., V8, DOI [10.26668/businessreview/2023.v8i3.827, DOI 10.26668/BUSINESSREVIEW/2023.V8I3.827]
   Harzing AW, 2009, INT BUS REV, V18, P417, DOI 10.1016/j.ibusrev.2009.03.001
   Hayter N., 2021, How to measure the employee onboarding experience
   Hickman A., 2019, Walden University Scholar Works, P1
   Holliday M., 2023, Employee retention vs. turnover: key differences & why it matters
   JACKOFSKY EF, 1987, J OCCUP BEHAV, V8, P263, DOI 10.1002/job.4030080307
   Kniffin KM, 2021, AM PSYCHOL, V76, P63, DOI 10.1037/amp0000716
   Lait J, 2002, RELAT IND-IND RELAT, V57, P463, DOI 10.7202/006886ar
   Leonardi PM, 2021, J MANAGE STUD, V58, P247, DOI 10.1111/joms.12648
   Li T., 2000, Emerald.Com, V15, P268, DOI [10.1108/02683940010373383/full/html?fullSc=1, DOI 10.1108/02683940010373383/FULL/HTML?FULLSC=1]
   Martinon JP, 2021, PHILOSOPHIES, V6, DOI 10.3390/philosophies6020028
   Mohammadi P., 2022, Internat. J. Econ. Manage., V16, DOI [10.47836/ijeam.16.3.03, DOI 10.47836/IJEAM.16.3.03]
   Mosebeck A., 2021, The IMPACT of Working from Home on Effectiveness of Onboarding of New Employees
   O'Connor LT, 2018, SOCIOL PERSPECT, V61, P808, DOI 10.1177/0731121418768235
   Pavlina K., 2020, Pepperdine University, V4
   Pico-Saltos R, 2023, SUSTAINABILITY-BASEL, V15, DOI 10.3390/su15010540
   Prasad Dr.K., 2021, J. Bus. Strat. Fin. Manage, P01, DOI [10.12944/jbsfm.02.01.01, DOI 10.12944/JBSFM.02.01.01]
   Raj A, 2022, J BUS RES, V142, P1125, DOI 10.1016/j.jbusres.2022.01.037
   Regnér P, 2011, MANAGE INT REV, V51, P821, DOI 10.1007/s11575-011-0110-3
   RIZZO JR, 1970, ADMIN SCI QUART, V15, P150, DOI 10.2307/2391486
   Rodeghero P, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P41, DOI 10.1109/ICSE-SEIP52600.2021.00013
   Sarstedt M, 2020, INT J MARKET RES, V62, P288, DOI 10.1177/1470785320915686
   Schriesheim C., 1980, DEV VALIDATION SHORT
   Schwarzer R., 1995, Measures in health psychology: A users portfolio. Causal and control beliefs, P35, DOI DOI 10.1037/T00393-000
   Shabir S., 2021, Open J. Bus. Manage., V09, DOI [10.4236/ojbm.2021.93054, DOI 10.4236/OJBM.2021.93054, 10.4236 /ojbm.2021.93054]
   Sharma GG, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110442
   Shockley KM, 2021, J APPL PSYCHOL, V106, P1466, DOI 10.1037/apl0000970
   Stake, 1995, The Art of Case Study Research, DOI DOI 10.1108/EB024859
   Taylor P., 2021, Prelimin. Find, P1
   Wang B, 2021, APPL PSYCHOL-INT REV, V70, P16, DOI 10.1111/apps.12290
   Yarbrough JW, 2023, CORP COMMUN, V28, P707, DOI 10.1108/CCIJ-12-2022-0158
   Yin R.K., 2018, Case study research and applications: Design and methods, V6th ed.
   Zhuang ME, 2022, MATH PROBL ENG, V2022, DOI 10.1155/2022/3588822
NR 66
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112136
DI 10.1016/j.jss.2024.112136
EA JUL 2024
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XZ1Y5
UT WOS:001265422500001
DA 2024-08-05
ER

PT J
AU Gou, QW
   Dong, YW
   Ke, Q
AF Gou, Qianwen
   Dong, Yunwei
   Ke, Qiao
TI SynthoMinds: Bridging human programming intuition with retrieval,
   analogy, and reasoning in program synthesis
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Deep learning; Program synthesis; Information retrieval
ID CODE
AB Program synthesis revolutionizes software development by automatically generating executable programs based on given specifications. An emerging trend is to augment generative models with external memory before generating programs. Better memory, in general, leads to better results. However, existing models tend to devolve into a copy mechanism, where retrieved memories are copied directly into the generative model, leading to misinformation or confusion. A sharp performance decline is caused when the retrieved memories are irrelevant or incorrect. Inspired by the human programming process-sketching a solution before programming, we propose SynthoMinds. A novel framework that decomposes program synthesis tasks into retrieval, analogy, and reasoning, enabling the generation of programs by leveraging knowledge learned from previously solved solutions. Specifically, given a natural language (NL) description, SynthoMinds first retrieves similar programs via a retrieval module, and then mines the retrieved memories for some insightful revelations via an analogy module. The revelation acts as a bird's-eye view of a program without delving into implementation details. The reasoning module harnesses the power of insightful revelations and NL to generate programs. Experimental results demonstrate that mining revelations from retrieved memories significantly outperforms existing baselines.
C1 [Gou, Qianwen] Northwestern Polytech Univ, Sch Comp Sci, Xian 710072, Shaanxi, Peoples R China.
   [Dong, Yunwei] Northwestern Polytech Univ, Sch Software, Xian 710072, Shaanxi, Peoples R China.
   [Ke, Qiao] Northwestern Polytech Univ, Sch Math & Stat, Xian 710072, Shaanxi, Peoples R China.
C3 Northwestern Polytechnical University; Northwestern Polytechnical
   University; Northwestern Polytechnical University
RP Dong, YW (corresponding author), Northwestern Polytech Univ, Sch Software, Xian 710072, Shaanxi, Peoples R China.
EM qianwen@mail.nwpu.edu.cn; yunweidong@nwpu.edu.cn; qiaoke@nwpu.edu.cn
FU Major Program of the National Natural Science Foundation of China
   [62192733, 62192730]; National Natural Science Foundation of China
   [12201498]
FX We thank the anonymous reviewers for their helpful comments. This work
   is supported by the Major Program of the National Natural Science
   Foundation of China with No. 62192733, No. 62192730 and the National
   Natural Science Foundation of China with No. 12201498.
CR Alokla A, 2022, MATHEMATICS-BASEL, V10, DOI 10.3390/math10040604
   Asai T, 2004, IEICE T INF SYST, VE87D, P2754
   Bui NDQ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P796, DOI 10.1145/3338906.3338924
   Cadavid H, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10350-7
   Chen B, 2021, PROC IEEE ACM INT C, P252, DOI 10.1109/ICSE-Companion52605.2021.00117
   Chen QC, 2022, P ACM PROGRAM LANG, V6, DOI 10.1145/3563307
   Ciniselli M, 2022, IEEE T SOFTWARE ENG, V48, P4818, DOI 10.1109/TSE.2021.3128234
   Dahal S, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, ACL-IJCNLP 2021, P4382
   Desai A, 2016, PROC INT CONF SOFTW, P345, DOI 10.1145/2884781.2884786
   Dong YH, 2022, Arxiv, DOI arXiv:2211.00818
   Gavran I, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428269
   Gou QW, 2024, J SYST SOFTWARE, V211, DOI 10.1016/j.jss.2024.111982
   Gou QW, 2024, FRONT COMPUT SCI-CHI, V18, DOI 10.1007/s11704-023-2678-8
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Hayati SA, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P925
   Huang HY, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P2485
   Jiang H, 2022, IEEE-ACM T AUDIO SPE, V30, P468, DOI 10.1109/TASLP.2021.3138717
   Jiang H, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (ACL-IJCNLP 2021), VOL 1, P5076
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Le Hung, 2022, NeurIPS
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Li J, 2023, PROC INT CONF SOFTW, P2124, DOI 10.1109/ICSE48619.2023.00179
   Li Z, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111036
   Liu S., 2021, 9 INT C LEARN REPR I
   Lopes C.V., 2010, P 18 ACM SIGSOFT INT, P157, DOI [DOI 10.1145/1882291.1882316, 10.1145/1882291.1882316]
   Mens K, 2021, EASEAI '21: PROCEEDINGS OF THE 3RD INTERNATIONAL WORKSHOP ON EDUCATION THROUGH ADVANCED SOFTWARE ENGINEERING AND ARTIFICIAL INTELLIGENCE, P1, DOI 10.1145/3472673.3473958
   Murali Vijayaraghavan, 2018, 6 INT C LEARN REPR I, P12
   Nye M, 2019, PR MACH LEARN RES, V97
   Nykaza J., 2002, P 20 ANN INT C COMP, P133, DOI [DOI 10.1145/584955.584976, 10.1145/584955.584976]
   Oda Y, 2015, IEEE INT CONF AUTOM, P574, DOI 10.1109/ASE.2015.36
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Parvez MR, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2021, P2719
   Pham HS, 2019, LECT NOTES ARTIF INT, V11828, P471, DOI 10.1007/978-3-030-33778-0_35
   Rabinovich M, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1139, DOI 10.18653/v1/P17-1105
   Satter A., 2017, COMP 1 INT C ART SCI
   Shen SJ, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1533, DOI 10.1145/3540250.3558965
   Solar-Lezama A, 2009, LECT NOTES COMPUT SC, V5904, P4, DOI 10.1007/978-3-642-10672-9_3
   Solar-Lezama Armando, 2008, Program synthesis by sketching
   Soliman A., 2022, J. Eng. Appl. Sci., V69
   Song J, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P1
   Sun ZY, 2020, AAAI CONF ARTIF INTE, V34, P8984
   Sun ZY, 2019, AAAI CONF ARTIF INTE, P7055
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Wang Y, 2023, Arxiv, DOI arXiv:2305.07922
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wei BL, 2020, IEEE INT CONF AUTOM, P349, DOI 10.1145/3324884.3416578
   Xie BB, 2021, AAAI CONF ARTIF INTE, V35, P14121
   Xu E, 2023, FRONT COMPUT SCI-CHI, V17, DOI 10.1007/s11704-022-2223-1
   Xu Frank F., 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P1, DOI 10.1145/3520312.3534862
   Xu L, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P342, DOI 10.1109/SANER50967.2021.00039
   Yang G, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111577
   Yang G, 2022, KNOWL-BASED SYST, V237, DOI 10.1016/j.knosys.2021.107858
   Yang RQ, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4699
   Yin PC, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P7
   Yin PC, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4553
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
   Yin PC, 2018, IEEE WORK CONF MIN S, P476, DOI 10.1145/3196398.3196408
NR 58
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112140
DI 10.1016/j.jss.2024.112140
EA JUL 2024
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XT9M9
UT WOS:001264047800001
DA 2024-08-05
ER

PT J
AU Huang, RY
   Shen, QN
   Wang, YC
   Wu, YQ
   Wu, ZH
   Luo, XP
   Ruan, AB
AF Huang, Ruiyao
   Shen, Qingni
   Wang, Yuchen
   Wu, Yiqi
   Wu, Zhonghai
   Luo, Xiapu
   Ruan, Anbang
TI ReenRepair: Automatic and semantic equivalent repair of reentrancy in
   smart contracts
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Smart contracts; Reentrancy; Program repair; Template-based repair;
   Semantics
AB Reentrancy, the most notorious vulnerability in smart contracts, has attracted extensive attention. To eliminate reentrancy before deploying contracts, there is a need to locate and repair the contracts. However, existing tools suffer from false positive localization, original semantics destruction, and high gas overhead. In this work, we propose a template -based gas -optimized reentrancy repair method with semantic maintenance. We avoid false positive locations from verifying the attack's effectiveness, using connectivity and read-write dependencies. We design the semantic equivalence check algorithm based on the def-use chain. We optimize the lock and reordering templates for reentrancy repair and add semantic maintenance operations. We implement our tool, ReenRepair, and compare it with two state-of-the-art detection tools and two repair tools. The results show that ReenRepair yields good location precision, the highest repair rate, and the lowest gas overhead. All semantic changes caused by lock and 89.66% of semantic changes caused by reordering are successfully maintained.
C1 [Huang, Ruiyao; Shen, Qingni; Wang, Yuchen; Wu, Yiqi; Wu, Zhonghai] Peking Univ, Sch Software & Microelect, 5 Yiheyuan Rd, Beijing 100871, Peoples R China.
   [Huang, Ruiyao; Shen, Qingni; Wang, Yuchen; Wu, Yiqi; Wu, Zhonghai; Ruan, Anbang] PKU OCTA Lab Blockchain & Privacy Comp, Beijing, Peoples R China.
   [Luo, Xiapu] Hong Kong Polytech Univ, Hong Kong, Peoples R China.
   [Ruan, Anbang] Octa Innovat Ltd, Beijing, Peoples R China.
C3 Peking University; Hong Kong Polytechnic University
RP Shen, QN (corresponding author), Peking Univ, Sch Software & Microelect, 5 Yiheyuan Rd, Beijing 100871, Peoples R China.; Shen, QN (corresponding author), PKU OCTA Lab Blockchain & Privacy Comp, Beijing, Peoples R China.
EM hryao@pku.edu.cn; qingnishen@ss.pku.edu.cn; wyc247517@pku.edu.cn;
   2101210430@stu.pku.edu.cn; wuzh@pku.edu.cn;
   daniel.xiapu.luo@polyu.edu.hk; ar@8lab.cn
OI Shen, Qingni/0000-0002-0605-6043
FU National Key Research and Devel-opment Program of China [2022YFB2703301]
FX This work was supported by the National Key Research and Devel-opment
   Program of China under Grant No. 2022YFB2703301.
CR Albert E, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428277
   Bartoletti M, 2019, LECT NOTES COMPUT SC, V11737, P233, DOI 10.1007/978-3-030-31500-9_15
   Cai J, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111550
   ChainSecurity, 2019, Constantinople enables new reentrancy attack
   Chen T, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24449
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Diligence C., 2020, Cross-function reentrancy
   Ferreira JF, 2020, IEEE INT CONF AUTOM, P1349, DOI 10.1145/3324884.3415298
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Ghaleb Asem, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P415, DOI 10.1145/3395363.3397385
   Grossman S, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158136
   Guo H., 2023, ACM Transactions on Software Engineering and Methodology
   Hildenbrandt E, 2018, P IEEE COMPUT SECUR, P204, DOI 10.1109/CSF.2018.00022
   Jiao J, 2020, P IEEE S SECUR PRIV, P1695, DOI 10.1109/SP40000.2020.00066
   Jin G., 2012, OSDI, P221
   Jin GL, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P389
   Jin H, 2022, IEEE T SOFTWARE ENG, V48, P4611, DOI 10.1109/TSE.2021.3123170
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kelk D, 2013, LECT NOTES COMPUT SC, V8063, P73, DOI 10.1007/978-3-642-39955-8_7
   Liu HP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P715, DOI 10.1145/2950290.2950309
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Mueller B., 2018, HITB SECCONF AMSTERD, V9, P54
   Nguyen Tai D., 2021, 2021 IEEE Symposium on Security and Privacy (SP), P1215, DOI 10.1109/SP40001.2021.00057
   Paganini P., 2020, Uniswap and lendf.me hacked, attacker stole $25 million worth of cryptocurrency
   Rodler M, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23413
   Schwartz EJ, 2010, P IEEE S SECUR PRIV, P317, DOI 10.1109/SP.2010.26
   Torres CF, 2022, PROCEEDINGS OF 25TH INTERNATIONAL SYMPOSIUM ON RESEARCH IN ATTACKS, INTRUSIONS AND DEFENSES, RAID 2022, P115, DOI 10.1145/3545948.3545975
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Vitalik Buterin M.S., 2020, EIP-2929: Gas cost increases for state access opcodes
   Wood Gavin, 2023, ETHEREUM: A SECURE DECENTRALISED GENERALISED TRANSACTION LEDGER
   Wu HJ, 2021, PROC INT SYMP SOFTW, P378, DOI 10.1109/ISSRE52982.2021.00047
   Wu L, 2020, Arxiv, DOI arXiv:2005.08278
   Xue YX, 2020, IEEE INT CONF AUTOM, P1029, DOI 10.1145/3324884.3416553
   Yu L, 2023, PROC INT SYMP SOFTW, P556, DOI 10.1109/ISSRE59848.2023.00030
   Yu XL, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3402450
   Zhang MY, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2775
   Zhang YY, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P23, DOI [10.1109/SANER48275.2020.9054825, 10.1109/saner48275.2020.9054825]
   Zhang Z, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3560428
   Zhou SF, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2793
   Zhou XC, 2023, Soft Anal Evol Reeng, P190, DOI 10.1109/SANER56733.2023.00027
   Zhuang Y, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3283
NR 42
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112107
DI 10.1016/j.jss.2024.112107
EA JUN 2024
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WP9E9
UT WOS:001256187500001
DA 2024-08-05
ER

PT J
AU Bertolotti, F
   Cazzola, W
   Ostuni, D
   Castoldi, C
AF Bertolotti, Francesco
   Cazzola, Walter
   Ostuni, Dario
   Castoldi, Carlo
TI When the dragons defeat the knight: Basilisk an architectural pattern
   for platform and language independent development
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Transpilation; Programming languages
ID SOFTWARE
AB In this work, we introduce Basilisk, a high-level architectural pattern designed to facilitate interoperability among various languages, platforms, and ecosystems. The pursuit of language-independent software development is highly desirable, enabling developers to utilize existing software products with most programming languages. Achieving platform independence is equally advantageous, allowing code deployment on different platforms effortlessly. While the development community has often aimed for either language or platform independence, Basilisk aims to combine both into a single product. To realize this dual objective, Basilisk employs two fundamental components. The first is a transpilation infrastructure used to render software products languageindependent. The second is an abstraction layer over platforms, enabling the creation of platform-independent software products. To illustrate Basilisk's potential, we introduce Hydra, a one-to-many, declarative transpilation infrastructure. Hydra has been utilized to develop transpilers from HydraKernel (source language) to various target languages, including D, C++, C#, Scala, Ruby, Hy, and Python. Additionally, we instantiate the abstraction layer in Wyvern, a low-level embedded domain-specific language for GPU programming, supporting any Vulkan-compatible GPU. With the Hydra transpilation infrastructure, Wyvern becomes available for D, C++, C#, Scala, Ruby, Hy, and Python. We evaluate Basilisk through the instantiation of Hydra and Wyvern, writing five algorithms from the Rodinia suite for the seven available languages, totaling 35 benchmarks. These benchmarks are executed on four different hardware platforms.
C1 [Bertolotti, Francesco; Cazzola, Walter; Castoldi, Carlo] Univ Milan, Comp Sci Dept, Milan, Italy.
   [Ostuni, Dario] Univ Verona, Comp Sci Dept, Verona, Italy.
C3 University of Milan; University of Verona
RP Cazzola, W (corresponding author), Univ Milan, Comp Sci Dept, Milan, Italy.
EM bertolotti@di.unimi.it; cazzola@di.unimi.it
OI Bertolotti, Francesco/0000-0002-3867-6175
FU MUR, Italy project "T-LADIES" [PRIN 2020TL3X8X]
FX This work was partly supported by the MUR, Italy project "T-LADIES"
   (PRIN 2020TL3X8X) .
CR Albrecht P. F., 1980, SIGPLAN Notices, V15, P183, DOI 10.1145/947783.948658
   Alias C, 2007, ACM SIGPLAN NOTICES, V42, P73, DOI 10.1145/1273444.1254778
   Almelda JP, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P112, DOI 10.1109/EDOC.2003.1233842
   Ancona Davide, 2007, Proceedings of the 2007 Symposium on Dynamic Languages, DLS'07, DOI [DOI 10.1145/1297081.1297091, 10.1145/1297081.1297091]
   Baxter ID, 2004, PROC INT CONF SOFTW, P625, DOI 10.1109/ICSE.2004.1317484
   Bertolotti F, 2024, J SYST SOFTWARE, V212, DOI 10.1016/j.jss.2024.112006
   Bishop J, 2006, COMPUTER, V39, P26, DOI 10.1109/MC.2006.337
   Blanco JZ, 2021, J SYST SOFTWARE, V179, DOI 10.1016/j.jss.2021.110985
   Box D., 2002, Essential.Net: The Common Language Runtime, V1
   Braun M, 2013, LECT NOTES COMPUT SC, V7791, P102, DOI 10.1007/978-3-642-37051-9_6
   Chadha S, 2017, COMPUT LANG SYST STR, V48, P3, DOI 10.1016/j.cl.2016.08.005
   Coco E.J., 2018, Comput. Appl. Int. J., V5
   Corda S, 2019, 2019 22ND EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD), P606, DOI 10.1109/DSD.2019.00093
   Draxler C., 2004, P 4 INT C LANG RES E, P559
   Dubochet G., 2011, Phd thesis
   Eghbali A, 2020, IEEE INT CONF AUTOM, P956, DOI 10.1145/3324884.3416576
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Gamma E., 1995, DESIGN PATTERNS ELEM
   Gaster B.R., 2013, P 6 WORKSH GEN PURP, P86
   Grimmer M, 2018, ACM T PROGR LANG SYS, V40, DOI 10.1145/3201898
   Harris CR, 2020, NATURE, V585, P357, DOI 10.1038/s41586-020-2649-2
   Hatledal LI, 2019, IEEE ACCESS, V7, P109328, DOI 10.1109/ACCESS.2019.2933275
   He CW, 2005, SOSE 2005: IEEE International Workshop on Service-Oriented System Engineering, P77
   Hsieh CY, 2015, J INF SCI ENG, V31, P897
   Keep AW, 2013, ACM SIGPLAN NOTICES, V48, P343, DOI [10.1145/2544174.2500618, 10.1145/2500365.2500618]
   Kessenich J., 2021, Technical Report
   Khabibullin M., 2015, P 11 CENTR E EUR SOF
   Kirk D., 2007, ISMM, P103
   Klöckner A, 2012, PARALLEL COMPUT, V38, P157, DOI 10.1016/j.parco.2011.09.001
   Kosar T, 2008, INFORM SOFTWARE TECH, V50, P390, DOI 10.1016/j.infsof.2007.04.002
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Krzikalla O., 2011, P PAR PROC WORKSH EU, P137
   Latif M, 2016, 2016 INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY FOR ORGANIZATIONS DEVELOPMENT (IT4OD)
   Liao CH, 2010, LECT NOTES COMPUT SC, V6132, P15, DOI 10.1007/978-3-642-13217-9_2
   Lidman J., 2012, P IEEE IFIP INT C DE, P1
   LOVEMAN DB, 1977, J ACM, V24, P121, DOI 10.1145/321992.322000
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Cardona PAN, 2015, CUAD ACT, P154
   Pang A, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P239, DOI 10.1109/VLHCC.2018.8506534
   Poltavtseva MA, 2019, 2019 INTERNATIONAL CONFERENCE ON ENGINEERING TECHNOLOGIES AND COMPUTER SCIENCE (ENT): INNOVATION & APPLICATION, P25, DOI 10.1109/EnT.2019.00010
   Ponticelli F., 2008, Professional HaXe and Neko
   Quinlan D., 2011, P CET US COMP INFR W, P1
   Ringo N, 2023, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, SLE 2023, P70, DOI 10.1145/3623476.3623514
   Saffran J, 2021, J COMPUT LANG, V62, DOI 10.1016/j.cola.2021.101022
   Sarkar D, 2004, ACM SIGPLAN NOTICES, V39, P201, DOI 10.1145/1016848.1016878
   Schmitt Christian, 2014, 2014 Fourth International Workshop on Domain-Specific Languages and High-Level Frameworks for High-Performance Computing (WOLFHPC). Proceedings, P42, DOI 10.1109/WOLFHPC.2014.11
   Schordan M, 2003, LECT NOTES COMPUT SC, V2789, P214
   Schultes D, 2021, 2021 IEEE/ACM 8TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2021), P73, DOI 10.1109/MobileSoft52590.2021.00017
   Scott Noah W., 2020, 2020 International Conference on Computational Science and Computational Intelligence (CSCI), P1425, DOI 10.1109/CSCI51800.2020.00266
   Selic B, 2005, ISORC 2005: EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P15
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Seymour K, 2003, CONCURR COMP-PRACT E, V15, P207, DOI 10.1002/cpe.657
   Shetty N., 2019, Advances in Intelligent Systems and Computing, V882, P241
   Slee M., 2007, White Paper 5
   Soyata T., 2020, GPU Parallel Program Development using CUDA
   Strekelj D, 2015, INT J ELECTR COMPUT, V6, P9
   Tabuchi A, 2014, LECT NOTES COMPUT SC, V8374, P178, DOI 10.1007/978-3-642-54420-0_18
   Vinoski S, 1997, IEEE COMMUN MAG, V35, P46, DOI 10.1109/35.565655
   Wang AL, 2018, BIOINFORMATICS, V34, P3238, DOI 10.1093/bioinformatics/bty313
   Webb BJ, 2021, LECT NOTES COMPUT SC, V12971, P111, DOI 10.1007/978-3-030-88885-5_8
   Wurthinger Thomas, 2013, P 2013 ACM INT S NEW, P187, DOI [10.1145/2509578.2509581, DOI 10.1145/2509578.2509581]
   Zhang ZQ, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P805, DOI 10.1145/3533767.3543292
   Zhou H., 2015, Fundamentals of Parallel Multicore Architecture, Vfirst, P409
NR 63
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
AR 112088
DI 10.1016/j.jss.2024.112088
EA MAY 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UF3T9
UT WOS:001246613700001
OA hybrid
DA 2024-08-05
ER

PT J
AU van de Laar, P
   Corvino, R
   Mooij, AJ
   van Wezep, H
   Rosmalen, R
AF van de Laar, Pierre
   Corvino, Rosilde
   Mooij, Arjan J.
   van Wezep, Hans
   Rosmalen, Raymond
TI Custom static analysis to enhance insight into the usage of in-house
   libraries
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Customizable static analysis; Knowledge extraction and retrieval;
   Reverse engineering; Program comprehension; Code regularity; Industrial
   case study
AB For software maintenance and evolution, insight into the codebase is crucial. One way to enhance insight is the application of static analysis to extract and visualize program -specific relations from the code itself, such as call graphs and inheritance trees. Yet, software often contains in-house libraries: unique, domain -specific libraries whose usage is typically scattered throughout the codebase. To provide sufficient insight into the usage of those libraries, the static analysis must be customized with domain -specific information. In this paper, we propose a method to enhance insight into the usage of in-house libraries by producing custom overviews. Furthermore, we describe three exploratory case studies targeting industrial C++ and Ada codebases, in which the method was developed, evolved, and validated. The method prescribes how to create custom overviews using static analysis iteratively, starting from a user -provided, initial specification of proper library usage using code patterns. As a safeguard, the method includes cross-checks to detect code fragments that deviate from proper library usage. Whenever such a deviating library usage is found, the code owners determine whether that deviating library usage should be added to the specification of proper library usage or the code fragment should be made compliant. The latter alternative makes both the codebase more regular and keeps the custom static analysis simpler. The method creates custom overviews that reveal opportunities to improve the usage of the in-house libraries, e.g., the removal of domain -specific redundant code which cannot be detected using generic tools, such as compilers and linters. We observed that industrial codebases are regular enough to create custom overviews using static analysis in the three exploratory case studies. Furthermore, we observed that the cross-checks, which detect deviating library usage, ensure the validity and completeness of the custom overviews. We conclude that producing custom overviews for in-house libraries using the method is valuable and feasible.
C1 [van de Laar, Pierre; Corvino, Rosilde; Mooij, Arjan J.] TNO ESI, Eindhoven, Netherlands.
   [van Wezep, Hans] Philips, Best, Netherlands.
   [Rosmalen, Raymond] ITEC, Nijmegen, Netherlands.
   [Mooij, Arjan J.] Zurich Univ Appl Sci, Winterthur, Switzerland.
C3 Philips; Zurich University of Applied Sciences
RP van de Laar, P (corresponding author), TNO ESI, Eindhoven, Netherlands.
EM pierre.vandelaar@tno.nl
FU Netherlands Organisation for Applied Scientific Research TNO
FX The research was carried out as part of the Bright and Vivace programs
   under the responsibility of TNO-ESI with ITEC and Royal Philips as the
   carrying industrial partners. The Bright and Vivace programs are
   supported by the Netherlands Organisation for Applied Scientific
   Research TNO. The authors like to thank Jeroen Ketema for his
   contributions to these programs and his valuable input to the
   discussions that eventually led to this article.
CR Amann S, 2019, IEEE T SOFTWARE ENG, V45, P1170, DOI 10.1109/TSE.2018.2827384
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Dams D., 2021, CEUR WORKSHOP P, V3071
   deF, 2016, P 31 ANN ACM S APPL, P1472, DOI DOI 10.1145/2851613.2851786
   Engler D, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE FOURTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P1
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Horváth G, 2018, IEEE INT WORK C SO, P171, DOI 10.1109/SCAM.2018.00027
   Jackson D., 2000, 22 INT C SOFTW ENG F, P133, DOI [DOI 10.1145/336512.336545, 10.1145/336512.336545]
   Jbara Ahmad, 2014, 22 INT C PROGR COMPR, P189, DOI DOI 10.1145/2597008.2597140
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Klusener S, 2018, PROC IEEE INT CONF S, P569, DOI 10.1109/ICSME.2018.00020
   Mendonça DS, 2022, SOFTWARE QUAL J, V30, P781, DOI 10.1007/s11219-021-09580-z
   Mendonça DS, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268924
   Mooij AJ, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P617, DOI [10.1109/saner48275.2020.9054823, 10.1109/SANER48275.2020.9054823]
   Mossienko M., 2006, Structural search and replace: What, why, and how-to
   Muske T, 2016, IEEE INT WORK C SO, P157, DOI 10.1109/SCAM.2016.25
   Ossendrijver R, 2022, 37TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1598, DOI 10.1145/3477314.3507153
   Padioleau Y., 2006, P 3 WORKSHOP PROGRAM, P10, DOI DOI 10.1145/1215995
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Raibulet C, 2017, IEEE ACCESS, V5, P14516, DOI 10.1109/ACCESS.2017.2733518
   Reiss SP, 2005, 3rd IEEE International Workshop on Visualizing Software for Understanding and Analysis, Proceeedings, P59
   Rogerson D., 1997, Inside COM: Microsoft's Component Object Model
   Schröter I, 2017, INT C PROGRAM COMPRE, P308, DOI 10.1109/ICPC.2017.9
   Schuts MTW, 2022, SOFTWARE PRACT EXPER, V52, P1543, DOI 10.1002/spe.3082
   Siegmund J, 2015, EMPIR SOFTW ENG, V20, P1159, DOI 10.1007/s10664-014-9318-8
   Silva D., 2021, 35 BRAZ S SOFTW ENG, P127, DOI [10.1145/3474624.3476017, DOI 10.1145/3474624.3476017]
   Tonella P, 2007, EMPIR SOFTW ENG, V12, P551, DOI 10.1007/s10664-007-9037-5
   van de Laar P., 2022, Ada User J., V43, P165
   Wall L., 2000, Programming Perl-There's More Than One Way to Do It, Vthird
   Wlodarski L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P569, DOI [10.1109/SANER.2019.8668006, 10.1109/saner.2019.8668006]
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
NR 33
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2024
VL 212
AR 112028
DI 10.1016/j.jss.2024.112028
EA MAR 2024
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QD6A0
UT WOS:001218967100001
OA hybrid
DA 2024-08-05
ER

PT J
AU van Dinten, I
   Derakhshanfar, P
   Panichella, A
   Zaidman, A
AF van Dinten, Imara
   Derakhshanfar, Pouria
   Panichella, Annibale
   Zaidman, Andy
TI The slow and the furious? Performance antipattern detection in
   Cyber-Physical Systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software Performance Antipatterns; Cyber-Physical Systems; Antipattern
   detection; Software maintenance; Empirical Software Engineering; Static
   analysis
AB Cyber-Physical Systems (CPSs) have gained traction in recent years. A major non-functional quality of CPS is performance since it affects both usability and security. This critical quality attribute depends on the specialized hardware, simulation engines, and environmental factors that characterize the system under analysis. While a large body of research exists on performance issues in general, studies focusing on performance -related issues for CPSs are scarce. The goal of this paper is to build a taxonomy of performance issues in CPSs. To this aim, we present two empirical studies aimed at categorizing common performance issues (Study I) and helping developers detect them (Study II). In the first study, we examined commit messages and code changes in the history of 14 GitHub-hosted open -source CPS projects to identify commits that report and fix selfadmitted performance issues. We manually analyzed 2699 commits, labeled them, and grouped the reported performance issues into antipatterns. We detected instances of three previously reported Software Performance Antipatterns (SPAs) for CPSs. Importantly, we also identified new SPAs for CPSs not described earlier in the literature. Furthermore, most performance issues identified in this study fall into two new antipattern categories: Hard Coded Fine Tuning (399 of 646) and Magical Waiting Number (150 of 646). In the second study, we introduce static analysis techniques for automatically detecting these two new antipatterns; we implemented them in a tool called AP -Spotter. We analyzed 9 open -source CPS projects not utilized to build the SPAs taxonomy to benchmark AP -Spotter. Our results show that AP -Spotter achieves 62.04% precision in detecting the antipatterns.
C1 [van Dinten, Imara; Panichella, Annibale; Zaidman, Andy] Delft Univ Technol, Van Mourik Broekmanweg 6, NL-2628 XE Delft, Netherlands.
   [Derakhshanfar, Pouria] JetBrains Res, Huidekoperstr 26-28, NL-1017 ZM Amsterdam, Netherlands.
C3 Delft University of Technology
RP van Dinten, I (corresponding author), Delft Univ Technol, Van Mourik Broekmanweg 6, NL-2628 XE Delft, Netherlands.
EM I.vanDinten@tudelft.nl; A.Panichella@tudelft.nl
RI ; Zaidman, Andy/O-6542-2014
OI van Dinten, Imara/0000-0002-3690-2730; Derakhshanfar,
   Pouria/0000-0003-3549-9019; Zaidman, Andy/0000-0003-2413-3935
FU European Union [957254]; H2020 - Industrial Leadership [957254] Funding
   Source: H2020 - Industrial Leadership
FX We would like to thank Silviu M & abreve;rii and Lucas Holten for their
   support with the manual analysis. This work has been partially supported
   by the European Union's Horizon 2020 Research and Innovation Programme
   under grant agree-ment No. 957254, project COSMOS (2021) .
CR Abdessalem R.B., 2020, 29 INT S SOFTW TEST, P88, DOI [10.1145/3395363.3397386, DOI 10.1145/3395363.3397386]
   Aleti A, 2018, J SYST SOFTWARE, V138, P222, DOI 10.1016/j.jss.2018.01.010
   [Anonymous], 2011, Wireless Communications and Signal Processing (WCSP), 2011 International Conference on
   [Anonymous], 2023, PMD: An extensible cross-language static code analyzer
   [Anonymous], 2021, COSMOS: DevOps for complex cyber-physical systems
   Ashibani Y, 2017, COMPUT SECUR, V68, P81, DOI 10.1016/j.cose.2017.04.005
   Avritzer A, 2021, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '21), P61, DOI 10.1145/3427921.3450246
   Birchler C, 2022, EUR CON SFTWR MTNCE, P164, DOI 10.1109/SANER53432.2022.00030
   Birchler C, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3533818
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bondi A.B., 2014, Foundations of Software and System Performance Engineering: Process, Performance Modeling, Requirements, Testing, Scalability, and Practice
   Brown William H., 1998, AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis, V1st
   Calinescu R, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P131, DOI 10.1109/ICSA.2017.16
   Chen H, 2017, J IND INTEGR MANAG, V2, DOI 10.1142/S2424862217500129
   Cito J, 2018, PROC IEEE ACM INT C, P41, DOI 10.1145/3183440.3183481
   Coppelia Robotics, 2010, CoppeliaSim
   Cortellessa V, 2014, SOFTW SYST MODEL, V13, P391, DOI 10.1007/s10270-012-0246-z
   De Lucia A, 2014, EMPIR SOFTW ENG, V19, P1383, DOI 10.1007/s10664-013-9285-5
   De Lucia A, 2013, INFORM SOFTWARE TECH, V55, P741, DOI 10.1016/j.infsof.2012.08.002
   DeFranco JF, 2021, COMPUTER, V54, P104, DOI 10.1109/MC.2021.3112319
   Dugan R.F., 2002, 3 INT WORKSH SOFTW P, P10
   Ernst M. D., 2003, WOD 2003 ICS WORKSH, P24
   Farley A, 2022, SIMUL MODEL PRACT TH, V120, DOI 10.1016/j.simpat.2022.102629
   Frechtling M, 2015, ACM T PROGR LANG SYS, V37, DOI 10.1145/2665073
   Gambi A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P27, DOI 10.1109/ICSE-Companion.2019.00030
   Gamma E., 1995, DESIGN PATTERNS ELEM
   Gamma Erich., 1994, DESIGN PATTERNS
   Gill H., 2006, NAT WORKSH CYB PHYS
   Greer C., 2019, Cyber-Physical Systems and Internet of Things, DOI 10.6028/NIST.SP.1900-202
   Hassan F, 2017, INT SYMP EMP SOFTWAR, P38, DOI 10.1109/ESEM.2017.11
   Jain P., 2021, Emergence of Cyber Physical System and IoT in Smart Automation and Robotics, P15
   Kaltenecker C, 2020, IEEE SOFTWARE, V37, P58, DOI 10.1109/MS.2020.2987024
   Kelley A., 2006, A Book on C: Programming in C, Vfourth
   Kharkar A, 2022, PROC INT CONF SOFTW, P1307, DOI 10.1145/3510003.3510153
   Khatami A, 2023, Arxiv, DOI [arXiv:2306.09665, 10.48550/arXiv.2306.09665, DOI 10.48550/ARXIV.2306.09665]
   Khatiri S, 2023, IEEE INT CONF SOFTW, P281, DOI 10.1109/ICST57152.2023.00034
   Lee E.A., 2017, Introduction to Embedded Systems: A Cyber-Physical Systems Approach, Vsecond, P537
   Lee EA, 2015, SENSORS-BASEL, V15, P4837, DOI 10.3390/s150304837
   Lee Jay, 2015, Manufacturing Letters, V3, P18, DOI 10.1016/j.mfglet.2014.12.001
   Li R, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1171, DOI 10.1109/ASE51524.2021.9678841
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Mariano VY, 2002, INT C PATT RECOG, P965, DOI 10.1109/ICPR.2002.1048198
   Mittal S., 2019, Complexity Challenges in Cyber Physical Systems: Using Modeling and Simulation (MS) to Support Intelligence, Adaptation and Autonomy
   Moesus N, 2019, COMM COM INF SC, V1077, P28, DOI 10.1007/978-3-030-29157-0_2
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mühlbauer S, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P652, DOI 10.1109/ASE.2019.00065
   Nistor A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P562, DOI 10.1109/ICSE.2013.6606602
   Okolie S., 2018, Int. J. Sci. Res. Comput. Sci. Eng. Inf. Technol. (IJSRCSEIT), P306
   Panichella A, 2019, LECT NOTES COMPUT SC, V11664, P11, DOI 10.1007/978-3-030-27455-9_2
   Panichella A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P314, DOI 10.1109/SANER.2016.97
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Parr T., 2013, The definitive ANTLR 4 reference
   Pinciroli R, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P104, DOI 10.1109/ICSA51549.2021.00018
   Pinciroli R, 2021, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '21), P93, DOI 10.1145/3427921.3450251
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Rowley J., 2017, ORG KNOWLEDGE INTRO
   Schugerl Philipp, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P194, DOI 10.1109/COMPSAC.2009.133
   Shackel B, 2009, INTERACT COMPUT, V21, P339, DOI 10.1016/j.intcom.2009.04.007
   Shah S., 2018, FIELD SERVICE ROBOTI, P621, DOI [10.1007/978-3-319-67361-5_40, DOI 10.1007/978-3-319-67361-5_40]
   Smith C., 2001, 27 INT C COMP MEAS G, P797
   Smith C. U., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P127, DOI 10.1145/350391.350420
   Smith CU, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P173, DOI 10.1145/3358960.3379138
   Smith Connie U., 2003, 29 INT C COMP MEAS G, P717
   Smith Connie U., 2002, Performance solutions: a practical guide to creating responsive, scalable software, V23
   Smith Connie U., 2002, International Computer Measurement Group Conference
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Triola MF, 2006, Elementary statistics
   Trubiani C, 2018, INFORM SOFTWARE TECH, V95, P329, DOI 10.1016/j.infsof.2017.11.016
   Trubiani Catia., 2014, Proceedings of the 5th ACM/SPEC International Conference on Performance Engineering, P75
   van Dinten I., 2023, Appendix: The slow and the furious? Performance antipattern detection in cyber-physical systems
   Velez M, 2021, PROC INT CONF SOFTW, P1072, DOI 10.1109/ICSE43902.2021.00100
   Velioglu S, 2017, 2017 IEEE/ACIS 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P271, DOI 10.1109/SERA.2017.7965737
   Wert A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P552, DOI 10.1109/ICSE.2013.6606601
   Wilkinson J. H., 1994, Rounding Errors in Algebraic Processes
   Woodside M., 2005, P 5 INT WORKSH SOFTW, P1, DOI [10.1145/1071021.1071022, 10.1145, DOI 10.1145/1071021.1071022]
   Wu G., 2016, Control Theory Technol, V14
   Xiao Long Wei, 2019, 2019 4th International Conference on Robotics and Automation Engineering (ICRAE), P130, DOI 10.1109/ICRAE48301.2019.9043821
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zampetti F, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111425
NR 81
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111904
DI 10.1016/j.jss.2023.111904
EA FEB 2024
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IR5A8
UT WOS:001168057900001
OA Green Published, hybrid
DA 2024-08-05
ER

PT J
AU Paradis, C
   Kazman, R
   Tamburri, D
AF Paradis, Carlos
   Kazman, Rick
   Tamburri, Damian
TI Analyzing the Tower of Babel with Kaiaulu
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Socio-smells; Socio-technical smells; Mining -software -repositories;
   Gitlog; Mailing -list; Issue -tracker; Identity -matching; Networks;
   Tools
ID SOCIOTECHNICAL CONGRUENCE
AB Context: An extensive body of work has examined socio-technical activities in software development; however, the availability of tools to enable these studies is limited. Aim: We extend Kaiaulu, a software package for Mining Software Repositories to enable a broad spectrum analysis of Social Smells and Motifs. Methods: We perform a literature review to identify what tools are available which implement graph construction methods and social smell metrics, contextualizing the contributions of our tool. Results: The few tools identified in the literature either leverage fewer parts of the software ecosystem, have been archived, or depend on components no longer maintained. Conclusion: The socio-technical features in Kaiaulu complement existing tools and related literature, while providing a simple architecture to facilitate ease or use, and ease of learning, benefitting reproducibility. Tool Repository: github.com/sailuh/kaiaulu
C1 [Paradis, Carlos; Kazman, Rick] Univ Hawaii, Honolulu, HI 96822 USA.
   [Tamburri, Damian] TU Eindhoven, Eindhoven, Netherlands.
C3 University of Hawaii System; Eindhoven University of Technology
RP Paradis, C (corresponding author), Univ Hawaii, Honolulu, HI 96822 USA.
EM carlosviansi@gmail.com
RI Tamburri, Damian Andrew/AAJ-2507-2021; Paradis, Carlos/AAA-3387-2020
OI Tamburri, Damian Andrew/0000-0003-1230-8961; Paradis,
   Carlos/0000-0002-3062-7547; Kazman, Rick/0000-0003-0392-2783
CR Ahammed T., 2020, CEUR Workshop Proceedings, V2767, P64
   Almarimi N, 2020, KNOWL-BASED SYST, V204, DOI 10.1016/j.knosys.2020.106201
   Amrit C., 2004, P 2004 ACM C COMPUTE
   [Anonymous], 2023, Socio-architectural analysis in Kaiaulu
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bock T, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3593803
   Broere C., 2021, Master's thesis
   Brooks FrederickP., 1978, The Mythical Man-Month: Essays on Softw, V1st
   Bullough A. K., 2017, P 3 ACM INT WORKSH S, P45, DOI DOI 10.1145/3041008.3041009
   Caballero-Espinosa E, 2023, INFORM SOFTWARE TECH, V153, DOI 10.1016/j.infsof.2022.107078
   Cataldo M, 2014, ADV COMPLEX SYST, V17, DOI 10.1142/S0219525914300011
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Cataldo Marcelo, 2006, P 2006 20 ANNIVERSAR, P353, DOI [10.1145/1180875.1180929, DOI 10.1145/1180875.1180929]
   Catolino G, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P77, DOI 10.1109/ICSE-SEIS52602.2021.00017
   Catolino G, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P25, DOI 10.1145/3377815.3381380
   Catolino G, 2020, IEEE SOFTWARE, V37, P10, DOI 10.1109/MS.2019.2944594
   Czerwonka J, 2013, IEEE SOFTWARE, V30, P64, DOI 10.1109/MS.2013.68
   De Stefano M., 2020, ICSE 20 42 INT C SOF, P703, DOI DOI 10.1145/3387940.3392204
   Dey S, 2022, IEEE WORK CONF MIN S, P717, DOI 10.1145/3524842.3528504
   Dou QY, 2022, INT J SOFTW ENG KNOW, V32, P1369, DOI 10.1142/S0218194022500528
   Eken B, 2021, SOFTWARE QUAL J, V29, P159, DOI 10.1007/s11219-020-09538-7
   Foggia P., 2001, PROC 3 IAPR TC 15 IN
   Herzig K, 2022, IEEE WORK CONF MIN S, P639, DOI 10.1145/3524842.3528514
   Huang ZJ, 2022, J COMPUT SCI TECH-CH, V37, P182, DOI 10.1007/s11390-021-1596-1
   Huang ZJ, 2021, INT C PROGRAM COMPRE, P230, DOI 10.1109/ICPC52881.2021.00030
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Kwan I, 2012, IEEE SOFTWARE, V29, P90, DOI 10.1109/MS.2012.3
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Magnoni S., 2016, An Approach to Measure Community Smells in Software Development Communities
   Sierra JM, 2018, INFORM SOFTWARE TECH, V94, P111, DOI 10.1016/j.infsof.2017.10.004
   Mauerer W, 2022, IEEE T SOFTWARE ENG, V48, P3159, DOI 10.1109/TSE.2021.3082074
   Mumtaz H, 2022, INT SYMP EMP SOFTWAR, P23, DOI 10.1145/3544902.3546249
   Mumtaz H, 2022, 15TH INTERNATIONAL CONFERENCE ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2022), P61, DOI 10.1145/3528579.3529181
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Palomba F., 2017, CEUR Workshop Proceedings, V2047, P18
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Palomba F, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110847
   Paradis C., 2021, Ph.D. thesis
   Paradis C., 2023, P 57 HAWAII INT C SY
   Paradis C, 2022, LECT NOTES COMPUT SC, V13365, P107, DOI 10.1007/978-3-031-15116-3_6
   Sarmento C, 2022, EUR CON SFTWR MTNCE, P273, DOI 10.1109/SANER53432.2022.00043
   Sviridov N, 2021, IEEE WORK CONF MIN S, P295, DOI 10.1109/MSR52588.2021.00041
   Tamburri DA, 2021, IEEE T SOFTWARE ENG, V47, P630, DOI 10.1109/TSE.2019.2901490
   Tamburri DA, 2019, IEEE T COMPUT SOC SY, V6, P20, DOI 10.1109/TCSS.2018.2886433
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Tamburri DA, 2020, SOFTWARE PRACT EXPER, V50, P1930, DOI 10.1002/spe.2874
   Valetto G., 2008, Balancing the value and risk of socio-technical congruence
   Valetto G., 2007, 4 INT WORKSHOP MININ, P25, DOI DOI 10.1109/MSR.2007.33
   Valverde S, 2005, PHYS REV E, V72, DOI 10.1103/PhysRevE.72.026107
   van Meijel J., 2021, Master's thesis
   Voria G, 2022, PROC IEEE INT CONF S, P469, DOI 10.1109/ICSME55016.2022.00061
   Warrick M, 2022, IEEE WORK CONF MIN S, P338, DOI 10.1145/3524842.3528479
NR 52
TC 0
Z9 0
U1 4
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111967
DI 10.1016/j.jss.2024.111967
EA JAN 2024
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JY0B0
UT WOS:001176591200001
DA 2024-08-05
ER

PT J
AU Huang, ZJ
   Yu, HQ
   Fan, GS
   Shao, ZQ
   Zhou, ZY
   Li, MC
AF Huang, Zijie
   Yu, Huiqun
   Fan, Guisheng
   Shao, Zhiqing
   Zhou, Ziyi
   Li, Mingchen
TI On the effectiveness of developer features in code smell prioritization:
   A replication study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code smell prioritization; Feature selection; Explainable AI;
   Replication study; Empirical software engineering
ID PREDICTION; IMPACT; RULE
AB Code smells are sub -optimal design and implementation choices that hinder software maintainability. Although significant progress has been achieved in code smell detection, numerous results are perceived as trivial by developers. In response, a code smell prioritization approach capturing developer features has been proposed by a prior study (MSR'20), and it outperformed a code metric baseline (KBS). The conclusion was validated on a dataset collected from original developers, which includes their comments on code smell priority. However, the low presence of developer aspects in the comments is inconsistent with the performance improvement after involving such features. To explain the inconsistency, we replicate the two studies by exploiting different feature selection methods and a model explanation technique called SHAP. Our major findings are: (i) Correlation -based Feature Selection should not be used as a default method since it could harm Krippendoff's Alpha by up to 72%, (ii) if better feature selection is applied, pure code metrics from KBS outperform the MSR features in 3 smells by up to 45% in Alpha, and (iii) the behavior of code metrics based models have more agreement with developers' comments. We suggest exploiting different feature selection methods and using code metrics to prioritize the 3 change -insensitive smells.
C1 [Huang, Zijie; Yu, Huiqun; Fan, Guisheng; Shao, Zhiqing; Zhou, Ziyi; Li, Mingchen] East China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai 200237, Peoples R China.
C3 East China University of Science & Technology
RP Huang, ZJ; Yu, HQ (corresponding author), East China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai 200237, Peoples R China.
EM hzj@mail.ecust.edu.cn; yhq@ecust.edu.cn
RI Huang, Zijie/JUF-4746-2023
OI Huang, Zijie/0000-0002-8911-9889
FU National Natural Science Foundation of China [62372174]; Natural Science
   Foundation of Shanghai, China [21ZR1416300]; Capacity Building Project
   of Local Universities Science and Technology Commission of Shanghai
   Municipality, China [22010504100]; Research Programme of National
   Engineering Laboratory for Big Data Distribution and Exchange
   Technologies, China; Shanghai Municipal Special Fund for Promoting High
   Quality Development, China [2021-GYHLW-01007]
FX This work was partially supported by the National Natural Science
   Foundation of China (No. 62372174) , the Natural Science Foundation of
   Shanghai, China (No. 21ZR1416300) , the Capacity Building Project of
   Local Universities Science and Technology Commission of Shanghai
   Municipality, China (No. 22010504100) , the Research Programme of
   National Engineering Laboratory for Big Data Distribution and Exchange
   Technologies, China, and the Shanghai Municipal Special Fund for
   Promoting High Quality Development, China (No. 2021-GYHLW-01007) .
CR Alazba A, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106648
   Aleithan R, 2021, PROC IEEE ACM INT C, P129, DOI 10.1109/ICSE-Companion52605.2021.00056
   Amidei J., 2019, P 12 INT C NATURAL L, P344, DOI [10.18653/v1/W19-8642, DOI 10.18653/V1/W19-8642]
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Brown William H., 1998, AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis, V1st
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Catolino G, 2020, EMPIR SOFTW ENG, V25, P49, DOI 10.1007/s10664-019-09739-0
   Chen X, 2021, IET SOFTW, V15, P75, DOI 10.1049/sfw2.12006
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Esteves G, 2020, AUTOMAT SOFTW ENG, V27, P369, DOI 10.1007/s10515-020-00277-4
   Fakhoury S, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P602, DOI 10.1109/SANER.2018.8330265
   Ferreira M, 2021, 2021 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE (SER&IP 2021), P41, DOI 10.1109/SER-IP52554.2021.00015
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P16, DOI 10.1109/MTD.2015.7332620
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   FOX J, 1992, J AM STAT ASSOC, V87, P178, DOI 10.2307/2290467
   Gosiewska A, 2020, Arxiv, DOI arXiv:1903.11420
   Guimaraes E, 2018, SOFTWARE PRACT EXPER, V48, P1077, DOI 10.1002/spe.2563
   Hall M., 2009, SIGKDD Explor. Newsl, V11, P10, DOI [10.1145/1656274.1656278, DOI 10.1145/1656274.1656278]
   Huang Z., 2019, 31 INT C SOFTWARE EN, P141
   Huang ZJ, 2022, J COMPUT SCI TECH-CH, V37, P182, DOI 10.1007/s11390-021-1596-1
   Ichtsis A, 2022, INTERNATIONAL CONFERENCE ON TECHNICAL DEBT 2022 (TECHDEBT 2022), P61, DOI 10.1145/3524843.3528089
   Jain S, 2021, SCI COMPUT PROGRAM, V212, DOI 10.1016/j.scico.2021.102713
   Jiarpakdee J, 2021, IEEE WORK CONF MIN S, P432, DOI 10.1109/MSR52588.2021.00055
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Kovacevic A, 2022, EXPERT SYST APPL, V204, DOI 10.1016/j.eswa.2022.117607
   KRIPPEND.K, 1970, EDUC PSYCHOL MEAS, V30, P61, DOI 10.1177/001316447003000105
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Liu H, 2021, IEEE T SOFTWARE ENG, V47, P1811, DOI 10.1109/TSE.2019.2936376
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Lundberg SM, 2017, ADV NEUR IN, V30
   Lundberg SM, 2020, NAT MACH INTELL, V2, P56, DOI 10.1038/s42256-019-0138-9
   Madeyski L, 2023, INFORM SOFTWARE TECH, V155, DOI 10.1016/j.infsof.2022.107112
   Maltbie N, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1032, DOI 10.1145/3468264.3468547
   Menzies T, 2019, INFORM SOFTWARE TECH, V112, P35, DOI 10.1016/j.infsof.2019.04.005
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Palomba F, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110847
   Palomba F, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Palomba F, 2017, 2017 IEEE INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P8, DOI 10.1109/MALTESQUE.2017.7882010
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Pecorelli F, 2020, IEEE WORK CONF MIN S, P220, DOI 10.1145/3379597.3387457
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Perera H, 2019, INT REQUIR ENG CONF, P404, DOI 10.1109/RE.2019.00053
   Rajapaksha D, 2022, IEEE T SOFTWARE ENG, V48, P2814, DOI 10.1109/TSE.2021.3070559
   Rajapaksha D, 2020, INFORM SCIENCES, V540, P221, DOI 10.1016/j.ins.2020.05.126
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V48, P2245, DOI 10.1109/TSE.2021.3056941
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   Sae-Lim N., 2017, XP2017 SCI WORKSHOPS, P1
   Sae-Lim N, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Sae-Lim N, 2018, IEICE T INF SYST, VE101D, P1733, DOI 10.1587/transinf.2017KBP0006
   Sae-Lim N, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1886
   Sae-Lim N, 2017, PROC IEEE INT CONF S, P484, DOI 10.1109/ICSME.2017.66
   Sharma T, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110936
   Shrikanth NC, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09957-5
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tian Y, 2016, EMPIR SOFTW ENG, V21, P2298, DOI 10.1007/s10664-015-9409-1
   Tsantalis N, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P4, DOI 10.1109/SANER.2018.8330192
   Vidal S, 2019, SCI COMPUT PROGRAM, V182, P64, DOI 10.1016/j.scico.2019.07.003
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   Wang GL, 2021, INT J SOFTW ENG KNOW, V31, P1329, DOI 10.1142/S0218194021500431
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Yang X., 2021, Collaborative Computing: Networking, Applications and Worksharing, P420
   Zhao KS, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106652
NR 79
TC 0
Z9 0
U1 6
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111968
DI 10.1016/j.jss.2024.111968
EA JAN 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IH8E4
UT WOS:001165519800001
DA 2024-08-05
ER

PT J
AU Cinque, M
   De Simone, L
   Ottaviano, D
AF Cinque, Marcello
   De Simone, Luigi
   Ottaviano, Daniele
TI Temporal isolation assessment in virtualized safety-critical
   mixed-criticality systems: A case study on Xen hypervisor
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Virtualization; Temporal isolation; Dependability; Xen; ARM; Software
   certification; Railway; EN50128
AB Today, we are witnessing the increasing use of the cloud and virtualization technologies, which are a prominent way for the industry to develop mixed-criticality systems (MCSs) and reduce SWaP-C factors (size, weight, power, and cost) by flexibly consolidating multiple critical and non-critical software on the same System-on-aChip (SoC). Unfortunately, using virtualization leads to several issues in assessing isolation aspects, especially temporal behaviors, which must be evaluated due to safety-related standards (e.g., EN50128 in the railway domain). This study proposes a systematic approach for verifying temporal isolation properties in virtualized MCSs to characterize and mitigate timing failures, which is a fundamental aspect of dependability. In particular, as proof of the effectiveness of our proposal, we exploited the real-time flavor of Xen hypervisor used to deploy a virtualized 2 out of 2-based MCS scenario provided in the framework of an academic-industrial partnership, in the context of the railway domain. The results point out that virtualization overhead must be carefully tuned in a real industrial scenario according to the several features provided by a specific hypervisor solution. Further, we identify a set of directions toward employing virtualization in industry in the context of ARM-based mixed-criticality systems.
C1 [Cinque, Marcello; De Simone, Luigi; Ottaviano, Daniele] Univ Napoli Federico II, DIETI, Via Claudio 21, I-80125 Naples, Italy.
C3 University of Naples Federico II
RP De Simone, L (corresponding author), Univ Napoli Federico II, DIETI, Via Claudio 21, I-80125 Naples, Italy.
EM luigi.desimone@unina.it
OI De Simone, Luigi/0000-0002-6008-2656; Ottaviano,
   Daniele/0000-0001-7667-419X
FU European Union-FSE-REACT-EU [17/06/2022, CN00000023];  [2014-2020
   DM1062/2021];  [18-I-15350a-6]
FX This work has been carried out within the framework of the EU-ROfusion
   Consortium, funded by the European Union via the Euratom Research and
   Training Programme (Grant Agreement No 101052200-EUROfusion) and within
   the MOST - Sustainable Mobility National Research Center and received
   funding from the European Union Next-GenerationEU (PIANO NAZIONALE DI
   RIPRESA E RESILIENZA (PNRR) - MISSIONE 4 COMPONENTE 2, INVESTIMENTO 1.4
   - D.D. 103317/06/2022, CN00000023) . The work by L. De Simone was
   supported by European Union-FSE-REACT-EU, PON Research and Innovation
   2014-2020 DM1062/2021 contract number 18-I-15350a-6. Views and opinions
   expressed are however those of the author (s) only and do not
   necessarily reflect those of the European Union or the European
   Commission. Neither the European Union nor the European Commission can
   be held responsible for them.r 17/06/2022, CN00000023) . The work by L.
   De Simone was supported by European Union-FSE-REACT-EU, PON Research and
   Innovation 2014-2020 DM1062/2021 contract number 18-I-15350a-6. Views
   and opinions expressed are however those of the author (s) only and do
   not necessarily reflect those of the European Union or the European
   Com-mission. Neither the European Union nor the European Commission can
   be held responsible for them.
CR Abeni L, 2020, J SYST ARCHITECT, V106, DOI 10.1016/j.sysarc.2020.101709
   AEEC, 2010, ARINC-653: Avionics application software standard interface part 1
   Alonso S, 2020, CON DES CIRC INTEGR, DOI 10.1109/dcis51330.2020.9268648
   Amendola A, 2023, REAL-TIME SYST, V59, P636, DOI 10.1007/s11241-023-09401-5
   August M., 2014, IDP: An Analysis of a Cache-Based Timing Side Channel Attack and a Countermeasure on PikeOS
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Barham P., 2003, Operating Systems Review, V37, P164, DOI 10.1145/1165389.945462
   Barletta M., 2024, ACM Trans. Embedd. Comput. Syst., V23, P1
   Barletta M, 2023, Depend Systems Netwo, P84, DOI 10.1109/DSN-S58398.2023.00029
   Barletta M, 2022, IEEE INT SYMP SOFTW, P134, DOI 10.1109/ISSREW55968.2022.00058
   Baumann C., 2009, DOCT S SYST SOFTW VE, P20
   BlackBerry Limited, 2021, Blackberry limited., are hypervisors the answer to the coming silicon shortages?
   Burns A., 2022, Tech. Rep
   CENELEC, 2011, EN 50128
   Cesarano C, 2022, IEEE INT SYMP SOFTW, P193, DOI 10.1109/ISSREW55968.2022.00067
   Cinque M, 2023, REAL-TIME SYST, V59, P534, DOI 10.1007/s11241-023-09410-4
   Cinque M, 2022, EUR D COMPUT CONF, P97, DOI 10.1109/EDCC57035.2022.00025
   Clinque M, 2022, FUTURE GENER COMP SY, V129, P315, DOI 10.1016/j.future.2021.12.002
   Crespo A., 2010, Proceedings of the 2010 Eighth European Dependable Computing Conference (EDCC 2010), P67, DOI 10.1109/EDCC.2010.18
   Dall C, 2016, CONF PROC INT SYMP C, P304, DOI 10.1109/ISCA.2016.35
   De Bock Y, 2020, INTERNET THINGS-NETH, V11, DOI 10.1016/j.iot.2020.100238
   De-RISC, 2019, De-RISC: Dependable Real-time Infrastructure for Safety-critical Computer
   Directorate-General for Mobility and Transport, 2024, Subsystems and Constituents of the ERTMS
   Elphinstone K, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P133, DOI 10.1145/2517349.2522720
   Fisher RA, 1936, BMJ-BRIT MED J, V1936, P554
   FuSa SIG, 2022, FuSa SIG/Presentations
   FuSa SIG, 2022, FuSa SIG Charted
   Ge Q, 2019, PROCEEDINGS OF THE FOURTEENTH EUROSYS CONFERENCE 2019 (EUROSYS '19), DOI 10.1145/3302424.3303976
   Hamelin E., 2020, EUR C EMB REAL TIM S
   Heiser G, 2019, PROCEEDINGS OF THE WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS (HOTOS '19), P23, DOI 10.1145/3317550.3321431
   Henkel J, 2006, RES POLICY, V35, P953, DOI 10.1016/j.respol.2006.04.010
   Hercules, 2020, High-performance real-time architectures for low-power embedded systems
   Hermann M, 2016, P ANN HICSS, P3928, DOI 10.1109/HICSS.2016.488
   HERMES2020, 2020, Qualification of High Performance Programmable Microprocessor and Development of Software Ecosystem
   Heron Simon, 2009, Network Security, V2009, P8, DOI 10.1016/S1353-4858(10)70006-4
   Huang XL, 2018, MOBILE NETW APPL, V23, P68, DOI 10.1007/s11036-017-0962-2
   Hughes A, 2019, INT SYMP OBJECT COMP, P181, DOI 10.1109/ISORC.2019.00041
   hwan jo yong, 2022, The International Journal of Advanced Smart Convergence, V11, P28, DOI 10.7236/IJASC.2022.11.1.28
   International Electrotechnical Commission, 1998, IEC 61508-3
   ISO, 2011, ISO 26262: Road vehicles-Functional safety, V6
   Jan SL, 2014, BRIT J MATH STAT PSY, V67, P72, DOI 10.1111/bmsp.12006
   Jiang Z, 2021, DES AUT CON, P1159, DOI 10.1109/DAC18074.2021.9586156
   Jiménez J, 2022, TECHNOLOGIES, V10, DOI 10.3390/technologies10030065
   King Colin Ian, 2017, Stress-ng
   Klein G, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P207
   Klingensmith N, 2019, PROCEEDINGS OF THE 2019 INTERNATIONAL CONFERENCE ON INTERNET OF THINGS DESIGN AND IMPLEMENTATION (IOTDI '19), P160, DOI 10.1145/3302505.3310078
   Klingensmith N, 2018, HOTMOBILE'18: PROCEEDINGS OF THE 19TH INTERNATIONAL WORKSHOP ON MOBILE COMPUTING SYSTEMS & APPLICATIONS, P101, DOI 10.1145/3177102.3177103
   Kloda T, 2019, IEEE REAL TIME, P1, DOI 10.1109/RTAS.2019.00009
   Kurth L., 2016, Xen project 4.7 released
   Leppinen H, 2017, IEEE AERO EL SYS MAG, V32, P4, DOI 10.1109/MAES.2017.160182
   Likely G., 2008, Embedded Linux Conference, V2, P27
   Lucas P., 2017, EUR C REAL TIM SYST
   Lucas P, 2018, PROC CONF OPEN INNOV, P231, DOI 10.23919/FRUCT.2018.8588018
   Martins J., 2020, OpenAccess Series in Informatics (OASIcs), V77
   Martins J, 2023, Arxiv, DOI arXiv:2303.11186
   Masmano M., 2009, REAL TIM LIN WORKSH, P263
   McFarland J, 2022, 37TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P3, DOI 10.1145/3477314.3506979
   Patel A, 2015, 23RD EUROMICRO INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED, AND NETWORK-BASED PROCESSING (PDP 2015), P682, DOI 10.1109/PDP.2015.108
   PikeOS, 2024, PikeOS product overview
   QEMU, 2024, IVSHMEM Documentation page
   QEMU, 2024, Homepage of QEMU
   Reghenzani F, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3297714
   Rete Ferroviaria Italiana (RFI), 2004, Schema di riferimento per lo sviluppo delle logiche acc. Tech. rep
   RTCA, 1992, DO-178B Software Considerations in Airborne Systems and Equipment Certification. Requirements and Technical Concepts for Aviation
   RTCA, 2011, DO-178C-Software Considerations in Airborne Systems and Equipment Certification
   Sabogal D, 2018, AEROSP CONF PROC
   Schulz B, 2022, IEEE T AERO ELEC SYS, V58, P206, DOI 10.1109/TAES.2021.3104941
   SELENE, 2019, SELENE: Self-monitored Dependable platform for High-Performance Safety-Critical Systems
   Shift2Rail, 2024, Home page of Shit2Rail projects
   Siemens AG, 2024, Jailhouse hypervisor source code
   Simone L.D., 2024, IEEE Trans. Netw. Serv. Manag, P1, DOI [10.1109/TNSM.2024.3404560, DOI 10.1109/TNSM.2024.3404560]
   Sinha S, 2021, ACM T EMBED COMPUT S, V20, DOI 10.1145/3477013
   Sisu Xi, 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P39
   Stabellini S., 2014, Xen arm with virtualization extensions white paper
   STAHLE L, 1989, CHEMOMETR INTELL LAB, V6, P259, DOI 10.1016/0169-7439(89)80095-4
   Suzuki N, 2013, IEEE INT C COMPUT, P685, DOI 10.1109/CSE.2013.106
   The Linux Foundation, 2024, Cyclictest
   The Linux Foundation, 2022, Arinc 653 scheduler-xen
   The Linux Foundation, 2023, Xen Project 4.18 Feature List
   The Linux Foundation, 2018, White Paper
   The Linux Foundation, 2015, XenBus
   The Linux Foundation, 2024, Homepage of LF Edge Foundation
   The Linux Foundation, 2022, Technical details of preemptRt patch
   Toumassian S, 2016, 2016 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P851, DOI 10.1109/ICACCI.2016.7732152
   Tran L, 2021, DES AUTOM EMBED SYST, V25, P177, DOI 10.1007/s10617-021-09248-8
   Verbeek F, 2015, LECT NOTES COMPUT SC, V9058, P375, DOI 10.1007/978-3-319-17524-9_26
   West R, 2016, ACM T COMPUT SYST, V34, DOI 10.1145/2935748
   Wiki.Xenproject, 2019, Xen wiki-rtds-based-scheduler
   WindRiver Systems Inc, 2016, WindRiver White Paper, P4
   Wolf W, 2008, IEEE T COMPUT AID D, V27, P1701, DOI 10.1109/TCAD.2008.923415
   Xu M., 2013, Rt-xen: Real-time virtualization based on xen
   Ye Y, 2014, INT CONFER PARA, P381, DOI 10.1145/2628071.2628104
   Yun H, 2013, IEEE REAL TIME, P55, DOI 10.1109/RTAS.2013.6531079
   Zhang ZG, 2021, 2021 IEEE CONFERENCE ON VIRTUAL REALITY AND 3D USER INTERFACES ABSTRACTS AND WORKSHOPS (VRW 2021), P530, DOI [10.1109/VRW52623.2021.00147, 10.1109/ICPADS53394.2021.00072]
   Zuepke A, 2023, IEEE REAL TIME, P235, DOI 10.1109/RTAS58335.2023.00026
NR 95
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112147
DI 10.1016/j.jss.2024.112147
EA JUL 2024
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YI2D7
UT WOS:001267786000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Swarna, KC
   Mathews, NS
   Vagavolu, D
   Chimalakonda, S
AF Swarna, Karthik Chandra
   Mathews, Noble Saji
   Vagavolu, Dheeraj
   Chimalakonda, Sridhar
TI On the impact of multiple source code representations on software
   engineering tasks - An empirical study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Source code representation; Abstract Syntax Tree; Control Flow Graph;
   Program Dependence Graph; Code embedding; Method naming
ID GRAPH
AB Efficiently representing source code is crucial for various software engineering tasks such as code classification and clone detection. Existing approaches primarily use Abstract Syntax Tree (AST), and only a few focus on semantic graphs such as Control Flow Graph (CFG) and Program Dependency Graph (PDG), which contain information about source code that AST does not. Even though some works tried to utilize multiple representations, they do not provide any insights about the costs and benefits of using multiple representations. The primary goal of this paper is to discuss the implications of utilizing multiple source code representations, specifically AST, CFG, and PDG. We modify an AST path -based approach to accept multiple representations as input to an attention -based model. We do this to measure the impact of additional representations (such as CFG and PDG) over AST. We evaluate our approach on three tasks: Method Naming, Program Classification, and Clone Detection. Our approach increases the performance on these tasks by 11% (F1), 15.7% (Accuracy), and 9.3% (F1), respectively, over the baseline. In addition to the effect on performance, we discuss timing overheads incurred with multiple representations. We envision that this work can provide a base for researchers to explore and experiment with a variety of source code representations for software engineering tasks.
C1 [Swarna, Karthik Chandra; Mathews, Noble Saji; Vagavolu, Dheeraj; Chimalakonda, Sridhar] Indian Inst Technol Tirupati, Dept Comp Sci & Engn, Res Intelligent Software & Human Analyt RISHA Lab, Tirupati, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Tirupati
RP Chimalakonda, S (corresponding author), Indian Inst Technol Tirupati, Dept Comp Sci & Engn, Res Intelligent Software & Human Analyt RISHA Lab, Tirupati, India.
EM cs17b026@iittp.ac.in; ch19b023@iittp.ac.in; cs17b028@iittp.ac.in;
   ch@iittp.ac.in
OI Mathews, Noble Saji/0000-0003-2266-8848; Chimalakonda,
   Sridhar/0000-0003-0818-8178
CR Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Alon U., 2018, arXiv
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   Phan AV, 2017, PROC INT C TOOLS ART, P45, DOI 10.1109/ICTAI.2017.00019
   Bajracharya S, 2014, SCI COMPUT PROGRAM, V79, P241, DOI 10.1016/j.scico.2012.04.008
   Bandanau D, 2016, INT CONF ACOUST SPEE, P4945, DOI 10.1109/ICASSP.2016.7472618
   Barchi F, 2021, ENG APPL ARTIF INTEL, V97, DOI 10.1016/j.engappai.2020.104075
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bui NDQ, 2021, PROC INT CONF SOFTW, P1186, DOI 10.1109/ICSE43902.2021.00109
   Chunrong Fang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P516, DOI 10.1145/3395363.3397362
   Compton R, 2020, IEEE WORK CONF MIN S, P243, DOI 10.1145/3379597.3387445
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Frantzeskou G, 2008, J SYST SOFTWARE, V81, P447, DOI 10.1016/j.jss.2007.03.004
   Gilda S, 2017, INT JOINT CONF COMP
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   Li Y, 2021, PROC INT CONF SOFTW, P661, DOI 10.1109/ICSE43902.2021.00067
   Li Y, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360588
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   Ling X, 2021, ACM T KNOWL DISCOV D, V15, DOI 10.1145/3447571
   [刘尚鹏 Liu Shangpeng], 2022, [高分子通报, Polymer Bulletin], P1
   Long T, 2022, Arxiv, DOI arXiv:2202.12481
   Luong MT, 2015, Arxiv, DOI arXiv:1508.04025
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Omari S, 2020, ADV INTELL SYST COMP, V1070, P661, DOI 10.1007/978-3-030-32523-7_49
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Reza S.M., 2020, P 23 ACM IEEE INT C, P1
   Roy C. K., 2007, A survey on software clone detection research
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Shi K, 2020, J COMPUT LANG, V59, DOI 10.1016/j.cola.2020.100979
   Shi Y, 2021, LAK21 CONFERENCE PROCEEDINGS: THE ELEVENTH INTERNATIONAL CONFERENCE ON LEARNING ANALYTICS & KNOWLEDGE, P606, DOI 10.1145/3448139.3448205
   Shobha G., 2021, Advances in Intelligent Systems and Computing, P645, DOI [10.1007/978-981-33-4367-261, DOI 10.1007/978-981-33-4367-261]
   Siow J.K., 2022, arXiv
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Sun X, 2014, IFIP ADV INF COMM TE, V428, P142
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Vagavolu D, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1296, DOI 10.1109/ASE51524.2021.9678551
   van Dam JK, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P624, DOI 10.1109/SANER.2016.92
   Vytovtov P, 2019, PROC CONF OPEN INNOV, P518, DOI [10.23919/fruct.2019.8711909, 10.23919/FRUCT.2019.8711909]
   Wang WH, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3409331
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Xiao D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10098-y
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang JL, 2020, INT C PROGRAM COMPRE, P219, DOI 10.1145/3387904.3389281
   Zhang KC, 2022, Arxiv, DOI arXiv:2012.04188
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 56
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111941
DI 10.1016/j.jss.2023.111941
EA JAN 2024
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID7A9
UT WOS:001164441900001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Dong, ZM
   Hu, Q
   Zhang, ZY
   Guo, YJ
   Cordy, M
   Papadakis, M
   Le Traon, Y
   Zhao, JJ
AF Dong, Zeming
   Hu, Qiang
   Zhang, Zhenya
   Guo, Yuejun
   Cordy, Maxime
   Papadakis, Mike
   Le Traon, Yves
   Zhao, Jianjun
TI On the effectiveness of hybrid pooling in mixup-based graph learning for
   language processing
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Hybrid pooling; Data augmentation; Graph learning; Manifold-mixup;
   Language processing
AB Graph neural network (GNN) -based graph learning has been popular in natural language and programming language processing, particularly in text and source code classification. Typically, GNNs are constructed by incorporating alternating layers which learn transformations of graph node features, along with graph pooling layers that use graph pooling operators (e.g., Max-pooling) to effectively reduce the number of nodes while preserving the semantic information of the graph. Recently, to enhance GNNs in graph learning tasks, ManifoldMixup , a data augmentation technique that produces synthetic graph data by linearly mixing a pair of graph data and their labels, has been widely adopted. However, the performance of Manifold-Mixup can be highly affected by graph pooling operators, and there have not been many studies that are dedicated to uncovering such affection. To bridge this gap, we take an early step to explore how graph pooling operators affect the performance of Mixup-based graph learning. To that end, we conduct a comprehensive empirical study by applying Manifold-Mixup to a formal characterization of graph pooling based on 11 graph pooling operations (9 hybrid pooling operators, 2 non-hybrid pooling operators). The experimental results on both natural language datasets (Gossipcop, Politifact) and programming language datasets (JAVA250, Python800) demonstrate that hybrid pooling operators are more effective for Manifold-Mixup than the standard Max-pooling and the stateof-the-art graph multiset transformer (GMT) pooling, in terms of producing more accurate and robust GNN models. Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board .
C1 [Dong, Zeming] Kyushu Univ, Fukuoka, Fukuoka, Japan.
   [Zhang, Zhenya] Kyushu Univ, Fac Informat Sci & ElectricalEngineering, Fukuoka, Fukuoka, Japan.
   [Zhao, Jianjun] Kyushu Univ, Sch Informat Sci & Elect Engn, Fukuoka, Fukuoka, Japan.
   [Hu, Qiang; Le Traon, Yves] Univ Luxembourg, Luxembourg, Luxembourg.
   [Cordy, Maxime; Papadakis, Mike] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, Luxembourg, Luxembourg.
   [Guo, Yuejun] Luxembourg Inst Sci & Technol, Luxembourg, Luxembourg.
C3 Kyushu University; Kyushu University; Kyushu University; University of
   Luxembourg; University of Luxembourg; Luxembourg Institute of Science &
   Technology
RP Hu, Q (corresponding author), Univ Luxembourg, Luxembourg, Luxembourg.
EM dongzm9312@gmail.com; qianghu0515@gmail.com
RI Guo, Yuejun/F-2873-2016
OI Guo, Yuejun/0000-0002-5535-2420; Zhao, Jianjun/0000-0001-8083-4352;
   Zhang, Zhenya/0000-0002-3854-9846
FU JSPS KAKENHI, Japan [JP23H03372, JP24K02920]; JST-Mirai Program
   [JPMJMI20B8]
FX This research is supported in part by JSPS KAKENHI Grant No. JP23H03372
   and No. JP24K02920, Japan. The research is also supported in part by
   JST-Mirai Program Grant No. JPMJMI20B8.
CR Allamanis M., INT C LEARN REPR
   Allamanis M, 2021, ADV NEUR IN, V34
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Armstrong RA, 2014, OPHTHAL PHYSL OPT, V34, P502, DOI 10.1111/opo.12131
   Atwood J., 2016, Advances in neural information process- ing systems, P1993, DOI DOI 10.5555/3157096.3157320
   Baek Jinheon, 2021, 9 INT C LEARN REPR I
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Bianchi FM, 2020, PR MACH LEARN RES, V119
   Cangea C, 2018, Arxiv, DOI arXiv:1811.01287
   Chen JA, 2023, T ASSOC COMPUT LING, V11, P191, DOI 10.1162/tacl_a_00542
   Chen JA, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P2147
   Dinella E., 2020, INT C LEARN REPR
   Dong ZM, 2024, KNOWL-BASED SYST, V285, DOI 10.1016/j.knosys.2023.111328
   Dong ZM, 2023, Soft Anal Evol Reeng, P379, DOI 10.1109/SANER56733.2023.00043
   Dong ZM, 2023, Arxiv, DOI arXiv:2303.06808
   Dou YT, 2021, SIGIR '21 - PROCEEDINGS OF THE 44TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P2051, DOI 10.1145/3404835.3462990
   Fabian B, 2015, COMPUT IND ENG, V88, P151, DOI 10.1016/j.cie.2015.06.009
   Feng W., 2020, NEURIPS, V33, P22092
   Fey M., 2019, ICLR WORKSHOP REPRES
   Gao HY, 2019, PR MACH LEARN RES, V97
   Gilmer J, 2017, PR MACH LEARN RES, V70
   Grattarola D, 2024, IEEE T NEUR NET LEAR, V35, P2708, DOI 10.1109/TNNLS.2022.3190922
   Guo HY, 2019, Arxiv, DOI arXiv:1905.08941
   Hamilton WL, 2017, ADV NEUR IN, V30
   Huang LZ, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3444
   Kingma D. P., 2014, arXiv
   Kipf T.N., 2017, INT C LEARN REPR, P1
   Knyazev B, 2019, ADV NEUR IN, V32
   Konno R., 2020, Proceedings of the 28th International Conference on Computational Linguistics, P4956, DOI [10.18653/v1/2020.coling-main.435, 10.18653/v1/2020.coling-main]
   Lee J, 2019, PR MACH LEARN RES, V97
   Li J, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P972, DOI 10.1145/3308558.3313461
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Ma Y, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P723, DOI 10.1145/3292500.3330982
   Mesquita D., 2020, P 34 INT C NEUR INF
   Neyshabur B, 2017, ADV NEUR IN, V30
   Oehlers M, 2021, MATHEMATICS-BASEL, V9, DOI 10.3390/math9080895
   Papp PA, 2021, ADV NEUR IN, V34
   Puri R., 2021, arXiv
   Ranjan E, 2020, AAAI CONF ARTIF INTE, V34, P5470
   Romero A., 2018, INT C LEARN REPR, P2920, DOI DOI 10.48550/ARXIV.1710.10903
   Rong Yu, 2020, INT C LEARN REPR
   Shorten C, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0197-0
   Simonovsky M, 2017, PROC CVPR IEEE, P29, DOI 10.1109/CVPR.2017.11
   Sun L C, 2020, PROC 28 INT C COMPUT, P3436, DOI [DOI 10.18653/V1/2020.COLING-MAIN.305, 10.18653/v1/2020.coling-main.305]
   Tu YH, 2000, NATURE, V406, P353, DOI 10.1038/35019222
   Nguyen VA, 2022, PROC IEEE ACM INT C, P178, DOI [10.1109/ICSE-Companion55297.2022.9793807, 10.1145/3510454.3516865]
   Verma V, 2019, PR MACH LEARN RES, V97
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/saner48275.2020.9054857, 10.1109/SANER48275.2020.9054857]
   Wang Y., 2020, arXiv
   Wang Y.G., 2019, Haarpooling: Graph pooling with compressive haar basis
   Wang YW, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P3663, DOI 10.1145/3442381.3449796
   Woolson R. F., 2007, International Encyclopedia of Statistical Science, P1, DOI 10.1002/0470011815. b2a15177
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   Xu H, 2012, MACH LEARN, V86, P391, DOI 10.1007/s10994-011-5268-1
   Xu K, 2019, PROC INT CONF PARAL, DOI 10.1145/3337821.3337923
   Yao L, 2019, AAAI CONF ARTIF INTE, P7370
   Ying R, 2018, ADV NEUR IN, V31
   Yoon S, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, ACL-IJCNLP 2021, P3225
   Yu SW, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111304
   Yuan H., 2020, INT C LEARN REPR
   Yun S, 2019, IEEE I CONF COMP VIS, P6022, DOI 10.1109/ICCV.2019.00612
   Zhang H., 2018, INT C LEARNING REPRE
   Zhang L., 2022, PMLR, V162, P26135
   Zhang Linfeng, 2021, INT C LEARN REPR
   Zhang MH, 2018, AAAI CONF ARTIF INTE, P4438
   Zhang RZ, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P8566
   Zhang YF, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P334
   Zhao T., 2023, IEEE Data Eng. Bull.
   Zhou Y., 2019, P 33 INT C NEUR INF
NR 69
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112139
DI 10.1016/j.jss.2024.112139
EA JUN 2024
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XI1S8
UT WOS:001260967800001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Orts, F
   Paulavicius, R
   Filatovas, E
AF Orts, Francisco
   Paulavicius, Remigijus
   Filatovas, Ernestas
TI Quantum circuit optimization of an integer divider
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Quantum divider; Quantum circuit; Clifford plus T gates; Quantum circuit
   optimization
ID ALGORITHMS
AB Efficient arithmetic operations in quantum circuits play a vital role in the implementation of quantum algorithms. Quantum circuits constructed exclusively using gates of the Clifford+T group are compatible with error detection and correction codes available in the quantum literature. However, the T gate, a member of this group, has a higher cost compared to other gates, making it crucial to minimize its usage to reduce circuit expenses. While the T gate cannot be entirely avoided since the Clifford group is not a universal set of gates, circuit optimization can effectively reduce the number of T gates required for implementation. In this work, we present a novel divider circuit for quantum computing that focuses on reducing the number of T gates while maintaining a reasonable number of qubits for this type of operation. To achieve this, we introduce variants of minor circuits, including a comparator and two types of subtractors. These circuits are based on published literature but undergo modifications to optimize their resource utilization for performing the division operation. The obtained results demonstrate that the proposed divider circuit outperforms other currently published divider circuits in terms of T gate usage, highlighting its efficiency and potential practicality in quantum algorithms.
C1 [Orts, Francisco; Paulavicius, Remigijus; Filatovas, Ernestas] Vilnius Univ, Inst Data Sci & Digital Technol, Akademijos Str 4, LT-08412 Vilnius, Lithuania.
C3 Vilnius University
RP Orts, F (corresponding author), Vilnius Univ, Inst Data Sci & Digital Technol, Akademijos Str 4, LT-08412 Vilnius, Lithuania.
EM francisco.gomez@mif.vu.lt; remigijus.paulavicius@mif.vu.lt;
   ernestas.filatovas@mif.vu.lt
RI Orts, Francisco/X-6626-2019
OI Orts, Francisco/0000-0002-4312-3671
CR Khalid U, 2024, IEEE NETWORK, V38, P112, DOI 10.1109/MNET.2023.3328892
   Khosropour A., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P1037, DOI 10.1109/ITNG.2011.177
   Kissinger A, 2020, Arxiv, DOI arXiv:1903.10477
   Kissinger A, 2022, Arxiv, DOI arXiv:2202.09202
   Li HS, 2020, SCI CHINA PHYS MECH, V63, DOI 10.1007/s11433-020-1582-8
   Litinski D, 2019, QUANTUM-AUSTRIA, V3, DOI 10.22331/q-2019-12-02-205
   López LO, 2023, J SUPERCOMPUT, V79, P12549, DOI 10.1007/s11227-023-05148-9
   Mohammadi M, 2009, QUANTUM INF PROCESS, V8, P297, DOI 10.1007/s11128-009-0106-0
   Muñoz-Coreas E, 2019, IEEE T COMPUT, V68, P729, DOI 10.1109/TC.2018.2882774
   Nielsen M. A., 2011, Quantum Computation and Quantum Information
   Orts F, 2021, J SUPERCOMPUT, V77, P8433, DOI 10.1007/s11227-020-03576-5
   Orts F, 2020, J NETW COMPUT APPL, V170, DOI 10.1016/j.jnca.2020.102810
   Orts F, 2023, QUANTUM INF PROCESS, V22, DOI 10.1007/s11128-023-04096-w
   Orts F, 2023, EPJ QUANTUM TECHNOL, V10, DOI 10.1140/epjqt/s40507-023-00174-1
   Orts F, 2019, BALT J MOD COMPUT, V7, P99, DOI 10.22364/bjmc.2019.7.1.08
   Paler A, 2017, QUANTUM SCI TECHNOL, V2, DOI 10.1088/2058-9565/aa66eb
   Pauli W., 1988, Zur Quantenmechanik des Magnetischen Elektrons
   Pérez-Salinas A, 2020, QUANTUM-AUSTRIA, V4, DOI 10.22331/q-2020-02-06-226
   Preskill J, 2018, QUANTUM-AUSTRIA, V2, DOI 10.22331/q-2018-08-06-79
   Romero J, 2021, ADV QUANTUM TECHNOL, V4, DOI 10.1002/qute.202000003
   Selinger P, 2013, PHYS REV A, V87, DOI 10.1103/PhysRevA.87.042302
   Shende VV, 2005, ASIA S PACIF DES AUT, P272, DOI 10.1145/1120725.1120847
   Shor PW, 1997, SIAM J COMPUT, V26, P1484, DOI 10.1137/S0036144598347011
   Thapliyal H., 2011, 2011 IEEE 11th International Conference on Nanotechnology (IEEE-NANO), P1430, DOI 10.1109/NANO.2011.6144350
   Thapliyal H, 2021, IEEE T EMERG TOP COM, V9, P1045, DOI 10.1109/TETC.2019.2910870
   Thomsen MK, 2010, J PHYS A-MATH THEOR, V43, DOI 10.1088/1751-8113/43/38/382002
   Toffoli T., 1980, Automata, Languages and Programming, Seventh Colloquium, P632
   Van Dam W., 2000, arXiv
   Van Dam W, 2006, SIAM J COMPUT, V36, P763, DOI 10.1137/S009753970343141X
   Wang SB, 2020, QUANTUM INF PROCESS, V19, DOI 10.1007/s11128-020-02855-7
   Wei AY, 2020, PHYS REV D, V101, DOI 10.1103/PhysRevD.101.094015
   Xia HY, 2020, MOD PHYS LETT A, V35, DOI 10.1142/S0217732320500492
   Xia HY, 2019, QUANTUM INF PROCESS, V18, DOI 10.1007/s11128-019-2334-2
   Xia HY, 2018, INT J THEOR PHYS, V57, P3727, DOI 10.1007/s10773-018-3886-0
   Yuan SZ, 2022, QUANTUM INF PROCESS, V21, DOI 10.1007/s11128-022-03523-8
   Zahedinejad E, 2015, PHYS REV LETT, V114, DOI 10.1103/PhysRevLett.114.200502
   Zhang SX, 2023, QUANTUM-AUSTRIA, V7, DOI 10.22331/q-2023-02-02-912
   Zhou RG, 2021, INT J THEOR PHYS, V60, P2115, DOI 10.1007/s10773-021-04829-6
NR 38
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
AR 112091
DI 10.1016/j.jss.2024.112091
EA MAY 2024
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TS3P8
UT WOS:001243212600001
DA 2024-08-05
ER

PT J
AU Gharibi, R
   Sadreddini, MH
   Fakhrahmad, SM
AF Gharibi, Reza
   Sadreddini, Mohammad Hadi
   Fakhrahmad, Seyed Mostafa
TI T5APR: Empowering automated program repair across languages through
   checkpoint ensemble
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Automated program repair; Neural program repair; Deep learning;
   Transformer
AB Automated program repair (APR) using deep learning techniques has become an important area of research in recent years, aiming to automatically generate bug -fixing patches that can improve software reliability and maintainability. However, most existing methods either target a single language or require high computational resources to train multilingual models. In this paper, we propose T5APR, a novel neural program repair approach that provides a unified solution for bug fixing across multiple programming languages. T5APR leverages CodeT5, a powerful pre -trained text -to -text transformer model, and adopts a checkpoint ensemble strategy to improve patch recommendation. We conduct comprehensive evaluations on six wellknown benchmarks in four programming languages (Java, Python, C, JavaScript), demonstrating T5APR's competitiveness against state-of-the-art techniques. T5APR correctly fixes 1,985 bugs, including 1,442 bugs that none of the compared techniques has fixed. We further support the effectiveness of our approach by conducting detailed analyses, such as comparing the correct patch ranking among different techniques. The findings of this study demonstrate the potential of T5APR for use in real -world applications and highlight the importance of multilingual approaches in the field of APR.
C1 [Gharibi, Reza; Sadreddini, Mohammad Hadi; Fakhrahmad, Seyed Mostafa] Shiraz Univ, Sch Elect & Comp Engn, Dept Comp Sci & Engn & IT, Shiraz, Iran.
C3 Shiraz University
RP Fakhrahmad, SM (corresponding author), Shiraz Univ, Sch Elect & Comp Engn, Dept Comp Sci & Engn & IT, Shiraz, Iran.
EM gharibi@cse.shirazu.ac.ir; sadredin@shirazu.ac.ir;
   fakhrahmad@shirazu.ac.ir
CR Afzal A, 2021, IEEE T SOFTWARE ENG, V47, P2162, DOI 10.1109/TSE.2019.2944914
   Akiba T, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2623, DOI 10.1145/3292500.3330701
   Allamanis Miltiadis, 2021, Advances in Neural Information Processing Systems, V34, P27865
   Berabi B, 2021, PR MACH LEARN RES, V139
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P1385, DOI 10.1109/TSE.2020.3020502
   Chen HG, 2017, Arxiv, DOI arXiv:1710.03282
   Chen ZM, 2018, Arxiv, DOI arXiv:1807.03200
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Ding YRB, 2020, IEEE INT CONF AUTOM, P275, DOI 10.1145/3324884.3416587
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Gao X, 2022, Arxiv, DOI arXiv:2211.12787
   Gyimesi P, 2019, IEEE INT CONF SOFTW, P90, DOI 10.1109/ICST.2019.00019
   Hanam Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P144, DOI 10.1145/2950290.2950308
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hu Edward J, 2021, INT C LEARN REPR
   Huang K, 2023, Arxiv, DOI arXiv:2303.18184
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jiang AQ, 2023, Arxiv, DOI arXiv:2310.06825
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jiang N, 2023, PROC INT CONF SOFTW, P1251, DOI 10.1109/ICSE48619.2023.00111
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Joshi H, 2023, AAAI CONF ARTIF INTE, P5131
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kang S, 2022, INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR (APR 2022), P8, DOI 10.1145/3524459.3527343
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Lhoest Q, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P175
   Li Y, 2022, PROC INT CONF SOFTW, P511, DOI 10.1145/3510003.3510177
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Liang JJ, 2019, PROC INT SYMP SOFTW, P58, DOI 10.1109/ISSRE.2019.00016
   Lin Derrick, 2017, P COMP ACM SIGPLAN I, P55, DOI [10.1145/3135932, DOI 10.1145/3135932]
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Loshchilov I., 2018, INT C LEARN REPR
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Madeiral F, 2021, IEEE WORK CONF MIN S, P510, DOI 10.1109/MSR52588.2021.00064
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/SANER.2019.8667991, 10.1109/saner.2019.8667991]
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Monperrus Martin, 2018, Technical Report hal-01956501
   Noller Y, 2022, PROC INT CONF SOFTW, P2228, DOI 10.1145/3510003.3510040
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Paszke A, 2019, ADV NEUR IN, V32
   Post Matt, 2018, P 3 C MACH TRANSL RE, P186, DOI [10.18653/v1/W18-6319, DOI 10.18653/V1/W18-6319]
   Prenner JA, 2022, INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR (APR 2022), P69, DOI 10.1145/3524459.3527351
   Qi Z, 2015, P 2015 INT S SOFTWAR, P24, DOI [DOI 10.1145/2771783.2771791, 10.1145/2771783.2771791, 10.1145/2771783]
   Raffel C, 2020, J MACH LEARN RES, V21
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Sobania D, 2023, 2023 IEEE/ACM INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR, APR, P23, DOI 10.1109/APR59189.2023.00012
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Urli S, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P95, DOI 10.1145/3183519.3183540
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Widyasari R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1556, DOI 10.1145/3368089.3417943
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Wong CP, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P354, DOI 10.1145/3468264.3468600
   Yang DH, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10003-7
   Yasunaga M., 2020, PMLR, P10799
   Yasunaga M., 2021, PMLR, P11941
   Ye H, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556926
   Ye H, 2022, PROC INT CONF SOFTW, P1506, DOI 10.1145/3510003.3510222
   Ye H, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09920-w
   Ye H, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110825
   Ye He, 2024, P 46 IEEEACM INT C S, P1, DOI DOI 10.1145/3597503.3623337
   Yuan W, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P678, DOI 10.1145/3533767.3534219
   Zhang QJ, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3631974
   Zhong WK, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556943
   Zhong WK, 2022, 13TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, INTERNETWARE 2022, P96, DOI 10.1145/3545258.3545268
   Zhu QH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P341, DOI 10.1145/3468264.3468544
   Zugner Daniel, 2020, INT C LEARN REPR
NR 81
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112083
DI 10.1016/j.jss.2024.112083
EA MAY 2024
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TD6L9
UT WOS:001239362500001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Cai, ZL
   Cai, YW
   Chen, X
   Lu, GL
   Pei, WL
   Zhao, JJ
AF Cai, Zhilong
   Cai, Yongwei
   Chen, Xiang
   Lu, Guilong
   Pei, Wenlong
   Zhao, Junjie
TI CSVD-TF: Cross-project software vulnerability detection with TrAdaBoost
   by fusing expert metrics and semantic metrics
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Cross-project software vulnerability detection; Transfer learning;
   Expert metrics; Semantic metrics; Metric fusion
AB Recently, deep learning -based software vulnerability detection (SVD) approaches have achieved promising performance. However, the scarcity of high -quality labeled SVD data influences the practicality of these approaches. Therefore, cross -project software vulnerability detection (CSVD) has gradually attracted the attention of researchers since CSVD can utilize the labeled SVD data from the source project to construct an effective CSVD model for the target project via transfer learning. However, if a certain number of program modules in the target project can be labeled by security experts, it can help to improve CSVD model performance by effectively utilizing similar SVD data in the source project. For this more practical CSVD scenario, we propose a novel approach CSVD-TF via the transfer learning method TrAdaBoost. Moreover, we find expert metrics and semantic metrics extracted from the functions show a certain complementary in our investigated scenario. Therefore, we utilize a model -level metric fusion method to further improve the performance. We perform a comprehensive study to evaluate the effectiveness of CSVD-TF on four real -world projects. Our empirical results show that CSVD-TF can achieve performance improvements of 7.5% to 24.6% in terms of AUC when compared to five state-of-the-art baselines.
C1 [Cai, Zhilong; Cai, Yongwei; Chen, Xiang; Lu, Guilong; Pei, Wenlong; Zhao, Junjie] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
C3 Nantong University
RP Chen, X (corresponding author), Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
EM zhil.cai@outlook.com; zhil.cai@outlook.com; xchencs@ntu.edu.cn;
   guil.lu@outlook.com; wl.pei@outlook.com; zhaojunjie225@gmail.com
OI chen, xiang/0000-0002-1180-3891; Lu, Guilong/0009-0009-8336-9009
FU National Natural Science Foundation of China [62202419]
FX <B>Acknowledgments</B> The authors would like to thank the anonymous
   reviewers for their insightful comments and suggestions, which can
   substantially improve the quality of this work. Zhilong Cai and Yongwei
   Cai have contributed equally to this work and they are co-first authors.
   Xiang Chen is the corresponding author. This work is supported in part
   by the National Natural Science Foundation of China (Grant no 62202419)
   .
CR Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Ban XB, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5103
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Cao SC, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106576
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Chen T. He, 2015, R PACKAGE VERSION, V2, P1, DOI DOI 10.1145/2939672.2939785
   Chen X, 2023, J SYST SOFTWARE, V206, DOI 10.1016/j.jss.2023.111853
   Chen X, 2021, IET SOFTW, V15, P75, DOI 10.1049/sfw2.12006
   Chen X, 2020, IEEE T RELIAB, V69, P70, DOI 10.1109/TR.2019.2924932
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Cheng X, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P519, DOI 10.1145/3533767.3534371
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Chernis B, 2018, IWSPA '18: PROCEEDINGS OF THE FOURTH ACM INTERNATIONAL WORKSHOP ON SECURITY AND PRIVACY ANALYTICS, P31, DOI 10.1145/3180445.3180453
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Croft R, 2023, PROC INT CONF SOFTW, P121, DOI 10.1109/ICSE48619.2023.00022
   Dai W., 2007, Proceedings of the 24th international conference on Machine learning, P193
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Gao ZP, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P218, DOI 10.1145/3468264.3468553
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Grieco G, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P85, DOI 10.1145/2857705.2857720
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hearst MA, 1998, IEEE INTELL SYST APP, V13, P18, DOI 10.1109/5254.708428
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Li JD, 2018, ACM COMPUT SURV, V50, DOI 10.1145/3136625
   Li K, 2020, PROC INT CONF SOFTW, P566, DOI 10.1145/3377811.3380360
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2018, IEEE T IND INFORM, V14, P3289, DOI 10.1109/TII.2018.2821768
   Liu K, 2022, 13TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, INTERNETWARE 2022, P147, DOI 10.1145/3545258.3545260
   Liu SG, 2022, IEEE T DEPEND SECURE, V19, P438, DOI 10.1109/TDSC.2020.2984505
   Moussa R, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P101, DOI 10.1145/3533767.3534405
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Nguyen V, 2022, Arxiv, DOI arXiv:2209.10406
   Ni C, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P672, DOI 10.1145/3540250.3549165
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Quinlan J R., 2014, C4. 5: Programs for machine learning
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Steenhoek B., 2023, 2024 IEEE ACM 46 IN, P166
   Steenhoek B, 2023, PROC INT CONF SOFTW, P2237, DOI 10.1109/ICSE48619.2023.00188
   Su J., 2021, arXiv
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Nguyen V, 2019, IEEE IJCNN, DOI 10.1109/ijcnn.2019.8851923
   Nguyen V, 2020, LECT NOTES ARTIF INT, V12084, P699, DOI 10.1007/978-3-030-47426-3_54
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wang S., 2023, arXiv
   Wen XC, 2023, PROC INT CONF SOFTW, P2275, DOI 10.1109/ICSE48619.2023.00191
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   Yamamoto H, 2023, Soft Anal Evol Reeng, P485, DOI 10.1109/SANER56733.2023.00052
   Yang G, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111577
   Yang Q, 2019, ACM T INTEL SYST TEC, V10, DOI 10.1145/3298981
   Yang X, 2023, PROC INT CONF SOFTW, P2287, DOI 10.1109/ICSE48619.2023.00192
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yu C, 2022, PROC IEEE INT CONF S, P82, DOI 10.1109/ICSME55016.2022.00016
   Yuan ZD, 2020, IEEE ACCESS, V8, P30037, DOI 10.1109/ACCESS.2020.2972644
   Zagane M, 2020, IEEE ACCESS, V8, P74562, DOI 10.1109/ACCESS.2020.2988557
   Zhang C., 2023, IEEE Trans. Softw. Eng.
   Zhang JW, 2023, IEEE T SOFTWARE ENG, V49, P4196, DOI 10.1109/TSE.2023.3286586
   Zheng W, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110659
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 68
TC 0
Z9 0
U1 4
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112038
DI 10.1016/j.jss.2024.112038
EA MAR 2024
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QR9W4
UT WOS:001222725600001
DA 2024-08-05
ER

PT J
AU Kessel, M
   Atkinson, C
AF Kessel, Marcus
   Atkinson, Colin
TI Promoting open science in test-driven software experiments
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software; Engineering; Empirical; Experimentation; Observation;
   Behavior; Reproducibility; Replication; Data structures; Open science;
   Large language models; Machine learning; Generative artificial
   intelligence; Benchmark; Language-to-code; HumanEval; Automation;
   Measurement
ID EMPIRICAL-RESEARCH
AB A core principle of open science is the clear, concise and accessible publication of empirical data, including "raw"observational data as well as processed results. However, in empirical software engineering there are no established standards (de jure or de facto) for representing and "opening"observations collected in testdriven software experiments - that is, experiments involving the execution of software subjects in controlled scenarios. Execution data is therefore usually represented in ad hoc ways, often making it abstruse and difficult to access without significant manual effort. In this paper we present new data structures designed to address this problem by clearly defining, correlating and representing the stimuli and responses used to execute software subjects in test-driven experiments. To demonstrate their utility, we show how they can be used to promote the repetition, replication and reproduction of experimental evaluations of AI -based code completion tools. We also show how the proposed data structures facilitate the incremental expansion of execution data sets, and thus promote their repurposing for new experiments addressing new research questions.
C1 [Kessel, Marcus; Atkinson, Colin] Univ Mannheim, D-68159 Mannheim, Germany.
C3 University of Mannheim
RP Kessel, M (corresponding author), Univ Mannheim, D-68159 Mannheim, Germany.
EM marcus.kessel@uni-mannheim.de; colin.atkinson@uni-mannheim.de
OI Kessel, Marcus/0000-0003-3088-2166; Atkinson, Colin/0000-0002-3164-5595
CR ACM, 2023, Artifact review and badging-version 1.0
   Aghajanyan A, 2022, Arxiv, DOI [arXiv:2201.07520, 10.48550/arXiv.2201.07520]
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Ammann P., 2016, Introduction to Software Testing
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2022, The R Project for Statistical Computing
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Austin J., 2021, arXiv, DOI DOI 10.48550/ARXIV.2108.07732
   Bajracharya S, 2014, SCI COMPUT PROGRAM, V79, P241, DOI 10.1016/j.scico.2012.04.008
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Ben Allal L., 2022, A framework for the evaluation of code generation models
   Caserta J., 2013, The Data Warehouseetl Toolkit: Practical Techniques for Extracting, Cleaning, Conforming, and Delivering Data
   Cassano F., 2023, Completions Data Set: Multi-Programming Language Evaluation of Large Language Models of Code (MultiPL-E)
   Cassano F., 2023, Problem data set: Multi-programming language evaluation of large language models of code (MultiPL-E)
   Cassano F, 2023, IEEE T SOFTWARE ENG, V49, P3675, DOI 10.1109/TSE.2023.3267446
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Danglot B, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110398
   Diamantopoulos T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P488, DOI [10.1109/MSR.2016.061, 10.1145/2901739.2903492]
   Dietrich J, 2017, J OBJECT TECHNOL, V16, DOI 10.5381/jot.2017.16.4.a1.
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Ernst M. D., 2003, WOD 2003 ICS WORKSH, P24
   ESE, 2023, Empirical software engineering-An international journal
   ESEM, 2023, Empirical software engineering and measurement
   Fernández DM, 2019, EMPIR SOFTW ENG, V24, P1057, DOI 10.1007/s10664-019-09712-x
   Finnie-Ansley J, 2022, PROCEEDINGS OF THE 24TH AUSTRALASIAN COMPUTING EDUCATION CONFERENCE, ACE 2022, P10, DOI 10.1145/3511861.3511863
   Fraser G, 2011, P 19 ACM SIGSOFT S 1, P416, DOI 10.1145/2025113.2025179
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fried D, 2023, Arxiv, DOI [arXiv:2204.05999, 10.48550/ARXIV.2204.05999]
   Gao L, 2020, Arxiv, DOI arXiv:2101.00027
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   JUnit, 2022, JUnit
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kessel M., 2023, Ph.D. thesis
   Kessel Marcus, 2023, Zenodo, DOI 10.5281/ZENODO.8208246
   Kessel M, 2022, J SYST SOFTWARE, V193, DOI 10.1016/j.jss.2022.111442
   Kessel M, 2019, PROCEEDINGS OF THE 10TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '19), P35, DOI 10.1145/3340433.3342825
   Kessel M, 2019, IEEE INT WORK C SO, P56, DOI 10.1109/SCAM.2019.00015
   Kessel M, 2019, IEEE INT WORK C SO, P193, DOI 10.1109/SCAM.2019.00030
   Kocetkov Denis, 2022, arXiv
   Kulal S, 2019, ADV NEUR IN, V32
   Langdon WB, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI 10.1109/SBST.2017.1
   Li RY, 2023, Arxiv, DOI arXiv:2305.06161
   Li YJ, 2022, SCIENCE, V378, P1092, DOI 10.1126/science.abq1158
   Liu Jiawei, 2023, 37 C NEUR INF PROC S
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Ma YX, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09905-9
   Maj Petr., 2021, 35th European Conference on Object-Oriented Programming (ECOOP 2021), V194, p6:1, DOI DOI 10.4230/LIPICS.ECOOP.2021.6
   Markovtsev V, 2018, IEEE WORK CONF MIN S, P34, DOI 10.1145/3196398.3196464
   Mendez D., 2020, Contemporary Empirical Methods in Software Engineering, P477
   Minocher R., 2020, Reproducibility improves exponentially over 63 years of social learning research, DOI [10.31234/osf.io/4nzc7, DOI 10.31234/OSF.IO/4NZC7]
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Nijkamp E, 2022, Arxiv, DOI arXiv:2203.13474
   Nong Y, 2023, IEEE T SOFTWARE ENG, V49, P1983, DOI 10.1109/TSE.2022.3207149
   Palsberg J, 2018, COMPANION PROCEEDINGS FOR THE ISSTA/ECOOP 2018 WORKSHOPS, P100, DOI 10.1145/3236454.3236501
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   RICE HG, 1953, T AM MATH SOC, V74, P358, DOI 10.2307/1990888
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Sonatype, 2022, Maven Central
   The Apache Software Foundation, 2022, Apache ignite
   Vaswani A, 2017, ADV NEUR IN, V30
   Vogl S, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P28, DOI 10.1109/SBST52555.2021.00012
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wohlin C, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106514
   Zhang L, 2018, J COMPUT SCI TECH-CH, V33, P876, DOI 10.1007/s11390-018-1864-x
NR 71
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2024
VL 212
AR 111971
DI 10.1016/j.jss.2024.111971
EA MAR 2024
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QN8H8
UT WOS:001221638400001
OA hybrid
DA 2024-08-05
ER

PT J
AU Goodwin, C
   Woolley, S
AF Goodwin, Craig
   Woolley, Sandra
TI Barriers to device longevity and reuse: A vintage device empirical study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Device reuse; Software reuse; E -waste; Digital sustainability;
   Application installation
ID LIFE
AB This extended paper contributes a methodology and a detailed analysis of app installation and functionality on a 'vintage' device. Experimental results are presented that demonstrate barriers to the reuse of vintage Apple devices, and solutions are posited. 230 apps across 23 unique app categories were tested to determine if they could be downloaded, installed, and opened, and whether they appeared functional on a vintage Apple device. Only 29 (12.6%) of the apps could be downloaded directly, and in contrast 140 (60.9%) of the apps were downloadable with the aid of another Apple device. In total, 141 (61.3%) of applications downloaded either directly or indirectly were considered functional and capable of running on the device. We discuss measures Apple and developers could take to support legacy devices users, prolong device use, enable reuse and, potentially, prevent functional devices from becoming e-waste.
C1 [Goodwin, Craig; Woolley, Sandra] Keele Univ, Sch Comp Sci & Math, Staffordshire, England.
   [Woolley, Sandra] Keele Univ, Digital Soc Inst, Staffordshire, England.
C3 Keele University; Keele University
RP Goodwin, C (corresponding author), Keele Univ, Sch Comp Sci & Math, Staffordshire, England.
EM c.goodwin@keele.ac.uk
RI Woolley, Sandra/AFL-9688-2022
OI Woolley, Sandra/0000-0002-7623-2866; Goodwin, Craig/0000-0003-3296-7200
CR Android Developers, 2021, Support different platform versions | Android Developers
   Android Developers, 2021, Configure conditional delivery | Android Developers
   Apple, 2020, Apple-Support-Downloads (UK)
   Apple, 2022, iPhone upgrade program
   Apple, 2021, Apple Support
   Apple, 2019, App store-support-apple developer
   Apple, 2021, Environmental Progress Report
   Apple Discussions, 2022, Complete list of iPads, release year and current iOS /iPad Os version they can run
   Apple Support, 2021, Apple Support
   Apple (UK), 2022, Apple trade In
   Belli F., 2021, A Holistic View of Software and Hardware Reuse: Dependable Reuse of Components and Systems, V1st, P215
   Bischoff P., 2019, Comparitech
   Blumenthal R., 2021, S 2710 117 C 2021 20
   Boano Carlo Alberto, 2021, GoodIT '21: Proceedings of the Conference on Information Technology for Social Good, P97, DOI 10.1145/3462203.3475883
   Broida R., 2019, 6 new uses for your old iPad
   Contributor R.Y., 2020, Rocket Yard
   Cook D.M., 2019, 2019 7 INT C INF, P1, DOI DOI 10.1109/icoict.2019.8835309
   Crossl Y., 2021, What to do with your old tech
   Debnath B, 2020, 2020 IEEE CALCUTTA CONFERENCE (CALCON), P431, DOI [10.1109/CALCON49167.2020.9106531, 10.1109/calcon49167.2020.9106531]
   Esposito F., 2021, Report: iPhone owners more likely to sell or trade in their old devices than Android users
   Forti V., 2020, The Global E-Waste Monitor 2020: Quantities, Flows and the Circular Economy Potential
   Goodwin C., 2020, P 33 INT BCS HUM COM, DOI [10.14236/ewic/HCI20DC.5, DOI 10.14236/EWIC/HCI20DC.5]
   Goodwin C, 2022, LECT NOTES COMPUT SC, V13297, P138, DOI 10.1007/978-3-031-08129-3_9
   Greenpeace, 2016, Resource Efficiency in the ICT Sector Silver
   Hazelwood DA, 2021, IEEE ACCESS, V9, P144726, DOI 10.1109/ACCESS.2021.3121733
   Kirchherr J, 2017, RESOUR CONSERV RECY, V127, P221, DOI 10.1016/j.resconrec.2017.09.005
   Makov T, 2021, J CLEAN PROD, V313, DOI 10.1016/j.jclepro.2021.127561
   Makov T, 2019, J IND ECOL, V23, P549, DOI 10.1111/jiec.12806
   Peterson M., 2020, 7 creative ways to repurpose and reuse your old iPhones and iPads
   Punchmod, 2020, how to add apps on older iPad iPhone without owning a newer device in 2020
   Raphael J.R., 2019, Computerworld
   Royal Society of Chemistry, 2019, Elements in danger
   Smith Zachary Snowdon, 2022, Forbes
   Venables R., 2021, The smartphone replacement cycle
   Xun Li, 2010, 2010 39th International Conference on Parallel Processing Workshops (ICPPW), P476, DOI 10.1109/ICPPW.2010.70
   Yla-Mella J, 2022, RESOURCES-BASEL, V11, DOI 10.3390/resources11020018
NR 36
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111991
DI 10.1016/j.jss.2024.111991
EA FEB 2024
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ7Z1
UT WOS:001200163400001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Moreschini, S
   Younesian, E
   Hästbacka, D
   Albano, M
   Hosek, J
   Taibi, D
AF Moreschini, Sergio
   Younesian, Elham
   Hastbacka, David
   Albano, Michele
   Hosek, Jiri
   Taibi, Davide
TI Edge to cloud tools: A Multivocal Literature Review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Multivocal Literature Review; Systematic mapping studies; Edge; Cloud;
   Edge-to-cloud-tools
AB Edge -to -cloud computing is an emerging paradigm for distributing computational tasks between edge devices and cloud resources. Different approaches for orchestration, offloading, and many more purposes have been introduced in research. However, it is still not clear what has been implemented in the industry. This work aims to merge this gap by mapping the existing knowledge on edge -to -cloud tools by providing an overview of the current state of research in this area and identifying research gaps and challenges. For this purpose, we conducted a Multivocal Literature Review (MLR) by analyzing 40 tools from 1073 primary studies (220 PS from the white literature and 853 PS from the grey literature). We categorized the tools based on their characteristics and targeted environments. Overall, this systematic mapping study provides a comprehensive overview of edge -to -cloud tools and highlights several opportunities for researchers and practitioners for future research in this area. Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board.
C1 [Moreschini, Sergio; Younesian, Elham; Hastbacka, David; Taibi, Davide] Tampere Univ, Tampere, Finland.
   [Younesian, Elham; Hosek, Jiri] Brno Univ Technol, Brno, Czech Republic.
   [Albano, Michele] Aalborg Univ, Aalborg, Denmark.
   [Taibi, Davide] Univ Oulu, Oulu, Finland.
C3 Tampere University; Brno University of Technology; Aalborg University;
   University of Oulu
RP Moreschini, S (corresponding author), Tampere Univ, Tampere, Finland.
EM sergio.moreschini@tuni.fi; elham.younesian@vut.cz;
   david.hastbacka@tuni.fi; mialb@cs.aau.dk; hosek@feec.vutbr.cz;
   davide.taibi@oulu.fi
RI Albano, Michele/Q-2177-2015; Taibi, Davide/E-4935-2015
OI Albano, Michele/0000-0002-3777-9981; Taibi, Davide/0000-0002-3210-3990;
   Moreschini, Sergio/0000-0002-5582-9487
FU Business Finland
FX This work is supported by projects IndustryX and 6GSoft both funded by
   Business Finland.
CR [Anonymous], 2023, Open container initiative
   [Anonymous], 2023, Scopus
   [Anonymous], 2023, About us
   Aslam Masood, 2021, 2021 Digital Image Computing: Techniques and Applications (DICTA), P01, DOI 10.1109/DICTA52665.2021.9647409
   Du K, 2020, ANN COMPUT SECURITY, P597, DOI 10.1145/3427228.3427258
   El Emam K., 1999, Empirical Software Engineering, V4, P113, DOI 10.1023/A:1009820201126
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Han JX, 2019, P INT COMP SOFTW APP, P21, DOI 10.1109/COMPSAC.2019.00013
   Kitchenham B. e. a., 2007, Technical report EBSE-2007-01, DOI DOI 10.1145/1134285.1134500
   Mao YY, 2017, IEEE WCNC
   Mao YY, 2016, IEEE J SEL AREA COMM, V34, P3590, DOI 10.1109/JSAC.2016.2611964
   Mell P, 2010, COMMUN ACM, V53, P50
   Moreschini S, 2023, LECT NOTE NETW SYST, V583, P219, DOI 10.1007/978-3-031-20859-1_22
   Moreschini S, 2022, IEEE ACCESS, V10, P131876, DOI 10.1109/ACCESS.2022.3229185
   Nupponen J, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P49, DOI [10.1109/ICSA-050368.2020.00016, 10.1109/ICSA-C50368.2020.00016]
   Petersen K., 2008, P 12 INT C EVALUATIO, P68, DOI DOI 10.14236/EWIC/EASE2008.8
   Rosendo D, 2022, J PARALLEL DISTR COM, V166, P71, DOI 10.1016/j.jpdc.2022.04.004
   Saeik F, 2021, COMPUT NETW, V195, DOI 10.1016/j.comnet.2021.108177
   Sahni Y, 2017, IEEE ACCESS, V5, P16441, DOI 10.1109/ACCESS.2017.2739804
   Sardellitti S, 2014, IEEE GLOBE WORK, P1505, DOI 10.1109/GLOCOMW.2014.7063647
   Singh K., 2013, 9 INT C QSHINE, P303
   Stackpath, 2023, What is edge orchestration?
   Tomarchio O, 2020, J CLOUD COMPUT-ADV S, V9, DOI 10.1186/s13677-020-00194-7
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Xiao WX, 2022, PROC INT CONF SOFTW, P1830, DOI 10.1145/3510003.3510196
   Yang L., 2013, ACM SIGMETRICS Perform. Eval. Rev., V40, P23, DOI [DOI 10.1145/2479942.2479946, 10.1145/2479942.2479946]
   Zhang J, 2018, IEEE INTERNET THINGS, V5, P2633, DOI 10.1109/JIOT.2017.2786343
   Zhao TC, 2017, IEEE ICC
NR 28
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111942
DI 10.1016/j.jss.2023.111942
EA JAN 2024
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IC8I8
UT WOS:001164213800001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Vishnubhotla, SD
   Mendes, E
AF Vishnubhotla, Sai Datta
   Mendes, Emilia
TI Examining the effect of software professionals' personality & additional
   capabilities on agile teams' climate
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Capability measures; Personality traits; Team climate prediction;
   Correlation analysis; Regression analysis; Agile software development
ID ORGANIZATIONAL-CLIMATE; JOB-PERFORMANCE; QUALITY; VALIDATION; SUCCESS;
   INNOVATION; TRAITS; DESIGN; SKILLS; MODEL
AB Context: Investigating factors influencing agile team climate is pressing given its impact on organizational performance. Despite previous studies, association between human aspects and team climate remains yet unexplored. Objective: Exploring association between two human aspects, namely team member's capability measures and personality traits, and member's perceived team climate. Method: 75 professionals (12 teams) from one division participated in the first survey iteration, second iteration in another division included 46 professionals (7 teams). We employed correlation analyses to measure association between human aspects and climate, and regression analyses to identify team climate predictors. Results: In relation to team climate dimensions, we observed a significant negative correlation with neuroticism and a significant positive correlation with responsibility. Linear regression analysis showed capability measures accounted for 19.2% of variance in team climate. Multivariable regression analysis revealed capability measures and personality traits together accounted for 25.7% of variance in team climate. Conclusion: An individual's propensity towards self-doubt (neuroticism) negatively affects perceived team climate, whereas individual's ability to be responsible and teamwork-oriented positively affect perceived team climate. The inclusion of both capability and personality variables as input for multivariable regression explained slightly more variance in team climate, compared to only capability measures (25.7% against 19.2%).
C1 [Vishnubhotla, Sai Datta; Mendes, Emilia] BTH Blekinge Tekn Hogskola, Dept Comp Sci, Karlskrona, Sweden.
RP Vishnubhotla, SD (corresponding author), BTH Blekinge Tekn Hogskola, Dept Comp Sci, Karlskrona, Sweden.
EM sai-datta.vishnubhotla@bth.se
FU KK- stiftelsen-HOG AGILE research project
FX We would like to thank all those who participated in the surveys that
   were detailed in this study. This research was partially funded by the
   KK- stiftelsen-HOG AGILE research project.
CR Abrahamsson P., 2002, Proceedings of ESPOO 2002, P7
   Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Acuña ST, 2015, INFORM SOFTWARE TECH, V57, P141, DOI 10.1016/j.infsof.2014.09.002
   Agrawal V., 2017, Requirements of commercial-off-the-shelf software-a comparison between manufacturing and service sectors
   Allemand M, 2017, J PSYCHOTHER INTEGR, V27, P476, DOI 10.1037/int0000094
   Ampatzoglou A., 2020, Contemporary empirical methods in software engineering, P415
   Anderson NR, 1998, J ORGAN BEHAV, V19, P235, DOI 10.1002/(SICI)1099-1379(199805)19:3<235::AID-JOB837>3.0.CO;2-C
   [Anonymous], The bad apple spoils the bunch: How a disagreeable person damages team performance and what can be done about it
   Balijepally V, 2006, COMMUN ASSOC INF SYS, V18, P55
   BARRICK MR, 1991, PERS PSYCHOL, V44, P1, DOI 10.1111/j.1744-6570.1991.tb00688.x
   Barrick MR, 1998, J APPL PSYCHOL, V83, P377, DOI 10.1037/0021-9010.83.3.377
   Baumgart R, Personality traits of scrum roles in agile software development teams-a qualitative analysis
   Berraies S, 2023, J KNOWL MANAG, V27, P842, DOI 10.1108/JKM-09-2021-0720
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Biddle R, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P73, DOI 10.1145/3195836.3195845
   Calefato F, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3491039
   Caulo M, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P70, DOI 10.1145/3463274.3463327
   Celar S, 2014, 2014 22ND TELECOMMUNICATIONS FORUM TELFOR (TELFOR), P1134, DOI 10.1109/TELFOR.2014.7034607
   Chandra B., 2018, 2018 4 INT C COMP CO, P1, DOI DOI 10.1109/CCAA.2018.8777533
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Colomo-Palacios R, 2012, INT J AP MAT COM-POL, V22, P801, DOI 10.2478/v10006-012-0059-9
   Costa P.T., 1992, Neo Pi-R
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Cunha F., 2023, 2023 INT C SOFTW TEL, P1, DOI [10.23919/ SoftCOM58365.2023.10271598, DOI 10.23919/SOFTCOM58365.2023.10271598]
   Dillon SJ, 2021, AM J OBST GYNEC MFM, V3, DOI 10.1016/j.ajogmf.2020.100303
   Dingsoyr T, 2019, IEEE SOFTWARE, V36, P30, DOI 10.1109/MS.2018.2884884
   Dutra E, 2020, PROCEEDINGS OF THE 19TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, SBOS 2020, DOI 10.1145/3439961.3439968
   Dutra E, 2020, IET SOFTW, V14, P861, DOI 10.1049/iet-sen.2020.0048
   Fagerholm F, 2015, INFORM SOFTWARE TECH, V64, P132, DOI 10.1016/j.infsof.2015.01.010
   Faul F, 2009, BEHAV RES METHODS, V41, P1149, DOI 10.3758/BRM.41.4.1149
   Fay D., 2004, European Journal of Work and Organizational Psychology, V13, P241, DOI [10.1080/13594320444000083, DOI 10.1080/13594320444000083]
   Francese R, 2021, LECT NOTES COMPUT SC, V13126, P167, DOI 10.1007/978-3-030-91452-3_11
   Gilal AR, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1920
   Gosling S., 2002, The Influence of Professional and Organisational Factors On Health Professionals' Use of Online Evidence: An Evaluation of the Clinical Information Access Program (CIAP)
   Gregory P, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P37, DOI 10.1109/CHASE.2019.00016
   Gustavsson T., 2017, P XP2017 SCI WORKSH, P1, DOI [10.1145/3120459.3120475, DOI 10.1145/3120459.3120475]
   Gutiérrez G, 2019, IEEE SOFTWARE, V36, P23, DOI 10.1109/MS.2018.2874324
   Harvey N.D, 2021, Animal Behaviour Studies, DOI [10.31219/osf.io/8stpy, DOI 10.31219/OSF.IO/8STPY]
   Hidellaarachchi D, 2023, The impact of personality on requirements engineering activities: a mixed-methods study
   Johnson J.A., Interpreting individual IPIP scale scores
   Johnson JA, 2014, J RES PERS, V51, P78, DOI 10.1016/j.jrp.2014.05.003
   Juhasz M., 2010, Periodica Polytechnica Social and Management Sciences, V18, P61, DOI [DOI 10.3311/PP.SO.2010-2.02, 10.3311/pp.so.2010-2.02]
   Kang HR, 2006, HUM RELAT, V59, P1681, DOI 10.1177/0018726706072891
   Kettunen P, 2013, Syst. Softw. Serv. Process Improv, P131, DOI [DOI 10.1007/978-3-642-39179-812, 10.1007/978-3-642-39179-8_12, DOI 10.1007/978-3-642-39179-8_12]
   Kettunen P, 2014, LECT NOTES BUS INF P, V166, P229
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Kollmann T, 2009, J MANAGE INFORM SYST, V25, P51, DOI 10.2753/MIS0742-1222250402
   Kropp M., 2018, Proceedings of the 22nd International Conference on Evaluation and Assessment in Software Engineering 2018, V2018, P112, DOI DOI 10.1145/3210459.3210470
   Kropp M, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110544
   Lacher L, 2015, INT J SOFTW ENG KNOW, V25, P1733, DOI 10.1142/S0218194015710084
   Lee JC, 2020, J ENTERP INF MANAG, V33, P502, DOI 10.1108/JEIM-07-2019-0202
   Lee STH, 2020, J RES PERS, V85, DOI 10.1016/j.jrp.2020.103932
   Licorish SA, 2018, INFORM SOFTWARE TECH, V97, P10, DOI 10.1016/j.infsof.2017.12.005
   Lim S L., 2023, Collective Intelligence, V2, p263391372311585, DOI DOI 10.1177/26339137231158584
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Loewen P., 2004, The Learning Organization, V11, P260, DOI [10.1108/09696470410533012, DOI 10.1108/09696470410533012]
   Loh MY, 2019, SAFETY SCI, V118, P442, DOI 10.1016/j.ssci.2019.05.052
   Machuca-Villegas L, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111408
   Maier M, 2022, ADV METH PRACT PSYCH, V5, DOI 10.1177/25152459221080396
   Mathisen GE, 2004, SCAND J PSYCHOL, V45, P383, DOI 10.1111/j.1467-9450.2004.00420.x
   Matthies C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P158, DOI 10.1109/ICSE-SEET.2019.00025
   Meier A, 2018, LECT NOTES BUS INF P, V314, P259, DOI 10.1007/978-3-319-91602-6_18
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Mendes E, 2018, EUROMICRO CONF PROC, P183, DOI 10.1109/SEAA.2018.00037
   Mendes F, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106586
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Mohagheghi P, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1444, DOI 10.1145/3468264.3473937
   Neuman GA, 1999, J APPL PSYCHOL, V84, P376, DOI 10.1037/0021-9010.84.3.376
   Neuman GA, 1999, GROUP ORGAN MANAGE, V24, P28, DOI 10.1177/1059601199241003
   Nizam A, 2022, IEEE ACCESS, V10, P34428, DOI 10.1109/ACCESS.2022.3162878
   Ozkan N., 2016, Review of International Comparative Management / Revista de Management Comparat International, V17, P320
   Ozkan N, 2020, 2020 TURKISH NATIONAL SOFTWARE ENGINEERING SYMPOSIUM (UYMS), P120, DOI 10.1109/uyms50627.2020.9247073
   Penzenstadler B, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10148-z
   Pfeiffer S., 2019, Work Organisation, Labour Globalisation, V13, P20
   Pirola-Merlo A, 2002, LEADERSHIP QUART, V13, P561, DOI 10.1016/S1048-9843(02)00144-3
   Plant OH, 2022, LECT NOTES BUS INF P, V445, P151, DOI 10.1007/978-3-031-08169-9_10
   Qamar N, 2020, COMPUT INFORM, V39, P994, DOI 10.31577/cai_2020_5_994
   Radhakrishnan A, 2022, EUR MANAG J, V40, P758, DOI 10.1016/j.emj.2021.09.011
   Ragazzoni P., 2002, Journal of Managerial Psychology, V17, P325, DOI [10.1108/02683940210428128, DOI 10.1108/02683940210428128]
   Reiter-Palmon R, 2012, HANDBOOK OF ORGANIZATIONAL CREATIVITY, P295, DOI 10.1016/B978-0-12-374714-3.00013-6
   Restrepo-tamayo Luz Marcela, 2022, Systems, Software and Services Process Improvement: 29th European Conference, EuroSPI 2022, Proceedings. Communications in Computer and Information Science (1646), P688, DOI 10.1007/978-3-031-15559-8_48
   Russo D, 2021, Arxiv, DOI arXiv:2111.10349
   Sahin F., 2019, Baskent Univ. J. Educ., V6, P202
   Schober P, 2018, ANESTH ANALG, V126, P1763, DOI 10.1213/ANE.0000000000002864
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Silveira KK, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P7, DOI 10.1109/CHASE.2019.00010
   Soomro AB, 2015, 2015 9TH MALAYSIAN SOFTWARE ENGINEERING CONFERENCE (MYSEC2015), P259, DOI 10.1109/MySEC.2015.7475230
   Soomro AB, 2016, INFORM SOFTWARE TECH, V73, P52, DOI 10.1016/j.infsof.2016.01.006
   Stieger M, 2021, P NATL ACAD SCI USA, V118, DOI 10.1073/pnas.2017548118
   Sturdee Miriam, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P221, DOI 10.1145/3530019.3530042
   Tam C, 2020, INT J PROJ MANAG, V38, P165, DOI 10.1016/j.ijproman.2020.02.001
   Truong D, 2016, INT J INF TECHNOL PR, V7, P1, DOI 10.4018/IJITPM.2016040101
   Vishnubhotla SD, 2024, J SYST SOFTWARE, V210, DOI 10.1016/j.jss.2023.111937
   Vishnubhotla SD, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111013
   Vishnubhotla SD, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106335
   Vishnubhotla SD, 2018, PROCEEDINGS OF 2018 7TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2018), P10, DOI 10.1145/3185089.3185096
   Vishnubhotla SD, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P41, DOI 10.1145/3195836.3195855
   Xu P, 2015, 21 AMERICAS C INFORM
   Zhang C, 2013, INFORM SOFTWARE TECH, V55, P822, DOI 10.1016/j.infsof.2012.11.003
   Zolduoarrati E, 2023, J SYST SOFTWARE, V200, DOI 10.1016/j.jss.2023.111654
NR 101
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112054
DI 10.1016/j.jss.2024.112054
EA APR 2024
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SG4Z0
UT WOS:001233303200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Moreno-Lumbreras, D
   Gonzalez-Barahona, JM
   Robles, G
   Cosentino, V
AF Moreno-Lumbreras, David
   Gonzalez-Barahona, Jesus M.
   Robles, Gregorio
   Cosentino, Valerio
TI The influence of the city metaphor and its derivates in software
   visualization
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software visualization; City metaphor; Software comprehension;
   Systematic mapping study; Visualizations; State of the art; Extended
   reality
ID COMPREHENSION
AB Context: The city metaphor is widely used in software visualization to represent complex systems as buildings and structures, providing an intuitive way for developers to understand software components. Various software visualization tools have utilized this approach. Objective: Identify the influence of the city metaphor on software visualization research, determine its state-of-the-art status, and identify derived tools and their main characteristics. Method: Conduct a systematic mapping study of 406 publications that reference the first paper on the use of the city metaphor in software visualization and/or the main paper of the CodeCity tool. Analyze the 168 publications from which valuable information could be extracted, and build a complete categoric analysis. Results: The field has grown considerably, with an increasing number of publications since 2001, and a changing research community with evolving interconnections between groups. Researchers have developed more tools that support the city metaphor, but less than 50% of the tools were referenced in their papers. Moreover, 85% of the tools did not use extended reality environments, indicating an opportunity for further exploration. Conclusion: The study demonstrates the active and continually growing presence of the city metaphor in research and its impact on software visualization and its derivatives.
C1 [Moreno-Lumbreras, David; Gonzalez-Barahona, Jesus M.; Robles, Gregorio] Univ Rey Juan Carlos, EIF, Fuenlabrada, Spain.
   [Cosentino, Valerio] Eventbrite, Madrid, Spain.
C3 Universidad Rey Juan Carlos
RP Moreno-Lumbreras, D (corresponding author), Univ Rey Juan Carlos, EIF, Fuenlabrada, Spain.
EM david.morenolu@urjc.es
RI Robles, Gregorio/I-2507-2012; Gonzalez-Barahona, Jesus M./L-5646-2017
OI Robles, Gregorio/0000-0002-1442-6761; Gonzalez-Barahona, Jesus
   M./0000-0001-9682-460X; Moreno-Lumbreras, David/0000-0002-5454-7808
FU Community of Madrid, Spain [IND2018/TIC-9669]; Spanish Government
   [RTI-2018-101963-B-100]; Madrid Regional Government, Spain
   [e-Madrid-CM-P2018/TCS-4307]; EU Structural Funds (FSE and FEDER)
FX We acknowledge the financial support of the Community of Madrid, Spain
   for the project IND2018/TIC-9669, and the Spanish Government for the
   project RTI-2018-101963-B-100, and of the Madrid Regional Government,
   Spain (e-Madrid-CM-P2018/TCS-4307) , co-financed by EU Structural Funds
   (FSE and FEDER) .
CR Abeysinghe AA.T.G., 2021, Ph.D. thesis
   Alshakhouri Mujtaba Alawi J., 2013, Ph.D. thesis
   Aoki Tatsushi, 2021, 2021 IEEE 10th Global Conference on Consumer Electronics (GCCE), P946, DOI 10.1109/GCCE53005.2021.9621764
   Averbukh VL, 2001, PROGRAM COMPUT SOFT+, V27, P227, DOI 10.1023/A:1012333025189
   Balogh Gergo, 2016, 2016 IEEE 23rd International Conference on Software Analysis, Evolution and Reengineering (SANER), P17, DOI 10.1109/SANER.2016.48
   Balzer Michael, 2004, EUROGRAPHICS IEEE VG
   Basit HA, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P46, DOI 10.1109/VISSOFT.2015.7332414
   Bassil S, 2001, PROG COMPREHEN, P7, DOI 10.1109/WPC.2001.921708
   Baum D, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P114, DOI 10.1109/VISSOFT.2017.12
   Borg M, 2018, Arxiv, DOI arXiv:1808.09767
   Brito R, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P649, DOI [10.1109/saner.2019.8668008, 10.1109/SANER.2019.8668008]
   Capece N, 2017, LECT NOTES COMPUT SC, V10325, P319, DOI 10.1007/978-3-319-60928-7_28
   Carpendale Sheelagh, 2008, Technical Report
   Caserta P, 2011, IEEE T VIS COMPUT GR, V17, P913, DOI 10.1109/TVCG.2010.110
   Caserta Pierre, 2011, 2011 6 INT WORKSHOP, P1
   Diehl Stephan, 2007, Software visualization: visualizing the structure, behaviour, software
   Donalek C, 2014, IEEE INT CONF BIG DA, P609, DOI 10.1109/BigData.2014.7004282
   Dugerdil P, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P38
   Erra U., 2012, P 27 ANN ACM S APPL, P981
   Fittkau F, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P130, DOI 10.1109/VISSOFT.2015.7332423
   Fittkau Florian, 2013, 2013 1 IEEE WORKING, P1
   Graham Hamish, 2004, CRPIT, V35, P53
   Hamou-Lhadj Abdelwahab., 2004, CASCON, P42
   Hansen Malte, 2021, Collaborative Program Comprehension Based on Augmented Reality
   Hatko Reinhard, 2012, KESE@ ECAI
   Hoff A, 2022, IEEE INT WORK VIS SO, P119, DOI 10.1109/VISSOFT55257.2022.00020
   Isaacs Katherine E, 2014, State of the art of performance visualization
   Khaloo P, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P43, DOI 10.1109/VISSOFT.2017.10
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Knight C, 1999, PROG COMPREHEN, P4, DOI 10.1109/WPC.1999.777733
   Koschke R, 2003, J SOFTW MAINT EVOL-R, V15, P87, DOI 10.1002/smr.270
   Kuhn A, 2012, Arxiv, DOI arXiv:1209.5490
   Lakoff G., 1980, Metaphors We Live By, DOI DOI 10.7208/CHICAGO/9780226470993.001.0001
   Langelier G., 2005, Proc. IEEE/ACM Automated Software Engineering, P214
   Lowe Welf., 2003, VizzAnalyzerA software comprehension framework
   Maletic JI, 2001, PROG COMPREHEN, P26, DOI 10.1109/WPC.2001.921711
   Marcus Andrian, 2003, P 2003 ACM S SOFTW V, P27, DOI [10.1145/774833.774837, DOI 10.1145/774833.774837]
   Maruyama Katsuhisa, 2014, P 22 INT C PROGRAM C, P207
   Mattila P., 2016, 20 INT ACAD MINDTREK, P262
   Merino L, 2018, J SYST SOFTWARE, V144, P165, DOI 10.1016/j.jss.2018.06.027
   Merino L, 2017, PROC IEEE INT CONF S, P633, DOI 10.1109/ICSME.2017.70
   Merino L, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P11, DOI 10.1109/VISSOFT.2017.17
   Misiak M, 2018, 2018 SIXTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P112, DOI 10.1109/VISSOFT.2018.00020
   Moreno-Lumbreras D., 2021, arXiv
   Moreno-Lumbreras D, 2023, INFORM SOFTWARE TECH, V153, DOI 10.1016/j.infsof.2022.107064
   Moreno-Lumbreras D, 2022, 2022 IEEE CONFERENCE ON VIRTUAL REALITY AND 3D USER INTERFACES ABSTRACTS AND WORKSHOPS (VRW 2022), P71, DOI 10.1109/VRW55335.2022.00026
   Novais RL, 2013, INFORM SOFTWARE TECH, V55, P1860, DOI 10.1016/j.infsof.2013.05.008
   O'Donovan P., 2015, J BIG DATA-GER, V2, P20, DOI 10.1186/s40537-015-0028-x
   Ogami K, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P33, DOI 10.1109/VISSOFT.2017.25
   Panas T, 2003, IEEE INFOR VIS, P314, DOI 10.1109/IV.2003.1217996
   Panas T., 2005, Proceedings of the 2005 ACM symposium on Software visualization, SoftVis '05, P173
   Panas T, 2007, IEEE INT C ENG COMP, P217, DOI 10.1109/ICECCS.2007.20
   Paredes J, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P157, DOI 10.1109/VISSOFT.2014.32
   Petersen K., 2008, P 12 INT C EVALUATIO, P68, DOI DOI 10.14236/EWIC/EASE2008.8
   Pfahler F, 2020, EIGHTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2020), P22, DOI 10.1109/VISSOFT51673.2020.00007
   Rodrigues LF, 2019, HELIYON, V5, DOI 10.1016/j.heliyon.2019.e01993
   Scarle S, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P66, DOI 10.1109/VISSOFT.2015.7332416
   Scarsbrook JD, 2018, INT C PROGRAM COMPRE, P389, DOI 10.1145/3196321.3196368
   Scheibel Willy, 2020, Survey of treemap layout algorithms, DOI [10.1145/3430036.3430041, DOI 10.1145/3430036.3430041]
   Scheibel Willy, 2018, VISIGRAPP
   Schez-Sobrino S, 2020, MULTIMED TOOLS APPL, V79, P34079, DOI 10.1007/s11042-020-09202-z
   Schots Marcelo, 2014, Technical Report
   Schreiber A, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P119, DOI 10.1109/VISSOFT.2017.20
   Seriai A, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P60, DOI 10.1109/VISSOFT.2014.19
   Steinbruckner Frank., 2013, Consistent software cities: supporting comprehension of evolving software systems
   Steinbrückner F, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P193
   Storey Margaret-Anne D., 2005, P 2005 ACM S SOFTWAR, P193, DOI DOI 10.1145/1056018.1056045
   Teyseyre AR, 2009, IEEE T VIS COMPUT GR, V15, P87, DOI 10.1109/TVCG.2008.86
   Vincur J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P509, DOI 10.1109/QRS-C.2017.88
   Vincur Juraj, 2017, P 23 ACM S VIRTUAL R
   Waller Jan, 2013, 2013 1 IEEE WORKING, P1
   Weninger M, 2020, EIGHTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2020), P110, DOI 10.1109/VISSOFT51673.2020.00017
   Weninger Markus, 2019, Softwaretechnik-Trends, V39, P44
   Wettel R, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P92, DOI 10.1109/VISSOF.2007.4290706
   Wettel R, 2008, WORK CONF REVERSE EN, P219, DOI 10.1109/WCRE.2008.55
   Wettel R, 2007, INT C PROGRAM COMPRE, P231
   Wettel R, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P155
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wolny S, 2020, SOFTW SYST MODEL, V19, P111, DOI 10.1007/s10270-019-00735-y
   Yano K, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P546, DOI 10.1109/SANER.2017.7884671
   Young P, 1998, PROG COMPREHEN, P19, DOI 10.1109/WPC.1998.693276
   Zielasko J, 2022, INT FORUM DES LANG, DOI 10.1109/FDL56239.2022.9925664
NR 82
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111985
DI 10.1016/j.jss.2024.111985
EA JAN 2024
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JY0G8
UT WOS:001176597000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Cotroneo, D
   Foggia, A
   Improta, C
   Liguori, P
   Natella, R
AF Cotroneo, Domenico
   Foggia, Alessio
   Improta, Cristina
   Liguori, Pietro
   Natella, Roberto
TI Automating the correctness assessment of AI-generated code for security
   contexts
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code correctness; AI code generators; Assembly; Offensive security;
   Symbolic execution
ID STATIC ANALYSIS
AB Evaluating the correctness of code generated by AI is a challenging open problem. In this paper, we propose a fully automated method, named ACCA , to evaluate the correctness of AI -generated code for security purposes. The method uses symbolic execution to assess whether the AI -generated code behaves as a reference implementation. We use ACCA to assess four state-of-the-art models trained to generate security -oriented assembly code and compare the results of the evaluation with different baseline solutions, including output similarity metrics, widely used in the field, and the well-known ChatGPT, the AI -powered language model developed by OpenAI. Our experiments show that our method outperforms the baseline solutions and assesses the correctness of the AI -generated code similar to the human -based evaluation, which is considered the ground truth for the assessment in the field. Moreover, ACCA has a very strong correlation with the human evaluation (Pearson's correlation coefficient = 0 . 84 on average). Finally, since it is a full y automated solution that does not require any human intervention, the proposed method performs the assessment of every code snippet in similar to 0 . 17 s on average, which is definitely lower than the average time required by human analysts to manually inspect the code, based on our experience.
C1 [Cotroneo, Domenico; Foggia, Alessio; Improta, Cristina; Liguori, Pietro; Natella, Roberto] Univ Naples Federico II, Naples, Italy.
C3 University of Naples Federico II
RP Liguori, P (corresponding author), Univ Naples Federico II, Naples, Italy.
EM cotroneo@unina.it; alessio.foggia@unina.it; cristina.improta@unina.it;
   pietro.liguori@unina.it; roberto.natella@unina.it
RI Natella, Roberto/AAT-7087-2020
OI Natella, Roberto/0000-0003-1084-4824; Improta,
   Cristina/0000-0001-5300-2358; Liguori, Pietro/0000-0001-5579-1696
FU University of Naples Federico II [CUP E53D23007950001]
FX This work has been partially supported by the University of Naples
   Federico II in the frame of the MUR PRIN 2022 program, project FLEGREA,
   CUP E53D23007950001 (https://flegrea.github.io) . We are grateful to our
   former student Emiliano Fiorenza for his help in the early stages of
   this work.
CR Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Akoglu H, 2018, TURK J EMERG MED, V18, P91, DOI 10.1016/j.tjem.2018.08.001
   Araujo FS, 2020, PROCEEDINGS OF THE 19TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, SBOS 2020, DOI 10.1145/3439961.3439977
   Arifi SM, 2016, IEEE GLOB ENG EDUC C, P826, DOI 10.1109/EDUCON.2016.7474648
   Avgerinos T, 2014, COMMUN ACM, V57, P74, DOI 10.1145/2560217.2560219
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Béra C, 2016, J OBJECT TECHNOL, V15, DOI 10.5381/jot.2016.15.2.a1
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Bird S., 2006, ETMTNLP 02 P ACL 02, P69, DOI DOI 10.3115/1118108.1118117
   Botacin M, 2023, IEEE SEC PRIV WORKS, P238, DOI 10.1109/SPW59333.2023.00027
   Buscemi A, 2023, arXiv
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dinella E, 2022, PROC INT CONF SOFTW, P2130, DOI 10.1145/3510003.3510141
   Evtikhiev M, 2023, J SYST SOFTWARE, V203, DOI 10.1016/j.jss.2023.111741
   Exploit-db, 2024, Exploit database shellcodes.
   Face H., 2024, SacreBLEU.
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Foster J., 2005, Sockets, Shellcode, Porting, and Coding: Reverse Engineering Exploits and Tool Coding for Security Professionals
   Gao DB, 2008, LECT NOTES COMPUT SC, V5308, P238
   Giamattei L, 2024, J SYST SOFTWARE, V207, DOI 10.1016/j.jss.2023.111857
   Gui Y, 2022, EUR CON SFTWR MTNCE, P601, DOI 10.1109/SANER53432.2022.00077
   Gupta M., 2023, From chatgpt to threatgpt: Impact of generative ai in cybersecurity and privacy
   Hawblitzel C., 2013, P 2013 9 JOINT M FDN, P191, DOI DOI 10.1145/2491411.2491442
   Hossain SB, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P120, DOI 10.1145/3611643.3616265
   Insa D, 2018, COMPUT LANG SYST STR, V53, P59, DOI 10.1016/j.cl.2018.01.004
   Insa D, 2015, ITICSE'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P39, DOI 10.1145/2729094.2742615
   Kim DH, 2018, CLIN RADIOL, V73, P439, DOI 10.1016/j.crad.2017.11.015
   Kingma D. P., 2014, arXiv
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kulal S, 2019, ADV NEUR IN, V32
   Li SH, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P501, DOI 10.1145/2889160.2889204
   Li ZW, 2018, NAMED ENTITIES, P41
   Liguori P, 2023, EXPERT SYST APPL, V225, DOI 10.1016/j.eswa.2023.120073
   Liguori P, 2021, PROC INT SYMP SOFTW, P321, DOI 10.1109/ISSRE52982.2021.00042
   Liguori P, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00331-3
   Liguori P, 2021, NLP4PROG 2021: THE 1ST WORKSHOP ON NATURAL LANGUAGE PROCESSING FOR PROGRAMMING (NLP4PROG 2021), P58
   Lim JP, 2019, INT SYM CODE GENER, P37, DOI [10.1109/CGO.2019.8661180, 10.5281/zenodo.2229779]
   Liu K, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P456, DOI 10.1109/saner.2019.8667970
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Lukasczyk S, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10248-w
   Luo LN, 2017, IEEE T SOFTWARE ENG, V43, P1157, DOI 10.1109/TSE.2017.2655046
   Mashhadi E, 2021, IEEE WORK CONF MIN S, P505, DOI 10.1109/MSR52588.2021.00063
   Massarelli L, 2022, IEEE T DEPEND SECURE, V19, P2259, DOI 10.1109/TDSC.2021.3051852
   Megahed H., 2018, Penetration Testing with Shellcode: Detect, Exploit, and Secure Network-Level and Operating System Vulnerabilities
   Modrzejewski Maciej, 2020, P 22 ANN C EUR ASS M, P45
   NASM, 2024, Netwide assembler (NASM).
   Natella R, 2024, IEEE SECUR PRIV, DOI 10.1109/MSEC.2024.3355713
   Neubig Graham, 2018, Research Papers., V1, P185
   Tran N, 2019, INT C PROGRAM COMPRE, P165, DOI 10.1109/ICPC.2019.00034
   NLTK, 2024, Natural language toolkit (NLTK), bleuscore module.
   OpenAI, 2024, ChatGPT-Release Notes
   OpenAI, 2023, Chatgpt
   Pa YMP, 2023, PROCEEDINGS OF 16TH CYBER SECURITY EXPERIMENTATION AND TEST WORKSHOP, CSET 2023, P10, DOI 10.1145/3607505.3607513
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Parvez MR, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2021, P2719
   Pearce H, 2022, P IEEE S SECUR PRIV, P754, DOI 10.1109/SP46214.2022.00057
   Pearson K., 1895, P R SOC LONDON, V58, P240, DOI [10.1098/rspl.1895.0041, DOI 10.1098/RSPL.1895.0041]
   Post Matt, 2018, P 3 C MACH TRANSL RE, P186, DOI [10.18653/v1/W18-6319, DOI 10.18653/V1/W18-6319]
   pylcs, 2024, Python library pylcs.
   Pylint, 2024, About us
   Python, 2024, tokenize.
   Raffel C, 2020, J MACH LEARN RES, V21
   Reiter E, 2009, COMPUT LINGUIST, V35, P529, DOI 10.1162/coli.2009.35.4.35405
   Ren S, 2020, Arxiv, DOI [arXiv:2009.10297, 10.48550/arXiv.2009.10297]
   Romli Rohaida, 2014, 2014 8th Malaysian Software Engineering Conference (MySEC), P84, DOI 10.1109/MySec.2014.6985993
   Ruan Xiaoming, 2023, Internetware '23: Proceedings of the 14th Asia-Pacific Symposium on Internetware, P154, DOI 10.1145/3609437.3609445
   Shell-storm, 2022, Shellcodes database for study cases
   Shoshitaishvili Y, 2016, P IEEE S SECUR PRIV, P138, DOI 10.1109/SP.2016.17
   Shterionov D, 2018, MACH TRANSL, V32, P217, DOI 10.1007/s10590-018-9220-z
   Siddiq ML, 2022, IEEE INT WORK C SO, P71, DOI 10.1109/SCAM55253.2022.00014
   spaCy, 2024, Industrial-strength natural language processing.
   Sui YL, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P265, DOI 10.1145/2892208.2892235
   Tony C, 2023, IEEE WORK CONF MIN S, P588, DOI 10.1109/MSR59073.2023.00084
   Ullah S, 2022, IEEE T SOFTWARE ENG, V48, P3442, DOI 10.1109/TSE.2021.3093926
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang Yue, 2023, P 2023 C EMPIRICAL M, P1069, DOI 10.18653/v1/2023.emnlp-main.68
   Wu B., 2022, 34 INT C SOFTW ENG K, P54, DOI [10.18293/SEKE2022-022, DOI 10.18293/SEKE2022-022]
   Xu D., 2023, IEEE Trans. Inf. Forensics Secur.
   Yang G, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111577
   Yang G, 2022, EUR CON SFTWR MTNCE, P361, DOI 10.1109/SANER53432.2022.00052
NR 83
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112113
DI 10.1016/j.jss.2024.112113
EA JUN 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UZ2C3
UT WOS:001251811600001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Hevia, JL
   Peterssen, G
   Piattini, M
AF Hevia, Jose Luis
   Peterssen, Guido
   Piattini, Mario
TI qSOA ® : Dynamic integration for hybrid quantum/Classical software
   systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE qSOA; SOA; Hybrid systems; Classical/quantum integration
AB This is the "quantum decade " when quantum computers are proving to be more useful for some types of processing than their classical counterparts. The solutions of the future will combine classical IT with quantum algorithms and applications. However, there is very little work that addresses this issue. Each manufacturer provides specific tools for their products, which makes integration between quantum and classical systems a costly and time-consuming process. We believe that we should follow good software engineering principles and best practices to build platforms and tools that insulate software and systems engineers from implementation details and provide them with adequate support. In this paper we propose qSOA (R) as a mechanism for the dynamic integration of hybrid (quantum/classical) software systems and present in detail an SDK for Python. qSOA (R) provides a set of welldefined functions with which a classical system can access quantum products as if they were a piece of classical software, accessing the use case and not its complexities. In addition to some examples that illustrates its operation in real cases, we present the evaluation of qSOA (R) by 200 quantum software developers in a workshop in collaboration with AWS Braket.
C1 [Hevia, Jose Luis; Peterssen, Guido] Quantum Software Technol, San Sebastian, Spain.
   [Piattini, Mario] Univ Castilla La Mancha, Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP Piattini, M (corresponding author), Univ Castilla La Mancha, Ciudad Real, Spain.
EM mario.piattini@uclm.es
CR Akbar MA, 2023, AUTOMAT SOFTW ENG, V30, DOI 10.1007/s10515-023-00389-7
   Ali Shaukat, 2022, Communications of the ACM, V65, P84, DOI 10.1145/3512340
   Barbosa L.S., 2020, P IEEE ACM 42 INT C, P427, DOI [DOI 10.1145/3387940.3392184, 10.1145/3387940.3392184]
   GAO, 2021, Report to congressional addressees
   Herrmann N, 2023, Arxiv, DOI arXiv:2303.02138
   Hevia JL, 2021, IEEE SOFTWARE, V38, P7, DOI 10.1109/MS.2021.3087755
   IBV Institute for Business Value, 2021, The quantum decade. A playbook for achieving awareness, readiness, and advantage.
   Hevia JL, 2022, SOFTWARE PRACT EXPER, V52, P1517, DOI 10.1002/spe.3064
   Moguel E, 2022, SOFTWARE QUAL J, V30, P983, DOI 10.1007/s11219-022-09589-y
   Pérez-Castillo R, 2021, ADV ENG SOFTW, V151, DOI 10.1016/j.advengsoft.2020.102933
   Piattini Mario, 2020, ACM SIGSOFT Software Engineering Notes, V45, P12, DOI 10.1145/3402127.3402131
   Piattini M., 2020, QANSWER 2020 QUANTUM, P1
   Piattini M, 2021, IT PROF, V23, P62, DOI 10.1109/MITP.2020.3019522
   QuantumPath, 2022, The QPath Blog
   SEI, 2021, Architecting the future of software engineering. A National Agenda for Software Engineering Research & Development
   Serrano M., 2022, Quantum software engineering
   Serrano MA, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3548679
   WEF, 2022, insight report
   Zhao J., 2020, arXiv
NR 19
TC 1
Z9 1
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112061
DI 10.1016/j.jss.2024.112061
EA MAY 2024
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TJ8B1
UT WOS:001240976000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Wei, R
   Foster, S
   Mei, HT
   Yan, F
   Yang, RZ
   Habli, I
   O'Halloran, C
   Tudor, N
   Kelly, T
   Nemouchi, Y
AF Wei, Ran
   Foster, Simon
   Mei, Haitao
   Yan, Fang
   Yang, Ruizhe
   Habli, Ibrahim
   O'Halloran, Colin
   Tudor, Nick
   Kelly, Tim
   Nemouchi, Yakoub
TI ACCESS: Assurance Case Centric Engineering of Safety-critical Systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Safety-critical systems engineering; Assurance case development; Model
   based systems engineering; Formal methods; Robotics and autonomous
   systems
ID TOOL; GENERATION; SUPPORT
AB Assurance cases are used to communicate and assess confidence in critical system properties such as safety and security. Historically, assurance cases have been manually created documents, which are evaluated by system stakeholders through lengthy and complicated processes. In recent years, model -based system assurance approaches have gained popularity to improve the efficiency and quality of system assurance activities. This becomes increasingly important, as systems becomes more complex, it is a challenge to manage their development life -cycles, including coordination of development, verification and validation activities, and change impact analysis in inter -connected system assurance artifacts. Moreover, there is a need for assurance cases that support evolution during the operational life of the system, to enable continuous assurance in the face of an uncertain environment, as Robotics and Autonomous Systems (RAS) are adopted into society. In this paper, we contribute ACCESS - Assurance Case Centric Engineering of Safety-critical Systems, an engineering methodology, together with its tool support, for the development of safety-critical systems around evolving model -based assurance cases. We show how model -based system assurance cases can trace to heterogeneous engineering artifacts (e.g. system architectural models, system safety analysis, system behaviour models, etc.), and how formal methods can be integrated during the development process. We demonstrate how assurance cases can be automatically evaluated both at development and runtime. We apply our approach to a case study based on an Autonomous Underwater Vehicle (AUV).
C1 [Wei, Ran] Univ Cambridge, Dept Engn, Cambridge CB3 0FA, England.
   [Wei, Ran] Univ Lancaster, Sch Comp & Commun, Lancaster LA1 4WA, England.
   [Foster, Simon; Mei, Haitao; Yan, Fang; Habli, Ibrahim; Kelly, Tim; Nemouchi, Yakoub] Univ York, Dept Comp Sci, York YO10 5GH, England.
   [Yang, Ruizhe] Dalian Univ Technol, Sch Comp Sci & Technol, Dalian 116024, Peoples R China.
   [O'Halloran, Colin; Tudor, Nick] D RisQ Ltd, Malvern WR14 3SZ, England.
C3 University of Cambridge; Lancaster University; University of York - UK;
   Dalian University of Technology
RP Foster, S (corresponding author), Univ York, Dept Comp Sci, York YO10 5GH, England.
EM r.wei5@lancaster.ac.uk; simon.foster@york.ac.uk; haitao.mei@icloud.com;
   fang.yan@york.ac.uk; ruizheyang@mail.dlut.edu.cn;
   Ibrahim.habli@york.ac.uk; coh@drsq.com; njt@drsq.com;
   tim.kelly@york.ac.uk; y.nemouchi@gmail.com
RI Wei, Ran/KIA-3456-2024
OI Wei, Ran/0000-0003-2191-1359; Nemouchi, Yakoub/0000-0001-7498-6691
FU EPSRC-UKRI project CyPhyAssure [EP/S001190/1]; European Union [812.788]
FX Simon Foster's contributions are funded by the EPSRC-UKRI project
   CyPhyAssure (https:// www.cs.york.ac.uk/circus/CyPhyAssure/) , grant
   reference EP/S001190/1. Fang Yan's contributions are funded by the
   European Union's Horizon 2020 research and innovation programme under
   the Marie Sk & lacute;odowska-Curie grant agreement No 812.788 (MSCA-ETN
   SAS) .
CR Alkassar E, 2008, LECT NOTES COMPUT SC, V5295, P209, DOI 10.1007/978-3-540-87873-5_18
   [Anonymous], 2006, Safety case development manual
   [Anonymous], 2020, Structured assurance case metamodel
   [Anonymous], 2004, AS5506
   [Anonymous], 2007, Safety Management Requirements for Defence Systems
   Barmpis Konstantinos., 2013, P 1 WORKSHOP SCALABI, P1
   Barry M.R., 2011, AER C 2011 IEEE, P1
   Bishop P., 2000, Safety and Reliability, V20, P34
   Blanchette JC, 2011, LECT NOTES ARTIF INT, V6989, P12, DOI 10.1007/978-3-642-24364-6_2
   Brambilla M., 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00751ED2V01Y201701SWE004]
   BROOKES SD, 1984, J ACM, V31, P560, DOI 10.1145/828.833
   Brucker AD, 2019, LECT NOTES COMPUT SC, V11918, P65, DOI 10.1007/978-3-030-34968-4_4
   Calinescu R, 2018, IEEE T SOFTWARE ENG, V44, P1039, DOI 10.1109/TSE.2017.2738640
   Cruanes S, 2013, LECT NOTES COMPUT SC, V7737, P275
   Del Fabro M.D., 2006, ECL MOD S ECL SUMM E, V2006, P37
   Denney E, 2008, AEROSP CONF PROC, P3347
   Denney E, 2018, AUTOMAT SOFTW ENG, V25, P435, DOI 10.1007/s10515-017-0230-5
   Denney E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P587, DOI 10.1109/ICSE.2015.199
   Eclipse Foundation, 2003, Eclipse modelling framework (GMF)
   Foster S., 2018, LNCS, V11222
   Foster S, 2020, FME WORKS FORM, P11, DOI 10.1145/3372020.3391559
   Foster S, 2021, FORM ASP COMPUT, V33, P855, DOI 10.1007/s00165-021-00537-4
   Gacek Andrew., 2014, P 2014 ACM SIGADA AN, P19
   Gleirscher M, 2019, LECT NOTES COMPUT SC, V11724, P87, DOI 10.1007/978-3-030-30446-1_5
   Gleirscher M, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3357231
   Greenwell W.S., 2006, A taxonomy of fallacies in system safety arguments
   Habli I, 2018, SAFETY SCI, V110, P324, DOI 10.1016/j.ssci.2018.09.001
   Hawkins R, 2015, IEEE HI ASS SYS ENGR, P110, DOI 10.1109/HASE.2015.25
   International Atomic Energy Agency (IAEA), 2008, IAEA safety glossary: Terminology used in nuclear safety and radiation protection
   International Organization for Standardization (ISO), 2011, ISO 26262
   Jaaksi A, 2002, IEEE SOFTWARE, V19, P73, DOI 10.1109/MS.2002.1020290
   Karna J, 2009, P 9 OOPSLA WORKSH DO
   Kelly T., 2004, Proc. of the Dependable Systems and Networks 2004 WS on Assurance Cases, P6
   Kelly T.P., 1999, Arguing safety: a systematic approach to managing safety cases
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Larrucea X, 2017, IEEE SOFTWARE, V34, P40, DOI 10.1109/MS.2017.68
   Lee E.A., 2018, LNCS, V11222
   Lin CL, 2016, IEEE INT SYMP SOFTW, P21, DOI 10.1109/ISSREW.2016.46
   Machin M, 2018, IEEE T SYST MAN CY-S, V48, P702, DOI 10.1109/TSMC.2016.2633291
   Mathworks, 2020, Simulink
   Matsuno Yutaka, 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P170, DOI 10.1109/HASE.2010.26
   McDermid J.A., 2001, P 6 AUSTR WORKSHOP S, P1
   Miyazawa A, 2019, SOFTW SYST MODEL, V18, P3097, DOI 10.1007/s10270-018-00710-z
   Nair S, 2015, INFORM SOFTWARE TECH, V60, P1, DOI 10.1016/j.infsof.2014.12.002
   Nemouchi Y, 2019, LECT NOTES COMPUT SC, V11918, P379, DOI 10.1007/978-3-030-34968-4_21
   Netkachova K., 2014, INT C COMP SAF REL S, P62
   Nipkow T, 2002, LNCS, V2283, DOI [DOI 10.1007/3-540-45949-9, 10.1007/3-540-45949-9]
   Nipkow T, 2014, Concrete Semantics: With Isabelle/HOL
   Paige R. F., 1997, FME '97: Industrial Applications and Strengthened Foundations of Formal Methods. 4th International Symposium of Formal Methods Europe. Proceedings, P473
   Prokhorova Y, 2015, INFORM SOFTWARE TECH, V60, P51, DOI 10.1016/j.infsof.2015.01.001
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Rushby J., 2005, Formal Methods and Software Engineering. 7th International Conference on Formal Engineering Methods, ICFEM 2005. Proceedings
   Shah SM, 2014, LECT NOTES COMPUT SC, V8767, P586, DOI 10.1007/978-3-319-11653-2_36
   Steinberg D., 2008, EMF: Eclipse Modeling Framework
   Trapp M., 2013, Perspectives on the Future of Software Engineering: Essays in Honor of Dieter Rombach, P81, DOI DOI 10.1007/978-3-642-37395-46
   Tuong F, 2019, ELECTRON P THEOR COM, P13, DOI 10.4204/EPTCS.310.3
   U.K. Ministry of Defence (MOD), 1996, JSP 430-ship safety management system handbook
   U.K. Ministry of Defence (MOD), 1997, 00-55 Requirements of safety related software in defence equipment
   U.K. Rail Safety Standards Board, 2007, Engineering safety management
   Utsunomiya H., 2018, Trans. Mach. Learn. Artif. Intell., V6, P46
   Wei R., 2018, 13 INT WORKSH MOD RU
   Wei R, 2024, IEEE T COMPUT AID D, V43, P1346, DOI 10.1109/TCAD.2023.3340596
   Wei R, 2022, PROCEEDINGS OF THE 59TH ACM/IEEE DESIGN AUTOMATION CONFERENCE, DAC 2022, P181, DOI 10.1145/3489517.3530434
   Wei R, 2019, J SYST SOFTWARE, V154, P211, DOI 10.1016/j.jss.2019.05.013
   Wei R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P329, DOI 10.1145/2976767.2976787
   Wenzel Makarius, 2019, Intelligent Computer Mathematics. 12th International Conference, CICM 2019. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11617), P1, DOI 10.1007/978-3-030-23250-4_1
   Wenzel M, 2007, LECT NOTES COMPUT SC, V4732, P352
NR 68
TC 2
Z9 2
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112034
DI 10.1016/j.jss.2024.112034
EA APR 2024
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SB6M1
UT WOS:001232038300001
OA Green Accepted, Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Esparza-Peidro, J
   Muñoz-Escoí, FD
   Bernabéu-Aubán, JM
AF Esparza-Peidro, Javier
   Munoz-Escoi, Francesc D.
   Bernabeu-Auban, Jose M.
TI Modeling microservice architectures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE DSL; Microservice; Architecture; Modeling; Language; Hypergraph
ID SEMANTICS; CLOUD; LANGUAGES
AB Modern microservice architectures demand new features from traditional architecture description languages, many of them related to the complexity of the modeled systems. This paper first identifies common concerns found in microservice architectures. Then it presents the features required by a suitable architecture modeling language in order to face many of these concerns. Existent modeling languages get evaluated and a lightweight high-level platform -independent modeling language is proposed. The language is general enough for describing many interactive microservice architectures, bringing together most of the features found in a scattered way in previous contributions. The language is presented in an ordered way, first defining its syntax using MOF and describing informally its underlying concepts, and later proposing an alternative hypergraph-based mechanism for describing its semantics. Regarding this methodology, an architectural style gets defined using a hierarchical type hypergraph, which contains all the information about all valid software architectures in an intuitive and compact way. The feasibility of the language is then demonstrated by providing an experimental tool which translates models to different container orchestration systems. Finally, the language is evaluated against the identified features in the context of the TeaStore reference application.
C1 [Esparza-Peidro, Javier; Munoz-Escoi, Francesc D.; Bernabeu-Auban, Jose M.] Univ Politecn Valencia, Inst Univ Mixto Tecnol Informat, Valencia 46022, Spain.
C3 Universitat Politecnica de Valencia
RP Esparza-Peidro, J (corresponding author), Univ Politecn Valencia, Inst Univ Mixto Tecnol Informat, Valencia 46022, Spain.
EM jesparza@dsic.upv.es
RI Muñoz-Escoí, Francesc D./B-8139-2008
OI Muñoz-Escoí, Francesc D./0000-0002-7216-9249
CR Aksakalli IK, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111014
   Allen R.J., 1997, A Formal Approach to Software Architecture
   Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   [Anonymous], 2016, About the Meta Object Facility Specification Version 2.5.12
   [Anonymous], 2012, Service Oriented Architecture Modeling Language (SoaML)
   [Anonymous], 2005, Service-Oriented Architecture (SOA): Concepts, Technology, and Design
   [Anonymous], 2017, ECMA-404 The JSON Data Interchange Standard
   [Anonymous], 2013, Topology and Orchestration Specification for Cloud Applications Version 1.0 OASIS Standard
   Barisic A., Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools (PLATEAU) at SPLASH. PLATEAU '11 (2011), P65, DOI DOI 10.1145/2089155.2089170
   Bergmayr A, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3150227
   Bernstein D, 2014, IEEE CLOUD COMPUT, V1, P81, DOI 10.1109/MCC.2014.51
   Bradbury J.S., 2004, Proceedings of the 1st ACM SIGSOFT Workshop on Self-managed Systems. WOSS '04, P28, DOI [10.1145/1075405.1075411, DOI 10.1145/1075405.1075411]
   Brogi A., 2013, Adv. in Serv.-Oriented and Cloud Comput, P218
   Brogi A, 2020, LECT NOTES COMPUT SC, V12019, P17, DOI 10.1007/978-3-030-45989-5_2
   Bruni R, 2008, BULL EUR ASSOC THEOR, P161
   Bruni R, 2008, ELECTRON NOTES THEOR, V213, P39, DOI 10.1016/j.entcs.2008.04.073
   Bryant BR, 2011, COMPUT SCI INF SYST, V8, P225, DOI 10.2298/CSIS110114012B
   Canonical Ltd, 2012, Juju.
   Chen Kai., 2005, P 5 ACM INT C EMBEDD, P35, DOI DOI 10.1145/1086228.1086236
   Hernández-Aparicio CC, 2022, 2022 10TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION, CONISOFT, P192, DOI 10.1109/CONISOFT55708.2022.00033
   COURCELLE B, 1993, J COMPUT SYST SCI, V46, P218, DOI 10.1016/0022-0000(93)90004-G
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Drewes F, 2002, J COMPUT SYST SCI, V64, P249, DOI 10.1006/jcss.2001.1790
   Drewes F., 1997, HDB GRAPH GRAMMARS C, V1, P95, DOI [DOI 10.1142/9789812384720_0002, 10.1142/9789812384720, DOI 10.1142/9789812384720]
   Ehrig H., 1973, 14th Annual Symposium on Switching Automata Theory, P167, DOI 10.1109/SWAT.1973.11
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Fenn J., 2007, Gartner ID G 144727.
   Fowler, 2014, MICROSERVICES
   Garlan D., 1993, Advances in software engineering and knowledge engineering, P1
   Garlan D., 2014, WORKSH FUT SOFTW ENG, P29, DOI DOI 10.1145/2593882.2593886
   Garlan David., 1997, Proceedings of the 1997 conference of the Centre for Advanced Studies on Collaborative research, page, P7
   Garlan David., 2010, CASCON 1 DECADE HIGH, P159, DOI 10.1145/1925805.1925814
   HABEL A, 1992, LECT NOTES COMPUT SC, V643, pR3
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   Herbst N.R., 2013, P 10 INT C AUT COMP, P23
   Hirsch D., 1998, P 3 INT WORKSHOP SOF, P69, DOI [10.1145/288408.288426, DOI 10.1145/288408.288426]
   Hirsch D.F., 2003, Ph.D. thesis)
   Jaramillo D, 2016, IEEE SOUTHEASTCON
   JSON Schema, 2020, JSON Schema specification.
   Kelly S., 2008, Domain-Specific Modeling-Enabling Full Code Generation
   Kosar T, 2010, COMPUT SCI INF SYST, V7, P247, DOI 10.2298/CSIS1002247K
   Kratzke N, 2017, J SYST SOFTWARE, V126, P1, DOI 10.1016/j.jss.2017.01.001
   Kumori Systems SL, 2020, Kumori Platform.
   Le Metayer D, 1998, IEEE T SOFTWARE ENG, V24, P521, DOI 10.1109/32.708567
   Lelovic Luka, 2022, RACS '22: Proceedings of the Conference on Research in Adaptive and Convergent Systems, P39, DOI 10.1145/3538641.3561486
   Lipton P, 2018, IEEE CLOUD COMPUT, V5, P37, DOI 10.1109/MCC.2018.022171666
   Lorido-Botran T, 2014, J GRID COMPUT, V12, P559, DOI 10.1007/s10723-014-9314-7
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Montesi F, 2016, Arxiv, DOI [arXiv:1609.05830, DOI 10.48550/ARXIV.1609.05830]
   Newman S., 2015, Building Microservices
   Object Management Group, 2017, Unified Modeling Language (UML) 2.5.1
   Opara-Martins J, 2014, 2014 INTERNATIONAL CONFERENCE ON INFORMATION SOCIETY (I-SOCIETY 2014), P92, DOI 10.1109/i-Society.2014.7009018
   Open SOA, 2007, Service component architecture-SCA.
   Pahl C, 2019, IEEE T CLOUD COMPUT, V7, P677, DOI 10.1109/TCC.2017.2702586
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Richards M., 2015, Software Architecture Patterns
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Slonneger K., 1995, Formal Syntax and Semantics of Programming Languages
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Söylemez M, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12115507
   Taibi D, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P221, DOI 10.5220/0006798302210232
   The Linux Foundation, 2017, HELM: The package manager for kubernetes.
   Tran VX, 2009, INT CON ADV INFO NET, P379, DOI 10.1109/AINA.2009.43
   Vale G, 2022, IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2022), P69, DOI 10.1109/ICSA53651.2022.00015
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Vaquero LM, 2009, ACM SIGCOMM COMP COM, V39, P50, DOI 10.1145/1496091.1496100
   Vayghan LA, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P970, DOI 10.1109/CLOUD.2018.00148
   von Kistowski J, 2018, I S MOD ANAL SIM COM, P223, DOI 10.1109/MASCOTS.2018.00030
   Vural H, 2017, LECT NOTES COMPUT SC, V10409, P203, DOI 10.1007/978-3-319-62407-5_14
   Wile D, 2004, SCI COMPUT PROGRAM, V51, P265, DOI 10.1016/j.scico.2003.12.006
   YAML Language Development Team, 2021, YAML specifications.
   Zaafouri K, 2021, LECT NOTES COMPUT SC, V12951, P201, DOI 10.1007/978-3-030-86970-0_15
NR 74
TC 1
Z9 1
U1 4
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112041
DI 10.1016/j.jss.2024.112041
EA APR 2024
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RM2P4
UT WOS:001228018300001
DA 2024-08-05
ER

PT J
AU Singh, L
   Tiwari, S
   Srivastava, S
AF Singh, Lavneet
   Tiwari, Saurabh
   Srivastava, Sanjay
TI A study on creating energy efficient cloud-connected user applications
   using the RMVRVM paradigm
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Green software; Energy efficient client applications; Battery saving;
   Non-functional requirements
AB Many applications that run on smartphones are heavy on User Interface (UI) and depend on back -end services deployed on the cloud to fetch the required data through REST -based API. Because of the large number of devices actively being used, their collective energy consumption is very significant. Saving energy on these devices is beneficial not only for reducing the carbon footprint but also for the end users as it results in longer battery life. The data fetched by these applications using the REST API is generally processed, filtered and made compliant with the user interface through a paradigm called the Model View View -Model (MVVM). In our previous work Singh (2022a), we proposed a novel Remote -Model View Remote -View -Model (RMVRVM) paradigm to reduce battery consumption by MVVM-based UI-centric cloud -connected applications. In this paper, we present new results and details of the architecture and properties of the RMVRVM paradigm, discuss the complexity shift, provide a migration framework to help practitioners migrate the existing MVVMbased applications and also discuss the possibility of RMVRVM replacing MVVM. We apply the migration framework on an open -source MVVM application and run the experiment to prove the efficacy of RMVRVM. We also expanded the experiments to include the iOS platform and 4G network. To cover the complexity shift to server -side, we discuss the energy consumption on the cloud and how energy -saving practices in cloud data centers help save overall energy consumption.
C1 [Singh, Lavneet; Tiwari, Saurabh] DA IICT, Software Engn Res Lab, Gandhinagar, India.
   [Srivastava, Sanjay] DA IICT, Gandhinagar, India.
C3 Dhirubhai Ambani Institute of Information & Communication Technology;
   Dhirubhai Ambani Institute of Information & Communication Technology
RP Singh, L (corresponding author), DA IICT, Software Engn Res Lab, Gandhinagar, India.
EM lavneet_singh@daiict.ac.in; saurabh_t@daiict.ac.in;
   sanjay_srivastava@daiict.ac.in
OI Singh, Lavneet/0000-0002-2609-2068; Tiwari, Saurabh/0000-0002-2741-3150
CR Akherfi Khadija, 2018, Applied Computing and Informatics, V14, P1, DOI 10.1016/j.aci.2016.11.002
   Alshurafa N, 2015, IEEE J BIOMED HEALTH, V19, P57, DOI 10.1109/JBHI.2014.2329712
   Android Jetpack A., 2022, Data binding in andriod
   Bergman S., 2020, How to measure energy consumption of your backend service
   Bolla R, 2014, 2014 EIGHTH INTERNATIONAL CONFERENCE ON NEXT GENERATION MOBILE APPS, SERVICES AND TECHNOLOGIES (NGMAST), P123, DOI 10.1109/NGMAST.2014.10
   Carroll A., 2010, USENIX ATC '10
   Chen E., 2012, 2012 IEEE International Conference on Pervasive Computing and Communications Workshops (PerCom Workshops), P788, DOI 10.1109/PerComW.2012.6197619
   Cheng HW, 2021, J SUPERCOMPUT, V77, P13385, DOI 10.1007/s11227-021-03805-5
   Gupta M, 2011, INT CONF ENERG AWARE
   IBM, 2022, What is a rest api
   Kouraklis J., 2016, MVVM in Delphi: Architecting and Building Model View ViewModel Applications
   Min Woo Kim, 2012, 2012 International Conference on Information Networking (ICOIN 2012), P468, DOI 10.1109/ICOIN.2012.6164445
   Pramanik PKD, 2019, IEEE ACCESS, V7, P182113, DOI 10.1109/ACCESS.2019.2958684
   Ragona C, 2015, IEEE GLOB COMM CONF, DOI 10.1109/GLOCOM.2015.7417039
   Reference A., 2022, Int32.maxvalue field
   Singh L., 2022, 15 INN SOFTW ENG C, P1
   Singh L., 2022, Source code for rmvrvm experiment mobile application
   Smith J, 2009, MSDN MAG, V24, P72
   Smith S., 2022, Architect modern web applications with asp.net core and azure
   Xia F, 2014, INFORM SYST FRONT, V16, P95, DOI 10.1007/s10796-013-9458-1
NR 20
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112033
DI 10.1016/j.jss.2024.112033
EA APR 2024
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RJ7K3
UT WOS:001227359900001
DA 2024-08-05
ER

PT J
AU Shi, Y
   Yin, BB
   Zheng, Z
AF Shi, Ying
   Yin, Beibei
   Zheng, Zheng
TI Multi-granularity coverage criteria for deep reinforcement learning
   systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Coverage criteria; DRL systems; DRL testing; Structural elements
AB Deep reinforcement learning (DRL) systems are progressively being deployed in safety- and security -critical domains, such as self -driving cars and unmanned aerial vehicles, raising concerns about their trustworthiness. DRL, a integration of deep learning (DL) and reinforcement learning (RL) principles, represents a machine learning technique. Existing DL coverage criteria primarily focus on neuron coverage, overlooking the unique features of RL, thus falling short in assessing the test adequacy of DRL systems. This paper introduces the first set of coverage criteria designed to systematically measure the elements of DRL systems exercised by test inputs. DRL elements, including states, actions, and policies, are leveraged to define coverage criteria that consider multi -levels and multi-granularities. Furthermore, these coverage criteria undergo optimization through the application of combinatorial coverage principles. State coverage is employed as feedback to guide test case selection for DRL systems. Empirical studies have been conducted to assess the performance of the proposed coverage criteria on five well-known DRL environments. The experiments demonstrate the effectiveness of these coverage criteria in detecting unexpected behaviors, highlighting that the proposed test case selection guided by state coverage serves as an effective strategy.
C1 [Shi, Ying; Yin, Beibei; Zheng, Zheng] Beihang Univ BUAA, Sch Automat Sci & Elect Engn, Beijing, Peoples R China.
C3 Beihang University
RP Yin, BB (corresponding author), Beihang Univ BUAA, Sch Automat Sci & Elect Engn, Beijing, Peoples R China.
EM shiying2017@buaa.edu.cn; shiying2017@buaa.edu.cn; zhengz@buaa.edu.cn
FU National Natural Science Founda-tion of China [62372021]
FX This work was supported by the National Natural Science Founda-tion of
   China under Grant 62372021.
CR Al-Nima RRO, 2021, APPL SOFT COMPUT, V105, DOI 10.1016/j.asoc.2021.107295
   BELLMAN R, 1957, J MATH MECH, V6, P679, DOI 10.1512/iumj.1957.6.56038
   Brockman G, 2016, Arxiv, DOI [arXiv:1606.01540, DOI 10.48550/ARXIV.1606.01540]
   BROWN MB, 1974, J AM STAT ASSOC, V69, P364, DOI 10.2307/2285659
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Eniser H.F., 2022, Metamorphic relations via relaxations: An approach to obtain oracles for action-policy testing
   Francois-Lavet V, 2018, Arxiv, DOI arXiv:1811.12560
   Fujimoto S, 2018, PR MACH LEARN RES, V80
   Haarnoja T, 2018, PR MACH LEARN RES, V80
   Hair J. F., 2009, Multivariate data analysis
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiankang Li, 2021, 2021 8th International Conference on Dependable Systems and Their Applications (DSA), P522, DOI 10.1109/DSA52907.2021.00077
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kuhn DR, 2013, IEEE ICST WORKSHOP, P352, DOI 10.1109/ICSTW.2013.77
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Levine S, 2016, J MACH LEARN RES, V17
   Lillicrap T.P., 2015, Continuous control with deep reinforcement learning
   Ma L, 2018, Arxiv, DOI arXiv:1806.07723
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Nikanjam A, 2021, Arxiv, DOI arXiv:2101.00135
   Odena A, 2019, PR MACH LEARN RES, V97
   Pan XL, 2017, Arxiv, DOI arXiv:1704.03952
   Pang Q, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P378, DOI 10.1145/3533767.3534388
   Patton R., 2006, Software testing
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Scheffe H., 1999, The Analysis of Variance, VVolume 72
   Schulman J, 2017, Arxiv, DOI [arXiv:1707.06347, DOI 10.48550/ARXIV.1707.06347]
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.2307/2333709
   Shixiang Gu, 2017, 2017 IEEE International Conference on Robotics and Automation (ICRA), P3389, DOI 10.1109/ICRA.2017.7989385
   Shu Fang, 2019, IOP Conference Series: Materials Science and Engineering, V612, DOI 10.1088/1757-899X/612/5/052039
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Trujillo M., 2020, P IEEE ACM 42 INT C, P215, DOI 10.1145/3387940.3391462
   Wang ZY, 2016, PR MACH LEARN RES, V48
   Xie XF, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3490489
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 38
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2024
VL 212
AR 112016
DI 10.1016/j.jss.2024.112016
EA MAR 2024
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QN7I2
UT WOS:001221612500001
DA 2024-08-05
ER

PT J
AU Vishnubhotla, SD
   Mendes, E
AF Vishnubhotla, Sai Datta
   Mendes, Emilia
TI Exploring the relation between personality traits and agile team
   climate: Aggregating results from a twice replicated study in a telecom
   company
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Personality traits; Team climate; Correlation analysis; Meta -analysis;
   Regression analysis; Agile software development
ID SOFTWARE-DEVELOPMENT; JOB-PERFORMANCE; QUALITY; PERSPECTIVE; VALIDATION;
   INNOVATION; EDUCATION; FAMILY; MODEL
AB Context: Former literature revealed team performance is contingent on personality composition and interactive effects of team climate. While decades of research on personality prevails in software engineering, team climate remains sparsely researched. Objective: In agile software development, individuals and interactions are key sources of agility. This study replicates a previous study and analyzes the relationship between five-factor-model personality traits and team climate dimensions among agile teams in a telecom company. Method: A Web-based survey was replicated twice, first with 75 professionals from 12 teams in Sweden, followed by 46 professionals from seven teams in India. The data was used for correlation, regression analyses, and metaanalysis. Results: We observed significant negative correlations between neuroticism and all the team climate dimensions. Meta-analysis identified a significant medium-sized negative effect between neuroticism and participative safety. Regression analysis showed personality traits accounted for around 10 % of the variance in team climate dimensions. Conclusions: High neuroticism is not conducive to team climate as emotionally unstable members could impair team cohesion by being reactive and susceptible to stress. Managers assembling Scrum teams ought to mitigate higher neuroticism by counterbalancing it with an elevation of corresponding negatively correlated personality variables and providing support/training towards increasing the aforementioned variables.
C1 [Vishnubhotla, Sai Datta; Mendes, Emilia] BTH Blekinge Tekn Hogskola, Dept Comp Sci, Karlskrona, Sweden.
RP Vishnubhotla, SD (corresponding author), BTH Blekinge Tekn Hogskola, Dept Comp Sci, Karlskrona, Sweden.
EM sai-datta.vishnubhotla@bth.se
FU KK- stiftelsen-HOG AGILE research project
FX We want to thank all those who participated in the surveys that were
   detailed in this study. This research was partially funded by the KK-
   stiftelsen-HOG AGILE research project.
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Acuña ST, 2015, INFORM SOFTWARE TECH, V57, P141, DOI 10.1016/j.infsof.2014.09.002
   Agrawal V., 2017, Requirements of commercial-off-the-shelf software-a comparison between manufacturing and service sectors
   Allemand M, 2017, J PSYCHOTHER INTEGR, V27, P476, DOI 10.1037/int0000094
   Ambler SW, 2008, DR DOBBS J, V33, P52
   Ampatzoglou A., 2020, Contemporary empirical methods in software engineering, P415
   Anderson G., 2018, HAWAII INT C SYSTEM
   Anderson NR, 1998, J ORGAN BEHAV, V19, P235, DOI 10.1002/(SICI)1099-1379(199805)19:3<235::AID-JOB837>3.0.CO;2-C
   [Anonymous], 2021, 15th State of Agile Report
   [Anonymous], 2023, IEEE journals & magazine |
   [Anonymous], Software project failure process definition | IEEE journals & magazine
   Balijepally V, 2006, COMMUN ASSOC INF SYS, V18, P55
   BARRICK MR, 1991, PERS PSYCHOL, V44, P1, DOI 10.1111/j.1744-6570.1991.tb00688.x
   Barrick MR, 1998, J APPL PSYCHOL, V83, P377, DOI 10.1037/0021-9010.83.3.377
   Barry B, 1997, J APPL PSYCHOL, V82, P62, DOI 10.1037/0021-9010.82.1.62
   Baumgart R, Personality traits of scrum roles in agile software development teams-a qualitative analysis
   Berraies S, 2023, J KNOWL MANAG, V27, P842, DOI 10.1108/JKM-09-2021-0720
   Braver SL, 2014, PERSPECT PSYCHOL SCI, V9, P333, DOI 10.1177/1745691614529796
   Burch G.S.J., 2004, Journal of Managerial Psychology, V19, P406
   Calefato F, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3491039
   Capretz LF, 2017, INFORM SOFTWARE TECH, V92, P92, DOI 10.1016/j.infsof.2017.07.011
   Capretz LF, 2014, IEEE SOFTWARE, V31, P104
   Caulo M, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P70, DOI 10.1145/3463274.3463327
   Chatzi S, 2023, APPL PSYCHOL-INT REV, V72, P769, DOI 10.1111/apps.12408
   Chiu CY, 2021, J OCCUP ORGAN PSYCH, V94, P187, DOI 10.1111/joop.12333
   Costa P.T., 1992, Revised NEO Personality Inventory (NEO-PI-R) and NEO Five-Factor Inventory (NEO-FFI) manual
   Costa P. T., 2008, The Revised NEO Personality Inventory (NEO-PI-R), VVol. 2, P179, DOI [DOI 10.4135/9781849200479.N9, 10.4135/9781849200479.n9, 10.4135/9781849200479]
   Cruz Shirley S. J. O., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P1, DOI 10.1049/ic.2011.0001
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   Domino M.A., 2003, SIGMIS C COMPUTER PE, P44
   Donnellan MB, 2006, PSYCHOL ASSESSMENT, V18, P192, DOI 10.1037/1040-3590.18.2.192
   Dutra E, 2020, PROCEEDINGS OF THE 19TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, SBOS 2020, DOI 10.1145/3439961.3439968
   Dutra E, 2020, IET SOFTW, V14, P861, DOI 10.1049/iet-sen.2020.0048
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Fay D., 2004, European Journal of Work and Organizational Psychology, V13, P241, DOI [10.1080/13594320444000083, DOI 10.1080/13594320444000083]
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Fowler M., 2001, Software Development, V9, P28
   Francese R, 2021, LECT NOTES COMPUT SC, V13126, P167, DOI 10.1007/978-3-030-91452-3_11
   Garousi V, 2019, J SYST SOFTWARE, V156, P65, DOI 10.1016/j.jss.2019.06.044
   Gilal AR, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1920
   Gilal AR, 2014, 2014 INTERNATIONAL CONFERENCE ON COMPUTER, COMMUNICATIONS, AND CONTROL TECHNOLOGY (I4CT), P261, DOI 10.1109/I4CT.2014.6914186
   Goldberg L. R., 1999, Personality Psychology in Europe, V7, P7, DOI DOI 10.1016/J.JRP.2014.05.003
   Goldberg LR, 2006, J RES PERS, V40, P84, DOI 10.1016/j.jrp.2005.08.007
   Hogan R., 1997, Handbook of Personality Psychology, DOI [10.1016/B978-0-12-134645-4.X5000-8, DOI 10.1016/B978-0-12-134645-4.X5000-8]
   Jalote P, 2019, COMMUN ACM, V62, P64, DOI 10.1145/3347863
   Johnson J.A., Interpreting individual IPIP scale scores
   Johnson J.A., IPIP NEO NARRATIVE R
   Johnson JA, 2014, J RES PERS, V51, P78, DOI 10.1016/j.jrp.2014.05.003
   Jorgensen M, 2016, J SYST SOFTWARE, V116, P133, DOI 10.1016/j.jss.2015.03.065
   Kang HR, 2006, HUM RELAT, V59, P1681, DOI 10.1177/0018726706072891
   Klebanov B.B., 2006, Using people and WordNet to measure semantic relatedness
   Kollmann T, 2009, J MANAGE INFORM SYST, V25, P51, DOI 10.2753/MIS0742-1222250402
   Kosti MV, 2014, INFORM SOFTWARE TECH, V56, P973, DOI 10.1016/j.infsof.2014.03.004
   Lee J.M., 1978, P 1978 ANN C, V2, P561, DOI [10.1145/800178.810092, DOI 10.1145/800178.810092]
   Lee JC, 2020, J ENTERP INF MANAG, V33, P502, DOI 10.1108/JEIM-07-2019-0202
   Lee Kibeom., 2020, Encyclopedia of Personality and Individual Differences, P1932, DOI [10.1007/978-3-319-24612-3_1227, DOI 10.1007/978-3-319-24612-3_1227]
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Maier M, 2022, ADV METH PRACT PSYCH, V5, DOI 10.1177/25152459221080396
   Mathisen GE, 2004, SCAND J PSYCHOL, V45, P383, DOI 10.1111/j.1467-9450.2004.00420.x
   Matthews G., 2003, Personality Traits
   Matturro G., 2015, Soft skills in scrum teams. a survey of the most valued to have by product owners and scrum masters, P42, DOI DOI 10.18293/SEKE2015-026
   Matzler K, 2008, J ECON PSYCHOL, V29, P301, DOI 10.1016/j.joep.2007.06.004
   MCCRAE RR, 1989, J PERS, V57, P17, DOI 10.1111/j.1467-6494.1989.tb00759.x
   McCrae RR, 2005, J PERS SOC PSYCHOL, V88, P547, DOI 10.1037/0022-3514.88.3.547
   Mendes F, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106586
   Mendes FF, 2019, INFORM SOFTWARE TECH, V111, P50, DOI 10.1016/j.infsof.2019.03.010
   Molleman E, 2004, SMALL GR RES, V35, P515, DOI 10.1177/1046496404264361
   Neuman GA, 1999, J APPL PSYCHOL, V84, P376, DOI 10.1037/0021-9010.84.3.376
   Neuman GA, 1999, GROUP ORGAN MANAGE, V24, P28, DOI 10.1177/1059601199241003
   O'Neill TA, 2011, EUR J PERSONALITY, V25, P31, DOI 10.1002/per.769
   Penzenstadler B, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10148-z
   Qamar N, 2020, COMPUT INFORM, V39, P994, DOI 10.31577/cai_2020_5_994
   Ragazzoni P., 2002, Journal of Managerial Psychology, V17, P325, DOI [10.1108/02683940210428128, DOI 10.1108/02683940210428128]
   Rahman HU, 2021, IEEE ACCESS, V9, P58589, DOI 10.1109/ACCESS.2021.3073315
   Rahmani C., 2010, 2010 IEEE/ACIS 9th International Conference on Computer and Information Science (ICIS 2010), P679, DOI 10.1109/ICIS.2010.11
   Reiter-Palmon R, 2012, HANDBOOK OF ORGANIZATIONAL CREATIVITY, P295, DOI 10.1016/B978-0-12-374714-3.00013-6
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Rothstein M. G., 2006, Human Resources Management Review, V16, P155, DOI 10.1016/j.hrmr.2006.03.004
   Russo D, 2021, Arxiv, DOI arXiv:2111.10349
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Salman I, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P130, DOI 10.1145/3202710.3203148
   Santos A, 2021, IEEE T SOFTWARE ENG, V47, P1742, DOI 10.1109/TSE.2019.2935720
   Santos A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09907-7
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Silva DS, 2019, IEEE SYS MAN CYBERN, P2939, DOI 10.1109/SMC.2019.8914670
   Soomro AB, 2015, 2015 9TH MALAYSIAN SOFTWARE ENGINEERING CONFERENCE (MYSEC2015), P259, DOI 10.1109/MySEC.2015.7475230
   Soomro AB, 2016, INFORM SOFTWARE TECH, V73, P52, DOI 10.1016/j.infsof.2016.01.006
   Stieger M, 2021, P NATL ACAD SCI USA, V118, DOI 10.1073/pnas.2017548118
   Sturdee Miriam, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P221, DOI 10.1145/3530019.3530042
   Sumner M, 2010, SIGMIS CPR '10: PROCEEDINGS OF THE 2010 ACM SIGMIS COMPUTER PERSONNEL RESEARCH CONFERENCE, P34
   Trendowicz A, 2009, ADV COMPUT, V77, P185, DOI 10.1016/S0065-2458(09)01206-6
   Trochim W. M., 2006, RES METHODS KNOWLEDG
   Truong D, 2016, INT J INF TECHNOL PR, V7, P1, DOI 10.4018/IJITPM.2016040101
   Usman M, 2018, INFORM SOFTWARE TECH, V99, P21, DOI 10.1016/j.infsof.2018.02.009
   Vishnubhotla SD, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106335
   Vishnubhotla SD, 2018, PROCEEDINGS OF 2018 7TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2018), P10, DOI 10.1145/3185089.3185096
   Weinberg GM, 1971, PSYCHOL COMPUTER PRO
   Xu XH, 2019, J OCCUP ORGAN PSYCH, V92, P848, DOI 10.1111/joop.12277
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
   Zolduoarrati E, 2023, J SYST SOFTWARE, V200, DOI 10.1016/j.jss.2023.111654
NR 102
TC 1
Z9 1
U1 6
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111937
DI 10.1016/j.jss.2023.111937
EA JAN 2024
PG 27
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IC9X7
UT WOS:001164255100001
OA hybrid
DA 2024-08-05
ER

PT J
AU Wang, RC
   Ji, XY
   Xu, SL
   Tian, Y
   Jiang, SJ
   Huang, RB
AF Wang, Rongcun
   Ji, Xingyu
   Xu, Senlei
   Tian, Yuan
   Jiang, Shujuan
   Huang, Rubing
TI An empirical assessment of different word embedding and deep learning
   models for bug assignment
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Bug assignment; Bug report; Word embedding; Deep learning;
   Classification
ID TRIAGE
AB Bug assignment, or bug triage, focuses on identifying the appropriate developers to repair newly discovered bugs, thereby managing them more effectively. Several deep learning -based approaches have been proposed for automated bug assignment. These approaches view automated bug assignment as a text classification task - the textual description of a bug report is utilized as the input and the potential fixers are regarded as the output labels. Such approaches typically depend on the classification performance of natural language processing and machine learning techniques. Various word embedding and deep learning models have emerged continuously. The effectiveness of those approaches depends on the chosen deep learning model, used for classification, and the word embedding model, used for representing bug reports. However, prior research does not empirically evaluate the impacts of various word embedding and deep learning models for automated bug assignment. In this paper, we conduct an empirical study to analyze the performance variations among 35 deep learning -based automated bug assignment approaches. These approaches are based on five word embedding techniques, i.e., Word2Vec, GloVe, NextBug, ELMo, and BERT, and seven text classification models, i.e., TextCNN, LSTM, Bi-LSTM, LSTM with attention, Bi-LSTM with attention, MLP, and Naive Bayes. We evaluated these combinations across three benchmark datasets, namely Eclipse JDT, GCC, and Firefox, and their mergence i.e., a cross -project dataset. Our main observations are: (1) Bi-LSTM with attention and Bi-LSTM using ELMo are significantly superior to other deep learning models on bug assignment tasks in terms of top -k (k = 1, 5, 10) accuracy and MRR; (2) Both the summary and description of bug reports are useful for bug assignment, but the description is more useful than the summary; (3) The training corpus for word embedding models has a significant impact on the performance of deep learning -based bug assignment methods. Our results show the importance of tuning different components (e.g. word embedding model, classification model, and textual input) in deep learning -based automated bug assignment methods and provide important insights for practitioners and researchers.
C1 [Wang, Rongcun; Ji, Xingyu; Xu, Senlei; Jiang, Shujuan; Huang, Rubing] China Univ Min & Technol, Sch Comp Sci & Technol, 1 Daxue Rd, Xuzhou 221116, Jiangsu, Peoples R China.
   [Tian, Yuan] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Huang, Rubing] Macau Univ Sci & Technol, Sch Comp Sci & Engn, Taipa, Macao, Peoples R China.
C3 China University of Mining & Technology; Queens University - Canada;
   Macau University of Science & Technology
RP Wang, RC (corresponding author), China Univ Min & Technol, Sch Comp Sci & Technol, 1 Daxue Rd, Xuzhou 221116, Jiangsu, Peoples R China.
EM rcwang@cumt.edu.cn
OI Tian, Yuan/0000-0002-2208-3893; Huang, Rubing/0000-0002-1769-6126
FU National Natural Science Foundation of China [61673384, 61872167,
   61502205]; Science and Technology Development Fund of Macau, Macau SAR
   [0046/2021/A, 0021/2023/R1A1]; Faculty Research Grant of Macau
   University of Science and Technology [FRG-22-103-FIE]
FX The authors would like to thank the anonymous reviewers for their
   valuable comments and helpful suggestions. This work is partially
   supported by the National Natural Science Foundation of China under
   grant NO. 61673384, No. 61872167 and No. 61502205, partially supported
   by the Science and Technology Development Fund of Macau, Macau SAR under
   grant 0046/2021/A and 0021/2023/R1A1, and partially supported by a
   Faculty Research Grant of Macau University of Science and Technology
   under grant FRG-22-103-FIE.
CR Ahsan SN, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P216, DOI 10.1109/ICSEA.2009.92
   Alazzam I, 2020, IEEE T COMPUT SOC SY, V7, P1288, DOI 10.1109/TCSS.2020.3017501
   Anvik J., 2006, Proceedings of the 28th international conference on Software engineering. ICSE'06, P361, DOI [10.1145/1134285.1134336, DOI 10.1145/1134285.1134336]
   Aung TWW, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111133
   Beltagy I, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3615
   Bhattacharya P, 2012, J SYST SOFTWARE, V85, P2275, DOI 10.1016/j.jss.2012.04.053
   Bird S., 2009, Natural Language Processing with Python, DOI DOI 10.5555/1717171
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Choquette-Choo Christopher A., 2019, 2019 18th IEEE International Conference On Machine Learning And Applications (ICMLA), P937, DOI 10.1109/ICMLA.2019.00161
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Dai W., 2007, P 22 ASS ADV ART INT, P540
   Dedik V, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P363, DOI 10.1109/SEAA.2016.20
   Du XT, 2022, IEEE T RELIAB, V71, P1540, DOI 10.1109/TR.2021.3110096
   Frank E, 2006, LECT NOTES ARTIF INT, V4213, P503
   Giray G, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111537
   Graves A, 2012, STUD COMPUT INTELL, V385, P37
   Guo SK, 2020, NEURAL PROCESS LETT, V51, P2589, DOI 10.1007/s11063-020-10213-y
   Hu DY, 2018, ASIA PAC SOFWR ENG, P725, DOI 10.1109/APSEC.2018.00108
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Jahanshahi H, 2022, INFORM SOFTWARE TECH, V151, DOI 10.1016/j.infsof.2022.107025
   Jahanshahi H, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P221, DOI 10.1145/3463274.3463342
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Kim Yoon, 2014, EMNLP, P1746, DOI 10.3115/v1/D14-1181
   Ko AJ, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P127
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lee DG, 2019, J INF PROCESS SYST, V15, P967, DOI 10.3745/JIPS.04.0130
   Lee J, 2020, BIOINFORMATICS, V36, P1234, DOI 10.1093/bioinformatics/btz682
   Lee SR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P926, DOI 10.1145/3106237.3117776
   Mani S, 2019, PROCEEDINGS OF THE 6TH ACM IKDD CODS AND 24TH COMAD, P171, DOI 10.1145/3297001.3297023
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Metsis V., 2006, CEAS 2006, V17, P28
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, DOI 10.48550/ARXIV.1301.3781]
   Murphy G, 2004, P 16 INT C SOFTW ENG
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Nowak J, 2017, LECT NOTES ARTIF INT, V10246, P553, DOI 10.1007/978-3-319-59060-8_50
   Romano J., 2006, ANN M FLORIDA ASS IN
   Rusland NF, 2017, IOP CONF SER-MAT SCI, V226, DOI 10.1088/1757-899X/226/1/012091
   Sajedi-Badashian A, 2020, SOFTWARE PRACT EXPER, V50, P1539, DOI 10.1002/spe.2830
   Sarkar A, 2019, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSME.2019.00018
   Sawarkar R., 2019, P 5 INT C CONVERGENC, P1
   Sbih A, 2018, J MULT-VALUED LOG S, V31, P567
   Shuo Xu, 2017, Advanced Multimedia and Ubiquitous Engineering, MUE/FutureTech 2017. LNEE 448, P347, DOI 10.1007/978-981-10-5041-1_57
   Sun XB, 2017, J SYST SOFTWARE, V134, P355, DOI 10.1016/j.jss.2017.09.021
   Tan SB, 2009, LECT NOTES COMPUT SC, V5478, P337
   Taud H., 2018, Geomatic Approaches for Modeling Land Change Scenarios, P451, DOI DOI 10.1007/978-3-319-60801-3_27
   von der Mosel J, 2023, IEEE T SOFTWARE ENG, V49, P1487, DOI 10.1109/TSE.2022.3178469
   Voorhees E.M., 1999, Proceedings of TREC
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Wongkar M, 2019, 2019 4 INT C INFORMA, P1
   Wu WJ, 2011, ASIA PAC SOFWR ENG, P389, DOI 10.1109/APSEC.2011.15
   Xi SQ, 2018, INTERNETWARE'18: PROCEEDINGS OF THE TENTH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, DOI 10.1145/3275219.3275228
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xia X, 2015, J SOFTW-EVOL PROC, V27, P195, DOI 10.1002/smr.1706
   Xuan JF, 2015, IEEE T KNOWL DATA EN, V27, P264, DOI 10.1109/TKDE.2014.2324590
   Yadav Asmita, 2020, International Journal of Intelligent Systems Technologies and Applications, V19, P78
   Yang G, 2014, P INT COMP SOFTW APP, P97, DOI 10.1109/COMPSAC.2014.16
   Yin Y, 2018, IEEE ACCESS, V6, P52713, DOI 10.1109/ACCESS.2018.2869306
   Zaidi SFA, 2020, IEEE ACCESS, V8, P213729, DOI 10.1109/ACCESS.2020.3040065
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
   Zhang T, 2017, INT C PROGRAM COMPRE, P230, DOI 10.1109/ICPC.2017.28
   Zhang Y, 2017, P 8 IJCNLP TAIP TAIW, V1, P253, DOI DOI 10.48550/ARXIV.1510.03820
   Zhou Y, 2016, J SOFTW-EVOL PROC, V28, P150, DOI 10.1002/smr.1770
NR 62
TC 0
Z9 0
U1 6
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111961
DI 10.1016/j.jss.2024.111961
EA JAN 2024
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IH3F5
UT WOS:001165390800001
DA 2024-08-05
ER

PT J
AU Flora, J
   Antunes, N
AF Flora, Jose
   Antunes, Nuno
TI Evaluating intrusion detection for microservice applications: Benchmark,
   dataset, and case studies
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Microservices; Security benchmarking; Datasets; Intrusion detection;
   Attack injection
AB Microservices are predominant for cloud-based applications, which serve millions of customers daily, that commonly run business-critical systems on software containers and multi-tenant environments; so, it is of utmost importance to secure these systems. Intrusion detection is a widely applied technique that is now being used in microservices to build behavior detection models and report possible attacks during runtime. However, it is cumbersome to evaluate and compare the effectiveness of different approaches. Standardized frameworks are non-existent and without fairly comparing new techniques to the state-of-the-art, it is difficult to understand their pros and cons. This paper presents a comprehensive approach to evaluate and compare different intrusion detection approaches for microservice applications. A benchmarking methodology is proposed to allow users to standardize the process for a representative and reproducible evaluation. We also present a dataset that applies representative workloads and technologies based on microservice applications state-of-the-art. The benchmark and dataset are used in three case studies, characterized by dynamicity, scalability, and continuous delivery, to evaluate and compare state-of-the-art algorithms with the objective of tackling intrusion detection in microservices. Experiments show the usefulness and wide application range of the benchmark while showing the capacity of intrusion detection algorithms in different applications and deployments.
C1 [Flora, Jose; Antunes, Nuno] Univ Coimbra, Dept Informat Engn, CISUC, Coimbra, Portugal.
C3 Universidade de Coimbra
RP Flora, J (corresponding author), Univ Coimbra, Dept Informat Engn, CISUC, Coimbra, Portugal.
EM jeflora@dei.uc.pt
FU Portuguese Foundation for Science and Technology (FCT) [2020.05145.BD];
   Portuguese Recovery and Resilience Plan (PRR) [C645112083-00000059];
   FCT-Foundation for Science and Technology, I.P./MCTES through national
   funds (PIDDAC) [UIDB/00326/2020, UIDP/00326/2020]
FX This work was supported by the Portuguese Foundation for Science and
   Technology (FCT) through the Ph.D. grant 2020.05145.BD . Content
   produced within the scope of the Agenda "NEXUS-Pacto de
   Inovacao-Transicao Verde e Digital para Transportes, Logistica e
   Mobilidade", financed by the Portuguese Recovery and Resilience Plan
   (PRR) , with no. C645112083-00000059 (investment project no. o 53) This
   work is also funded by the FCT-Foundation for Science and Technology,
   I.P./MCTES through national funds (PIDDAC) , within the scope of CISUC
   R&D Unit-UIDB/00326/2020 or project code UIDP/00326/2020 . It was also
   developed in the context of SPEC RG Security Benchmarking
   (http://research.spec.org) .
CR Abed AS, 2015, LECT NOTES COMPUT SC, V9331, P123, DOI 10.1007/978-3-319-24858-5_8
   [Anonymous], 1998, 1998 DARPA intrusion detection evaluation data set
   Antunes Nuno, 2010, 2010 IEEE International Conference on Web Services (ICWS), P203, DOI 10.1109/ICWS.2010.76
   Antunes N, 2015, I C DEPEND SYS NETWO, P505, DOI 10.1109/DSN.2015.30
   Araujo I, 2023, PROCEEDINGS OF12TH LATIN-AMERICAN SYMPOSIUM ON DEPENDABLE AND SECURE COMPUTING, LADC 2023, P126, DOI 10.1145/3615366.3615375
   Bace R.G., 2001, NIST Special Publication on Intrusion Detection Systems
   Bharadwaja S., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P695, DOI 10.1109/ITNG.2011.123
   Breunig MM, 2000, SIGMOD REC, V29, P93, DOI 10.1145/335191.335388
   Brown K., 2022, Linux basic health check commands
   CAIDA, 2007, The CAIDA DDoS attack 2007 dataset
   Cavalcanti M., 2021, 16 INT C AV REL SEC, P1
   Chang H, 2019, I C NETWORK PROTOCOL
   Chen WH, 2005, COMPUT OPER RES, V32, P2617, DOI 10.1016/j.cor.2004.03.019
   CISA, 2023, 2022 Top routinely exploited vulnerabilities
   Cloud Native Computing Foundation, 2022, Kubernetes
   Creech G, 2014, IEEE T COMPUT, V63, P807, DOI 10.1109/TC.2013.13
   CWE, 2023, 2023 CWE top 25 most dangerous software weaknesses
   DeathStarBench, 2023, Social network microservices
   Dempsey K.L., 2011, Tech. Rep. NIST SP 800-13
   DevOpsArticle, 2021, Check linux systems health with 10 powerful commands 2021
   dotnet, 2023, eShop reference application
   Dragoni N., 2017, PRESENT ULTERIOR SOF, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Dragoni N, 2018, LECT NOTES COMPUT SC, V10742, P95, DOI 10.1007/978-3-319-74313-4_8
   El khairi Asbat, 2022, CCSW'22: Proceedings of the 2022 on Cloud Computing Security Workshop, P9, DOI 10.1145/3560810.3564266
   Flora Jose, 2023, 2023 IEEE 28th Pacific Rim International Symposium on Dependable Computing (PRDC), P39, DOI 10.1109/PRDC59308.2023.00014
   Flora J, 2024, EUR D COMPUT CONF, P161, DOI 10.1109/EDCC61798.2024.00039
   Flora J, 2023, Soft Anal Evol Reeng, P748, DOI 10.1109/SANER56733.2023.00084
   Flora J, 2020, IEEE PAC RIM INT SYM, P60, DOI 10.1109/PRDC50213.2020.00017
   Flora J, 2019, 2019 15TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2019), P133, DOI 10.1109/EDCC.2019.00033
   Forrest S, 1996, P IEEE S SECUR PRIV, P120, DOI 10.1109/SECPRI.1996.502675
   Fowler, 2014, MICROSERVICES
   Gan Y, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P3, DOI 10.1145/3297858.3304013
   German Zenetti, 2022, Customer research on Amazon contributes to the offline path to purchase
   Gray J., 1993, The Benchmark Handbook for Database and Transaction Systems, Vsecond
   Grimmer M., 2019, IT-Sicherheit als Voraussetzung fur eine erfolgreiche Digitalisierung, P135
   Hannousse A, 2021, COMPUT SCI REV, V41, DOI 10.1016/j.cosrev.2021.100415
   Hofmeyr S. A., 1998, Journal of Computer Security, V6, P151
   Islam MS, 2018, IEEE T RELIAB, V67, P212, DOI 10.1109/TR.2017.2787138
   Kang DK, 2005, PROCEEDINGS FROM THE SIXTH ANNUAL IEEE SYSTEMS, MAN AND CYBERNETICS INFORMATION ASSURANCE WORKSHOP, P118, DOI 10.1109/IAW.2005.1495942
   Kerrisk M., 2023, Linux man pages
   Kistowski J.v., 2014, P 5 ACM SPEC INT C P, P225
   Kistowski Joakim v., 2015, P 6 ACMSPEC INT C PE, P333, DOI 10.1145/2668930.2688819
   Kong, 2020, Tech. Rep., P18
   Kubernetes, 2020, Horizontal pod autoscaler
   Lin X, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P418, DOI 10.1145/3274694.3274720
   Liu FT, 2008, IEEE DATA MINING, P413, DOI 10.1109/ICDM.2008.17
   Madden N., 2020, API Security in Action
   Mell P, 2010, COMMUN ACM, V53, P50
   Milenkoski A., RES ATTACKS INTRUSIO, P471
   Milenkoski A, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2808691
   Mohan V, 2016, PROCEEDINGS OF 2016 11TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, (ARES 2016), P542, DOI 10.1109/ARES.2016.92
   Moustafa N, 2015, 2015 MILITARY COMMUNICATIONS AND INFORMATION SYSTEMS CONFERENCE (MILCIS)
   Musa J.D., 1996, Reliability and Maintenance of Complex Systems, P333
   Newman S., 2015, Building Microservices
   Nunes P, 2018, IEEE T RELIAB, V67, P1159, DOI 10.1109/TR.2018.2839339
   Ogur H.B., 2022, A Novel Container Attacks Data Set for Intrusion Detection
   Pereira-Vale A, 2019, 2019 XLV LATIN AMERICAN COMPUTING CONFERENCE (CLEI 2019), DOI 10.1109/CLEI47609.2019.235060
   Prasad NR, 2009, CMC-COMPUT MATER CON, V14, P1, DOI 10.1145/1541880.1541882
   Ran, 2023, 10 Linux commands to monitor your system's health
   Röhling MM, 2019, FED CONF COMPUT SCI, P459, DOI 10.15439/2019F212
   RuSSELL Stuart, 2010, Artificial Intelligence: A Modern Approach
   Sever Y., 2023, ITU J. Future Evolv. Technol., V4, P383
   Sharafaldin I, 2018, ICISSP: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS SECURITY AND PRIVACY, P108, DOI 10.5220/0006639801080116
   Shiravi A, 2012, COMPUT SECUR, V31, P357, DOI 10.1016/j.cose.2011.12.012
   Souppaya M., 2017, Tech. Rep. NIST SP 800-190
   Srinivasan S., 2019, Security in Computing and Communications, P336
   Strom B.E., 2018, Technical report
   Strom D., 2016, Why runtime application self-protection is critical for next generation app security
   Sultan S, 2019, IEEE ACCESS, V7, P52976, DOI 10.1109/ACCESS.2019.2911732
   Sysdig Inc, 2022, Sysdig
   Tavallaee M., 2009, PROC IEEE S COMPUT, P6
   The Spring PetClinic Community, 2016, Spring PetClinic
   The Vulnerabilities Hub, 2021, Pre-built vulnerable environments based on docker-compose
   UNM, 1999, UNM intrusion detection dataset
   Vieira M., 2012, Resilience assessment and evaluation of computing systems, P283, DOI 10.1007/978-3-642-29032-9_14
   von Kistowski J, 2018, I S MOD ANAL SIM COM, P223, DOI 10.1109/MASCOTS.2018.00030
   Warrender C, 1999, P IEEE S SECUR PRIV, P133, DOI 10.1109/SECPRI.1999.766910
   Weaveworks, 2017, Sock Shop: A microservice demo application
   Zhou X, 2018, PROC IEEE ACM INT C, P323, DOI 10.1145/3183440.3194991
NR 79
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112142
DI 10.1016/j.jss.2024.112142
EA JUL 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XZ3M8
UT WOS:001265462800001
OA hybrid
DA 2024-08-05
ER

PT J
AU Zhang, FJ
   Zhang, ZX
   Keung, JW
   Tang, XR
   Yang, Z
   Yu, X
   Hu, WH
AF Zhang, Fengji
   Zhang, Zexian
   Keung, Jacky Wai
   Tang, Xiangru
   Yang, Zhen
   Yu, Xiao
   Hu, Wenhua
TI Data preparation for Deep Learning based Code Smell Detection: A
   systematic literature review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Code smell detection; Deep learning; Data preparation; Systematic
   literature review
ID DEFECT PREDICTION; SOFTWARE
AB Code Smell Detection (CSD) plays a crucial role in improving software quality and maintainability. And Deep Learning (DL) techniques have emerged as a promising approach for CSD due to their superior performance. However, the effectiveness of DL -based CSD methods heavily relies on the quality of the training data. Despite its importance, little attention has been paid to analyzing the data preparation process. This systematic literature review analyzes the data preparation techniques used in DL -based CSD methods. We identify 36 relevant papers published by December 2023 and provide a thorough analysis of the critical considerations in constructing CSD datasets, including data requirements, collection, labeling, and cleaning. We also summarize seven primary challenges and corresponding solutions in the literature. Finally, we offer actionable recommendations for preparing and accessing high -quality CSD data, emphasizing the importance of data diversity, standardization, and accessibility. This survey provides valuable insights for researchers and practitioners to harness the full potential of DL techniques in CSD.
C1 [Zhang, Fengji; Keung, Jacky Wai] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
   [Zhang, Zexian; Yu, Xiao; Hu, Wenhua] Wuhan Univ Technol, Sch Comp Sci & Artificial Intelligence, Wuhan, Peoples R China.
   [Zhang, Zexian] Wuhan Univ Technol, Sanya Sci & Educ Innovat Pk, Sanya, Peoples R China.
   [Tang, Xiangru] Yale Univ, Sch Engn & Appl Sci, New Haven, CT USA.
   [Yang, Zhen] Shandong Univ, Sch Comp Sci & Technol, Zibo, Peoples R China.
   [Yu, Xiao] Wuhan Univ Technol, Chongqing Res Inst, Chongqing, Peoples R China.
C3 City University of Hong Kong; Wuhan University of Technology; Wuhan
   University of Technology; Yale University; Shandong University; Wuhan
   University of Technology
RP Yu, X (corresponding author), Wuhan Univ Technol, Sch Comp Sci & Artificial Intelligence, Wuhan, Peoples R China.
EM fengji.zhang@my.cityu.edu.hk; zexianzhang@whut.edu.cn;
   jacky.keung@cityu.edu.hk; xiangru.tang@yale.edu; zhenyang@sdu.edu.cn;
   xiaoyu@whut.edu.cn; whu10@whut.edu.cn
OI Keung, Jacky/0000-0002-3803-9600; Zhang, Fengji/0000-0002-0965-417X
FU National Natural Science Foundation of China [62202350]; Natural Science
   Foundation of Chongqing, China [cstc2021jcyj-msxmX1115]; General Re-
   search Fund of the Research Grants Council of Hong Kong; City University
   of Hong Kong [6000796, 9229109, 9229098, 9220103, 9229029]
FX This work is partially supported by the National Natural Science
   Foundation of China (62202350) , the Natural Science Foundation of
   Chongqing, China (cstc2021jcyj-msxmX1115) , and the General Re- search
   Fund of the Research Grants Council of Hong Kong and the research funds
   of the City University of Hong Kong (6000796, 9229109, 9229098, 9220103,
   9229029) .
CR Afrin Mehenaz, 2022, 2022 25th International Conference on Computer and Information Technology (ICCIT), P888, DOI 10.1109/ICCIT57492.2022.10055463
   Akuthota Vishwanath, 2023, 2023 IEEE 9th International Women in Engineering (WIE) Conference on Electrical and Computer Engineering (WIECON-ECE), P309, DOI 10.1109/WIECON-ECE60392.2023.10456393
   Al-Shaaby A, 2020, ARAB J SCI ENG, V45, P2341, DOI 10.1007/s13369-019-04311-w
   Alazba A, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10312-z
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Allal LB, 2023, Arxiv, DOI [arXiv:2301.03988, 10.48550/arXiv.2301.03988]
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Ardimento P, 2021, PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES (ICSOFT), P310, DOI 10.5220/0010602203100317
   Ardimento P, 2021, NEUROCOMPUTING, V463, P454, DOI 10.1016/j.neucom.2021.08.010
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Barbez A, 2019, PROC IEEE INT CONF S, P114, DOI 10.1109/ICSME.2019.00021
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bhave A, 2022, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM55253.2022.00018
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Checkstyle, About us
   Chen YX, 2023, IEEE T GEOSCI REMOTE, V61, DOI 10.1109/TGRS.2023.3255302
   Chen YX, 2020, IEEE T GEOSCI REMOTE, V58, P7049, DOI 10.1109/TGRS.2020.2979273
   Croft R, 2023, IEEE T SOFTWARE ENG, V49, P1044, DOI 10.1109/TSE.2022.3171202
   Danphitsanuphan P., 2012, 2012 SPRING C ENG TE, P1
   Das AK, 2019, TENCON IEEE REGION, P2081, DOI [10.1109/tencon.2019.8929628, 10.1109/TENCON.2019.8929628]
   Dewangan S, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app122010321
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Fakhoury S, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P602, DOI 10.1109/SANER.2018.8330265
   Feng S, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106432
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fowler M., 2018, Refactoring
   Gao Y, 2023, FRONT COMPUT SCI-CHI, V17, DOI 10.1007/s11704-022-1531-9
   Garousi V., 2017, P 21 INT C EV ASS SO, P170
   Gong LN, 2020, IEEE T RELIAB, V69, P40, DOI 10.1109/TR.2019.2895462
   Grodniyomchai B., 2019, 2019 5 INT C ENG APP, P1
   Guo XL, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3361257
   Gupta A, 2017, LECT NOTES COMPUT SC, V10408, P665, DOI 10.1007/978-3-319-62404-4_49
   Gupta H., 2021, Advanced Information Networking and Applications, P120, DOI DOI 10.1007/978-3-030-75075-610
   Hadj-Kacem M, 2019, COMM COM INF SC, V1142, P296, DOI 10.1007/978-3-030-36808-1_32
   Hadj-Kacem M, 2019, IEEE IJCNN
   Hadj-Kacem M, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P137, DOI 10.5220/0006709801370146
   Hamdy A., 2020, J. Theor. Appl. Inf. Technol., V98, P2684
   Ho A, 2023, 27TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, EASE 2023, P229, DOI 10.1145/3593434.3593476
   Hu WH, 2023, P INT COMP SOFTW APP, P840, DOI 10.1109/COMPSAC57700.2023.00113
   Imam AT, 2022, J KING SAUD UNIV-COM, V34, P2621, DOI 10.1016/j.jksuci.2022.03.028
   Jain S, 2021, SCI COMPUT PROGRAM, V212, DOI 10.1016/j.scico.2021.102713
   Jeevanantham M., 2022, Int. J. Intell. Eng. Syst., V15, P563
   Jian YH, 2019, IEICE T INF SYST, VE102D, P1966, DOI 10.1587/transinf.2019EDP7033
   Gutiérrez BJ, 2022, Arxiv, DOI arXiv:2203.08410
   Karasneh Bilal, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P134, DOI 10.1109/SEAA.2013.45
   Kaur A, 2021, RECENT ADV ELECTR EL, V14, P290, DOI 10.2174/2352096513999200922125839
   Kaur S., 2023, Agile Software Development: Trends, Challenges and Applications, P309
   Khleel NAA., 2022, Indones. J. Electr. Eng. Comput. Sci., V26, P1725, DOI 10.11591/ijeecs.v26.i3.pp1725-1735
   Kim D.K., 2017, Int. J. Electr. Comput. Eng. (IJECE), V7, P3613, DOI [DOI 10.11591/IJECE.V7I6.PP3613-3621, 10.11591/ijece. v7i6.pp3613-3621, 10.11591/ijece.v7i6.pp3613-3621]
   Kim DK, 2020, IEICE T INF SYST, VE103D, DOI 10.1587/transinf.2019EDL8195
   Kitchenham B., 2004, PROCEDURES PERFORMIN, DOI DOI 10.5144/0256-4947.2017.79
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lewowski T, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106783
   Li FY, 2023, SOFTWARE PRACT EXPER, V53, P1902, DOI 10.1002/spe.3235
   Li FY, 2023, IET SOFTW, V17, P168, DOI 10.1049/sfw2.12099
   Li Y, 2022, SEKE, P42
   Lin T., 2021, APPL CRYPTOGRAPHY CO, V1, P171
   Liu B, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P908, DOI 10.1145/3611643.3616353
   Liu H, 2021, IEEE T SOFTWARE ENG, V47, P1811, DOI 10.1109/TSE.2019.2936376
   Liu L., 2024, Expert Syst. Appl.
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Ma X., 2023, IEEE Trans. Reliab.
   Madeyski Lech, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P342, DOI 10.1145/3383219.3383264
   Malathi J., 2023, AIP C P
   Malhotra R, 2023, CLUSTER COMPUT, V26, P3473, DOI 10.1007/s10586-023-04144-1
   Marinescu C., 2005, IEEE INT C SOFTW MAI
   Martínez-Fernández S, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487043
   Naik P, 2024, J COMPUT INFORM SYST, V64, P314, DOI 10.1080/08874417.2023.2203088
   Palomba F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P482, DOI 10.1109/MSR.2015.69
   PMD, About us
   Podobnik B, 2007, Arxiv, DOI arXiv:0709.0281
   Qiao BY, 2023, FRONT COMPUT SCI-CHI, V17, DOI 10.1007/s11704-021-1080-7
   Ramos M., 2022, Technical Report
   Ren SJ, 2021, P INT COMP SOFTW APP, P864, DOI 10.1109/COMPSAC51774.2021.00119
   Roziere B, 2024, Arxiv, DOI arXiv:2308.12950
   Santos JAM, 2018, J SYST SOFTWARE, V144, P450, DOI 10.1016/j.jss.2018.07.035
   Schardt C, 2007, BMC MED INFORM DECIS, V7, DOI 10.1186/1472-6947-7-16
   Sharma T, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110936
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Shi L, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P107, DOI 10.1145/3540250.3549145
   Siddiq ML, 2022, IEEE INT WORK C SO, P71, DOI 10.1109/SCAM55253.2022.00014
   Sidhu Brahmaleen Kaur, 2022, International Journal of Computers and Applications, V44, P166, DOI 10.1080/1206212X.2020.1711616
   Sousa BL, 2017, INT C PROGRAM COMPRE, P360, DOI 10.1109/ICPC.2017.8
   Tarwani S., 2022, 2022 10 INT C REL IN, P1
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   ucdavis, US
   Virmajoki Joonas, 2022, 2022 45th Jubilee International Convention on Information, Communication and Electronic Technology (MIPRO)., P1393, DOI 10.23919/MIPRO55190.2022.9803727
   Virmajoki J., 2020, Detecting code smells using artificial intelligence: a prototype
   Wang HZ, 2020, IEEE INT SYMP PARAL, P448, DOI 10.1109/ISPA-BDCloud-SocialCom-SustainCom51426.2020.00082
   Wieman R., 2011, Anti-Pattern Scanner: An Approach to Detect Anti-Patterns and Design Violations
   Wohlin C., 2014, P 18 INT C EV ASS SO, DOI DOI 10.1145/2601248.2601268
   Xu W., 2021, P 33 INT C SOFTW ENG, P503
   Xu Z, 2019, J COMPUT SCI TECH-CH, V34, P1039, DOI 10.1007/s11390-019-1959-z
   Yang YM, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3505243
   Yang Z, 2023, ACM T SOFTW ENG METH, V32, DOI [10.1145/3534117, 10.11686/cyxb2022405]
   Yedida R, 2022, IEEE WORK CONF MIN S, P156, DOI 10.1145/3524842.3528458
   Yin X, 2021, P INT COMP SOFTW APP, P942, DOI 10.1109/COMPSAC51774.2021.00127
   Yu J, 2021, IEEE INT C S Q R S, P738, DOI 10.1109/QRS54544.2021.00083
   Yu X, 2018, SOFT COMPUT, V22, P3461, DOI 10.1007/s00500-018-3093-1
   Yu X, 2017, PROC INT SYMP SOFTW, P78, DOI 10.1109/ISSRE.2017.18
   Zakeri-Nasrabadi M, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3596908
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhang Minnan, 2022, 2022 9th International Conference on Dependable Systems and Their Applications (DSA), P215, DOI 10.1109/DSA56465.2022.00037
   Zhang Y, 2022, KNOWL-BASED SYST, V255, DOI 10.1016/j.knosys.2022.109737
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.62, 10.1109/APSEC.2016.031]
NR 107
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112131
DI 10.1016/j.jss.2024.112131
EA JUN 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XI4C2
UT WOS:001261029800001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Zhang, YL
   Liao, HY
   Wang, ZK
   Huang, B
   Guo, JM
AF Zhang, Yilei
   Liao, Haoyu
   Wang, Zekun
   Huang, Bo
   Guo, Jianmei
TI EFACT: An External Function Auto-Completion Tool to strengthen static
   binary lifting
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE External function completion; Binary lifting; Static binary translation;
   Reverse engineering
ID TRANSLATION
AB Static binary lifting is essential in binary rewriting frameworks. Existing tools overlook the impact of External Function Completion (EXFC) in static binary lifting. EXFC recovers the declarations of External Functions (EXFs, functions defined in standard shared libraries) using only the function symbols available. Incorrect EXFC can misinterpret the source binary, or cause memory overflows in static binary translation, which eventually results in program crashes. Notably, existing tools struggle to recover the declarations of mangled EXFs originating from binaries compiled from C++. Moreover, they require time-consuming manual processing to support new libraries. This paper presents EFACT, an External Function Auto -Completion Tool for static binary lifting. Our EXF recovery algorithm better recovers the declarations of mangled EXFs, particularly addressing the template specialization mechanism in C++. EFACT is designed as a lightweight plugin to strengthen other static binary rewriting frameworks in EXFC. Our evaluation shows that EFACT outperforms RetDec and McSema in mangled EXF recovery by 96.4% and 97.3% on SPECrate 2017. Furthermore, we delve deeper into static binary translation and address several cross-ISA EXFC problems. When integrated with McSema, EFACT correctly translates 36.7% more benchmarks from x86-64 to x86-64 and 93.6% more from x86-64 to AArch64 than McSema alone on EEMBC.
C1 [Zhang, Yilei; Liao, Haoyu; Wang, Zekun; Huang, Bo; Guo, Jianmei] East China Normal Univ, Sch Data Sci & Engn, Shanghai 200062, Peoples R China.
C3 East China Normal University
RP Huang, B (corresponding author), East China Normal Univ, Sch Data Sci & Engn, Shanghai 200062, Peoples R China.
EM bhuang@dase.ecnu.edu.cn
FU National Natural Science Foundation of China [62272167]
FX <B>Acknowledgments</B> This work is supported by the National Natural
   Science Foundation of China (No. 62272167) .
CR Al-Tashi Q, 2019, IEEE ACCESS, V7, P39496, DOI 10.1109/ACCESS.2019.2906757
   Altinay A, 2020, PROCEEDINGS OF THE FIFTEENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS'20), DOI 10.1145/3342195.3387550
   Anand K., 2013, Proceedings of the 8th ACM European Conference on Computer Systems, EuroSys '13, P295
   [Anonymous], 2022, SPEC CPU2017
   [Anonymous], 2016, Itanium-demangle
   Bala V, 2000, ACM SIGPLAN NOTICES, V35, P1, DOI 10.1145/358438.349303
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   Bendersky Eli, 2023, Pyelftools
   Brumley David, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P463, DOI 10.1007/978-3-642-22110-1_37
   Brumley D., 2013, P USENIX SEC, P353
   Capstone Engine, 2023, Capstone
   Di Federico A, 2017, CC'17: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION, P131, DOI 10.1145/3033019.3033028
   Dyninst Project, 2023, Dynins
   Embedded Microprocessor Benchmark Consortium, 2023, EEMBC benchmarks
   Fokin Alexander, 2011, 2011 18th Working Conference on Reverse Engineering, P347, DOI 10.1109/WCRE.2011.49
   Fu SY, 2019, J SYST ARCHITECT, V98, P173, DOI 10.1016/j.sysarc.2019.07.008
   Guan HB, 2012, J SYST ARCHITECT, V58, P305, DOI 10.1016/j.sysarc.2012.05.002
   Haibing Guan, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P945, DOI 10.1109/CSSE.2008.32
   Hex-Rays S., 2014, IDA Pro: a cross-platform multi-processor disassembler and debugger
   Hong D.-Y., 2012, P 10 INT S CODE GENE, P104, DOI [10.1145/2259016.2259030, DOI 10.1145/2259016.2259030]
   Kroustek J., 2018, Retdec: An open-source machine-code decompiler
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/cgo.2004.1281665
   Liu ZB, 2022, P IEEE S SECUR PRIV, P1100, DOI [10.1109/SP46214.2022.9833799, 10.1109/SP46214.2022.00027]
   Muntean P, 2018, LECT NOTES COMPUT SC, V11050, P423, DOI 10.1007/978-3-030-00470-5_20
   National Security Agency, 2023, Ghidra
   ptitSeb, 2023, Box64
   Rocha RCO, 2022, PROCEEDINGS OF THE 43RD ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '22), P888, DOI 10.1145/3519939.3523719
   Rokicki S, 2019, IEEE T COMPUT AID D, V38, P1872, DOI 10.1109/TCAD.2018.2864288
   Saieva A, 2022, J SYST SOFTWARE, V191, DOI 10.1016/j.jss.2022.111381
   Schlinkert Sam, 2022, Command-line utilities written in rust
   Shen BY, 2012, CASES'12: PROCEEDINGS OF THE 2012 ACM INTERNATIONAL CONFERENCE ON COMPILERS, ARCHITECTURES AND SYNTHESIS FOR EMBEDDED SYSTEMS, P51
   trailofbits, 2021, Mcsema
   van der Veen V, 2016, P IEEE S SECUR PRIV, P934, DOI 10.1109/SP.2016.60
   Verbeek F, 2022, PROCEEDINGS OF THE 43RD ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '22), P934, DOI 10.1145/3519939.3523702
   Verbeek F, 2020, LECT NOTES COMPUT SC, V12310, P247, DOI 10.1007/978-3-030-58768-0_14
   Wenzl M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3316415
   Wu J, 2022, J SYST SOFTWARE, V187, DOI 10.1016/j.jss.2022.111247
   Yadavalli S.B., 2019, P 20 ACM SIGPLAN SIG, P213, DOI DOI 10.1145/3316482.3326354
   Yan Lin, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P36, DOI 10.1109/SP40001.2021.00006
NR 40
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
AR 112092
DI 10.1016/j.jss.2024.112092
EA MAY 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UD9J9
UT WOS:001246239000001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Zhang, XY
   Zhou, Y
   Yang, G
   Han, TT
   Chen, TL
AF Zhang, Xiangyu
   Zhou, Yu
   Yang, Guang
   Han, Tingting
   Chen, Taolue
TI Context-aware code generation with synchronous bidirectional decoder
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code generation; Transition system; Bidirectional decoder; Neural
   network
AB Code generation aims to map natural language descriptions to code snippets. Recent approaches using sequence -to -tree models have shown promising results. However, they generally adopt an autoregressive way to predict the next token based on previous ones and do not consider potential future tokens. To address this issue, we propose Contextor, a novel context -sensitive model employing a bidirectional decoder to generate tokens in two different orders synchronously and interactively. Specifically, we employ two decoders to generate two sequences of different traversals and share their context knowledge via the attention mechanism. As a result, our model can synthesize both previous and future information simultaneously. To alleviate the information leakage problem caused by the teacher -forcing training strategy and bidirectional decoding, we propose an adapted scheduled sampling technique to prevent the decoders from contacting the actual label. Furthermore, Contextor also features a bidirectional beam search algorithm to better interact with both decoders. Experimental results demonstrate that our approach outperforms the state-of-the-art baselines.
C1 [Zhang, Xiangyu; Zhou, Yu; Yang, Guang] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
   [Han, Tingting; Chen, Taolue] Univ London, Sch Comp & Math Sci, London, England.
C3 Nanjing University of Aeronautics & Astronautics; University of
   Greenwich; University of London
RP Zhou, Y (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
EM zhangx1angyu@nuaa.edu.cn; zhouyu@nuaa.edu.cn; novelyg@outlook.com;
   t.han@bbk.ac.uk; t.chen@bbk.ac.uk
RI Zhang, Xiangyu/X-1167-2018
OI Chen, Taolue/0000-0002-5993-1665
FU National Natural Science Foundation of China [62372232]; Fundamental
   Research Funds for the Central Universities, China [NG2023005];
   Collaborative Innovation Center of Novel Software Technology and
   Industrialization, China; State Key Laboratory of Novel Software
   Technology, Nanjing University, China [KFKT2022A03]; Birkbeck BEI School
   Project (EFFECT), China
FX This work is supported by the National Natural Science Foundation of
   China (No. 62372232), the Fundamental Research Funds for the Central
   Universities, China (No. NG2023005), and the Collaborative Innovation
   Center of Novel Software Technology and Industrialization, China. T.
   Chen is partially supported by an oversea grant from the State Key
   Laboratory of Novel Software Technology, Nanjing University, China
   (KFKT2022A03), Birkbeck BEI School Project (EFFECT), China.
CR Balog M, 2017, Arxiv, DOI arXiv:1611.01989
   Beau N, 2022, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), P2204
   Bengio S, 2015, ADV NEUR IN, V28
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   EARLEY J, 1970, COMMUN ACM, V13, P94, DOI 10.1145/362007.362035
   Gu JT, 2018, Arxiv, DOI arXiv:1711.02281
   Guo DY, 2022, Arxiv, DOI arXiv:2203.03850
   Hayati SA, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P925
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Hussain Y, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106309
   Jiang H., 2021, arXiv
   Jiang H, 2022, IEEE-ACM T AUDIO SPE, V30, P468, DOI 10.1109/TASLP.2021.3138717
   Kou BA, 2024, Arxiv, DOI arXiv:2306.01220
   Ling W, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P599
   Lu S., 2021, P NEURAL INFORM PROC
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Norouzi S., 2021, Short Papers), V2, P776, DOI 10.18653/v1/2021.acl-short.98
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Peng B, 2023, Arxiv, DOI arXiv:2305.13048
   Pengcheng Yin, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion). Proceedings, P388, DOI 10.1145/3183440.3195021
   Rabinovich M, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1139, DOI 10.18653/v1/P17-1105
   Radford A., 2019, OpenAI blog, V1, P9
   Ren S, 2020, Arxiv, DOI [arXiv:2009.10297, 10.48550/arXiv.2009.10297]
   Stahlberg F, 2020, J ARTIF INTELL RES, V69, P343, DOI 10.1613/jair.1.12007
   Su JS, 2019, ARTIF INTELL-AMST, V277, DOI 10.1016/j.artint.2019.103168
   Su YX, 2022, Arxiv, DOI arXiv:2210.14140
   Sun ZY, 2020, AAAI CONF ARTIF INTE, V34, P8984
   Sun ZY, 2019, AAAI CONF ARTIF INTE, P7055
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang DC, 1997, PROCEEDINGS OF THE CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES, P213
   Wang WH, 2022, Arxiv, DOI arXiv:2208.08643
   Wang Y, 2023, Arxiv, DOI arXiv:2305.07922
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Watanabe T., 2002, 19 INT C COMP LING C
   Wei B., 2019, Adv. Neural Inf. Process. Syst., P6559
   Wu YH, 2016, Arxiv, DOI [arXiv:1609.08144, DOI 10.48550/ARXIV.1609.08144]
   Xie BB, 2021, AAAI CONF ARTIF INTE, V35, P14121
   Yang G, 2023, Arxiv, DOI arXiv:2303.05061
   Yang G, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111577
   Yang G, 2021, ASIA PAC SOFWR ENG, P213, DOI 10.1109/APSEC53868.2021.00029
   Yang ZZ, 2023, Arxiv, DOI arXiv:2303.01056
   Yin PC, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P7
   Zhang AP, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111557
   Zhang JJ, 2020, ARTIF INTELL, V281, DOI 10.1016/j.artint.2020.103234
   Zhang XW, 2018, AAAI CONF ARTIF INTE, P5698
   Zhang Z, 2021, INT J MACH LEARN CYB, V12, P1649, DOI 10.1007/s13042-020-01264-7
   Zhou L, 2019, T ASSOC COMPUT LING, V7, P91, DOI 10.1162/tacl_a_00256
NR 47
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112066
DI 10.1016/j.jss.2024.112066
EA APR 2024
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SM9U0
UT WOS:001234995400001
DA 2024-08-05
ER

PT J
AU Scommegna, L
   Verdecchia, R
   Vicario, E
AF Scommegna, Leonardo
   Verdecchia, Roberto
   Vicario, Enrico
TI Unveiling Faulty User Sequences: A Model-Based Approach to Test
   Three-Tier Software Architectures
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software architecture; Dependency injection; Stateful components;
   Software dependability; Model-based testing; Data flow testing
ID BUGS
AB Context: When testing three -tiered architectures, strategies often rely on superficial information, e.g., blackbox input. However, the correct behavior of software -intensive systems based on such architectural pattern also depends on the logic hidden behind the interface. Verifying the response process is thus often complex and requires ad -hoc strategies. Objective: We propose an approach to identify faults hidden behind the presentation layer. The model -based approach uses an architectural abstraction called managed component Data Flow Graph (mcDFG). The mcDFG is aware of the interactions between all layers of the architecture and guides the generation of tests based on different mcDFG coverage criteria to identify faults in the business logic. Method: To evaluate the approach viability, we consider a three -tiered web application and 32 faults. The fault detection capability is assessed by comparing a set of test suites created by following our method and a set of test suites developed by utilizing traditional testing strategies. Results: The collected data show that the proposed model -based approach is a viable option to identify faults hidden in the logic layer, as it can outperform standard strategies based solely on the presentation layer while keeping the number of test cases and number of interactions per test case low.
C1 [Scommegna, Leonardo; Verdecchia, Roberto; Vicario, Enrico] Univ Florence, Dept Informat Engn, Florence, Italy.
C3 University of Florence
RP Scommegna, L (corresponding author), Univ Florence, Dept Informat Engn, Florence, Italy.
EM leonardo.scommegna@unifi.it; roberto.verdecchia@unifi.it;
   enrico.vicario@unifi.it
OI Verdecchia, Roberto/0000-0001-9206-6637; SCOMMEGNA,
   LEONARDO/0000-0002-7293-0210; VICARIO, ENRICO/0000-0002-4983-4386
FU European Union under the Italian National Recovery and Resilience Plan
   (NRRP) of NextGen-erationEU, partnership on "Telecommunications of the
   Future" (program "RESTART");  [PE000 0001]
FX We would like to express our gratitude to Jacopo Parri, Samuele
   Sampietro, Boris Brizzi, and Nicolo Pollini for their invaluable advice,
   technical insights, and contributions to this project. This work was
   partially supported by the European Union under the Italian National
   Recovery and Resilience Plan (NRRP) of NextGen-erationEU, partnership on
   "Telecommunications of the Future" (PE000 0001-program "RESTART") .
CR ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Arcuri A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293455
   Barth A., 2011, 6265 RFC IETF
   Bass L., 2003, Software architecture in practice
   Biagiola M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P142, DOI 10.1145/3338906.3338970
   Brown K., 2003, Enterprise Java Programming with IBM WebSphere, V2nd
   Buschmann F., 2007, PATTERN ORIENTED SOF, V5
   Calinescu R, 2016, IEEE T RELIAB, V65, P107, DOI 10.1109/TR.2015.2452931
   Carrozza G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P262, DOI 10.1109/ICST.2013.21
   Cockburn A., 2000, WRITING EFFECTIVE US, P46
   Cotroneo D, 2016, J SYST SOFTWARE, V113, P27, DOI 10.1016/j.jss.2015.11.021
   Fioravanti S, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P297, DOI 10.1145/2851553.2851561
   Fowler M., 2006, INVERSION CONTROL CO
   Fowler M., 2002, Patterns of enterprise application architecture
   Frajtak K., 2015, Proceedings of the 2015 Conference on research in adaptive and convergent systems, P509, DOI DOI 10.1145/2811411.2811556
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Grottke M., 2008, 19 INT S SOFTWARE RE, P1, DOI DOI 10.1109/ISSREW.2008.5355512
   Grottke M, 2007, COMPUTER, V40, P107, DOI 10.1109/MC.2007.55
   Gu TX, 2019, PROC INT CONF SOFTW, P269, DOI 10.1109/ICSE.2019.00042
   Itkonen Juha, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P61
   Kaner C., 1999, TESTING COMPUTER S
   Kung DC, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P111, DOI 10.1109/APAQ.2000.883784
   Leveau J, 2022, SOFTW TEST VERIF REL, V32, DOI 10.1002/stvr.1827
   LI JQ, 2018, CYBERSECURITY, V1, DOI DOI 10.1038/S42005-018-0038-Z
   Lin JW, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3571851
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Liu Z, 2022, PLANT GENOME-US, V15, DOI 10.1002/tpg2.20226
   Mahmood R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P599, DOI 10.1145/2635868.2635896
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   Martin R.C., 2017, Clean architecture: A craftsman's guide to software structure and design
   Martin R.C., 2000, OBJECT MENTOR, V1
   Mesbah A, 2009, PROC INT CONF SOFTW, P210, DOI 10.1109/ICSE.2009.5070522
   Mishra C., 2008, SIGMOD, P499, DOI DOI 10.1145/1376616.1376668
   Nidhra S., 2012, Int. J. Embed. Syst. Appl., V2, P29, DOI [DOI 10.5121/IJESA.2012.2204, 10.5121/ijesa.2012.2204]
   Nie LM, 2023, IET SOFTW, V17, P249, DOI 10.1049/sfw2.12123
   Patara F., 2014, 8 INT S MED INF COMM, P1
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   Richardson C., 2006, MANNING
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   SCHMIDT J, 2013, PATTERN ORIENTED SOF, V2, DOI DOI 10.1038/EMI.2013.14
   Shafique M, 2015, INT J SOFTW TOOLS TE, V17, P59, DOI 10.1007/s10009-013-0291-0
   Souter A. L., 1999, Software Engineering Notes, V24, P47, DOI 10.1145/381788.316178
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   van Rooij O, 2021, LECT NOTES COMPUT SC, V12972, P152, DOI 10.1007/978-3-030-88418-5_8
   Yousaf N, 2019, IEEE ACCESS, V7, P67331, DOI 10.1109/ACCESS.2019.2917674
   Zheng Y, 2021, PROC INT CONF SOFTW, P423, DOI 10.1109/ICSE43902.2021.00048
NR 50
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2024
VL 212
AR 112015
DI 10.1016/j.jss.2024.112015
EA MAR 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OF5J9
UT WOS:001205861200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Admiraal, C
   Brink, WV
   Gerhold, M
   Zaytsev, V
   Zubcu, C
AF Admiraal, Chris
   Brink, Wouter van den
   Gerhold, Marcus
   Zaytsev, Vadim
   Zubcu, Cristian
TI Deriving modernity signatures of codebases with static analysis
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Coupled evolution; Software evolution; Programming language adoption
AB This paper addresses the problem of determining the modernity of software systems by analysing the use of new language features and their adoption over time. We propose the concept of modernity signatures to estimate the age of a codebase, naturally adjusted for maintenance practices, such that the modernity of a regularly updated system would be above that of a more recently created one which neglects current features and best practices. This can provide insights into coding practices, codebase health and the evolution of software languages. We present case studies on PHP and Python code, demonstrating the effectiveness of modernity signatures in determining the age of a codebase without executing the code or performing extensive human inspection. The paper describes the technical implementation details of generating the modernity signature for both of these languages, including the use of existing tools like the PHP parser and Vermin. The findings suggest that modernity signatures can aid developers in many ways from choosing whether to use a system or how to approach its maintenance, to assessing usefulness of a language feature, thus providing a valuable tool for source code analysis and manipulation.
C1 [Admiraal, Chris; Brink, Wouter van den; Zaytsev, Vadim; Zubcu, Cristian] Univ Twente, Tech Comp Sci, Enschede, Netherlands.
   [Zaytsev, Vadim] Univ Twente, Formal Methods & Tools, Enschede, Netherlands.
C3 University of Twente; University of Twente
RP Zaytsev, V (corresponding author), Univ Twente, Formal Methods & Tools, Enschede, Netherlands.
EM m.gerhold@utwente.nl; vadim@grammarware.net
RI Zaytsev, Vadim/E-6712-2011
OI Zaytsev, Vadim/0000-0001-7764-4224
CR Admiraal C., 2023, Library features that are not (correctly) detected Issue #144 netromdk/vermin
   Admiraal C., 2023, Bachelor's thesis
   Admiraal C.P., 2023, Pyternity
   Ajami S, 2019, EMPIR SOFTW ENG, V24, P287, DOI 10.1007/s10664-018-9628-3
   Alexandru CV, 2018, ONWARD!'18: PROCEEDINGS OF THE 2018 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE, P1, DOI 10.1145/3276954.3276960
   Aljedaani W, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P170, DOI 10.1145/3463274.3463335
   [Anonymous], 2014, Python Data Analysis
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Banyard G.P., 2021, Tech. Rep.
   Benureau FCY, 2018, FRONT NEUROINFORM, V11, DOI 10.3389/fninf.2017.00069
   Blagodarov V, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P221, DOI 10.1145/2997364.2997387
   Bucher B., 2020, PEP 622-structural pattern matching
   C.A. Technologies, 2016, CS 200-227965
   Camarinha-Matos L.M., 2020, Technological Innovation for Life Improvement, DOI [10.1007/978-3-030-45124-0, DOI 10.1007/978-3-030-45124-0]
   Chakraborty S, 2009, CIE: 2009 INTERNATIONAL CONFERENCE ON COMPUTERS AND INDUSTRIAL ENGINEERING, VOLS 1-3, P1815, DOI 10.1109/ICCIE.2009.5223811
   Challapalli S.S.N., 2021, P INT C TECHN ADV IN, P303, DOI [10.1109/ICTAI53825.2021.9673464, DOI 10.1109/ICTAI53825.2021.9673464]
   Chen ZF, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P18, DOI 10.1109/SATE.2016.10
   dours, 2021, Do you have plans to support Python 3.10 (for example, assignment expressions)? Issue #2462 antlr/grammars-v4
   Dubois E, 2020, 2020 IEEE CONFERENCE ON COMPUTATIONAL INTELLIGENCE IN BIOINFORMATICS AND COMPUTATIONAL BIOLOGY (CIBCB), P68, DOI 10.1109/cibcb48159.2020.9277702
   Dyer R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P779, DOI 10.1145/2568225.2568295
   Farooq Aamir, 2021, SLE 2021: Proceedings of the 14th ACM SIGPLAN International Conference on Software Language Engineering, P68, DOI 10.1145/3486608.3486909
   Farooq A., 2021, F-strings and string formatting
   Favre JM, 2005, ELECTRON NOTES THEOR, V127, P59, DOI 10.1016/j.entcs.2004.08.034
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Forcier J., 2008, PYTHON WEB DEV DJANG
   Garfield L., 2020, Tech. Rep.
   Gerhold M., 2023, P 22 BELG NETH SOFTW
   Google, 2023, Changelog-google-api-core documentation
   Gribnau M., 2019, MSRV: Minimum supported rust version
   Grinberg Miguel, 2018, Flask web development: developing web applications with python
   Guducu B., 2022, Weighted abstract syntax trees for program comprehension in Java
   Han DG, 2020, IEEE INT WORK C SO, P43, DOI [10.1109/SCAM51674.2020.00010, 10.1109/scam51674.2020.00010]
   Hand DJ, 2006, STAT SCI, V21, P1, DOI 10.1214/088342306000000060
   Hauzar D., 2015, LEIBNIZ INT P INFORM, V37, P689, DOI [10.4230/LIPIcs.ECOOP.2015.689, DOI 10.4230/LIPICS.ECOOP.2015.689]
   Heinl M.P., 2020, P 15 INT C AV REL SE, DOI [10.1145/3407023.3409182, DOI 10.1145/3407023.3409182]
   Hills M, 2017, SCI COMPUT PROGRAM, V134, P37, DOI 10.1016/j.scico.2016.05.003
   Hills M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P454, DOI 10.1109/CSMR-WCRE.2014.6747217
   JetBrains, 2022, Code inspections
   JONES C, 1995, COMPUTER, V28, P86, DOI 10.1109/2.366170
   Karaivanov Svetoslav, 2014, P 2014 ACM INT S NEW, P173
   Karunaratne A., 2020, PHP:Watch
   Kim DJ, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09969-1
   Kim DJ, 2020, PROC INT CONF SOFTW, P149, DOI 10.1145/3377812.3382176
   Kohn T., 2020, PEP 635-structural pattern matching: Motivation and rationale
   Kristensen M., 2018, Vermin
   Lämmel R, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P239, DOI 10.1145/2997364.2997366
   Lämmel R, 2009, LECT NOTES COMPUT SC, V5423, P246
   Lämmel R, 2001, IEEE SOFTWARE, V18, P78, DOI 10.1109/52.965809
   Lammel R., 2018, Software Languages: Syntax, Semantics, and Metaprogramming, DOI DOI 10.1007/978-3-319-90800-7
   Laville L., 2022, PHP compatinfo home page
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Liu H, 2021, IEEE T SOFTWARE ENG, V47, P1811, DOI 10.1109/TSE.2019.2936376
   Malloy BA, 2019, EMPIR SOFTW ENG, V24, P751, DOI 10.1007/s10664-018-9637-2
   Maruping LM, 2009, EUR J INFORM SYST, V18, P355, DOI 10.1057/ejis.2009.24
   Mateos C, 2019, INF TECHNOL CONTROL, V48, P71, DOI 10.5755/j01.itc.48.1.21566
   McKinney W., 2012, Python for data analysis: Data wrangling with Pandas, NumPy, and IPython
   Mens T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13, DOI 10.1109/IWPSE.2005.7
   Mens T., 2001, P 4 INT WORKSHOP PRI, P83, DOI [DOI 10.1145/602461.602476, 10.1145/602461.602476]
   Merlo E, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P191
   Muscat Ian, 2016, Network Security, V2016, P5, DOI 10.1016/S1353-4858(16)30016-2
   Nelli F., 2015, Python data analytics: Data analysis and science using pandas, matplotlib, and the python programming language, P63
   Otwell T., 2011, Laravel: The PHP framework for web artisans
   Papagiannis I., 2011, P 2 USENIX C WEB APP
   Peng Y, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P24, DOI 10.1109/SANER50967.2021.00012
   Python, 2022, Ast-Abstract syntax trees
   Python, 2008, What's new in Python 3.0
   Python, 2021, What's new in Python 3.10
   Python Software Foundation, 2023, Pypi JSON API
   Python Software Foundation, 2023, Python developer's guide: reStructuredText markup
   Raschka S., 2019, Python Machine Learning: Machine Learning and Deep Learning With Python, Scikit-Learn, and Tensorflow 2
   Roose B., 2022, PHP version stats
   Sakulniwat T, 2019, INT WORKSH EMPIR ENG, P43, DOI 10.1109/IWESEP49350.2019.00016
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Sharma VS, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2014), P758, DOI 10.1109/SCC.2014.103
   Singh D, 2020, APPL SOFT COMPUT, V97, DOI 10.1016/j.asoc.2019.105524
   Smith Joanna, 2014, Evid Based Nurs, V17, P100, DOI 10.1136/eb-2014-101946
   Taskaya B., 2020, Soft keywords and how to implement them issue #138 davidhalter/parso
   The P.H.P. Documentation Group, 2022, PHP: History of PHP
   The PHP group, 2020, PHP 8.0 released
   TIOBE, 2023, The TIOBE programming community index
   Vafaei N, 2022, PROCEDIA COMPUT SCI, V199, P1229, DOI 10.1016/j.procs.2022.01.156
   van Dam JK, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P624, DOI 10.1109/SANER.2016.92
   van den Brink W., 2022, Bachelor's thesis
   van den Brink W, 2022, IEEE INT WORK C SO, P181, DOI 10.1109/SCAM55253.2022.00027
   van Kemenade Hugo, 2023, Zenodo, DOI 10.5281/ZENODO.7497599
   Van Rossum G., 1995, Python tutorial, V620
   Vavrova N., 2017, Art, Sci. Eng. Program., V1, DOI [10.22152/programming-journal.org/2017/1/11, DOI 10.22152/PROGRAMMING-JOURNAL.ORG/2017/1/11]
   Verhoef C, 2002, SCI COMPUT PROGRAM, V45, P1, DOI 10.1016/S0167-6423(02)00106-5
   Vinju J., 2021, Python-air
   Wiese ES, 2017, PROCEEDINGS OF THE FOURTH (2017) ACM CONFERENCE ON LEARNING @ SCALE (L@S'17), P41
   Zaytsev V., 2019, INT C TECHN DEBT
   Zaytsev V., 2016, ECEASST Spec. Issue Sel. Revised Pap. Graph Comput. Models, V73, DOI [10.14279/tuj.eceasst.73.1032, DOI 10.14279/TUJ.ECEASST.73.1032]
   Zaytsev V, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.2.a5
   Zaytsev V, 2011, LECT NOTES COMPUT SC, V6491, P481, DOI 10.1007/978-3-642-18023-1_16
   Zhang ZJ, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P696, DOI 10.1145/3540250.3549143
   Zhang ZJ, 2023, PROC IEEE ACM INT C, P102, DOI 10.1109/ICSE-Companion58688.2023.00034
   Zolfani SH, 2020, FACTA UNIV-SER MECH, V18, P341, DOI 10.22190/FUME191129016Z
   Zubcu C., 2023, Effect of Normalization Techniques on Modernity Signatures in Source Code Analysis
NR 98
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111973
DI 10.1016/j.jss.2024.111973
EA FEB 2024
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KL9P7
UT WOS:001180242700001
OA hybrid
DA 2024-08-05
ER

PT J
AU Chen, XP
   Xu, FR
   Huang, Y
   Zhou, XC
   Zheng, ZB
AF Chen, Xiangping
   Xu, Furen
   Huang, Yuan
   Zhou, Xiaocong
   Zheng, Zibin
TI An empirical study of code reuse between GitHub and stack overflow
   during software development
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Stack overflow; Code reuse; Code clone; Semantic analysis
ID STACKOVERFLOW
AB With the rise of programming Q&A websites (e.g., Stack Overflow) and the open-source movement, code reuse has become a common phenomenon. Our study aims to provide a comprehensive study of the code reuse behavior of programmers during software development, i.e., we mainly focus on the code reuse between the code snippets in the commits of open-source projects and the code snippets on Stack Overflow (SO). The open-source java project code dataset we construct contains 793 projects which include 342,148 modified code snippets, and the SO code dataset includes 1,355,617 posts. Then, we employ a code clone detection tool to identify the instances of code reuse between the modified code snippets of commits and the code snippets of the SO posts. We find that the average code reuse ratio of the projects is 6.32%, which will have a significant upward trend in the future. Additionally, we find that experienced developers seem to be more likely to reuse the code on SO, and prefer to reuse posts with more favorites and higher scores. We combine deep learning and topic analysis algorithms to fully exploit the semantic information of SO posts. The result shows a certain difference in the distribution of post types reused by bug-related commits and non-bug-related commits. We also discover that the code reuse ratio (14.44%) in java class files that have undergone multiple modifications is more than double the overall code reuse ratio (6.32%). Finally, we discuss the reuse habits of programmers and find that they may refer to multiple posts in one reuse, and these posts are related to a certain extent. From these results, our study provides multiple practical insights for different stakeholders: researchers, developers, and the SO platform.
C1 [Chen, Xiangping; Xu, Furen; Huang, Yuan; Zheng, Zibin] Sun Yat Sen Univ, Guangzhou, Peoples R China.
   [Chen, Xiangping] Sch Journalism & Commun, Guangzhou, Peoples R China.
   [Xu, Furen; Huang, Yuan; Zheng, Zibin] Sch Software Engn, Guangzhou, Peoples R China.
   [Zhou, Xiaocong] Sch Comp Sci & Engn, Guangzhou, Peoples R China.
C3 Sun Yat Sen University
RP Huang, Y (corresponding author), Sun Yat Sen Univ, Guangzhou, Peoples R China.; Huang, Y (corresponding author), Sch Software Engn, Guangzhou, Peoples R China.
EM chenxp8@mail.sysu.edu.cn; xufr@mail2.sysu.edu.cn;
   huangyuan5@mail.sysu.edu.cn; isszxc@mail.sysu.edu.cn;
   zhzibin@mail.sysu.edu.cn
OI chen, xiang ping/0000-0001-8234-3186
FU National Key R&D Program of China [2023YFB2703600]; National Natural
   Science Foundation of China [62372492]; Natural Science Foundation of
   Guangdong Province [2023A1515010746, 2023A1515011474]
FX The research is supported by National Key R&D Program of China (No.
   2023YFB2703600) , the National Natural Science Foundation of China
   (62372492) , the Natural Science Foundation of Guangdong Province
   (2023A1515010746, 2023A1515011474) .
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Ahmad A, 2019, IEEE ACCESS, V7, P61145, DOI 10.1109/ACCESS.2019.2914429
   An L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P283, DOI 10.1109/SANER.2017.7884629
   Baltes S, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P13, DOI 10.1145/3377816.3381744
   Baltes S, 2017, PROC IEEE ACM INT C, P161, DOI 10.1109/ICSE-C.2017.99
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Chen MS, 2019, PROC INT CONF SOFTW, P536, DOI 10.1109/ICSE.2019.00065
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   COX DR, 1955, BIOMETRIKA, V42, P80, DOI 10.1093/biomet/42.1-2.80
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Gallardo-Valencia RE, 2009, 2009 ICSE WORKSHOP ON SEARCH-DRIVEN DEVELOPMENT-USERS, INFRASTRUCTURE, TOOLS AND EVALUATION, P49, DOI 10.1109/SUITE.2009.5070022
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Hotelling H, 1933, J EDUC PSYCHOL, V24, P417, DOI 10.1037/h0071325
   Hsieh G, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P305
   Jan S.T., 2017, Analyzing payment based question and answering service
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Lin YK, 2015, AAAI CONF ARTIF INTE, P2181
   Liu JZ, 2017, SIGIR'17: PROCEEDINGS OF THE 40TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P115, DOI 10.1145/3077136.3080834
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Lotter A, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P141, DOI 10.1109/ASWEC.2018.00027
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Manes Saraj Singh, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P235, DOI 10.1109/MSR.2019.00047
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, DOI 10.48550/ARXIV.1301.3781]
   Ni C, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P672, DOI 10.1145/3540250.3549165
   Nishi Manziba Akanda, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P240, DOI 10.1109/MSR.2019.00048
   Ragkhitwetsagul C, 2021, IEEE T SOFTWARE ENG, V47, P560, DOI 10.1109/TSE.2019.2900307
   Rieger M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/WCRE.2004.25
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Scoccia GL, 2021, IEEE WORK CONF MIN S, P271, DOI 10.1109/MSR52588.2021.00039
   Shen T, 2018, AAAI CONF ARTIF INTE, P5446
   Tairas R., 2006, P 44 ANN SE REG C, P679, DOI 10.1145/1185448.1185597
   Tóth L, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P45, DOI 10.1145/3377816.3381733
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Wang JP, 2020, INFORMATION, V11, DOI 10.3390/info11090421
   Wu D, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3565799
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Yang D, 2017, IEEE WORK CONF MIN S, P280, DOI 10.1109/MSR.2017.13
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P850, DOI 10.1109/TSE.2019.2906315
   Zhang MH, 2018, AAAI CONF ARTIF INTE, P4438
   Zhang TY, 2019, PROC INT CONF SOFTW, P316, DOI 10.1109/ICSE.2019.00046
   Zhang TY, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P111, DOI 10.1109/ICSE.2015.33
   Zibran MF, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P295, DOI 10.1109/ICECCS.2011.36
   Zou Y, 2020, IEEE INT CONF AUTOM, P931, DOI 10.1145/3324884.3416541
NR 55
TC 0
Z9 0
U1 4
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111964
DI 10.1016/j.jss.2024.111964
EA JAN 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JX9Z0
UT WOS:001176589200001
DA 2024-08-05
ER

PT J
AU Mohamad, M
   Steghöfer, JP
   Knauss, E
   Scandariato, R
AF Mohamad, Mazen
   Steghoefer, Jan-Philipp
   Knauss, Eric
   Scandariato, Riccardo
TI Managing security evidence in safety-critical organizations
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Security; Assurance; Evidence; Safety-critical
ID INFORMATION SECURITY
AB With the increasing prevalence of open and connected products, cybersecurity has become a serious issue in safety-critical domains such as the automotive industry. As a result, regulatory bodies have become more stringent in their requirements for cybersecurity, necessitating security assurance for products developed in these domains. In response, companies have implemented new or modified processes to incorporate security into their product development lifecycle, resulting in a large amount of evidence being created to support claims about the achievement of a certain level of security. However, managing evidence is not a trivial task, particularly for complex products and systems. This paper presents a qualitative interview study conducted in six companies on the maturity of managing security evidence in safety-critical organizations. We find that the current maturity of managing security evidence is insufficient for the increasing requirements set by certification authorities and standardization bodies. Organizations currently fail to identify relevant artifacts as security evidence and manage this evidence on an organizational level. One part of the reason are educational gaps, the other a lack of processes. The impact of AI on the management of security evidence is still an open question.
C1 [Mohamad, Mazen; Knauss, Eric] Chalmers Univ Technol, Gothenburg, Sweden.
   [Mohamad, Mazen] RISE Res Inst Sweden, Stockholm, Sweden.
   [Steghoefer, Jan-Philipp] XITASO GmbH IT & Software Solut, Augsburg, Germany.
   [Scandariato, Riccardo] Hamburg Univ Technol, Hamburg, Germany.
   [Knauss, Eric] Univ Gothenburg, Gothenburg, Sweden.
C3 Chalmers University of Technology; RISE Research Institutes of Sweden;
   Hamburg University of Technology; University of Gothenburg
RP Mohamad, M (corresponding author), RISE Res Inst Sweden, Stockholm, Sweden.
EM mazen.mohamad@gu.se; jan-philipp.steghoefer@xitaso.com;
   eric.knauss@gu.se; riccardo.scandariato@tuhh.de
OI Mohamad, Mazen/0000-0002-3446-1265
FU VINNOVA, a Swedish funding agency
FX This work is partially supported by the CASUS research project funded by
   VINNOVA, a Swedish funding agency.
CR Abu Elkhail A, 2021, IEEE ACCESS, V9, P162401, DOI 10.1109/ACCESS.2021.3130495
   Al-Aqrabi H., 2012, Proceedings of the 2012 IEEE 15th International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing Workshops (ISORCW 2012), P124, DOI 10.1109/ISORCW.2012.31
   Alexander R., 2011, Technical Report
   Beckers K., 2014, Eng. Secure Future Internet Serv. Syst.: Curr. Res., P315
   Bolbot V, 2019, RELIAB ENG SYST SAFE, V182, P179, DOI 10.1016/j.ress.2018.09.004
   Bramberger Robert, 2019, ACM SIGAda Ada Letters, V39, P41, DOI 10.1145/3394514.3394519
   Brostoff S., 2001, Proceedings of the 2001 workshop on New security paradigms, P41
   Candela AG, 2019, QUAL REP, V24, P619
   Crick T, 2019, PROC FRONT EDUC CONF, DOI 10.1109/fie43999.2019.9028407
   EU, 2016, General Data Protection Regulation (GDPR)
   Furnell S, 2021, COMPUT SECUR, V100, DOI 10.1016/j.cose.2020.102080
   Gibbs G. R., 2007, ANAL QUALITATIVE DAT, V703, P38, DOI [DOI 10.4135/9781849208574, 10.4135/9781849208574]
   GitHub O, 2021, GitHub copilot
   Haley C.B., 2005, Arguing security: Validating security requirements using structured argumentation
   Hentea M, 2006, J INF TECHNOL EDUC-R, V5, P221
   International Organization for Standardization, 2013, ISO/IEC 27001 Information Security Management, V1st
   James E, 2023, Tensorgate J. Sustain. Technol. Infrastruct. Dev. Ctries., V6, P32
   Jaskolka Jason, 2020, Intelligent Computing. Proceedings of the 2020 Computing Conference. Advances in Intelligent Systems and Computing (AISC 1230), P511, DOI 10.1007/978-3-030-52243-8_37
   Karlsson F, 2016, INF COMPUT SECUR, V24, P418, DOI 10.1108/ICS-11-2016-091
   Knauss E, 2011, LECT NOTES COMPUT SC, V6606, P4, DOI 10.1007/978-3-642-19858-8_2
   Li T, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110566
   Lisova E, 2019, IEEE SYST J, V13, P2189, DOI 10.1109/JSYST.2018.2881017
   de la Vara JL, 2022, SOFTW SYST MODEL, V21, P2329, DOI 10.1007/s10270-021-00957-z
   Mahfuth A, 2017, INT CONF RES INNOV
   Martin H., 2017, Computer Safety, Reliability and Security, SAFECOMP 2017: Workshops ASSURE, DECSoS, SASSUR, TELERISE and TIPS. Proceedings: LNCS 10489, P286, DOI 10.1007/978-3-319-66284-8_24
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   McGraw G., 2009, Fortify Cigital
   Melo G, 2020, Arxiv, DOI arXiv:2006.02370
   Miro, 2019, Miro- (collaboration platform)
   Mohamad M., 2020, P 15 INT C AV REL SE, P1
   Mohamad M., 2023, Managing security evidence in safety-critical organizations-supplemental material, DOI DOI 10.5281/ZENODO.7825113
   Mohamad M, 2022, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2022, P82, DOI 10.1145/3558489.3559074
   Mohamad M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09971-7
   Moyón F, 2020, LECT NOTES COMPUT SC, V12562, P69, DOI 10.1007/978-3-030-64148-1_5
   Nair S, 2015, INFORM SOFTWARE TECH, V60, P1, DOI 10.1016/j.infsof.2014.12.002
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   Nasir A, 2019, J INF SECUR APPL, V44, P12, DOI 10.1016/j.jisa.2018.11.003
   National Institute of Standards and Technology (NIST), 2011, Information security
   OpenAI, 2022, CHATGPT
   Piètre-Cambacédès L, 2010, INT J CRIT INFR PROT, V3, P55, DOI 10.1016/j.ijcip.2010.06.003
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Ruiz A., 2011, 2011 1 INT WORKSH SO, P1
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Schneider FB, 2013, IEEE SECUR PRIV, V11, P3
   Smithson J., 2000, International Journal of Social Research Methodology, V3, P103, DOI [10.1080/136455700405172, DOI 10.1080/136455700405172]
   Technical Committee, 2018, ISO/IEC 27000:2018 Information technology-Security techniques-Information security management systems-Overview and vocabulary
   Technical Committee, 2021, ISO/SAE 21434, Road vehicles-Cybersecurity engineering
   Terry G., 2018, SAGE HDB QUALITATIVE, P17, DOI [DOI 10.4135/9781526405555.N2, 10.1080/17439760.2016.12626132, DOI 10.1080/17439760.2016.1262613, https://doi.org/10.4135/9781526405555, 10.1080/17439760.2016.1262613]
   The 104th United States Congress, 1996, Health Insurance Portability and Accountability Act (HIPAA)
   Ullah KW, 2013, IEEE INT CONF TRUST, P1587, DOI 10.1109/TrustCom.2013.195
   United Nations ECE/TRANS/WP.29, 2021, UN regulation no. 156-uniform provisions concerning the approval of vehicles with regards to software update and software updates management system
   United Nations ECE/TRANS/WP.29, 2021, UN regulation no. 155-uniform provisions concerning the approval of vehicles with regard to cyber security and cyber security management system
   Usman M, 2020, LECT NOTES COMPUT SC, V12562, P385, DOI 10.1007/978-3-030-64148-1_24
NR 53
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112082
DI 10.1016/j.jss.2024.112082
EA MAY 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TA6T1
UT WOS:001238581700001
OA Green Published, Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Zhao, XF
   Clear, T
   Lal, R
AF Zhao, Xiaofan
   Clear, Tony
   Lal, Ramesh
TI Identifying the primary dimensions of DevSecOps: A multi-vocal
   literature review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Multivocal literature review; DevSecOps; DevOps; Security; Global
   software engineering
ID SOFTWARE-DEVELOPMENT; DEVOPS
AB Context: Security as a key non-functional requirement of software development is often ignored and devalued in DevOps programs, with security seen as an inhibitor to high velocity required in DevOps implementation. Hence, the DevSecOps approach as a security -orientated expansion to DevOps, has aimed to integrate security into DevOps implementation by promoting collaboration among development, operation and security teams. DevSecOps is a topical concept and rapidly emerging area of practice in both academic and industrial settings. Objective: We reviewed both the white and grey literature to identify recent researches and practical trends of DevSecOps, aiming to: (a) review, document and analyze the current state of DevSecOps in the existing literature; (b) investigate the application of DevSecOps in Global Software Engineering (GSE) contexts. Method: A Multi -vocal Literature Review on DevSecOps and its global application was conducted, by executing a dual -track strategy including white (104 studies) and grey (43 studies) literature from 2012 to 2021. A Thematic Analysis was performed to identify, synthesize and analyze the themes within data for reporting the MLR results. Results: Through the Multi -vocal Literature Review and Thematic Analysis, this paper identifies five major aspects of DevSecOps (Definitions, C hallenges, P ractices, T ools/Technologies, and M etrics/Measurement); collects related themes of each aspect; and generates a Challenge -Practice -Tool -Metric (CPTM) model by integrating the themes of the latter four aspects within a lifecycle model. Moreover, an unexplored area relating to the global application of DevSecOps has been identified. Conclusion: Based on MLR results, a CPTM (Challenge -Practice -Tool -Metric) model is built to reveal the current status of DevSecOps. The model provides a breakdown and a broad landscape of DevSecOps, from which researchers and practitioners may select an area of focus to improve their knowledge or practice. With DevSecOps spanning the many stages of the lifecycle, we believe the model will enable emphases and absences such as global aspects to be investigated. Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board .
C1 [Zhao, Xiaofan; Clear, Tony; Lal, Ramesh] Auckland Univ Technol, 55 Wellesley St East, Auckland, New Zealand.
C3 Auckland University of Technology
RP Zhao, XF (corresponding author), Auckland Univ Technol, 55 Wellesley St East, Auckland, New Zealand.
EM gavin.zhao@autuni.ac.nz; tony.clear@aut.ac.nz; ramesh.lal@aut.ac.nz
CR Acuña ST, 2004, SOFTWARE PRACT EXPER, V34, P675, DOI 10.1002/spe.586
   Ahamed Shaik Fayaz, 2022, 2022 International Conference on Electronics and Renewable Systems (ICEARS), P1631, DOI 10.1109/ICEARS53579.2022.9752387
   Ahmed Zaheeruddin, 2019, 2019 International Conference on Digitization (ICD). Proceedings, P178, DOI 10.1109/ICD47981.2019.9105789
   Akbar MA, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106894
   Alharahsheh H. H., 2020, GLOBAL ACAD J HUMANI, V2, P39, DOI DOI 10.36348/GAJHSS.2020.V02I03.001
   Amaro Ricardo, 2023, Information and Management, DOI 10.1016/j.im.2023.103809
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Angermeir F, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P278, DOI 10.1109/ICSE-SEIP52600.2021.00037
   Antil P., 2023, Ph.D. thesis
   Bass L., 2015, DevOps: A software architect's perspective.
   Beecham S, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110823
   Betts D, 2022, 3 Essential Steps to Enable Security in DevOps
   Blogumas T, 2020, Top 15 devsecops tools for an enterprise CI/CD pipeline
   Brasoveanu R, 2022, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, ARES 2022, DOI 10.1145/3538969.3543806
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI 10.1191/1478088706qp063oa
   Braun V, 2021, QUAL RES PSYCHOL, V18, P328, DOI 10.1080/14780887.2020.1769238
   Braun V, 2019, QUAL RES SPORT EXERC, V11, P589, DOI 10.1080/2159676X.2019.1628806
   BURNS A, 1992, COMPUT J, V35, P3, DOI 10.1093/comjnl/35.1.3
   Carter K, 2017, IEEE SOFTWARE, V34, P93, DOI 10.1109/MS.2017.3571578
   Chakrabarty A., 2023, Redefining the next decade of cybersecurity: AI-powered security built to empower developers plenary presentation SEC2732m
   Chickowski E., 2018, Seven winning devsecops metrics security should track
   Cico O, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110736
   Conchúir EO, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1536616.1536648
   CRUZES D.S., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement 2010, P1
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Diel E, 2016, INT CONF GLOBAL SOFT, P24, DOI 10.1109/ICGSE.2016.28
   Dyck A, 2015, 2015 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING, P3, DOI 10.1109/RELENG.2015.10
   Edmundson C., 2022, SANS 2022 DevSecOps Survey: Creating a Culture to Significantly Improve Your Organization's Security Posture
   Farace D., 2010, Grey literature in library and information studies
   Fernandez GP, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P138, DOI 10.1145/3297280.3297296
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Gonzalez Danielle, 2021, P 15 ACM IEEE INT S, DOI [10.1145/3475716.3475786, DOI 10.1145/3475716.3475786]
   Grande R, 2024, COMPUT STAND INTER, V87, DOI 10.1016/j.csi.2023.103767
   Gupta RK, 2019, INT CONF GLOBAL SOFT, P30, DOI 10.1109/ICGSE.2019.00020
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Humble Jez, 2011, Cutter IT Journal, V24, P6
   Hussain W, 2017, INT CONF GLOBAL SOFT, P21, DOI 10.1109/ICGSE.2017.16
   Huttermann M., 2012, DevOps for Developers
   Ibrahim Amr, 2022, 2022 2nd International Mobile, Intelligent, and Ubiquitous Computing Conference (MIUCC), P284, DOI 10.1109/MIUCC55081.2022.9781709
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   Jalali S., 2010, P 2010 ACM IEEE INT, P1, DOI [10.1145/1852786.1852817, DOI 10.1145/1852786.1852817]
   Jireh, 2016, What is DevOps
   Khandebharad Amit, 2022, International Journal of Cloud Applications and Computing, V12, P1, DOI 10.4018/IJCAC.2022010102
   Kitchenham B., 2007, GUIDELINES PERFORMIN, V1, P57
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kumar R, 2020, COMPUT SECUR, V97, DOI 10.1016/j.cose.2020.101967
   Labib A, 2014, LEARNING FROM FAILURES: DECISION ANALYSIS OF MAJOR DISASTERS, P33, DOI 10.1016/B978-0-12-416727-8.00003-5
   Lal R., 2021, P 2021 AUSTR C INF S, P1
   Line M.B., 2006, P 8 INT C PROB SAF A, P1202, DOI [10.1115/1.802442.paper151, DOI 10.1115/1.802442.PAPER151]
   Liu L., 2021, P 5 INT C COMP SCI A, P1, DOI [10.1145/3487075.3487116, DOI 10.1145/3487075.3487116]
   Loukides M., 2012, What is DevOps?
   MacDonald N., 2016, DevSecOps: How to seamlessly integrate security into DevOps
   Mao RF, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P450, DOI 10.1109/QRS51102.2020.00064
   Mohammed NM, 2017, COMPUT STAND INTER, V50, P107, DOI 10.1016/j.csi.2016.10.001
   Mohan V, 2016, PROCEEDINGS OF 2016 11TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, (ARES 2016), P542, DOI 10.1109/ARES.2016.92
   Morales Jose Andre, 2020, ARES 2020: Proceedings of the 15th International Conference on Availability, Reliability and Security, DOI 10.1145/3407023.3409186
   Myrbakken H, 2017, COMM COM INF SC, V770, P17, DOI 10.1007/978-3-319-67383-7_2
   Pothukuchi A.S., 2023, Int. J. Creat. Res. Thoughts, V11
   Prates L, 2019, LECT NOTES BUS INF P, V359, P77, DOI 10.1007/978-3-030-29608-7_7
   Puppet, 2023, State of DevOps Report 2023
   Rafi S, 2020, IEEE ACCESS, V8, P105426, DOI 10.1109/ACCESS.2020.2998819
   Rahman AAU, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P70, DOI [10.1109/CSED.2016.021, 10.1145/2896941.2896946]
   Rajapakse R.N., 2021, P 15 ACM IEEE INT S, P1, DOI [10.1145/3475716.3475776, DOI 10.1145/3475716.3475776]
   Rajapakse RN, 2022, INFORM SOFTWARE TECH, V141, DOI 10.1016/j.infsof.2021.106700
   Rowe F, 2014, EUR J INFORM SYST, V23, P241, DOI 10.1057/ejis.2014.7
   Sanchez-Gordon M., 2020, P IEEE ACM 42 INT C, P266, DOI 10.1145/3387940.3392233
   Schopfel J., 2010, Towards a Prague Definition of Grey Literature, P11
   Sebastian IM, 2017, MIS Q EXEC, V16, P197
   Sen Abhijit, 2021, Evolving Technologies for Computing, Communication and Smart World. Proceedings of ETCCS 2020. Lecture Notes in Electrical Engineering (LNEE 694), P211, DOI 10.1007/978-981-15-7804-5_16
   Smeds J, 2015, LECT NOTES BUS INF P, V212, P166, DOI 10.1007/978-3-319-18612-2_14
   Sojan A, 2021, 2021 IEEE 6TH INTERNATIONAL CONFERENCE ON SMART CLOUD (SMARTCLOUD 2021), P125, DOI 10.1109/SmartCloud52277.2021.00029
   Soni M, 2016, IEEE CONF CLOUD COMP, P85, DOI 10.1109/CCEM.2015.29
   Tamburri D.A., 2012, 2012 4 INT WORKSH PR, P1, DOI [10.1109/PESOS.2012.6225933, DOI 10.1109/PESOS.2012.6225933]
   Tomas Nora, 2019, 2019 International Conference on Cyber Security and Protection of Digital Services (Cyber Security), DOI 10.1109/CyberSecPODS.2019.8884935
   Viggiato M, 2019, INT CONF GLOBAL SOFT, P84, DOI 10.1109/ICGSE.2019.00013
   Vizcaíno A, 2016, COMPUT STAND INTER, V46, P66, DOI 10.1016/j.csi.2016.02.004
   Wagner Torrey J., 2020, 2020 International Conference on Computing, Networking and Communications (ICNC), P17, DOI 10.1109/ICNC47757.2020.9049681
   Wang CL, 2007, INT J MANAG REV, V9, P31, DOI 10.1111/j.1468-2370.2007.00201.x
   Whitehead J, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P1, DOI 10.1007/978-3-642-10294-3_1
   Wohlin C, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106908
   Zaydi M., 2020, J. Manag. Inf. Decis. Sci, V23, P134
NR 82
TC 0
Z9 0
U1 4
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112063
DI 10.1016/j.jss.2024.112063
EA APR 2024
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SV1A8
UT WOS:001237118500001
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Li, X
   Yuan, S
   Gu, XD
   Chen, YT
   Shen, BJ
AF Li, Xuan
   Yuan, Shuai
   Gu, Xiaodong
   Chen, Yuting
   Shen, Beijun
TI Few-shot code translation via task-adapted prompt learning
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code translation; Parameter-efficient fine-tuning; Few-shot learning;
   Task-adapted prompt tuning; Pre-trained language model
AB Pre -trained models such as CodeT5 and TransCoder have achieved impressive progress in software engineering. However, fine-tuning PLMs for code translation is confronted with significant challenges owing to the scarce availability of parallel code. Large language models such as ChatGPT have exhibited considerable promise in few -shot learning where only a small number of demonstration examples are given to the LLM. Yet they have not been specifically optimized for domain -specific tasks, and their use often entails significant manual effort in manually curating prompts. In this paper, we propose FSCTrans, a novel parameter -efficient tuning approach for code translation when furnished with only a few demonstration examples. (1) to efficiently reuse prior knowledge during pre -training, FSCTrans employs task -adapted prompt tuning, which freezes the pretrained CodeT5 while merely updating parameters in a small prompt module; (2) to enable parameter efficient tuning on only a small number of examples, FSCTrans bridges pre -training to the translation task through a new pre -training objective of code -to -code generation. We evaluate FSCTrans on Java <-> Python and Java <-> C# datasets from both real -world projects and online judge problems. The evaluation results show that FSCTrans is remarkably effective in few -shot code translation: on average, it improves CodeT5 by 54.61% and 31.59% in terms of BLEU -4 and CodeBLEU; notably, FSCTrans demonstrates 14.42% and 18.36% superior performance in Java -> C# translations in terms of BLEU -4 and CodeBLEU compared to ChatGPT.
C1 [Li, Xuan; Yuan, Shuai; Gu, Xiaodong; Chen, Yuting; Shen, Beijun] Shanghai Jiao Tong Univ, Sch Elect Informat & Elect Engn, 800 Dongchuan Rd, Shanghai, Peoples R China.
C3 Shanghai Jiao Tong University
RP Shen, BJ (corresponding author), Shanghai Jiao Tong Univ, Sch Elect Informat & Elect Engn, 800 Dongchuan Rd, Shanghai, Peoples R China.
EM riken01@sjtu.edu.cn; yssjtu@sjtu.edu.cn; xiaodong.gu@sjtu.edu.cn;
   chenyt@sjtu.edu.cn; bjshen@sjtu.edu.cn
OI Shen, Beijun/0000-0001-8370-3956
FU National Key Research and Develop-ment Program of China
   [2023YFB4503802]; National Natural Science Foundation of China
   [62102244, 62032004, 62272296]
FX <B>Acknowledgments</B> This research is supported by National Key
   Research and Develop-ment Program of China (Grant No. 2023YFB4503802)
   and National Natural Science Foundation of China (Grant No. 62102244,
   62032004 and 62272296) .
CR Aggarwal K., 2015, PeerJ Prepr, V3, pe1459
   Ahmad WU, 2023, 17TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EACL 2023, P1528
   Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Brown T. B., 2020, P 34 INT C NEURAL IN, P1
   Chada R, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P6081
   Chen B, 2021, PROC IEEE ACM INT C, P252, DOI 10.1109/ICSE-Companion52605.2021.00117
   Chen Mark, 2021, arXiv
   Chen Weizhu, 2022, 10 INT C LEARNING RE
   Chen XY, 2018, 32 C NEURAL INFORM P, V31
   Cui N, 2022, INT C PROGRAM COMPRE, P60, DOI 10.1145/3524610.3527888
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Gao TY, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (ACL-IJCNLP 2021), VOL 1, P3816
   GeeksforGeeks, 2023, Online judge problems in GeeksforGeeks platform.
   Gu YX, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P8410
   Guo D., 2021, 9 INT C LEARNING REP
   Hambardzumyan K, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (ACL-IJCNLP 2021), VOL 1, P4921
   Hu Y., 2022, P FIN ASS COMP LING, P2627, DOI DOI 10.18653/V1/2022.FINDINGS-EMNLP.193.19
   Husain Hamel, 2019, ARXIV
   Jiao MS, 2023, IEEE INT CONF AUTOM, P1529, DOI 10.1109/ASE56229.2023.00114
   Jiao WX, 2023, Arxiv, DOI [arXiv:2301.08745, 10.48550/ARXIV.2301.08745, DOI 10.48550/ARXIV.2301.08745]
   Karaivanov Svetoslav, 2014, P 2014 ACM INT S NEW, P173
   Kirkpatricka J, 2017, P NATL ACAD SCI USA, V114, P3521, DOI 10.1073/pnas.1611835114
   Lachaux Marie-Anne, 2020, ARXIV200603511
   Lample G, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P5039
   Lester B, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P3045
   Lewis M, 2019, P 58 ANN M ASS COMP, DOI [10.18653/v1/2020.acl-main.703, DOI 10.18653/V1/2020.ACL-MAIN.703]
   Li XLS, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (ACL-IJCNLP 2021), VOL 1, P4582
   Liu F, 2023, PROC INT CONF SOFTW, P755, DOI 10.1109/ICSE48619.2023.00072
   Liu X., 2023, AI Open, DOI [10.1016/j.aiopen.2023.08.012, DOI 10.1016/J.AIOPEN.2023.08.012]
   Lu S., 2021, P NEURIPS DATASETS B
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   Microsoft, 2022, CodeBERT based translation.
   Mossienko M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P40, DOI 10.1109/CSMR.2003.1192409
   Nguyen A.T., 2013, P 2013 9 JOINT M FDN, P651
   OpenAI, 2023, Chatgpt
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Perez E, 2021, ADV NEUR IN
   Raffel C, 2020, J MACH LEARN RES, V21
   Ren Shuo, 2020, arXiv
   Roziere B., 2022, 10 INT C LEARNING RE
   Salesforce, 2021, CodeT5-base model implementation
   Salesforce, 2023, CodeT5 based translation
   Shin T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P4222
   Szafraniec M., 2022, arXiv
   Tree-sitter, 2023, An incremental parsing system for programming tools.
   Vaswani A, 2017, ADV NEUR IN, V30
   Vincent P., 2008, P 25 INT C MACH LEAR, P1096, DOI [10.1145/1390156.1390294, DOI 10.1145/1390156.1390294]
   Wang CZ, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P382, DOI 10.1145/3540250.3549113
   Wang YQ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3386252
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Zhang B, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P1628
NR 52
TC 0
Z9 0
U1 12
U2 12
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2024
VL 212
AR 112002
DI 10.1016/j.jss.2024.112002
EA MAR 2024
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NY6C1
UT WOS:001204042800001
DA 2024-08-05
ER

PT J
AU Díaz, O
   Medeiros, R
   Al-Hajjaji, M
AF Diaz, Oscar
   Medeiros, Raul
   Al-Hajjaji, Mustafa
TI How can feature usage be tracked across product variants? Implicit
   Feedback in Software Product Lines
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software Product Lines; Implicit feedback; Continuous development
ID ACCEPTANCE; REQUIREMENTS
AB Implicit feedback involves gathering information about software usage to grasp how and when the software is utilized. This study investigates the integration of implicit feedback mechanisms into Software Product Line Engineering (SPLE). While common in product -based development for identifying bugs, usability issues, and informing requirement prioritization, its adoption in SPLs has been limited due to the unique challenges posed by SPLE, such as the emphasis on Domain Engineering over Application Engineering, and the need for systematic reuse of shared assets. We propose a novel approach to incorporate feedback practices into Domain Engineering, thereby shifting the focus from individual product variants to the SPL platform, and specifically moving from product -based feedback to feature -based feedback. Based on a case study, we suggest that product derivation includes a second step that injects the trackers at the time of derivation, using a Feedback Model that complements the Configuration Model for feedback analysis.To test this approach, we introduce FEACKER, an extension to pure::variants as the variability manager. FEACKER injects trackers when the product variant is derived. The findings are validated through a Technology Acceptance Model (TAM) evaluation and a focus group discussion, providing insights into the feasibility, acceptance, and potential impact of platform -based feedback in SPLE. The results indicate agreement on the benefits of conducting feedback analysis at the platform level and the perception that FEACKER seamlessly extends the capabilities of pure::variants.
C1 [Diaz, Oscar; Medeiros, Raul] Univ Basque Country UPV EHU, Gipuzkoa, Spain.
   [Al-Hajjaji, Mustafa] Pure Syst GmbH, Magdeburg, Germany.
C3 University of Basque Country
RP Medeiros, R (corresponding author), Univ Basque Country UPV EHU, Gipuzkoa, Spain.
EM oscar.diaz@ehu.eus; raul.medeiros@ehu.eus;
   mustafa.alhajjaji@pure-systems.com
RI ; Diaz, Oscar/D-2822-2011
OI Medeiros, Raul/0000-0002-2413-9336; Diaz, Oscar/0000-0003-1334-4761
FU MCIN/AEI; European Union NextGenerationEU/PRTR; Ministry of Science and
   Innovation of Spain;  [PID2021-125438OB- I00];  [PRE2019-087324]
FX We would like to extend our gratitude to both WACline's and pure
   -systems' employees for their invaluable contributions to this research.
   We are grateful for their time and effort. This work is co - supported
   by MCIN/AEI/10.13039/501100011033 and the "European Union
   NextGenerationEU/PRTR"under contract PID2021-125438OB- I00. Raul
   Medeiros enjoys a doctoral grant from the Ministry of Science and
   Innovation of Spain - PRE2019-087324.
CR Apel S., 2013, Feature-Oriented Software Product Lines, P3, DOI DOI 10.1007/978-3-642-37521-7
   Astegher M, 2021, LECT NOTES COMPUT SC, V12685, P182, DOI 10.1007/978-3-030-73128-1_13
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Beuche D, 2019, 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE(SPLC 2019), VOL B, P37, DOI 10.1145/3307630.3342391
   Caria F., 2020, Annotation in Digital Humanities, P39, DOI [10.1007/978-3-030-15200-0_3, DOI 10.1007/978-3-030-15200-0_3]
   Clements Paul, 2002, Software Product Lines: Practices and Patterns
   Dakkak A, 2022, 2022 IEEE 46TH ANNUAL COMPUTERS, SOFTWARE, AND APPLICATIONS CONFERENCE (COMPSAC 2022), P914, DOI 10.1109/COMPSAC54236.2022.00143
   Dakkak A, 2022, 2022 IEEE/ACM JOINT 16TH INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES AND 17TH ACM/IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICSSP/ICGSE 2022), P24, DOI 10.1145/3529320.3529323
   Dakkak A, 2021, ASIA PAC SOFWR ENG, P243, DOI 10.1109/APSEC53868.2021.00032
   Dakkak A, 2021, P INT COMP SOFTW APP, P934, DOI 10.1109/COMPSAC51774.2021.00126
   Davis F.D., 2023, TECHNOLOGY ACCEPTANC
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Díaz O, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10101-6
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Galindo JA, 2019, COMPUTING, V101, P387, DOI 10.1007/s00607-018-0646-1
   Gregor S, 2020, J ASSOC INF SYST, V21, P1622, DOI 10.17705/1jais.00649
   Hellebrand R, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P53, DOI 10.1145/3109729.3109735
   Hoffmann P., 2020, Analyzing Usage Data in Enterprise Cloud Software: An Action Design Research Approach, P257, DOI DOI 10.1007/978-3-030-45819-5_11
   Holmstrom Olsson Helena, 2013, Lean Enterprise Software and Systems, P152, DOI [10.1007/978-3, DOI 10.1007/978-3]
   Johanssen JO, 2019, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2019.00026
   Johanssen JO, 2018, LECT NOTES COMPUT SC, V11271, P263, DOI 10.1007/978-3-030-03673-7_19
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kim Hamilton R.M., 2006, Learning Uml 2.0
   Kontio J., 2008, Guide to advanced empirical software engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54]
   Krueger C, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE - VOL 2, P1, DOI 10.1145/3236405.3236409
   Liang W., 2015, P 7 AS PAC S INT INT, P132, DOI [DOI 10.1145/2875913.2875933.20, 10.1145/2875913.2875933, DOI 10.1145/2875913.2875933]
   Lindohf R, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09913-9
   López L, 2021, SCI COMPUT PROGRAM, V202, DOI 10.1016/j.scico.2020.102568
   Maalej W., 2009, P 24 ACM SIGPLAN C C, P981, DOI [10.1145/1639950.1640068, DOI 10.1145/1639950.1640068]
   Martínez-Fernández S, 2019, IEEE ACCESS, V7, P68219, DOI 10.1109/ACCESS.2019.2917403
   Mattos DI, 2018, LECT NOTES BUS INF P, V314, P277, DOI 10.1007/978-3-319-91602-6_20
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Medina H, 2022, SOFTWAREX, V18, DOI 10.1016/j.softx.2022.101090
   Morgan D.L., 1997, Focus groups as qualitative research, V16, DOI DOI 10.4135/9781412984287
   Oriol M, 2018, INT REQUIR ENG CONF, P217, DOI 10.1109/RE.2018.00030
   Plaza B, 2011, TOURISM MANAGE, V32, P477, DOI 10.1016/j.tourman.2010.03.015
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Redman T.C., 2013, Handbook of Data Quality, Research and Practice, P15, DOI [10.1007/978-3-642-36257-6_2, DOI 10.1007/978-3-642-36257-6_2, 10.1007/978-3-642-36257-6\_2, DOI 10.1007/978-3-642-36257-6]
   Rehm G, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P2416
   Rehm HL, 2015, NEW ENGL J MED, V372, P2235, DOI 10.1056/NEJMsr1406261
   Sanderson R., 2016, Web annotation protocol
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   Sein MK, 2011, MIS QUART, V35, P37
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Tavakol M, 2011, INT J MED EDUC, V2, P53, DOI 10.5116/ijme.4dfb.8dfd
   Turner M, 2010, INFORM SOFTWARE TECH, V52, P463, DOI 10.1016/j.infsof.2009.11.005
   Ursachi G, 2015, PROC ECON FINANC, V20, P679, DOI 10.1016/S2212-5671(15)00123-9
   van Oordt S, 2021, INT REQUIR ENG CONF, P221, DOI 10.1109/RE51729.2021.00027
   W3Techs, 2022, Usage statistics of traffic analysis tools for websites
   Wallace LG, 2014, INFORM MANAGE-AMSTER, V51, P249, DOI 10.1016/j.im.2013.12.003
   Wang C, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2199
   Wnuk K, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P89, DOI 10.1109/RE.2009.32
   Xiao J., 2021, ACM ICEA 21 2021 ACM, P71, DOI DOI 10.1145/3491396.3506530
NR 54
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 112013
DI 10.1016/j.jss.2024.112013
EA MAR 2024
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ9R7
UT WOS:001204398400001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Coppa, E
   Izzillo, A
AF Coppa, Emilio
   Izzillo, Alessio
TI Testing concolic execution through consistency checks☆
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Symbolic execution; Testing; Concolic execution
ID SYMBOLIC EXECUTION
AB Symbolic execution is a well-known software testing technique that evaluates how a program runs when considering a symbolic input, i.e., an input that can initially assume any concrete value admissible for its data type. The dynamic twist of this technique is dubbed concolic execution and has been demonstrated to be a practical technique for testing even complex real-world programs. Unfortunately, developing concolic engines is hard. Indeed, an engine has to correctly instrument the program to build accurate symbolic expressions, which represent the program computation. Furthermore, to reason over such expressions, it has to interact with an SMT solver. Hence, several implementation bugs may emerge within the different layers of an engine. In this article, we consider the problem of testing concolic engines. In particular, we propose several testing strategies whose main intuition is to exploit the concrete state kept by the executor to identify inconsistencies within the symbolic state. We integrated our strategies into three state-of-the-art concolic executors (SymCC, SymQEMU, and Fuzzolic, respectively) and then performed several experiments to show that our ideas can find bugs in these frameworks. Overall, our approach was able to discover more than 12 bugs across these engines.
C1 [Coppa, Emilio] LUISS Guido Carli Univ, Rome, Italy.
   [Izzillo, Alessio] Sapienza Univ Rome, Rome, Italy.
C3 Luiss Guido Carli University; Sapienza University Rome
RP Coppa, E (corresponding author), LUISS Guido Carli Univ, Rome, Italy.
EM ecoppa@luiss.it; izzillo@diag.uniroma1.it
RI Coppa, Emilio/AFM-7712-2022
OI Coppa, Emilio/0000-0002-8094-871X
FU Project PRIN 2022 FARE [202225BZJC, CUP B53D23012730006]; Project PRIN
   2022 PNRR SETA [P202233M9Z, CUP B53D23026000001]; EU-Next Generation EU
FX This work was partially supported by Project PRIN 2022 FARE (202225BZJC,
   CUP B53D23012730006) and Project PRIN 2022 PNRR SETA (P202233M9Z, CUP
   B53D23026000001) . Both projects are under the Italian NRRP MUR program
   funded by the EU-Next Generation EU.
CR Angelini M, 2019, IEEE SYM VIS CYB SEC, DOI 10.1109/vizsec48167.2019.9161524
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   Borzacchiello L, 2022, SOFTWAREX, V20, DOI 10.1016/j.softx.2022.101219
   Borzacchiello L, 2021, COMPUT SECUR, V108, DOI 10.1016/j.cose.2021.102368
   Borzacchiello L, 2021, PROC INT CONF SOFTW, P711, DOI 10.1109/ICSE43902.2021.00071
   Borzacchiello L, 2019, LECT NOTES COMPUT SC, V11527, P121, DOI 10.1007/978-3-030-20951-3_12
   Cadar C, 2008, OSDI, V8, P209
   Cadar C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P765, DOI 10.1145/2889160.2889206
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Chen J, 2022, PROCEEDINGS OF THE 31ST USENIX SECURITY SYMPOSIUM, P2531
   Chen JJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3363562
   Coppa E., 2023, ABOUT US
   Coppa E., 2023, Bugfix in Fuzzolic: instrumentation of punpck and packuswb instructions
   Coppa E., 2022, ISSUE 108 SYMCC
   Coppa E., 2023, ISSUE 136 SYMCC
   Coppa E., 2023, Fix for Issue #14 from SymQEMU
   Coppa E., 2023, Bugfix in Fuzzolic: accesses to XMM registers
   Coppa E., 2023, SymQEMU
   Coppa E, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556928
   Cuoq Pascal, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P120, DOI 10.1007/978-3-642-28891-3_12
   Daniel Brett, 2007, P 6 JOINT M EUR SOFT, P185, DOI [10.1145/1287624.1287651, DOI 10.1145/1287624.1287651]
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P., 2008, P NDSS INT SOC
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Haochen, 2023, Issue #10 in SymQEMU
   Kapus T, 2017, IEEE INT CONF AUTOM, P590, DOI 10.1109/ASE.2017.8115669
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/cgo.2004.1281665
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Myers G.J., 2011, The art of software testing, VVolume 1
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Pasareanu Corina S., 2008, P 2008 INT S SOFTW T, P15, DOI [DOI 10.1145/1390630, DOI 10.1145/1390630.1390635]
   Poeplau S, 2021, 28TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2021), DOI 10.14722/ndss.2021.23118
   Poeplau S, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P181
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Sen Koushik, 2005, Proc. ESEC/FSE, DOI 10.1145/1081706.1081750
   Shoshitaishvili Y, 2016, P IEEE S SECUR PRIV, P138, DOI 10.1109/SP.2016.17
   Wu J., 2013, P 2013 9 JOINT M FDN, DOI [10.1145/2491411.2491439, DOI 10.1145/2491411.2491439]
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Yun I, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P745
NR 42
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 112001
DI 10.1016/j.jss.2024.112001
EA FEB 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NF8A6
UT WOS:001199117700001
OA hybrid
DA 2024-08-05
ER

PT J
AU Lee, SU
   Fernando, N
   Lee, K
   Schneider, JG
AF Lee, Sung Une
   Fernando, Niroshinie
   Lee, Kevin
   Schneider, Jean -Guy
TI A survey of energy concerns for software engineering☆
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software engineering; Energy; Green; Sustainability
ID SUSTAINABLE SOFTWARE; GREEN; MODEL; BODY; CONSUMPTION; MANAGEMENT
AB There is growing attention to energy efficiency in the software engineering field. This has been driven by modern technologies, for example, Internet of Things (IoT), Social Networking Services (SNS) and quantum computing. In addition to this, recent trends and concerns such as Environment, Social, and Governance (ESG) and human/societal/environmental well-being for responsible Artificial Intelligence (AI) have accelerated the use of energy efficient software. Despite this, energy concerns in this field have been less explored and studied. This limitation results in falling short to address and overcome greenability issues at the software level, and leaving critical challenges to be solved in this space. This study aims to address this limitation and fill the gap between previous studies. We survey green in software engineering framed by the ten knowledge areas of software engineering to not only cover the entire development life-cycle but also widen the scope of discussion to software process, method, and model management. Based on our comprehensive investigation, we discuss open challenges, trade-offs and implications of this study for both researchers and practitioners.
C1 [Lee, Sung Une] CSIROs Data61, Clayton, Vic 3168, Australia.
   [Fernando, Niroshinie; Lee, Kevin] Deakin Univ, Sch Infomat Technol, Geelong, Vic 3220, Australia.
   [Schneider, Jean -Guy] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
C3 Commonwealth Scientific & Industrial Research Organisation (CSIRO);
   Deakin University; Monash University
RP Lee, SU (corresponding author), CSIROs Data61, Clayton, Vic 3168, Australia.
EM sunny.lee@data61.csiro.au
RI Lee, Kevin/AAF-3725-2020
OI Lee, Kevin/0000-0002-2730-9150
CR Abdullah R., 2015, Int. J. Adv. Comput. Technol. (IJACT), V9, P136
   Abdulsalam S, 2014, 2014 INTERNATIONAL GREEN COMPUTING CONFERENCE (IGCC)
   Abdulsalam S, 2015, 2015 SIXTH INTERNATIONAL GREEN COMPUTING CONFERENCE AND SUSTAINABLE COMPUTING CONFERENCE (IGSC)
   Agarwal Shalabh, 2012, International Journal of Research and Reviews in Computer Science, V3, P1425
   Aggarwal K, 2015, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSM.2015.7332477
   Al-Qamash A, 2018, 2018 INTERNATIONAL CONFERENCE ON COMPUTER AND APPLICATIONS (ICCA), P276, DOI 10.1109/COMAPP.2018.8460443
   Alcott B, 2005, ECOL ECON, V54, P9, DOI 10.1016/j.ecolecon.2005.03.020
   Alharthi AD, 2019, REQUIR ENG, V24, P523, DOI 10.1007/s00766-018-0299-9
   Ampatzoglou Apostolos., 2013, Proceedings of the 17th Panhellenic Conference on Informatics, PCI, P122
   Amsel N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P976, DOI 10.1145/1985793.1985964
   [Anonymous], 2010, ENVIROINFO CITESEER
   [Anonymous], 2021, Global Energy Review 2021, DOI [DOI 10.1787/90C8C125-EN, 10.1787/90c8c125-en]
   [Anonymous], 2014, CASCON
   Anthony Bokolo Jnr, 2016, J. Soft Comput. Decis. Support Syst., V3, P20
   Ardito L, 2015, IT PROF, V17, P44, DOI 10.1109/MITP.2015.16
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Bangash AA, 2017, IEEE INT WORK C SO, P111, DOI 10.1109/SCAM.2017.18
   Basili V.R., 1994, Encyclopedia of software engineering, P528
   Becker C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P467, DOI 10.1109/ICSE.2015.179
   Berkhout F., 2001, Report to the OECD
   Bourque P, 1999, IEEE SOFTWARE, V16, P35, DOI 10.1109/52.805471
   Broussely M, 2010, ELECTRIC AND HYBRID VEHICLES: POWER SOURCES, MODELS, SUSTAINABILITY, INFRASTRUCTURE AND THE MARKET, P305, DOI 10.1016/B978-0-444-53565-8.00013-0
   Brundtland G.H., 1987, United Nations General Assembly document A/42/427
   Bunse C., 2013, SOFTWARETECHNIK TREN, V33
   Calero C., 2015, Green in software engineering, V3
   Calero Coral, 2013, RE4SuSy@ RE, V995
   Calero Coral, 2014, RE4SUSY RE, P28
   Capra E, 2012, IT PROF, V14, P54, DOI 10.1109/MITP.2012.39
   Chatzigeorgiou A, 2002, SOFTWARE QUAL J, V10, P355, DOI 10.1023/A:1022142105380
   Chen FF, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P721, DOI 10.1109/ICSE.2015.232
   Chitchyan R, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P533, DOI 10.1145/2889160.2889217
   Chowdhury S, 2019, EMPIR SOFTW ENG, V24, P1649, DOI 10.1007/s10664-018-9640-7
   Chowdhury SA, 2019, PROC INT CONF SOFTW, P1107, DOI 10.1109/ICSE.2019.00114
   Condori-Fernandez N, 2019, INT CONF RES CHAL, P305, DOI 10.1109/rcis.2019.8877000
   Corbalan L, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P191, DOI 10.1145/3197231.3197242
   Couto M, 2017, PROCEEDINGS OF THE 21ST BRAZILIAN SYMPOSIUM ON PROGRAMMING LANGUAGES (SBLP 2017), DOI 10.1145/3125374.3125382
   Couto M, 2014, LECT NOTES COMPUT SC, V8771, P77, DOI 10.1007/978-3-319-11863-5_6
   Cruz L, 2019, EMPIR SOFTW ENG, V24, P2209, DOI 10.1007/s10664-019-09682-0
   Dick M, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P78, DOI 10.1109/GREENS.2013.6606425
   Dick M, 2010, IFIP ADV INF COMM TE, V328, P248
   Dukovic M, 2015, ACTA POLYTECH HUNG, V12, P191
   Erdelyi Krisztina, 2013, 2013 IEEE 11th International Symposium on Intelligent Systems and Informatics (SISY), P337, DOI 10.1109/SISY.2013.6662597
   FeiFei Chen, 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P45, DOI 10.1109/GREENS.2012.6224255
   Feitosa D, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1851
   Ferreira D, 2011, LECT NOTES COMPUT SC, V6696, P19, DOI 10.1007/978-3-642-21726-5_2
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Gebru T, 2021, COMMUN ACM, V64, P86, DOI 10.1145/3458723
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Georgiou S, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3337773
   Gong DC, 2009, 2009 INTERNATIONAL CONFERENCE ON NEW TRENDS IN INFORMATION AND SERVICE SCIENCE (NISS 2009), VOLS 1 AND 2, P1076, DOI 10.1109/NISS.2009.183
   Goodland R.T., 2002, ENCY GLOBAL ENV CHAN, V5, P481
   Gottschalk Marion., 2012, GI-Jahrestagung, V208, P441
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Hasan K, 2019, J NETW COMPUT APPL, V143, P178, DOI 10.1016/j.jnca.2019.06.016
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Hilty L.M, 2011, Notizie di POLITEIA, V27, P13, DOI DOI 10.5167/UZH-55640
   Hindle A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P46, DOI 10.1109/SANER.2016.60
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P374, DOI 10.1007/s10664-013-9276-6
   Hogan T, 2009, LECT NOTES COMPUT SC, V5895, P84, DOI 10.1007/978-3-642-10424-4_7
   Honig Timo., 2014, 2014 C TIMELY RESULT
   Honig Timo., 2012, ACM SIGOPS Oper. Syst. Rev, V45, P58, DOI DOI 10.1145/2094091.2094106
   Hsu HY, 2009, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2009.5070541
   Jabbarvand R., 2016, P 25 INT S SOFTWARE, P425, DOI DOI 10.1145/2931037.2931067
   Jagroep E, 2017, PROC INT CONF SOFTW, P76, DOI 10.1109/ICSE-SEIS.2017.10
   Jagroep EA, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P523, DOI 10.1145/2889160.2889216
   Johann T., 2011, 2011 International Symposium on Humanities, Science and Engineering Research (SHUSER 2011), P34, DOI 10.1109/SHUSER.2011.6008495
   Kansal A., 2010, 1 ACM S CLOUD COMP, P39
   Kazman R, 2018, IEEE SOFTWARE, V35, P102, DOI 10.1109/MS.2018.3571227
   Kern E., 2013, 1 INT C INFORM COMMU, P87
   Kiehne H.A., 2003, BATTERY TECHNOLOGY H, VSecond
   Kipp A., 2011, Proceedings of the 2011 International Conference on Complex, Intelligent and Software Intensive Systems (CISIS 2011), P241, DOI 10.1109/CISIS.2011.42
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kounev Samuel, 2020, Systems Benchmarking, P285
   Kwon YW, 2013, PROC IEEE INT CONF S, P170, DOI 10.1109/ICSM.2013.28
   Lago P., 2013, ACM SIGSOFT Softw. Eng. Not., V38, P31, DOI 10.1145/2413038.2413062
   Lami G, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P53, DOI 10.1109/IWSM-MENSURA.2012.16
   Lami G, 2012, COMM COM INF SC, V301, P97
   Lange KD, 2009, COMPUTER, V42, P95, DOI 10.1109/MC.2009.84
   Linares-Vásquez M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P143, DOI 10.1145/2786805.2786847
   Mahmoud Sara S., 2013, International Journal of Software Engineering and Its Applications, V7, P55
   Mancebo J, 2021, SOFTWARE QUAL J, V29, P101, DOI 10.1007/s11219-020-09536-9
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Meridji K, 2013, 2013 1ST INTERNATIONAL CONFERENCE & EXHIBITION ON THE APPLICATIONS OF INFORMATION TECHNOLOGY TO RENEWABLE ENERGY PROCESSES AND SYSTEMS (IT-DREPS 2013), P107, DOI 10.1109/IT-DREPS.2013.6588162
   Mitchell M, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P220, DOI 10.1145/3287560.3287596
   Morales R, 2018, IEEE T SOFTWARE ENG, V44, P1176, DOI 10.1109/TSE.2017.2757486
   Nagappan M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P21, DOI 10.1109/SANER.2016.88
   Naumann S, 2015, ADV INTELL SYST, V310, P191, DOI 10.1007/978-3-319-09228-7_11
   Naumann S, 2011, SUSTAIN COMPUT-INFOR, V1, P294, DOI 10.1016/j.suscom.2011.06.004
   Noureddine A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P623, DOI 10.1109/ICSE.2015.208
   Oliveira W, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09950-y
   Oliveira W, 2017, IEEE WORK CONF MIN S, P42, DOI 10.1109/MSR.2017.66
   Palit R., 2011, Proceedings of the 6th International Workshop on Automation of Software Test, AST'11, P84
   Pang C, 2016, IEEE SOFTWARE, V33, P83, DOI 10.1109/MS.2015.83
   Park J.J., 2014, SEKE, P717
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Paul Kolin, 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P2421, DOI 10.1109/CIT.2010.416
   Penzenstadler B., 2013, P 28 ANN S APPL COMP, P1183, DOI [DOI 10.1145/2480362.2480585, 10.1145/2480362.2480585]
   Penzenstadler B., 2014, Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering, p14:1
   Penzenstadler B, 2014, IEEE SOFTWARE, V31, P40, DOI 10.1109/MS.2014.22
   Penzenstadler Birgit, 2013, Proceedings of Software Engineering, Japan, P3, DOI DOI 10.1145/2451605.2451609
   Penzenstadler Birgit, 2012, 3 INT C COMPUTATIONA
   Pereira R, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110463
   Pereira R, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P256, DOI 10.1145/3136014.3136031
   Perez-Castillo R, 2014, IEEE SOFTWARE, V31, P48, DOI 10.1109/MS.2014.23
   Pinto G, 2017, COMMUN ACM, V60, P68, DOI 10.1145/3154384
   Pinto G, 2016, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSME.2016.34
   Pinto G, 2014, ACM SIGPLAN NOTICES, V49, P345, DOI [10.1145/2714064.2660235, 10.1145/2660193.2660235]
   Poess Meikel., 2010, e-Energy, P131
   Raj Athul, 2017, DIASEDUDM ISEC
   Ramachandran GS, 2015, IEEE SENS J, V15, P3381, DOI 10.1109/JSEN.2015.2388857
   Roher K, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON USER EVALUATIONS FOR SOFTWARE ENGINEERING RESEARCHERS (USER), P16, DOI 10.1109/USER.2013.6603080
   Ryu K, 2011, PROC ICPR21, P1
   Sahar H, 2019, SUSTAIN COMPUT-INFOR, V21, P28, DOI 10.1016/j.suscom.2018.10.005
   Sahin C., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P55, DOI 10.1109/GREENS.2012.6224257
   Sahin C, 2016, J SOFTW-EVOL PROC, V28, P565, DOI 10.1002/smr.1762
   Sahin Cagri, 2014, P 8 ACMIEEE INT S EM, P1
   Saputri TRD, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106407
   Saputri TRD, 2016, COMM COM INF SC, V671, P53, DOI 10.1007/978-981-10-3256-1_4
   Seo C, 2008, INT CONF PERVAS COMP, P243, DOI 10.1109/PERCOM.2008.85
   Shenoy SS, 2011, ANNU IEEE IND CONF
   Siegmund Norbert, 2010, P 2 INT WORKSHOP FEA, P2
   Singh D., 2010, The Atom LEAP platform for energy-efficient embedded computing: architecture, operation, and system implementation
   Steigerwald B., 2008, Creating energy efficient software
   Taina Juha, 2011, UPGRADE: The European Journal for the Informatics Professional, V12, P22
   Tanelli M, 2008, LECT NOTES COMPUT SC, V5364, P599, DOI 10.1007/978-3-540-89652-4_52
   Van Loon Han, 2004, Process Assessment and ISO/IEC 15504: A Reference Book, V775
   Venters CC, 2023, INFORM SOFTWARE TECH, V164, DOI 10.1016/j.infsof.2023.107316
   Venters CC, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON BODY OF KNOWLEDGE FOR SOFTWARE SUSTAINABILITY (BOKSS 2021), P3, DOI 10.1109/BoKSS52540.2021.00009
   Venters CC, 2018, J SYST SOFTWARE, V138, P174, DOI 10.1016/j.jss.2017.12.026
   Vetro Antonio., 2013, P ENERGY 2013 3 INT, P34
   Warade Mehul, 2021, 2021 AUSTRALASIAN CO
   Webster J, 2002, MIS QUART, V26, pXIII
   Wilke Claas, 2013, P 2013 WORKSHOP GREE, P9
   Wu TY, 2017, IEEE ACCESS, V5, P11413, DOI 10.1109/ACCESS.2017.2716344
   Xia BM, 2023, Arxiv, DOI [arXiv:2301.05362, DOI 10.48550/ARXIV.2301.05362, 10.48550/ARXIV.2301.05362]
   Xing J, 2009, 2009 5TH INTERNATIONAL CONFERENCE ON WIRELESS COMMUNICATIONS, NETWORKING AND MOBILE COMPUTING, VOLS 1-8, P404
   Yuki T, 2014, LECT NOTES COMPUT SC, V8664, P169, DOI 10.1007/978-3-319-09967-5_10
   Zhang Chenlei, 2014, P 11 WORKING C MININ, P400, DOI DOI 10.1145/2597073.2597130
NR 140
TC 1
Z9 1
U1 8
U2 8
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111944
DI 10.1016/j.jss.2023.111944
EA JAN 2024
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA II2E3
UT WOS:001165624100001
DA 2024-08-05
ER

PT J
AU Sedki, I
   Hamou-Lhadj, A
   Mohamed, OA
AF Sedki, Issam
   Hamou-Lhadj, Abdelwahab
   Mohamed, Otmane Ait
TI AML: An accuracy metric model for effective evaluation of log parsing
   techniques
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Log parsing; Log analytics; Software logging; AIOps; Software
   maintenance and evolution
AB Logs are essential for the maintenance of large software systems. Software engineers often analyze logs for debugging, root cause analysis, and anomaly detection tasks. Logs, however, are partly structured, making the extraction of useful information from massive log files a challenging task. Recently, many log parsing techniques have been proposed to automatically extract log templates from unstructured log files. These parsers, however, are evaluated using different accuracy metrics. In this paper, we show that these metrics have several drawbacks, making it challenging to understand the strengths and limitations of existing parsers. To address this, we propose a novel accuracy metric, called AML (Accuracy Metric for Log Parsing). AML is a robust accuracy metric that is inspired by research in the field of remote sensing. It is based on measuring omission and commission errors. We use AML to assess the accuracy of 14 log parsing tools applied to the parsing of 16 log datasets. We also show how AML compares to existing accuracy metrics. Our findings demonstrate that AML is a promising accuracy metric for log parsing compared to alternative solutions, which enables a comprehensive evaluation of log parsing tools to help better decision-making in selecting and improving log parsing techniques.
C1 [Sedki, Issam; Hamou-Lhadj, Abdelwahab; Mohamed, Otmane Ait] Concordia Univ, Montreal, PQ, Canada.
C3 Concordia University - Canada
RP Hamou-Lhadj, A (corresponding author), Concordia Univ, Montreal, PQ, Canada.
EM i_sedki@live.concordia.ca; wahab.hamou-lhadj@concordia.ca;
   otmane.aitmohamed@concordia.ca
FU Natural Sciences and Engineering Council of Canada (NSERC); Innovation
   for Defence Excellence and Security (IDEaS) program from the Canadian
   Department of National Defence (DND)
FX This work is partly supported by the Natural Sciences and Engineering
   Council of Canada (NSERC) and the Innovation for Defence Excellence and
   Security (IDEaS) program from the Canadian Department of National
   Defence (DND).
CR Campbell J.B, 2022, Introduction to remote sensing, Vsixth
   Chakrabarity S.N, 2017, J. Appl. Quant. Methods, V12
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Chow M., 2014, P 11 USENIX C OP SYS, P217
   Congalton R.G., 2019, Assessing the Accuracy of Remotely Sensed Data: Principles and Practices, V3rd ed., DOI 10.1201/9780429052729
   Dai HT, 2022, IEEE T SOFTWARE ENG, V48, P879, DOI 10.1109/TSE.2020.3007554
   Du M, 2016, IEEE DATA MINING, P859, DOI [10.1109/ICDM.2016.160, 10.1109/ICDM.2016.0103]
   El-Masri D, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106276
   Frost J., 2020, Regression analysis: An intuitive guide for using and interpreting linear models
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Graham R.L., 1989, Computers in Physics, V3, P106, DOI [10.1063/1.4822863, DOI 10.1063/1.4822863]
   Hamooni H, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1573, DOI 10.1145/2983323.2983358
   He PJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P33, DOI 10.1109/ICWS.2017.13
   He SL, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P60, DOI 10.1145/3236024.3236083
   He SL, 2016, PROC INT SYMP SOFTW, P207, DOI 10.1109/ISSRE.2016.21
   Ho TK, 2002, IEEE T PATTERN ANAL, V24, P289, DOI 10.1109/34.990132
   Huang P, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P1
   Jiang ZM, 2008, J SOFTW MAINT EVOL-R, V20, P249, DOI 10.1002/smr.374
   Khan ZA, 2022, PROC INT CONF SOFTW, P1095, DOI 10.1145/3510003.3510101
   Koukoulas S, 2001, PHOTOGRAMM ENG REM S, V67, P499
   Lin QW, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P480, DOI 10.1145/3236024.3236060
   Lin QW, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P102, DOI 10.1145/2889160.2889232
   Lingras P, 2007, GRC: 2007 IEEE INTERNATIONAL CONFERENCE ON GRANULAR COMPUTING, PROCEEDINGS, P654, DOI 10.1109/GrC.2007.77
   Liu CR, 2007, REMOTE SENS ENVIRON, V107, P606, DOI 10.1016/j.rse.2006.10.010
   Lou J, 2010, PROTEIN ENG DES SEL, V23, P311, DOI 10.1093/protein/gzq001
   Makanju A, 2012, IEEE T KNOWL DATA EN, V24, P1921, DOI 10.1109/TKDE.2011.138
   Makanju A, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1255
   Messaoudi S, 2018, INT C PROGRAM COMPRE, P167, DOI 10.1145/3196321.3196340
   Mi HB, 2013, IEEE T PARALL DISTR, V24, P1245, DOI 10.1109/TPDS.2013.21
   Mizutani Masayoshi, 2013, 2013 IEEE International Conference on Services Computing (SCC), P595, DOI 10.1109/SCC.2013.73
   Nagappan Meiyappan, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P114, DOI 10.1109/MSR.2010.5463281
   Nagaraj K., 2012, P 9 USENIX C NETW SY, P26
   Nedelkoski S, 2021, LECT NOTES ARTIF INT, V12460, P122, DOI 10.1007/978-3-030-67667-4_8
   Oliner A, 2007, I C DEPEND SYS NETWO, P575, DOI 10.1109/DSN.2007.103
   Patel K, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10136-3
   Pinjia He, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P654, DOI 10.1109/DSN.2016.66
   Sedki I, 2022, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME55016.2022.00009
   Shang WY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P402, DOI 10.1109/ICSE.2013.6606586
   Shima K, 2016, Arxiv, DOI arXiv:1611.03213
   Tang L., 2011, Proceedings of the 20th ACM International Conference on Information and Knowledge Management, P785, DOI [DOI 10.1145/2063576.2063690, 10.1145/2063576.2063690, 10.1145/2063576. 2063690]
   Vaarandi R, 2003, PROCEEDINGS OF THE 3RD IEEE WORKSHOP ON IP OPERATIONS & MANAGEMENT (IPOM2003), P119
   Vaarandi R, 2015, INT CONF NETW SER, P1, DOI 10.1109/CNSM.2015.7367331
   Weiyi Shang, 2011, 2011 18th Working Conference on Reverse Engineering, P335, DOI 10.1109/WCRE.2011.48
   Xu W, 2009, IEEE DATA MINING, P588, DOI 10.1109/ICDM.2009.19
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Zhang SJ, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app112411974
   Zhou R, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P577, DOI [10.1109/saner48275.2020.9054831, 10.1109/SANER48275.2020.9054831]
   Zhu JM, 2023, Arxiv, DOI arXiv:2008.06448
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
NR 49
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112154
DI 10.1016/j.jss.2024.112154
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZY8H1
UT WOS:001278931700001
DA 2024-08-05
ER

PT J
AU Recupito, G
   Pecorelli, F
   Catolino, G
   Lenarduzzi, V
   Taibi, D
   Di Nucci, D
   Palomba, F
AF Recupito, Gilberto
   Pecorelli, Fabiano
   Catolino, Gemma
   Lenarduzzi, Valentina
   Taibi, Davide
   Di Nucci, Dario
   Palomba, Fabio
TI Technical debt in AI-enabled systems: On the prevalence, severity,
   impact, and management strategies for code and architecture
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE AI technical debt; Software quality; Survey studies; Software
   engineering for artificial intelligence; Empirical software engineering
ID CHALLENGES; PATTERNS
AB Context: Artificial Intelligence (AI) is pervasive in several application domains and promises to be even more diffused in the next decades. Developing high-quality AI-enabled systems - software systems embedding one or multiple AI components, algorithms, and models - could introduce critical challenges for mitigating specific risks related to the systems' quality. Such development alone is insufficient to fully address socio-technical consequences and the need for rapid adaptation to evolutionary changes. Recent work proposed the concept of AI technical debt, a potential liability concerned with developing AI-enabled systems whose impact can affect the overall systems' quality. While the problem of AI technical debt is rapidly gaining the attention of the software engineering research community, scientific knowledge that contributes to understanding and managing the matter is still limited. Objective: In this paper, we leverage the expertise of practitioners to offer useful insights to the research community, aiming to enhance researchers' awareness about the detection and mitigation of AI technical debt. Our ultimate goal is to empower practitioners by providing them with tools and methods. Additionally, our study sheds light on novel aspects that practitioners might not be fully acquainted with, contributing to a deeper understanding of the subject. Method: We develop a survey study featuring 53 AI practitioners, in which we collect information on the practical prevalence, severity, and impact of AI technical debt issues affecting the code and the architecture other than the strategies applied by practitioners to identify and mitigate them. Results: The key findings of the study reveal the multiple impacts that AI technical debt issues may have on the quality of AI-enabled systems ( e . g ., the high negative impact that Undeclared consumers has on security, whereas Jumbled Model Architecture can induce the code to be hard to maintain) and the little support practitioners have to deal with them, limited to apply manual effort for identification and refactoring. Conclusion: We conclude the article by distilling lessons learned and actionable insights for researchers.
C1 [Recupito, Gilberto; Pecorelli, Fabiano; Catolino, Gemma; Di Nucci, Dario; Palomba, Fabio] Univ Salerno, Software Engn SeSa Lab, Salerno, Italy.
   [Lenarduzzi, Valentina; Taibi, Davide] Univ Oulu, Oulu, Finland.
C3 University of Salerno; University of Oulu
RP Recupito, G (corresponding author), Univ Salerno, Software Engn SeSa Lab, Salerno, Italy.
EM grecupito@unisa.it; fpecorelli@unisa.it; gcatolino@unisa.it;
   valentina.lenarduzzi@oulu.fi; davide.taibi@tuni.fi; ddinucci@unisa.it;
   fpalomba@unisa.it
RI Taibi, Davide/E-4935-2015
OI Taibi, Davide/0000-0002-3210-3990
FU QualAI national research project - MUR under the PRIN 2022 program
   [2022B3BP5S]
FX This work has been partially supported by the QualAI national research
   project, which have been funded by the MUR under the PRIN 2022 program
   (Contracts 2022B3BP5S) .
CR Ala-Pietila P., 2020, The Assessment List for Trustworthy Artificial Intelligence (ALTAI)
   Alahdab M, 2019, LECT NOTES COMPUT SC, V11915, P195, DOI 10.1007/978-3-030-35333-9_14
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Basili V.R., 1994, Encyclopedia of software engineering, P528
   Bogner J, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2021), P64, DOI 10.1109/TechDebt52882.2021.00016
   Bosch Jan, 2021, Artificial Intelligence Paradigms for Smart Cyber-Physical Systems, P1
   Breck E, 2017, IEEE INT CONF BIG DA, P1123, DOI 10.1109/BigData.2017.8258038
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Costal D., 2023, INT C PROD FOC SOFTW, P3
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Easterbrook S., 2008, Guide to Advanced Empirical Software Eng, P285, DOI [10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-5_11]
   Foidl H., 2022, P 1 INT C AI ENG SOF, P229
   Foidl H, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P13, DOI 10.1145/3340482.3342743
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Gesi J., 2022, Code smells in machine learning systems
   Gezici B, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10105-2
   Golendukhina Valentina, 2022, P 1 INT C AI ENG SOF, P1
   Holvitie J, 2018, INFORM SOFTWARE TECH, V96, P141, DOI 10.1016/j.infsof.2017.11.015
   ISO/IEC, 2023, International Standard ISO/IEC 25059:2023
   Jaafar F, 2013, WORK CONF REVERSE EN, P351, DOI 10.1109/WCRE.2013.6671310
   Jebnoun H, 2020, IEEE WORK CONF MIN S, P420, DOI 10.1145/3379597.3387479
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kuwajima H, 2020, MACH LEARN, V109, P1103, DOI 10.1007/s10994-020-05872-w
   Lenarduzzi V, 2021, LECT NOTES BUS INF P, V404, P43, DOI 10.1007/978-3-030-65854-0_4
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110827
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Liu JK, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P1, DOI 10.1145/3377815.3381377
   Lwakatare LE, 2019, LECT NOTES BUS INF P, V355, P227, DOI 10.1007/978-3-030-19034-7_14
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Mailach A, 2023, PROC INT CONF SOFTW, P690, DOI 10.1109/ICSE48619.2023.00067
   Malakuti S, 2021, 11TH INTERNATIONAL CONFERENCE ON THE INTERNET OF THINGS, IOT 2021, P9, DOI 10.1145/3494322.3494324
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Martínez-Fernández S, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487043
   Matthews J, 2020, AI MAG, V41, P82
   Mikkonen T, 2021, LECT NOTES BUS INF P, V404, P94, DOI 10.1007/978-3-030-65854-0_8
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Nemoto T., 2014, JALT 2013 conference proceedings, P1
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Ozkaya I, 2020, IEEE SOFTWARE, V37, P3, DOI 10.1109/MS.2020.2993662
   Palomba F, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Raj A, 2019, EUROMICRO CONF PROC, P140, DOI 10.1109/SEAA.2019.00030
   Ravì D, 2017, IEEE J BIOMED HEALTH, V21, P4, DOI 10.1109/JBHI.2016.2636665
   Rech Jorg, 2004, KI, V18, P5
   Reid B., 2022, Software engineering user study recruitment on prolific: An experience report
   Sculley D, 2015, ADV NEUR IN, V28
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Shivashankar Karthik, 2022, 2022 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P60, DOI 10.1109/SEAA56994.2022.00018
   Shome Arumoy, 2022, P 1 INT C AI ENG SOF, P205
   Siebert J., 2020, Quality of Information and Communications Technology, P17
   Steidl M, 2023, J SYST SOFTWARE, V199, DOI 10.1016/j.jss.2023.111615
   Steiner PM, 2006, KOLNER Z SOZIOL SOZ, V58, P117, DOI 10.1007/s11575-006-0006-9
   Sun XB, 2017, ASIA PAC SOFWR ENG, P348, DOI 10.1109/APSEC.2017.41
   Tang YM, 2021, PROC INT CONF SOFTW, P238, DOI 10.1109/ICSE43902.2021.00033
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   White MD, 2006, LIBR TRENDS, V55, P22, DOI 10.1353/lib.2006.0053
   Zhang SA, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3285029
   Zhou J, 2018, HUM-COMPUT INT-SPRIN, P1, DOI 10.1007/978-3-319-90403-0
NR 64
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112151
DI 10.1016/j.jss.2024.112151
EA JUL 2024
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YS9Z2
UT WOS:001270607300001
OA hybrid
DA 2024-08-05
ER

PT J
AU Chen, JF
   Chen, JY
   Zhu, LL
   Mao, CY
   Bao, QH
   Huang, RB
AF Chen, Jinfu
   Chen, Jingyi
   Zhu, Lili
   Mao, Chengying
   Bao, Qihao
   Huang, Rubing
TI L′OP-ART: A linear-time adaptive random testing algorithm for
   object-oriented programs
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Object-oriented software testing; Random testing; Adaptive random
   testing; Testing effectiveness; Test case generation
ID GENERATION; SOFTWARE
AB Object-oriented (OO) programming offers useful and desirable characteristics in the resulting code. These OO characteristics, however, demand an effective testing method. Adaptive random testing (ART) serves as an effective testing technique where test cases are distributed uniformly according to a proper metric for difference (distance) between test cases. Recently proposed object and method invocation sequence similarity (OMISS) distance metric was incorporated into a new ART algorithm (OMISS-ART) for testing OO software. Unfortunately, OMISS-ART's high effectiveness in finding faults comes at significantly higher computational overheads. To alleviate the problem, we present in this paper a linear -time ART algorithm called L ' OP- ART (Linear -time Object-oriented Program testing by ART) based on a lightweight OMISS metric. L ' OP-ART designs specific data structures that store information about executed test cases, thus, the differences between candidates and executed test cases can be obtained with reduced overheads. Empirical studies show that L ' OP-ART detects failures more effectively than random testing (RT), and has comparable fault-detection effectiveness to other ART algorithms for OO testing (according to the F-measure, or the expected number of test case executions required to find a failure). Furthermore, the test case generation overhead of L ' OP-ART is low, close to that of RT.
C1 [Chen, Jinfu; Chen, Jingyi; Zhu, Lili; Bao, Qihao] Jiangsu Univ, Sch Comp Sci & Commun Engn, 301 Xuefu Rd, Zhenjiang 212013, Jiangsu, Peoples R China.
   [Chen, Jinfu; Chen, Jingyi; Zhu, Lili; Bao, Qihao] Jiangsu Univ, Jiangsu Key Lab Secur Technol Ind Cyberspace, 301 Xuefu Rd, Zhenjiang 212013, Jiangsu, Peoples R China.
   [Mao, Chengying] Jiangxi Univ Finance & Econ, Sch Software & IoT Engn, Nanchang 330013, Jiangxi, Peoples R China.
   [Huang, Rubing] Macau Univ Sci & Technol, Sch Comp Sci & Engn, Taipa 999078, Macao, Peoples R China.
C3 Jiangsu University; Jiangsu University; Jiangxi University of Finance &
   Economics; Macau University of Science & Technology
RP Chen, JF (corresponding author), Jiangsu Univ, Sch Comp Sci & Commun Engn, 301 Xuefu Rd, Zhenjiang 212013, Jiangsu, Peoples R China.
EM jinfuchen@ujs.edu.cn; 2112208004@stmail.ujs.edu.cn; lilizhu@ujs.edu.cn;
   maochy@yeah.net; qihaobao@ujs.edu.cn; rbhuang@must.edu.mo
OI Huang, Rubing/0000-0002-1769-6126; Chen, Jinfu/0000-0002-3124-5452
FU National Natural Science Foundation of China [62172194, U1836116,
   62172195, 61872167]; China Postdoctoral Science Foundation
   [2021M691310]; Postdoctoral Science Foundation of Jiangsu Province,
   China [2021K636C]; Leading-edge Technology Program of Jiangsu Natural
   Science Foundation [BK20202001]; Postgraduate Research & Practice
   Inno-vation Program of Jiangsu Province [KYCX23_3676]; Science and
   Technology Development Fund of Macau, Macau SAR [0021/2023/RIA1,
   0046/2021/A]; Faculty Research Grant of Macau University of Science and
   Technology [FRG-22-103-FIE]
FX This work was partly supported by the National Natural Science
   Foundation of China (NSFC grant numbers: 62172194, U1836116, 62172195,
   61872167) , the China Postdoctoral Science Foundation (Grant number:
   2021M691310) , the Postdoctoral Science Foundation of Jiangsu Province,
   China (Grant number: 2021K636C) , the Leading-edge Technology Program of
   Jiangsu Natural Science Foundation (Grant number: BK20202001) , the
   Postgraduate Research & Practice Inno-vation Program of Jiangsu Province
   (Grant number: KYCX23_3676) , the Science and Technology Development
   Fund of Macau, Macau SAR under Grant Nos. 0021/2023/RIA1 and
   0046/2021/A, and a Faculty Research Grant of Macau University of Science
   and Technology under Grant FRG-22-103-FIE.
CR Ackah-Arthur H, 2019, IEEE T RELIAB, V68, P1404, DOI 10.1109/TR.2019.2907577
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Arcuri A, 2008, INFORM SCIENCES, V178, P3075, DOI 10.1016/j.ins.2007.11.024
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Barus AC, 2016, IEEE T COMPUT, V65, P3509, DOI 10.1109/TC.2016.2547380
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Binder R. V., 1996, Software Testing, Verification and Reliability, V6, P125, DOI 10.1002/(SICI)1099-1689(199609/12)6:3/4<125::AID-STVR121>3.0.CO;2-X
   Binder R.V., 2000, AW OBJ TECHNOL S
   Ceccato M, 2012, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.2012.6227170
   Chan KP, 2006, P INT COMP SOFTW APP, P485
   Chan KP, 2006, INT J SOFTW ENG KNOW, V16, P553, DOI 10.1142/S0218194006002926
   Chen HY, 2013, IEEE T SOFTWARE ENG, V39, P1549, DOI 10.1109/TSE.2013.33
   Chen JF, 2019, Arxiv, DOI arXiv:1909.10879
   Chen JF, 2022, IEEE TETCI, V6, P969, DOI 10.1109/TETCI.2021.3122511
   Chen JF, 2020, IEEE ACCESS, V8, P52475, DOI 10.1109/ACCESS.2020.2977777
   Chen JF, 2018, J SYST SOFTWARE, V135, P107, DOI 10.1016/j.jss.2017.09.031
   Chen JF, 2017, IEEE T RELIAB, V66, P373, DOI 10.1109/TR.2016.2628759
   Chen JY, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-018-9704-7
   Chen TY, 2006, J SYST SOFTWARE, V79, P591, DOI 10.1016/j.jss.2005.05.029
   Chen TY, 2013, IEEE T RELIAB, V62, P226, DOI 10.1109/TR.2013.2240898
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2009, J SYST SOFTWARE, V82, P1419, DOI 10.1016/j.jss.2009.05.017
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chen TY, 2004, INFORM SOFTWARE TECH, V46, P1001, DOI 10.1016/j.infsof.2004.07.004
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P79
   Ciupa I., 2007, P 2007 INT S SOFTWAR, P84, DOI [10.1145/1273463.1273476, DOI 10.1145/1273463.1273476]
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Ciupa Ilinca., 2006, P 1 INT WORKSHOP RAN, P55
   CodeProject, 2023, Codeproject: For those who code
   d'Amorim M, 2006, IEEE INT CONF AUTOM, P59
   Engineering A.I.S., 2023, Poco c++ libraries
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Huang RB, 2022, SCI COMPUT PROGRAM, V215, DOI 10.1016/j.scico.2021.102743
   Huang RB, 2021, IEEE T SOFTWARE ENG, V47, P2052, DOI 10.1109/TSE.2019.2942921
   Hui ZW, 2021, IEEE T RELIAB, V70, P1397, DOI 10.1109/TR.2021.3106389
   Inkumsah Kobi, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P297, DOI 10.1109/ASE.2008.40
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Le Traon Y, 2000, IEEE T RELIAB, V49, P12, DOI 10.1109/24.855533
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Lin Y, 2009, IEEE INT CONF AUTOM, P221, DOI 10.1109/ASE.2009.13
   Liu H, 2011, SOFTWARE PRACT EXPER, V41, P1131, DOI 10.1002/spe.1067
   Mao CY, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-016-0087-0
   Mayer J., 2005, P 20 IEEEACM INT C A, P333, DOI DOI 10.1145/1101908
   Media S., 2023, Sourceforge-download, develop and publish free open source software
   Media S., 2023, Sourceforge
   Microsoft, 2023, Codeplex archive: open source project archive
   Omari M, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P54, DOI 10.1109/QRS.2019.00020
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pacheco C, 2007, COMP 22 ACM SIGPLAN, P815
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pacheco Carlos., 2008, International Symposium on Software Testing and Analysis (ISSTA), P87
   Shahbazi A, 2013, IEEE T SOFTWARE ENG, V39, P163, DOI 10.1109/TSE.2012.18
   Team C.D., 2023, Codeforge
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Zheng W., 2010, P IEEEACM INT C AUTO, P293, DOI DOI 10.1145/1858996
NR 56
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111970
DI 10.1016/j.jss.2024.111970
EA FEB 2024
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KL8X3
UT WOS:001180224200001
DA 2024-08-05
ER

PT J
AU Mastropaolo, A
   Ferrari, V
   Pascarella, L
   Bavota, G
AF Mastropaolo, Antonio
   Ferrari, Valentina
   Pascarella, Luca
   Bavota, Gabriele
TI Log statements generation via deep learning: Widening the support
   provided to developers
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Logging; DL for software engineering
ID ERROR
AB Logging assists in monitoring events that transpire during the execution of software. Previous research has highlighted the challenges confronted by developers when it comes to logging, including dilemmas such as where to log, what data to record, and which log level to employ (e.g., info, fatal). In this context, we introduced LANCE, an approach rooted in deep learning (DL) that has demonstrated the ability to correctly inject a log statement into Java methods in similar to 15% of cases. Nevertheless, LANCE grapples with two primary constraints: (i) it presumes that a method necessitates the inclusion of logging statements and; (ii) it allows the injection of only a single (new) log statement, even in situations where the injection of multiple log statements might be essential. To address these limitations, we present LEONID, a DL -based technique that can distinguish between methods that do and do not require the inclusion of log statements. Furthermore, LEONID supports the injection of multiple log statements within a given method when necessary, and it also enhances LANCE's proficiency in generating meaningful log messages through the combination of DL and Information Retrieval (IR).
C1 [Mastropaolo, Antonio; Ferrari, Valentina; Bavota, Gabriele] Univ Svizzera italiana, SEART Software Inst, Lugano, Switzerland.
   [Pascarella, Luca] Swiss Fed Inst Technol, Ctr Project Based Learning, Zurich, Switzerland.
C3 Universita della Svizzera Italiana; Swiss Federal Institutes of
   Technology Domain; ETH Zurich
RP Mastropaolo, A (corresponding author), Univ Svizzera italiana, SEART Software Inst, Lugano, Switzerland.
EM antonio.mastropaolo@usi.ch; valentina.ferrari@usi.ch;
   lpascarella@ethz.ch; gabriele.bavota@usi.ch
OI Mastropaolo, Antonio/0000-0002-7965-7712
FU European Research Council (ERC) under the European Union [851720]
FX This project has received funding from the European Research Council
   (ERC) under the European Union's Horizon 2020 research and innovation
   programme (grant agreement No. 851720) .
CR Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   [Anonymous], 1966, SOVIET PHYS DOKLADY
   [Anonymous], 2022, Log4J
   Banerjee S., 2005, P ACL WORKSHOP INTRI, P65, DOI DOI 10.3115/1626355.1626389
   Cândido J, 2021, IEEE WORK CONF MIN S, P143, DOI 10.1109/MSR52588.2021.00027
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Choetkiertikul M, 2018, PROC IEEE ACM INT C, P244, DOI 10.1145/3183440.3194952
   Ciniselli M, 2021, IEEE WORK CONF MIN S, P108, DOI 10.1109/MSR52588.2021.00024
   Dabic O, 2021, IEEE WORK CONF MIN S, P560, DOI 10.1109/MSR52588.2021.00074
   Ding ZS, 2022, EUR CON SFTWR MTNCE, P349, DOI 10.1109/SANER53432.2022.00051
   Freitag M, 2017, Arxiv, DOI arXiv:1702.01806
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Grissom R. J., 2005, Effect Sizes for Research: A Broad Practical Approach, DOI DOI 10.4324/9781410612915
   Gurumdimma N, 2016, SYM REL DIST SYST, P51, DOI [10.1109/SRDS.2016.017, 10.1109/SRDS.2016.15]
   Hancock John M, 2004, Dictionary of Bioinformatics and Computational Biology
   HOLM S, 1979, SCAND J STAT, V6, P65
   Howard J, 2018, Arxiv, DOI [arXiv:1801.06146, DOI 10.48550/ARXIV.1801.06146]
   Java, 2022, Java class libraries
   JavaParser, 2022, ABOUT US
   Jia ZY, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P61, DOI 10.1109/SANER.2018.8330197
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kudo T, 2018, Arxiv, DOI [arXiv:1808.06226, 10.48550/arXiv.1808.06226]
   Le SY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P389, DOI 10.1109/ICWS.2017.135
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li ZH, 2021, PROC INT CONF SOFTW, P1461, DOI 10.1109/ICSE43902.2021.00131
   Li ZH, 2020, IEEE INT CONF AUTOM, P361, DOI 10.1145/3324884.3416636
   Li ZH, 2020, PROC INT CONF SOFTW, P198, DOI 10.1145/3377812.3381385
   Li ZH, 2019, PROC INT CONF SOFTW, P152, DOI 10.1109/ICSE.2019.00032
   Lin C.-Y., 2004, TEXT SUMMARIZATION B, P74, DOI DOI 10.2307/3105454
   Liu ZX, 2021, IEEE T SOFTWARE ENG, V47, P2012, DOI 10.1109/TSE.2019.2941943
   Mastropaolo A., 2023, Replication package
   Mastropaolo A, 2022, PROC INT CONF SOFTW, P2279, DOI 10.1145/3510003.3511561
   Mastropaolo A, 2021, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME52107.2021.00021
   McNemar Q, 1947, PSYCHOMETRIKA, V12, P153, DOI 10.1007/BF02295996
   Mizouchi T, 2019, INT C PROGRAM COMPRE, P135, DOI 10.1109/ICPC.2019.00029
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Patel K, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10136-3
   QOS.ch, Simple logging facade for java (SLF4J)
   QOS.ch, 2022, ABOUT US
   Raffel C, 2020, J MACH LEARN RES, V21
   Ren S, 2020, Arxiv, DOI [arXiv:2009.10297, 10.48550/arXiv.2009.10297]
   SRCML, 2022, ABOUT US
   Thunes C., Thunes. n.d. javalang
   Tufano M, 2022, 3RD ACM/IEEE INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2022), P54, DOI 10.1145/3524481.3527220
   Tufano M, 2019, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2019.00046
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano R, 2022, PROC INT CONF SOFTW, P2291, DOI 10.1145/3510003.3510621
   Tufano R, 2021, PROC INT CONF SOFTW, P163, DOI 10.1109/ICSE43902.2021.00027
   Vaswani A, 2017, ADV NEUR IN, V30
   Watson C, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3485275
   Watson C, 2020, PROC INT CONF SOFTW, P1398, DOI 10.1145/3377811.3380429
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Yao KD, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P127, DOI 10.1145/3184407.3184416
   Yu H, 2022, PROC INT CONF SOFTW, P163, DOI 10.1145/3510003.3510149
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110360
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Zeng Y, 2019, EMPIR SOFTW ENG, V24, P3394, DOI 10.1007/s10664-019-09687-9
   Zhi C, 2019, PROC IEEE INT CONF S, P459, DOI 10.1109/ICSME.2019.00079
   Zhou R, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P577, DOI [10.1109/saner48275.2020.9054831, 10.1109/SANER48275.2020.9054831]
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 65
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111947
DI 10.1016/j.jss.2023.111947
EA JAN 2024
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GR5S5
UT WOS:001154418900001
OA hybrid, Green Published, Green Submitted
DA 2024-08-05
ER

PT J
AU Rajan, SS
   Soremekun, E
   Le Traon, Y
   Chattopadhyay, S
AF Rajan, Sai Sathiesh
   Soremekun, Ezekiel
   Le Traon, Yves
   Chattopadhyay, Sudipta
TI Distribution-aware fairness test generation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software testing; Fairness testing; Computer vision
AB Ensuring that all classes of objects are detected with equal accuracy is essential in AI systems. For instance, being unable to identify any one class of objects could have fatal consequences in autonomous driving systems. Hence, ensuring the reliability of image recognition systems is crucial. This work addresses how to validate group fairness in image recognition software . We propose a distribution-aware fairness testing approach (called DistroFair ) that systematically exposes class-level fairness violations in image classifiers via a synergistic combination of out-of-distribution (OOD) testing and semantic-preserving image mutation . DistroFair automatically learns the distribution (e.g., number/orientation) of objects in a set of images. Then it systematically mutates objects in the images to become OOD using three semantic-preserving image mutations - object deletion , object insertion and object rotation . We evaluate DistroFair using two well-known datasets (CityScapes and MS-COCO) and three major, commercial image recognition software (namely, Amazon Rekognition, Google Cloud Vision and Azure Computer Vision). Results show that about 21% of images generated by DistroFair reveal class-level fairness violations using either ground truth or metamorphic oracles. DistroFair is up to 2.3 x more effective than two main baselines , i.e., (a) an approach which focuses on generating images only within the distribution (ID) and (b) fairness analysis using only the original image dataset. We further observed that DistroFair is efficient, it generates 460 images per hour, on average. Finally, we evaluate the semantic validity of our approach via a user study with 81 participants, using 30 real images and 30 corresponding mutated images generated by DistroFair . We found that images generated by DistroFair are 80% as realistic as real-world images.
C1 [Rajan, Sai Sathiesh; Chattopadhyay, Sudipta] Singapore Univ Technol & Design, Singapore, Singapore.
   [Soremekun, Ezekiel] Royal Holloway Univ London, Egham, England.
   [Le Traon, Yves] Univ Luxembourg, SnT, Esch Sur Alzette, Luxembourg.
C3 Singapore University of Technology & Design; University of London; Royal
   Holloway University London; University of Luxembourg
RP Rajan, SS (corresponding author), Singapore Univ Technol & Design, Singapore, Singapore.
EM sai_rajan@mymail.sutd.edu.sg; ezekiel.soremekun@rhul.ac.uk;
   yves.letraon@uni.lu; sudipta_chattopadhyay@sutd.edu.sg
RI LE TRAON, Yves/T-2911-2019; Soremekun, Ezekiel/ADE-1138-2022
OI Soremekun, Ezekiel/0000-0002-0039-8106; Chattopadhyay,
   Sudipta/0000-0002-4843-5391; Rajan, Sai Sathiesh/0000-0002-4491-2605
CR Ackerman S., 2020, ENG DEPENDABLE SECUR, P67
   Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Agrawal A, 2018, PROC CVPR IEEE, P4971, DOI 10.1109/CVPR.2018.00522
   Amazon, 2023, Amazon Rekognition API
   Berend D, 2021, PROC IEEE ACM INT C, P96, DOI 10.1109/ICSE-Companion52605.2021.00045
   Berend D, 2020, IEEE INT CONF AUTOM, P1041, DOI 10.1145/3324884.3416609
   Bertalmio M, 2000, COMP GRAPH, P417, DOI 10.1145/344779.344972
   Brandao M, 2019, Arxiv, DOI arXiv:1906.10490
   Chen ZP, 2024, Arxiv, DOI arXiv:2207.10223
   Cordts M, 2016, PROC CVPR IEEE, P3213, DOI 10.1109/CVPR.2016.350
   De Vries T., 2019, P IEEE CVF C COMP VI, P52
   Denton E., 2019, arXiv
   Fan SJ, 2014, PROC CVPR IEEE, P4201, DOI 10.1109/CVPR.2014.535
   Gadde R, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P13930, DOI 10.1109/ICCV48922.2021.01369
   Gal Y., 2016, PhD Thesis
   Google, 2023, Google cloud vision API
   Goyal Y, 2017, PROC CVPR IEEE, P6325, DOI 10.1109/CVPR.2017.670
   Guehairia O, 2022, INFORM SCIENCES, V609, P1309, DOI 10.1016/j.ins.2022.07.135
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hort Max, 2022, ARXIV
   Huang W, 2023, Arxiv, DOI arXiv:2205.08589
   Jiang CM, 2022, LECT NOTES COMPUT SC, V13670, P158, DOI 10.1007/978-3-031-20080-9_10
   Jin X, 2022, IEEE T INTELL TRANSP, V23, P25226, DOI 10.1109/TITS.2022.3207152
   Jun Yu, 2020, Computer Vision - ECCV 2020 Workshops. Proceedings. Lecture Notes in Computer Science (LNCS 12540), P492, DOI 10.1007/978-3-030-65414-6_34
   Kastryulin S, 2022, Arxiv, DOI [arXiv:2208.14818, 10.48550/ARXIV.2208.14818, DOI 10.2139/SSRN.4206741]
   Kim B, 2019, PROC CVPR IEEE, P9004, DOI 10.1109/CVPR.2019.00922
   Kirillov A, 2019, PROC CVPR IEEE, P9396, DOI 10.1109/CVPR.2019.00963
   Li CJ, 2021, PATTERN RECOGN LETT, V145, P127, DOI 10.1016/j.patrec.2021.02.003
   Lin CH, 2018, PROC CVPR IEEE, P9455, DOI 10.1109/CVPR.2018.00985
   Lin TY, 2014, LECT NOTES COMPUT SC, V8693, P740, DOI 10.1007/978-3-319-10602-1_48
   Ma KD, 2018, IEEE T IMAGE PROCESS, V27, P1202, DOI 10.1109/TIP.2017.2774045
   MacQueen J. B., 1967, Some Methods for Classification and Analysis of Multivariate Observations, P281, DOI DOI 10.1007/S11665-016-2173-6
   Michaelis C, 2020, Arxiv, DOI [arXiv:1907.07484, 10.48550/arXiv.1907.07484, DOI 10.48550/ARXIV.1907.07484]
   Microsoft, 2023, Azure computer vision API
   Morales D.P., 2021, INT C INT SCI, P183
   MTurk A., 2023, Amazon mechanical turk
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Rose A., 2010, Are face-detection cameras racist?
   scikit-learn, 2023, scikit-learn: Machine learning in Python
   Soremekun E., 2022, arXiv
   Soremekun E, 2022, IEEE T SOFTWARE ENG, V48, P5188, DOI 10.1109/TSE.2022.3141758
   Sun ZY, 2020, PROC INT CONF SOFTW, P974, DOI 10.1145/3377811.3380420
   Suvorov R, 2022, IEEE WINT CONF APPL, P3172, DOI 10.1109/WACV51458.2022.00323
   Teney D., 2020, ADV NEURAL INFORM PR
   Tian YC, 2020, PROC INT CONF SOFTW, P1122, DOI 10.1145/3377811.3380400
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tizpaz-Niari S, 2022, PROC INT CONF SOFTW, P909, DOI 10.1145/3510003.3510202
   Treml M., 2016, SPEEDING SEMANTIC SE, P1
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Verma S, 2018, 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE FAIRNESS (FAIRWARE 2018), P1, DOI [10.1145/3194770.3194776, 10.23919/FAIRWARE.2018.8452913]
   Vernekar S., 2019, 33 C NEUR INF PROC S
   Wang JY, 2023, AAAI CONF ARTIF INTE, P2555
   Wang S, 2020, IEEE INT CONF AUTOM, P1053, DOI 10.1145/3324884.3416584
   Wang TL, 2019, IEEE I CONF COMP VIS, P5309, DOI 10.1109/ICCV.2019.00541
   Wang Z., 2020, P IEEE CVF C COMP VI, P8916, DOI [10.1109/CVPR42600.2020.00894, DOI 10.1109/CVPR42600.2020.00894]
   Woodlief T, 2022, PROC INT CONF SOFTW, P1958, DOI 10.1145/3510003.3510212
   Wotawa F, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2021), P121, DOI 10.1109/AST52587.2021.00023
   Wu J, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3379504
   Wu Y., 2019, Detectron2
   Xiong YW, 2019, PROC CVPR IEEE, P8810, DOI 10.1109/CVPR.2019.00902
   Yang Z, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1540, DOI 10.1145/3468264.3473117
   Ye NY, 2022, PROC CVPR IEEE, P7937, DOI 10.1109/CVPR52688.2022.00779
   Yu BX, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P467, DOI 10.1145/3533767.3534389
   Zhang LF, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P103, DOI 10.1145/3460319.3464820
   Zhang PX, 2021, Arxiv, DOI arXiv:2111.08856
   Zhang PX, 2022, IEEE T SOFTWARE ENG, V48, P3593, DOI 10.1109/TSE.2021.3101478
   Zhang PX, 2020, PROC INT CONF SOFTW, P949, DOI 10.1145/3377811.3380331
   Zhao J., 2017, Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, P2979, DOI DOI 10.18653/V1/D17-1323
   Zhou LJ, 2020, ASIA PAC SOFWR ENG, P266, DOI [10.1109/apsec51365.2020.00035, 10.1109/APSEC51365.2020.00035]
NR 69
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
AR 112090
DI 10.1016/j.jss.2024.112090
EA MAY 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UF3Q6
UT WOS:001246610400001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Koziolek, H
   Burger, A
   Peedikayil, AP
AF Koziolek, Heiko
   Burger, Andreas
   Peedikayil, Abdulla Puthan
TI Fast state transfer for updates and live migration of industrial
   controller runtimes in container orchestration systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software architecture; Control systems; Software containers; Dynamic
   software updates; Docker; Kubernetes
ID SOFTWARE; IMPLEMENTATION
AB Many industrial processes (e.g., steel, fertilizer, paper production) utilize programmable logic controllers or distributed control systems, which cyclically execute control applications. Dynamic updates of such applications at runtime are desirable for optimizing the production while avoiding production stops. However, such updates are challenging since they require fast switching to an updated instance and executing an internal state transfer within the control cycle times. Existing dynamic update approaches for industrial applications can for example not update controller runtimes or operating systems, since they do not utilize modern container virtualization technologies. Furthermore, existing state transfer methods for container orchestration systems do not support fast cyclic applications. We propose a novel state transfer method for industrial control applications deployed as containerized Kubernetes microservices on server hosts or resource-rich industrial personal computers. The method enables dynamic updates and live migration of applications to others hosts without interrupting the underlying production facilities, which avoids costly downtimes. We have implemented our method as a Kubernetes extension and found that it can transfer large application states (i.e. 100.000 variables) via OPC UA in less than 42 ms across different hosts, which can fit into the available cycle slack time, therefore enabling a wide range of bumpless updates at runtime.
C1 [Koziolek, Heiko; Burger, Andreas] ABB Res, Wallstadter Str 59, D-68526 Ladenburg, Germany.
   [Peedikayil, Abdulla Puthan] ABB Res, ITPL Main Rd, Bangalore 560048, India.
RP Koziolek, H (corresponding author), ABB Res, Wallstadter Str 59, D-68526 Ladenburg, Germany.
EM heiko.koziolek@de.abb.com
OI Koziolek, Heiko/0000-0002-8805-6206
CR Ahmed BH, 2020, IET SOFTW, V14, P468, DOI 10.1049/iet-sen.2019.0201
   Ajmani S, 2006, LECT NOTES COMPUT SC, V4067, P452
   Baresi L, 2017, IEEE T SOFTWARE ENG, V43, P340, DOI 10.1109/TSE.2016.2592913
   Baumann A, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK: 2005 UNENIX ANNUAL TECHNICAL CONFERENCE, P279
   Burns Brendan, 2019, Kubernetes: up and running: dive into the future of infrastructure
   Chen HB, 2007, PROC INT CONF SOFTW, P271
   Clinque M, 2022, FUTURE GENER COMP SY, V129, P315, DOI 10.1016/j.future.2021.12.002
   Dobies J., 2020, Kubernetes Operators: Automating the Container Orchestration Platform
   Finn Norman, 2018, IEEE Communications Standards Magazine, V2, P22, DOI 10.1109/MCOMSTD.2018.1700076
   Forbes H., 2018, The end of industrial automation (as we know it)
   Foundation O., 2017, OPC unified architecture: The interoperability standard for industrial automation
   Giuffrida C., 2009, P 2 INT WORKSHOP HOT, P1
   Goldschmidt T, 2018, J SYST ARCHITECT, V84, P28, DOI 10.1016/j.sysarc.2018.03.002
   Gupta D, 1996, IEEE T SOFTWARE ENG, V22, P120, DOI 10.1109/32.485222
   Hicks M, 2005, ACM T PROGR LANG SYS, V27, P1049, DOI [10.1145/1108970.1108971, 10.1145/381694.378798]
   Hollender Martin, 2010, Collaborative Process Automation Systems
   John KH, 2010, IEC 61131-3: PROGRAMMING INDUSTRIAL AUTOMATION SYSTEMS, SECOND EDITION, P1, DOI 10.1007/978-3-642-12015-2
   Koziolek H, 2021, LECT NOTES COMPUT SC, V12857, P3, DOI 10.1007/978-3-030-86044-8_1
   Koziolek H, 2020, J SYST SOFTWARE, V166, DOI 10.1016/j.jss.2020.110575
   Koziolek L, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P131, DOI 10.1109/ICSE-SEIP.2019.00022
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Krause H., 2007, 6 EUROSIM C MODELLIN
   Levine W.S., 2018, The Control Handbook (three volume set)
   Ma L, 2019, IEEE T MOBILE COMPUT, V18, P2020, DOI 10.1109/TMC.2018.2871842
   Machen A, 2018, IEEE WIREL COMMUN, V25, P140, DOI 10.1109/MWC.2017.1700011
   Mahnke W, 2009, OPC Unified Architecture
   Makris Kristis., 2007, Proceedings of the 2nd ACM SIGOPS/EuroSys European Conference on Computer Systems 2007, P327
   Miedes E., 2012, A survey about dynamic software updating, V46022
   Moga A., 2016, P 31 ANN ACM S APPL, P1838
   Mugarza I., 2021, 2021 IEEE INT WORKSH, P1
   Netto HV, 2017, J SYST ARCHITECT, V73, P53, DOI 10.1016/j.sysarc.2016.12.007
   Oh S, 2018, I C INF COMM TECH CO, P25, DOI 10.1109/ICTC.2018.8539562
   Patrick L.M., 2007, ABB Rev., P15
   Plaza I, 2006, MICROPROCESS MICROSY, V30, P497, DOI 10.1016/j.micpro.2006.06.001
   Prenzel L, 2017, IFAC PAPERSONLINE, V50, P12416, DOI 10.1016/j.ifacol.2017.08.2429
   Previtali S.C., 2007, P 1 WORKSHOP MIDDLEW, P49
   Qiu YQ, 2017, P INT COMP SOFTW APP, P31, DOI 10.1109/COMPSAC.2017.163
   Seifzadeh H, 2013, J SOFTW-EVOL PROC, V25, P535, DOI 10.1002/smr.1556
   Sollfrank M, 2021, IEEE T IND INFORM, V17, P3566, DOI 10.1109/TII.2020.3022843
   Stoyle G, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1255450.1255455
   Subramanian S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P1, DOI 10.1145/1542476.1542478
   Vayghan LA, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P176, DOI 10.1109/QRS.2019.00034
   Venkatesh RS, 2019, MEMSYS 2019: PROCEEDINGS OF THE INTERNATIONAL SYMPOSIUM ON MEMORY SYSTEMS, P53, DOI 10.1145/3357526.3357542
   Wahler M., 2011, Proceedings 2011 27th IEEE International Conference on Data Engineering Workshops (ICDEW 2011), P174, DOI 10.1109/ICDEW.2011.5767631
   Wahler M., 2014, P 2014 IEEE EMERGING, P1
   Wahler Michael, 2009, P 2 INT WORKSHOP HOT, P1
   Yu CY, 2015, ACSR ADV COMPUT, V31, P623
NR 47
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 112004
DI 10.1016/j.jss.2024.112004
EA MAR 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NS4U8
UT WOS:001202438400001
DA 2024-08-05
ER

PT J
AU Keshavarz, H
   Rodríguez-Pérez, G
AF Keshavarz, Hossein
   Rodriguez-Perez, Gema
TI JITGNN: A deep graph neural network framework for Just-In-Time bug
   prediction
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Just-In-Time bug prediction; Software engineering; Graph neural network;
   Deep learning
ID SOFTWARE; IMPACT; FAULTS
AB Just -In -Time (JIT) bug prediction is the problem of predicting software failure immediately after a change is submitted to the code base. JIT bug prediction is often preferred to other types of bug prediction (subsystem, module, file, class, or function -level) because changes are associated with one developer and the predictions can be applied when the design decisions are fresh in the developer's mind. Many approaches have been proposed to predict correctly whether a software change is bug -inducing. These approaches mainly rely on change metrics such as the size, the number of modified files, and the developer's experience. Although there has been extensive work on employing deep learning models for other forms of bug prediction, there are few deep models for JIT bug prediction. Furthermore, none of the existing JIT models that use the changed source code consider the graph structure of source codes. In this paper, we propose a JIT model that incorporates both the content and metadata of changes leveraging the graph structure of programs. We designed and built JITGNN, a deep graph neural network (GNN) framework for JIT bug prediction. JITGNN uses the abstract syntax trees (ASTs) of changed programs. We evaluate the performance of JITGNN on two datasets and compare it to a baseline and state-of-the-art JIT model. We hypothesize that by including the graph structure of source codes in the JIT bug prediction process, we can improve the performance of the JIT models. Our study, however, shows that JITGNN achieves the same AUC as the state-of-the-art model (JITLine), and they both have the same discriminatory power.
C1 [Keshavarz, Hossein] Univ Waterloo, Waterloo, ON, Canada.
   [Rodriguez-Perez, Gema] Univ British Columbia, Kelowna, BC, Canada.
C3 University of Waterloo; University of British Columbia
RP Rodríguez-Pérez, G (corresponding author), Univ British Columbia, Kelowna, BC, Canada.
EM hossein.keshavarz@uwaterloo.ca; gema.rodriguezperez@ubc.ca
OI Rodriguez, Gema/0000-0002-0062-8418
CR Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Alon U., 2018, arXiv
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Phan AV, 2017, PROC INT C TOOLS ART, P45, DOI 10.1109/ICTAI.2017.00019
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Brockschmidt M, 2019, 25TH AMERICAS CONFERENCE ON INFORMATION SYSTEMS (AMCIS 2019)
   Bryan J, 2023, PLOS ONE, V18, DOI 10.1371/journal.pone.0284077
   Neto EC, 2019, INT SYMP EMP SOFTWAR, P94
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Chen DY, 2019, IEEE ACCESS, V7, P184832, DOI 10.1109/ACCESS.2019.2961129
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Cho K., 2014, EMNLP, DOI 10.3115/v1/w14-4012
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Dizaji KG, 2017, IEEE I CONF COMP VIS, P5747, DOI 10.1109/ICCV.2017.612
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Fukushima T., 2014, P 11 WORK C MIN SOFT, P172, DOI DOI 10.1145/2597073.2597075
   Glorot X., 2010, P 13 INT C ART INT S, P249
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Guo XF, 2017, LECT NOTES COMPUT SC, V10635, P373, DOI 10.1007/978-3-319-70096-0_39
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Keshavarz H, 2022, Arxiv, DOI arXiv:2203.00101
   Dam HK, 2018, Arxiv, DOI arXiv:1802.00921
   Khoshgoftaar TM, 2003, SOFTWARE QUAL J, V11, P19, DOI 10.1023/A:1023632027907
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kingma D. P., 2014, arXiv
   Kipf T.N., 2017, INT C LEARN REPR, P1
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li JY, 2017, Arxiv, DOI arXiv:1709.03741
   Li Y., 2016, ICLR, P1
   liwerski J., 2005, ACM sigsoft software engineering notes, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147]
   Ma GX, 2021, DATA MIN KNOWL DISC, V35, P688, DOI 10.1007/s10618-020-00733-5
   Manjula C, 2019, CLUSTER COMPUT, V22, pS9847, DOI 10.1007/s10586-018-1696-z
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nadim M, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00326-0
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nair A., 2020, P 14 ACM IEEE INT S, DOI DOI 10.1145/3382494.3410675
   Nair V., 2010, ICML, P807
   Nikolentzos G, 2017, AAAI CONF ARTIF INTE, P2429
   Ostrand T.J., 2004, P 2004 ACM SIGSOFT I, V29, P86, DOI [DOI 10.1145/1007512.1007524, DOI 10.1145/1013886.1007524]
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pan K, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P31
   Pornprasit C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P407, DOI 10.1109/ASE51524.2021.9678763
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Qiao L, 2020, NEUROCOMPUTING, V385, P100, DOI 10.1016/j.neucom.2019.11.067
   Qiao L, 2019, PLOS ONE, V14, DOI 10.1371/journal.pone.0211359
   Qin HW, 2016, PROC CVPR IEEE, P3456, DOI 10.1109/CVPR.2016.376
   Rathore S.S., 2012, 2012 CSI 6 INT C SOF, P1
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Rodríguez-Pérez G, 2022, IEEE T SOFTWARE ENG, V48, P1400, DOI 10.1109/TSE.2020.3021380
   Rodríguez-Pérez G, 2020, EMPIR SOFTW ENG, V25, P1294, DOI 10.1007/s10664-019-09781-y
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P1
   Socher R, 2013, P 2013 C EMP METH NA, P935
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Tompson J, 2014, ADV NEUR IN, V27
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wills P, 2020, PLOS ONE, V15, DOI 10.1371/journal.pone.0228728
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yu JJ, 2022, J SYST SOFTWARE, V187, DOI 10.1016/j.jss.2022.111219
   Zhou MH, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P271, DOI 10.1145/1985793.1985831
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 81
TC 1
Z9 1
U1 4
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111984
DI 10.1016/j.jss.2024.111984
EA FEB 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KU0U1
UT WOS:001182367600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Hajiabadi, H
   Gerking, C
   Hilbert, L
   Koziolek, A
AF Hajiabadi, Hamideh
   Gerking, Christopher
   Hilbert, Lennart
   Koziolek, Anne
TI A data-driven active learning approach to reusing ML solutions in
   scientific applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Reuse of machine learning solutions; Data-driven approaches; Interactive
   microscopy image segmentation
ID IMAGE SEGMENTATION EVALUATION
AB Artificial intelligence can revolutionize scientific projects, but scientists face challenges in reusing, integrating, and deploying cost-effective and high-quality machine learning solutions. Determining suitable algorithms and parameters is difficult, especially for non -programmer scientists. Some algorithms, like deep learningbased methods, offer flexibility but require extensive training on annotated data. This poses a hurdle in labor-intensive tasks like biological image segmentation that relies on expert annotations. In this paper, we present a data -driven framework designed to assist scientists in selecting, reusing, and training machine learning solutions for microscopy image segmentation. The framework is based on establishing a mapping between object morphology features and the optimal segmentation algorithms and settings for individual objects. This mapping is iteratively refined through a combination of unsupervised learning and active learning iterations. To expedite convergence, objects are initially clustered based on their morphology. In each active learning iteration, the most informative and uncertain samples are selected and queried within a specific cluster. Through a biological case study, we demonstrate that our method enables the selection and training of segmentation algorithms specific to object types. Additionally, the selective requests for user input significantly reduce the number of user interactions required for this task.
C1 [Hajiabadi, Hamideh] Helmholtz Informat & Data Sci Sch Hlth HIDSS4Healt, Coll Environm Sci & Engn, Karlsruhe, Germany.
   [Hilbert, Lennart] Zool Inst, Inst Biol & Chem Syst IBCS, Karlsruhe Inst Technol, Karlsruhe, Germany.
   [Gerking, Christopher; Koziolek, Anne] Inst Informat Secur & Dependabil KASTEL, Karlsruhe Inst Technol, Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology; Helmholtz
   Association; Karlsruhe Institute of Technology
RP Hajiabadi, H (corresponding author), Helmholtz Informat & Data Sci Sch Hlth HIDSS4Healt, Coll Environm Sci & Engn, Karlsruhe, Germany.
EM hamideh.hajiabadi@kit.edu; christopher.gerking@kit.edu;
   lennart.hilbert@kit.edu; koziolek@kit.edu
OI Hajiabadi, Hamideh/0000-0002-5793-4563
FU Helmholtz Association (HGF) under the joint research school
   "HIDSS4Health - Helmholtz Information and Data Science School for
   Health; Helmholtz program Natural Artificial and Cognitive Information
   Processing (NACIP); HIDSS4Health; Priority Program Molecular Mechanisms
   of Functional Phase Separation of the German Science Foundation
   [DFG-SPP2191]; Engineering Secure Systems" of the HGF; KASTEL Security
   Research Labs
FX This work is supported by the Helmholtz Association (HGF) under the
   joint research school "HIDSS4Health - Helmholtz Information and Data
   Science School for Health"and the Helmholtz program Natural Artificial
   and Cognitive Information Processing (NACIP) . HH was partially
   supported by funding from HIDSS4Health. LH was supported by the Priority
   Program Molecular Mechanisms of Functional Phase Separation of the
   German Science Foundation (DFG-SPP2191) . CG and AK were supported by
   funding from the topic "Engineering Secure Systems" of the HGF and by
   KASTEL Security Research Labs. We thank Irina Mamontova, Roshan Prizak,
   Agnieszka Pancholi and Saeed Nasseri and his research team for their
   help in conducting the case study. We also express our gratitude to Nils
   Friederich for providing feedback on our manuscript.
CR Acuna D, 2019, PROC CVPR IEEE, P11067, DOI 10.1109/CVPR.2019.01133
   Al-Kofahi Y, 2018, BMC BIOINFORMATICS, V19, DOI 10.1186/s12859-018-2375-z
   [Anonymous], 2010, PROC CVPR IEEE, DOI DOI 10.1109/CVPR.2010.5540073
   Apthorpe N., 2016, Advances in Neural Information Processing Systems, page, P3270
   Arganda-Carreras I, 2017, BIOINFORMATICS, V33, P2424, DOI 10.1093/bioinformatics/btx180
   Bai X, 2009, INT J COMPUT VISION, V82, P113, DOI 10.1007/s11263-008-0191-z
   Berg S, 2019, NAT METHODS, V16, P1226, DOI 10.1038/s41592-019-0582-9
   Boykov YY, 2001, EIGHTH IEEE INTERNATIONAL CONFERENCE ON COMPUTER VISION, VOL I, PROCEEDINGS, P105, DOI 10.1109/ICCV.2001.937505
   Cagnoni S, 1999, IMAGE VISION COMPUT, V17, P881, DOI 10.1016/S0262-8856(98)00166-8
   Cantaloube S, 2012, BIOESSAYS, V34, P509, DOI 10.1002/bies.201100188
   Carpenter AE, 2006, GENOME BIOL, V7, DOI 10.1186/gb-2006-7-10-r100
   Caselles V, 1997, INT J COMPUT VISION, V22, P61, DOI 10.1023/A:1007979827043
   Castrejón L, 2017, PROC CVPR IEEE, P4485, DOI 10.1109/CVPR.2017.477
   Chen J., 2018, ALLEN CELL STRUCTURE, DOI DOI 10.1101/491035
   Chen TL, 2023, Arxiv, DOI arXiv:2305.05803
   Chen YY, 2018, PHOTOGRAMM ENG REM S, V84, P629, DOI 10.14358/PERS.84.10.629
   Chibane J, 2022, LECT NOTES COMPUT SC, V13691, P681, DOI 10.1007/978-3-031-19821-2_39
   Csiszar I., 2004, Foundations and Trends in Communications and Information Theory, V1, P1, DOI 10.1561/0100000004
   Dey N, 2018, SYMMETRY-BASEL, V10, DOI 10.3390/sym10020051
   Dougherty E., 2018, Mathematical morphology in image processing, V1
   Guerrero-Peña FA, 2018, IEEE IMAGE PROC, P2451, DOI 10.1109/ICIP.2018.8451187
   Hajiabadi Hamideh, 2022, 2022 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P5, DOI 10.1109/SEAA56994.2022.00011
   Hajiabadi H., 2022, Zenodo, DOI [10.5281/zenodo.6504500, DOI 10.5281/ZENODO.6504500]
   Hajiabadi Hamideh, 2022, Zenodo, DOI 10.5281/ZENODO.7682591
   Hesamian MH, 2019, J DIGIT IMAGING, V32, P582, DOI 10.1007/s10278-019-00227-x
   Hilbert Lennart, 2021, Zenodo, DOI 10.5281/ZENODO.4973062
   Ivashkevich AN, 2011, MUTAT RES-FUND MOL M, V711, P49, DOI 10.1016/j.mrfmmm.2010.12.015
   Jahanifar M., 2019, MICCAI 2019 COMPUTAT
   Jakhar D, 2020, CLIN EXP DERMATOL, V45, P131, DOI 10.1111/ced.14029
   Kodinariya TM., 2013, INT J ADV RES COMPUT, V1, P90, DOI DOI 10.18576/AMIS/100428
   Koohbanani NA, 2020, MED IMAGE ANAL, V65, DOI 10.1016/j.media.2020.101771
   Kwatra V, 2003, ACM T GRAPHIC, V22, P277, DOI 10.1145/882262.882264
   LI CH, 1993, PATTERN RECOGN, V26, P617, DOI 10.1016/0031-3203(93)90115-D
   Li G, 2008, J MICROSC-OXFORD, V231, P47, DOI 10.1111/j.1365-2818.2008.02016.x
   Likas A, 2003, PATTERN RECOGN, V36, P451, DOI 10.1016/S0031-3203(02)00060-2
   Ling H, 2019, PROC CVPR IEEE, P5252, DOI 10.1109/CVPR.2019.00540
   Maninis KK, 2018, PROC CVPR IEEE, P616, DOI 10.1109/CVPR.2018.00071
   Matula P, 2010, PROC SPIE, V7626, DOI 10.1117/12.844441
   McQuin C, 2018, PLOS BIOL, V16, DOI 10.1371/journal.pbio.2005970
   Nishimura K, 2021, MED IMAGE ANAL, V73, DOI 10.1016/j.media.2021.102182
   Osterwald S, 2015, J CELL SCI, V128, P1887, DOI 10.1242/jcs.148296
   OTSU N, 1979, IEEE T SYST MAN CYB, V9, P62, DOI 10.1109/TSMC.1979.4310076
   Pancholi A, 2021, MOL SYST BIOL, V17, DOI 10.15252/msb.202110272
   Papadopoulos DP, 2017, IEEE I CONF COMP VIS, pCP38, DOI 10.1109/ICCV.2017.528
   Pont-Tuset J, 2016, IEEE T PATTERN ANAL, V38, DOI [10.1109/TPAMI.2015.2481406, 10.1109/TPAMI.2016.2537320]
   PREWITT JMS, 1966, ANN NY ACAD SCI, V128, P1035
   Ratner A, 2020, VLDB J, V29, P709, DOI [10.1007/s00778-019-00552-1, 10.14778/3157794.3157797]
   SAHOO PK, 1988, COMPUT VISION GRAPH, V41, P233, DOI 10.1016/0734-189X(88)90022-9
   Salem N., 2016, J BIOMED ENG MED IMA, V3, P15, DOI DOI 10.14738/JBEMI.33.2078
   Sezgin M, 2004, J ELECTRON IMAGING, V13, P146, DOI 10.1117/1.1631315
   SKLANSKY J, 1978, IEEE T SYST MAN CYB, V8, P237, DOI 10.1109/TSMC.1978.4309944
   Sommer C, 2011, I S BIOMED IMAGING, P230, DOI 10.1109/ISBI.2011.5872394
   Taha AA, 2015, BMC MED IMAGING, V15, DOI 10.1186/s12880-015-0068-x
   Thinsungnoen T., 2015, P 3 INT C IND APPL E, P44, DOI DOI 10.12792/ICIAE2015.012
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Wang ZB, 2020, ARTIF INTELL REV, V53, P5637, DOI 10.1007/s10462-020-09830-9
   Wang Z, 2019, PROC CVPR IEEE, P7492, DOI 10.1109/CVPR.2019.00768
   WESZKA JS, 1978, IEEE T SYST MAN CYB, V8, P622, DOI 10.1109/TSMC.1978.4310038
   Wu HS, 2000, J MICROSC-OXFORD, V197, P296, DOI 10.1046/j.1365-2818.2000.00653.x
   Xu N, 2016, PROC CVPR IEEE, P373, DOI 10.1109/CVPR.2016.47
   Yi JR, 2020, AAAI CONF ARTIF INTE, V34, P12677
   ZACK GW, 1977, J HISTOCHEM CYTOCHEM, V25, P741, DOI 10.1177/25.7.70454
   Zhang H, 2008, COMPUT VIS IMAGE UND, V110, P260, DOI 10.1016/j.cviu.2007.08.003
   Zhang YJ, 1996, PATTERN RECOGN, V29, P1335, DOI 10.1016/0031-3203(95)00169-7
NR 64
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111986
DI 10.1016/j.jss.2024.111986
EA FEB 2024
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KQ7Q8
UT WOS:001181502700001
OA hybrid
DA 2024-08-05
ER

PT J
AU Jevitha, KP
   Jayaraman, B
   Sethumadhavan, M
AF Jevitha, K. P.
   Jayaraman, Bharat
   Sethumadhavan, M.
TI Runtime verification on abstract finite state models
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Finite state models; Java program execution; Control-oriented and
   data-oriented properties; Runtime verification; Property preserving
   abstractions; Property checking on abstract models
ID CHECKING
AB Finite-state models are ubiquitous in the study of concurrent systems, especially controllers and servers that operate in a repetitive cycle. In this paper, we show how to extract finite state models from a run of a multithreaded Java program and carry out runtime verification of correctness properties. These properties include data-oriented and control-oriented properties; the former express correctness conditions over the data fields of objects, while the latter are concerned with the correct flow of control among the modules of larger software. As the extracted models can become very large for long runs, the focus of this paper is on constructing reduced models with user-defined abstraction functions that map a larger domain space to a smaller one. The abstraction functions should be chosen so that the resulting model is property preserving, i.e., proving a property on the abstract model carries over to the concrete model. The main contribution of this paper is in showing how runtime verification can be made efficient through online property checking on propertypreserving abstract models. The property specification language resembles a propositional linear temporal logic augmented with simple datatypes and operators. Classic concurrency examples and larger case studies (Multi-rotor Drone Controller, OAuth Protocol) are presented in order to demonstrate the usefulness of our proposed techniques, which are incorporated in an Eclipse plug-in for runtime visualization and verification of Java programs.
C1 [Jevitha, K. P.] Amrita Vishwa Vidyapeetham, Dept Comp Sci & Engn, Amrita Sch Comp, Coimbatore, India.
   [Jayaraman, Bharat] State Univ New York Univ Buffalo, Dept Comp Sci & Engn, Buffalo, NY USA.
   [Sethumadhavan, M.] Amrita Vishwa Vidyapeetham, Amrita Sch Engn, TIFAC CORE Cyber Secur, Coimbatore, India.
C3 Amrita Vishwa Vidyapeetham; Amrita Vishwa Vidyapeetham Coimbatore; State
   University of New York (SUNY) System; State University of New York
   (SUNY) Buffalo; Amrita Vishwa Vidyapeetham; Amrita Vishwa Vidyapeetham
   Coimbatore
RP Sethumadhavan, M (corresponding author), Amrita Vishwa Vidyapeetham, Amrita Sch Engn, TIFAC CORE Cyber Secur, Coimbatore, India.
EM kp_jevitha@cb.amrita.edu; bharat@buffalo.edu; m_sethu@cb.amrita.edu
CR Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   [Anonymous], 2014, Object constraint language (ocl)
   Ball T, 2001, ACM SIGPLAN NOTICES, V36, P203, DOI 10.1145/381694.378846
   Ball T, 2011, COMMUN ACM, V54, P68, DOI 10.1145/1965724.1965743
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Bruneton E., 2002, Adapt. Ext. Compon. Syst., V30
   Chen F, 2004, LECT NOTES COMPUT SC, V3308, P357
   Chen F., 2003, RUNTIME VERIFICATION, P108, DOI DOI 10.1016/S1571-0661
   Chen F, 2009, LECT NOTES COMPUT SC, V5505, P246, DOI 10.1007/978-3-642-00768-2_23
   Chen F, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P569
   Clarke E.M., 1997, Foundations of Software Technology and Theoretical Computer Science
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Cornejo O, 2020, IEEE INT CONF SOFTW, P243, DOI 10.1109/ICST46399.2020.00033
   COURTOIS PJ, 1971, COMMUN ACM, V14, P667, DOI 10.1145/362759.362813
   Cousot P., 1977, Conference Record of the Fourth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P238, DOI [10.1145/512950.512973, DOI 10.1145/512950.512973]
   Cousot R., 1979, Systematic Design of Program Analysis Frameworks
   CZYZ J.K., 2007, Proceedings of the 2007 OOPSLA Workshop on Eclipse Technology Exchange (Montreal, Quebec, Canada, October 21 - 21, P31, DOI DOI 10.1145/1328279.1328286
   d'Amorim M., 2005, ACM SIGSOFT SOFTWARE, V30, P1
   Dallmeier V., 2006, P 2006 INT WORKSHOP, P17, DOI [10.1145/1138912.1138918, DOI 10.1145/1138912.1138918]
   Dijkstra E. W., 1971, Acta Informatica, V1, P115, DOI 10.1007/BF00289519
   Dwyer MB, 2001, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.2001.919092
   Dyninst, 2024, DyninstAPI: Tools for binary instrumentation, analysis, and modification
   Falcone Y., 2013, Engineering Dependable Software Systems, P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Gellert W., 1989, The VNR Concise Encyclopedia of Mathematics, Vsecond
   Gestwicki P., 2005, P 2005 ACM S SOFTWAR, P95
   Giacomo G.D., 2013, P 23 INT JOINT C ART, P854
   Hardt D., 2012, The OAuth 2 0 authorization framework, DOI DOI 10.17487/RFC6749
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Havelund K., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00253-1
   Havelund K, 2004, FORM METHOD SYST DES, V24, P189, DOI 10.1023/B:FORM.0000017721.39909.4b
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   Havelund K, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P135, DOI 10.1109/ASE.2001.989799
   Hinrichs T., 2014, HOWARD-60: A Festschrift on the Occasion of Howard Barringer's 60th Birthday, V42, P234
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Java, 2014, About us
   Jayaraman S, 2017, SOFTWARE PRACT EXPER, V47, P163, DOI 10.1002/spe.2411
   Jayasri K.S., 2018, PROC COMPUTER SOC IN, P58
   Jevitha KP, 2021, SOFTWARE PRACT EXPER, V51, P409, DOI 10.1002/spe.2910
   JMAVSim, 2023, JMAVSim
   Kanso Bilal., 2012, SLE, P83
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kim M, 2004, FORM METHOD SYST DES, V24, P129, DOI 10.1023/B:FORM.0000017719.43755.7c
   Kuleshov E., 2007, PROC 6 ACM ASPECT OR
   Lee I., 1998, P KOR US TECH C STRA
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   LOISEAUX C, 1995, FORM METHOD SYST DES, V6, P11, DOI 10.1007/BF01384313
   Marchetto Alessandro, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P121, DOI 10.1109/ICST.2008.22
   Marek L, 2015, SCI COMPUT PROGRAM, V98, P100, DOI 10.1016/j.scico.2014.01.003
   Mariani L., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P241, DOI 10.1109/ISSRE.2012.14
   Meier L, 2015, IEEE INT CONF ROBOT, P6235, DOI 10.1109/ICRA.2015.7140074
   Meredith Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P249, DOI 10.1007/s10009-011-0198-6
   PX4, 2023, Open Source for Drones-PX4 Pro Open Source Autopilot
   Saravanan Gokul, 2023, Emerging Research in Computing, Information, Communication and Applications: Proceedings of ERCICA 2022. Lecture Notes in Electrical Engineering (928), P803, DOI 10.1007/978-981-19-5482-5_69
   Sifaks J., 1983, LNCS, V164
   Stolz V, 2006, ELECTRON NOTES THEOR, V144, P109, DOI 10.1016/j.entcs.2006.02.007
   The Apache Software Foundation, 2019, Apache Tomcat 9 Architecture
   Ziarek L, 2016, LECT NOTES COMPUT SC, V10012, P493, DOI 10.1007/978-3-319-46982-9_33
   Ziemann P, 2003, LECT NOTES COMPUT SC, V2890, P351
NR 59
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112138
DI 10.1016/j.jss.2024.112138
EA JUL 2024
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YB7J7
UT WOS:001266088200001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Nguyen, PT
   Di Rocco, J
   Di Sipio, C
   Rubei, R
   Di Ruscio, D
   Di Penta, M
AF Nguyen, Phuong T.
   Di Rocco, Juri
   Di Sipio, Claudio
   Rubei, Riccardo
   Di Ruscio, Davide
   Di Penta, Massimiliano
TI GPTSniffer: A CodeBERT-based classifier to detect source code written by
   ChatGPT
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE ChatGPT; Code classification; CodeBERT; Pre-trained Models
AB Since its launch in November 2022, ChatGPT has gained popularity among users, especially programmers who use it to solve development issues. However, while offering a practical solution to programming problems, ChatGPT should be used primarily as a supporting tool (e.g., in software education) rather than as a replacement for humans. Thus, detecting automatically generated source code by ChatGPT is necessary, and tools for identifying AI -generated content need to be adapted to work effectively with code. This paper presents GPTSniffer- a novel approach to the detection of source code written by AI - built on top of CodeBERT. We conducted an empirical study to investigate the feasibility of automated identification of AI -generated code, and the factors that influence this ability. The results show that GPTSniffer can accurately classify whether code is human -written or AI -generated, outperforming two baselines, GPTZero and OpenAI Text Classifier. Also, the study shows how similar training data or a classification context with paired snippets helps boost the prediction. We conclude that GPTSniffer can be leveraged in different contexts, e.g., in software engineering education, where teachers use the tool to detect cheating and plagiarism, or in development, where AI -generated code may require peculiar quality assurance activities.
C1 [Nguyen, Phuong T.; Di Rocco, Juri; Di Sipio, Claudio; Rubei, Riccardo; Di Ruscio, Davide] Univ Aquila, I-67100 Laquila, Italy.
   [Di Penta, Massimiliano] Univ Sannio, Benevento, Italy.
C3 University of L'Aquila; University of Sannio
RP Di Ruscio, D (corresponding author), Univ Aquila, I-67100 Laquila, Italy.
EM phuong.nguyen@univaq.it; juri.dirocco@univaq.it;
   claudio.disipio@univaq.it; riccardo.rubei@univaq.it;
   davide.diruscio@univaq.it; dipenta@unisannio.it
OI Di Penta, Massimiliano/0000-0002-0340-9747; Nguyen,
   Phuong/0000-0002-3666-4162; Rubei, Riccardo/0000-0001-9622-5949; Di
   Ruscio, Davide/0000-0002-5077-6793; Di Rocco, Juri/0000-0002-7909-3902
FU EMELIOT national research project - MUR under the PRIN 2020 program
   [2020W3A5FY]; European Union-NextGenerationEU through the Italian
   Ministry of University and Research [P2022553SL]; Italian "PRIN 2022"
   project TRex-SE: "Trustworthy Recommenders for Software Engineers''
   [2022LKJWHC]
FX All the numerical simulations/evaluations have been realized on the
   Linux HPC cluster Caliban of the High-Performance Computing Laboratory
   of the Department of Information Engineering, Computer Science and
   Mathematics (DISIM) at the University of L'Aquila. This work has been
   partially supported by the EMELIOT national research project, which has
   been funded by the MUR under the PRIN 2020 program (Contract 2020W3A5FY)
   . The work has also been partially supported by the European
   Union-NextGenerationEU through the Italian Ministry of University and
   Research, Projects PRIN 2022 PNRR ''FRINGE: context-aware FaiRness
   engineerING in complex software sys-tEms" grant n. P2022553SL. We
   acknowledge the Italian "PRIN 2022" project TRex-SE: "Trustworthy
   Recommenders for Software Engineers',' grant n. 2022LKJWHC.
CR Ahmad A, 2023, 27TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, EASE 2023, P279, DOI 10.1145/3593434.3593468
   Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Avila-Chauvet L., 2023, Chatgpt as a support tool for online behavioral task programming
   Azeem Akbar M., 2023, Ethical aspects of ChatGPT in software engineering research
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Bucaioni A., 2024, Mach. Learn. Appl., V15, DOI [10.1016/j.mlwa.2024.100526, DOI 10.1016/J.MLWA.2024.100526]
   Cao JL, 2023, Arxiv, DOI arXiv:2304.08191
   Cassee N, 2021, PROC IEEE INT CONF S, P654, DOI 10.1109/ICSME52107.2021.00075
   Classifier O, 2023, OpenAI text classifier
   Dalianis Hercules, 2018, Clinical Text Mining: secondary use of electronic patient records, P45, DOI [10.1007/978-3-319-78503-56, DOI 10.1007/978-3-319-78503-56]
   Dey T, 2020, IEEE WORK CONF MIN S, P209, DOI 10.1145/3379597.3387478
   Dinno A, 2015, STATA J, V15, P292, DOI 10.1177/1536867X1501500117
   Dulaney H., 2023, Solutions to Introduction to Java Programming, V10th
   Dvornik N, 2021, IEEE T PATTERN ANAL, V43, P2014, DOI 10.1109/TPAMI.2019.2961896
   EuroPol, 2023, The impact of large language models on law enforcement
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   GitHub, 2024, GitHub CoPilot
   Golzadeh M, 2021, 2021 IEEE/ACM THIRD INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2021), P21, DOI 10.1109/BotSE52550.2021.00012
   Gong SY, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1627, DOI 10.1145/3540250.3560878
   Gong SY, 2021, INT C PROGRAM COMPRE, P71, DOI 10.1109/ICPC52881.2021.00016
   GPTZero, 2023, About us
   Gu J, 2022, EUR CON SFTWR MTNCE, P935, DOI 10.1109/SANER53432.2022.00112
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Henrickson L, 2023, AI SOC, DOI 10.1007/s00146-023-01752-8
   HOLM S, 1979, SCAND J STAT, V6, P65
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Karmakar A, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1332, DOI 10.1109/ASE51524.2021.9678927
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Li YJ, 2007, IEEE T PATTERN ANAL, V29, P1091, DOI 10.1109/TPAMI.2007.1070
   Li Z, 2022, PROC INT CONF SOFTW, P1906, DOI 10.1145/3510003.3510181
   Liang Y.D., 2003, Introduction to Java Programming
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   McNemar Q, 1947, PSYCHOMETRIKA, V12, P153, DOI 10.1007/BF02295996
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Morales R, 2020, EMPIR SOFTW ENG, V25, P2960, DOI 10.1007/s10664-020-09826-7
   Nguyen P.T., 2023, GPTSniffer replication package
   Nguyen PT, 2023, EXPERT SYST APPL, V216, DOI 10.1016/j.eswa.2022.119477
   Nguyen PT, 2021, IEEE T SOFTWARE ENG, V48, P2417, DOI 10.1109/TSE.2021.3059907
   Ogura N, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P527, DOI 10.1109/SANER.2018.8330253
   OpenAI, 2024, OpenAI Codex
   OpenAI, 2023, Chatgpt
   Ozkaya I, 2023, IEEE SOFTWARE, V40, P4, DOI 10.1109/MS.2023.3248401
   Paltenghi M, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P867, DOI 10.1109/ASE51524.2021.9678712
   Pearce H, 2021, Arxiv, DOI arXiv:2108.09293
   Reda F, 2023, GitHub Copilot is not infringing your copyright
   Shorten C, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0197-0
   Sobania D., 2023, An analysis of the automatic bug fixing performance of chatgpt
   StephanieGlen, 2023, Developers warned: GitHub Copilot code may be licensed
   Tabnine, 2023, AI Assistant for software developers
   Taulli T., 2023, Prompt Engineering, P51, DOI [10.1007/978-1-4842-9852-74, DOI 10.1007/978-1-4842-9852-74]
   Wang CZ, 2023, IEEE T SOFTWARE ENG, V49, P4869, DOI 10.1109/TSE.2023.3313881
   Wang DZ, 2022, PROC INT CONF SOFTW, P287, DOI 10.1145/3510003.3510062
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Watson C, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3485275
   Zhang Fengji, 2022, Information and Software Technology, DOI 10.1016/j.infsof.2022.106922
NR 56
TC 1
Z9 1
U1 3
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112059
DI 10.1016/j.jss.2024.112059
EA APR 2024
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SI4J0
UT WOS:001233808900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Lu, GL
   Ju, XL
   Chen, X
   Pei, WL
   Cai, ZL
AF Lu, Guilong
   Ju, Xiaolin
   Chen, Xiang
   Pei, Wenlong
   Cai, Zhilong
TI GRACE: Empowering LLM-based software vulnerability detection with graph
   structure and in-context learning
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Vulnerability detection; Large language model; In-context learning;
   Source code representation; Graph structure
AB Software vulnerabilities inflict considerable economic and societal harm. Therefore, timely and accurate detection of these flaws has become vital. Large language models (LLMs) have emerged as a promising tool for vulnerability detection in recent studies. However, their effectiveness suffers when limited to plain text source code, which may ignore the syntactic and semantic information of the code. To address this limitation, we propose a novel vulnerability detection approach GRACE that empowers LLM-based software vulnerability detection by incorporating graph structural information in the code and in -context learning. We also design an effective demonstration retrieval approach that identifies highly relevant code examples by considering semantic, lexical, and syntactic similarities for the target code to provide better demonstrations for in -context learning. To evaluate the effectiveness of GRACE, we conducted an empirical study on three vulnerability detection datasets (i.e., Devign, Reveal, and Big-Vul). The results demonstrate that GRACE outperforms six state-of-the-art vulnerability detection baselines by at least 28.65% in terms of the F1 score across these three datasets. Therefore, our study highlights the effectiveness of integrating graph structural information and incontext learning in LLMs for vulnerability detection. These findings motivate further investigation into tailoring such approaches for specific vulnerability types or adapting them to other security tasks.
C1 [Lu, Guilong; Ju, Xiaolin; Chen, Xiang; Pei, Wenlong; Cai, Zhilong] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
C3 Nantong University
RP Ju, XL (corresponding author), Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
EM guil.lu@outlook.com; ju.xl@ntu.edu.cn; xchencs@ntu.edu.cn;
   wl.pei@outlook.com; zhil.cai@outlook.com
RI JU, Xiao-lin/F-8459-2011
OI JU, Xiao-lin/0000-0003-2579-5359; chen, xiang/0000-0002-1180-3891; Lu,
   Guilong/0009-0009-8336-9009
CR Achiam J., 2023, Gpt-4 technical report
   Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Allamanis Miltiadis, 2018, INT C LEARNING REPRE
   Aslan Ö, 2023, ELECTRONICS-SWITZ, V12, DOI 10.3390/electronics12061333
   Behl D, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON RELIABILTY, OPTIMIZATION, & INFORMATION TECHNOLOGY (ICROIT 2014), P294, DOI 10.1109/ICROIT.2014.6798341
   Belkina AC, 2019, NAT COMMUN, V10, DOI 10.1038/s41467-019-13055-y
   Bille P, 2005, THEOR COMPUT SCI, V337, P217, DOI 10.1016/j.tcs.2004.12.030
   Brown T., 2020, ADV NEURAL INFORM PR, V33, P1877, DOI DOI 10.48550/ARXIV.2005.14165
   Cadwalladr C., 2018, The Guardian
   Cao SC, 2022, PROC INT CONF SOFTW, P1456, DOI 10.1145/3510003.3510219
   Cao SC, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106576
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Cheng X, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P519, DOI 10.1145/3533767.3534371
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Cheshkov A, 2023, Arxiv, DOI arXiv:2304.07232
   Dong QX, 2022, Arxiv, DOI [arXiv:2301.00234, DOI 10.48550/ARXIV.2301.00234]
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Fu M, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P935, DOI 10.1145/3540250.3549098
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Geng MY, 2023, Arxiv, DOI arXiv:2304.11384
   Gu YX, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P8410
   Guang Yang, 2021, 2021 8th International Conference on Dependable Systems and Their Applications (DSA), P30, DOI 10.1109/DSA52907.2021.00013
   Guo H, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3498537
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hanif H, 2022, IEEE IJCNN, DOI [10.1109/IJCNN55064.2022.9892280, 10.1109/MEPCON55441.2022.10021719]
   Hin D, 2022, IEEE WORK CONF MIN S, P596, DOI 10.1145/3524842.3527949
   Hovsepyan A, 2012, Proceedings of the 4th International Workshop on Security Measurements and Metrics. MetriSec'12, P7, DOI 10.1145/2372225.2372230
   Kaur Arvinder, 2020, Procedia Computer Science, V171, P2023, DOI 10.1016/j.procs.2020.04.217
   Kudjo PK, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P424, DOI 10.1145/3293882.3338985
   Li P., 2010, IEEE INT C INF THEOR
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2821, DOI 10.1109/TDSC.2021.3076142
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2016, ANN COMPUT SECURITY, P201, DOI 10.1145/2991079.2991102
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Liu BC, 2012, INT C MULTIMED INFO, P152, DOI 10.1109/MINES.2012.202
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Luo M, 2023, Arxiv, DOI arXiv:2305.14128
   Ma PC, 2023, Arxiv, DOI arXiv:2304.00477
   Ma R, 2020, COMM COM INF SC, V1149, P58, DOI 10.1007/978-981-15-3418-8_5
   Ma SQ, 2017, LECT NOTES COMPUT SC, V10493, P229, DOI 10.1007/978-3-319-66399-9_13
   Ma W, 2022, IEEE WORK CONF MIN S, P524, DOI 10.1145/3524842.3528456
   McGraw G, 2004, IEEE SECUR PRIV, V2, P80, DOI 10.1109/MSECP.2004.1281254
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P1, DOI DOI 10.48550/ARXIV.1310.4546
   Min S., 2022, P 2022 C EMP METH NA, P11048, DOI 10.18653/V1/2022.EMNLP-MAIN.759
   Min SW, 2022, NAACL 2022: THE 2022 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES, P2791
   Nashid N, 2023, PROC INT CONF SOFTW, P2450, DOI 10.1109/ICSE48619.2023.00205
   Nguyen Viet Anh, 2021, ARXIV
   Nong Y, 2023, IEEE T SOFTWARE ENG, V49, P1983, DOI 10.1109/TSE.2022.3207149
   Pan SY, 2023, PROC INT CONF SOFTW, P957, DOI 10.1109/ICSE48619.2023.00088
   Pang YL, 2015, 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P543, DOI 10.1109/ICMLA.2015.99
   Rubin O, 2022, NAACL 2022: THE 2022 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES, P2655
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Shen ZD, 2020, SECUR COMMUN NETW, V2020, DOI 10.1155/2020/8858010
   Siow JK, 2022, EUR CON SFTWR MTNCE, P554, DOI 10.1109/SANER53432.2022.00073
   Sun XB, 2023, J INF SECUR APPL, V73, DOI 10.1016/j.jisa.2023.103423
   Wang JJ, 2024, Arxiv, DOI arXiv:2307.07221
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Webb GI., 2016, Encyclopedia of Machine Learning, DOI [DOI 10.1007/978-0-387-30164-8_576, 10.1007/978-1-4899-7502-7_581-1]
   Wen X., 2023, arXiv
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Wu YL, 2021, 2021 IEEE 11TH ANNUAL COMPUTING AND COMMUNICATION WORKSHOP AND CONFERENCE (CCWC), P1519, DOI 10.1109/CCWC51732.2021.9376145
   Wu YM, 2022, PROC INT CONF SOFTW, P2365, DOI 10.1145/3510003.3510229
   Xia CS, 2023, PROC INT CONF SOFTW, P1482, DOI 10.1109/ICSE48619.2023.00129
   Xia Chunqiu Steven, 2023, arXiv
   Xue YX, 2020, IEEE INT CONF AUTOM, P1029, DOI 10.1145/3324884.3416553
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yang SG, 2021, I C DEPEND SYS NETWO, P224, DOI 10.1109/DSN48987.2021.00036
   Yosifova V., 2021, 2021 12 NAT C INT PA, P1
   Yu C, 2022, PROC IEEE INT CONF S, P82, DOI 10.1109/ICSME55016.2022.00016
   Zhang Q., 2023, IEEE Trans. Dependable Secure Comput.
   Zhao LD, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P960, DOI 10.1145/3611643.3616299
   Zhao WX, 2023, Arxiv, DOI arXiv:2303.18223
   Zhou YQ, 2019, ADV NEUR IN, V32
NR 76
TC 1
Z9 1
U1 3
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUN
PY 2024
VL 212
AR 112031
DI 10.1016/j.jss.2024.112031
EA MAR 2024
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QS2U6
UT WOS:001222802600001
DA 2024-08-05
ER

PT J
AU Ferreira, FHC
   Nakagawa, EY
   Bertolino, A
   Lonetti, F
   Neves, VD
   dos Santos, RP
AF Ferreira, Francisco Henrique Cerdeira
   Nakagawa, Elisa Yumi
   Bertolino, Antonia
   Lonetti, Francesca
   Neves, Vania de Oliveira
   dos Santos, Rodrigo Pereira
TI A framework for the design of fault-tolerant systems-of-systems☆
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Systems -of -systems; Reliability; Fault tolerance
AB Context: Systems-of-Systems (SoS) increasingly permeate everyday life in various critical domains. Due to their dynamic nature, guaranteeing their fault tolerance is challenging. Fault-tolerant SoS must deal with behavioral changes in constituent systems, whether accidental or deliberate. Goal: This work proposes ReViTA, a framework to assist professionals in designing fault-tolerant SoS that can continue to provide their function even in the presence of disturbances, i.e., events that affect the ability of an SoS to fulfill its mission. Methods: By adopting ReViTA, fault tolerance can be achieved by reconfiguring an SoS architecture to meet the critical mission requirements. Results: We performed two studies to evaluate the ReViTA acceptance by professionals. In the former, we gathered perceptions and suggestions from 14 professionals through individual interviews. In the latter, we involved a group of four professionals who applied ReViTA to a real-world scenario. Conclusion: The results demonstrate that ReViTA can effectively support professionals in designing faulttolerant SoS. Employing ReViTA also brings insights into costs and planning that are crucial for implementing fault-tolerance strategies. Using ReViTA facilitates a comprehensive understanding of conflicts and weaknesses in constituent systems and fosters collaboration between domain experts and decision-makers. Employing ReViTA also improves stakeholder communication and enhances resource utilization.
C1 [Ferreira, Francisco Henrique Cerdeira; dos Santos, Rodrigo Pereira] Fed Univ State Rio de Janeiro UNIRIO, Rio De Janeiro, Brazil.
   [Nakagawa, Elisa Yumi] Univ Sao Paulo, Sao Carlos, Brazil.
   [Bertolino, Antonia; Lonetti, Francesca] Inst Informat Sci & Technol ISTI CNR, Pisa, Italy.
   [Neves, Vania de Oliveira] Fluminense Fed Univ UFF, Niteroi, Brazil.
C3 Universidade Federal do Estado do Rio de Janeiro; Universidade de Sao
   Paulo; Universidade Federal Fluminense
RP Ferreira, FHC (corresponding author), Fed Univ State Rio de Janeiro UNIRIO, Rio De Janeiro, Brazil.
EM francisco.ferreira@uniriotec.br; elisa@icmc.usp.br;
   antonia.bertolino@isti.cnr.it; francesca.lonetti@isti.cnr.it;
   vania@ic.uff.br; rps@uniriotec.br
RI Santos, Rodrigo Pereira dos/AAA-5620-2021; Bertolino,
   Antonia/ABD-6837-2020
OI Santos, Rodrigo Pereira dos/0000-0003-4749-2551; Bertolino,
   Antonia/0000-0001-8749-1356; Neves, Vania/0000-0003-4648-2263
FU UNIRIO, Brazil (DPq/PPQ 2022 and 2023); FAPERJ, Brazil [2015/24144-7];
   CAPES, Brazil; CNPq, Brazil [2017/06195-9]; FAPESP, Brazil
   [2023/00488-5];  [211.583/2019];  [313245/2021-5]
FX This study was funded by UNIRIO, Brazil (DPq/PPQ 2022 and 2023), FAPERJ,
   Brazil (211.583/2019), CAPES, Brazil, CNPq, Brazil (313245/2021-5), and
   FAPESP, Brazil (2015/24144-7, 2017/06195-9, 2023/00488-5). The first
   author also thanks the Federal University of Juiz de Fora.
CR Adams W. C., 2015, Handbook of practical program evaluation, P492, DOI [DOI 10.1002/9781119171386.CH19, 10.1002/9781119171386.ch19]
   Andrews Z., 2014, INCOSE Int. Symp., V24, P258
   Andrews Z., 2013, INT S AUTONOMOUS DEC, P1
   Andrews Z, 2013, ANN IEEE SYST CONF, P356, DOI 10.1109/SysCon.2013.6549906
   [Anonymous], 2000, WILEY SER PROB STAT
   Arcaini P, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P13, DOI 10.1109/SEAMS.2015.10
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   AVIZIENIS A, 1976, IEEE T COMPUT, V25, P1304, DOI 10.1109/TC.1976.1674598
   Bhardwaj N, 2018, 2018 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS (SESOS 2018), P17, DOI 10.1145/3194754.3194759
   Boardman J, 2006, PROCEEDINGS OF THE 2006 IEEE/SMC INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING, P118
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cherfa I, 2019, SYSTEMS ENG, V22, P437, DOI 10.1002/sys.21523
   Cook JL, 2008, P REL MAINT S, P318
   Dahmann J., 2008, CrossTalk, V21, P7
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   El Hachem J, 2016, ASIA PAC SOFWR ENG, P89, DOI [10.1109/APSEC.2016.023, 10.1109/APSEC.2016.52]
   Ferreira FH, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P54, DOI 10.1109/SEAA53835.2021.00016
   Ferreira FHC, 2023, INFORM SOFTWARE TECH, V158, DOI 10.1016/j.infsof.2023.107186
   Forte Sven, 2022, Procedia CIRP, P654, DOI 10.1016/j.procir.2022.02.109
   Greiler M., 2023, IEEE Trans. Softw. Eng., V49
   Harrell M.C., 2009, Data collection methods: Semi-structured interviews and focus groups
   Hu JP, 2014, ANN IEEE SYST CONF, P136, DOI 10.1109/SysCon.2014.6819248
   Imamura M., 2021, BRAZILIAN S INFORM S, P1
   Ingram C, 2014, PROCEEDINGS OF THE 2014 9TH INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING (SOSE 2014), P124, DOI 10.1109/SYSOSE.2014.6892475
   Khan R, 2011, COMPUT FRAUD SECUR, P12, DOI 10.1016/S1361-3723(11)70083-5
   Lampesberger H, 2015, TEXT MG SYMB COMPUT, P177, DOI 10.1007/978-3-319-17112-8_6
   Lonetti F, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2427
   Lyu M. R., 1996, Handbook of software reliability engineering
   Lyu MR, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P153, DOI 10.1109/FOSE.2007.24
   Maia PH, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P974, DOI 10.1109/ASE.2019.00094
   Maier M. W., 1998, Systems Engineering, V1, P267, DOI DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D
   Mokhtarpour B., 2015, RAMS, P1
   Mokhtarpour B, 2017, IEEE SYST J, V11, P1928, DOI 10.1109/JSYST.2014.2352332
   Onwuegbuzie AJ, 2007, QUAL QUANT, V41, P233, DOI 10.1007/s11135-006-9000-3
   Opdenakker RJG, 2006, FORUM QUALITATIVE SO, V7, DOI 10.17169/fqs-7.4.175
   Petitdemange F., 2015, INT WORKSHOP SOFTWAR
   Petitdemange F, 2021, SYSTEMS ENG, V24, P69, DOI 10.1002/sys.21567
   Phillips Ibukun, 2022, 2022 17th Annual System of Systems Engineering Conference (SOSE)., P127, DOI 10.1109/SOSE55472.2022.9812702
   Postel J., 1981, RFC 792 INTERNET CON
   Raman Ramakrishnan, 2022, INCOSE International Symposium, P809, DOI 10.1002/iis2.12965
   Rebovich G., 2009, Systems of Systems Engineering-Principles and Applications
   Ribeiro B.B., 2022, J. Softw. Eng. Res. Develop., V10, P1
   Robson C., 2002, REAL WORLD RES
   Romanov A, 2017, IEEE NW RUSS YOUNG, P976, DOI 10.1109/EIConRus.2017.7910719
   Sahu Kavita, 2019, Data Management, Analytics and Innovation. Proceedings of ICDMAI 2018. Advances in Intelligent Systems and Computing (AISC 808), P221, DOI 10.1007/978-981-13-1402-5_17
   Silva E., 2014, EUROPEAN C SOFTWARE, P1
   Silva E, 2015, 2015 10th System of Systems Engineering Conference (SoSE), P346, DOI 10.1109/SYSOSE.2015.7151951
   Strauss A., 2008, Basics of qualitative research: Techiques and procedures for developing grounded theory, V3rd ed.
   Teixeira P.G., 2023, 2023 18 ANN SYSTEM S, P1
   Uday P, 2013, PROCEDIA COMPUT SCI, V16, P532, DOI 10.1016/j.procs.2013.01.056
   Watzoldt S., 2015, EUROPEAN C SOFTWARE
   Weyns D., 2013, INT WORKSHOP SOFTWAR, P47
   Wieringa R. J, 2014, Design science methodology for information systems and software engineering
   Wong TRC, 2022, INFORM SOFTWARE TECH, V148, DOI 10.1016/j.infsof.2022.106934
   Wudka Bjorn, 2020, 2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW), P219, DOI 10.1109/ISSREW51248.2020.00076
   Zeigler BP, 2022, RECENT TRENDS AND ADVANCES IN MODEL BASED SYSTEMS ENGINEERING, P515, DOI 10.1007/978-3-030-82083-1_44
   Zelalem Mihret B., 2018, INT C SYSTEM SYSTEMS, P1
NR 57
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 112010
DI 10.1016/j.jss.2024.112010
EA FEB 2024
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NU3L4
UT WOS:001202927700001
DA 2024-08-05
ER

PT J
AU Long, PX
   Zhao, JJ
AF Long, Peixun
   Zhao, Jianjun
TI Equivalence, identity, and unitarity checking in black-box testing of
   quantum programs
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Quantum programs; Software testing; Black-box testing; Equivalence
   checking; Unitarity checking
AB Quantum programs exhibit inherent non -deterministic behavior, which poses more significant challenges for error discovery compared to classical programs. While several testing methods have been proposed for quantum programs, they often overlook fundamental questions in black -box testing. In this paper, we bridge this gap by presenting three novel algorithms specifically designed to address the challenges of equivalence, identity, and unitarity checking in black -box testing of quantum programs. We also explore optimization techniques for these algorithms, including specialized versions for equivalence and unitarity checking, and provide valuable insights into parameter selection to maximize performance and effectiveness. To evaluate the effectiveness of our proposed methods, we conducted comprehensive experimental evaluations, which demonstrate that our methods can rigorously perform equivalence, identity, and unitarity checking, offering robust support for black -box testing of quantum programs.
C1 [Long, Peixun] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
   [Long, Peixun] Univ Chinese Acad Sci, Beijing, Peoples R China.
   [Zhao, Jianjun] Kyushu Univ, Sch Informat Sci & Elect Engn, Fukuoka, Japan.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; University of Chinese Academy of Sciences, CAS; Kyushu
   University
RP Long, PX (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
EM longpx@ios.ac.cn; zhao@ait.kyushu-u.ac.jp
OI Long, Peixun/0009-0000-9255-9335; Zhao, Jianjun/0000-0001-8083-4352
FU National Natural Science Foundation of China [61832015]; JSPS KAKENHI,
   Japan [JP23H03372]
FX The authors would like to thank Kean Chen for his valuable dis-cussions
   regarding the writing of this paper. This work is supported in part by
   the National Natural Science Foundation of China under Grant 61832015
   and JSPS KAKENHI, Japan Grant No. JP23H03372.
CR Abreu R, 2022, 3RD INTERNATIONAL WORKSHOP ON QUANTUM SOFTWARE ENGINEERING (Q-SE 2022), P16, DOI 10.1145/3528230.3529189
   Ali S, 2021, IEEE INT CONF SOFTW, P13, DOI 10.1109/ICST49551.2021.00014
   Barenco A, 1997, SIAM J COMPUT, V26, P1541, DOI 10.1137/S0097539796302452
   Beizer B., 1995, BLACK BOX TESTING TE
   Biamonte J, 2017, NATURE, V549, P195, DOI 10.1038/nature23474
   Buhrman H, 2001, PHYS REV LETT, V87, DOI 10.1103/PhysRevLett.87.167902
   Burgholzer L, 2021, IEEE T COMPUT AID D, V40, P1810, DOI 10.1109/TCAD.2020.3032630
   Garcia-Escartin JC, 2011, Arxiv, DOI arXiv:1110.2998
   Cerezo M, 2020, QUANTUM-AUSTRIA, V4, DOI 10.22331/q-2020-03-26-248
   Chen KA, 2023, IEEE T INFORM THEORY, V69, P5116, DOI 10.1109/TIT.2023.3263645
   CHERNOFF H, 1952, ANN MATH STAT, V23, P493, DOI 10.1214/aoms/1177729330
   Chuang IL, 1997, J MOD OPTIC, V44, P2455, DOI 10.1080/095003497152609
   D'Ariano GM, 2003, ADV IMAG ELECT PHYS, V128, P205, DOI 10.1016/S1076-5670(03)80065-4
   DEUTSCH D, 1985, P ROY SOC LOND A MAT, V400, P97, DOI 10.1098/rspa.1985.0070
   Ekert AK, 2002, PHYS REV LETT, V88, DOI 10.1103/PhysRevLett.88.217901
   Farhi E, 2014, Arxiv, DOI arXiv:1411.4028
   Flammia ST, 2011, PHYS REV LETT, V106, DOI 10.1103/PhysRevLett.106.230501
   Fortunato Daniel, 2022, IEEE Transactions on Quantum Engineering, V3, DOI 10.1109/TQE.2022.3195061
   Fortunato D, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P797, DOI 10.1145/3533767.3543296
   Fortunato D, 2022, PROC IEEE ACM INT C, P358, DOI [10.1109/ICSE-Companion55297.2022.9793776, 10.1145/3510454.3528649]
   de la Barrera AG, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2419
   Grover L. K., 1996, Proceedings of the Twenty-Eighth Annual ACM Symposium on the Theory of Computing, P212, DOI 10.1145/237814.237866
   Guo J., 2023, IEEE Trans. Quant. Eng, P1
   Harrow AW, 2009, PHYS REV LETT, V103, DOI 10.1103/PhysRevLett.103.150502
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Honarvar S., 2020, 1 INT WORKSHOP QUANT
   Hong X, 2022, ICCAD-IEEE ACM INT, DOI 10.1145/3508352.3549479
   Hong X, 2021, DES AUT CON, P637, DOI 10.1109/DAC18074.2021.9586214
   Huang YP, 2019, PROCEEDINGS OF THE 2019 46TH INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE (ISCA '19), P541, DOI 10.1145/3307650.3322213
   Janzing D, 2005, INT J QUANTUM INF, V3, P463, DOI 10.1142/S0219749905001067
   Li GS, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428218
   Long PX, 2024, Arxiv, DOI arXiv:2306.17407
   Barnett SM, 2008, Arxiv, DOI arXiv:0810.1970
   McArdle S, 2020, Arxiv, DOI arXiv:1808.10402
   Mendiluze E, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1266, DOI 10.1109/ASE51524.2021.9678563
   Mingsheng Y., 2016, Foundations of Quantum Programming., Vfirst
   Miranskyy A, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P29, DOI 10.1145/3377816.3381731
   Miranskyy A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P57, DOI 10.1109/ICSE-NIER.2019.00023
   Miranskyy Andriy, 2021, arXiv
   VOGEL K, 1989, PHYS REV A, V40, P2847, DOI 10.1103/PhysRevA.40.2847
   Wang J., 2018, arXiv
   Wang QS, 2022, IEEE T COMPUT AID D, V41, P3143, DOI 10.1109/TCAD.2021.3117506
   Wang XY, 2022, Arxiv, DOI arXiv:2204.08561
   Wang XY, 2022, PROCEEDINGS OF THE 2022 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'22), P1345, DOI 10.1145/3512290.3528869
   Wang XY, 2021, LECT NOTES COMPUT SC, V12914, P9, DOI 10.1007/978-3-030-88106-1_2
   Wang XY, 2021, IEEE INT C S Q R S, P179, DOI 10.1109/QRS54544.2021.00029
   Wang XY, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1237, DOI 10.1109/ASE51524.2021.9678798
   Yamashita Shigeru, 2010, 2010 IEEE/ACM International Symposium on Nanoscale Architectures (NANOARCH 2010), P23, DOI 10.1109/NANOARCH.2010.5510932
   Yang ZY, 2017, NAT COMMUN, V8, DOI 10.1038/s41467-017-01362-1
   Zhang C, 2006, PHYS LETT A, V353, P300, DOI 10.1016/j.physleta.2005.12.097
   Zhang C, 2007, PHYS REV A, V75, DOI 10.1103/PhysRevA.75.062306
   Zhao J., 2020, arXiv
   Zhao PZ, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1373, DOI 10.1109/ASE51524.2021.9678908
NR 53
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 112000
DI 10.1016/j.jss.2024.112000
EA FEB 2024
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LQ7S0
UT WOS:001188339000001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Golshanrad, P
   Faghih, F
AF Golshanrad, Pouria
   Faghih, Fathiyeh
TI DeepCover: Advancing RNN test coverage and online error prediction using
   state machine extraction
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Recurrent neural networks; Explainability; State machine; Coverage
   criteria; Error prediction; Test
AB Recurrent neural networks (RNNs) have emerged as powerful tools for processing sequential data in various fields, including natural language processing and speech recognition. However, the lack of explainability in RNN models has limited their interpretability, posing challenges in understanding their internal workings. To address this issue, this paper proposes a methodology for extracting a state machine (SM) from an RNN-based model to provide insights into its internal function. The proposed SM extraction algorithm was assessed using four newly proposed metrics: Purity, Richness, Goodness, and Scale. The proposed methodology along with its assessment metrics contribute to increasing explainability in RNN models by providing a clear representation of their internal decision making process through the extracted SM. In addition to improving the explainability of RNNs, the extracted SM can be used to advance testing and monitoring of the primary RNN-based model. To enhance RNN testing, we introduce six model coverage criteria based on the extracted SM, serving as metrics for evaluating the effectiveness of test suites designed to analyze the primary model. We also propose a treebased model to predict the error probability of the primary model for each input based on the extracted SM. We evaluated our proposed online error prediction approach using the MNIST dataset and Mini Speech Commands dataset, achieving an area under the curve (AUC) exceeding 80% for the receiver operating characteristic (ROC) chart.
C1 [Golshanrad, Pouria; Faghih, Fathiyeh] Univ Tehran, Tehran, Iran.
C3 University of Tehran
RP Faghih, F (corresponding author), Univ Tehran, Tehran, Iran.
EM pouria.golshanrad@ut.ac.ir; f.faghih@ut.ac.ir
RI Faghih, Fathiyeh/Q-3627-2018
OI Faghih, Fathiyeh/0000-0002-8877-6895
CR ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], 1971, Fault Detection in Digital Circuits
   Antoran J., 2020, ADV NEURAL INFORM PR, V33, P10620
   Arthur D, 2007, PROCEEDINGS OF THE EIGHTEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P1027
   Ayache R., 2019, PMLR, P81
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Barbiero P, 2022, AAAI CONF ARTIF INTE, P6046
   Lipton ZC, 2015, Arxiv, DOI arXiv:1506.00019
   Chefer H, 2021, PROC CVPR IEEE, P782, DOI 10.1109/CVPR46437.2021.00084
   Cheng DW, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P313, DOI 10.1109/QRS.2018.00044
   Dosovitskiy A, 2016, PROC CVPR IEEE, P4829, DOI 10.1109/CVPR.2016.522
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   ELMAN JL, 1990, COGNITIVE SCI, V14, P179, DOI 10.1207/s15516709cog1402_1
   Fisher RA, 1936, ANN EUGENIC, V7, P179, DOI 10.1111/j.1469-1809.1936.tb02137.x
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Graves A, 2013, INT CONF ACOUST SPEE, P6645, DOI 10.1109/ICASSP.2013.6638947
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Hou RT, 2022, INFORM SCIENCES, V601, P255, DOI 10.1016/j.ins.2022.04.003
   Huang XW, 2020, COMPUT SCI REV, V37, DOI 10.1016/j.cosrev.2020.100270
   Humbatova N, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P67, DOI 10.1145/3460319.3464825
   Jolliffe I. T., 2002, PRINCIPAL COMPONENT, DOI 10.1016/0169-7439(87)80084-92
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kohavi Z., 2009, Switching and finite automata theory
   Kolmogorov A.N., 1933, Giornale dellIntituto Italiano degli Attuari, V4, P83, DOI DOI 10.12691/AJAMS-1-1-2
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Loh WY, 2011, WIRES DATA MIN KNOWL, V1, P14, DOI 10.1002/widm.8
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Merrill W, 2021, Arxiv, DOI arXiv:1906.01615
   Molnar C, 2018, Interprtable machine learning: A guide for making black box models explainable
   Okudono T, 2020, AAAI CONF ARTIF INTE, V34, P5306
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1023/A:1022643204877
   Raghunathan A, 2020, Arxiv, DOI arXiv:1801.09344
   Ros AS, 2018, AAAI CONF ARTIF INTE, P1660
   Rossolini G, 2023, IEEE T SOFTWARE ENG, V49, P802, DOI 10.1109/TSE.2022.3163682
   Shen WJ, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P108, DOI 10.1109/QRS-C.2018.00032
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Tambon F, 2023, INFORM SOFTWARE TECH, V155, DOI 10.1016/j.infsof.2022.107129
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tieleman T., 2012, COURSERA: Neural Networks for Machine Learning, V4, P26, DOI DOI 10.1007/S12654-012-0173-1
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang Chaojie, 2022, IEEE T PATTERN ANAL
   Warden P, 2018, Arxiv, DOI arXiv:1804.03209
   Wei Zeming, 2022, Formal Methods and Software Engineering: 23rd International Conference on Formal Engineering Methods, ICFEM 2022, Proceedings. Lecture Notes in Computer Science (13478), P370, DOI 10.1007/978-3-031-17244-1_22
   Weiss G, 2022, Mach Learn, P1, DOI DOI 10.1007/s10994-022-06163-2
   Weiss G, 2019, ADV NEUR IN, V32
   Weiss G, 2018, Arxiv, DOI [arXiv:1805.04908, 10.48550/arXiv.1805.04908]
   Wicker M, 2018, LECT NOTES COMPUT SC, V10805, P408, DOI 10.1007/978-3-319-89960-2_22
NR 50
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111987
DI 10.1016/j.jss.2024.111987
EA FEB 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NH4I5
UT WOS:001199543000001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU He, X
   Zan, T
AF He, Xiao
   Zan, Tao
TI BIT: A template-based approach to incremental and bidirectional
   model-to-text transformation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Bidirectional transformation; Model-to-text transformation; Template
   language; Model-driven development; Round-trip engineering
ID TRIPLE GRAPH-GRAMMARS
AB Model-driven development is a model-centric software development paradigm that automates the development process by converting high-level models into low-level code and documents. To maintain synchronization between models and code/documents - which can evolve independently - this paper introduces BIT, a bidirectional language that can serve as a conventional template language for model-to-text transformations. However, a BIT program can function as both a printer, generating text by filling template holes with values from the input model, and a parser, putting parsed values back into the model. BIT comprises a surface language for better usability and a core language for formal definition. We define the semantics of the core language based on the theory of bidirectional transformation, and provide the translation from the surface to the core. We present the proof sketch of the well behavedness of BIT as a formal evidence of soundness. We also conduct three case studies to empirically demonstrate the expressiveness and the effectiveness of BIT. Based on the proof and the case studies, BIT covers the major features of existing template languages, and offers sufficient expressiveness to define real-world model-to-text transformations that can be executed bidirectionally and incrementally.
C1 [He, Xiao] Univ Sci & Technol Beijing, Sch Comp & Commun Engn, 30,Xueyuan Rd, Beijing 100083, Peoples R China.
   [Zan, Tao] Longyan Univ, 1,North Dongxiao Rd, Longyan 364012, Peoples R China.
C3 University of Science & Technology Beijing; Longyan University
RP Zan, T (corresponding author), Longyan Univ, 1,North Dongxiao Rd, Longyan 364012, Peoples R China.
EM hexiao@ustb.edu.cn; zan@lyun.edu.cn
FU National Key Research and Development Program of China [2023YFB3002903];
   Natural Science Foundation of Fujian Province for Youths [2021J05230];
   Beijing Natural Science Foundation [4192036]
FX * This work is funded by National Key Research and Development Program
   of China (No. 2023YFB3002903) , Natural Science Foundation of Fujian
   Province for Youths (No. 2021J05230) , Beijing Natural Science
   Foundation (No. 4192036) .
CR Akdur D, 2018, J SYST ARCHITECT, V91, P62, DOI 10.1016/j.sysarc.2018.09.007
   [Anonymous], 2023, Xtend templates
   [Anonymous], 2023, Nunjucks project
   [Anonymous], 2023, Django templates
   [Anonymous], 2023, Java Emitter Template Project
   [Anonymous], 2023, Mustache project
   [Anonymous], 2023, Acceleo project
   [Anonymous], 2023, Apache Velocity Project
   [Anonymous], 2023, Apache FreeMaker project
   [Anonymous], 2008, MOF MODEL TEXT TRANS
   Barbosa DMJ, 2010, ICFP 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P193
   Bohannon A, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P407, DOI 10.1145/1328438.1328487
   Boronat A, 2023, SOFTW SYST MODEL, V22, P1949, DOI 10.1007/s10270-023-01111-7
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Brown AlanW., 2004, SOFTWARE SYSTEM MODE, V3, P314, DOI [DOI 10.1007/S10270-004-0061-2, 10.1007/s10270-004-0061-2]
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Buchmann T, 2022, J SYST SOFTWARE, V189, DOI 10.1016/j.jss.2022.111288
   Buchmann T, 2016, IET SOFTW, V10, P173, DOI 10.1049/iet-sen.2015.0125
   Cheney J, 2017, J OBJECT TECHNOL, V16, DOI 10.5381/jot.2017.16.1.a3
   Chivers H, 2009, INFORM SOFTWARE TECH, V51, P876, DOI 10.1016/j.infsof.2008.05.006
   Crichton W, 2024, P ACM PROGRAM LANG, V8, DOI 10.1145/3632865
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   Diskin Z, 2016, J SYST SOFTWARE, V111, P298, DOI 10.1016/j.jss.2015.06.003
   Ehrig H, 2007, LECT NOTES COMPUT SC, V4422, P72
   Fischer S, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5316-8
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1047659.1040325
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   He Xiao, 2024, Zenodo, DOI 10.5281/ZENODO.11124048
   He X, 2022, SCI CHINA INFORM SCI, V65, DOI 10.1007/s11432-020-3276-5
   He X, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P162, DOI 10.1145/2976767.2976806
   He X, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P434, DOI 10.1145/3236024.3236070
   Hermann F, 2015, SOFTW SYST MODEL, V14, P241, DOI 10.1007/s10270-012-0309-1
   Hermann F, 2012, LECT NOTES COMPUT SC, V7212, P178, DOI 10.1007/978-3-642-28872-2_13
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Hidaka S, 2013, ACM SIGPLAN NOTICES, V48, P305, DOI [10.1145/2500365.2500608, 10.1145/2544174.2500608]
   Hidaka S, 2010, ICFP 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P205
   Hofmann M, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P371, DOI 10.1145/1926385.1926428
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Ko H.-S., 2017, P ACM PROGRAM LANG P
   Lemerre Matthieu, 2023, Static Analysis: 30th International Symposium, SAS 2023, Proceedings. Lecture Notes in Computer Science (14284), P403, DOI 10.1007/978-3-031-44245-2_18
   Macedo N, 2016, SOFTW SYST MODEL, V15, P783, DOI 10.1007/s10270-014-0437-x
   Matsuda K, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON HASKELL (HASKELL '18), P158, DOI 10.1145/3242744.3242758
   Matsuda K, 2018, NEW GENERAT COMPUT, V36, P173, DOI 10.1007/s00354-018-0033-7
   Object Management Group, 2024, Model Driven Architecture
   Orejas Fernando, 2020, Fundamental Approaches to Software Engineering. 23rd International Conference, FASE 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12076), P273, DOI 10.1007/978-3-030-45234-6_14
   Rose L. M., 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P57, DOI 10.1109/MISE.2012.6226015
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Samimi-Dehkordi L, 2018, INFORM SOFTWARE TECH, V100, P47, DOI 10.1016/j.infsof.2018.03.011
   Syriani E, 2018, COMPUT LANG SYST STR, V52, P43, DOI 10.1016/j.cl.2017.11.003
   Umuhoza E, 2016, LECT NOTES COMPUT SC, V9847, P93, DOI 10.1007/978-3-319-44215-0_8
   van Tonder R, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P363, DOI 10.1145/3314221.3314589
   Tran VD, 2020, PROC VLDB ENDOW, V13, P726, DOI 10.14778/3377369.3377380
   Xia LY, 2019, LECT NOTES COMPUT SC, V11423, P147, DOI 10.1007/978-3-030-17184-1_6
   Xiong YF, 2013, SOFTW SYST MODEL, V12, P89, DOI 10.1007/s10270-010-0187-3
   Yu YJ, 2012, PROC INT CONF SOFTW, P540, DOI 10.1109/ICSE.2012.6227162
   Zhang X, 2023, P ACM PROGRAM LANG, V7, DOI 10.1145/3586035
   Zhang X, 2022, PROC INT CONF SOFTW, P2154, DOI 10.1145/3510003.3510195
   Zhenjiang Hu, 2008, Higher-Order and Symbolic Computation, V21, P89, DOI 10.1007/s10990-008-9025-5
   Zhu ZR, 2020, NEW GENERAT COMPUT, V38, P423, DOI 10.1007/s00354-019-00082-y
NR 59
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112148
DI 10.1016/j.jss.2024.112148
EA JUL 2024
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YW5G0
UT WOS:001271529000001
DA 2024-08-05
ER

PT J
AU Frattini, J
   Montgomery, L
   Fucci, D
   Unterkalmsteiner, M
   Mendez, D
   Fischbach, J
AF Frattini, Julian
   Montgomery, Lloyd
   Fucci, Davide
   Unterkalmsteiner, Michael
   Mendez, Daniel
   Fischbach, Jannik
TI Requirements quality research artifacts: Recovery, analysis, and
   management guideline
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Requirements engineering; Artifact; Availability; Bayesian data
   analysis; Guideline
AB Requirements quality research, which is dedicated to assessing and improving the quality of requirements specifications, is dependent on research artifacts like data sets (containing information about quality defects) and implementations (automatically detecting and removing these defects). However, recent research exposed that the majority of these research artifacts have become unavailable or have never been disclosed, which inhibits progress in the research domain. In this work, we aim to improve the availability of research artifacts in requirements quality research. To this end, we (1) extend an artifact recovery initiative, (2) empirically evaluate the reasons for artifact unavailability using Bayesian data analysis, and (3) compile a concise guideline for open science artifact disclosure. Our results include 10 recovered data sets and 7 recovered implementations, empirical support for artifact availability improving over time and the positive effect of public hosting services, and a pragmatic artifact management guideline open for community comments. With this work, we hope to encourage and support adherence to open science principles and improve the availability of research artifacts for the requirements research quality community.
C1 [Frattini, Julian; Fucci, Davide; Unterkalmsteiner, Michael; Mendez, Daniel] Blekinge Inst Technol, Valhallavagen 1, S-37141 Karlskrona, Sweden.
   [Montgomery, Lloyd] Univ Hamburg, D-20146 Hamburg, Germany.
   [Fischbach, Jannik] Netlight Consulting GmbH, Sternstr 5, D-80538 Munich, Germany.
   [Mendez, Daniel; Fischbach, Jannik] Fortiss GmbH, Guerickestr 25, D-80805 Munich, Germany.
C3 Blekinge Institute Technology; University of Hamburg; fortiss
RP Frattini, J (corresponding author), Blekinge Inst Technol, Valhallavagen 1, S-37141 Karlskrona, Sweden.
EM julian.frattini@bth.se; lloyd.montgomery@uni-hamburg.de;
   davide.fucci@bth.se; michael.unterkalmsteiner@bth.se;
   daniel.mendez@bth.se; jannik.fischbach@netlight.com
RI ; Fucci, Davide/C-1463-2015
OI Unterkalmsteiner, Michael/0000-0003-4118-0952; Montgomery,
   Lloyd/0000-0002-8249-1418; Fucci, Davide/0000-0002-0679-4361; Frattini,
   Julian/0000-0003-3995-6125
FU KKS foundation
FX <B>Acknowledgments</B> This work was supported by the KKS foundation,
   the S.E.R.T. Research Profile project at Blekinge nology. We further
   thank the members of the NLP4RE who supported the recovery initiative,
   especially Eduard Berry, Fabiano Dalpiaz, and Alessio Ferrari.
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Al Balushi Taiseera, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P929
   Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Bäumer FS, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P5746
   Baldassarre MT, 2023, COMMUN ACM, V66, P75, DOI 10.1145/3554976
   Baltes S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10072-8
   Bürkner PC, 2017, J STAT SOFTW, V80, P1, DOI 10.18637/jss.v080.i01
   Cacioppo J. T., 2015, REPORT SUBCOMMITTEE, V1
   Dalpiaz F, 2018, LECT NOTES COMPUT SC, V10753, P119, DOI 10.1007/978-3-319-77243-1_8
   Din C.Y., 2008, REQUIREMENTS CONTENT
   Ducasse S, 2005, IEEE T SOFTWARE ENG, V31, P75, DOI 10.1109/TSE.2005.14
   El-Attar M, 2010, SOFTW SYST MODEL, V9, P141, DOI 10.1007/s10270-009-0112-9
   European Organization For Nuclear Research and OpenAIRE, 2013, Zenodo general policies v1.0
   Ezzini S, 2021, PROC INT CONF SOFTW, P1485, DOI 10.1109/ICSE43902.2021.00133
   Feitelson Dror G., 2015, ACM SIGOPS Operating Systems Review, V49, P3
   Femmer H., 2014, P 8 ACM IEEE INT S E, P1
   Fernández DM, 2019, SOFTW SYST MODEL, V18, P2777, DOI 10.1007/s10270-019-00714-3
   Ferrari Alessio, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P23, DOI 10.1007/978-3-319-05843-6_3
   Ferrari Alessio, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P34, DOI 10.1007/978-3-642-37422-7_3
   Ferrari A, 2019, AUTOMAT SOFTW ENG, V26, P559, DOI 10.1007/s10515-019-00261-7
   Frattini J, 2023, Arxiv, DOI arXiv:2304.04670
   Frattini J, 2022, 2022 30TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE (RE 2022), P274, DOI 10.1109/RE54965.2022.00041
   Furia CA, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3490953
   Furia CA, 2021, IEEE T SOFTWARE ENG, V47, P1786, DOI 10.1109/TSE.2019.2935974
   Gabelica M, 2022, J CLIN EPIDEMIOL, V150, P33, DOI 10.1016/j.jclinepi.2022.05.019
   Gelman Andrew., 2020, arXiv, DOI DOI 10.48550/ARXIV.2011.01808
   Glymour Madelyn, 2016, Causal Inference in Statistics: A Primer
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Hermann B, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P469, DOI 10.1145/3368089.3409767
   Hui Yang, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P11, DOI 10.1109/RE.2012.6345795
   Jaynes E. T., 2003, Probability theory: The logic of science, DOI 10.1017/CBO9780511790423
   Kidwell MC, 2016, PLOS BIOL, V14, DOI 10.1371/journal.pbio.1002456
   Krishnamurthi S, 2015, COMMUN ACM, V58, P34, DOI 10.1145/2658987
   Landi A, 2020, DATA INTELLIGENCE, V2, P47, DOI 10.1162/dint_a_00027
   Li FL, 2016, LECT NOTES COMPUT SC, V9694, P221, DOI 10.1007/978-3-319-39696-5_14
   Lucassen G, 2017, LECT NOTES COMPUT SC, V10153, P235, DOI 10.1007/978-3-319-54045-0_18
   McElreath R, 2016, TEXT STAT SCI, pXI
   McNutt M, 2014, SCIENCE, V343, P231, DOI 10.1126/science.1250475
   Mendez D., 2013, P 17 INT C EV ASS SO, P183
   Mendez D., 2020, Contemporary Empirical Methods in Software Engineering, P477
   Minocher R., 2020, arXiv
   Mokammel F, 2018, SYSTEMS ENG, V21, P555, DOI 10.1002/sys.21461
   Montgomery Lloyd, 2023, Zenodo, DOI 10.5281/ZENODO.8134403
   Montgomery L, 2022, REQUIR ENG, V27, P183, DOI 10.1007/s00766-021-00367-z
   Nosek BA, 2018, P NATL ACAD SCI USA, V115, P2600, DOI 10.1073/pnas.1708274114
   Rago A.M., 2014, An Approach for Automating Use Case Refactoring
   Romano JJ, 1998, IEEE SYS MAN CYBERN, P2489, DOI 10.1109/ICSMC.1998.725031
   Rosen Lawrence., 2004, Open Source Licensing: Software Freedom and Intellectual Property Law
   Scanniello G, 2018, EMPIR SOFTW ENG, V23, P2695, DOI 10.1007/s10664-017-9591-4
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Sicilia MA, 2017, PROCEDIA COMPUT SCI, V106, P54, DOI 10.1016/j.procs.2017.03.009
   Siebert J, 2023, INFORM SOFTWARE TECH, V159, DOI 10.1016/j.infsof.2023.107198
   Tennant J., 2019, arXiv
   Vehtari A., 2021, Bayesian Analysis, V16, P667, DOI [10.1214/20-BA1221, DOI 10.1214/20-BA1221]
   Wacharamanotham C, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376448
   Wagner S, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3306607
   Wang Y, 2019, INT J SOFTW ENG KNOW, V29, P547, DOI 10.1142/S0218194019500232
   Wesner JS, 2021, ECOSPHERE, V12, DOI 10.1002/ecs2.3739
   Wilson WM, 1997, PROC INT CONF SOFTW, P161, DOI 10.1145/253228.253258
   Winter S, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P145, DOI 10.1145/3540250.3549172
   Wohlin C., 2012, EXPT SOFTWARE ENG
   Zhao L, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3444689
NR 63
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112120
DI 10.1016/j.jss.2024.112120
EA JUN 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WF2P2
UT WOS:001253392200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Da Silva, L
   Borba, P
   Maciel, T
   Mahmood, W
   Berger, T
   Moisakis, J
   Gomes, A
   Leite, V
AF Da Silva, Leuson
   Borba, Paulo
   Maciel, Toni
   Mahmood, Wardah
   Berger, Thorsten
   Moisakis, Joao
   Gomes, Aldiberg
   Leite, Vinicius
TI Detecting semantic conflicts with unit tests
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Semantic conflicts; Differential testing; Behavior change
ID PROPAGATION
AB While modern merge techniques, such as 3 -way and structured merge, can resolve textual conflicts automatically, they fail when the conflict arises not at the syntactic, but at the semantic level. Detecting such semantic conflicts requires understanding the behavior of the software, which is beyond the capabilities of most existing merge tools. Although semantic merge tools have been proposed, they are usually based on heavyweight static analyses, or need explicit specifications of program behavior. In this work, we take a different route and propose SAM (SemAntic Merge), a semantic merge tool based on the automated generation of unit tests that are used as partial specifications of the changes to be merged, and that drive the detection of unwanted behavior changes (conflicts) when merging software. To evaluate SAM's feasibility for detecting conflicts, we perform an empirical study relying on a dataset of more than 80 pairs of changes integrated to common class elements (constructors, methods, and fields) from 51 merge scenarios. We also assess how the four unit test generation tools used by SAM individually contribute to conflict identification. Our results show that SAM performs best when combining only the tests generated by Differential EvoSuite and EvoSuite, and using our proposed testability transformations (nine detected conflicts out of 29). These results reinforce previous findings about the potential of using test -case generation to detect conflicts as a method that is versatile and requires only limited deployment effort in practice.
C1 [Da Silva, Leuson; Borba, Paulo; Maciel, Toni; Moisakis, Joao; Gomes, Aldiberg; Leite, Vinicius] Univ Fed Pernambuco, Ctr Informat, Recife, PE, Brazil.
   [Da Silva, Leuson] Polytech Montreal, Montreal, PQ, Canada.
   [Mahmood, Wardah; Berger, Thorsten] Chalmers Univ Gothenburg, Gothenburg, Sweden.
   [Berger, Thorsten] Ruhr Univ Bochum, Bochum, Germany.
C3 Universidade Federal de Pernambuco; Universite de Montreal;
   Polytechnique Montreal; Chalmers University of Technology; Ruhr
   University Bochum
RP Da Silva, L (corresponding author), Univ Fed Pernambuco, Ctr Informat, Recife, PE, Brazil.; Da Silva, L (corresponding author), Polytech Montreal, Montreal, PQ, Canada.
EM lmps2@cin.ufpe.br
OI Borba, Paulo/0000-0002-0381-2843
FU INES (National Software Engineering Institute); CNPq [309741/2013-0];
   FACEPE [IBPG-0692-1.03/17, APQ/0388-1.03/14]; CAPES; Swedish Research
   Council [257822902]; Wallenberg Academy
FX We thank Marcelo d'Amorim, Rohit Gheyi, Leonardo Fernandes, Breno
   Miranda, Leonardo Murta, and the anonymous reviewers for valuable
   comments to improve an earlier version of this paper. We thank Rafael
   Alves, Galileu Santos, Matheus Barbosa, and Thais Burity for their
   support when creating our dataset. We also thank INES (National Software
   Engineering Institute), the Brazilian research funding agencies CNPq
   (309741/2013-0) , FACEPE (IBPG-0692-1.03/17 and APQ/0388-1.03/14), and
   CAPES, as well as the Swedish Research Council (257822902) and the
   Wallenberg Academy.
CR Accioly P, 2018, EMPIR SOFTW ENG, V23, P2051, DOI 10.1007/s10664-017-9586-1
   Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   [Anonymous], 2024, Online Appendix
   [Anonymous], 2022, Jacoco
   Apel S., 2011, EUR SOFTW ENG C S FD
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Arcuri A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3477271
   Barros Filho R.S., 2017, Using Information Flow to Estimate Interference Between Developers Same-Method Contributions
   Bass L., 2016, DevOps: A Software Architect's Perspective
   Binkley D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P3, DOI 10.1145/201055.201056
   Bird C., 2012, S FDN SOFTW ENG
   Brun Y, 2013, IEEE T SOFTWARE ENG, V39, P1358, DOI 10.1109/TSE.2013.28
   Campos J., 2014, IEEE/ACM Int. Conference on Automated Software Engineering (ASE), P55
   Cavalcanti G, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1002, DOI 10.1109/ASE.2019.00097
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   Da Silva L, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2441
   Da Silva L, 2020, PROC IEEE INT CONF S, P174, DOI 10.1109/ICSME46990.2020.00026
   de Jesus GS, 2023, Arxiv, DOI arXiv:2310.04269
   de Souza C.R.B., 2003, INT ACM SIGGROUP C S
   Dias K, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106256
   Elbaum S., 2006, 06FSE14 SIGSOFT, P253
   Evans R.B., 2007, EUR SOFTW ENG C S FD
   Fowler M, 2017, Feature toggle
   Fraser G, 2008, INT CONF QUAL SOFTW, P189, DOI 10.1109/QSIC.2008.21
   Fraser G, 2018, LECT NOTES COMPUT SC, V11036, P106, DOI 10.1007/978-3-319-99241-9_5
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P611, DOI 10.1007/s10664-013-9288-2
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Grinter R. E., 1996, Computer Supported Cooperative Work (CSCW), V5, P447, DOI 10.1007/BF00136714
   Hejderup J, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111097
   Henderson F, 2020, Arxiv, DOI arXiv:1702.01715
   Hodgson P, 2017, Feature branching vs. feature flags: What's the right tool for the job?
   HORWITZ S, 1989, ACM T PROGR LANG SYS, V11, P345, DOI 10.1145/65979.65980
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P907, DOI 10.1145/2568225.2568300
   Nguyen HV, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P926, DOI 10.1145/2786805.2803208
   Jin W., 2010, INT C SOFTW TEST VER
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Khanna S, 2007, LECT NOTES COMPUT SC, V4855, P485
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Mahmood W, 2020, PROCEEDINGS OF THE 14TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '20), DOI 10.1145/3377024.3377047
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Nagappan M., 2013, 2013 9 JOINT M EUR S, P466, DOI [10.1145/2491411.2491415, DOI 10.1145/2491411.2491415]
   Owhadi-Kareshk M, 2019, INT SYMP EMP SOFTWAR, P363
   Pacheco C., 2007, ACM SIGPLAN C OBJ OR
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   Potvin R, 2016, COMMUN ACM, V59, P78, DOI 10.1145/2854146
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Shamshiri S, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1038, DOI 10.1145/2786805.2803196
   Shamshiri S, 2013, IEEE ICST WORKSHOP, P396, DOI 10.1109/ICSTW.2013.51
   Shen B, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360596
   Silva IPSC, 2017, 2017 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TESTING (AST), P38, DOI 10.1109/AST.2017.9
   Sousa M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276535
   Tavares AT, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1014, DOI 10.1109/ASE.2019.00098
   Tiwari D, 2022, IEEE T RELIAB, V71, P1381, DOI 10.1109/TR.2021.3101318
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Wasowski Andrzej, 2023, Domain-Specific Languages: Effective Modeling, Automation, and Reuse
   Wuensche T, 2020, IEEE INT CONF SOFTW, P353, DOI 10.1109/ICST46399.2020.00043
   Zimmermann T., 2007, INT C MIN SOFTW REP
NR 60
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112070
DI 10.1016/j.jss.2024.112070
EA MAY 2024
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TE4U4
UT WOS:001239581000001
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Ribeiro, E
   Restivo, A
   Ferreira, HS
   Dias, JP
AF Ribeiro, Eduardo
   Restivo, Andre
   Ferreira, Hugo Sereno
   Dias, Joao Pedro
TI WASMICO: Micro-containers in microcontrollers with WebAssembly
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Internet-of-Things; Containers; WebAssembly; Microcontroller; DevOps
AB The Internet -of -Things (IoT) has created a complex environment where hardware and software interact in complex ways. Despite being a prime candidate for applying well -established software engineering practices, IoT has not seen the same level of adoption as other areas, such as cloud development. This discrepancy is even more evident in the case of edge devices, where programming and managing applications can be challenging due to their heterogeneous nature and dependence on specific toolchains and languages. However, the emergence of WebAssembly as a viable solution for running high-level languages on some devices presents an opportunity to streamline development practices, such as DevOps. In this paper, we present WASMICO - a firmware and command -line utility that allows for the execution and management of application lifecycles in microcontrollers. Our solution has been benchmarked against other state-of-the-art tools, demonstrating its feasibility, novel features, and empirical evidence that it outperforms some of the most widely used solutions for running high-level code on these devices. Overall, our work aims to promote the use of wellestablished software engineering practices in the IoT domain, helping to bridge the gap between cloud and edge development.
C1 [Ribeiro, Eduardo; Restivo, Andre; Ferreira, Hugo Sereno; Dias, Joao Pedro] FEUP, DEI, Rua Dr Roberto Frias, Porto, Portugal.
   [Restivo, Andre] LIACC, Rua Dr Roberto Frias, Porto, Portugal.
   [Ferreira, Hugo Sereno] INESC TEC, Rua Dr Roberto Frias, Porto, Portugal.
C3 Universidade do Porto; Universidade do Porto; INESC TEC; Universidade do
   Porto
RP Dias, JP (corresponding author), FEUP, DEI, Rua Dr Roberto Frias, Porto, Portugal.
EM jpmdias@fe.up.pt
RI Dias, João Pedro/O-4128-2018; Restivo, André/A-4825-2009; Ferreira, Hugo
   Sereno/W-3035-2018
OI Dias, João Pedro/0000-0001-9066-6436; Restivo,
   André/0000-0002-1328-3391; Ferreira, Hugo Sereno/0000-0002-4963-3525
CR Adafruit Industries, 2021, ampy: Adafruit MicroPython tool
   [Anonymous], 2023, WASI: WebAssembly System Interface
   Arduino, 2023, About Arduino
   Aslam F, 2010, LECT NOTES COMPUT SC, V6131, P15, DOI 10.1007/978-3-642-13651-1_2
   Baccelli E, 2018, INT CONF PERVAS COMP
   Bormann C, 2012, IEEE INTERNET COMPUT, V16, P62, DOI 10.1109/MIC.2012.29
   Brouwers N, 2009, SENSYS 09: PROCEEDINGS OF THE 7TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS, P169
   Clang, 2023, Clang: a C language family frontend for LLVM
   ContikiOS, 2023, Contiki-NG, the OS for next generation IoT devices
   Dias JP, 2019, PROCEEDINGS OF THE 24TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2019), DOI 10.1145/3361149.3361165
   Dias JP, 2022, INTERNET THINGS-NETH, V19, DOI 10.1016/j.iot.2022.100529
   Erich FMA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1885
   Espressif Systems, 2023, ESP-IDF documentation
   Espressif Systems, 2023, SPIFFS filesystem
   Fleming M., 2017, Linux Weekly News
   FreeRTOS, 2023, FreeRTOS
   Gavrin Evgeny., 2015, Companion Proceedings of the 2015 ACM SIG-PLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity, SPLASH Companion 2015, P19
   Golioth, 2023, Golioth
   Haas A, 2017, ACM SIGPLAN NOTICES, V52, P185, DOI [10.1145/3062341.3062363, 10.1145/3140587.3062363]
   Hall D., 2011, Python-on-a-chip
   Hubschmann I., 2020, ESP32 for IoT: A complete guide
   Lwakatare LE, 2016, P ANN HICSS, P5437, DOI 10.1109/HICSS.2016.671
   MicroPython, 2023, MicroPython
   MicroPython, 2023, uasyncio: asynchronous I/O scheduler for MicroPython
   Ribeiro Eduardo, 2022, Zenodo, DOI 10.5281/ZENODO.6921110
   RIOT OS, 2023, MicroPython RIOT port
   RiotOS, 2023, RIOT-The friendly Operating System for the Internet of Things
   Silva Margarida, 2020, MobiQuitous '20: MobiQuitous 2020 - 17th EAI International Conference on Mobile and Ubiquitous Systems: Computing, Networking and Services, P225, DOI 10.1145/3448891.3448938
   Singh RG, 2019, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON MANAGED PROGRAMMING LANGUAGES AND RUNTIMES (MPLR '19), P27, DOI 10.1145/3357390.3361029
   Toit, 2023, Toit: Cloud-managed containers on the ESP32
   Toit, Toit programming language
   Tollervey N.H., 2017, Programming with MicroPython: Embedded Programming with Microcontrollers and Python
   Tsiftes N, 2018, J NETW COMPUT APPL, V118, P61, DOI 10.1016/j.jnca.2018.06.001
   wasm-opt, 2023, wasm-opt: Optimize WebAssembly binary files
   wasm-strip, 2021, wasm-strip: Remove sections of a WebAssembly binary file
   Wasm3, 2023, Wasm3: The fastest WebAssembly interpreter, and the most universal runtime
   Wasm3-arduino, 2023, Wasm3-arduino: The fastest WebAssembly interpreter for Arduino, PlatformIO, Particle
   WebAssembly, 2023, WebAssembly
   Zandberg K., 2021, arXiv
   Zandberg K, 2020, Arxiv, DOI arXiv:2011.12047
   zephyrproject, 2023, ZephyrRTOS
   Zhu LM, 2016, IEEE SOFTWARE, V33, P32, DOI 10.1109/MS.2016.81
NR 42
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112081
DI 10.1016/j.jss.2024.112081
EA MAY 2024
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SY0H5
UT WOS:001237888500002
DA 2024-08-05
ER

PT J
AU Frölich, D
   van Binsbergen, LT
AF Frolich, Damian
   van Binsbergen, L. Thomas
TI <i>iCoLa plus :</i> An extensible meta-language with support for
   exploratory language development
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Language composition; Domain-specific languages; Meta-languages;
   Exploratory language development; Syntax and semantics
AB Programming languages providing high-level abstractions can increase a programmers' productivity and the safety of a program. Language-oriented programming is a paradigm in which domain-specific languages are developed to solve problems within specific domains with (high-level) abstractions relevant to those domains. However, language development involves complex design and engineering processes. These processes can be simplified by reusing (parts of) existing languages and by offering language-parametric tooling. In this paper we present iCoLa(+), an extensible meta-language implemented in Haskell supporting incremental (meta-)programming based on reusable components. We demonstrate iCoLa(+) through the construction of the Imp, SIMPLE, and MiniJava languages via the composition and restriction of language fragments, demonstrate the variability of our approach through the construction of several languages using a fixed-set of operators, and demonstrate the different forms of extensions possible in iCoLa(+).
C1 [Frolich, Damian; van Binsbergen, L. Thomas] Univ Amsterdam, Informat Inst, Postbus 94216, NL-1090 GE Amsterdam, Netherlands.
C3 University of Amsterdam
RP Frölich, D (corresponding author), Univ Amsterdam, Informat Inst, Postbus 94216, NL-1090 GE Amsterdam, Netherlands.
EM dfrolich@acm.org
OI van Binsbergen, L. Thomas/0000-0001-8113-2221; Frolich,
   Damian/0000-0003-1016-5303
CR Afroozeh A., 2012, Lecture Notes in Computer Science, V7745, P224
   Ali H, 2022, INNOV SYST SOFTW ENG, V18, P5, DOI 10.1007/s11334-021-00425-3
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Appel A.W., 2002, Modern Compiler Implementation in Java, DOI [10.1017/CBO9780511811432, DOI 10.1017/CBO9780511811432]
   Atkinson C, 2001, UML, P19, DOI [DOI 10.1007/3-540-45441-1, DOI 10.1007/3-540-45441-1_3, 10.1007/3-540-45441-13]
   Brady E, 2013, ACM SIGPLAN NOTICES, V48, P133, DOI [10.1145/2544174.2500581, 10.1145/2500365.2500581]
   Butting A., 2020, INT C MOD DRIV ENG L, P35
   Cazzola W., 2012, Lecture Notes in Computer Science, V7306, P162, DOI DOI 10.1007/978-3-642-30564-1_11
   Cimini M, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P65, DOI 10.1145/3276604.3276983
   Clements Paul, 2002, Software Product Lines: Practices and Patterns
   Combemale B, 2018, COMPUT LANG SYST STR, V54, P139, DOI 10.1016/j.cl.2018.05.004
   de Lara J, 2022, PROCEEDINGS OF THE 25TH INTERNATIONAL ACM/IEEE CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022, P334, DOI 10.1145/3550355.3552444
   de Lara J, 2021, FORM ASP COMPUT, DOI 10.1007/s00165-021-00554-3
   de Lara J, 2020, LECT NOTES COMPUT SC, V12076, P161, DOI 10.1007/978-3-030-45234-6_8
   de Lara J, 2015, SOFTW SYST MODEL, V14, P429, DOI 10.1007/s10270-013-0367-z
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Degueule Thomas., 2015, SLE 2015 P 2015 ACM, P25, DOI DOI 10.1145/2814251.2814252
   Ekman T, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P1
   Erdweg S., 2012, P 12 WORKSH LANG DES, P1, DOI DOI 10.1145/2427048.2427055
   Erdweg S, 2013, LECT NOTES COMPUT SC, V8225, P197, DOI 10.1007/978-3-319-02654-1_11
   Erdweg S, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P391
   Frolich Damian, 2022, SLE 2022: Proceedings of the 15th ACM SIGPLAN International Conference on Software Language Engineering, P202, DOI 10.1145/3567512.3567529
   Frolich D, 2021, LECT NOTES COMPUT SC, V12834, P24, DOI 10.1007/978-3-030-83978-9_2
   GOGUEN JA, 1977, J ACM, V24, P68, DOI 10.1145/321992.321997
   Guerra E, 2022, IEEE T SOFTWARE ENG, V48, P397, DOI 10.1109/TSE.2020.2989506
   HEERING J, 1989, SIGPLAN NOTICES, V24, P43, DOI 10.1145/71605.71607
   Hudak Paul, 1996, ACM Comput. Surv, V28, P196, DOI [10.1145/242224.242477, DOI 10.1145/242224.242477]
   Kats LCL, 2010, ACM SIGPLAN NOTICES, V45, P444, DOI 10.1145/1932682.1869497
   Kery MB, 2017, S VIS LANG HUM CEN C, P25, DOI 10.1109/VLHCC.2017.8103446
   Klint P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P176, DOI 10.1145/151257.151260
   Kluyver T, 2016, POSITIONING AND POWER IN ACADEMIC PUBLISHING: PLAYERS, AGENTS AND AGENDAS, P87, DOI 10.3233/978-1-61499-649-1-87
   Kuhn T., 2015, P 19 INT C SOFTW PRO, P71, DOI DOI 10.1145/2791060.2791092
   Liebig J., 2013, P 7 INT WORKSH VAR M, P1, DOI [10.1145/2430502.2430518, DOI 10.1145/2430502.2430518]
   MEIJER E, 1991, LECT NOTES COMPUT SC, V523, P124
   Méndez-Acuña D, 2016, COMPUT LANG SYST STR, V46, P206, DOI 10.1016/j.cl.2016.09.004
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mernik M, 2005, COMPUT LANG SYST STR, V31, P1, DOI 10.1016/j.cl.2004.02.001
   Mernik M, 2002, LECT NOTES COMPUT SC, V2304, P1
   Mernik M., 2000, Inf. (Slovenia), V24
   Mosses P.D., 2021, Funcons-Beta
   Mosses P.D., 2021, Lecture Notes in Computer Science, V13036, P296, DOI [10.1007/978-3-030-89159-6_19, DOI 10.1007/978-3-030-89159-6_19]
   Mosses P.D., 1990, HDB THEORETICAL COMP, VB, P575, DOI DOI 10.1016/B978-0-444-88074-1.50016-0
   Mosses PD, 2019, J COMPUT LANG, V50, P39, DOI 10.1016/j.jvlc.2018.11.003
   Neron P, 2015, LECT NOTES COMPUT SC, V9032, P205, DOI 10.1007/978-3-662-46669-8_9
   Oliveira BCDS, 2012, LECT NOTES COMPUT SC, V7313, P2, DOI 10.1007/978-3-642-31057-7_2
   Plotkin G, 2009, LECT NOTES COMPUT SC, V5502, P80, DOI 10.1007/978-3-642-00590-9_7
   Plotkin Gordon D., 2001, Lecture Notes in Computer Science, V2030, P1, DOI [10.1007/3-540-45315-6_1, DOI 10.1007/3-540-45315-6_1]
   Rein P., 2018, Program. J, V3, p1:1, DOI DOI 10.22152/PROGRAMMING-JOURNAL.ORG/2019/3/1
   Rosu G, 2014, ELECTRON NOTES THEOR, V304, P3, DOI 10.1016/j.entcs.2014.05.002
   Rosu G, 2010, J LOGIC ALGEBR PROGR, V79, P397, DOI 10.1016/j.jlap.2010.03.012
   Scott E, 2010, ELECTRON NOTES THEOR, V253, P177, DOI 10.1016/j.entcs.2010.08.041
   Swierstra W, 2008, J FUNCT PROGRAM, V18, P423, DOI 10.1017/S0956796808006758
   Tobin-Hochstadt S, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P132
   Tratt L, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1391956.1391958
   Van binsbergen L. Thomas, 2022, SLE 2022: Proceedings of the 15th ACM SIGPLAN International Conference on Software Language Engineering, P175, DOI 10.1145/3567512.3567527
   van Binsbergen LT, 2020, PROCEEDINGS OF THE 2020 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD! '20), P84, DOI 10.1145/3426428.3426917
   van Binsbergen LT, 2020, J COMPUT LANG, V58, DOI 10.1016/j.cola.2020.100945
   van Binsbergen LT, 2019, J LOG ALGEBR METHODS, V103, P184, DOI 10.1016/j.jlamp.2018.12.004
   van Binsbergen LT, 2018, PROCEEDINGS OF THE 17TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'18), P168, DOI 10.1145/3278122.3278132
   van den Berg B, 2021, LECT NOTES COMPUT SC, V13008, P182, DOI 10.1007/978-3-030-89051-3_11
   Van der Rest C, 2022, LECT NOTES COMPUT SC, V13401, P18, DOI 10.1007/978-3-031-21314-4_2
   Voelter M., 2010, Software Language Engineering, SLE, V16
   WARD MP, 1994, SOFTWARE-CONC TOOL, V15, P147
NR 63
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111979
DI 10.1016/j.jss.2024.111979March
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NC6P0
UT WOS:001198291600001
DA 2024-08-05
ER

PT J
AU Lathouwers, S
   Huisman, M
AF Lathouwers, Sophie
   Huisman, Marieke
TI Survey of annotation generators for deductive verifiers
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Deductive verification; Specifications; Annotations; Specification
   inference; Specification generation; Survey
ID VERIFICATION; JML; SPECIFICATION; INVARIANTS; INFERENCE
AB Deductive verifiers require intensive user interaction in the form of writing precise specifications, thereby limiting their use in practice. While many solutions have been proposed to generate specifications, their evaluations and comparisons to other tools are limited. As a result, it is unclear what the best approaches for specification inference are and how these impact the overall specification writing process. In this paper we take steps to address this problem by providing an overview of specification inference tools that can be used for deductive verification of Java programs. For each tool, we discuss its approach to specification inference and identify its advantages and disadvantages. Moreover, we identify the types of specifications that it infers and use this to estimate the impact of the tool on the overall specification writing process. Finally, we identify the ideal features of a specification generator and discuss important challenges for future research.
C1 [Lathouwers, Sophie; Huisman, Marieke] Univ Twente, EEMCS FMT Zilverling, POB 217, NL-7500AE Enschede, Netherlands.
RP Lathouwers, S (corresponding author), Univ Twente, EEMCS FMT Zilverling, POB 217, NL-7500AE Enschede, Netherlands.
EM sophie.lathouwers@gmail.com; m.huisman@utwente.nl
OI Huisman, Marieke/0000-0003-4467-072X
FU Dutch Research Council (NWO) [VICI 639.023.710]
FX This research was supported by a grant from the Dutch Research Council
   (NWO) : VICI 639.023.710 Mercedes project.
CR Ahrendt W, 2015, LECT NOTES COMPUT SC, V9450, P434, DOI 10.1007/978-3-662-48899-7_30
   Alsaeed Z, 2018, 2018 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON API USAGE AND EVOLUTION (WAPI), P23, DOI 10.1145/3194793.3194797
   Alshnakat Anoud, 2020, Deductive Software Verification: Future PerspectivesReflections on the Occasion of 20 Years of KeY, P149
   [Anonymous], 2008, JML Reference Manual
   Armborst L, 2024, LECT NOTES COMPUT SC, V14300, P153, DOI 10.1007/978-3-031-47705-8_9
   Astrauskas V, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360573
   Barnett M, 2006, LECT NOTES COMPUT SC, V4111, P364
   Baumann C, 2012, ELECTRON PROC THEOR, P18, DOI 10.4204/EPTCS.102.4
   Beckert Bernhard, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Verification. Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12476), P60, DOI 10.1007/978-3-030-61362-4_4
   Beckert B, 2014, IEEE INTELL SYST, V29, P20, DOI 10.1109/MIS.2014.3
   Betts A, 2012, ACM SIGPLAN NOTICES, V47, P113, DOI 10.1145/2398857.2384625
   Bierhoff K, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P971
   Blasi A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P242, DOI 10.1145/3213846.3213872
   Blom Stefan, 2017, Integrated Formal Methods. 13th International Conference, IFM 2017. Proceedings: LNCS 10510, P102, DOI 10.1007/978-3-319-66845-1_7
   Boockmann Jan H., 2018, Leveraging Applications of Formal Methods, Verification and Validation. Verification. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11245), P64, DOI 10.1007/978-3-030-03421-4_5
   Boockmann Jan H, 2020, EPiC Series in Computing, V73, P151
   Boshernitsan M., 2006, ISSTA, P169
   Calcagno C, 2011, J ACM, V58, DOI 10.1145/2049697.2049700
   Catano Nestor, 2012, P ACM S APPL COMPUTI, P1271
   Chalin P, 2006, LECT NOTES COMPUT SC, V4111, P342
   Cok DR, 2014, ELECTRON P THEOR COM, P79, DOI 10.4204/EPTCS.149.8
   Csallner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P281, DOI 10.1145/1368088.1368127
   de Oliveira S, 2016, LECT NOTES COMPUT SC, V9938, P479, DOI 10.1007/978-3-319-46520-3_30
   Degiovanni Renzo, 2023, arXiv
   Dohrau J, 2018, LECT NOTES COMPUT SC, V10982, P55, DOI 10.1007/978-3-319-96142-2_7
   Ernst G, 2022, LECT NOTES COMPUT SC, V13182, P69, DOI 10.1007/978-3-030-94583-1_4
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Fiala J, 2023, P ACM PROGRAM LANG, V7, DOI 10.1145/3591278
   Filliâtre JC, 2007, LECT NOTES COMPUT SC, V4590, P173
   Flanagan C, 2001, LNCS, V2021, P500, DOI DOI 10.1007/3-540-45251-6_29
   Fraser G., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P31, DOI 10.1109/QSIC.2011.19
   Furia CA, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2506375
   Galeotti Juan Pablo, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P48, DOI 10.1007/978-3-319-13338-6_4
   Garg Aayush, 2023, Assertion inferring mutants
   Giorgetti A, 2006, LECT NOTES COMPUT SC, V3922, P373
   Grunwald Daniel, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P99, DOI 10.1007/978-3-319-13338-6_9
   Gurov D, 2017, LECT NOTES COMPUT SC, V10471, P3, DOI 10.1007/978-3-319-67113-0_1
   Hamie Ali, 2004, P 2004 ACM S APPL CO, P1531
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   Nguyen HA, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P166, DOI 10.1145/2635868.2635924
   Huisman Marieke, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Applications. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12478), P273, DOI 10.1007/978-3-030-61467-6_18
   Huisman M, 2009, LECT NOTES COMPUT SC, V5503, P340
   Humenberger A, 2018, LECT NOTES ARTIF INT, V11006, P111, DOI 10.1007/978-3-319-96812-4_10
   Jacobs B, 2011, LECT NOTES COMPUT SC, V6617, P41, DOI 10.1007/978-3-642-20398-5_4
   Johansson Moa, 2019, Intelligent Computer Mathematics. 12th International Conference, CICM 2019. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11617), P125, DOI 10.1007/978-3-030-23250-4_9
   Knüppel A, 2018, ELECTRON P THEOR COM, P53, DOI 10.4204/EPTCS.284.5
   Lathouwers S, 2022, FME WORKS FORM, P69, DOI 10.1145/3524482.3527652
   Le QL, 2014, LECT NOTES COMPUT SC, V8559, P52, DOI 10.1007/978-3-319-08867-9_4
   Le TC, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P788, DOI 10.1145/3314221.3314634
   Leavens Gary T., 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI DOI 10.1145/1127878.1127884
   Luo CG, 2010, J SYMB COMPUT, V45, P1163, DOI 10.1016/j.jsc.2010.06.003
   Meyer B., 2002, Design by contract
   Mohsen M, 2016, LECT NOTES COMPUT SC, V9933, P56, DOI 10.1007/978-3-319-45943-1_4
   Molina F, 2022, PROC INT CONF SOFTW, P1008, DOI 10.1145/3510003.3510120
   Molina F, 2021, PROC INT CONF SOFTW, P1223, DOI 10.1109/ICSE43902.2021.00112
   Müller P, 2016, LECT NOTES COMPUT SC, V9583, P41, DOI 10.1007/978-3-662-49122-5_2
   Nimmer J. W., 2002, Software Engineering Notes, V27, P11, DOI 10.1145/605466.605469
   OpenAI, 2022, Introducing chatgpt
   Padhi S, 2016, ACM SIGPLAN NOTICES, V51, P42, DOI [10.1145/2980983.2908099, 10.1145/2908080.2908099]
   Pham LH, 2017, PROC IEEE ACM INT C, P155, DOI 10.1109/ICSE-C.2017.87
   Polikarpova N, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P93
   Raghavan Arun, 2005, Comput. Sci. Tech. Rep. 345
   Richter C, 2019, LECT NOTES COMPUT SC, V11429, P229, DOI 10.1007/978-3-030-17502-3_19
   Sadiq A, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1098, DOI 10.1109/ASE.2019.00111
   Scheben Christoph, 2014, Ph.D. thesis
   Scott Joseph, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12652), P303, DOI 10.1007/978-3-030-72013-1_16
   Si XJ, 2018, ADV NEUR IN, V31
   Singher E, 2021, LECT NOTES COMPUT SC, V12760, P125, DOI 10.1007/978-3-030-81688-9_6
   Singleton JL, 2018, PROC IEEE ACM INT C, P313, DOI 10.1145/3183440.3194986
   Srivastava S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P223, DOI 10.1145/1542476.1542501
   Tabar AH, 2022, FME WORKS FORM, P34, DOI 10.1145/3524482.3527649
   Nguyen T, 2017, IEEE INT CONF AUTOM, P804
   Nguyen T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556782
   Tran-Jorgensen PWV, 2018, INT J SOFTW TOOLS TE, V20, P211, DOI 10.1007/s10009-017-0448-3
   Vogels F, 2011, LECT NOTES COMPUT SC, V6722, P319, DOI 10.1007/978-3-642-21461-5_21
   Wasser Nathan Daniel, 2017, Ph.D. thesis
   Weiss B, 2009, LECT NOTES COMPUT SC, V5423, P136
   Zhai J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P25, DOI 10.1145/3368089.3409716
NR 78
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111972
DI 10.1016/j.jss.2024.111972
EA FEB 2024
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ2Y9
UT WOS:001200032100001
OA hybrid
DA 2024-08-05
ER

PT J
AU Zhu, JF
   Xiao, GP
   Zheng, Z
   Sui, YL
AF Zhu, Jianfei
   Xiao, Guanping
   Zheng, Zheng
   Sui, Yulei
TI Deep semi-supervised learning for recovering traceability links between
   issues and commits ☆
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Traceability links recovery; Deep semi-supervised learning;
   Self-training; Label propagation; Issue and commit
AB Traceability links between issues and commits record valuable information about the evolutionary history of software projects. Unfortunately, these links are often missing. While deep learning stands as the current stateof-the-art (SOTA) in automated traceability links recovery (TLR), its effectiveness is faced with the practical problem of limited labeled data during training. To overcome this challenge, in this paper, we propose DSSLink , a novel method based on deep semi -supervised learning, enhancing deep -learning -based link recovery tasks. DSSLink first learns knowledge from labeled data through pre -trained model and then leverages deep semisupervised learning to infer pseudo -labels on unlabeled data. The extended dataset of pseudo -labeled and labeled data re-trains the deep learning model in an iterative process. Our extensive evaluations are conducted on two SOTA traceability methods (T -BERT and BTLink) across four GitHub projects and 11 Apache projects. Specifically, the maximum F1 -score improvements for GitHub and Apache projects reached 22.9% and 43.5%, respectively. Evaluation results show that DSSLink is effective in enhancing TLR performance and outperforms TraceFUN, a recent approach that utilizes unlabeled data for TLR. The source code of DSSLink is available at https://github.com/DSSLink.
C1 [Zhu, Jianfei; Xiao, Guanping] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211106, Peoples R China.
   [Zheng, Zheng] Beihang Univ, Sch Automat Sci & Elect Engn, Beijing 100191, Peoples R China.
   [Sui, Yulei] Univ New South Wales, Sch Comp Sci & Engn, Sydney 2052, Australia.
C3 Nanjing University of Aeronautics & Astronautics; Beihang University;
   University of New South Wales Sydney
RP Xiao, GP (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211106, Peoples R China.
EM gpxiao@nuaa.edu.cn
OI Xiao, Guanping/0000-0002-9419-4058
FU National Natural Science Foundation of China [62002163, 61772055];
   Natural Science Foundation of Jiangsu Province [BK20200441]; Australian
   Research Council [DP210101348, FT220100391]; Postgraduate Research &
   Practice Innovation Program of NUAA [XCXJH20221615]; Australian Research
   Council [FT220100391] Funding Source: Australian Research Council
FX We thank the anonymous reviewers for their valuable comments and
   suggestions. This work was supported in part by the National Natural
   Science Foundation of China under Grants 62002163 and 61772055, Natural
   Science Foundation of Jiangsu Province under Grant BK20200441,
   Australian Research Council under Grants DP210101348 and FT220100391,
   and Postgraduate Research & Practice Innovation Program of NUAA under
   Grant XCXJH20221615.
CR Arnold A., 2007, 7th IEEE International Conference on Data Mining Workshops, P77
   Bachmann A., 2010, P FAST SOFTW ENCR WO, P97
   Behnamghader P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P251, DOI 10.1109/QRS.2017.36
   Belkin M, 2006, J MACH LEARN RES, V7, P2399
   Berthelot D., 2019, P INT C LEARN REPR I
   Berthelot D, 2019, ADV NEUR IN, V32
   Bugzilla, 2023, A web-based general-purpose bug tracking system and testing tool
   Chapelle O., 2002, Adv. Neural Inf. Process. Syst., V15
   Chapelle O., 2009, SEMISUPERVISED LEARN, V20, P542, DOI 10.1109/TNN.2009.2015974
   Chen JA, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P2147
   Chen YH, 2023, PROC CVPR IEEE, P7548, DOI 10.1109/CVPR52729.2023.00729
   Dong LM, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P570, DOI 10.1145/3540250.3549151
   Dong ZM, 2023, Soft Anal Evol Reeng, P379, DOI 10.1109/SANER56733.2023.00043
   Git, 2023, A free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency
   Hayes BK, 2010, WIRES COGN SCI, V1, P278, DOI 10.1002/wcs.44
   Heinemann L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P592, DOI 10.1145/2591062.2591068
   Iscen A, 2019, PROC CVPR IEEE, P5065, DOI 10.1109/CVPR.2019.00521
   Lan JP, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10342-7
   Le TDB, 2015, INT C PROGRAM COMPRE, P36, DOI 10.1109/ICPC.2015.13
   Lee D.H., 2013, WORKSH CHALL REPR LE, P07
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Liao ZF, 2018, IEEE ACCESS, V6, P24003, DOI 10.1109/ACCESS.2018.2810295
   Lin JF, 2021, PROC INT CONF SOFTW, P324, DOI 10.1109/ICSE43902.2021.00040
   Mazrae PR, 2021, PROC IEEE INT CONF S, P263, DOI 10.1109/ICSME52107.2021.00030
   Mills C, 2019, PROC IEEE INT CONF S, P103, DOI 10.1109/ICSME.2019.00020
   Miyato T, 2019, IEEE T PATTERN ANAL, V41, P1979, DOI 10.1109/TPAMI.2018.2858821
   Nguyen T.T., 2012, P 20 ACM SIGSOFT INT, P1
   Ruan H, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110406
   Sohn K., 2020, Advances in Neural Information Processing Systems, P596
   Sun Y, 2017, IEEE INT CONF AUTOM, P147, DOI 10.1109/ASE.2017.8115627
   Sun Y, 2017, INFORM SOFTWARE TECH, V84, P33, DOI 10.1016/j.infsof.2016.11.010
   Tarvainen A, 2017, ADV NEUR IN, V30
   Tian FC, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2374
   Tian YC, 2022, PROC INT CONF SOFTW, P2389, DOI 10.1145/3510003.3510205
   Wong TT, 2020, IEEE T KNOWL DATA EN, V32, P1586, DOI 10.1109/TKDE.2019.2912815
   Wu R, 2011, SIGSOFT FSE, P15, DOI DOI 10.1145/2025113.2025120
   Xie Q., 2020, Advances in Neural Information Processing Systems, V33, P6256
   Yang XL, 2023, IEEE T KNOWL DATA EN, V35, P8934, DOI 10.1109/TKDE.2022.3220219
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yu XS, 2021, IEEE I C SQRS-C, P388, DOI 10.1109/QRS-C55045.2021.00064
   Zhang B., 2021, Advances in Neural Information Processing Systems, V34, P18408, DOI DOI 10.48550/ARXIV.2110.08263
   Zheng MK, 2022, PROC CVPR IEEE, P14451, DOI 10.1109/CVPR52688.2022.01407
   Zhu JF, 2022, PROC INT SYMP SOFTW, P446, DOI 10.1109/ISSRE55969.2022.00050
NR 43
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112109
DI 10.1016/j.jss.2024.112109
EA JUN 2024
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XB5D9
UT WOS:001259228000001
DA 2024-08-05
ER

PT J
AU Wei, CQ
   Yao, XJ
   Gong, DW
   Liu, H
   Dang, XY
AF Wei, Changqing
   Yao, Xiangjuan
   Gong, Dunwei
   Liu, Huai
   Dang, Xiangying
TI Set evolution based test data generation for killing stubborn mutants
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Mutation testing; Set evolution; Stubborn mutants; Test data generation
AB Mutation testing is a fault-based and powerful software testing technique, but the large number of mutations can result in extremely high costs. To reduce the cost of mutation testing, researchers attempt to identify stubborn mutants and generate test data to kill them, in order to achieve the same testing effect. However, existing methods suffer from inaccurate identification of stubborn mutants and low productiveness in generating test data, which will seriously affect the effectiveness and efficiency of mutation testing. Therefore, we propose a new method of generating test data for killing stubborn mutants based on set evolution, namely TDGMSE. We first propose an integrated indicator to identify stubborn mutants. Then, we establish a constrained multiobjective model for generating test data of killing stubborn mutants. Finally, we develop a new genetic algorithm based on set evolution to solve the mathematical model. The results on 14 programs depict that the average false positive (or negative) rate of TDGMSE is decreased about 81.87% (or 32.34%); the success rate of TDGMSE is 99.22%; and the average number of iterations of TDGMSE is 16132.23, which is lowest of all methods. The research highlights several potential research directions for mutation testing.
C1 [Wei, Changqing; Yao, Xiangjuan] China Univ Min & Technol, Sch Math, Xuzhou 221116, Peoples R China.
   [Gong, Dunwei] Qingdao Univ Sci & Technol, Coll Automat & Elect Engn, Qingdao 266061, Peoples R China.
   [Liu, Huai] Swinburne Univ Technol, Dept Comp Technol, Melbourne, Australia.
   [Dang, Xiangying] Xuzhou Univ Technol, Sch Informat Engn, Sch Big Data, Xuzhou 221018, Peoples R China.
C3 China University of Mining & Technology; Qingdao University of Science &
   Technology; Swinburne University of Technology; Xuzhou University of
   Technology
RP Yao, XJ (corresponding author), China Univ Min & Technol, Sch Math, Xuzhou 221116, Peoples R China.
EM yaoxj@cumt.edu.cn
RI Gong, Dunwei/HDO-3693-2022; Liu, Huai/E-2060-2013
OI Liu, Huai/0000-0003-3125-4399
FU National Natural Science Foundation of China [62373357, 42230704];
   Xuzhou Science and Tech-nology Plan Project [KC21007]; Suzhou municipal
   science and technology plan project [SYG202129, SYG202351]; Major
   Project of Natural Science Research of the Jiangsu Higher Education
   Institutions of China [21KJA520006]
FX This work was supported by National Natural Science Foundation of China
   (No. 62373357 and 42230704) , the Xuzhou Science and Tech-nology Plan
   Project under Grant (No. KC21007) and Suzhou municipal science and
   technology plan project (No. SYG202129 and SYG202351) , and the Major
   Project of Natural Science Research of the Jiangsu Higher Education
   Institutions of China under Grant 21KJA520006.
CR Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Arasteh B, 2023, J ELECTRON TEST, V39, P347, DOI 10.1007/s10836-023-06070-x
   Arasteh B, 2022, J ELECTRON TEST, V38, P289, DOI 10.1007/s10836-022-06008-9
   Baker R, 2013, IEEE T SOFTWARE ENG, V39, P787, DOI 10.1109/TSE.2012.56
   Chekam TT, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3425497
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Chen X., 2012, J. Front. Comput. Sci. Technol., V6, P19
   Dang XY, 2022, IEEE T SOFTWARE ENG, V48, P2141, DOI 10.1109/TSE.2021.3052987
   Dang XY, 2020, IEEE T RELIAB, V69, P334, DOI 10.1109/TR.2019.2922684
   Dave M, 2016, COMM COM INF SC, V628, P373, DOI 10.1007/978-981-10-3433-6_45
   Delgado-Pérez P, 2018, IEEE T RELIAB, V67, P1406, DOI 10.1109/TR.2018.2864678
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Derezinska A, 2008, DEPCOS - RELCOMEX 2008: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON DEPENDABILITY OF COMPUTER SYSTEMS, P261, DOI 10.1109/DepCoS-RELCOMEX.2008.51
   Feng X, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P59, DOI 10.1109/TAIC-PART.2008.8
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P182, DOI 10.1109/ICSTW.2010.31
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Liu S., 1987, Comput. Eng., P26
   Lu Qiang Lu Qiang, 2017, Chemistry and Industry of Forest Products, V37, P1
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Matnei Filho Rui A., 2016, Journal of Software Engineering Research and Development, V4, DOI 10.1186/s40411-016-0030-9
   Hosseini SMJ, 2021, DATA TECHNOL APPL, V55, P118, DOI 10.1108/DTA-03-2020-0073
   Namin AS, 2015, SOFTW TEST VERIF REL, V25, P572, DOI 10.1002/stvr.1542
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A.J., 1988, Automatic Test Data Generation
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   Pacheco C., 2007, COMP 22 ANN ACM SIGP, P1
   Patrick M, 2013, IEEE ICST WORKSHOP, P53, DOI 10.1109/ICSTW.2013.14
   Petrovic G, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P163, DOI 10.1145/3183519.3183521
   Shan J., 2008, J. Comput. Sci., V31, P1025
   Silva RA, 2017, INFORM SOFTWARE TECH, V81, P19, DOI 10.1016/j.infsof.2016.01.017
   Song JS, 2006, IEICE T INF SYST, VE89D, P2637, DOI 10.1093/ietisy/e89-d.10.2637
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Wei CQ, 2021, INFORM SOFTWARE TECH, V132, DOI 10.1016/j.infsof.2020.106502
   Yao XJ, 2022, IEEE T SOFTWARE ENG, V48, P1169, DOI 10.1109/TSE.2020.3014960
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yao XJ, 2015, IET SOFTW, V9, P103, DOI 10.1049/iet-sen.2014.0058
   Yao XJ, 2014, COMPUT INTEL NEUROSC, V2014, DOI 10.1155/2014/591294
   [姚香娟 Yao Xiangjuan], 2012, [电子学报, Acta Electronica Sinica], V40, P103
   [叶菁 YE Jing], 2009, [福州大学学报. 自然科学版, Journal of Fuzhou University], V37, P808
   Yu W., 2001, Comput. Eng., V27, P3
   Zhang Chen, 2009, Computer Engineering and Design, V30, P5471
   Zhang G., 2015, J. Comput. Sci., V38, P1
   Zheng H, 2010, 2ND IEEE INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL (ICACC 2010), VOL. 2, P431, DOI 10.1109/ICACC.2010.5486640
NR 48
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112121
DI 10.1016/j.jss.2024.112121
EA JUN 2024
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WC2Y4
UT WOS:001252616000001
DA 2024-08-05
ER

PT J
AU Du, XZ
   Zhang, SM
   Zhou, YR
   Du, HY
AF Du, Xiaozhi
   Zhang, Shiming
   Zhou, Yanrong
   Du, Hongyuan
TI A vulnerability severity prediction method based on bimodal data and
   multi-task learning
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Vulnerability severity prediction; Bimodal data; Multi -task learning;
   GraphCodeBert
ID NEURAL-NETWORK; SOFTWARE VULNERABILITY
AB Facing the increasing number of software vulnerabilities, the automatic analysis of vulnerabilities has become an important task in the field of software security. However, the existing severity prediction methods are mainly based on vulnerability descriptions and ignore the relevant features of vulnerability code, which only includes unimodal information and result in low prediction accuracy. This paper proposes a vulnerability severity prediction method based on bimodal data and multi-task learning. First the bimodal data, which consists of the description and source code of each vulnerability, is preprocessed. Next the GraphCodeBert is used for the word embedding module to extract different vulnerability features from the bimodal data. Then the Bi-GRU with attention mechanism is adopted for further feature extraction of vulnerability severity. Considering the strong correlation between the two tasks of vulnerability severity prediction and exploitability prediction, this paper proposes a multi-task learning approach, which allows the model to learn the connection and shared information between different tasks through a hard parameter sharing strategy, so as to achieve more accurate and reliable prediction of vulnerability severity. Experimental results show that the severity prediction method proposed in this paper outperforms state-of-the-art methods, and can achieve an average F1 score of 93.83 % on the public vulnerability dataset.
C1 [Du, Xiaozhi; Zhang, Shiming; Zhou, Yanrong; Du, Hongyuan] Xi An Jiao Tong Univ, Sch Software Engn, Xian 710049, Shaanxi, Peoples R China.
C3 Xi'an Jiaotong University
RP Du, XZ (corresponding author), Xi An Jiao Tong Univ, Sch Software Engn, Xian 710049, Shaanxi, Peoples R China.
EM xzdu@xjtu.edu.cn
OI Du, Xiaozhi/0000-0002-2574-9603
FU Chinese National Natural Science Foundation [12275208]
FX This work was partially supported by the Chinese National Natural
   Science Foundation under Grant 12275208.
CR Aivatoglou G, 2022, MULTIMED TOOLS APPL, V81, P9459, DOI 10.1007/s11042-021-11073-x
   [Anonymous], 2022, ExploitDB[EB/OL]
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chen JF, 2023, J LOG ALGEBR METHODS, V132, DOI 10.1016/j.jlamp.2023.100859
   Chen JF, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110616
   Chen JL, 2019, RELIAB ENG SYST SAFE, V185, P372, DOI 10.1016/j.ress.2019.01.006
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Chung J, 2014, PREPRINT
   Dong YK, 2023, INFORM SOFTWARE TECH, V163, DOI 10.1016/j.infsof.2023.107290
   Du X., 2023, Github repository
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Graves A, 2005, NEURAL NETWORKS, V18, P602, DOI 10.1016/j.neunet.2005.06.042
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Guo D., 2020, INT C LEARN REPR
   Hadi MA, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10314-x
   Han X, 2023, NEUROCOMPUTING, V515, P89, DOI 10.1016/j.neucom.2022.09.136
   Han ZB, 2017, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2017.52
   Hao JW, 2023, INFORM SOFTWARE TECH, V161, DOI 10.1016/j.infsof.2023.107247
   Hore S, 2023, EXPERT SYST APPL, V221, DOI 10.1016/j.eswa.2023.119734
   Jabeen Gul, 2021, International Journal of Information and Computer Security, P109, DOI 10.1504/IJICS.2021.116302
   Jiang YN, 2022, ARRAY-NY, V15, DOI 10.1016/j.array.2022.100209
   Kai Liu, 2019, 2019 5th International Conference on Big Data and Information Analytics (BigDIA). Proceedings, P114, DOI 10.1109/BigDIA.2019.8802851
   Kudjo PK, 2020, SOFTWARE QUAL J, V28, P1413, DOI 10.1007/s11219-019-09490-1
   Li Hao, 2022, 2022 IEEE 22nd International Conference on Communication Technology (ICCT), P1300, DOI 10.1109/ICCT56141.2022.10072487
   Li X, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11073201
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Liu C, 2023, J INTELL INF SYST, V60, P137, DOI 10.1007/s10844-022-00733-5
   Lu S., 2023, 2023 INT C DAT SCI N, P1
   Luo Y, 2022, PROCEEDINGS OF THE 38TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, ACSAC 2022, P497, DOI 10.1145/3564625.3564655
   Malhotra Ruchika, 2023, 2023 13th International Conference on Cloud Computing, Data Science & Engineering (Confluence), P293, DOI 10.1109/Confluence56041.2023.10048868
   Malhotra Ruchika, 2021, Proceedings of International Conference on Recent Trends in Machine Learning, IoT, Smart Cities and Applications. ICMISC 2020. Advances in Intelligent Systems and Computing (AISC 1245), P453, DOI 10.1007/978-981-15-7234-0_41
   Nakagawa S, 2019, IEICE T INF SYST, VE102D, P1679, DOI 10.1587/transinf.2018OFL0006
   Napier K, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10276-6
   Peichao Wang, 2019, 2019 Eleventh International Conference on Advanced Computational Intelligence (ICACI), P72, DOI 10.1109/ICACI.2019.8778469
   Sahin SE, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P244, DOI 10.1145/3319008.3319033
   Sajjad H, 2022, COMPUT SPEECH LANG, V77, DOI 10.1016/j.csl.2022.101429
   Sharma R, 2021, INT J SYST ASSUR ENG, V12, P58, DOI 10.1007/s13198-020-01021-7
   Suzuki J, 2023, INFORM PROCESS MANAG, V60, DOI 10.1016/j.ipm.2022.103249
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang HT, 2021, IEEE T INF FOREN SEC, V16, P1943, DOI 10.1109/TIFS.2020.3044773
   Wu JJ, 2021, Arxiv, DOI arXiv:2104.11230
   Xuming Ni, 2022, 2022 International Conference on Computer Engineering and Artificial Intelligence (ICCEAI), P711, DOI 10.1109/ICCEAI55464.2022.00151
   Zeng P, 2020, IEEE ACCESS, V8, P197158, DOI 10.1109/ACCESS.2020.3034766
   Zhou D, 2022, RELIAB ENG SYST SAFE, V228, DOI 10.1016/j.ress.2022.108750
   Zhou YQ, 2019, ADV NEUR IN, V32
   Ziems N, 2021, IEEE CONF COMPUT, DOI 10.1109/INFOCOMWKSHPS51825.2021.9484500
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 47
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112039
DI 10.1016/j.jss.2024.112039
EA APR 2024
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RF5I3
UT WOS:001226261700001
DA 2024-08-05
ER

PT J
AU Liu, MG
   Huang, XL
   He, W
   Xie, YB
   Zhang, JM
   Jing, X
   Chen, ZP
   Ma, Y
AF Liu, Mugeng
   Huang, Xiaolong
   He, Wei
   Xie, Yibing
   Zhang, Jie M.
   Jing, Xiang
   Chen, Zhenpeng
   Ma, Yun
TI Research artifacts in software engineering publications: Status and
   trends*
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Research artifact; Empirical study; Software engineering; Code smell
AB The Software Engineering (SE) community has been embracing the open science policy and encouraging researchers to disclose artifacts in their publications. However, the status and trends of artifact practice and quality remain unclear, lacking insights on further improvement. In this paper, we present an empirical study to characterize the research artifacts in SE publications. Specifically, we manually collect 1,487 artifacts from all 2,196 papers published in top-tier SE conferences (ASE, FSE, ICSE, and ISSTA) from 2017 to 2022. We investigate the common practices (e.g., URL location and format, storage websites), maintenance activities (e.g., last update time and URL validity), popularity (e.g., the number of stars on GitHub and characteristics), and quality (e.g., documentation and code smell) of these artifacts. Based on our analysis, we reveal a rise in publications providing artifacts. The usage of Zenodo for sharing artifacts has significantly increased. However, artifacts stored in GitHub tend to receive few stars, indicating a limited influence on real-world SE applications. We summarize the results and provide suggestions to different stakeholders in conjunction with current guidelines.
C1 [Liu, Mugeng; Huang, Xiaolong; He, Wei] Peking Univ, Minist Educ, Sch Comp Sci, Key Lab High Confidence Software Technol, Beijing, Peoples R China.
   [Xie, Yibing; Jing, Xiang] Peking Univ, Sch Software & Microelect, Beijing, Peoples R China.
   [Zhang, Jie M.] Kings Coll London, Dept Informat, London, England.
   [Jing, Xiang] Natl Key Lab Data Space Technol & Syst, Beijing, Peoples R China.
   [Chen, Zhenpeng] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore, Singapore.
   [Ma, Yun] Peking Univ, Inst Artificial Intelligence, Beijing, Peoples R China.
C3 Peking University; Peking University; University of London; King's
   College London; Nanyang Technological University; Peking University
RP Ma, Y (corresponding author), Peking Univ, Inst Artificial Intelligence, Beijing, Peoples R China.
EM lmg@pku.edu.cn; huangxiaolong@pku.edu.cn; weihe@stu.pku.edu.cn;
   xybybing@stu.pku.edu.cn; jie.zhang@kcl.ac.uk; jingxiang@pku.edu.cn;
   zhenpeng.chen@ntu.edu.sg; mayun@pku.edu.cn
OI Ma, Yun/0000-0001-7866-4075; Chen, Zhenpeng/0000-0002-4765-1893
FU National Key Research and Development Program of China [2021YFF0901100];
   Center for Data Space Technology and System, Peking University
FX This work was supported by the National Key Research and Development
   Program of China under the grant number 2021YFF0901100, and Center for
   Data Space Technology and System, Peking University.
CR Abou Khalil Z, 2022, INT SYMP EMP SOFTWAR, P227, DOI 10.1145/3544902.3546239
   Abou Khalil Z, 2022, IEEE WORK CONF MIN S, P98, DOI 10.1145/3524842.3528494
   Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Anchundia CE, 2020, IEEE ACCESS, V8, P8992, DOI 10.1109/ACCESS.2020.2964587
   Association for Computing Machinery, 2020, Artifact review and badging-Current
   Baker M, 2016, NATURE, V533, P452, DOI 10.1038/533452a
   CSRankings, 2023, Computer science rankings
   DBLP, 2023, Computer science bibliography
   Di Cosmo R., 2017, IPRES 2017, P1
   Fan YR, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09916-6
   Fetterly D., 2003, P 12 INT WORLD WID W, P669, DOI DOI 10.1145/775152.775246
   Flittner M, 2018, ACM SIGCOMM COMP COM, V48, P75, DOI 10.1145/3211852.3211864
   FSE21, 2021, FSE 2021 artifact evaluation track:Submission and reviewing guidelines
   FSE21, 2021, ESEC/FSE 2021 open science guidelines
   FSE22, 2022, FSE 2022 open science policy
   Hermann B, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P469, DOI 10.1145/3368089.3409767
   ICSE21, 2020, ICSE 2021 open science policies
   ICSE22, 2021, ICSE 2022 review process and guidelines
   ICSE22, 2021, ICSE 2022 open science policies
   ICSE23, 2022, ICSE 2023 open science policy
   Internet Archieve, 2023, Wayback machine
   Jones S.M., 2021, Code4Lib J., V50
   Kim Y, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P315, DOI 10.1145/3180155.3180253
   Klein M, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0115253
   Kochhar P. S., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P165
   Krishnamurthi Shriram, 2013, Software Engineering Notes, V38, P7, DOI 10.1145/2464526.2464530
   Krishnamurthi S, 2015, COMMUN ACM, V58, P34, DOI 10.1145/2658987
   Kumar DVinay., 2015, World Digital Libraries, V8, P59, DOI DOI 10.18329/09757597/2015/8105
   Liu C, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3477535
   Pakistan Meteorological Department (PMD), 2022, US
   PEP8, 2013, PEP8-Style guide for python code
   Pylint, 2023, Pylint messages overview
   Pylint, 2022, About us
   Sanderson R, 2011, Arxiv, DOI arXiv:1105.3459
   Santos JAM, 2018, J SYST SOFTWARE, V144, P450, DOI 10.1016/j.jss.2018.07.035
   Saucez D, 2019, ACM SIGCOMM COMP COM, V49, P44, DOI 10.1145/3336937.3336944
   Timperley CS, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09973-5
   Vidoni M, 2021, R J, V13, P6
NR 38
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112032
DI 10.1016/j.jss.2024.112032
EA MAR 2024
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB9A5
UT WOS:001218525300001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Zhao, TG
   Gasiba, T
   Lechner, U
   -Albuquerque, MP
AF Zhao, Tiange
   Gasiba, Tiago
   Lechner, Ulrike
   -Albuquerque, Maria Pinto
TI Thriving in the era of hybrid work: Raising cybersecurity awareness
   using serious games in industry trainings☆
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Serious game; Secure coding; Cloud security; Industry; Hybrid work;
   Awareness of cybersecurity
AB The important missions of modern software engineering education are to prepare software engineers to work in a hybrid mode and to address the need to enable them to write secure code and deliver secure products and services to the customer. Providing training akin to an authentic experience poses several challenges, such as hybrid infrastructures, lack of engagement, and interactions. Cybersecurity and cybersecurity awareness have also gained importance due to the shift towards work-from-home (WFH) or work-from-anywhere (WFA): The work environment is forced to be distributed across large heterogeneous networks with different security levels. We perceive hybrid work as a work mode where the team members follow WFH or WFA and work from the office. Therefore various security levels at the workplace and restrictions on informal team communications need to be taken into account. We report on experiences from an industrial company producing software and cyber-physical systems. Initially set to update the existing secure code guidelines, the study lead to the discovery that it is crucial to go beyond an up-to-date set of security guidelines: it is mandatory to raise the cybersecurity awareness of those who are to follow the guidelines. We present a novel approach, via serious games, to train software engineers working in the industry, which is delivered in a hybrid mode and equips practitioners to face the challenges of hybrid work. Serious games have more than just entertainment purposes. They have proven effective ways to maintain engagement and boost training, particularly in cybersecurity. We developed and used two innovative serious games to raise cybersecurity awareness: (1) CyberSecurity Challenges (CSC), about how to develop secure software; and (2) Cloud of Assets and Threats (CATS), about cloud security, including its shared responsibility model. It is decisive for the industry that the software is written, developed, and deployed securely. The cloud service has replaced many on-premises deployments. It is essential to enable hybrid work, turning knowledge and practice about cloud security into essential capacities for professional hybrid work. We provide the theoretical foundations for the two serious games and the overall approach. We also report and analyze more than 300 industry practitioners' training experiences from 2017 to 2023 and use this to evaluate the games. By applying serious games in the industry, among practitioners, we gain valuable experience in combining the advantage of different training modes and mitigating the disadvantage of online training. We observe the impact of serious games through a scientifically-sound approach based on the data and feedback we collected systematically from the trainers', trainees', and organization's perspectives. We show through empirical evidence that serious games are a successful approach for training conducted in hybrid work mode while providing authentic and immersed experiences that empower and raise cybersecurity awareness of current and future software professionals.
C1 [Zhao, Tiange; Gasiba, Tiago] Siemens AG, Otto Hahn Ring 6, D-81739 Munich, Germany.
   [Lechner, Ulrike] Univ Bundeswehr Munich, Werner Heisenberg Weg 39, D-85579 Neubiberg, Germany.
   [-Albuquerque, Maria Pinto] Inst Univ Lisboa IUL, ISTAR, ISCTE, Ave Forcas Armadas, P-1649026 Lisbon, Portugal.
C3 Siemens AG; Siemens Germany; Bundeswehr University Munich; Instituto
   Universitario de Lisboa
RP Zhao, TG (corresponding author), Siemens AG, Otto Hahn Ring 6, D-81739 Munich, Germany.
EM tiange.zhao@siemens.com
OI Espinha Gasiba, Tiago/0000-0003-1462-6701
FU Fundacao para a Ciencia e a Tecnologia, I.P. (FCT) , Portugal
   [UIDB/04466/2020, UIDP/04466/2020]; Dtec.bw; European Union; CONTAIN by
   the Bundesministerium fuer Bildung und Forschung, Germany [FKZ
   13N16581]; Bundesministerium fuer Bildung und Forschung (BMBF) , Germany
   [13N16585]
FX This research task was partially supported by Fundacao para a Ciencia e
   a Tecnologia, I.P. (FCT) , Portugal [ISTAR Projects: UIDB/04466/2020 and
   UIDP/04466/2020] . Ulrike Lechner acknowledges funding by dtec.bw for
   project LIONS and dtec.bw is funded by the European Union -
   NextGenerationEU and for project CONTAIN by the Bundesministerium fuer
   Bildung und Forschung, Germany (FKZ 13N16581) . Tiange Zhao and Tiago
   Gasiba acknowledge the funding provided by the Bundesministerium fuer
   Bildung und Forschung (BMBF) , Germany for the project CONTAIN with the
   number 13N16585. The authors would also like to thank Ece Ata, Kristian
   Beckers, Luis Afonso Casqueiro, Jorge Cuellar, Tilman Dewes, Thomas
   Diefenbach, Holger Dreger, Samra Hodzic, Andrei-Cristian Iosif, Akram
   Louati, Daniel Mendez, Didem Oengue, Kaan Oguzhan, Anmoal Porwal, Filip
   Rezabek, Santiago Suppan, Thomas Wakim and Alae Zouitni for valu- able
   discussions, contributions to game designs and studies. We thank all
   game participants and trainers for their support and insights. We thank
   the anonymous reviewers and the editors for their helpful and fruitful
   comments and guidance in the review process. We are indebted to all
   players, study participants who took part in the game events, and
   empirical studies during this research endeavor.
CR Agba MS, 2020, BRAIN-BROAD RES ARTI, V11, P185, DOI 10.18662/brain/11.4/148
   [Anonymous], 2021, Terraform by HashiCorp.
   [Anonymous], 2018, Security for industrial automation and control systems, Part 4-2: Technical security require-ments for IACS components
   [Anonymous], 2007, ISA/IEC 62443 Series of Standards.
   [Anonymous], 2018, ANSI/ISA-62443-4-1-2018
   [Anonymous], 2021, Amazon web service
   [Anonymous], 2017, ISO/IEC 27001
   [Anonymous], 2020, MITRE ATT&CK cloud matrix
   [Anonymous], 2020, Cloud Security Alliance
   Nieto-Escamez FA, 2021, FRONT PSYCHOL, V12, DOI 10.3389/fpsyg.2021.648552
   Banjo S., 2020, The World's Biggest Work-From-Home Experiment
   Barela J, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P164, DOI 10.1109/REW.2019.00034
   Borges F.C.L, 2022, Employee engagement in virtual teams: The role of gamification
   BSI, 2020, Tech. rep, P1
   Bulgurcu B, 2010, MIS QUART, V34, P523
   Canalys, 2021, China's cloud spend up 45% in 2021 bringing high expectations for 2022.
   Carnegie Mellon University, 2020, Secure Coding Standards
   Carnegie Mellon University, 2023, INT32-C. Ensure that operations on signed integers do not result in overflow
   Cheung R.S., 2012, P INT C SECURITY MAN, P1
   Chukusol C., 2022, 2022 RES INV INN C I, P273, DOI [10.1109/RI2C56397.2022.9910289, DOI 10.1109/RI2C56397.2022.9910289]
   Cloud Security Alliance (CSA), 2019, Top threats to cloud computing: The egregious 11
   codewars, 2023, Achieve mastery through challenge-Improve your development skills by training with your peers on code kata that continuously challenge and push your coding practice
   Connory M., 2019, Software companies keep making these same cyber security mistakes
   Corbin J., 2015, BASICS QUALITATIVE R
   Crosley J., 2020, Qualitative Data Coding 101: How to Code Qualitative Data, Explained Simply
   Cullinane I., 2015, J COMPUT SCI COLL, P75
   Darling E, 2018, Why SQL Developers Keep Making The Same Mistakes
   De Smet A., 2021, It's time for leaders to get real about hybrid
   Department of Homeland Security US-CERT., 2023, Software Assurance
   Dorner R., 2016, Serious games: Foundations, concepts and practice, DOI [DOI 10.1007/978-3-319-40612-1, 10.1007/978-3-319-40612-1]
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   European Data Protection Supervisor (EDPS), 2018, Personal Data Breach
   Ferro LS, 2022, LECT NOTES COMPUT SC, V13334, P508, DOI 10.1007/978-3-031-05637-6_33
   Frampton S, 2020, Coding qualitative data: A beginner's how-to + examples
   Galanti T, 2021, J OCCUP ENVIRON MED, V63, pE426, DOI 10.1097/JOM.0000000000002236
   Gasiba Tiago, 2020, Computer Security. ESORICS 2020 International Workshops, CyberICPS, SECPRE, and ADIoT. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12501), P67, DOI 10.1007/978-3-030-64330-0_5
   Gasiba T., 2021, Digital. Secure. 30 Years BSI, P1, DOI [10.48550/arXiv.2102.10432, DOI 10.48550/ARXIV.2102.10432]
   Gasiba T., 2020, Sifu Platform
   Gasiba T., 2021, 43 INT C SOFTW ENG, P1
   Gasiba T., 2021, Ph.D. thesis
   Gasiba T, 2021, L N INF SYST ORGAN, V47, P370, DOI 10.1007/978-3-030-86797-3_25
   Gasiba Tiago, 2020, INT C QUAL INF COMM, P223, DOI DOI 10.1007/978
   Gasiba TE, 2020, CYBERSECURITY, V3, DOI 10.1186/s42400-020-00064-4
   Godsay M., 2015, International Journal of Computer Applications, V126, P26, DOI DOI 10.5120/IJCA2015906091
   Graziotin D, 2018, J SYST SOFTWARE, V140, P32, DOI 10.1016/j.jss.2018.02.041
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Hansch Norman, 2014, 2014 25th International Workshop on Database and Expert Systems Applications (DEXA), P326, DOI 10.1109/DEXA.2014.71
   Harta S, 2020, COMPUT SECUR, V95, DOI 10.1016/j.cose.2020.101827
   Hashim MAM, 2022, EDUC INF TECHNOL, V27, P3171, DOI 10.1007/s10639-021-10739-1
   Hevner A.R., 2007, SCANDINAVIAN J INFOR, V1919, P4
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   HITB CyberWeek, 2020, Third edition of Adversaries Vs Defenders ctf Competition-Nov 18, 19 Welcoming Red Teams and Blue Teams Upcoming village and CTF at HITB CyberWeek
   JACOBY J, 1971, J MARKETING RES, V8, P495, DOI 10.2307/3150242
   Markopoulos A.P., 2015, International Journal of Mechanical Engineering Education, V43, P118
   McCarney R, 2007, BMC MED RES METHODOL, V7, DOI 10.1186/1471-2288-7-30
   Mirkovic Jelena, 2014, 2014 USENIX Summit on Gaming, Games, and Gamification in Security Education 3GSE 14
   MITRE Corporation, 2006, CWE-190-Integer Overflow or Wraparound.
   Monasor M.J., P 2014 C INN TECHN C, P231, DOI [10.1145/2591708.2591747, DOI 10.1145/2591708.2591747]
   Monasor MJ, 2014, PROC FRONT EDUC CONF
   Moody GD, 2018, MIS QUART, V42, P285, DOI 10.25300/MISQ/2018/13853
   OWASP Foundation, 2001, Open Web Application Security Project.
   Patel S., 2020, 2019 Global Developer Report: DevSecOps finds security roadblocks divide teams
   Petri Giani, 2016, INCoD/GQS, V3, P1, DOI 10.17709/2409-2231-2016-3
   Pillai R.S, 2020, Covid 19- a booster for digital transformation!!
   Poston H, 2019, The Need For Secure Coding
   Schneier B., 2020, Software Developers and Security
   Secure Code Warrior, 2021, Tech. rep
   Sein MK, 2011, MIS QUART, V35, P37
   Shostack A., 2021, Tabletop security games & cards
   Siponen M, 2010, MIS QUART, V34, P487
   Software Engineering Institute Carnegie Mellon, 2018, SEI CERT C Coding Standard
   Software Engineering Institute Carnegie Mellon, 2023, SEI CERT C++ Coding Standard.
   Subhash S, 2018, COMPUT HUM BEHAV, V87, P192, DOI 10.1016/j.chb.2018.05.028
   Svábensky V, 2018, ITICSE'18: PROCEEDINGS OF THE 23RD ANNUAL ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P194, DOI 10.1145/3197091.3197123
   Thompson M., 2011, P 4 C CYB SEC EXP TE, P10
   Travers M, 2022, 2022 IEEE/ACM THIRD WORKSHOP ON GENDER EQUALITY, DIVERSITY, AND INCLUSION IN SOFTWARE ENGINEERING (GE@ICSE 2022), P59, DOI 10.1145/3524501.3527596
   Vaughan-Nichols S, 2019, No Love Lost Between Security Specialists and Developers
   Vizcaíno A, 2019, ACM T COMPUT EDUC, V19, DOI 10.1145/3218279
   Wolfe R, 2009, Dauerhafter Erfolg Mit Business Software: 10 Jahre Fallstudien Nach Der EXperience Methodik
   Zhao Tiange, 2023, Ubiquitous Security: Second International Conference, UbiSec 2022, Revised Selected Papers. Communications in Computer and Information Science (1768), P64, DOI 10.1007/978-981-99-0272-9_5
   Zhao T., 2021, OPEN ACCESS SERIES I, DOI 10.4230/OASIcs.ICPEC.2021.11
   Zhao T., 2022, Open Access Series in Informatics (OASIcs), V102, DOI [10.4230/OASIcs.ICPEC.2022.6, DOI 10.4230/OASICS.ICPEC.2022.6]
   Zhao TG, 2021, INFORMATION, V12, DOI 10.3390/info12110482
NR 83
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111946
DI 10.1016/j.jss.2023.111946
EA JAN 2024
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JQ5L6
UT WOS:001174643100001
OA Green Published
DA 2024-08-05
ER

PT J
AU Wan, XH
   Li, TC
   Lin, WB
   Cai, Y
   Zheng, Z
AF Wan, Xiaohui
   Li, Tiancheng
   Lin, Weibin
   Cai, Yi
   Zheng, Zheng
TI Coverage-guided fuzzing for deep reinforcement learning systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Deep reinforcement learning system; Deep reinforcement learning testing;
   Fuzz testing; Coverage-guided fuzzing
AB While the past decade has witnessed a growing demand for employing deep reinforcement learning (DRL) in various domains to solve real -world problems, the reliability of DRL systems has become more of a concern. In particular, DRL agents are often trained on data from a potentially biased distribution over environmental settings, causing the trained agents to fail in certain cases despite high average -case performance. Hence, it is necessary and urgent to adequately test DRL agents to ensure the reliability of practical DRL systems. However, due to the fundamental difference in the programming paradigm and the development process, traditional software testing methodology cannot be applied directly to DRL systems. Given that, we introduce a novel testing framework for DRL systems, aiming to generate diverse test cases that can drive a DRL system to fail. Specifically, we design, implement and evaluate DRLFuzz, which is a coverage -guided fuzzing (CGF) framework for systematically testing DRL systems. Experimental results demonstrate that DRLFuzz can efficiently discover diverse failures in different DRL systems for various benchmark tasks. Compared with a random search baseline, DRLFuzz can generate 60% more failed cases in general. Additionally, the diversity of failed cases generated by DRLFuzz is increased by 4.6% similar to 14.1% in terms of mean pairwise distance (MPD). Furthermore, our experiments also indicate that the failed cases generated by DRLFuzz can be utilized to fine-tune the DRL agent to eliminate the failures resulting from inadequate exploration during training and thus improve the reliability of DRL systems.
C1 [Wan, Xiaohui; Li, Tiancheng; Lin, Weibin; Cai, Yi; Zheng, Zheng] Beihang Univ, Sch Automat Sci & Elect Engn, Beijing 100191, Peoples R China.
C3 Beihang University
RP Zheng, Z (corresponding author), Beihang Univ, Sch Automat Sci & Elect Engn, Beijing 100191, Peoples R China.
EM xhwan@buaa.edu.cn; li_tiancheng@buaa.edu.cn; linwb@buaa.edu.cn;
   caiy@buaa.edu.cn; zhengz@buaa.edu.cn
OI Wan, Xiaohui/0000-0001-6498-8570
FU National Natural Science Foundation of China [62372021]
FX This work was supported by the National Natural Science Foundation of
   China under grants 62372021.
CR Al-Nima RRO, 2021, APPL SOFT COMPUT, V105, DOI 10.1016/j.asoc.2021.107295
   Ammann P., 2016, Introduction to Software Testing
   Andre D., 1997, P 10 INT C ADV NEUR
   [Anonymous], 2018, Uncovering surprising behaviors in reinforcement learning via worst-case analysis
   Bellemare MG, 2016, ADV NEUR IN, V29
   Bellman R, 1962, Applied Dynamic Programming
   Biemann T, 2010, ORGAN RES METHODS, V13, P582, DOI 10.1177/1094428109338875
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Chen C, 2018, COMPUT SECUR, V75, P118, DOI 10.1016/j.cose.2018.02.002
   Chen TL, 2020, PROC CVPR IEEE, P696, DOI 10.1109/CVPR42600.2020.00078
   Chen T, 2019, CYBERSECURITY, V2, DOI 10.1186/s42400-019-0027-x
   Christopher J., 1992, Mach. Learn., V8
   Cobbe K, 2019, PR MACH LEARN RES, V97
   Dong X., 2021, Advances in Neural Information Processing Systems, V34, P4356
   Dong Yinpeng, 2019, arXiv
   Du XN, 2018, Arxiv, DOI arXiv:1812.05339
   Erhan D, 2010, J MACH LEARN RES, V11, P625
   Finn C, 2017, PR MACH LEARN RES, V70
   Fu ZY, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2336
   Gan ST, 2018, P IEEE S SECUR PRIV, P679, DOI 10.1109/SP.2018.00040
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Han H, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2345, DOI 10.1145/3133956.3134103
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Harrison DA, 2007, ACAD MANAGE REV, V32, P1199, DOI 10.5465/AMR.2007.26586096
   Heuillet A, 2021, KNOWL-BASED SYST, V214, DOI 10.1016/j.knosys.2020.106685
   Horgan D, 2018, PUBLIC HEALTH GENOM, V21, P1, DOI 10.1159/000492809
   Huang SY, 2017, Arxiv, DOI arXiv:1702.02284
   Irpan A., 2018, Deep reinforcement learning doesn't work yet
   Goodfellow IJ, 2015, Arxiv, DOI [arXiv:1412.6572, DOI 10.48550/ARXIV.1412.6572]
   Jaderberg M, 2018, Arxiv, DOI arXiv:1807.01281
   Kaplanis C, 2018, PR MACH LEARN RES, V80
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Lee M, 2023, PROC INT CONF SOFTW, P384, DOI 10.1109/ICSE48619.2023.00043
   Li J, 2018, CYBERSECURITY, V1, DOI 10.1186/s42400-018-0002-y
   Li TC, 2022, IEEE INT SYMP SOFTW, P110, DOI 10.1109/ISSREW55968.2022.00049
   Li ZN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P89, DOI 10.1109/ICSE-NIER.2019.00031
   Liang J, 2021, IEEE T DEPEND SECURE, V18, P2675, DOI 10.1109/TDSC.2019.2961339
   Liu GL, 2019, LECT NOTES ARTIF INT, V11052, P414, DOI 10.1007/978-3-030-10928-8_25
   Liu V, 2019, AAAI CONF ARTIF INTE, P4384
   Lyu C, 2019, Arxiv, DOI arXiv:1807.02606
   Ma L, 2018, Arxiv, DOI arXiv:1806.07723
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Maneewongvatana S., 1999, ALENEX, V99
   Miyato T, 2019, IEEE T PATTERN ANAL, V41, P1979, DOI 10.1109/TPAMI.2018.2858821
   Mnih V, 2013, Arxiv, DOI arXiv:1312.5602
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Morales M., 2020, Grokking deep reinforcement learning
   Myers G.J., 2011, The art of software testing, VVolume 1
   Odena A, 2019, PR MACH LEARN RES, V97
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Paszke A, 2019, ADV NEUR IN, V32
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Rakhsha A, 2021, Arxiv, DOI arXiv:2102.08492
   Ramakrishnan R, 2020, J ARTIF INTELL RES, V67, P191
   Ruder S, 2017, Arxiv, DOI [arXiv:1706.05098, DOI 10.48550/ARXIV.1706.05098]
   Sallab A.E., 2017, Electronic Imaging, V19, P70, DOI [DOI 10.2352/ISSN.2470-1173.2017.19.AVM-023, 10.2352/ISSN.2470-1173.2017.19.AVM-023]
   Schaul T., 2015, ARXIV
   Schenke M., 2021, arXiv
   Serebryany K., 2015, LIBFUZZER LIBFUZZER
   Shi Y, 2021, IEEE INT C S Q R S, P157, DOI 10.1109/QRS54544.2021.00027
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Sun YC, 2019, Arxiv, DOI arXiv:1803.04792
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Tang H, 2017, ADV NEUR IN, V30
   Tasfi N., 2016, PyGame Learning Environment
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tucker CM, 2017, BIOL REV, V92, P698, DOI 10.1111/brv.12252
   Uesato J., 2018, INT C LEARN REPR
   Vaibhav V, 2019, Arxiv, DOI arXiv:1902.09508
   Virtanen P, 2020, NAT METHODS, V17, P261, DOI 10.1038/s41592-019-0686-2
   Wang S, 2020, IEEE INT CONF AUTOM, P1053, DOI 10.1145/3324884.3416584
   Xie XF, 2018, Arxiv, DOI arXiv:1809.01266
   Xie XF, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5772
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yan Z, 2018, ADV NEUR IN, V31
   Yang QM, 2020, IEEE ACCESS, V8, P363, DOI 10.1109/ACCESS.2019.2961426
   Zalewski M., 2017, American fuzzy lop, P28
   Zhan F.B., 2015, Air Pollution-Exposure-Health Effect Indicators: Mining massive geographically referenced environmental health data to identify risk factors for birth defects, P1
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang X., 2020, PMLR, V119, P11225
   Zhao L, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23504
   Zhu GX, 2020, AAAI CONF ARTIF INTE, V34, P6989
   Zolfagharian A, 2023, IEEE T SOFTWARE ENG, V49, P3715, DOI 10.1109/TSE.2023.3269804
NR 85
TC 0
Z9 0
U1 6
U2 6
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111963
DI 10.1016/j.jss.2024.111963
EA JAN 2024
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IR6A0
UT WOS:001168083400001
DA 2024-08-05
ER

PT J
AU Feitosa, D
   Penca, MT
   Berardi, M
   Boza, RD
   Andrikopoulos, V
AF Feitosa, Daniel
   Penca, Matei-Tudor
   Berardi, Massimiliano
   Boza, Rares-Dorian
   Andrikopoulos, Vasilios
TI Mining for cost awareness in the infrastructure as code artifacts of
   cloud-based applications: An exploratory study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Cloud computing; Cost awareness; Mining software repositories; Cloud
   orchestration
AB Context: Cloud computing's rise as the primary platform for software development and delivery is largely driven by the potential cost savings. However, it is surprising that no empirical evidence has been collected to determine whether cost awareness permeates the development process and how it manifests in practice. Objective: This study aims to provide empirical evidence of cost awareness by mining open source repositories of cloud-based applications. The focus is on Infrastructure-as-Code artifacts that automate software (re)deployment on the cloud. Methods: A systematic examination of 152735 repositories yielded 2010 relevant hits. We then analyzed 538 relevant commits and 208 relevant issues using inductive and deductive coding and corroborated findings with discussions from Stack Overflow. Results: The findings indicate that developers are not only concerned with the cost of their application deployments but also take actions to reduce these costs beyond selecting cheaper cloud services. We also identify research areas for future consideration. Conclusion: Although we focus on a particular Infrastructure-as-Code technology (Terraform), the findings can be applicable to cloud-based application development in general. The provided empirical grounding can serve developers seeking to reduce costs through service selection, resource allocation, deployment optimization, and other techniques.
C1 [Feitosa, Daniel; Penca, Matei-Tudor; Berardi, Massimiliano; Boza, Rares-Dorian; Andrikopoulos, Vasilios] Univ Groningen, Bernoulli Inst Math, Comp Sci & Artificial Intelligence, Groningen, Netherlands.
C3 University of Groningen
RP Feitosa, D (corresponding author), Univ Groningen, Bernoulli Inst Math, Comp Sci & Artificial Intelligence, Groningen, Netherlands.
EM d.feitosa@rug.nl; matei.penca1@gmail.com;
   massimiliano.berardi93@gmail.com; raresboza@gmail.com;
   v.andrikopoulos@rug.nl
RI Andrikopoulos, Vasilios/IVH-6273-2023; Feitosa, Daniel/M-8700-2014
OI Feitosa, Daniel/0000-0001-9371-232X; Andrikopoulos,
   Vasilios/0000-0001-7937-0247
CR Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Al Alamin MA, 2021, IEEE WORK CONF MIN S, P46, DOI 10.1109/MSR52588.2021.00018
   Amato A, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2870634
   Andrikopoulos V, 2013, COMPUTING, V95, P493, DOI 10.1007/s00607-012-0248-2
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Arunarani AR, 2019, FUTURE GENER COMP SY, V91, P407, DOI 10.1016/j.future.2018.09.014
   Bao LF, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P37, DOI [10.1109/MSR.2016.014, 10.1145/2901739.2901748]
   Blei D, 2010, IEEE SIGNAL PROC MAG, V27, P55, DOI 10.1109/MSP.2010.938079
   Campbell JC., 2003, The Art and Science of Analyzing Software Data, V3, P139, DOI DOI 10.1016/B978-0-12-411519-4.00006-9
   Chauhan MA, 2017, SOFTWARE PRACT EXPER, V47, P599, DOI 10.1002/spe.2409
   Choetkiertikul M, 2018, IEEE T SOFTWARE ENG, V44, P551, DOI 10.1109/TSE.2017.2693989
   Choetkiertikul M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P280, DOI 10.1109/MSR.2015.33
   Cong PJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3376917
   Corbin J., 2015, BASICS QUALITATIVE R
   da Costa DA, 2018, EMPIR SOFTW ENG, V23, P835, DOI 10.1007/s10664-017-9548-7
   Das T, 2016, PROC IEEE INT CONF S, P443, DOI 10.1109/ICSME.2016.49
   de Carvalho LR, 2020, 2020 20TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2020), P380, DOI 10.1109/CCGrid49817.2020.00-55
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Feitosa D., 2024, Supplementary material for mining cost awareness in the infrastructure as code artifacts of cloud-based applications, DOI [10.5281/zenodo.11312689, DOI 10.5281/ZENODO.11312689]
   Han JX, 2020, EMPIR SOFTW ENG, V25, P2694, DOI 10.1007/s10664-020-09819-6
   Harms R., 2010, THE ECONOMICS OF THE CLOUD, Microsoft White Paper
   Hindle A., 2011, P 8 WORK C MIN SOFTW, P163, DOI DOI 10.1145/1985441.1985466
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P374, DOI 10.1007/s10664-013-9276-6
   Hoffman M., 2010, ADV NEURAL INFORM PR, V23, P856, DOI DOI 10.5555/2997189.2997285
   Hosseinzadeh M, 2020, J NETW SYST MANAG, V28, P1639, DOI 10.1007/s10922-020-09553-w
   Howard MJ, 2013, IEEE WORK CONF MIN S, P377, DOI 10.1109/MSR.2013.6624052
   Jamshidi P, 2013, IEEE T CLOUD COMPUT, V1, P142, DOI 10.1109/TCC.2013.10
   Kovács J, 2018, J GRID COMPUT, V16, P19, DOI 10.1007/s10723-017-9421-3
   LeClair A, 2018, PROC IEEE INT CONF S, P461, DOI 10.1109/ICSME.2018.00056
   Lex A, 2014, IEEE T VIS COMPUT GR, V20, P1983, DOI 10.1109/TVCG.2014.2346248
   Lin B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3490388
   Mell P, 2010, COMMUN ACM, V53, P50
   Moura I, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P56, DOI 10.1109/MSR.2015.13
   Pereira R, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09925-5
   Pinto G., 2014, P 11 WORK C MIN SOFT, P22, DOI DOI 10.1145/2597073.2597110
   Qi P, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020): SYSTEM DEMONSTRATIONS, P101
   Rebouças M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P634, DOI 10.1109/SANER.2016.66
   Rehurek R., 2010, P LREC 2010 WORKSH N, DOI DOI 10.13140/2.1.2393.1847
   Sas C, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111343
   Shuaib Mohammed, 2019, Ambient Communications and Computer Systems. RACCCS-2018. Advances in Intelligent Systems and Computing (AISC 904), P387, DOI 10.1007/978-981-13-5934-7_35
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Tomarchio O, 2020, J CLOUD COMPUT-ADV S, V9, DOI 10.1186/s13677-020-00194-7
   Treude Christoph, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P84, DOI 10.1109/MSR.2019.00022
   Tricomi G, 2020, IEEE ACCESS, V8, P203591, DOI 10.1109/ACCESS.2020.3035816
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Vakili A, 2017, J NETW COMPUT APPL, V81, P24, DOI 10.1016/j.jnca.2017.01.005
   Wohlin C., 2012, EXPT SOFTWARE ENG
   Zimmerle C, 2022, IEEE WORK CONF MIN S, P203, DOI 10.1145/3524842.3527966
NR 49
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
AR 112112
DI 10.1016/j.jss.2024.112112
EA JUN 2024
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UQ3O1
UT WOS:001249486500001
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Tuna, E
   Seaman, C
   Tüzün, E
AF Tuna, Erdem
   Seaman, Carolyn
   Tuzun, Eray
TI Do code reviews lead to fewer code smells?
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Code reviews; Code review smells; Process smells Code smells; Focus
   group; Empirical study; Mining software repositories
ID TECHNICAL DEBT; IMPACT; BAD; MAINTAINABILITY; INFORMATION; MANAGEMENT;
   GITHUB
AB Context: The code review process is conducted by software teams with various motivations. Among other goals, code reviews act as a gatekeeper for software quality. Objective: In this study, we explore whether code reviews have an impact on one specific aspect of software quality, software maintainability. We further extend our investigation by analyzing whether code review process quality (as evidenced by the presence of code review process smells) influences software maintainability (as evidenced by the presence of code smells). Method: We investigate whether smells in the code review process are related to smells in the code that was reviewed by using correlation analysis. We augment our quantitative analysis with a focus group study to learn practitioners' opinions. Results: Our investigations revealed that the level of code smells neither increases nor decreases in 8 out of 10 code reviews, regardless of the quality of the code review. Contrary to our own intuition and that of the practitioners in our focus groups, we found that code review process smells have little to no correlation with the level of code smells. We identified multiple potential reasons behind the counter-intuitive results based on our focus group data. Furthermore, practitioners still believe that code reviews are helpful in improving software maintainability. Conclusion: Our results imply that the community should update our goals for code review practices and reevaluate those practices to align them with more relevant and modern realities.
C1 [Tuna, Erdem; Tuzun, Eray] Bilkent Univ, TR-06800 Ankara, Turkiye.
   [Seaman, Carolyn] Univ Maryland Baltimore Cty, 1000 Hilltop Circle, Baltimore, MD 21250 USA.
C3 Ihsan Dogramaci Bilkent University; University System of Maryland;
   University of Maryland Baltimore County
RP Tuna, E (corresponding author), Bilkent Univ, TR-06800 Ankara, Turkiye.
EM erdem.tuna@bilkent.edu.tr
RI Tuna, Erdem/KUD-6164-2024; Tuzun, Eray/AAD-7282-2021
OI Tuzun, Eray/0000-0002-5550-7816; Tuna, Erdem/0000-0001-7137-6361;
   Seaman, Carolyn/0000-0001-6588-9830
CR AlOmar EA, 2022, IEEE WORK CONF MIN S, P689, DOI 10.1145/3524842.3527932
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Amanatidis T, 2020, EMPIR SOFTW ENG, V25, P4161, DOI 10.1007/s10664-020-09869-w
   Ampatzoglou A, 2016, LECT NOTES BUS INF P, V257, P117, DOI 10.1007/978-3-319-40512-4_7
   Angular.js Contribution Guideline, 2022, Angular.js contribution guideline.
   Avgeriou P., 2016, Dagstuhl Reports, V6, DOI [DOI 10.4230/DAGREP.6.4.110, 10.4230/DAGREP.6.4.110]
   Avgeriou P, 2021, IEEE SOFTWARE, V38, P61, DOI 10.1109/MS.2020.3024958
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   Baum T, 2017, LECT NOTES COMPUT SC, V10611, P111, DOI 10.1007/978-3-319-69926-4_9
   Baum T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P85, DOI 10.1145/2950290.2950323
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Beller M., 2014, 11 WORKING C MINING, P202, DOI DOI 10.1145/2597073.2597082
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Broy M., 2006, P 2006 INT WORKSH SO, P21, DOI [10.1145/1137702, DOI 10.1145/1137702]
   Caballero-Espinosa E, 2023, INFORM SOFTWARE TECH, V153, DOI 10.1016/j.infsof.2022.107078
   Campbell G.A., 2013, Sonar in Action., Vfirst
   Cesium Contribution Guideline, 2022, Cesium contribution guideline.
   Chatterjee S, 2021, J AM STAT ASSOC, V116, P2009, DOI 10.1080/01621459.2020.1758115
   Chouchen M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P531, DOI 10.1109/SANER50967.2021.00060
   Cleland-Huang Jane, 2014, FOSE, P55, DOI DOI 10.1145/2593882.2593891
   Codabux Z, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P8, DOI 10.1109/MTD.2013.6608672
   Conejero JM, 2018, J SYST SOFTWARE, V142, P92, DOI 10.1016/j.jss.2018.04.035
   Cunha Atacilio, 2021, SBES '21: Brazilian Symposium on Software Engineering, P269, DOI 10.1145/3474624.3477063
   Cunningham W., 1993, OOPS Messenger, V4, P29
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Davila N, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110951
   de Mello R, 2019, INT SYMP EMP SOFTWAR, P53
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   DENNING PJ, 1992, COMMUN ACM, V35, P13, DOI 10.1145/129617.384272
   Digkas G, 2022, IEEE T SOFTWARE ENG, V48, P1705, DOI 10.1109/TSE.2020.3032557
   Dogan E, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106737
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Eslint Contribution Guideline, 2022, Eslint contribution guideline.
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Falessi D, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2021), P45, DOI 10.1109/TechDebt52882.2021.00014
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   FOWLER RL, 1987, APPL PSYCH MEAS, V11, P419, DOI 10.1177/014662168701100407
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Ghost Contribution Guideline, 2022, Ghost contribution guideline.
   Git Garbage Collection Documentation, 2022, Git garbage collection documentation.
   Han DG, 2020, IEEE INT WORK C SO, P43, DOI [10.1109/SCAM51674.2020.00010, 10.1109/scam51674.2020.00010]
   Han XF, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10178-7
   Izurieta Clemente, 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P23, DOI 10.1109/MTD.2012.6225995
   Jiang J, 2022, IEEE T RELIAB, V71, P1325, DOI 10.1109/TR.2021.3093159
   Jorgensen M, 1999, ADV ENG SOFTW, V30, P907, DOI 10.1016/S0965-9978(99)00015-0
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kovalenko V, 2020, IEEE T SOFTWARE ENG, V46, P710, DOI 10.1109/TSE.2018.2868367
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Krueger R. A., 2014, Focus groups: a practical guide for applied research
   Krutauz A, 2020, EMPIR SOFTW ENG, V25, P3323, DOI 10.1007/s10664-020-09837-4
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110806
   Lenarduzzi V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110750
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Li ZX, 2022, IEEE T SOFTWARE ENG, V48, P2173, DOI 10.1109/TSE.2021.3053403
   Lussier S, 2004, IEEE SOFTWARE, V21, P68, DOI 10.1109/MS.2004.1259222
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Martini A, 2020, ASIA PAC SOFWR ENG, P316, DOI [10.1109/APSE051365.2020.00040, 10.1109/APSEC51365.2020.00040]
   Martini A, 2019, LECT NOTES BUS INF P, V364, P112, DOI 10.1007/978-3-030-30126-2_14
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Microsoft Word Transcription, 2022, Microsoft word transcription
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nugroho A., 2011, P 2 WORKSH MAN TECHN, P1
   Openlayers Contribution Guideline, 2022, Openlayers contribution guideline.
   Paixao M, 2019, IEEE INT WORK C SO, P45, DOI 10.1109/SCAM.2019.00014
   Palinkas LA, 2015, ADM POLICY MENT HLTH, V42, P533, DOI 10.1007/s10488-013-0528-y
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Panichella S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P161, DOI 10.1109/SANER.2015.7081826
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pascarella L., 2019, arXiv, DOI [10.48550/arxiv.1912.10098, DOI 10.48550/ARXIV.1912.10098]
   Pdf.js Contribution Guideline, 2022, Pdf.js contribution guideline
   Qamar Khushbakht Ali, 2022, Information and Software Technology, DOI 10.1016/j.infsof.2022.106972
   R Stats Package, 2022, R stats package.
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   React Contribution Guideline, 2022, React contribution guideline
   Rigby P. C., 2013, P ESEC FSE, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sas D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10132-7
   Schober P, 2018, ANESTH ANALG, V126, P1763, DOI 10.1213/ANE.0000000000002864
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Serrano N, 2004, IEEE SOFTWARE, V21, P56, DOI 10.1109/MS.2004.1259219
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1145/2901739.2901761, 10.1109/MSR.2016.028]
   Shields Contribution Guideline, 2022, Shields contribution guideline.
   Shimagaki J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P212, DOI 10.1145/2889160.2889243
   Soh Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P393, DOI 10.1109/SANER.2016.103
   Soliman M, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106669
   SonarQube Issue Severity Levels, 2022, SonarQube issue severity levels.
   SonarQube Metric Definitions, 2022, SonarQube metric definitions.
   SonarQube Rules, 2022, SonarQube rules..
   SonarSource Customer List, 2022, SonarSource customer list.
   Strapi Contribution Guideline, 2022, Strapi contribution guideline.
   Stray V, 2021, 2021 IEEE/ACM JOINT 15TH INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES AND 16TH ACM/IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICSSP/ICGSE 2021), P110, DOI 10.1109/ICSSP-ICGSE52873.2021.00021
   Sülün E, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106455
   Tamburri DA, 2021, IEEE T SOFTWARE ENG, V47, P630, DOI 10.1109/TSE.2019.2901490
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Tamburri DA, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P93, DOI 10.1109/CHASE.2013.6614739
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Tómasdóttir KF, 2020, IEEE T SOFTWARE ENG, V46, P863, DOI 10.1109/TSE.2018.2871058
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tuna E., 2023, Replication package of the paper, DOI [10.6084/m9.figshare.25608012, DOI 10.6084/M9.FIGSHARE.25608012]
   Tuna E., 2023, Supplementary appendix of the paper., DOI [10.6084/m9.figshare.25608036, DOI 10.6084/M9.FIGSHARE.25608036]
   Tuna E, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P77, DOI [10.1145/3510457.3513080, 10.1109/ICSE-SEIP55303.2022.9793952]
   Turzo AK, 2024, EMPIR SOFTW ENG, V29, DOI 10.1007/s10664-023-10411-x
   Uchôa A, 2020, PROC IEEE INT CONF S, P511, DOI 10.1109/ICSME46990.2020.00055
   Vassallo C., 2020, P 28 ACM JOINT M EUR, DOI [10.1145/3368089, DOI 10.1145/3368089]
   Wasserman A., 2007, P 1 INT WORKSHOP EME, DOI DOI 10.1109/FLOSS.2007.6
   Webpack Contribution Guideline, 2022, Webpack contribution guideline.
   Wohlin C., 2012, Planning. Exp. Softw. Eng.., P89, DOI [10.1007/978-3-642-29044-28, DOI 10.1007/978-3-642-29044-28]
   XICOR CRAN package, 2022, XICOR CRAN package.
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2013, J SYST SOFTWARE, V86, P2639, DOI 10.1016/j.jss.2013.05.007
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zampetti F, 2020, EMPIR SOFTW ENG, V25, P1095, DOI 10.1007/s10664-019-09785-8
   Zazworka N., 2011, P 2 WORKSH MAN TECHN, P17, DOI [10.1145/1985362.1985366, DOI 10.1145/1985362.1985366]
NR 125
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
AR 112101
DI 10.1016/j.jss.2024.112101
EA MAY 2024
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UN6Q1
UT WOS:001248781800002
DA 2024-08-05
ER

PT J
AU Galindo, C
   Krinke, J
   Pérez, S
   Silva, J
AF Galindo, Carlos
   Krinke, Jens
   Perez, Sergio
   Silva, Josep
TI Field-sensitive program slicing
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Program analysis; Program slicing; Composite data structures
ID DEPENDENCE GRAPH; EFFICIENT
AB The granularity level of the traditional program dependence graph (PDG) for composite data structures (tuples, lists, records, objects, etc.) is inaccurate when slicing their inner elements. We present the constrained -edges PDG (CE-PDG) that addresses this accuracy problem. The CE-PDG enhances the representation of composite data structures by decomposing statements into a subgraph that represents the inner elements of the structure, and the inclusion and propagation of data constraints along the CE-PDG edges allow for accurate slicing of complex data structures. Both extensions are conservative with respect to the traditional PDG, in the sense that all slicing criteria (and more) that can be specified in the PDG can be also specified in the CE-PDG, and the slices produced with the CE-PDG are always smaller or equal to the slices produced by the PDG. An evaluation of our approach shows a reduction in the size of the slices of around 10%.
C1 [Galindo, Carlos; Perez, Sergio; Silva, Josep] Univ Politecn Valencia, VRAIN, Camino vera S-N, Valencia 46022, Spain.
   [Krinke, Jens] UCL, Dept Physiol, Gower St, London WC1E 6BT, England.
C3 Universitat Politecnica de Valencia; University of London; University
   College London
RP Silva, J (corresponding author), Univ Politecn Valencia, VRAIN, Camino vera S-N, Valencia 46022, Spain.
EM cargaji@vrain.upv.es; j.krinke@ucl.ac.uk; serperu@dsic.upv.es;
   jsilva@dsic.upv.es
FU Generalitat Valenciana [PID2019-104735RB-C41,
   MCIN/AEI/10.13039/501100011033]; Spanish Ministerio de Universidades
   [CIPROM/2022/6];  [FPU20/03861]
FX star This work has been partially supported by grant
   PID2019-104735RB-C41 funded by MCIN/AEI/10.13039/501100011033 and by the
   Generalitat Valenciana under grant CIPROM/2022/6 (FassLow) . Carlos
   Galindo was partially supported by the Spanish Ministerio de
   Universidades under grant FPU20/03861.
CR Agrawal H., 1991, P ACM 4 S TESTING AN, P60
   Allen M., 2003, SIGPLAN Notices, V38, P284, DOI 10.1145/966049.777394
   Anderson P, 2003, IEEE T SOFTWARE ENG, V29, P721, DOI 10.1109/TSE.2003.1223646
   Ball T., 1993, Automated and Algorithmic Debugging. First International Workshop, AADEBUG '93 Proceedings, P206, DOI 10.1007/BFb0019410
   Banerjee U.K., 1988, Dependence Analysis for Supercomputing, V60
   Binkley D., 1993, ACM Letters on Programming Languages and Systems, V2, P31, DOI 10.1145/176454.176473
   Binkley D., 1996, ADV COMPUT, V43, P1
   Brown C.M., 2008, Tool Support for Refactoring Haskell Programs
   Cheda D, 2007, ELECTRON NOTES THEOR, V177, P123, DOI 10.1016/j.entcs.2007.01.010
   Chen ZQ, 2001, ACM SIGPLAN NOTICES, V36, P41, DOI 10.1145/375431.375420
   Chen ZQ, 2001, ACM SIGPLAN NOTICES, V36, P33, DOI 10.1145/375431.375418
   Choi J.-D., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P232, DOI 10.1145/158511.158639
   Clarke E. M., 2002, International Journal on Software Tools for Technology Transfer, V4, P125, DOI 10.1007/s100090100069
   DeMillo R. A., 1996, SIGSOFT Software Engineering Notes, V21, P121, DOI [10.1145/229000.226310, 10.1145/226295.226310]
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Galindo Carlos, 2021, Logic-Based Program Synthesis and Transformation 30th International Symposium, LOPSTR 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12561), P293, DOI 10.1007/978-3-030-68446-4_15
   Galindo Carlos, 2024, Zenodo, DOI 10.5281/ZENODO.10439063
   Galindo C, 2023, J LOG ALGEBR METHODS, V130, DOI 10.1016/j.jlamp.2022.100832
   Galindo C, 2023, J LOG ALGEBR METHODS, V130, DOI 10.1016/j.jlamp.2022.100826
   Galindo C, 2022, LECT NOTES COMPUT SC, V13550, P74, DOI 10.1007/978-3-031-17108-6_5
   Georges A, 2007, ACM SIGPLAN NOTICES, V42, P57, DOI 10.1145/1297105.1297033
   Gongye XY, 2022, EVOL INTELL, V15, P2411, DOI 10.1007/s12065-020-00416-6
   Graf J, 2010, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2010.9
   Hajnal A, 2012, J SOFTW-EVOL PROC, V24, P67, DOI 10.1002/smr.533
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI 10.1145/960116.53994
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   KOREL B, 1990, J SYST SOFTWARE, V13, P187, DOI 10.1016/0164-1212(90)90094-3
   Krinke J., 2003, Software Engineering Notes, V28, P178, DOI 10.1145/949952.940096
   Krinke J., 2003, Ph.D. thesis
   Kumar KP, 2019, PROCEEDINGS OF THE 28TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC '19), P53, DOI 10.1145/3302516.3307345
   Kumar S, 2002, LECT NOTES COMPUT SC, V2306, P96
   LANDI W, 1992, SIGPLAN NOTICES, V27, P235, DOI 10.1145/143103.143137
   Liang DL, 1998, PROC IEEE INT CONF S, P358, DOI 10.1109/ICSM.1998.738527
   Litvak S., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering, FSE '10, P287, DOI [10.1145/1882291.1882334, DOI 10.1145/1882291.1882334]
   Lyle J.R., 1984, Ph.D. thesis
   Majumdar A, 2007, DRM'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON DIGITAL RIGHTS MANAGEMENT, P70
   MAYDAN DE, 1991, SIGPLAN NOTICES, V26, P1, DOI 10.1145/113446.113447
   Muchnick Steven S., 1997, Advanced compiler design implementation
   Ochoa C., 2005, P 2005 ACM SIGPLAN W, P1, DOI [10.1145/1085099.1085101, DOI 10.1145/1085099.1085101]
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   PUGH W, 1992, SIGPLAN NOTICES, V27, P140, DOI 10.1145/143103.143129
   Ramalingam G., 1999, Conference Record of POPL '99. 26th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P119, DOI 10.1145/292540.292553
   Reps T., 1994, SIGSOFT Software Engineering Notes, V19, P11, DOI 10.1145/195274.195287
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Rodrigues N.F., 2005, P FORM ASP COMP SOFT, P291
   Silva J, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187674
   Silva J, 2012, LECT NOTES COMPUT SC, V7212, P486, DOI 10.1007/978-3-642-28872-2_33
   Snelting G, 2006, ACM T SOFTW ENG METH, V15, P410, DOI 10.1145/1178625.1178628
   Späth J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290361
   Sridharan M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P112, DOI 10.1145/1250734.1250748
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Toth Melinda, 2010, Central European Functional Programming School. Third Summer School (CEFP 2009). Revised Selected Lectures, P372, DOI 10.1007/978-3-642-17685-2_11
   Walkinshaw N, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P55, DOI 10.1109/SCAM.2003.1238031
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
NR 54
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111939
DI 10.1016/j.jss.2023.111939
EA JAN 2024
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LL0G6
UT WOS:001186832000001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Wolfart, D
   Martinez, J
   Assuncao, WKG
   Colanzi, TE
   Egyed, A
AF Wolfart, Daniele
   Martinez, Jabier
   Assuncao, Wesley K. G.
   Colanzi, Thelma E.
   Egyed, Alexander
TI Variability debt in opportunistic reuse: A multi-project field study
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Technical debt; Variability management; Clone and own; Software reuse
ID TECHNICAL DEBT
AB Technical debt is a metaphor to guide the identification, measurement, and general management of decisions that are appropriate in the short term but create obstacles in the future evolution and maintenance of systems. Variability management, which is the ability to create system variants to satisfy different business or technical needs, is a potential source of technical debt. Variability debt, recently characterized in a systematic literature review we conducted, is caused by suboptimal solutions in the implementation of variability management in software systems. In this work, we present a field study in which we report quantitative and qualitative analysis of variability debt through artifact analysis (e.g., requirements, source code, and tests) and a survey with stakeholders (e.g., analysts, developers, managers, and a user). The context is a large company with three different systems, where opportunistic reuse (a.k.a., copy -and -paste or clone -and -own reuse) of almost all project artifacts was performed to create variants for each system. We analyze the variability debt phenomenon related to opportunistic reuse, and we assess the validity of the metaphor to create awareness to stakeholders and guide technical debt management research related to variability aspects. The results of the field study show evidences of factors that complicate the evolution of the variants, such as code duplication and nonsynchronized artifacts. Time pressure is identified as the main cause for not considering other options than opportunistic reuse. Technical practitioners mostly agree on the creation of usability problems and complex maintenance of multiple independent variants. However, this is not fully perceived by managerial practitioners.
C1 [Wolfart, Daniele] Western Parana State Univ UNIOESTE, PPGComp, Cascavel, Brazil.
   [Martinez, Jabier] Tecnalia, Basque Res & Technol Alliance BRTA, Derio, Spain.
   [Assuncao, Wesley K. G.] North Carolina State Univ NCSU, CSC, Raleigh, NC 27606 USA.
   [Assuncao, Wesley K. G.] Pontif Catholic Univ Rio De Janeiro PUC Rio, OPUS, Rio De Janeiro, Brazil.
   [Colanzi, Thelma E.] State Univ Maringa UEM, DIN, Maringa, Brazil.
   [Egyed, Alexander] Johannes Kepler Univ Linz JKU, ISSE, Linz, Austria.
C3 Universidade Estadual do Oeste do Parana; North Carolina State
   University; Universidade Estadual de Maringa; Johannes Kepler University
   Linz
RP Assuncao, WKG (corresponding author), North Carolina State Univ NCSU, CSC, Raleigh, NC 27606 USA.
EM wguezas@ncsu.edu
OI Martinez, Jabier/0000-0001-8742-9640
FU CNPq [428994/2018-0]; FAPERJ PDR-10 program [202073/2020]; BMK; BMDW;
   State of Upper Austria; State of Upper Austria; Austrian Science Fund
   (FWF) [P31989]
FX The research reported in this paper has been funded by CNPq Grant No.
   428994/2018-0; FAPERJ PDR-10 program under Grant No. 202073/2020; BMK,
   BMDW, and the State of Upper Austria in the frame of SCCH, part of the
   COMET Programme managed by FFG; the Secure and Correct System Lab funded
   by the State of Upper Austria; and the Austrian Science Fund (FWF) ,
   grand no. P31989.
CR Arvanitou EM, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P123, DOI 10.1145/3319008.3319019
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Avgeriou P., 2016, Dagstuhl Reports, V6, DOI [DOI 10.4230/DAGREP.6.4.110, 10.4230/DAGREP.6.4.110]
   Benmerzoug A, 2020, LECT NOTES COMPUT SC, V12541, P279, DOI 10.1007/978-3-030-64694-3_17
   Capilla R., 2013, Systems and Software Variability Management: Concepts, Tools and Experiences, DOI [10.1007/978-3-642-36583-6, DOI 10.1007/978-3-642-36583-6]
   Capilla R, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2021), P16, DOI 10.1109/TechDebt52882.2021.00011
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Echeverría J, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106444
   Fenske W., 2015, P 9 INT WORKSH VAR M, P3, DOI DOI 10.1145/2701319.2701321
   Fenske W, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P316, DOI 10.1109/SANER.2017.7884632
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Junior HJ, 2022, INFORM SOFTWARE TECH, V149, DOI 10.1016/j.infsof.2022.106964
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110827
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Li Z., 2014, Economics-Driven Software Architecture, P183, DOI 10.1016/B978-0-12-410464-8.00009-X
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lima Crescencio, 2019, Journal of the Brazilian Computer Society, V25, DOI 10.1186/s13173-019-0088-4
   Martinez J., 2023, Handbook of Re-Engineering Software Intensive Systems Into
   Martinez J., 2022, 26 ACM INT SYST SOFT
   Martinez J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P38, DOI 10.1145/3109729.3109748
   Martinez J, 2014, LECT NOTES COMPUT SC, V8569, P117
   Medeiros R, 2023, INFORM SOFTWARE TECH, V154, DOI 10.1016/j.infsof.2022.107084
   Nikolaidis N, 2019, EUROMICRO CONF PROC, P87, DOI 10.1109/SEAA.2019.00022
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Ribeiro LF, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 1 (ICEIS), P572, DOI 10.5220/0005914605720579
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Siebra CA, 2012, INT SYMP EMP SOFTWAR, P247, DOI 10.1145/2372251.2372297
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   van der Linden Frank, 2007, Software Product Lines in Action: The Best Industrial Practice in Product Line Engineering, DOI [10.1007/978-3-540-71437-8, DOI 10.1007/978-3-540-71437-8]
   Verdecchia R, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110925
   Wolfart D, 2021, PROCEEDINGS OF THE 20TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, SBOS 2021, DOI 10.1145/3488042.3488048
NR 32
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111969
DI 10.1016/j.jss.2024.111969
EA JAN 2024
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KQ7Y4
UT WOS:001181510300001
DA 2024-08-05
ER

PT J
AU Spanò, A
AF Spano, Alvise
TI Flexible and reversible conversion between extensible records and
   overloading constraints for ML
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Functional languages; Extensible records; Overloading resolution; Ad-hoc
   polymorphism; Code reuse; Static dispatching
AB Most ML-like functional languages provide records and overloading as unrelated features. Records not only represent data structures, but are also used to implement dictionary passing, whereas overloading produces type constraints that are basically dictionaries subject to compiler-driven dispatching. In this paper we explore how records and overloading constraints can be converted one into the other, allowing the programmer to switch between the two at a very reasonable cost in terms of syntactic overhead. To achieve this we introduce two language constructs, namely inject and eject, performing a type-driven syntactic transformation. The former literally injects constraints into the type and produces a function adding an extra record argument. The latter does the opposite, ejecting a record argument from a function and turning fields into type constraints. The conversion is reversible and can be restricted to a subset of symbols, granting additional control to the programmer. Although what we call inject has already been proposed in literature, making it a language operator and coupling it with its reverse counterpart represent a novel design. The goal is to allow the programmer to switch from a dictionary-passing style to compiler-assisted constraint resolution, and vice versa, enabling reuse between libraries that otherwise would not interoperate.
C1 [Spano, Alvise] Ca Foscari Univ Venice, Venice, Italy.
C3 Universita Ca Foscari Venezia
RP Spanò, A (corresponding author), Ca Foscari Univ Venice, Venice, Italy.
EM alvise.spano@unive.it
CR Bottu GJ, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3341695
   Bruce KB, 1999, INFORM COMPUT, V155, P108, DOI 10.1006/inco.1999.2829
   Camarao C, 1999, LECT NOTES COMPUT SC, V1722, P37
   Camarao C., 2004, P 6 ACM SIGPLAN INT, P67
   CARDELLI L, 1990, LECT NOTES COMPUT SC, V442, P22
   CARDELLI L, 1985, COMPUT SURV, V17, P471, DOI 10.1145/6041.6042
   Cardelli L., 1992, Extensible Records in a Pure Calculus of Subtyping
   Devriese D, 2011, ICFP 11 - PROCEEDINGS OF THE 2011 ACM SIGPLAN: INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P143
   Dijkstra A., 2005, Technical Report
   Duggan D, 2002, THEOR COMPUT SCI, V275, P215, DOI 10.1016/S0304-3975(01)00129-3
   Gaster B.R., 1996, Technical Report, Technical Report NOTTCS-TR-96-3
   Gaster B.R., 1998, Records, variants and qualified types
   Hall CV, 1996, ACM T PROGR LANG SYS, V18, P109, DOI 10.1145/227699.227700
   Jategaonkar L. A., 1993, Fundamenta Informaticae, V19, P127
   Jones M. P., 1995, Conference Record of FPCA '95. SIGPLAN-SIGARCH-WG2.8. Conference on Functional Programming Languages and Computer Architecture, P160, DOI 10.1145/224164.224198
   Jones M.P., 1999, HASK WORKSH
   Jones M.P., 1993, Technical Report YALEU/DCS/RR- 989
   JONES MP, 1992, LECT NOTES COMPUT SC, V582, P287
   Jones MP, 2000, LECT NOTES COMPUT SC, V1782, P230
   Jones S.P., 1997, HASK WORKSH, P1
   KAES S, 1988, LECT NOTES COMPUT SC, V300, P131
   Kahl W., 2001, P 2001 HASK WORKSH, P71
   Le Botlan D, 2014, ACM SIGPLAN NOTICES, V49, P52, DOI 10.1145/2641638.2641653
   Leijen D., 2005, P 2005 S TRENDS FUNC
   Leijen D, 2009, ACM SIGPLAN NOTICES, V44, P66, DOI 10.1145/1594834.1480891
   Lewis J. R., 2000, Conference Record of POPL'00: 27th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages. Papers Presented at the Symposium, P108, DOI 10.1145/325694.325708
   Odersky M., 1995, Conference Record of FPCA '95. SIGPLAN-SIGARCH-WG2.8. Conference on Functional Programming Languages and Computer Architecture, P135, DOI 10.1145/224164.224195
   Odersky M., 2004, An Overview of the Scala Programming Language
   Odersky M, 2014, COMMUN ACM, V57, P76, DOI 10.1145/2591013
   Oliveira BCD, 2012, ACM SIGPLAN NOTICES, V47, P35, DOI 10.1145/2345156.2254070
   Oliveira BCDS, 2010, ACM SIGPLAN NOTICES, V45, P341, DOI 10.1145/1932682.1869489
   REMY D, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P77, DOI 10.1145/75277.75284
   Schrijvers T, 2019, J FUNCT PROGRAM, V29, DOI 10.1017/S0956796818000242
   Sozeau M, 2008, LECT NOTES COMPUT SC, V5170, P278, DOI 10.1007/978-3-540-71067-7_23
   Stuckey PJ, 2005, ACM T PROGR LANG SYS, V27, P1216, DOI 10.1145/1108970.1108974
   WADLER P, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P60, DOI 10.1145/75277.75283
   WAND M, 1991, INFORM COMPUT, V93, P1, DOI 10.1016/0890-5401(91)90050-C
   Wand M., 1987, LICS
   Winant T, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON HASKELL (HASKELL '18), P81, DOI 10.1145/3242744.3242752
NR 39
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112141
DI 10.1016/j.jss.2024.112141
EA JUL 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XZ5E9
UT WOS:001265506900001
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Wu, JC
   Dohi, T
   Okamura, H
AF Wu, Jingchi
   Dohi, Tadashi
   Okamura, Hiroyuki
TI Long-term software fault prediction with wavelet shrinkage estimation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software reliability; Fault prediction; Non-homogeneous Poisson
   processes; Wavelet shrinkage estimation; Predictive performance; Tool
   development
ID RELIABILITY; MODELS
AB Wavelet shrinkage estimation received considerable attentions to estimate stochastic processes such as a non -homogeneous Poisson process in a non -parametric way, and was applied to software reliability estimation/prediction. However, it lacks the prediction ability for unknown future patterns in long term and penalizes assessing the software reliability in practice. In this paper, we focus on the long-term prediction of the number of software faults detected in the testing phase and propose many novel long-term prediction methods based on the wavelet shrinkage estimation. The fundamental idea is to adopt both the denoised fault -count data and prediction values, and to minimize several kinds of loss functions to make effective predictions. We also develop an automated wavelet -based software reliability assessment tool, W-SRAT2, which is a drastic extension of the existing tool, W-SRAT, by adding those prediction algorithms. In numerical experiments with 6 actual software development project data, we investigate the predictive performance of our long-term prediction approaches, which consist of 2,640 combinations, and compare them with the common software reliability growth models with the maximum likelihood estimation. It is shown that our wavelet shrinkage estimation/prediction methods outperform the existing software reliability growth models.
C1 [Wu, Jingchi; Dohi, Tadashi; Okamura, Hiroyuki] Hiroshima Univ, Grad Sch Adv Sci & Engn, 1-4-1 Kagamiyama, Higashihiroshima, Hiroshima 7398527, Japan.
C3 Hiroshima University
RP Dohi, T (corresponding author), Hiroshima Univ, Grad Sch Adv Sci & Engn, 1-4-1 Kagamiyama, Higashihiroshima, Hiroshima 7398527, Japan.
EM d220580@hiroshima-u.ac.jp; dohi@hiroshima-u.ac.jp;
   okamu@hiroshima-u.ac.jp
FU JST [JPMJFS2129]
FX This work was supported by JST, the establishment of university
   fellowships towards the creation of science technology innovation, Grant
   Number JPMJFS2129.
CR ABDELGHALY AA, 1986, IEEE T SOFTWARE ENG, V12, P950, DOI 10.1109/TSE.1986.6313050
   Achcar JA, 1998, SER QUAL RELIAB ENGN, V4, P1
   AKAIKE H., 1973, Information theory and an extension of the maximum likelihood principle, P267
   [Anonymous], 1990, Technical Report
   ANSCOMBE FJ, 1948, BIOMETRIKA, V35, P246, DOI 10.1093/biomet/35.3-4.246
   Barghout M., 1998, Software Testing, Verification and Reliability, V8, P113, DOI 10.1002/(SICI)1099-1689(1998090)8:3<113::AID-STVR159>3.0.CO;2-8
   Bartlett M. S., 1936, Journal of the Royal Statistical Society, V3, P68
   BARTLETT MS, 1947, BIOMETRICS, V3, P39, DOI 10.2307/3001536
   Carrozza G, 2018, INFORM SOFTWARE TECH, V102, P100, DOI 10.1016/j.infsof.2018.05.009
   Cinque M, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1638
   Daubechies I., 1992, CBMS NSF REG C SER A, DOI DOI 10.1137/1.9781611970104
   Dohi T, 2020, QUAL ENG, V32, P421, DOI 10.1080/08982112.2020.1757705
   DONOHO DL, 1994, BIOMETRIKA, V81, P425, DOI 10.1093/biomet/81.3.425
   Farr W., 1993, Revision, V3
   Fisz M., 1955, Colloquium Mathematicum, V3, P138, DOI DOI 10.4064/CM-3-2-138-146
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11, P1411, DOI 10.1109/TSE.1985.232177
   Gokhale SS, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P34, DOI 10.1109/HASE.1998.731593
   Hirata T, 2009, LECT NOTES COMPUT SC, V5899, P225, DOI 10.1007/978-3-642-10509-8_26
   Huang CY, 2011, IEEE T RELIAB, V60, P498, DOI 10.1109/TR.2011.2134350
   Hudepohl JP, 1996, IEEE SOFTWARE, V13, P56, DOI 10.1109/52.536459
   HYMAN R, 1982, J PERS ASSESS, V46, P96, DOI 10.1207/s15327752jpa4601_16
   Kanoun K., 1993, Digest of Papers FTCS-23 The Twenty-Third International Symposium on Fault-Tolerant Computing, P654, DOI 10.1109/FTCS.1993.627370
   Kolaczyk ED, 1997, ASTROPHYS J, V483, P340, DOI 10.1086/304243
   Kuo L, 1996, J AM STAT ASSOC, V91, P763, DOI 10.2307/2291671
   Li NX, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P375, DOI 10.1109/ISSRE.1995.497680
   Lyu M. R., 1996, Handbook of software reliability engineering
   LYU MR, 1992, PROCEEDINGS OF THE FIFTH INTERNATIONAL WORKSHOP ON COMPUTER-AIDED SOFTWARE ENGINEERING, P264, DOI 10.1109/CASE.1992.200165
   Nagaraju V, 2019, SOFTWAREX, V10, DOI 10.1016/j.softx.2019.100357
   Nason GP, 1996, J ROY STAT SOC B MET, V58, P463
   OHBA M, 1984, LECT NOTES ECON MATH, V235, P144
   Ohishi K, 2009, J SYST SOFTWARE, V82, P535, DOI 10.1016/j.jss.2008.11.840
   Okamura H, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P219, DOI 10.1109/HASE.2004.1281746
   Okamura H., 2005, Opsearch, V42, P355
   Okamura H, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P69, DOI 10.1109/ISESE.2002.1166927
   Okamura H, 2013, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2013.6698909
   Okamura H, 2013, RELIAB ENG SYST SAFE, V116, P135, DOI 10.1016/j.ress.2012.02.002
   Ramani S, 2000, PERFORM EVALUATION, V39, P37, DOI 10.1016/S0166-5316(99)00057-7
   Ramani S., 1988, Technical Report
   Saito Y, 2016, J SYST SOFTWARE, V117, P296, DOI 10.1016/j.jss.2016.03.047
   Saito Y, 2015, IEICE T FUND ELECTR, VE98A, P2042, DOI 10.1587/transfun.E98.A.2042
   Shibata Kazuya, 2015, International Journal of Performability Engineering, V11, P369
   Shibata K, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P43, DOI 10.1109/PRDC.2007.18
   SOFER A, 1991, IEEE T RELIAB, V40, P329, DOI 10.1109/24.85453
   Wu JC, 2021, IEEE INT C S Q R S, P564, DOI 10.1109/QRS54544.2021.00067
   Xiao X, 2013, IEEE T RELIAB, V62, P930, DOI 10.1109/TR.2013.2285055
   Xiao X, 2013, IEEE T RELIAB, V62, P211, DOI 10.1109/TR.2013.2240897
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   Yamada S., 1984, Transactions of the Institute of Electronics and Communication Engineers of Japan, Section E (English), VE67, P79
   Yamada S., 1985, Appl. Stoch. Models Data Anal, V1, P65
   Zhao M, 1996, SCAND J STAT, V23, P597
NR 51
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112123
DI 10.1016/j.jss.2024.112123
EA JUN 2024
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YC7E6
UT WOS:001266345900001
DA 2024-08-05
ER

PT J
AU Zhang, WX
   Holtmann, J
   Strüber, D
   Hebig, R
   Steghöfer, JP
AF Zhang, Weixing
   Holtmann, Jorg
   Struber, Daniel
   Hebig, Regina
   Steghoefer, Jan-Philipp
TI Supporting meta-model-based language evolution and rapid prototyping
   with automated grammar transformation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Domain -specific languages; DSL; Grammar; Xtext; Language evolution;
   Language prototyping
ID COEVOLUTION
AB In model-driven engineering, developing a textual domain-specific language (DSL) involves constructing a meta-model, which defines an underlying abstract syntax, and a grammar, which defines the concrete syntax for the DSL. We consider a scenario in which the meta-model is manually maintained, which is common in various contexts, such as blended modeling, in which several concrete syntaxes co-exist in parallel. Language workbenches such as Xtext support such a scenario, but require the grammar to be manually co-evolved, which is laborious and error-prone. In this paper, we present GRAMMARTRANSfORMER, an approach for transforming generated grammars in the context of meta-model-based language evolution. To reduce the effort for language engineers during rapid prototyping and language evolution, it offers a catalog of configurable grammar transformation rules. Once configured, these rules can be automatically applied and re-applied after future evolution steps, greatly reducing redundant manual effort. In addition, some of the supported transformations can globally change the style of concrete syntax elements, further significantly reducing the effort for manual transformations. The grammar transformation rules were extracted from a comparison of generated and existing, expertcreated grammars, based on seven available DSLs. An evaluation based on the seven languages shows GRAMMARTRANSfORMER's ability to modify Xtext-generated grammars in a way that agrees with manual changes performed by an expert and to support language evolution in an efficient way, with only a minimal need to change existing configurations over time.
C1 [Zhang, Weixing; Holtmann, Jorg; Struber, Daniel] Chalmers Univ Gothenburg, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Struber, Daniel] Radboud Univ Nijmegen, Dept Software Sci, Nijmegen, Netherlands.
   [Hebig, Regina] Univ Rostock, Inst Comp Sci, Rostock, Germany.
   [Steghoefer, Jan-Philipp] XITASO GmbH IT & Software Solut, Augsburg, Germany.
C3 Chalmers University of Technology; Radboud University Nijmegen;
   University of Rostock
RP Strüber, D (corresponding author), Chalmers Univ Gothenburg, Dept Comp Sci & Engn, Gothenburg, Sweden.
EM weixing.zhang@gu.se; joerg_holtmann@gmx.de; danstru@chalmers.se;
   regina.hebig@uni-rostock.de; jan-philipp.steghoefer@xitaso.com
RI Zhang, Weixing/HCI-7535-2022; Hebig, Regina/B-5284-2015
OI Zhang, Weixing/0000-0003-2890-6034; Hebig, Regina/0000-0002-1459-2081;
   Holtmann, Jorg/0000-0001-6141-4571
FU Vinnova [2019-02382]
FX This work has been sponsored by Vinnova under grant number 2019-02382 as
   part of the ITEA 4 project BUMBLE .
CR AtlanMod Team, 2019, Atlantic zoo
   Barash M., 2020, Zoo of domain-specific languages
   Bettini L., 2016, Implementing Domain-Specific Languages with Xtext and Xtend
   Chaudhuri SR, 2019, DSM'19: PROCEEDINGS OF THE 17TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON DOMAIN-SPECIFIC MODELING, P1, DOI 10.1145/3358501.3361235
   Chodarev S, 2016, ACSIS-ANN COMPUT SCI, V8, P1565, DOI 10.15439/2016F530
   Ciccozzi F, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P425, DOI 10.1109/MODELS-C.2019.00068
   Community D., 2021, Financial domain-specific language listing
   Czech G, 2018, EUROMICRO CONF PROC, P137, DOI 10.1109/SEAA.2018.00031
   Dejanovic I, 2017, KNOWL-BASED SYST, V115, P1, DOI 10.1016/j.knosys.2016.10.023
   Di Ruscio D., 2011, PROC 2 INT WORKSHOP, P30
   Di Ruscio D, 2011, LECT NOTES COMPUT SC, V6563, P143, DOI 10.1007/978-3-642-19440-5_9
   EAST-ADL Association, 2021, EAST-ADL
   EAST-ADL Association, 2022, EATOP repository
   Eclipse Foundation, 2018, Eclipse Xcore wiki
   Eclipse Foundation, 2022, Eclipse OCLTM (Object Constraint Language)
   Eclipse Foundation, 2012, Xcore metamodel
   Eclipse Foundation, 2018, ATL syntax
   Eclipse Foundation, 2022, QVTo-EclipsePedia
   Frank U., 2011, EMISA, P93
   Frank U., 2013, Domain Engineering: Product Lines, Languages, and Conceptual Models, P133
   Garcia J., 2012, INT C SOFTW LANG ENG, P144
   Graphviz Authors, 2022, DOT language
   Greenyer J., 2018, Scenario modeling language (SML) repository
   Hebig R, 2017, IEEE T SOFTWARE ENG, V43, P396, DOI 10.1109/TSE.2016.2610424
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5562, P114, DOI 10.1007/978-3-642-02674-4_9
   Holtmann J., 2023, P 11 INT C MODEL BAS, P218, DOI DOI 10.5220/0011745900003402
   Hopcroft J.E., 1969, Math. Syst. Theory, V3, P119
   International Organization for Standardization (ISO), 1996, ISO/IEC 14977:1996
   itemis AG, 2020, Dot Xtext grammar
   JetBrains, 2022, MPS: The domain-specific language creator by JetBrains
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Karaila M., 2009, P 9 OOPSLA WORKSH DO, P1
   Karsai G, 2014, Arxiv, DOI arXiv:1409.2378
   Kelly S, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P37, DOI 10.1145/3270112.3270132
   Khelladi DE, 2017, J SYST SOFTWARE, V134, P242, DOI 10.1016/j.jss.2017.09.010
   Khelladi DE, 2016, LECT NOTES COMPUT SC, V9679, P333, DOI 10.1007/978-3-319-35122-3_22
   Kleppe A., 2007, 4 INT WORKSH LANG EN
   Kleppe A, 2007, LECT NOTES COMPUT SC, V4530, P114
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Neubauer P., 2015, 2015 ACM SIGPLAN INT, P71, DOI DOI 10.1145/2814251.2814267
   Neubauer P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P565, DOI 10.1109/SANER.2017.7884679
   Nordmann A., 2020, An overview of domain-specific languages in robotics
   Novotny M., 2012, Model-Driven Pretty Printer for Xtext Framework
   Object Management Group, 2016, QVT-MOF query/view/transformation specification version 1.3
   Object Management Group, 2015, QVT-MOF query/view/transformation specification version 1.2
   Object Management Group, 2008, QVT-MOF query/view/transformation specification version 1.0
   Object Management Group, 2011, QVT-MOF query/view/transformation specification version 1.1
   OMG, 2014, Object Constraint Language-OCL v 2.4
   Paige RF, 2014, SCI COMPUT PROGRAM, V96, P396, DOI 10.1016/j.scico.2014.05.007
   Paperpile, 2022, A complete guide to the BibTeX format
   Parr T., 2022, ANTLR
   Pizka M., 2007, SOFTW SERV VAR MAN W, V3, P48
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Semantic Designs I., 2021, Domain specific languages
   Spectra Authors, 2021, Spectra metamodel
   Spectra Authors, 2021, Spectra
   Steinberg D., 2008, EMF: Eclipse Modeling Framework
   Tolvanen JP, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P235, DOI 10.1145/3239372.3239410
   TypeFox GmbH, 2022, Langium
   van Amstel M., 2010, P JOINT ERCIM WORKSH, P48
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Wang Q., 2005, P 2005 ACM S APPL CO, P1419
   Wikimedia Foundation I., 2023, Wikipedia page of Domain specific language
   Willink ED, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.3.a17
   Wilson008, 2024, Zenodo, DOI 10.5281/ZENODO.10683827
   Xenia Authors, 2019, Xenia metmodel
   Xenia Authors, 2019, Xenia Xtext
   Zaytsev V., 2013, Grammarware BibTeX metamodel
   Zhang W., 2023, 16 ACM SIGPLAN INT C
NR 70
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2024
VL 214
AR 112069
DI 10.1016/j.jss.2024.112069
EA MAY 2024
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TE6X4
UT WOS:001239636200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Ali, N
   Punnekkat, S
   Rauf, A
AF Ali, Nazakat
   Punnekkat, Sasikumar
   Rauf, Abdul
TI Modeling and safety analysis for collaborative safety-critical systems
   using hierarchical colored Petri nets
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Safety -critical; Petri nets; Safety analysis; Colored Petri -nets
ID VERIFICATION; VALIDATION
AB Context: Collaborative systems enable multiple independent systems to work together towards a common goal. These systems can include both human-system and system-system interactions and can be found in a variety of settings, including smart manufacturing, smart transportation, and healthcare. Safety is an important consideration for collaborative systems because one system's failure can significantly impact the overall system performance and adversely affect other systems, humans or the environment. Goal: Fail-safe mechanisms for safety-critical systems are designed to bring the system to a safe state in case of a failure in the sensors or actuators. However, a collaborative safety-critical system must do better and be safeoperational, for e.g., a failure of one of the members in a platoon of vehicles in the middle of a highway is not acceptable. Thus, failures must be compensated, and compliance with safety constraints must be ensured even under faults or failures of constituent systems. Method: In this paper, we model and analyze safety for collaborative safety-critical systems using hierarchical Coloured Petri nets (CPN). We used an automated Human Rescue Robot System (HRRS) as a case study, modeled it using hierarchical CPN, and injected some specified failures to check and confirm the safe behavior in case of unexpected scenarios. Results: The system behavior was observed after injecting three types of failures in constituent systems, and then safety mechanisms were applied to mitigate the effect of these failures. After applying safety mechanisms, the HRRS system's overall behavior was again observed both in terms of verification and validation, and the simulated results show that all the identified failures were mitigated and HRRS completed its mission. Conclusion: It was found that the approach based on formal methods (CPN modeling) can be used for the safety analysis, modeling, validation, and verification of collaborative safety-critical systems like HRRS. The hierarchical CPN provides a rigorous way of modeling to implement complex collaborative systems.
C1 [Ali, Nazakat; Punnekkat, Sasikumar] Malardalen Univ, Sch Innovat Design & Technol, Vasteras, Sweden.
   [Rauf, Abdul] Knightec AB, Vasteras, Sweden.
C3 Malardalen University
RP Ali, N (corresponding author), Malardalen Univ, Sch Innovat Design & Technol, Vasteras, Sweden.
EM nazakat.ali@mdu.se
FU SSF
FX This research was partially supported by the SSF funded DAISY Project.
CR Akhtar N, 2019, IEEE ACCESS, V7, P180544, DOI 10.1109/ACCESS.2019.2958258
   Ali N, 2022, SENSORS-BASEL, V22, DOI 10.3390/s22124474
   Ali N, 2021, MATHEMATICS-BASEL, V9, DOI 10.3390/math9222851
   An YS, 2018, APPL SCI-BASEL, V8, DOI 10.3390/app8010141
   BOWEN J, 1993, SOFTWARE ENG J, V8, P189, DOI 10.1049/sej.1993.0025
   Clarke E, 2001, LECT NOTES COMPUT SC, V2000, P176
   Valadares DCG, 2021, IEEE INTERNET THINGS, V8, P17199, DOI 10.1109/JIOT.2021.3077850
   Gonçalves P, 2017, RELIAB ENG SYST SAFE, V167, P383, DOI 10.1016/j.ress.2017.06.021
   Gualtieri L, 2021, ROBOT CIM-INT MANUF, V67, DOI 10.1016/j.rcim.2020.101998
   Honour E, 2013, Arxiv, DOI arXiv:1311.3626
   Hu SL, 2017, ADV INTEL SYS RES, V141, P175
   Hussain M, 2022, SENSORS-BASEL, V22, DOI 10.3390/s22176610
   Jensen Kurt, 2007, International Journal on Software Tools for Technology Transfer, V9, P213, DOI 10.1007/s10009-007-0038-x
   Jensen K, 2015, COMMUN ACM, V58, P61, DOI 10.1145/2663340
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Katsaros P, 2009, INFORM SOFTWARE TECH, V51, P235, DOI 10.1016/j.infsof.2008.01.005
   Kuo CH, 2000, IEEE T ROBOTIC AUTOM, V16, P301, DOI 10.1109/70.850648
   Lee Jay, 2015, Manufacturing Letters, V3, P18, DOI 10.1016/j.mfglet.2014.12.001
   Li ZL, 2016, CHINESE J AERONAUT, V29, P1027, DOI 10.1016/j.cja.2016.04.016
   Liu S., 2014, Formal modeling and analysis techniques for high level Petri nets
   Luo JC, 2015, IEEE T SYST MAN CY-S, V45, P530, DOI 10.1109/TSMC.2014.2351375
   Maier M. W., 1998, Systems Engineering, V1, P267, DOI DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D
   Murphy R., 2021, IEEE Spectr
   PETERSON JL, 1977, COMPUT SURV, V9, P223, DOI 10.1145/356698.356702
   Raman Ramakrishnan, 2022, INCOSE International Symposium, P809, DOI 10.1002/iis2.12965
   SAVI VM, 1992, LECT NOTES COMPUT SC, V616, P328
   Sloan RH, 1996, ACTA INFORM, V33, P687, DOI 10.1007/s002360050066
   Song HF, 2018, SAFETY SCI, V110, P313, DOI 10.1016/j.ssci.2018.08.017
   Song HF, 2017, RELIAB ENG SYST SAFE, V164, P10, DOI 10.1016/j.ress.2017.03.001
   Valmari A., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P429
   Wang R, 2016, SAFETY SCI, V88, P166, DOI 10.1016/j.ssci.2016.05.006
   Wu D., 2014, Dissertation
   Wu DH, 2018, RELIAB ENG SYST SAFE, V176, P62, DOI 10.1016/j.ress.2018.03.035
   Zhang T, 2022, SUSTAINABILITY-BASEL, V14, DOI 10.3390/su141811669
NR 34
TC 1
Z9 1
U1 4
U2 4
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111958
DI 10.1016/j.jss.2024.111958
EA JAN 2024
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HS9D5
UT WOS:001161603900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Eisenecker, U
   Müller, R
AF Eisenecker, Ulrich
   Mueller, Richard
TI Software product lines and features from the perspective of set theory
   with an application to feature location
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software product line; Variability modeling; Feature model; Feature
   isolation; Feature location
ID REUSE; CODE
AB Features are a central concept of Software Product Lines (SPLs). Over the last decades, several understandings of what features are have evolved. They have important similarities but also some differences. However, there is no unifying formal theory of features. We present a definition of features that is completely independent of the representation of features in software artifacts and a comprehensive categorization scheme for features. Based on this, we introduce a formal approach for feature-specific composition and decomposition of SPLs using set theory. We apply this approach to feature isolation as a prerequisite for feature location and provide a theoretical validation. For this purpose, we present programs that compose all possible systems for a given number of features and isolate each feature. By testing various conclusions based on this theory, we evaluate its soundness, consistency, and robustness. The results show under which conditions features can be successfully isolated and possibly located. In addition, we describe the current limitations of the approach and provide an outlook for future work.
C1 [Eisenecker, Ulrich] Univ Leipzig, Informat Syst Inst, Grimma Str 12, D-04109 Leipzig, Germany.
   [Mueller, Richard] Deloitte Serv GmbH, Lutherstr 51, D-02826 Gorlitz, Germany.
C3 Leipzig University
RP Müller, R (corresponding author), Deloitte Serv GmbH, Lutherstr 51, D-02826 Gorlitz, Germany.
EM eisenecker@wifa.uni-leipzig.de; richmueller@deloitte.de
CR Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Al-msie'deen R., 2013, 2013 IEEE 14th International Conference on Information Reuse & Integration (IRI), P586, DOI 10.1109/IRI.2013.6642522
   AL-Msie'deen Ra'Fat, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P302, DOI 10.1007/978-3-642-38977-1_22
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel S, 2008, LECT NOTES COMPUT SC, V5140, P36
   Apel Sven., 2013, P 5 INT WORKSHOP FEA, P1, DOI [10.1145/2528265.2528267, DOI 10.1145/2528265.2528267]
   Assuncao W.K.G., 2014, 18 INT SOFTWARE PROD, V2, P52, DOI [/10.1145/2647908.2655967, DOI 10.1145/2647908.2655967]
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bigliardi L, 2014, INT CONF QUAL SOFTW, P286, DOI 10.1109/QSIC.2014.31
   Bourque Pierre., 2014, Guide to the Software Engineering - Body of Knowledge, P346, DOI DOI 10.1234/12345678
   Cohen S.G.., 1990, Technical Report
   Cruz D, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302343
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2487, P156
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki Krysztof., 1999, GENERATIVE PROGRAMMI
   El Dammagh M, 2011, LECT NOTES COMPUT SC, V6999, P120, DOI 10.1007/978-3-642-24574-9_17
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Kästner C, 2014, IEEE T SOFTWARE ENG, V40, P67, DOI 10.1109/TSE.2013.45
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kolesnikov S., 2019, Phd thesis
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Li Y, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P49, DOI 10.1145/3106195.3106216
   Linsbauer L, 2014, PROC IEEE INT CONF S, P426, DOI 10.1109/ICSME.2014.67
   Linsbauer Lukas., 2013, P 17 INT SOFTW PROD, P131
   Martinez J, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P257, DOI 10.1145/3233027.3236402
   Martinez J, 2018, INFORM SOFTWARE TECH, V104, P46, DOI 10.1016/j.infsof.2018.07.005
   Martinez J, 2016, LECT NOTES COMPUT SC, V9679, P267, DOI 10.1007/978-3-319-35122-3_18
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   Michelon GK, 2021, PROCEEDINGS OF 15TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS, VAMOS 2021, DOI 10.1145/3442391.3442403
   Michelon GK, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P93, DOI 10.1145/3336294.3342360
   Müller R, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P88, DOI 10.1145/3336294.3342358
   Nie KM, 2012, ASIA PAC SOFWR ENG, P547, DOI 10.1109/APSEC.2012.116
   Pohl K., 2018, The Essence of Software Engineering, P185, DOI [10.1007/978-3-319-73897-0_11, DOI 10.1007/978-3-319-73897-0_11]
   Raatikainen M, 2019, J SYST SOFTWARE, V149, P485, DOI 10.1016/j.jss.2018.12.027
   Riebisch M., 2002, 6 C INT DES PROC TEC
   Rosenmüller M, 2011, AUTOMAT SOFTW ENG, V18, P163, DOI 10.1007/s10515-011-0080-5
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Rubin J, 2012, IEEE INT CONF AUTOM, P242, DOI 10.1145/2351676.2351712
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Seidl C., 2016, MODELLIERUNG
   Soares LR, 2018, INFORM SOFTWARE TECH, V98, P44, DOI 10.1016/j.infsof.2018.01.016
   Thum T., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P191, DOI 10.1109/SPLC.2011.53
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   Wahyudianto, 2014, J. Comput. Commun., V2, P101, DOI [10.4236/jcc.2014.22018, DOI 10.4236/JCC.2014.22018]
   Xing ZC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1311, DOI 10.1109/ICSE.2013.6606705
   Yinxing Xue, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P145, DOI 10.1109/WCRE.2012.24
   Ziadi T, 2012, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2012.52
NR 51
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111938
DI 10.1016/j.jss.2023.111938
EA JAN 2024
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HH8D9
UT WOS:001158685800001
DA 2024-08-05
ER

PT J
AU Pakonen, A
   Buzhinsky, I
   Vyatkin, V
AF Pakonen, Antti
   Buzhinsky, Igor
   Vyatkin, Valeriy
TI Evaluation of visual property specification languages based on practical
   model-checking experience
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Formal specifications; Instrumentation and control; Formal verification;
   Model checking; Requirements engineering
ID VERIFICATION
AB Formal verification methods like model checking can provide mathematical proofs of design correctness, so their use is justified in applications where safety or reliability requirements are high. A key challenge for the wider adoption of model checking is the effort and expertise needed in formalizing functional requirements into verifiable properties. A particular challenge in specifying formal properties for industrial instrumentation and control (I&C) logics is accounting for the sequencing and timing issues that arise from, e.g., the dynamic behavior of the plant being controlled. In this paper, we evaluate different visual property specification languages that are aimed at making formal methods more accessible. We have collected 3923 formal properties from practical model checking projects in the nuclear and rail traffic industries and identified the most commonly occurring types of properties. Based on the sample data, a real-world example logic, and our practical experience, we identify requirements for a user-friendly property specification language most suited for our specific domain of industrial I&C.
C1 [Pakonen, Antti] VTT Tech Res Ctr Finland Ltd, Espoo, Finland.
   [Buzhinsky, Igor] IPRally Technol Oy, Helsinki, Finland.
   [Vyatkin, Valeriy] Aalto Univ, Dept Elect Engn & Automat, Espoo, Finland.
   [Vyatkin, Valeriy] Lulea Tekn Univ, Dept Comp Sci Comp & Space Engn, Lulea, Sweden.
C3 VTT Technical Research Center Finland; Aalto University; Lulea
   University of Technology
RP Pakonen, A (corresponding author), VTT Tech Res Ctr Finland Ltd, Espoo, Finland.
EM antti.pakonen@vtt.fi; igor.buzhinsky@gmail.com; valeriy.vyatkin@aalto.fi
OI Pakonen, Antti/0000-0002-6803-2303
CR Adiego BF, 2015, IEEE T IND INFORM, V11, P1400, DOI 10.1109/TII.2015.2489184
   Alfonso A, 2004, PROC INT CONF SOFTW, P168, DOI 10.1109/ICSE.2004.1317439
   Autili M, 2007, AUTOMAT SOFTW ENG, V14, P293, DOI 10.1007/s10515-007-0012-6
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Bel V, 2018, Licensing of safety critical software for nuclear regulators, Common position of international nuclear regulators and authorised technical support organisation. Common position Revision 2018
   Benedetti M, 2003, LECT NOTES COMPUT SC, V2619, P18
   Bouyer P, 2009, ELECTRON NOTES THEOR, V231, P323, DOI 10.1016/j.entcs.2009.02.044
   Bozzano M, 2014, RELIAB ENG SYST SAFE, V132, P20, DOI 10.1016/j.ress.2014.07.003
   Brunello A., 2019, P TIME MAL SPAIN, DOI DOI 10.4230/LIPICS.TIME.2019.17
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Buzhinsky I., 2018, Research report, DOI [10.13140/RG.2.2.26467.20009, DOI 10.13140/RG.2.2.26467.20009]
   Buzhinsky I, 2020, IEEE INTL CONF IND I, P159, DOI 10.1109/INDIN45582.2020.9442188
   Campos J.C., 2009, IFAC Proc., V42, P972, DOI [10.3182/20090603-3-RU-2001.0425, DOI 10.3182/20090603-3-RU-2001.0425]
   Campos J.C., 2008, Property patterns for the formal verification of automated production systems, P5107, DOI [DOI 10.3182/20080706-5-KR-1001.00858, 10. 3182/20080706-5-KR-1001.00858]
   Cimatti Alessandro, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P52, DOI 10.1007/978-3-662-46681-0_4
   Cimatti Alessandro, 2002, Computer Aided Verification, P359, DOI [DOI 10.1007/3-540-45657-0{}29, 10.1007/3-540-45657-029]
   Clarke E, 2001, FORM METHOD SYST DES, V19, P7, DOI 10.1023/A:1011276507260
   Clarke EM, 1999, MODEL CHECKING, P1
   Czepa C, 2020, IEEE T SOFTWARE ENG, V46, P100, DOI 10.1109/TSE.2018.2859926
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Dierks H., 2002, Formal Techniques in Real-Time and Fault-Tolerant Systems. 7th International Symposium, FTRTFT 2002. Proceedings (Lecture Notes in Computer Science Vol.2469), P433
   Dietz C, 1996, LECT NOTES COMPUT SC, V1135, P366
   Dillon L. K., 1994, ACM Transactions on Software Engineering and Methodology, V3, P131, DOI 10.1145/192218.192226
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   Eisner C, 2006, INTEGR CIRCUIT SYST, P1
   El Menshawy M, 2018, J SYST SOFTWARE, V138, P189, DOI 10.1016/j.jss.2017.12.042
   Filipovikj P, 2016, P INT COMP SOFTW APP, P167, DOI 10.1109/COMPSAC.2016.140
   Fockel M, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P311, DOI 10.5220/0006554103110318
   Giannakopoulou D, 2020, LECT NOTES COMPUT SC, V12045, P19, DOI 10.1007/978-3-030-44429-7_2
   Grobelna I, 2020, INFORM EDUC, V19, P223, DOI 10.15388/infedu.2020.11
   Guo XY, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110461
   Holzmann G. J., 2002, Software Engineering Notes, V27, P81, DOI 10.1145/605466.605479
   IAEA, 2021, Nuclear Energy Series NP-T-2.14
   IEC, 2012, IEC Standard 62531:2012
   IEC, 2013, Technical Report
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   LAMPORT L, 1977, IEEE T SOFTWARE ENG, V3, P125, DOI 10.1109/TSE.1977.229904
   Lee IS, 1997, 1997 HIGH-ASSURANCE ENGINEERING WORKSHOP - PROCEEDINGS, P42, DOI 10.1109/HASE.1997.648037
   Ljungkrantz Oscar, 2010, 2010 8th IEEE International Conference on Industrial Informatics (INDIN 2010), P1067, DOI 10.1109/INDIN.2010.5549591
   Ljungkrantz O, 2014, EMPIR SOFTW ENG, V19, P655, DOI 10.1007/s10664-012-9232-x
   Mathworks, 2023, Simulink design verifier.
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Menghi C, 2021, IEEE T SOFTWARE ENG, V47, P2208, DOI 10.1109/TSE.2019.2945329
   Monteiro PT, 2008, BIOINFORMATICS, V24, pI227, DOI 10.1093/bioinformatics/btn275
   Németh E, 2009, LECT NOTES COMPUT SC, V5596, P199, DOI 10.1007/978-3-642-03240-0_17
   Nikora Allen P., 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P185, DOI 10.1109/ISSRE.2009.15
   Pakonen A., 2017, Safety and Reliability. Theory and Applications, P3189
   Pakonen A., 2021, P ISOFIC OK JAP
   Pakonen A., 2021, P NPIC HMIT PROV RI, P792, DOI [10.13182/T124-34322, DOI 10.13182/T124-34322]
   Pakonen Antti, 2023, Zenodo, DOI 10.5281/ZENODO.7759742
   Pakonen A, 2021, RELIAB ENG SYST SAFE, V205, DOI 10.1016/j.ress.2020.107237
   Pakonen A, 2016, IEEE INT C EMERG
   Pakonen A, 2018, IEEE INTL CONF IND I, P747, DOI 10.1109/INDIN.2018.8472025
   Pavlovic Olivera, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P439, DOI 10.1109/ICST.2010.10
   PragmaDev, 2023, PragmaDev tracer.
   Preusse S., 2012, P ETFA KRAK POL, DOI [10.1109/ETFA.2012.6489679, DOI 10.1109/ETFA.2012.6489679]
   Ramakrishna YS, 1996, THEOR COMPUT SCI, V170, P1
   Resnick M, 2009, COMMUN ACM, V52, P60, DOI 10.1145/1592761.1592779
   Santos T., 2018, LNCS, P252, DOI [DOI 10.1007/978-3-030-03044-516, 10.1007/978-3-030-03044-516]
   Schlör R, 1998, LECT NOTES COMPUT SC, V1385, P208, DOI 10.1007/BFb0053507
   Schlor R., 2002, Ph.D. thesis
   Sharvia S, 2015, RELIAB ENG SYST SAFE, V135, P64, DOI 10.1016/j.ress.2014.10.025
   SLAC National Accelerator Laboratory, 2007, What's new in release
   Smith M, 2004, Timeedit, a visual tool for specifying correctness properties
   Smith MH, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P14
   Stewart D, 2021, RELIAB ENG SYST SAFE, V213, DOI 10.1016/j.ress.2021.107649
   Univesity of Buenos Aires, 2006, VTS: Visual timed event scenarios.
   Vyatkin V., 1994, Eurasip J. Embed. Syst, V2007
   Vyatkin V., 2007, Model-checkers for net condition/event systems
   Weizmann Institute of Science, 2020, PlayGo.
   Yoo J, 2009, NUCL ENG TECHNOL, V41, P79, DOI 10.5516/NET.2009.41.1.079
   Zhang N, 2021, THEOR COMPUT SCI, V857, P29, DOI 10.1016/j.tcs.2020.12.032
   Zhang PC, 2010, J SYST SOFTWARE, V83, P371, DOI 10.1016/j.jss.2009.09.013
NR 75
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112153
DI 10.1016/j.jss.2024.112153
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZI6M8
UT WOS:001274706300001
DA 2024-08-05
ER

PT J
AU Yilmaz, R
   Buzluca, F
AF Yilmaz, Rahime
   Buzluca, Feza
TI A fuzzy logic-based quality model for identifying microservices with low
   maintainability
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Microservice; Microservice quality; Quality model; Quality measurement;
   Maintainability; Fuzzy logic
ID DESIGN
AB Microservice Architecture (MSA) is a popular architectural style that offers many advantages regarding quality attributes, including maintainability and scalability. Developing a system as a set of microservices with expected benefits requires a quality assessment strategy that is established on the measurements of the system 's properties. This paper proposes a hierarchical quality model based on fuzzy logic to measure and evaluate the maintainability of MSAs considering ISO/IEC 250xy SQuaRE (System and Software Quality Requirements and Evaluation) standards. Since the qualitative bounds of low-level quality attributes are inherently ambiguous, we use a fuzzification technique to transform crisp values of code metrics into fuzzy levels and apply them as inputs to our quality model. The model generates fuzzy values for the quality sub-characteristics of the maintainability, i.e., modifiability and testability, converted to numerical values through defuzzification. In the last step, using the values of the sub-characteristics, we calculate numerical scores indicating the maintainability level of each microservice in the examined software system. This score was used to assess the quality of the microservices and decide whether they need refactoring. We evaluated our approach by creating a test set with the assistance of three developers, who reviewed and categorized the maintainability levels of the microservices in an open-source project based on their knowledge and experience. They labeled microservices as low, medium, or high, with low indicating the need for refactoring. Our method for identifying low-labeled microservices in the given test set achieved 94% accuracy, 78% precision, and 100% recall. These results indicate that our approach can assist designers in evaluating the maintainability quality of microservices.
C1 [Yilmaz, Rahime] Istanbul Tech Univ, Comp Engn Dept, Altinbas Univ, Istanbul, Turkiye.
   [Buzluca, Feza] Istanbul Tech Univ, Comp Engn Dept, Istanbul, Turkiye.
C3 Altinbas University; Istanbul Technical University; Istanbul Technical
   University
RP Yilmaz, R (corresponding author), Istanbul Tech Univ, Comp Engn Dept, Altinbas Univ, Istanbul, Turkiye.
EM rahime.yilmaz@altinbas.edu.tr; buzluca@itu.edu.tr
CR Aksakalli IK, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111014
   Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   Amaral M, 2015, 2015 IEEE 14TH INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA), P27, DOI 10.1109/NCA.2015.49
   Apel S., 2019, Communications in Computer and Information Science, P205, DOI [10.1007/978-3-030-22482-015, DOI 10.1007/978-3-030-22482-015]
   Ataei P, 2023, J BIG DATA-GER, V10, DOI 10.1186/s40537-023-00733-4
   Azeem M.F., 2012, Fuzzy inference system - Theory and application, DOI DOI 10.5772/2341
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bennett K.H., 2000, P C FUT SOFTW ENG, P73
   Bezdek JamesC., 1993, J INTELL FUZZY SYST, V1, P1, DOI [10.3233/IFS-1993-1103, DOI 10.3233/IFS-1993-1103]
   BINDER RV, 1994, COMMUN ACM, V37, P87, DOI 10.1145/182987.184077
   Bogner J, 2019, LECT NOTES COMPUT SC, V11915, P489, DOI 10.1007/978-3-030-35333-9_34
   Bogner J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P187, DOI 10.1109/ICSA-C.2019.00041
   Bogner J, 2017, 11TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2017) - COMPANION VOLUME, P195, DOI 10.1145/3129790.3129816
   Botchway I.B., 2021, International Journal of Advanced Computer Science and Applications, V12
   Braubach L, 2022, STUD COMPUT INTELL, V1026, P101, DOI 10.1007/978-3-030-96627-0_10
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Bucchiarone A., 2017, From Monolithic to Microservices: An experience report, DOI [10.13140/RG.2.2.34717.00482, DOI 10.13140/RG.2.2.34717.00482]
   Cardarelli M, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1225, DOI 10.1145/3297280.3297400
   Challa JS, 2011, J INF PROCESS SYST, V7, P473, DOI 10.3745/JIPS.2011.7.3.473
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clements P., 2003, SEI S SOFTW
   Cojocaru MD, 2019, INT SYMP PARA DISTR, P84, DOI 10.1109/ISPDC.2019.00021
   Cortellessa V, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111084
   Dragoni N, 2018, LECT NOTES COMPUT SC, V10742, P95, DOI 10.1007/978-3-319-74313-4_8
   for Standardization I.O., 2019, ISO/IEC 25020: 2019: ISO/IEC 25020:2019 Systems and Software Engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-Quality Measurement Framework
   Georgieva P., 2018, Fuzzy rule-based systems for decision-making
   Hasan M.H., 2023, International Journal of Advanced Computer Science and Applications, V14, DOI [10.14569/IJACSA.2023.0140591, DOI 10.14569/IJACSA.2023.0140591]
   Hou XF, 2019, PROC INT CONF PARAL, DOI 10.1145/3337821.3337857
   Hussein S., 2023, Assessing the quality of microservice and monolithic architectures: systematic literature review
   Indrasiri K., 2018, Microservices For the Enterprise: Designing. Developing, and Deploying, DOI [10.1007/978-1-4842-3858-5, DOI 10.1007/978-1-4842-3858-5]
   iso, 2011, ISO/IEC 25010, ISO/ IEC 25010: 2011
   Ji SZ, 2020, IEEE WORLD CONGR SER, P77, DOI 10.1109/SERVICES48979.2020.00030
   Jin Y., 2012, Physica, V112
   Jones C., 2011, EC SOFTWARE QUALITY
   Justus Bogner, 2020, Collecting Service-Based Maintainability Metrics from RESTful API Descriptions: Static Analysis and Threshold Derivation, P215
   Li BW, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10063-9
   Li SS, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106449
   Li ZY, 2021, INT WORKSH QUAL SERV, DOI 10.1109/IWQOS52092.2021.9521340
   Liu P, 2020, PROC INT SYMP SOFTW, P48, DOI 10.1109/ISSRE5003.2020.00014
   MAMDANI EH, 1975, INT J MAN MACH STUD, V7, P1, DOI 10.1016/S0020-7373(75)80002-2
   Milic M, 2022, SYMMETRY-BASEL, V14, DOI 10.3390/sym14091824
   Molnar Arthur-Jozsef, 2021, Evaluation of Novel Approaches to Software Engineering, P261
   Motogna Simona, 2016, 2016 IEEE International Conference on Automation, Quality and Testing, Robotics (AQTR). Proceedings, P1, DOI 10.1109/AQTR.2016.7501279
   Motogna S, 2023, J SYST SOFTWARE, V201, DOI 10.1016/j.jss.2023.111678
   Nord RL, 2013, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSM.2013.57
   Ogheneovo E.E., 2014, Journal of Computer and Communications, V2, P1, DOI [10.4236/jcc.2014.214001, DOI 10.4236/JCC.2014.214001]
   Panichella S, 2021, CLOSER: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P280, DOI 10.5220/0010481902800287
   Ponce F, 2022, LECT NOTES COMPUT SC, V13444, P131, DOI 10.1007/978-3-031-16697-6_9
   Pulnil S, 2022, INT JOINT CONF COMP, DOI 10.1109/JCSSE54890.2022.9836297
   Raj V, 2022, SOFTWARE PRACT EXPER, V52, P1661, DOI 10.1002/spe.3081
   Ronchetti M, 2006, INFORM SCIENCES, V176, P475, DOI 10.1016/j.ins.2004.08.012
   Runkler TA, 1997, IEEE T FUZZY SYST, V5, P72, DOI 10.1109/91.554449
   Sadollah A., 2018, Fuzzy Logic Based in Optimization Methods and Control Systems and its Applications, DOI [DOI 10.5772/INTECHOPEN.79552, 10.5772/intechopen.79552]
   Santos N, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P169, DOI 10.1109/ICSA47634.2020.00024
   Ting K.M., 2011, ENCY MACHINE LEARNIN, V1st, P209, DOI [DOI 10.1007/978-0-387-30164-8_157, 10.1007/978-0-387-30164-8157]
   Vera-Rivera FH, 2021, PEERJ COMPUT SCI, V7, DOI 10.7717/peerj-cs.695
   Wagner Stefan, 2013, Software product quality control
   Walker Andrew, 2021, Information Science and Applications. Proceedings of ICISA 2020. Lecture Notes in Electrical Engineering (LNEE 739), P223, DOI 10.1007/978-981-33-6385-4_21
   Wang FJ, 2018, IEEE WORLD CONGR SER, P43, DOI 10.1109/SERVICES.2018.00035
   Waseem M, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111061
   Wolff E., 2016, Microservices: Flexible Software Architecture
   Xin RY, 2023, J SYST SOFTWARE, V203, DOI 10.1016/j.jss.2023.111724
   Yadav RS, 2014, 2014 INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P48, DOI 10.1109/IndiaCom.2014.6828010
   Yilmaz R, 2021, 2ND INTERNATIONAL INFORMATICS AND SOFTWARE ENGINEERING CONFERENCE (IISEC), DOI 10.1109/IISEC54230.2021.9672417
   Yu J., 2021, IWESQ@ APSEC, P5
   Zadeh LA, 1999, FUZZY SET SYST, V100, P9, DOI 10.1016/S0165-0114(99)80004-9
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
   Zhou X, 2018, IEEE INT CONF AUTOM, P802, DOI 10.1145/3238147.3240730
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
NR 71
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD OCT
PY 2024
VL 216
AR 112143
DI 10.1016/j.jss.2024.112143
EA JUL 2024
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YI1N0
UT WOS:001267769200001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Lercher, A
   Glock, J
   Macho, C
   Pinzger, M
AF Lercher, Alexander
   Glock, Johann
   Macho, Christian
   Pinzger, Martin
TI Microservice API Evolution in Practice: A Study on Strategies and
   Challenges
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Microservice architecture; API evolution; API versioning; Backward
   compatibility; API design degradation; Development team collaboration
AB Nowadays, many companies design and develop their software systems as a set of loosely coupled microservices that communicate via their Application Programming Interfaces (APIs). While the loose coupling improves maintainability, scalability, and fault tolerance, it poses new challenges to the API evolution process. Related works identified communication and integration as major API evolution challenges but did not provide the underlying reasons and research directions to mitigate them. In this paper, we aim to identify microservice API evolution strategies and challenges in practice and gain a broader perspective of their relationships. We conducted 17 semi-structured interviews with developers, architects, and managers in 11 companies and analyzed the interviews with open coding used in grounded theory. In total, we identified six strategies and six challenges for REpresentational State Transfer (REST) and event-driven communication via message brokers. The strategies mainly focus on API backward compatibility, versioning, and close collaboration between teams. The challenges include change impact analysis efforts, ineffective communication of changes, and consumer reliance on outdated versions, leading to API design degradation. We defined two important problems in microservice API evolution resulting from the challenges and their coping strategies: tight organizational coupling and consumer lock-in. To mitigate these two problems, we propose automating the change impact analysis and investigating effective communication of changes as open research directions. Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board.
C1 [Lercher, Alexander; Glock, Johann; Macho, Christian; Pinzger, Martin] Univ Klagenfurt, Dept Informat Syst, Univ Str 65-67, A-9020 Klagenfurt, Austria.
C3 University of Klagenfurt
RP Lercher, A (corresponding author), Univ Klagenfurt, Dept Informat Syst, Univ Str 65-67, A-9020 Klagenfurt, Austria.
EM alexander.lercher@aau.at; johann.glock@aau.at; christian.macho@aau.at;
   martin.pinzger@aau.at
RI Glock, Johann/KSL-9033-2024; Macho, Christian/AAS-4725-2020
OI Glock, Johann/0000-0002-0152-8611; Macho, Christian/0000-0001-8182-7277
FU Austrian Science Fund (FWF) [10.55776/P36698]
FX We thank all participants of the study for their time and knowl- edgable
   insights into the topic. This research was funded in whole or in part by
   the Austrian Science Fund (FWF) 10.55776/P36698. For open access
   purposes, the author has applied a CC BY public copyright license to any
   author accepted manuscript version arising from this submission.
CR Adams W. C., 2015, Handbook of practical program evaluation, P492, DOI [DOI 10.1002/9781119171386.CH19, 10.1002/9781119171386.ch19]
   Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Akbulut A, 2019, IEEE INTERNET COMPUT, V23, P19, DOI 10.1109/MIC.2019.2951094
   Aksakalli IK, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111014
   Al Safwan K, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P397, DOI 10.1145/3338906.3338979
   Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   Assunçao WKG, 2023, J SYST SOFTWARE, V204, DOI 10.1016/j.jss.2023.111788
   Baltes S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10072-8
   Baskarada S, 2020, J COMPUT INFORM SYST, V60, P428, DOI 10.1080/08874417.2018.1520056
   Beaulieu Nicole, 2022, ITNG 2022 19th International Conference on Information Technology-New Generations. Advances in Intelligent Systems and Computing (1421), P73, DOI 10.1007/978-3-030-97652-1_10
   BIERNACKI P, 1981, SOCIOL METHOD RES, V10, P141, DOI 10.1177/004912418101000205
   Biswas S, 2011, INFORM-J COMPUT INFO, V35, P289
   Bloch J., 2006, Companion to the 21st ACM SIGPLAN symposium on Object-Oriented programming systems, languages, and applications, P506, DOI DOI 10.1145/1176617.1176622
   Bogart C, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447245
   Brito A, 2020, EMPIR SOFTW ENG, V25, P1458, DOI 10.1007/s10664-019-09756-z
   Brito G, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P81, DOI 10.1109/ICSA47634.2020.00016
   Brito G, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P140, DOI [10.1109/saner.2019.8667986, 10.1109/SANER.2019.8667986]
   Bushong V, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11177856
   Cai HP, 2022, IEEE T SOFTWARE ENG, V48, P4733, DOI 10.1109/TSE.2021.3124795
   Cai HP, 2016, IEEE INT CONF AUTOM, P344, DOI 10.1145/2970276.2970352
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Cerny T, 2017, APPL COMPUT REV, V17, P29, DOI [10.1145/3183628.3183631, 10.1145/3129676.3129682]
   Cerny Tomas., 2017, P INT C RES ADAPTIVE, P228, DOI 10.1145/3129676.3129682
   Chaturvedi A, 2021, IEEE T SERV COMPUT, V14, P930, DOI 10.1109/TSC.2018.2821157
   Chen FW, 2021, SOFTWARE PRACT EXPER, V51, P1483, DOI 10.1002/spe.2967
   CONWAY ME, 1968, DATAMATION, V14, P28
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Cremaschi M, 2017, LECT NOTES COMPUT SC, V10465, P159, DOI 10.1007/978-3-319-67262-5_12
   Daigneau R., 2012, Addison-Wesley Signature Series (Fowler)
   de Toledo SS, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110968
   Demircioglu ED, 2022, ELECTRONICS-SWITZ, V11, DOI 10.3390/electronics11172671
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Ed-Douibi H, 2020, LECT NOTES COMPUT SC, V12128, P538, DOI 10.1007/978-3-030-50578-3_40
   Espinha T, 2015, J SYST SOFTWARE, V100, P27, DOI 10.1016/j.jss.2014.10.014
   Fielding R.T., 2000, Doctoral Dissertation
   Fokaefs Marios., 2014, Advanced Web Services, P199, DOI [10.1007/978-1-4614-7535-49, DOI 10.1007/978-1-4614-7535-49]
   Gamma E., 1995, DESIGN PATTERNS ELEM
   García S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P593, DOI 10.1145/3368089.3409743
   Glaser B. G., 1967, The Discovery of Grounded Theory: Strategies for Qualitative Research
   Godefroid Patrice, 2020, P 29 ACM SIGSOFT INT, P312, DOI [10.1145/3395363.3397374, DOI 10.1145/3395363.3397374]
   Gomez A., 2020, P 23 ACM IEEE INT C, P121, DOI [DOI 10.1145/3365438.3410948, 10.1145/3365438, DOI 10.1145/3365438]
   Gos K, 2020, INT CONF PERSP TECH, P150, DOI [10.1109/memstech49584.2020.9109514, 10.1109/MEMSTECH49584.2020.9109514]
   Gudkova S., 2017, Qualitative Methodologies in Organization Studies, Volume II: Methods and Possibilities, V2, P75, DOI [DOI 10.1007/978-3-319-65442-3_4, 10.1007/978-3-319-65442-3_4]
   Guo XF, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1387, DOI 10.1145/3368089.3417066
   Hanam Q, 2019, PROC IEEE INT CONF S, P202, DOI 10.1109/ICSME.2019.00031
   Hoan Anh Nguyen, 2019, 2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE). Proceedings, P819, DOI 10.1109/ICSE.2019.00089
   Hora A, 2018, SOFTWARE QUAL J, V26, P161, DOI 10.1007/s11219-016-9344-4
   Jiang YG, 2019, 5TH INTERNATIONAL CONFERENCE ON BIG DATA COMPUTING AND COMMUNICATIONS (BIGCOM 2019), P88, DOI 10.1109/BIGCOM.2019.00023
   Jun Li, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P300, DOI 10.1109/ICWS.2013.48
   Karlsson S, 2020, IEEE INT CONF SOFTW, P131, DOI 10.1109/ICST46399.2020.00023
   Knoche H, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P58, DOI 10.1109/ICSA51549.2021.00014
   Koçi R, 2023, J SYST SOFTWARE, V198, DOI 10.1016/j.jss.2023.111609
   Koçi R, 2019, IEEE INT ENTERP DIST, P243, DOI 10.1109/EDOC.2019.00037
   Kopecky J, 2014, IT-INF TECHNOL, V56, P90, DOI 10.1515/itit-2013-1035
   Koren I, 2018, COMPANION PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2018 (WWW 2018), P781, DOI 10.1145/3184558.3188740
   Krafzig D., 2006, Enterprise SOA: Service-Oriented Architecture Best Practices, Vfifth
   Kratzke N, 2017, J SYST SOFTWARE, V126, P1, DOI 10.1016/j.jss.2017.01.001
   Lamothe M, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3470133
   Laverdière MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P585, DOI 10.1109/SANER.2015.7081882
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lercher A., 2023, Microservice API evolution in practice: A study on strategies and challenges-replication package, DOI [10.5281/zenodo.8275798, DOI 10.5281/ZENODO.8275798]
   LEUNG HKN, 1989, CONFERENCE ON SOFTWARE MAINTENANCE - 1989, PROCEEDINGS, P60
   Liu HF, 2019, LECT NOTES COMPUT SC, V11513, P287, DOI 10.1007/978-3-030-23502-4_20
   Lübke D, 2019, PROCEEDINGS OF THE 24TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2019), DOI 10.1145/3361149.3361164
   Ma SP, 2019, FUTURE GENER COMP SY, V100, P724, DOI 10.1016/j.future.2019.05.048
   Mendonça NC, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P114, DOI 10.1109/ICSA47634.2020.00019
   Neumann A, 2021, IEEE T SERV COMPUT, V14, P957, DOI 10.1109/TSC.2018.2847344
   Newman S., 2021, Building Microservices: Designing Fine-Grained Systems, Vsecond, P616
   O'Connor C, 2020, INT J QUAL METH, V19, DOI 10.1177/1609406919899220
   Pautasso C., 2009, Proceedings of the 18th international conference on world wide web, P911, DOI DOI 10.1145/1526709.1526832
   Peng C, 2018, PROCEDIA COMPUT SCI, V126, P1313, DOI 10.1016/j.procs.2018.08.081
   Popescu D., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P531, DOI 10.1145/1810295.1810466
   Popescu D., 2012, P 6 ACM INT C DISTR, P241, DOI [DOI 10.1145/2335484.2335511, 10.1145/2335484.2335511]
   Quiña-Mera A, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3561818
   Richter D, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P608, DOI 10.5220/0006791006080615
   Rogers P.J., 2015, HDB PRACTICAL PROGRA, P561, DOI 10.1002/9781119171386.ch22
   Rubin J, 2016, PROC INT CONF SOFTW, P982, DOI 10.1145/2884781.2884871
   Runeson P., 2012, Case Study Research in Software Engineering, P61, DOI [10.1002/9781118181034.ch5, DOI 10.1002/9781118181034.CH5]
   Sato D., 2014, Parallel change
   Schwichtenberg S, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P484, DOI 10.1109/ICWS.2017.56
   Seaman C.B., 2008, Guide to advanced empirical software engineering, P35
   Serbout Souhaila, 2023, Web Engineering: 23rd International Conference, ICWE 2023, Proceedings. Lecture Notes in Computer Science (13893), P303, DOI 10.1007/978-3-031-34444-2_22
   Shmerlin Y, 2015, LECT NOTES BUS INF P, V215, P100, DOI 10.1007/978-3-319-19243-7_10
   Sohan SM, 2015, IEEE WORLD CONGR SER, P245, DOI 10.1109/SERVICES.2015.43
   Sommer P, 2018, IEEE INT CON AUTO SC, P1217, DOI 10.1109/COASE.2018.8560493
   Sorgalla J, 2018, LECT NOTES COMPUT SC, V11176, P596, DOI 10.1007/978-3-030-04771-9_45
   Söylemez M, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12115507
   Taibi D, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P221, DOI 10.5220/0006798302210232
   Taibi D, 2018, IEEE SOFTWARE, V35, P56, DOI 10.1109/MS.2018.2141031
   van Rijnsoever FJ, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0181689
   Wang SH, 2014, LECT NOTES COMPUT SC, V8831, P245, DOI 10.1007/978-3-662-45391-9_17
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Wilde E, 2019, COMPANION OF THE WORLD WIDE WEB CONFERENCE (WWW 2019 ), P1327, DOI 10.1145/3308560.3320089
   Wittern E, 2019, LECT NOTES COMPUT SC, V11895, P3, DOI 10.1007/978-3-030-33702-5_1
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wu MH, 2022, EUR CON SFTWR MTNCE, P432, DOI 10.1109/SANER53432.2022.00058
   Wu W, 2016, EMPIR SOFTW ENG, V21, P2366, DOI 10.1007/s10664-015-9411-7
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P138, DOI 10.1109/SANER.2017.7884616
   Yasmin J, 2020, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME46990.2020.00024
   Zdun U, 2020, IEEE SOFTWARE, V37, P87, DOI 10.1109/MS.2019.2947982
   Zdun U, 2017, LECT NOTES COMPUT SC, V10601, P411, DOI 10.1007/978-3-319-69035-3_29
   Zhang H, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P51, DOI 10.1109/ICSA.2019.00014
   Zimmermann O., 2020, OpenAccess Series in Informatics (OASIcs), V78
NR 103
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
AR 112110
DI 10.1016/j.jss.2024.112110
EA JUN 2024
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UU8I1
UT WOS:001250663000001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Kessel, M
   Atkinson, C
AF Kessel, Marcus
   Atkinson, Colin
TI Code search engines for the next generation
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software reuse; Code search; Big data; Big code; Behavior; Dynamic;
   Semantics
ID SOFTWARE; REUSE; INFRASTRUCTURE; WEB
AB Given the abundance of software in open source repositories, code search engines are increasingly turning to "big data"technologies such as natural language processing and machine learning, to deliver more useful search results. However, like the syntax -based approaches traditionally used to analyze and compare code in the first generation of code search engines, big data technologies are essentially static analysis processes. When dynamic properties of software, such as run-time behavior (i.e., semantics) and performance, are among the search criteria, the exclusive use of static algorithms has a significant negative impact on the precision and recall of the search results as well as other key usability factors such as ranking quality. Therefore, to address these weaknesses and provide a more reliable and usable service, the next generation of code search engines needs to complement static code analysis techniques with equally large-scale, dynamic analysis techniques based on its execution and observation. In this paper we describe a new software platform specifically developed to achieve this by simplifying and largely automating the dynamic analysis (i.e., observation) of code at a large scale. We show how this platform can combine dynamically observed properties of code modules with static properties to improve the quality and usability of code search results.
C1 [Kessel, Marcus; Atkinson, Colin] Univ Mannheim, D-68159 Mannheim, Germany.
C3 University of Mannheim
RP Kessel, M (corresponding author), Univ Mannheim, D-68159 Mannheim, Germany.
EM marcus.kessel@uni-mannheim.de; colin.atkinson@uni-mannheim.de
OI Kessel, Marcus/0000-0003-3088-2166
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Ammann P., 2016, Introduction to Software Testing
   Bajracharya S, 2014, SCI COMPUT PROGRAM, V79, P241, DOI 10.1016/j.scico.2012.04.008
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   BARNES BH, 1991, IEEE SOFTWARE, V8, P13, DOI 10.1109/52.62928
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bauer V, 2016, J SYST SOFTWARE, V117, P545, DOI 10.1016/j.jss.2016.03.067
   Boettiger Carl, 2015, ACM SIGOPS Operating Systems Review, V49, P71
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   de Paula AC, 2016, IEEE INT WORK C SO, P107, DOI 10.1109/SCAM.2016.31
   Di Grazia L, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3565971
   Diamantopoulos T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P488, DOI [10.1109/MSR.2016.061, 10.1145/2901739.2903492]
   Dietrich J, 2017, J OBJECT TECHNOL, V16, DOI 10.5381/jot.2017.16.4.a1.
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Fowler M., 2006, Continuous Integration
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   GitHub, 2022, Octoverse 2022
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Hummel O., 2008, Ph.D. thesis
   Hummel O, 2008, IEEE SOFTWARE, V25, P45, DOI 10.1109/MS.2008.110
   Hummel O, 2006, LECT NOTES COMPUT SC, V4039, P298
   Inoue K., 2020, arXiv, DOI [10.48550/ARXIV.2003.05615, DOI 10.48550/ARXIV.2003.05615]
   Joachims T., 2005, SIGIR 2005. Proceedings of the Twenty-Eighth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P154, DOI 10.1145/1076034.1076063
   Johnston WM, 2004, ACM COMPUT SURV, V36, P1, DOI 10.1145/1013208.1013209
   Josefsson S., 2006, IETF, P1, DOI DOI 10.17487/RFC4648
   JUnit, 2022, JUnit
   Kessel M., 2023, Ph.D. thesis
   Kessel M, 2024, J SYST SOFTWARE, V212, DOI 10.1016/j.jss.2024.111971
   Kessel Marcus, 2023, Zenodo, DOI 10.5281/ZENODO.8398748
   Kessel M, 2022, J SYST SOFTWARE, V193, DOI 10.1016/j.jss.2022.111442
   Kessel M, 2019, PROCEEDINGS OF THE 10TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '19), P35, DOI 10.1145/3340433.3342825
   Kessel M, 2019, IEEE INT WORK C SO, P56, DOI 10.1109/SCAM.2019.00015
   Kessel M, 2019, IEEE INT WORK C SO, P193, DOI 10.1109/SCAM.2019.00030
   Kessel M, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P8, DOI 10.1145/3194760.3194761
   Kessel M, 2016, INFORM SYST FRONT, V18, P825, DOI 10.1007/s10796-016-9685-3
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Koschke Rainer, 2007, DAGST SEM P
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Lemos O.A.L., 2007, P 22 IEEE ACM INT C, P525, DOI 10.1145/1321631.1321726
   Lemos O.A. L., 2009, P 2009 ACM S APPL CO, P476, DOI DOI 10.1145/1529282.1529384
   Lemos O.A. L., 2007, COMPANION 22 ACM SIG, P917, DOI [10.1145/1297846.1297944, DOI 10.1145/1297846.1297944]
   Lerner J, 2001, EUR ECON REV, V45, P819, DOI 10.1016/S0014-2921(01)00124-6
   Li Y, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3295739
   Lilis Y, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3354584
   Long J., 2001, Software Engineering Notes, V26, P68, DOI 10.1145/505482.505492
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Martins P, 2018, IEEE WORK CONF MIN S, P1, DOI 10.1145/3196398.3196450
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mili A, 1998, ANN SOFTW ENG, V5, P349, DOI 10.1023/A:1018964121953
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Palsberg J, 2018, COMPANION PROCEEDINGS FOR THE ISSTA/ECOOP 2018 WORKSHOPS, P100, DOI 10.1145/3236454.3236501
   Podgurski A., 1992, International Conference on Software Engineering, P349, DOI 10.1109/ICSE.1992.753512
   Podgurski A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P286, DOI 10.1145/152388.152392
   Rahman MM, 2018, IEEE WORK CONF MIN S, P465, DOI 10.1145/3196398.3196425
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   RICE HG, 1953, T AM MATH SOC, V74, P358, DOI 10.2307/1990888
   Robillard M.P., 2014, Recomm Syst Softw Eng
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Sim S.E., 2015, Finding Source Code on the Web for Remix and Reuse
   Sonatype, 2022, Maven Central
   Stolee KT, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581377
   Svajlenko J, 2016, PROC IEEE INT CONF S, P596, DOI 10.1109/ICSME.2016.62
   Terra R., 2013, Software Engineering Notes, V38, P1, DOI DOI 10.1145/2507288.2507314
   The Apache Software Foundation, 2022, Apache maven project
   The Apache Software Foundation, 2022, Apache solr project
   The Apache Software Foundation, 2022, Groovy-domain-specific languages
   The Apache Software Foundation, 2022, Apache ignite
   Wang KS, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1355
   Wang YP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1028, DOI 10.1145/2950290.2983934
   Wohlin C., 2012, EXPT SOFTWARE ENG
   Yang Fuqing, 1999, Acta Electronica Sinica, V27, P68
   Zaremski A.M., 1995, ACM Trans. Softw. Eng. Methodol., V4
NR 83
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD SEP
PY 2024
VL 215
AR 112065
DI 10.1016/j.jss.2024.112065
EA MAY 2024
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UC5R9
UT WOS:001245881000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Norbjerg, J
   Dittrich, Y
AF Norbjerg, Jacob
   Dittrich, Yvonne
TI The never-ending story-How companies transition to and sustain
   continuous software engineering practices
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Continuous software engineering; Infrastructuring; Software practice;
   Software architecture; Empirical study
ID DELIVERY; DESIGN
AB Context: - There is increasing interest in Continuous Software Engineering (CSE) among practitioners and researchers. CSE addresses the need to increase flexibility and short release cycles, especially when augmenting software as a service, without jeopardizing software quality. Purpose/objectives: - Empirical literature focuses on the transition to CSE as introducing a new method supported by new tools and architectural concepts. Little is known, however, about how software companies sustain CSE practices. Design/methodology/approach: - The analysis proceeds in two stages. First, we present a thematic analysis based on qualitative interviews with both management and developers from three different software development organizations. Then we apply the concept of infrastructuring to the results as a sense-making device. Findings: - We show how companies adapt and align their CSE organization, processes, and techniques to internal and external demands and conditions, resulting in widely varying practices. We further see that CSE in the companies is unlikely to arrive at a stable state. Rather, the companies continuously adapt their practices due to changes in the environment, requirements, new techniques and tools, and new software dependencies. Implications/value: - We use the concept of 'infrastructuring' from computer supported cooperative work and information systems to make sense of the continuous change we see in our interviews. We show that CSE needs to be regarded as a new way to make use of method (elements), processes and tools in software engineering, rather than a new method.
C1 [Norbjerg, Jacob] Copenhagen Business Sch, Dept Digitalizat, 60 Howitzvej, DK-2000 Frederiksberg, Denmark.
   [Dittrich, Yvonne] IT Univ Copenhagen, Comp Sci Dept, Rued Langgaardsvej 7, DK-2300 Copenhagen, Denmark.
C3 Copenhagen Business School; IT University Copenhagen
RP Norbjerg, J (corresponding author), Copenhagen Business Sch, Dept Digitalizat, 60 Howitzvej, DK-2000 Frederiksberg, Denmark.
EM jno.digi@cbs.dk
OI Dittrich, Yvonne/0000-0003-4757-3394; Norbjerg,
   Jacob/0000-0002-9557-276X
CR Agarwal R, 2015, INFORM SYST RES, V26, P473, DOI 10.1287/isre.2015.0595
   Bellomo S, 2014, I C DEPEND SYS NETWO, P702, DOI 10.1109/DSN.2014.104
   Bowker Geoffrey., 2002, Handbook of New Media, P151
   Button G., 1994, REQUIREMENTS ENG SOC, P217
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Cresswell JW., 1998, QUAL INQ
   Dennehy D, 2017, J SYST SOFTWARE, V133, P160, DOI 10.1016/j.jss.2016.10.003
   Dittrich Y., 2002, PDC 2002. Proceedings of the Participatory Design Conference, P124
   Dittrich Y, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P493, DOI 10.1145/3368089.3409766
   Dittrich Y, 2016, INFORM SOFTWARE TECH, V70, P220, DOI 10.1016/j.infsof.2015.07.001
   Dittrich Y, 2014, INFORM SOFTWARE TECH, V56, P1436, DOI 10.1016/j.infsof.2014.02.012
   Draxler S, 2014, IEEE T SOFTWARE ENG, V40, P1061, DOI 10.1109/TSE.2014.2354047
   Draxler S, 2011, COMPUT SUPP COOP W J, V20, P403, DOI 10.1007/s10606-011-9148-9
   Elazhary O, 2021, IEEE T SOFTWARE ENG, V48, P2570, DOI 10.1109/TSE.2021.3064953
   Elazhary O, 2021, 2021 ACM/IEEE 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2021), P26, DOI 10.1109/ICSE-NIER52604.2021.00014
   Fitzgerald B., 2002, Methods in Action, V1
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fowler M., 2001, Software Development, V9, P28
   Giraldo-Mora J.C., 2023, Monograph
   Guckenheimer S., 2015, Our Journey to Cloud Cadence, Lessons Learned At Microsoft Developer Division
   Hemon A, 2020, INFORM SYST FRONT, V22, P927, DOI 10.1007/s10796-019-09905-1
   Henfridsson O, 2013, MIS QUART, V37, P907, DOI 10.25300/MISQ/2013/37.3.11
   Karasti H., 2004, Proceedings of the Eight Participatory Design Conference, 27/7/2004, P20
   Karasti H, 2018, COMPUT SUPP COOP W J, V27, P233, DOI 10.1007/s10606-017-9296-7
   Karasti Helena., 2014, P 13 PARTICIPATORY D, P141, DOI DOI 10.1145/2661435.2661450
   Klotins Eriks, 2023, Agile Processes in Software Engineering and Extreme Programming: 24th International Conference on Agile Software Development, XP 2023, Proceedings. Lecture Notes in Business Information Processing (475), P149, DOI 10.1007/978-3-031-33976-9_10
   Klotins E, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10191-w
   Klotins E, 2022, LECT NOTES BUS INF P, V439, P3, DOI 10.1007/978-3-031-04115-0_1
   Klotins E, 2022, 5TH INTERNATIONAL WORKSHOP ON SOFTWARE-INTENSIVE BUSINESS: TOWARDS SUSTAINABLE SOFTWARE BUSINESS (IWSIB 2022), P75, DOI 10.1145/3524614.3528626
   Knorr-Cetina K., 2001, The Practice Turn in Contemporary Theory, P184, DOI DOI 10.4324/9780203977453
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Leite L., 2021, The organization of software teams in the quest for continuous delivery: a grounded theory approach
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Lous P, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P11, DOI 10.1145/3202710.3203149
   Lous P, 2018, PROCEEDINGS 2018 ACM/IEEE 13TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING ICGSE 2018, P102, DOI 10.1145/3196369.3196374
   Lwakatare LE, 2016, P ANN HICSS, P5437, DOI 10.1109/HICSS.2016.671
   Metz C., 2016, Two Moves, AlphaGo and Lee Sedol Redefined the Future
   Neely S, 2013, 2013 AGILE CONFERENCE (AGILE), P121, DOI 10.1109/AGILE.2013.17
   O'Connor RV, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1866
   Osmundsen K, 2022, J INF TECHNOL-UK, V37, P144, DOI 10.1177/02683962211046621
   Pipek V, 2017, COMPUT SUPP COOP W J, V26, P1, DOI 10.1007/s10606-017-9271-3
   Pipek V, 2009, J ASSOC INF SYST, V10, P447, DOI 10.17705/1jais.00195
   Robson C., 2016, Real world research: a resource for users of social research methods in applied settings, V4th
   Savor T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P21, DOI 10.1145/2889160.2889223
   Schmidt K., 1996, Computer Supported Cooperative Work (CSCW), V5, P155, DOI 10.1007/BF00133655
   Shahin M, 2019, EMPIR SOFTW ENG, V24, P1061, DOI 10.1007/s10664-018-9651-4
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Sigfridsson A., 2010, The Purposeful Adaptation of Practice: an Empirical Study of Distributed Software Development
   Sigfridsson A, 2007, INT FED INFO PROC, V234, P133
   Star SL, 1996, INFORM SYST RES, V7, P111, DOI 10.1287/isre.7.1.111
NR 52
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112056
DI 10.1016/j.jss.2024.112056
EA APR 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RS7A4
UT WOS:001229703700001
OA hybrid
DA 2024-08-05
ER

PT J
AU Baresi, L
   Quattrocchi, G
   Rasi, N
AF Baresi, Luciano
   Quattrocchi, Giovanni
   Rasi, Nicholas
TI A qualitative and quantitative analysis of container engines
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Containerization; Container engines; Performance; Cloud computing;
   Internet of things; High-performance computing
AB Containerization is a virtualization technique that allows one to create and run executables consistently on any infrastructure. Compared to virtual machines, containers are lighter since they do not bundle a (guest) operating system but they share its kernel, and they only include the files, libraries, and dependencies that are required to properly execute a process. In the past few years, multiple container engines (i.e., tools for configuring, executing, and managing containers) have been developed ranging from some that are "general purpose", and mostly employed for Cloud executions, to others that are built for specific contexts, namely Internet of Things and High -Performance Computing. Given the importance of this technology for many practitioners and researchers, this paper analyzes six state-of-the-art container engines and compares them through a comprehensive study of their characteristics and performance. The results are organized around 10 findings that aim to help the readers understand the differences among the technologies and help them choose the best approach for their needs. Editor's note: Open Science material was validated by the Journal of Systems and Software Open Science Board.
C1 [Baresi, Luciano; Quattrocchi, Giovanni; Rasi, Nicholas] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Milan, Italy.
C3 Polytechnic University of Milan
RP Quattrocchi, G (corresponding author), Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Milan, Italy.
EM luciano.baresi@polimi.it; giovanni.quattrocchi@polimi.it;
   nicholas.rasi@polimi.it
RI Baresi, Luciano/N-4208-2018
OI Baresi, Luciano/0000-0001-6467-837X
FU MUR-PRIN [201752ENYB, 2020W3A5FY]
FX This work has been partially funded by the national funding for MUR-PRIN
   projects SISMA (201752ENYB) and EMELIOT (2020W3A5FY).
CR [Anonymous], 2016, 2016 IEEE International Conference on Smart Computing (SMARTCOMP), DOI DOI 10.1109/SMARTCOMP.2016.7501691
   Arango C, 2017, Arxiv, DOI arXiv:1709.10140
   Balaji S, 2019, WIRELESS PERS COMMUN, V108, P363, DOI 10.1007/s11277-019-06407-w
   Balena, 2022, Balena OS
   Balena, 2022, Balena website
   Baresi L, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P103, DOI 10.1109/ICSA47634.2020.00018
   Benedicic L, 2020, LECT NOTES COMPUT SC, V11887, P46, DOI 10.1007/978-3-030-34356-9_5
   Bentaleb O, 2022, J SUPERCOMPUT, V78, P1144, DOI 10.1007/s11227-021-03914-1
   Botez R, 2020, INT SYMP ELEC TELECO, P343, DOI 10.1109/isetc50328.2020.9301070
   Buildah, 2022, Buildah
   Charliecloud, 2022, CharlieCloud website
   Computing A., 2022, Torque
   Containerd, 2022, An industry-standard container runtime with an emphasis on simplicity, robustness and portability
   Docker, 2022, Docker website
   Docker, 2022, Docker hub
   Docker, 2022, Dockerfile reference
   Dragoni N., 2017, Present and Ulterior Software Engineering, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Elazhary O, 2021, IEEE T SOFTWARE ENG, V48, P2570, DOI 10.1109/TSE.2021.3064953
   Gantikow Holger, 2020, High Performance Computing. ISC High Performance 2020 International Workshops. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12321), P343, DOI 10.1007/978-3-030-59851-8_23
   Giallorenzo S., 2021, SN Computer Science, V2, DOI DOI 10.1007/S42979-021-00781-8
   Godlove D, 2019, P PRACTICE EXPERIENC, DOI DOI 10.1145/3332186.3332192
   Hallyn S.E., 2008, Linux capabilities: Making them work
   Higgins J, 2015, LECT NOTES COMPUT SC, V9137, P506, DOI 10.1007/978-3-319-20119-1_36
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Initiative O.C, Open Container Initiative
   Kernel.org, 2022, SQUASHFS: a squashed read-only filesystem for Linux
   Kozhirbayev Z, 2017, FUTURE GENER COMP SY, V68, P175, DOI 10.1016/j.future.2016.08.025
   Liu PN, 2021, J SUPERCOMPUT, V77, P6273, DOI 10.1007/s11227-020-03518-1
   Man7, 2022, Overview of linux capabilities
   Merkel D., 2014, Linux Journal, V239, P2, DOI DOI 10.5555/2600239.2600241
   Microsoft, 2022, Run your first Windows container
   Morabito R, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON CLOUD ENGINEERING (IC2E 2015), P386, DOI 10.1109/IC2E.2015.74
   NVIDIA, 2022, NVIDIA container runtime
   OCI, 2022, Open container initiative runtime specification
   OCI, 2022, Open Containers Initiative: runC: CLI tool for spawning and running containers according to the OCI specification
   OpenBenchmarking, 2022, A centralized testing ecosystem
   Pahl C, 2019, IEEE T CLOUD COMPUT, V7, P677, DOI 10.1109/TCC.2017.2702586
   Pahl C, 2015, IEEE CLOUD COMPUT, V2, P24, DOI 10.1109/MCC.2015.51
   Plauth M, 2017, LECT NOTES COMPUT SC, V10465, P34, DOI 10.1007/978-3-319-67262-5_3
   Podman, 2022, Podman website
   Potdar Amit M., 2020, Procedia Computer Science, V171, P1419, DOI 10.1016/j.procs.2020.04.152
   Priedhorsky R, 2017, SC'17: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/3126908.3126925
   Project M., 2022, An open framework to assemble specialized container systems
   Saha Punyajoy, 2018, P PRACTICE EXPERIENC, P1, DOI [DOI 10.1145/3219104.3229280, 10.1145/3219104.3229280]
   Salah T, 2017, CONF INNOV CLOUD, P185, DOI 10.1109/ICIN.2017.7899408
   Sampedro Z., 2018, P PRACTICE EXPERIENC
   Sarus, 2022, Sarus documentation
   Sarus, 2022, OSU micro benchmarks
   SchedMD, 2022, Slurm workload manager
   SGE, 2022, SGE documentation
   Soltesz S., 2007, PROC 2 ACM EUROPEAN, V41
   Suite P.T., 2022, Open-source, automated benchmarking
   Sylabs, 2022, Singularity
   Sylabs, 2022, Singularity cloud library
   Tuncer O, 2019, IEEE T PARALL DISTR, V30, P883, DOI 10.1109/TPDS.2018.2870403
   Wohlin C, 2006, WEB ENGINEERING, P409, DOI 10.1007/3-540-28218-1_13
NR 56
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111965
DI 10.1016/j.jss.2024.111965
EA JAN 2024
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IH0X3
UT WOS:001165330600001
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Enaya, MF
   Klingbeil, T
   Krüger, J
   Broneske, D
   Feinbube, F
   Saake, G
AF Enaya, Mohamad Fawaz
   Klingbeil, Thomas
   Kruger, Jacob
   Broneske, David
   Feinbube, Frank
   Saake, Gunter
TI A case study on the development of the German Corona-Warn-App
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE COVID-19; Pandemic; Contact tracing app; Software development process;
   Empirical study
AB The COVID-19 pandemic has drastically changed daily life and required fast responses to new situations, such as restricted public life. A major means to limit infections have been contact -tracing apps that inform an individual about a potential infection, helping to initiate countermeasures faster. While different tracing apps have been compared technologically, we are not aware of studies providing insights into their development processes during the pandemic emergency situation. To address this gap, we report an exploratory case study on how the German open -source Corona -Warn -App has been developed at SAP SE-and how other organizations (e.g., Deutsche Telekom AG), researchers, and individual developers contributed. We elicited data on the process, practices, and challenges by interviewing six developers at SAP SE, analyzing documentation, and discussing our data with an expert on the app's development. Overall, we provide insights into how the development process of the Corona -Warn -App differed from other projects at SAP SE (e.g., testing), discuss the causes (i.e., public interest causing researchers to perform tests), and study the consequences (i.e., emergency tickets by researchers). Our findings can guide organizations when developing software in similar emergency situations (e.g., pandemics) in which reliable software needs to be developed within a short period of time.
C1 [Enaya, Mohamad Fawaz; Klingbeil, Thomas; Feinbube, Frank] SAP SE Walldorf, Walldorf, Germany.
   [Kruger, Jacob] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Broneske, David] DZHW Hannover, Hannover, Germany.
   [Saake, Gunter] Otto von Guericke Univ, Magdeburg, Germany.
C3 Eindhoven University of Technology; Otto von Guericke University
RP Krüger, J (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM mhd.fawaz.enaya@sap.com; thomas.klingbeil@sap.com; j.kruger@tue.nl;
   broneske@dzhw.eu; frank.feinbube@sap.com; saake@ovgu.de
CR Abuhammad S, 2020, PATIENT PREFER ADHER, V14, P1639, DOI 10.2147/PPA.S276183
   Ahmed N, 2020, IEEE ACCESS, V8, P134577, DOI 10.1109/ACCESS.2020.3010226
   Azad MA, 2021, IEEE INTERNET THINGS, V8, P15796, DOI 10.1109/JIOT.2020.3024180
   Bano M, 2021, IEEE SOFTWARE, V38, P7, DOI 10.1109/MS.2020.3029311
   Bombarda A, 2022, INFORM SOFTWARE TECH, V152, DOI 10.1016/j.infsof.2022.107061
   Chen SM, 2020, LANCET, V395, P1305, DOI 10.1016/S0140-6736(20)30744-3
   Neto PADS, 2022, IEEE T SOFTWARE ENG, V48, P3342, DOI 10.1109/TSE.2021.3088759
   Erikson S, 2021, GLOB POLICY, V12, P97, DOI 10.1111/1758-5899.12888
   Garousi V, 2021, BMJ HEALTH CARE INFO, V28, DOI 10.1136/bmjhci-2021-100320
   Glasow P.A., 2005, Technical Report MP 05W0000077
   Gupta R, 2021, J LOCAT BASED SERV, V15, P198, DOI 10.1080/17489725.2021.1899319
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Liang F, 2020, SOC MEDIA SOC, V6, DOI 10.1177/2056305120947657
   May R., 2024, J. Syst. Softw.
   Morley J, 2020, NATURE, V582, P29, DOI 10.1038/d41586-020-01578-0
   Munzert S, 2021, NAT HUM BEHAV, V5, P247, DOI 10.1038/s41562-020-01044-x
   Nussbaumer A, 2023, INFORM SYST J, V33, P34, DOI 10.1111/isj.12350
   Plotnick L., 2008, HAW INT C SYST SCI H
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Reelfs J.H., 2020, Ratio, DOI DOI 10.1145/3405837.3411378
   Rivest R. L., 2020, The pact protocol specification
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Russo D, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P364, DOI 10.1109/ICSE-SEIP52600.2021.00048
   Seto E, 2021, J MED INTERNET RES, V23, DOI 10.2196/25726
   Silhavy Radek, 2011, 13th WSEAS International Conference on Automatic Control, Modelling & Simulations (ACMOS 2011). Recent Researches in Automatic Control, P106
   Sun RX, 2021, PROC INT CONF SOFTW, P1085, DOI 10.1109/ICSE43902.2021.00101
   Sutcliffe A, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P39, DOI 10.1109/ICSE-SEIS52602.2021.00013
   Vukolic M, 2020, Arxiv, DOI arXiv:2006.13087
   White L, 2021, J MED ETHICS, V47, DOI 10.1136/medethics-2020-107061
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wymant C, 2021, NATURE, V594, P408, DOI 10.1038/s41586-021-03606-z
NR 31
TC 1
Z9 1
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JUL
PY 2024
VL 213
AR 112020
DI 10.1016/j.jss.2024.112020
EA APR 2024
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QN0C0
UT WOS:001221423200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Alaküla, AR
   Hedin, G
   Fors, N
   Pop, A
AF Alakula, Anton Risberg
   Hedin, Gorel
   Fors, Niklas
   Pop, Adrian
TI Property probes: Live exploration of program analysis results
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Program analysis; Debugging; Property probes; CodeProber
AB We present property probes , a mechanism for helping a developer explore partial program analysis results in terms of the source program interactively while the program is edited. A node locator data structure is introduced that maps between source code spans and program representation nodes, and that helps identify probed nodes in a robust way, after modifications to the source code. We have developed a client-server based tool CODEPROBER supporting property probes, and argue that it is very helpful in debugging and understanding program analyses. We have evaluated our tool on several languages and analyses, including a full Java compiler and a tool for intraprocedural dataflow analysis. Our performance results show that the probe overhead is negligible even when analyzing large projects.
C1 [Alakula, Anton Risberg; Hedin, Gorel; Fors, Niklas] Lund Univ, Ole Romers Vag 3, Lund, Sweden.
   [Pop, Adrian] Linkoping Univ, Dept Biomed & Clin Sci BKV, POB 581 83, Linkoping, Sweden.
C3 Lund University; Linkoping University
RP Alaküla, AR (corresponding author), Lund Univ, Ole Romers Vag 3, Lund, Sweden.
EM anton.risberg_alakula@cs.lth.se; gorel.hedin@cs.lth.se;
   niklas.fors@cs.lth.se; adrian.pop@liu.se
FU ELLIIT - Excellence Center at Linkoeping-Lund on Information Technology;
   Swedish Foundation for Strategic Research
FX This work was funded by ELLIIT - Excellence Center at Linkoeping-Lund on
   Information Technology and by the Swedish Foundation for Strategic
   Research. We would like to thank Idriss Riouak, main developer of
   IntraJ, for continuously testing and giving feedback during the
   development of CODEPROBER. We would also like to thank Christoph
   Reichenbach, course leader for the program analysis course where
   CODEPROBER was used, for his feedback and his contributions to
   CODE-PROBER.
CR Beller M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P572, DOI 10.1145/3180155.3180175
   Dotzler G, 2016, IEEE INT CONF AUTOM, P660, DOI 10.1145/2970276.2970315
   Ekman T, 2007, ACM SIGPLAN NOTICES, V42, P1, DOI 10.1145/1297105.1297029
   Ekman T, 2007, SCI COMPUT PROGRAM, V69, P14, DOI 10.1016/j.scico.2007.02.003
   Erdweg S, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P406, DOI 10.1145/3453483.3454052
   Erdweg S, 2013, LECT NOTES COMPUT SC, V8225, P197, DOI 10.1007/978-3-319-02654-1_11
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C
   Fors N, 2016, ONWARD!'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE, P57, DOI 10.1145/2986012.2986026
   Fors N, 2015, SCI COMPUT PROGRAM, V114, P74, DOI 10.1016/j.scico.2015.02.002
   Frick V, 2018, PROC IEEE INT CONF S, P264, DOI 10.1109/ICSME.2018.00036
   Hedin G., 2000, Informatica, V24, P301
   Ikezoe Yohei, 2000, P 4 INT WORKSH AUT D
   Lindholm J, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P176, DOI 10.1145/2997364.2997378
   Melnikov Alexey, 2011, The WebSocket Protocol., DOI DOI 10.17487/RFC6455
   Nielsen J., 1993, Usability Engineering
   Padhye R, 2019, SPLASH-E'19: PROCEEDINGS OF THE 2019 ACM SIGPLAN SYMPOSIUM ON SPLASH-E, P41, DOI 10.1145/3358711.3361627
   Riouak I, 2021, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM52516.2021.00009
   Risberg alakula Anton, 2022, SLE 2022: Proceedings of the 15th ACM SIGPLAN International Conference on Software Language Engineering, P148, DOI 10.1145/3567512.3567525
   Rodríguez-Cerezo D, 2014, 2014 INTERNATIONAL SYMPOSIUM ON COMPUTERS IN EDUCATION (SIIE), P23, DOI 10.1109/SIIE.2014.7017699
   Sloane AM, 1999, LECT NOTES COMPUT SC, V1575, P17
   Tanimoto SL, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON LIVE PROGRAMMING (LIVE), P31, DOI 10.1109/LIVE.2013.6617346
   VAN DEURSEN A, 1993, J SYMB COMPUT, V15, P523, DOI 10.1016/S0747-7171(06)80004-0
   VOGT HH, 1989, SIGPLAN NOTICES, V24, P131, DOI 10.1145/74818.74830
   Williams K, 2014, LECT NOTES COMPUT SC, V8706, P282, DOI 10.1007/978-3-319-11245-9_16
NR 24
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111980
DI 10.1016/j.jss.2024.111980
EA FEB 2024
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NC0I4
UT WOS:001198123900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Al Debeyan, F
   Madeyski, L
   Hall, T
   Bowes, D
AF Al Debeyan, Fahad
   Madeyski, Lech
   Hall, Tracy
   Bowes, David
TI The impact of hard and easy negative training data on vulnerability
   prediction performance
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software vulnerability prediction; Vulnerability datasets; Machine
   learning
AB Vulnerability prediction models have been shown to perform poorly in the real world. We examine how the composition of negative training data influences vulnerability prediction model performance. Inspired by other disciplines (e.g. image processing), we focus on whether distinguishing between negative training data that is 'easy' to recognise from positive data (very different from positive data) and negative training data that is 'hard' to recognise from positive data (very similar to positive data) impacts on vulnerability prediction performance. We use a range of popular machine learning algorithms, including deep learning, to build models based on vulnerability patch data curated by Reis and Abreu, as well as the MSR dataset. Our results suggest that models trained on higher ratios of easy negatives perform better, plateauing at 15 easy negatives per positive instance. We also report that different ML algorithms work better based on the negative sample used. Overall, we found that the negative sampling approach used significantly impacts model performance, potentially leading to overly optimistic results. The ratio of 'easy' versus 'hard' negative training data should be explicitly considered when building vulnerability prediction models for the real world.
C1 [Al Debeyan, Fahad; Madeyski, Lech; Hall, Tracy; Bowes, David] Univ Lancaster, Sch Comp & Commun, Lancaster, England.
   [Madeyski, Lech] Wroclaw Univ Sci & Technol, Dept Appl Informat, Wroclaw, Poland.
C3 Lancaster University; Wroclaw University of Science & Technology
RP Al Debeyan, F (corresponding author), Univ Lancaster, Sch Comp & Commun, Lancaster, England.
EM f.aldebeyan@lancaster.ac.uk; lech.madeyski@pwr.edu.pl;
   tracy.hall@lancaster.ac.uk; bowesd2@lancaster.ac.uk
RI Madeyski, Lech/D-4986-2012
OI Madeyski, Lech/0000-0003-3907-3357; Al Debeyan,
   Fahad/0000-0002-3981-2722
FU Engineering and Physical Sciences Research Council (EPSRC) , UK
   [EP/S005730/1]; Wroclaw Centre for Networking and Supercomputing [578]
FX Lech Madeyski worked on the paper during his research internship at
   Lancaster University at the invitation of Prof. Tracy Hall. Lech
   Madeyski was partially funded by an Engineering and Physical Sciences
   Research Council (EPSRC) , UK grant EP/S005730/1. Calculations in R have
   been carried out using resources provided by Wroclaw Centre for
   Networking and Supercomputing (http://wcss.pl) , grant No. 578.
CR Al Debeyan F., 2023, Zenodo, DOI [10.5281/zenodo.8426023, DOI 10.5281/ZENODO.8426023]
   Al Debeyan F, 2022, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2022, P2, DOI 10.1145/3558489.3559066
   Au Q., 2019, Open Source Softw.
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Cheng ZZ, 2017, BMC SYST BIOL, V11, DOI 10.1186/s12918-017-0390-8
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Croft R, 2023, PROC INT CONF SOFTW, P121, DOI 10.1109/ICSE48619.2023.00022
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Fan Z., 2022, FINDINGS ASS COMPUTA, P2667
   Feurer M, 2015, ADV NEUR IN, V28
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Garg A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10197-4
   Gkortzis A, 2018, IEEE WORK CONF MIN S, P18, DOI 10.1145/3196398.3196454
   He X, 2021, KNOWL-BASED SYST, V212, DOI 10.1016/j.knosys.2020.106622
   Hong Xuan, 2020, Computer Vision - ECCV 2020. 16th European Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12359), P126, DOI 10.1007/978-3-030-58568-6_8
   Janiesch C, 2021, ELECTRON MARK, V31, P685, DOI 10.1007/s12525-021-00475-2
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Jovanovic N, 2006, P IEEE S SECUR PRIV, P258, DOI 10.1109/SP.2006.29
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Liang HY, 2020, COMPUT MATH METHOD M, V2020, DOI 10.1155/2020/1573543
   Liu SG, 2020, IEEE T FUZZY SYST, V28, P1329, DOI 10.1109/TFUZZ.2019.2958558
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Morrison P., 2015, P 2015 S BOOTCAMP SC, p4:1, DOI 10.1145/2746194.2746198
   Ponta Serena Elisa, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P383, DOI 10.1109/MSR.2019.00064
   Reis S., 2021, Preprints
   Robinson Joshua, 2020, arXiv
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P315
   Shu R, 2022, IEEE WORK CONF MIN S, P144, DOI 10.1145/3524842.3528437
   Smith J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P248, DOI 10.1145/2786805.2786812
   Steenhoek B, 2023, PROC INT CONF SOFTW, P2237, DOI 10.1109/ICSE48619.2023.00188
   Sultana KZ, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2303
   Talbi E.-G, 2020, working paper or preprint
   Valletta JJ, 2017, ANIM BEHAV, V124, P203, DOI 10.1016/j.anbehav.2016.12.005
   Yang X, 2023, PROC INT CONF SOFTW, P2287, DOI 10.1109/ICSE48619.2023.00192
   Zheng MH, 2022, AAAI CONF ARTIF INTE, P3517
   Zhou YQ, 2019, ADV NEUR IN, V32
NR 41
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 112003
DI 10.1016/j.jss.2024.112003
EA FEB 2024
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ2S4
UT WOS:001200025600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Khorram, F
   Bousse, E
   Garmendia, A
   Mottu, JM
   Sunye, G
   Wimmer, M
AF Khorram, Faezeh
   Bousse, Erwan
   Garmendia, Antonio
   Mottu, Jean-Marie
   Sunye, Gerson
   Wimmer, Manuel
TI A language-parametric test coverage framework for executable
   domain-specific languages
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Model testing; Model coverage; Branch coverage; Fault localization;
   Executable domain-specific languages; Executable models
ID FAULT; MODEL
AB Test coverage is an effective technique to measure test case quality and to enable fault localization. However, for Executable Domain -Specific Languages (xDSLs), coverage metrics and associated tools are currently manually defined for each xDSL resulting in costly, error -prone, and non -reusable work. To address this problem, we propose a novel language -parametric test coverage framework for xDSLs. We define two coverage metrics adapted to xDSLs: model element and branch coverage. For performing coverage measurements, we propose a generic technique which can be used out -of -the -box by domain experts using any xDSL to define, execute, and test models. In addition, the coverage of model elements and branches can be parameterized for a given xDSL through the definition of coverage rules using a dedicated language. We showcase two test coverage applications for xDSLs: measuring the quality of test suites for executable models and localizing the models' faults using Spectrum -Based Fault Localization techniques. We evaluate our approach using four different xDSLs. Results show that (i) we can generate meaningful coverage measurements for all investigated models, (ii) the provided coverage rule language enables framework parameterization for all xDSLs, and (iii) the computed coverage measurements are useful in identifying defects of the models.
C1 [Khorram, Faezeh] Univ Rennes, CNRS, Rennes, France.
   [Bousse, Erwan; Mottu, Jean-Marie; Sunye, Gerson] Nantes Univ, Ecole Cent Nantes, IMT Atlantique, Nantes, France.
   [Garmendia, Antonio] Univ Autonoma Madrid, Dept Ingn Informat, Madrid, Spain.
   [Wimmer, Manuel] Johannes Kepler Univ Linz, Inst Business Informat Software Engn, CDL MINT, Linz, Austria.
C3 Universite de Rennes; Centre National de la Recherche Scientifique
   (CNRS); IMT - Institut Mines-Telecom; IMT Atlantique; Nantes Universite;
   Ecole Centrale de Nantes; Autonomous University of Madrid; Johannes
   Kepler University Linz
RP Khorram, F (corresponding author), Univ Rennes, CNRS, Rennes, France.
EM faezeh.khorram@inria.fr; erwan.bousse@ls2n.fr; antonio.garmendia@uam.es;
   jean-marie.mottu@ls2n.fr; gerson.sunye@ls2n.fr; manuel.wimmer@jku.at
OI Bousse, Erwan/0000-0003-0000-9219; Sunye, Gerson/0000-0001-6407-8075
FU European Union [813884]; Austrian Science Fund [P 30525-N31]; Austrian
   Federal Ministry for Digital and Economic Affairs; National Foundation
   for Research, Technology and Development (CDG)
FX This work has received funding from the European Union's Horizon 2020
   research and innovation program under the Marie Sklodowska Curie grant
   agreement No 813884, by the Austrian Science Fund (P 30525-N31) , and by
   the Austrian Federal Ministry for Digital and Economic Affairs and the
   National Foundation for Research, Technology and Development (CDG) .
   Special gratitude to Javier Troya for putting his implementation of SFBL
   for model transformations as open source, and to Pablo Gomez-Abajo for
   his active support of the WODEL model mutation testing tool.
CR de Souza HA, 2017, Arxiv, DOI arXiv:1607.04347
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Ammann P., 2016, Introduction to Software Testing
   Arcega L, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3472616
   Arcega L, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P90, DOI 10.1145/3239372.3239392
   Arcega L, 2019, SOFTW SYST MODEL, V18, P3551, DOI 10.1007/s10270-019-00727-y
   Assiri FY, 2017, SOFTWARE QUAL J, V25, P171, DOI 10.1007/s11219-016-9312-z
   Baxter I., 2001, TV2ICSE2001 IW APA
   Bendraou R, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P390, DOI 10.1109/ASPEC.2007.60
   Biermann E, 2008, LECT NOTES COMPUT SC, V5301, P53, DOI 10.1007/978-3-540-87875-9_4
   Boghdady P. N., 2011, Proceedings of the 2011 International Conference on Computer Engineering & Systems (ICCES 2011), P289, DOI 10.1109/ICCES.2011.6141058
   Bordin Matteo, 2009, Ada User Journal, V30, P248
   Bousse E, 2019, SOFTW SYST MODEL, V18, P385, DOI 10.1007/s10270-017-0598-5
   Bousse E, 2018, J SYST SOFTWARE, V137, P261, DOI 10.1016/j.jss.2017.11.025
   Bousse E, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P84, DOI 10.1145/2997364.2997384
   Bousse E, 2015, LECT NOTES COMPUT SC, V9153, P45, DOI 10.1007/978-3-319-21151-0_4
   Cangussu J., 2023, Modern compiler implementation in java: the MiniJava project
   Canizares Pablo C., 2021, SLE 2021: Proceedings of the 14th ACM SIGPLAN International Conference on Software Language Engineering, P49, DOI 10.1145/3486608.3486904
   Casamayor R, 2022, PROCEEDINGS OF THE 25TH INTERNATIONAL ACM/IEEE CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022, P356, DOI 10.1145/3550355.3552440
   Cazzola W, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111533
   Chen JJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3363562
   Chen JJ, 2017, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2017.70
   Cobertura, 2023, A code coverage utility for java
   CodeCover, 2023, Add a new programming language
   CodeCover, 2023, CodeCover measurement under java: Branch coverage
   CodeCover, 2023, CodeCover glass-box testing tool
   Danglot B, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110398
   EclEmma Team, 2023, JaCoCo Java Code Coverage Library
   Eclipse Foundation, 2023, EMF Compare
   El qortobi M., 2020, P 13 INT C INT SYST, P1
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Gómez-Abajo P, 2021, SOFTW SYST MODEL, V20, P767, DOI 10.1007/s10270-020-00827-0
   Iqbal J, 2019, LECT NOTES COMPUT SC, V11483, P96, DOI 10.1007/978-3-030-21290-2_7
   Iung A, 2020, EMPIR SOFTW ENG, V25, P4205, DOI 10.1007/s10664-020-09872-1
   Janssen T, 2009, SINTER 09, P23
   JavaCC, 2023, Java compiler compiler
   Jones J.A., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P273
   K-Framework, 2023, K semantic framework
   Khorram Faezeh, 2022, SLE 2022: Proceedings of the 15th ACM SIGPLAN International Conference on Software Language Engineering, P235, DOI 10.1145/3567512.3567532
   Khorram F., 2021, J. Object Technol., V6, P1
   Khorram Faezeh, 2023, Zenodo, DOI 10.5281/ZENODO.7709671
   Khorram F, 2023, SOFTW SYST MODEL, V22, P819, DOI 10.1007/s10270-022-01025-w
   Kos T, 2016, J SYST SOFTWARE, V111, P74, DOI 10.1016/j.jss.2015.09.002
   Li PF, 2020, IEEE ACCESS, V8, P14054, DOI 10.1109/ACCESS.2020.2966540
   Lübke D, 2017, LECT NOTES BUS INF P, V287, P119, DOI 10.1007/978-3-319-59466-8_8
   Mandrikov E., 2023, What kind of branching coverage is measured by jacoco
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   MAXWELL AE, 1968, BRIT J MATH STAT PSY, V21, P105, DOI 10.1111/j.2044-8317.1968.tb00401.x
   Mayerhofer T, 2018, LECT NOTES COMPUT SC, V10748, P193, DOI 10.1007/978-3-319-74730-9_18
   Meyers B, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P181, DOI 10.1145/2997364.2997367
   Mijatov S, 2015, LECT NOTES COMPUT SC, V9154, P173, DOI 10.1007/978-3-319-21215-9_11
   Misurda J, 2005, PROC INT CONF SOFTW, P156
   Mohd-Shafie ML, 2022, SOFTW SYST MODEL, V21, P717, DOI 10.1007/s10270-021-00924-8
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   OASIS, 2007, Web services business process execution language
   Object Management Group, 2022, Semantics of a foundational subset for executable UML models
   Object Management Group, 2019, Precise semantics of UML state machines
   OpenClover, 2023, OpenClover Code Coverage Tool for Java and Groovy
   OpenClover, 2023, Using Clover for other programming languages
   Qi Y., 2013, P 2013 INT S SOFTW T, P191, DOI DOI 10.1145/2483760.2483785
   Raselimo M, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P15, DOI 10.1145/3357766.3359538
   Sakamoto K, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P422, DOI 10.1109/ICST.2013.59
   Steinberg D., 2008, EMF: Eclipse Modeling Framework
   Troya J, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241744
   Waheed T, 2008, LECT NOTES COMPUT SC, V5095, P79, DOI 10.1007/978-3-540-69100-6_6
   Wang KY, 2020, PROC INT SYMP SOFTW, P391, DOI 10.1109/ISSRE5003.2020.00044
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wong W. E., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P21, DOI 10.1109/SERE.2012.12
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wu H, 2009, LECT NOTES COMPUT SC, V5658, P125, DOI 10.1007/978-3-642-03034-5_7
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Yue S., 2014, Adv. Softw. Eng., V2014
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 75
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2024
VL 211
AR 111977
DI 10.1016/j.jss.2024.111977
EA FEB 2024
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KU4A6
UT WOS:001182453200001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Audrito, G
   Casadei, R
   Damiani, F
   Salvaneschi, G
   Viroli, M
AF Audrito, Giorgio
   Casadei, Roberto
   Damiani, Ferruccio
   Salvaneschi, Guido
   Viroli, Mirko
TI The eXchange Calculus (XC): A functional programming language design for
   distributed collective systems
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Distributed programming; Collective computing; Core calculus;
   Operational semantics; Type soundness; Scala DSL; C plus plus DSL
ID COORDINATION; INTERNET; MEMORY
AB Distributed collective systems are systems formed by homogeneous dynamic collections of devices acting in a shared environment to pursue a joint task or goal. Typical applications emerge in the context of wireless sensor networks, robot swarms, groups of wearable -augmented people, and computing infrastructures. Programming such systems is notoriously hard, due to requirements of scalability, concurrency, faults, and difficulty in making desired collective behaviour ultimately emerge: ad -hoc languages and mechanisms have been proposed threads like spatial computing, macro -programming, and field -based coordination. In this paper we present the eXchange Calculus (XC), formalising a tiny set of key mechanisms, usable across many different languages and platforms, allowing to express the overall interactive behaviour of distributed collective systems in a declarative way. In this approach, computation (executed in asynchronous rounds), communication (which is neighbour -based), and state over time, are all expressed by a single declarative construct, called exchange. We provide a formalisation of XC in terms of syntax, device -level and network -level semantics, prove a number of properties of the calculus, and discuss applicability considering a smart city scenario. XC is implemented as a DSL in Scala and in C++, with different trade-offs in terms of productivity and platform targetting.
C1 [Audrito, Giorgio; Damiani, Ferruccio] Univ Turin, Dipartimento Informat, Turin, Italy.
   [Casadei, Roberto; Viroli, Mirko] Alma Mater Studiorum Univ Bologna, DISI, Cesena, Italy.
   [Salvaneschi, Guido] Univ St Gallen, Inst Comp Sci, St Gallen, Switzerland.
C3 University of Turin; University of Bologna; University of St Gallen
RP Audrito, G (corresponding author), Univ Turin, Dipartimento Informat, Turin, Italy.
EM giorgio.audrito@unito.it; roby.casadei@unibo.it;
   ferruccio.damiani@unito.it; guido.salvaneschi@unisg.ch;
   mirko.viroli@unibo.it
RI Casadei, Roberto/I-5410-2017; Damiani, Ferruccio/D-2383-2011
OI Casadei, Roberto/0000-0001-9149-949X; Viroli, Mirko/0000-0003-2702-5702;
   Damiani, Ferruccio/0000-0001-8109-1706
FU MUR - M4C2 1.5 of PNRR [ECS00000036]; European Union Next-Generation EU
   of PNRR [CN00000022]; Italian PRIN project "CommonWears" [2020HCWWLP];
   Ateneo/CSP ex-post 2020 project New Edge; Swiss National Science
   Foundation (SNSF) [200429]
FX This publication is part of the project NODES which has received funding
   from the MUR - M4C2 1.5 of PNRR with grant agreement no. ECS00000036.
   This study was carried out within the Agritech National Research Center
   and received funding from the European Union Next-Generation EU of PNRR,
   MISSIONE 4 COMPONENTE 2, INVES-TIMENTO 1.4 - D.D. 1032 17/06/2022,
   CN00000022. The work was also partially supported by the Italian PRIN
   project "CommonWears" (2020HCWWLP) , by the Ateneo/CSP ex-post 2020
   project New Edge, and by the Swiss National Science Foundation (SNSF) ,
   grant 200429. This manuscript reflects only the authors' views and
   opinions, neither the European Union nor the European Commission can be
   considered responsible for them.
CR Abd Alrahman Y, 2020, SCI COMPUT PROGRAM, V192, DOI 10.1016/j.scico.2020.102428
   Abowd Gregory D., 2016, Computer, V49, P17, DOI 10.1109/MC.2016.22
   Aguzzi Gianluca, 2023, Coordination Models and Languages: 25th IFIP WG 6.1 International Conference, COORDINATION 2023, Held as Part of the 18th International Federated Conference on Distributed Computing Techniques, DisCoTec 2023, Proceedings. Lecture Notes in Computer Science (13908), P31, DOI 10.1007/978-3-031-35361-1_2
   AHAMAD M, 1995, DISTRIB COMPUT, V9, P37, DOI 10.1007/BF01784241
   Ancona D., 2018, 32 EUROPEAN C OBJECT, V109, p21:1, DOI [10.4230/LIPIcs.ECOOP.2018.21, DOI 10.4230/LIPICS.ECOOP.2018.21]
   Ancona D, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133905
   Ancona D, 2017, LECT NOTES COMPUT SC, V10201, P29, DOI 10.1007/978-3-662-54434-1_2
   [Anonymous], 2004, WORKSHOP DATA MANAGE, DOI DOI 10.1145/1052199.1052213
   Artho Cyrille, 2015, Formal Methods and Software Engineering. 17th International Conference on Formal Engineering Methods (ICFEM 2015). Proceedings: LNCS 9407, P1, DOI 10.1007/978-3-319-25423-4_1
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Audrito Giorgio, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Adaptation and Learning: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13703), P301, DOI 10.1007/978-3-031-19759-8_19
   Audrito Giorgio, 2018, Coordination Models and Languages. 20th IFIP WG 6.1 International Conference, COORDINATION 2018. Held as Part of the 13th International Federated Conference on Distributed Computing Techniques, DisCoTec 2018. Proceedings: LNCS 10852, P1, DOI 10.1007/978-3-319-92408-3_1
   Audrito G., 2022, LEIBNIZ INT P INFORM, DOI DOI 10.4230/LIPICS.ECOOP.2022.20
   Audrito G., 2022, Dagstuhl Artifacts Ser., V8, DOI [10.4230/DARTS.8.2.8, DOI 10.4230/DARTS.8.2.8]
   Audrito G, 2023, LOG METH COMPUT SCI, V19, DOI 10.46298/LMCS-19(1:6)2023
   Audrito G, 2023, IEEE T PARALL DISTR, V34, P869, DOI 10.1109/TPDS.2022.3232633
   Audrito G, 2022, LECT NOTES COMPUT SC, V13271, P55, DOI 10.1007/978-3-031-08143-9_4
   Audrito G, 2022, J SYST SOFTWARE, V187, DOI 10.1016/j.jss.2022.111251
   Audrito G, 2021, COMPUT ELECTR ENG, V96, DOI 10.1016/j.compeleceng.2021.107580
   Audrito G, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110908
   Audrito G, 2020, LOG METH COMPUT SCI, V16, DOI 10.23638/LMCS-16(4:1)2020
   Audrito G, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS (ACSOS 2020), P153, DOI 10.1109/ACSOS49614.2020.00037
   Audrito G, 2019, ACM T COMPUT LOG, V20, DOI 10.1145/3285956
   Audrito G, 2018, REAL TIM SYST SYMP P, P23, DOI 10.1109/RTSS.2018.00013
   Audrito G, 2017, INT CONF SELF SELF, P91, DOI 10.1109/SASO.2017.18
   Audrito G, 2017, LECT NOTES COMPUT SC, V10319, P59, DOI 10.1007/978-3-319-59746-1_4
   Beal J, 2017, ACM T AUTON ADAP SYS, V12, DOI 10.1145/3105758
   Beal J, 2016, KNOWL ENG REV, V31, P325, DOI 10.1017/S0269888916000175
   Beal J, 2015, COMPUTER, V48, P22, DOI 10.1109/MC.2015.261
   Beal J, 2013, FORMAL AND PRACTICAL ASPECTS OF DOMAIN-SPECIFIC LANGUAGES: RECENT DEVELOPMENTS, P436, DOI 10.4018/978-1-4666-2092-6.ch016
   Beal Jacob., 2009, Proceedings of the 2009 ACM symposium on Applied Computing, P1197, DOI DOI 10.1145/1529282.1529550
   Brambilla M, 2013, SWARM INTELL-US, V7, P1, DOI 10.1007/s11721-012-0075-2
   Bures Tomas, 2013, P 16 INT ACM SIGS S, P81, DOI [10.1145/2465449.2465462, DOI 10.1145/2465449.2465462]
   Casadei R, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3579353
   Casadei R, 2022, SOFTWAREX, V20, DOI 10.1016/j.softx.2022.101248
   Casadei R, 2022, IEEE INTERNET THINGS, V9, P20136, DOI 10.1109/JIOT.2022.3172470
   Casadei Roberto, 2022, Zenodo, DOI 10.5281/ZENODO.6538822
   Casadei Roberto, 2022, Zenodo, DOI 10.5281/ZENODO.6538810
   Casadei R, 2021, ENG APPL ARTIF INTEL, V97, DOI 10.1016/j.engappai.2020.104081
   Casadei R, 2020, FUTURE INTERNET, V12, DOI 10.3390/fi12110203
   Casadei R, 2019, LECT NOTES COMPUT SC, V11533, P200, DOI 10.1007/978-3-030-22397-7_12
   Cousot P., 1992, Conference Record of the Nineteenth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P83, DOI 10.1145/143165.143184
   Dagnino F, 2022, ACM T COMPUT LOG, V23, DOI 10.1145/3522729
   Dagnino F, 2019, LOG METH COMPUT SCI, V15, DOI 10.23638/LMCS-15(1:26)2019
   Damas Luis, 1982, P 9 ACM SIGPLAN SIGA, P207, DOI [10.1145/582153.582176, DOI 10.1145/582153.582176]
   Dasgupta S, 2016, IEEE DECIS CONTR P, P7282, DOI 10.1109/CDC.2016.7799393
   De Nicola R, 2020, INT J SOFTW TOOLS TE, V22, P389, DOI 10.1007/s10009-020-00565-0
   De Nicola R, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2619998
   DeHon A., 2007, DAGSTUHL SEMINAR P, V06361
   Doeraene S, 2018, PROCEEDINGS OF THE 9TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON SCALA (SCALA '18), P1, DOI 10.1145/3241653.3266230
   Ferscha A., 2015, UBICOMPISWC ADJUNCT, P893, DOI DOI 10.1145/2800835.2809508
   Ghosh D, 2012, J INTERNET SERV APPL, V3, P23, DOI 10.1007/s13174-011-0042-y
   Gummadi R, 2005, LECT NOTES COMPUT SC, V3560, P126
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Lafuente AL, 2017, LOG METH COMPUT SCI, V13, DOI 10.23638/LMCS-13(1:13)2017
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Leroy X, 2009, INFORM COMPUT, V207, P284, DOI 10.1016/j.ic.2007.12.004
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Mamei M, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P263, DOI 10.1109/PERCOM.2004.1276864
   Mamei M., 2006, Springer Series on Agent Technology, DOI [10.1007/3-540-27969-5, DOI 10.1007/3-540-27969-5]
   Masolo C, 2020, FRONT ARTIF INTEL AP, V330, P186, DOI 10.3233/FAIA200671
   Mills KL, 2007, WIREL COMMUN MOB COM, V7, P823, DOI 10.1002/wcm.499
   Morin C, 1997, IEEE T PARALL DISTR, V8, P959, DOI 10.1109/71.615441
   Mottola L, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922656
   Murphy AL, 2006, ACM T SOFTW ENG METH, V15, P279, DOI 10.1145/1151695.1151698
   Mushtaq H., 2011, 2011 IEEE 6th International Design and Test Workshop, P12, DOI 10.1109/IDT.2011.6123094
   Oliveira BCDS, 2010, ACM SIGPLAN NOTICES, V45, P341, DOI 10.1145/1932682.1869489
   Pianini D, 2013, J SIMUL, V7, P202, DOI 10.1057/jos.2012.27
   Pianini D, 2022, 2022 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS (ACSOS 2022), P81, DOI 10.1109/ACSOS55765.2022.00026
   Pianini D, 2021, LOG METH COMPUT SCI, V17, DOI 10.46298/LMCS-17(4:13)2021
   Pianini D, 2021, FUTURE GENER COMP SY, V114, P44, DOI 10.1016/j.future.2020.07.032
   Pierce Benjamin C., 2002, Types and Programming Languages
   Sene IG, 2022, J INTERNET SERV APPL, V13, P54, DOI 10.5753/jisa.2022.2372
   Testa L, 2022, PERVASIVE MOB COMPUT, V85, DOI 10.1016/j.pmcj.2022.101658
   Tumer K, 2004, COLLECTIVES AND THE DESIGN OF COMPLEX SYSTEMS, P1
   Viroli M, 2019, J LOG ALGEBR METHODS, V109, DOI 10.1016/j.jlamp.2019.100486
   Viroli M, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3177774
   Weisenburger P, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3397495
   Weisenburger P, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276499
   Zhang KQ, 2021, Arxiv, DOI arXiv:1911.10635
NR 80
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111976
DI 10.1016/j.jss.2024.111976
EA JAN 2024
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP6M8
UT WOS:001181210300001
OA hybrid, Green Published
DA 2024-08-05
ER

PT J
AU Mahmoud, M
   Walker, RJ
   Denzinger, J
AF Mahmoud, May
   Walker, Robert J.
   Denzinger, Joerg
TI API usage templates via structural generalization
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE API usage; Coding templates; E-generalization
ID PATTERNS; CONTEXT; RULES
AB APIs matter in software development, but determining how to use them can be challenging. Developers often refer to a small set of API usage examples, analysing the information there to understand and adapt them to their own context. Generalization over many examples may aid in understanding commonalities and differences, reducing information overload while including greater variety. We propose ASGard, a novel approach that generates API usage templates from examples. Approximating the formal problem of E -generalization, ASGard generalizes all syntactic and some semantic information within the examples to arrive at pseudocode representations that retain the commonality of the usage examples but abstract the varying aspects. We evaluate the templates from our approach and the patterns generated from PAM and MUDetect (two existing tools for API data mining), using a total of 1954 API usage examples across 59 different APIs. We measure the quality of the resulting templates: ASGard's templates have superior completeness and compression. We perform a user study on ASGard with 12 participants to compare the use of these templates in solving programming tasks, compared to MUDetect. We find that participants solved the programming tasks in significantly less time with ASGard. Participants expressed a general preference for using ASGard templates.
C1 [Mahmoud, May; Walker, Robert J.; Denzinger, Joerg] Univ Calgary, Dept Comp Sci, Calgary, AB, Canada.
C3 University of Calgary
RP Walker, RJ (corresponding author), Univ Calgary, Dept Comp Sci, Calgary, AB, Canada.
EM may.mahmoud2@ucalgary.ca; walker@ucalgary.ca; denzinge@ucalgary.ca
FU Natural Sciences and Engineering Research Council of Canada
FX This work was funded by a Discovery Grant from the Natural Sciences and
   Engineering Research Council of Canada.
CR Abid NJ, 2015, PROC IEEE INT CONF S, P561, DOI 10.1109/ICSM.2015.7332514
   Acharya M, 2009, LECT NOTES COMPUT SC, V5503, P370
   Ahmad Wasi Uddin, 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   [Anonymous], 2010, P 19 INT S SOFTW TES, DOI [10.1145/1831708.1831723, DOI 10.1145/1831708.1831723]
   Azad S, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/2990497
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Barnaby C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1353, DOI 10.1145/3368089.3417052
   Blech E, 2021, IEEE INT SYMP SOFTW, P333, DOI 10.1109/ISSREW53611.2021.00098
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Bruch Marcel., 2006, P 4 OOPSLA WORKSHOP, P55, DOI [10.1145/1188835.1188847, DOI 10.1145/1188835.1188847]
   Bulychev P.., 2009, P 3 INT WORKSHOP SOF
   Bulychev P., 2008, SPRING YOUNG RES C S, DOI DOI 10.15514/SYRCOSE-2008-2-22
   Bulychev PE, 2010, LECT NOTES COMPUT SC, V5947, P413, DOI 10.1007/978-3-642-11486-1_35
   Burghardt J, 2005, ARTIF INTELL, V165, P1, DOI 10.1016/j.artint.2005.01.008
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Chatterjee P., 2019, IEEE WORK CONF MIN S, P1, DOI DOI 10.1109/MSR.2019.00075
   Cossette B., 2014, Technical Report 2014-1058-09
   Cossette B.E., 2012, P ACM SIGSOFT 20 INT, p55:1, DOI [10.1145/2393596.2393661, DOI 10.1145/2393596.2393661]
   Cottrell Rylan., 2008, P INT S FDN SOFTWARE, P214, DOI [10.1145/1453101.1453130, DOI 10.1145/1453101.1453130]
   Date H., 2012, 2012 Fourth International Workshop on Empirical Software Engineering in Practice (IWESEP 2012), P40, DOI 10.1109/IWESEP.2012.18
   Daye Nam, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P615, DOI 10.1109/ASE.2019.00063
   Duala-Ekoko E, 2012, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2012.6227187
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   Glassman EL, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174154
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Hora A, 2021, SOFTWARE PRACT EXPER, V51, P319, DOI 10.1002/spe.2906
   Ji ZW, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3571730
   Kagdi H., 2007, twenty-second IEEE/ACM international conference on Automated software engineering (ASE), P457
   Kirkland O, 2013, 2013 13TH UK WORKSHOP ON COMPUTATIONAL INTELLIGENCE (UKCI), P236, DOI 10.1109/UKCI.2013.6651311
   Ko AJ, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P199
   Kostylev EV, 2008, DISCRET MATH APPL, V18, P85, DOI 10.1515/DMA.2008.007
   Langville Amy N, 2006, Google's PageRank and beyond: The science of search engine rankings
   LeClair A, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P3931
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Li HQ, 2010, LECT NOTES COMPUT SC, V5937, P104
   Lindig C., 2015, The Art and Science of Analyzing Software Data, P17, DOI [10.1016/B978-0-12-411519-4.00002-1, DOI 10.1016/B978-0-12-411519-4.00002-1]
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI DOI 10.1145/1081706.1081754
   LLOYD SP, 1982, IEEE T INFORM THEORY, V28, P129, DOI 10.1109/TIT.1982.1056489
   Lo D, 2008, J SOFTW MAINT EVOL-R, V20, P227, DOI 10.1002/smr.375
   Mahmoud M.A.S., 2023, Ph.D. thesis
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   McBurney Paul W, 2014, P 22 INT C PROGRAM C, P279
   McLellan SG, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.676963
   Michail A., 1999, 14th IEEE International Conference on Automated Software Engineering, P24, DOI 10.1109/ASE.1999.802089
   Michail A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P167, DOI 10.1109/ICSE.2000.870408
   MithunAcharya Tao Xie, 2007, P 6 JOINT M EUROPEAN, P25, DOI DOI 10.1145/1287624.1287630
   Monperrus M, 2010, LECT NOTES COMPUT SC, V6183, P2, DOI 10.1007/978-3-642-14107-2_2
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Moritz E, 2013, IEEE INT CONF AUTOM, P646, DOI 10.1109/ASE.2013.6693127
   Mover S, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P277, DOI 10.1109/SANER.2018.8330216
   Murphy L, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P249, DOI 10.1109/VLHCC.2018.8506523
   Myers BA, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2896587
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Nielebock S, 2021, AUTOMAT SOFTW ENG, V28, DOI 10.1007/s10515-021-00294-x
   Oancea C., 2005, P MAPLE C, P277
   OpenAI, 2023, Introducing ChatGPT
   Ramanathan MK, 2007, PROC INT CONF SOFTW, P240
   Ramanathan MK, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P123, DOI 10.1145/1250734.1250749
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Saied MA, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Saied MA, 2015, INT C PROGRAM COMPRE, P71, DOI 10.1109/ICPC.2015.16
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P23, DOI 10.1109/SANER.2015.7081812
   Salman HE, 2017, J SYST SOFTWARE, V130, P42, DOI 10.1016/j.jss.2017.05.039
   Schubert E, 2017, ACM T DATABASE SYST, V42, DOI 10.1145/3068335
   Sillito J, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P81, DOI 10.1109/CHASE.2013.6614736
   Starke J, 2009, 2009 ICSE WORKSHOP ON SEARCH-DRIVEN DEVELOPMENT-USERS, INFRASTRUCTURE, TOOLS AND EVALUATION, P53, DOI 10.1109/SUITE.2009.5070023
   Stylos J, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P50, DOI 10.1109/VLHCC.2007.44
   Sushine J, 2015, INT C PROGRAM COMPRE, P82, DOI 10.1109/ICPC.2015.17
   Sven Amann, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P265, DOI 10.1109/MSR.2019.00053
   Tabareau N., 2013, JournEEs Francophones Des Langages Applicatifs
   Thayer K, 2021, ACM T COMPUT EDUC, V21, DOI 10.1145/3444945
   Thummalapenta S, 2009, IEEE INT CONF AUTOM, P283, DOI 10.1109/ASE.2009.72
   Thummalapenta S, 2009, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2009.5070548
   Uddin G, 2012, PROC INT CONF SOFTW, P804, DOI 10.1109/ICSE.2012.6227138
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wasylkowski A, 2011, AUTOMAT SOFTW ENG, V18, P263, DOI 10.1007/s10515-011-0084-1
   Wasylkowski Andrzej, 2007, P 6 JOINT M EUROPEAN, P35, DOI [10.1145/1287624.1287632, DOI 10.1145/1287624.1287632]
   Xie Tao, 2006, Proc. MSR, P54
   Zhang TY, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376382
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 88
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111974
DI 10.1016/j.jss.2024.111974
EA JAN 2024
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JY0G1
UT WOS:001176596300001
OA hybrid
DA 2024-08-05
ER

PT J
AU Holtmann, J
   Liebel, G
   Steghöfer, JP
AF Holtmann, Jorg
   Liebel, Grischa
   Steghoefer, Jan-Philipp
TI Processes, methods, and tools in model-based engineering-A qualitative
   multiple-case study☆
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Model -based engineering; Development processes; Modeling methods
ID BOUNDARY OBJECTS; SYSTEMS; CHALLENGES; SOFTWARE; SUCCESS; MDE;
   REQUIREMENTS; EXPERIENCES; ADOPTION; DOMAIN
AB Research on model-based engineering (MBE) has occasionally touched upon the relationship between development processes and concrete MBE practices. However, the alignment of these elements has rarely been the central focus of these studies. As a result, important questions regarding the alignment of MBE and development processes, as well as the impact of development processes on the utilization and success of MBE, have remained unanswered. To address this research gap, we conducted a multiple-case study involving 14 individuals from nine different companies, conducting a total of 12 interviews. Building upon seven propositions derived from existing literature, our investigation sought to understand how MBE is aligned with the development process and explore the application of MBE in this context. Additionally, we identified challenges and needs in this area. Our findings challenge some previously reported results, such as the perceived conflicts between agile development processes and MBE. Furthermore, we unearthed previously unreported issues, like the importance of considering the perspectives of tool vendors in MBE discussions. Overall, this paper makes a significant contribution by providing a comprehensive and up-to-date perspective on how MBE is integrated into development processes, along with an examination of the social and organizational aspects inherent to these processes.
C1 [Holtmann, Jorg] Chalmers Univ Gothenburg, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Liebel, Grischa] Reykjavik Univ, Sch Technol, Dept Comp Sci, Reykjavik, Iceland.
   [Steghoefer, Jan-Philipp] XITASO GmbH IT & Software Solut, Augsburg, Germany.
C3 Chalmers University of Technology; Reykjavik University
RP Holtmann, J (corresponding author), Chalmers Univ Gothenburg, Dept Comp Sci & Engn, Gothenburg, Sweden.
EM jorg.holtmann@gu.se; grischal@ru.is; jan-philipp.steghoefer@xitaso.com
RI Steghöfer, Jan-Philipp/AAM-2555-2020
OI Steghöfer, Jan-Philipp/0000-0003-1694-0972; Holtmann,
   Jorg/0000-0001-6141-4571
FU Vinnova [2019-02382]
FX Parts of this work were sponsored by Vinnova under grant number
   2019-02382 as part of the ITEA4 project BUMBLE .
CR Abrahao S, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P229, DOI 10.1109/MODELS.2017.5
   AMALTHEA(4public) Project Consortium, 2018, ITEA impact story-AMALTHEA: From individual approaches to a widely accepted open platform
   Amorim T, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P203, DOI 10.1109/ICSE-SEIP.2019.00030
   Automotive SIG VDA, 2023, Automotive SPICE
   AUTOSAR GbR, 2023, Automotive open system architecture (AUTOSAR)
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Bolbot V, 2019, RELIAB ENG SYST SAFE, V182, P179, DOI 10.1016/j.ress.2018.09.004
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Burden H., 2014, P 8 ACMIEEE INT S EM, DOI [10.1145/2652524.2652527, DOI 10.1145/2652524.2652527]
   Candela AG, 2019, QUAL REP, V24, P619
   Conboy K, 2019, IEEE SOFTWARE, V36, P44, DOI 10.1109/MS.2018.2884865
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   David I, 2023, J SYST SOFTWARE, V199, DOI 10.1016/j.jss.2023.111626
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr Torgeir, 2013, Software Engineering Notes, V38, P33, DOI 10.1145/2507288.2507322
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Durkovic J., 2008, Management Information Systems, V3, P29
   EAST-EEA Project Consortium, 2018, ITEA impact story-EAST-EEA: Paving the way towards revolutionary automotive software development
   Etikan I., 2016, American Journal of Theoretical and Applied Statistics, V5, P1, DOI [DOI 10.11648/J.AJTAS.20160501.11, 10.11648/j.ajtas.20160501.11]
   Forward A., 2008, Proc. 2008 Int. Work. onModels Softw. Eng, P27, DOI DOI 10.1145/1370731.1370738
   Fürst S, 2016, I C DEPENDABLE SYST, P215, DOI 10.1109/DSN-W.2016.24
   Giraldo FD, 2021, SOFTWARE QUAL J, V29, P275, DOI 10.1007/s11219-021-09554-1
   Gorschek T., 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, ICSE, P115, DOI DOI 10.1145/1806799.1806820
   Gorschek T, 2014, J SYST SOFTWARE, V95, P176, DOI 10.1016/j.jss.2014.03.082
   Hebig R., 2014, P 2014 INT C SOFTWAR, P164, DOI [10.1145/2600821.2600846, DOI 10.1145/2600821.2600846]
   Hennink M, 2022, SOC SCI MED, V292, DOI 10.1016/j.socscimed.2021.114523
   Holtmann Jorg, 2023, Zenodo, DOI 10.5281/ZENODO.8217258
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   International Organization for Standardization, 2018, ISO 26262
   International Organization for Standardization, 2022, ISO/IEC 27001:2022
   ISO, 2021, ISO/IEC TS 33061
   ISO IEC IEEE, 2023, ISO/IEC/IEEE 15288:2023: Systems and software engineeringsystem lifecycle processes, DOI [10.1109/IEEESTD.2023.10123367, DOI 10.1109/IEEESTD.2023.10123367]
   ISO IEC IEEE, 2017, ISO/IEC/IEEE 12207:2017: Systems and software engineeringsoftware lifecycle processes, DOI [10.1109/IEEESTD.2017.8100771, DOI 10.1109/IEEESTD.2017.8100771]
   JetBrains s.r.o, 2023, JetBrains meta programming system (MPS)
   Kasauli R, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110851
   Kuhrmann M, 2022, IEEE T SOFTWARE ENG, V48, P3523, DOI 10.1109/TSE.2021.3099532
   Lee I, 2006, COMPUTER, V39, P33
   Liebel G, 2023, J SYST SOFTWARE, V199, DOI 10.1016/j.jss.2023.111628
   Liebel G, 2019, SOFTW SYST MODEL, V18, P2587, DOI 10.1007/s10270-018-0683-4
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Maurya A, 2020, QUAL RELIAB ENG INT, V36, P2547, DOI 10.1002/qre.2715
   Mayer G, 2010, J SIMUL, V4, P255, DOI 10.1057/jos.2010.10
   Meliá S, 2016, SOFTWARE QUAL J, V24, P709, DOI 10.1007/s11219-015-9299-x
   MODELISAR Project Consortium, 2017, ITEA impact story-MODELISAR: An international standard for systems and embedded software design in vehicles
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   Mohagheghi P, 2009, LECT NOTES COMPUT SC, V5421, P54, DOI 10.1007/978-3-642-01648-6_6
   OASIS Open, 2023, Open services for lifecycle collaboration (OSLC)
   Object Management Group, 2023, Requirements interchange format (ReqIF)
   Object Management Group, 2023, Unified modeling language specification
   Object Management Group, 2023, Systems Modeling Language (SysML) v2 Specification
   Pagel M, 2006, LECT NOTES COMPUT SC, V4066, P52
   RealtimeBoard I., 2023, Miro virtual whiteboard
   Reggio G., 2013, EESSMOD MODELS, P3
   Reggio G, 2014, LECT NOTES COMPUT SC, V8767, P149, DOI 10.1007/978-3-319-11653-2_10
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saldana J, 2013, The coding manual for qualitative researchers, DOI DOI 10.1017/CBO9781107415324.004
   Schmelter D., 2023, P 30 EUROPEAN C SYST, V1890, DOI [10.1007/978-3-031-42307-9_12, DOI 10.1007/978-3-031-42307-9_12]
   Stachowiak H., 1973, Allgemeine Modelltheorie
   STAR SL, 1989, SOC STUD SCI, V19, P387, DOI 10.1177/030631289019003001
   Steghöfer JP, 2021, INT REQUIR ENG CONF, P185, DOI 10.1109/RE51729.2021.00024
   The MathWorks Inc, 2023, Matrix laboratory (MATLAB)
   Tomassetti Federico, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P91, DOI 10.1049/ic.2012.0012
   Torchiano M, 2013, J SYST SOFTWARE, V86, P2110, DOI 10.1016/j.jss.2013.03.084
   Torchiano M, 2011, INT SYMP EMP SOFTWAR, P372, DOI 10.1109/ESEM.2011.51
   Tsang EWK, 2014, INT J MANAG REV, V16, P369, DOI 10.1111/ijmr.12024
   van Bennekum A., 2001, Principles behind the Agile Manifesto
   VanderHorn E, 2021, DECIS SUPPORT SYST, V145, DOI 10.1016/j.dss.2021.113524
   VDA, 2014, Harness description list (KBL)-recommendation
   Weissnegger R, 2016, PROCEDIA COMPUT SCI, V83, P245, DOI 10.1016/j.procs.2016.04.122
   Whittle J, 2017, SOFTW SYST MODEL, V16, P313, DOI 10.1007/s10270-015-0487-8
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Agner LTW, 2013, J SYST SOFTWARE, V86, P997, DOI 10.1016/j.jss.2012.11.023
   Wohlrab R, 2020, LECT NOTES COMPUT SC, V12400, P575, DOI 10.1007/978-3-030-62522-1_42
   Wohlrab R, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2166
   Ye X, 2021, IEEE ACCESS, V9, P144171, DOI 10.1109/ACCESS.2021.3122175
   Zaitsev A., 2016, P EUROPEAN C INFORM
NR 81
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD APR
PY 2024
VL 210
AR 111943
DI 10.1016/j.jss.2023.111943
EA JAN 2024
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HH7N2
UT WOS:001158668700001
OA hybrid, Green Published
DA 2024-08-05
ER

EF